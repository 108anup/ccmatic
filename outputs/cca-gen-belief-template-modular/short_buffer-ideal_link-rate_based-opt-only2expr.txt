[02/20 16:03:28]  Namespace(infinite_buffer=False, finite_buffer=True, dynamic_buffer=False, T=9, ideal=False, app_limited=False, fix_minc=False, fix_maxc=False, optimize=False, proofs=False, solution=None, run_log_dir=None, use_belief_invariant_n=False, ideal_only=True, no_large_loss=True, opt_cegis_n=False, opt_ve_n=False, opt_pdt_n=False, opt_wce_n=False, opt_feasible_n=True)
[02/20 16:03:29]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=4, desired_queue_bound_alpha=3, desired_loss_count_bound=4.0, desired_large_loss_count_bound=0, desired_loss_amount_bound_multiplier=5.0, desired_loss_amount_bound_alpha=8
[02/20 16:03:29]  --------------------------------------------------------------------------------
[02/20 16:03:29]  Iteration: 1 (0 solution, 0 counterexamples)
[02/20 16:03:29]  Generator returned sat in 0.009276 secs.
[02/20 16:03:29]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + -2alpha + -2r_f > 0):
    + 1/2min_c
else:
    + 1/2r_f[0m
[02/20 16:03:48]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:03:48]  Verifer returned sat in 19.282765 secs.
[02/20 16:03:48]  sf_get_cex returned in 19.390921 secs.
[02/20 16:03:48]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0        163.333333            1.0          144.0        136.333333             0.0                     0.0           100.0           100.0                2.0     27.0          -1.0    NaN    NaN    NaN       2.0
1        235.333333        72027.0           72.0        235.333333             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   72.0   99.0    0.0       0.0
2        271.333333        36000.0           36.0        271.333333             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   36.0   36.0    0.0       0.0
3        290.333333        19000.0           19.0        290.333333             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   19.0   19.0    0.0       0.0
4        309.333333        19000.0           19.0        309.333333             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   19.0   19.0    0.0       0.0
5        328.333333        19000.0           19.0        328.333333             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   19.0   19.0    0.0       0.0
6        347.333333        19000.0           19.0        347.333333             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   19.0   19.0    0.0       0.0
7        366.333333        19000.0           19.0        366.333333             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   19.0   19.0    0.0       0.0
8        385.333333        19000.0           19.0        385.333333             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   19.0   19.0    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=200, start_state=[0].[0m
[02/20 16:03:48]  --------------------------------------------------------------------------------
[02/20 16:03:48]  Iteration: 2 (0 solution, 1 counterexamples)
[02/20 16:03:50]  Generator returned sat in 2.275772 secs.
[02/20 16:03:50]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + -1alpha
else:
    + 2r_f[0m
[02/20 16:03:54]  Improved number of small numbers from 94 to 130 out of a max of 130
[02/20 16:03:54]  Verifer returned sat in 3.065833 secs.
[02/20 16:03:54]  sf_get_cex returned in 3.156260 secs.
[02/20 16:03:54]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0        198.252441       0.999512       9.000244        198.252441             0.0                     0.0       19.000244           100.0                2.0      0.0          -1.0        NaN        NaN    NaN       2.0
1        217.252686   19000.244141      19.000244        217.252686             0.0                     0.0       19.000244           100.0                0.0      0.0           0.0  19.000244  19.000244    0.0       0.0
2        236.252930   19000.244141      19.000244        236.252930             0.0                     0.0       19.000244           100.0                0.0      0.0           0.0  19.000244  19.000244    0.0       0.0
3        255.253174   19000.244141      19.000244        255.253174             0.0                     0.0       19.000244           100.0                0.0      0.0           0.0  19.000244  19.000244    0.0       0.0
4        274.253418   19000.244141      19.000244        274.253418             0.0                     0.0       19.000244           100.0                0.0      0.0           0.0  19.000244  19.000244    0.0       0.0
5        293.253662   19000.244141      19.000244        293.253662             0.0                     0.0       19.000244           100.0                0.0      0.0           0.0  19.000244  19.000244    0.0       0.0
6        312.253906   19000.244141      19.000244        312.253906             0.0                     0.0       19.000244           100.0                0.0      0.0           0.0  19.000244  19.000244    0.0       0.0
7        331.254150   19000.244141      19.000244        331.254150             0.0                     0.0       19.000244           100.0                0.0      0.0           0.0  19.000244  19.000244    0.0       0.0
8        350.254395   19000.244141      19.000244        350.254395             0.0                     0.0       19.000244           100.0                0.0      0.0           0.0  19.000244  19.000244    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77825/4096, buf_size=200, start_state=[0].[0m
[02/20 16:03:54]  --------------------------------------------------------------------------------
[02/20 16:03:54]  Iteration: 3 (0 solution, 2 counterexamples)
[02/20 16:03:59]  Generator returned sat in 5.011611 secs.
[02/20 16:03:59]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + -2alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 2min_c[0m
[02/20 16:04:03]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:04:04]  Verifer returned sat in 4.601004 secs.
[02/20 16:04:04]  sf_get_cex returned in 4.691682 secs.
[02/20 16:04:04]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S      del_L  qdelay_t
0       -600.840192       1.000000     102.100480       -600.840192        0.000000                0.000000        0.840192           100.0                2.0    0.000000          -1.0         NaN    NaN        NaN       2.0
1       -499.579904  101260.288066     101.260288       -500.840192        0.000000                0.000000      100.000000           100.0                0.0    1.260288           0.0  101.260288  100.0   0.000000       0.0
2       -399.159808  100421.356310     100.420096       -400.840192        0.000000                0.000000      100.000000           100.0                0.0    1.680384           0.0  100.420096  100.0   0.000000       0.0
3       -199.159808  200001.680384     200.000000       -300.840192        0.000000                0.000000      100.000000           100.0                0.0  101.680384           0.0  200.000000  100.0   0.000000       0.0
4          0.000000  199261.488340     199.159808       -200.840192        0.840192                0.000000      100.000000           100.0                1.0  200.000000           1.0  199.159808  100.0   0.840192       1.0
5        198.319616  198520.456104     198.319616       -100.840192       99.159808                0.840192      100.000000           100.0                1.0  200.000000           1.0  198.319616  100.0  98.319616       1.0
6        395.799040  197778.583676     197.479424         -0.840192      196.639232               99.159808      100.000000           100.0                2.0  200.000000           1.0  197.479424  100.0  97.479424       2.0
7        592.438272  197035.871056     196.639232         99.159808      293.278464              196.639232      100.000000           100.0                2.0  200.000000           1.0  196.639232  100.0  96.639232       2.0
8        788.237311  196292.318244     195.799040        199.159808      389.077503              293.278464      100.000000           100.0                2.0  200.000000           1.0  195.799040  100.0  95.799040       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, 
, large_loss_count=4, loss_amount=567275/1458, beliefs_remain_consistent=True, beliefs_improve=True, alpha=1225/1458, buf_size=200, start_state=[0].[0m
[02/20 16:04:04]  --------------------------------------------------------------------------------
[02/20 16:04:04]  Iteration: 4 (0 solution, 3 counterexamples)
[02/20 16:04:28]  Generator returned sat in 24.232380 secs.
[02/20 16:04:28]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:04:33]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:04:33]  Verifer returned sat in 4.770672 secs.
[02/20 16:04:33]  sf_get_cex returned in 4.867004 secs.
[02/20 16:04:33]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t       del_A  del_S       del_L  qdelay_t
0        100.000000       1.000000       1.000000            -100.0        0.000000                0.000000           100.0           100.0                1.0    200.0          -1.0         NaN    NaN         NaN       1.0
1        218.555556  118755.555556     118.555556               0.0       18.555556                0.000000           100.0           100.0                2.0    200.0           1.0  118.555556  100.0   18.555556       2.0
2        355.666667  137329.666667     137.111111             100.0       55.666667               18.555556           100.0           100.0                2.0    200.0           1.0  137.111111  100.0   37.111111       2.0
3        511.333333  155922.333333     155.666667             200.0      111.333333               55.666667           100.0           100.0                2.0    200.0           1.0  155.666667  100.0   55.666667       2.0
4        685.555556  174533.555556     174.222222             300.0      185.555556              111.333333           100.0           100.0                2.0    200.0           1.0  174.222222  100.0   74.222222       2.0
5        878.333333  193163.333333     192.777778             400.0      278.333333              185.555556           100.0           100.0                2.0    200.0           1.0  192.777778  100.0   92.777778       2.0
6       1089.666667  211811.666667     211.333333             500.0      389.666667              278.333333           100.0           100.0                2.0    200.0           1.0  211.333333  100.0  111.333333       2.0
7       1319.555556  230478.555556     229.888889             600.0      519.555556              389.666667           100.0           100.0                2.0    200.0           1.0  229.888889  100.0  129.888889       2.0
8       1568.000000  249164.000000     248.444444             700.0      668.000000              519.555556           100.0           100.0                2.0    200.0           1.0  248.444444  100.0  148.444444       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=5845/9, beliefs_remain_consistent=True, beliefs_improve=False, alpha=167/9, buf_size=200, start_state=[0].[0m
[02/20 16:04:33]  --------------------------------------------------------------------------------
[02/20 16:04:33]  Iteration: 5 (0 solution, 4 counterexamples)
[02/20 16:04:46]  Generator returned sat in 13.150835 secs.
[02/20 16:04:46]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -1r_f > 0):
    + 2min_c
else:
    + 1/2min_c[0m
[02/20 16:04:49]  Improved number of small numbers from 129 to 130 out of a max of 130
[02/20 16:04:49]  Verifer returned sat in 2.509184 secs.
[02/20 16:04:49]  sf_get_cex returned in 2.601165 secs.
[02/20 16:04:49]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S      del_L  qdelay_t
0        636.007812       0.999756       1.999512        488.007324        0.000000                0.000000        0.999756      100.499756                2.0  148.000488          -1.0         NaN    NaN        NaN       2.0
1        637.007568    1147.756348       0.999756        588.007324        0.000000                0.000000      100.000000      100.000000                2.0   49.000244           1.0    0.999756  100.0   0.000000       2.0
2        837.007568  200049.000244     200.000000        688.007324        0.000000                0.000000      100.000000      100.000000                0.0  149.000244           0.0  200.000000  100.0   0.000000       0.0
3        887.007568   50149.000244      50.000000        788.007324        0.000000                0.000000      100.000000      100.000000                1.0   99.000244           1.0   50.000000  100.0   0.000000       1.0
4       1087.007568  200099.000244     200.000000        888.007324        0.000000                0.000000      100.000000      100.000000                0.0  199.000244           0.0  200.000000  100.0   0.000000       0.0
5       1137.007568   50199.000244      50.000000        988.007324        0.000000                0.000000      100.000000      100.000000                1.0  149.000244           1.0   50.000000  100.0   0.000000       1.0
6       1337.007568  200149.000244     200.000000       1088.007324       49.000244                0.000000      100.000000      100.000000                1.0  200.000000           1.0  200.000000  100.0  49.000244       1.0
7       1387.007568   50249.000244      50.000000       1188.007324       49.000244               49.000244      100.000000      100.000000                1.0  150.000000           1.0   50.000000  100.0   0.000000       1.0
8       1587.007568  200199.000244     200.000000       1288.007324       99.000244               49.000244      100.000000      100.000000                2.0  200.000000           1.0  200.000000  100.0  50.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, 
, large_loss_count=2, loss_amount=405505/4096, beliefs_remain_consistent=True, beliefs_improve=True, alpha=4095/4096, buf_size=200, start_state=[0].[0m
[02/20 16:04:49]  --------------------------------------------------------------------------------
[02/20 16:04:49]  Iteration: 6 (0 solution, 5 counterexamples)
[02/20 16:05:03]  Generator returned sat in 12.929250 secs.
[02/20 16:05:03]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + -1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:05:20]  Improved number of small numbers from 80 to 81 out of a max of 130
[02/20 16:05:20]  Verifer returned sat in 16.903704 secs.
[02/20 16:05:20]  sf_get_cex returned in 17.003557 secs.
[02/20 16:05:20]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0     -38506.837799       0.999756      48.625488     -38506.837799             0.0                     0.0       50.874786           100.0                0.0      0.0          -1.0        NaN        NaN    NaN       0.0
1     -38456.962769   49875.030518      49.875031     -38456.962769             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
2     -38407.087738   49875.030518      49.875031     -38407.087738             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
3     -38357.212708   49875.030518      49.875031     -38357.212708             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
4     -38307.337677   49875.030518      49.875031     -38307.337677             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
5     -38257.462646   49875.030518      49.875031     -38257.462646             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
6     -38207.587616   49875.030518      49.875031     -38207.587616             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
7     -38157.712585   49875.030518      49.875031     -38157.712585             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
8     -38107.837555   49875.030518      49.875031     -38107.837555             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4095/4096, buf_size=200, start_state=[0].[0m
[02/20 16:05:20]  --------------------------------------------------------------------------------
[02/20 16:05:20]  Iteration: 7 (0 solution, 6 counterexamples)
[02/20 16:06:42]  Generator returned sat in 82.172311 secs.
[02/20 16:06:42]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:06:57]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:06:57]  Verifer returned sat in 14.675025 secs.
[02/20 16:06:57]  sf_get_cex returned in 14.778666 secs.
[02/20 16:06:57]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t    del_A  del_S   del_L  qdelay_t
0          -232.000          1.000        102.875            -232.0           0.000                   0.000           100.0           101.0                0.0    0.000          -1.0      NaN    NaN     NaN       0.0
1          -120.375     111625.000        111.625            -132.0           0.000                   0.000           100.0           101.0                0.0   11.625           0.0  111.625  100.0   0.000       0.0
2             0.000     120386.625        120.375             -32.0           0.000                   0.000           100.0           101.0                0.0   32.000           0.0  120.375  100.0   0.000       0.0
3           129.125     129157.000        129.125              68.0           0.000                   0.000           100.0           101.0                0.0   61.125           0.0  129.125  100.0   0.000       0.0
4           267.000     137936.125        137.875             168.0           0.000                   0.000           100.0           101.0                0.0   99.000           0.0  137.875  100.0   0.000       0.0
5           413.625     146724.000        146.625             268.0           0.000                   0.000           100.0           101.0                0.0  145.625           0.0  146.625  100.0   0.000       0.0
6           569.000     155520.625        155.375             368.0           1.000                   0.000           100.0           100.0                1.0  200.000           1.0  155.375  100.0   1.000       1.0
7           733.125     164326.000        164.125             468.0          65.125                   1.000           100.0           100.0                1.0  200.000           1.0  164.125  100.0  64.125       1.0
8           906.000     173140.125        172.875             568.0         138.000                  65.125           100.0           100.0                2.0  200.000           1.0  172.875  100.0  72.875       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=1, loss_amount=138, beliefs_remain_consistent=True, beliefs_improve=True, alpha=35/4, buf_size=200, start_state=[0].[0m
[02/20 16:06:57]  --------------------------------------------------------------------------------
[02/20 16:06:57]  Iteration: 8 (0 solution, 7 counterexamples)
[02/20 16:09:06]  Generator returned sat in 128.162858 secs.
[02/20 16:09:06]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2alpha + 1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 16:09:16]  Improved number of small numbers from 94 to 130 out of a max of 130
[02/20 16:09:16]  Verifer returned sat in 10.399119 secs.
[02/20 16:09:16]  sf_get_cex returned in 10.500957 secs.
[02/20 16:09:16]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t   queue_t  utilized_0,t      del_A  del_S    del_L  qdelay_t
0        609.691406       0.999512      99.218506        410.003906         0.00000                 0.00000           100.0           100.0                1.0  199.6875          -1.0        NaN    NaN      NaN       1.0
1        710.160156  100668.437500     100.468750        510.003906         0.15625                 0.00000           100.0           100.0                2.0  200.0000           1.0  100.46875  100.0  0.15625       2.0
2        810.628906  100668.906250     100.468750        610.003906         0.62500                 0.15625           100.0           100.0                1.0  200.0000           1.0  100.46875  100.0  0.46875       1.0
3        911.097656  100669.375000     100.468750        710.003906         1.09375                 0.62500           100.0           100.0                2.0  200.0000           1.0  100.46875  100.0  0.46875       2.0
4       1011.566406  100669.843750     100.468750        810.003906         1.56250                 1.09375           100.0           100.0                2.0  200.0000           1.0  100.46875  100.0  0.46875       2.0
5       1112.035156  100670.312500     100.468750        910.003906         2.03125                 1.56250           100.0           100.0                2.0  200.0000           1.0  100.46875  100.0  0.46875       2.0
6       1212.503906  100670.781250     100.468750       1010.003906         2.50000                 2.03125           100.0           100.0                2.0  200.0000           1.0  100.46875  100.0  0.46875       2.0
7       1312.972656  100671.250000     100.468750       1110.003906         2.96875                 2.50000           100.0           100.0                2.0  200.0000           1.0  100.46875  100.0  0.46875       2.0
8       1413.441406  100671.718750     100.468750       1210.003906         3.43750                 2.96875           100.0           100.0                2.0  200.0000           1.0  100.46875  100.0  0.46875       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=105/32, beliefs_remain_consistent=True, beliefs_improve=False, alpha=15/32, buf_size=200, start_state=[0].[0m
[02/20 16:09:17]  --------------------------------------------------------------------------------
[02/20 16:09:17]  Iteration: 9 (0 solution, 8 counterexamples)
[02/20 16:10:36]  Generator returned sat in 78.994756 secs.
[02/20 16:10:36]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:10:47]  Verifer returned unsat in 10.310592 secs.
[02/20 16:10:47]  sf_get_cex returned in 10.410583 secs.
[02/20 16:10:47]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:10:47]  --------------------------------------------------------------------------------
[02/20 16:10:47]  Iteration: 10 (1 solution, 8 counterexamples)
[02/20 16:11:19]  Generator returned sat in 31.769364 secs.
[02/20 16:11:19]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1max_c + 1alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:11:42]  Verifer returned unsat in 22.873268 secs.
[02/20 16:11:42]  sf_get_cex returned in 22.992928 secs.
[02/20 16:11:42]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + 1alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:11:42]  --------------------------------------------------------------------------------
[02/20 16:11:42]  Iteration: 11 (2 solution, 8 counterexamples)
[02/20 16:11:54]  Generator returned sat in 11.047435 secs.
[02/20 16:11:54]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 1R > 0):
    + 2min_c
else:
    + 1/2r_f[0m
[02/20 16:11:58]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:11:58]  Verifer returned sat in 4.368511 secs.
[02/20 16:11:58]  sf_get_cex returned in 4.475991 secs.
[02/20 16:11:59]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0     374181.484988            1.0          400.0     374082.484988             0.0                     0.0           100.0           100.0                2.0     99.0          -1.0    NaN    NaN    NaN       2.0
1     374381.484988       200099.0          200.0     374182.484988             0.0                     0.0           100.0           100.0                0.0    199.0           0.0  200.0  100.0    0.0       0.0
2     374581.484988       200199.0          200.0     374282.484988            99.0                     0.0           100.0           100.0                1.0    200.0           1.0  200.0  100.0   99.0       1.0
3     374681.484988       100299.0          100.0     374382.484988            99.0                    99.0           100.0           100.0                1.0    200.0           1.0  100.0  100.0    0.0       1.0
4     374731.484988        50299.0           50.0     374482.484988            99.0                    99.0           100.0           100.0                2.0    150.0           1.0   50.0  100.0    0.0       2.0
5     374756.484988        25249.0           25.0     374582.484988            99.0                    99.0           100.0           100.0                2.0     75.0           1.0   25.0  100.0    0.0       2.0
6     374768.984988        12674.0           12.5     374669.984988            99.0                    99.0           100.0           100.0                0.0      0.0           0.0   12.5   87.5    0.0       0.0
7     374968.984988       200099.0          200.0     374769.984988            99.0                    99.0           100.0           100.0                0.0    100.0           0.0  200.0  100.0    0.0       0.0
8     375168.984988       200199.0          200.0     374869.984988            99.0                    99.0           100.0           100.0                1.0    200.0           1.0  200.0  100.0    0.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=99, beliefs_remain_consistent=True, beliefs_improve=False, alpha=23/2, buf_size=200, start_state=[0].[0m
[02/20 16:11:59]  --------------------------------------------------------------------------------
[02/20 16:11:59]  Iteration: 12 (2 solution, 9 counterexamples)
[02/20 16:13:38]  Generator returned sat in 98.220526 secs.
[02/20 16:13:38]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 1r_f > 0):
    + 1min_c + 1alpha
else:
    + 2min_c[0m
[02/20 16:13:40]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:13:40]  Verifer returned sat in 2.771019 secs.
[02/20 16:13:41]  sf_get_cex returned in 2.890049 secs.
[02/20 16:13:41]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S     del_L  qdelay_t
0     363325.290771       0.999756     100.999756     363126.290527        0.000000                0.000000           100.0           100.0                2.0  199.000244          -1.0         NaN    NaN       NaN       2.0
1     363427.290283  102198.511963     101.999512     363226.290527        0.999756                0.000000           100.0           100.0                2.0  200.000000           1.0  101.999512  100.0  0.999756       2.0
2     363529.289795  102200.511475     101.999512     363326.290527        2.999268                0.999756           100.0           100.0                1.0  200.000000           1.0  101.999512  100.0  1.999512       1.0
3     363631.289307  102202.510986     101.999512     363426.290527        4.998779                2.999268           100.0           100.0                2.0  200.000000           1.0  101.999512  100.0  1.999512       2.0
4     363733.288818  102204.510498     101.999512     363526.290527        6.998291                4.998779           100.0           100.0                2.0  200.000000           1.0  101.999512  100.0  1.999512       2.0
5     363835.288330  102206.510010     101.999512     363626.290527        8.997803                6.998291           100.0           100.0                2.0  200.000000           1.0  101.999512  100.0  1.999512       2.0
6     363937.287842  102208.509521     101.999512     363726.290527       10.997314                8.997803           100.0           100.0                2.0  200.000000           1.0  101.999512  100.0  1.999512       2.0
7     364039.287354  102210.509033     101.999512     363826.290527       12.996826               10.997314           100.0           100.0                2.0  200.000000           1.0  101.999512  100.0  1.999512       2.0
8     364141.286865  102212.508545     101.999512     363926.290527       14.996338               12.996826           100.0           100.0                2.0  200.000000           1.0  101.999512  100.0  1.999512       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=8, 
, large_loss_count=0, loss_amount=28665/2048, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4095/2048, buf_size=200, start_state=[0].[0m
[02/20 16:13:41]  --------------------------------------------------------------------------------
[02/20 16:13:41]  Iteration: 13 (2 solution, 10 counterexamples)
[02/20 16:14:32]  Generator returned sat in 50.868344 secs.
[02/20 16:14:32]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 2r_f[0m
[02/20 16:14:37]  Improved number of small numbers from 86 to 94 out of a max of 130
[02/20 16:14:37]  Verifer returned sat in 4.778675 secs.
[02/20 16:14:37]  sf_get_cex returned in 4.869377 secs.
[02/20 16:14:37]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A       del_S      del_L  qdelay_t
0     363338.336689       0.999268       6.282417     363251.901035        0.000000                     0.0       98.000977      201.037354                0.0   86.435654          -1.0         NaN         NaN        NaN       0.0
1     363350.901523   12651.269723      12.564834     363350.901523        0.000000                     0.0       99.000488      201.037354                0.0    0.000000           0.0   12.564834   99.000488   0.000000       0.0
2     363376.031191   25129.668137      25.129668     363376.031191        0.000000                     0.0       99.000488      201.037354                0.0    0.000000           0.0   25.129668   25.129668   0.000000       0.0
3     363426.290527   50259.336274      50.259336     363426.290527        0.000000                     0.0       99.000488      201.037354                0.0    0.000000           0.0   50.259336   50.259336   0.000000       0.0
4     363526.809200  100518.672548     100.518673     363526.290527        0.000000                     0.0      100.000000      201.037354                0.0    0.518673           0.0  100.518673  100.000000   0.000000       0.0
5     363621.292969   94484.287530      94.483769     363621.292969        0.000000                     0.0      100.000000      201.037354                0.0    0.000000           0.0   94.483769   95.002441   0.000000       0.0
6     363810.260506  188967.537716     188.967538     363721.292969        0.000000                     0.0      100.000000      201.037354                0.0   88.967538           0.0  188.967538  100.000000   0.000000       0.0
7     363993.193140  183021.601562     182.932634     363821.292969        0.000000                     0.0      100.000000      201.037354                0.0  171.900172           0.0  182.932634  100.000000   0.000000       0.0
8     364170.090871  177069.630506     176.897730     363921.292969       48.797902                     0.0      100.000000      100.000000                1.0  200.000000           1.0  176.897730  100.000000  48.797902       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=2898205/59392, beliefs_remain_consistent=True, beliefs_improve=True, alpha=358425/59392, buf_size=200, start_state=[0].[0m
[02/20 16:14:37]  --------------------------------------------------------------------------------
[02/20 16:14:37]  Iteration: 14 (2 solution, 11 counterexamples)
[02/20 16:16:54]  Generator returned sat in 135.832405 secs.
[02/20 16:16:54]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:17:04]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:17:04]  Verifer returned sat in 10.071837 secs.
[02/20 16:17:04]  sf_get_cex returned in 10.170922 secs.
[02/20 16:17:04]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0               0.0            1.0          107.0            -199.0             0.0                     0.0           100.0           100.0                1.0    199.0          -1.0    NaN    NaN    NaN       1.0
1             102.0       102199.0          102.0             -99.0             1.0                     0.0           100.0           100.0                2.0    200.0           1.0  102.0  100.0    1.0       2.0
2             207.0       105201.0          105.0               1.0             6.0                     1.0           100.0           100.0                1.0    200.0           1.0  105.0  100.0    5.0       1.0
3             307.0       100206.0          100.0             101.0             6.0                     6.0           100.0           100.0                2.0    200.0           1.0  100.0  100.0    0.0       2.0
4             412.0       105206.0          105.0             201.0            11.0                     6.0           100.0           100.0                2.0    200.0           1.0  105.0  100.0    5.0       2.0
5             512.0       100211.0          100.0             301.0            11.0                    11.0           100.0           100.0                2.0    200.0           1.0  100.0  100.0    0.0       2.0
6             617.0       105211.0          105.0             401.0            16.0                    11.0           100.0           100.0                2.0    200.0           1.0  105.0  100.0    5.0       2.0
7             717.0       100216.0          100.0             501.0            16.0                    16.0           100.0           100.0                2.0    200.0           1.0  100.0  100.0    0.0       2.0
8             822.0       105216.0          105.0             601.0            21.0                    16.0           100.0           100.0                2.0    200.0           1.0  105.0  100.0    5.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=20, beliefs_remain_consistent=True, beliefs_improve=False, alpha=5, buf_size=200, start_state=[0].[0m
[02/20 16:17:04]  --------------------------------------------------------------------------------
[02/20 16:17:04]  Iteration: 15 (2 solution, 12 counterexamples)
[02/20 16:18:54]  Generator returned sat in 108.645964 secs.
[02/20 16:18:54]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:19:05]  Verifer returned unsat in 10.927251 secs.
[02/20 16:19:05]  sf_get_cex returned in 11.041836 secs.
[02/20 16:19:05]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:19:05]  --------------------------------------------------------------------------------
[02/20 16:19:05]  Iteration: 16 (3 solution, 12 counterexamples)
[02/20 16:19:22]  Generator returned sat in 15.935381 secs.
[02/20 16:19:22]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c[0m
[02/20 16:19:31]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:19:31]  Verifer returned sat in 8.828505 secs.
[02/20 16:19:31]  sf_get_cex returned in 8.939264 secs.
[02/20 16:19:31]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0      -2384.500244            1.0           16.0      -2384.500244             0.0                     0.0            32.0           100.0                2.0      0.0          -1.0    NaN    NaN    NaN       2.0
1      -2352.500244        32000.0           32.0      -2352.500244             0.0                     0.0            32.0           100.0                0.0      0.0           0.0   32.0   32.0    0.0       0.0
2      -2320.500244        32000.0           32.0      -2320.500244             0.0                     0.0            32.0           100.0                0.0      0.0           0.0   32.0   32.0    0.0       0.0
3      -2288.500244        32000.0           32.0      -2288.500244             0.0                     0.0            32.0           100.0                0.0      0.0           0.0   32.0   32.0    0.0       0.0
4      -2256.500244        32000.0           32.0      -2256.500244             0.0                     0.0            32.0           100.0                0.0      0.0           0.0   32.0   32.0    0.0       0.0
5      -2224.500244        32000.0           32.0      -2224.500244             0.0                     0.0            32.0           100.0                0.0      0.0           0.0   32.0   32.0    0.0       0.0
6      -2192.500244        32000.0           32.0      -2192.500244             0.0                     0.0            32.0           100.0                0.0      0.0           0.0   32.0   32.0    0.0       0.0
7      -2160.500244        32000.0           32.0      -2160.500244             0.0                     0.0            32.0           100.0                0.0      0.0           0.0   32.0   32.0    0.0       0.0
8      -2128.500244        32000.0           32.0      -2128.500244             0.0                     0.0            32.0           100.0                0.0      0.0           0.0   32.0   32.0    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=16, buf_size=200, start_state=[0].[0m
[02/20 16:19:31]  --------------------------------------------------------------------------------
[02/20 16:19:31]  Iteration: 17 (3 solution, 13 counterexamples)
[02/20 16:22:19]  Generator returned sat in 166.491700 secs.
[02/20 16:22:19]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:22:27]  Verifer returned unsat in 8.434234 secs.
[02/20 16:22:27]  sf_get_cex returned in 8.533185 secs.
[02/20 16:22:27]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:22:27]  --------------------------------------------------------------------------------
[02/20 16:22:27]  Iteration: 18 (4 solution, 13 counterexamples)
[02/20 16:22:31]  Generator returned sat in 2.448055 secs.
[02/20 16:22:31]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:22:45]  Verifer returned unsat in 13.454678 secs.
[02/20 16:22:45]  sf_get_cex returned in 13.565859 secs.
[02/20 16:22:45]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:22:45]  --------------------------------------------------------------------------------
[02/20 16:22:45]  Iteration: 19 (5 solution, 13 counterexamples)
[02/20 16:22:55]  Generator returned sat in 9.020217 secs.
[02/20 16:22:55]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:23:13]  Verifer returned unsat in 17.983322 secs.
[02/20 16:23:13]  sf_get_cex returned in 18.093994 secs.
[02/20 16:23:13]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:23:13]  --------------------------------------------------------------------------------
[02/20 16:23:13]  Iteration: 20 (6 solution, 13 counterexamples)
[02/20 16:23:17]  Generator returned sat in 3.121503 secs.
[02/20 16:23:17]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:23:38]  Verifer returned unsat in 20.880439 secs.
[02/20 16:23:38]  sf_get_cex returned in 20.999000 secs.
[02/20 16:23:38]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:23:38]  --------------------------------------------------------------------------------
[02/20 16:23:38]  Iteration: 21 (7 solution, 13 counterexamples)
[02/20 16:24:10]  Generator returned sat in 30.326943 secs.
[02/20 16:24:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:24:23]  Verifer returned unsat in 12.584632 secs.
[02/20 16:24:23]  sf_get_cex returned in 12.692184 secs.
[02/20 16:24:23]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:24:23]  --------------------------------------------------------------------------------
[02/20 16:24:23]  Iteration: 22 (8 solution, 13 counterexamples)
[02/20 16:24:28]  Generator returned sat in 4.135925 secs.
[02/20 16:24:28]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:24:49]  Verifer returned unsat in 20.711386 secs.
[02/20 16:24:49]  sf_get_cex returned in 20.826717 secs.
[02/20 16:24:49]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:24:49]  --------------------------------------------------------------------------------
[02/20 16:24:49]  Iteration: 23 (9 solution, 13 counterexamples)
[02/20 16:24:57]  Generator returned sat in 6.636235 secs.
[02/20 16:24:57]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:25:16]  Verifer returned unsat in 19.130204 secs.
[02/20 16:25:16]  sf_get_cex returned in 19.232674 secs.
[02/20 16:25:16]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:25:16]  --------------------------------------------------------------------------------
[02/20 16:25:16]  Iteration: 24 (10 solution, 13 counterexamples)
[02/20 16:25:29]  Generator returned sat in 11.607789 secs.
[02/20 16:25:29]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:25:53]  Verifer returned unsat in 24.452833 secs.
[02/20 16:25:53]  sf_get_cex returned in 24.553173 secs.
[02/20 16:25:53]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:25:53]  --------------------------------------------------------------------------------
[02/20 16:25:53]  Iteration: 25 (11 solution, 13 counterexamples)
[02/20 16:25:58]  Generator returned sat in 3.671589 secs.
[02/20 16:25:58]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 1alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:26:06]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:26:06]  Verifer returned sat in 7.865765 secs.
[02/20 16:26:06]  sf_get_cex returned in 7.964681 secs.
[02/20 16:26:06]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0           -1040.0            1.0           12.0           -1040.0             0.0                     0.0             7.0           100.0                2.0      0.0          -1.0    NaN    NaN    NaN       2.0
1           -1034.0         6000.0            6.0           -1034.0             0.0                     0.0             7.0           100.0                0.0      0.0           0.0    6.0    6.0    0.0       0.0
2           -1029.0         5000.0            5.0           -1029.0             0.0                     0.0             7.0           100.0                0.0      0.0           0.0    5.0    5.0    0.0       0.0
3           -1024.0         5000.0            5.0           -1024.0             0.0                     0.0             7.0           100.0                0.0      0.0           0.0    5.0    5.0    0.0       0.0
4           -1019.0         5000.0            5.0           -1019.0             0.0                     0.0             7.0           100.0                0.0      0.0           0.0    5.0    5.0    0.0       0.0
5           -1014.0         5000.0            5.0           -1014.0             0.0                     0.0             7.0           100.0                0.0      0.0           0.0    5.0    5.0    0.0       0.0
6           -1009.0         5000.0            5.0           -1009.0             0.0                     0.0             7.0           100.0                0.0      0.0           0.0    5.0    5.0    0.0       0.0
7           -1004.0         5000.0            5.0           -1004.0             0.0                     0.0             7.0           100.0                0.0      0.0           0.0    5.0    5.0    0.0       0.0
8            -999.0         5000.0            5.0            -999.0             0.0                     0.0             7.0           100.0                0.0      0.0           0.0    5.0    5.0    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=5, buf_size=200, start_state=[0].[0m
[02/20 16:26:06]  --------------------------------------------------------------------------------
[02/20 16:26:06]  Iteration: 26 (11 solution, 14 counterexamples)
[02/20 16:28:01]  Generator returned sat in 113.190659 secs.
[02/20 16:28:01]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 16:28:41]  Verifer returned unsat in 40.420756 secs.
[02/20 16:28:41]  sf_get_cex returned in 40.542127 secs.
[02/20 16:28:41]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 16:28:41]  --------------------------------------------------------------------------------
[02/20 16:28:41]  Iteration: 27 (12 solution, 14 counterexamples)
[02/20 16:29:53]  Generator returned sat in 69.921131 secs.
[02/20 16:29:53]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 16:30:02]  Verifer returned unsat in 9.203263 secs.
[02/20 16:30:02]  sf_get_cex returned in 9.302341 secs.
[02/20 16:30:02]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 16:30:02]  --------------------------------------------------------------------------------
[02/20 16:30:02]  Iteration: 28 (13 solution, 14 counterexamples)
[02/20 16:30:06]  Generator returned sat in 3.162844 secs.
[02/20 16:30:07]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 16:30:14]  Verifer returned unsat in 7.084248 secs.
[02/20 16:30:14]  sf_get_cex returned in 7.179735 secs.
[02/20 16:30:14]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 16:30:14]  --------------------------------------------------------------------------------
[02/20 16:30:14]  Iteration: 29 (14 solution, 14 counterexamples)
[02/20 16:30:21]  Generator returned sat in 6.370031 secs.
[02/20 16:30:21]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 16:30:30]  Verifer returned unsat in 9.008209 secs.
[02/20 16:30:30]  sf_get_cex returned in 9.109869 secs.
[02/20 16:30:30]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 16:30:31]  --------------------------------------------------------------------------------
[02/20 16:30:31]  Iteration: 30 (15 solution, 14 counterexamples)
[02/20 16:30:56]  Generator returned sat in 24.275747 secs.
[02/20 16:30:56]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -2alpha + -2r_f > 0):
    + 2min_c
else:
    + 1/2r_f[0m
[02/20 16:31:06]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:31:06]  Verifer returned sat in 10.027291 secs.
[02/20 16:31:06]  sf_get_cex returned in 10.130707 secs.
[02/20 16:31:06]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A  del_S  del_L  qdelay_t
0         150435.50           1.00         350.00          150335.5            0.00                    0.00           100.0           100.0                0.0   100.00          -1.0     NaN    NaN    NaN       0.0
1         150610.50      175100.00         175.00          150435.5            0.00                    0.00           100.0           100.0                1.0   175.00           1.0  175.00  100.0   0.00       1.0
2         150698.00       87675.00          87.50          150535.5            0.00                    0.00           100.0           100.0                1.0   162.50           1.0   87.50  100.0   0.00       1.0
3         150741.75       43912.50          43.75          150635.5            0.00                    0.00           100.0           100.0                1.0   106.25           1.0   43.75  100.0   0.00       1.0
4         150941.75      200106.25         200.00          150735.5            6.25                    0.00           100.0           100.0                1.0   200.00           1.0  200.00  100.0   6.25       1.0
5         151041.75      100206.25         100.00          150835.5            6.25                    6.25           100.0           100.0                1.0   200.00           1.0  100.00  100.0   0.00       1.0
6         151091.75       50206.25          50.00          150935.5            6.25                    6.25           100.0           100.0                2.0   150.00           1.0   50.00  100.0   0.00       2.0
7         151116.75       25156.25          25.00          151035.5            6.25                    6.25           100.0           100.0                2.0    75.00           1.0   25.00  100.0   0.00       2.0
8         151316.75      200081.25         200.00          151135.5            6.25                    6.25           100.0           100.0                0.0   175.00           0.0  200.00  100.0   0.00       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=25/4, beliefs_remain_consistent=True, beliefs_improve=False, alpha=25/36, buf_size=200, start_state=[0].[0m
[02/20 16:31:06]  --------------------------------------------------------------------------------
[02/20 16:31:06]  Iteration: 31 (15 solution, 15 counterexamples)
[02/20 16:31:48]  Generator returned sat in 40.037196 secs.
[02/20 16:31:48]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 1R > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:32:02]  Verifer returned unsat in 14.423921 secs.
[02/20 16:32:02]  sf_get_cex returned in 14.534506 secs.
[02/20 16:32:02]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_qdel + 1R > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:32:02]  --------------------------------------------------------------------------------
[02/20 16:32:02]  Iteration: 32 (16 solution, 15 counterexamples)
[02/20 16:32:10]  Generator returned sat in 6.039719 secs.
[02/20 16:32:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:32:25]  Verifer returned unsat in 15.516164 secs.
[02/20 16:32:25]  sf_get_cex returned in 15.613196 secs.
[02/20 16:32:25]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:32:25]  --------------------------------------------------------------------------------
[02/20 16:32:25]  Iteration: 33 (17 solution, 15 counterexamples)
[02/20 16:32:30]  Generator returned sat in 3.493719 secs.
[02/20 16:32:30]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:32:45]  Verifer returned unsat in 14.197658 secs.
[02/20 16:32:45]  sf_get_cex returned in 14.314346 secs.
[02/20 16:32:45]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:32:45]  --------------------------------------------------------------------------------
[02/20 16:32:45]  Iteration: 34 (18 solution, 15 counterexamples)
[02/20 16:32:50]  Generator returned sat in 3.779504 secs.
[02/20 16:32:50]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:33:02]  Verifer returned unsat in 12.453443 secs.
[02/20 16:33:02]  sf_get_cex returned in 12.561356 secs.
[02/20 16:33:02]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:33:02]  --------------------------------------------------------------------------------
[02/20 16:33:02]  Iteration: 35 (19 solution, 15 counterexamples)
[02/20 16:33:11]  Generator returned sat in 6.900624 secs.
[02/20 16:33:11]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:33:36]  Verifer returned unsat in 25.558776 secs.
[02/20 16:33:36]  sf_get_cex returned in 25.661749 secs.
[02/20 16:33:36]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:33:36]  --------------------------------------------------------------------------------
[02/20 16:33:36]  Iteration: 36 (20 solution, 15 counterexamples)
[02/20 16:33:43]  Generator returned sat in 5.630956 secs.
[02/20 16:33:43]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:34:11]  Verifer returned unsat in 27.466653 secs.
[02/20 16:34:11]  sf_get_cex returned in 27.580399 secs.
[02/20 16:34:11]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:34:11]  --------------------------------------------------------------------------------
[02/20 16:34:11]  Iteration: 37 (21 solution, 15 counterexamples)
[02/20 16:34:21]  Generator returned sat in 8.340353 secs.
[02/20 16:34:21]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 16:34:29]  Verifer returned unsat in 7.939773 secs.
[02/20 16:34:29]  sf_get_cex returned in 8.032740 secs.
[02/20 16:34:29]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 16:34:29]  --------------------------------------------------------------------------------
[02/20 16:34:29]  Iteration: 38 (22 solution, 15 counterexamples)
[02/20 16:35:30]  Generator returned sat in 59.933726 secs.
[02/20 16:35:30]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 1R > 0):
    + 1alpha + 1r_f
else:
    + -1alpha + 1r_f[0m
[02/20 16:35:37]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:35:37]  Verifer returned sat in 6.497837 secs.
[02/20 16:35:37]  sf_get_cex returned in 6.616045 secs.
[02/20 16:35:37]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0     -33323.666667            1.0          131.0     -33323.666667             0.0                     0.0             1.0           101.0                0.0      0.0          -1.0    NaN    NaN    NaN       0.0
1     -33191.666667       132000.0          132.0     -33223.666667             0.0                     0.0           100.0           101.0                0.0     32.0           0.0  132.0  100.0    0.0       0.0
2     -33058.666667       133032.0          133.0     -33123.666667             0.0                     0.0           100.0           101.0                0.0     65.0           0.0  133.0  100.0    0.0       0.0
3     -32924.666667       134065.0          134.0     -33023.666667             0.0                     0.0           100.0           101.0                0.0     99.0           0.0  134.0  100.0    0.0       0.0
4     -32789.666667       135099.0          135.0     -32923.666667             0.0                     0.0           100.0           101.0                0.0    134.0           0.0  135.0  100.0    0.0       0.0
5     -32653.666667       136134.0          136.0     -32823.666667             0.0                     0.0           100.0           100.0                1.0    170.0           1.0  136.0  100.0    0.0       1.0
6     -32518.666667       135170.0          135.0     -32723.666667             5.0                     0.0           100.0           100.0                1.0    200.0           1.0  135.0  100.0    5.0       1.0
7     -32384.666667       134205.0          134.0     -32623.666667            39.0                     5.0           100.0           100.0                1.0    200.0           1.0  134.0  100.0   34.0       1.0
8     -32251.666667       133239.0          133.0     -32523.666667            72.0                    39.0           100.0           100.0                2.0    200.0           1.0  133.0  100.0   33.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=2, loss_amount=72, beliefs_remain_consistent=True, beliefs_improve=True, alpha=1, buf_size=200, start_state=[0].[0m
[02/20 16:35:37]  --------------------------------------------------------------------------------
[02/20 16:35:37]  Iteration: 39 (22 solution, 16 counterexamples)
[02/20 16:37:09]  Generator returned sat in 90.490911 secs.
[02/20 16:37:09]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:37:51]  Verifer returned unsat in 42.098489 secs.
[02/20 16:37:51]  sf_get_cex returned in 42.229549 secs.
[02/20 16:37:51]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + -1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:37:51]  --------------------------------------------------------------------------------
[02/20 16:37:51]  Iteration: 40 (23 solution, 16 counterexamples)
[02/20 16:38:08]  Generator returned sat in 15.907130 secs.
[02/20 16:38:09]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 1R > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 16:38:22]  Verifer returned unsat in 12.936587 secs.
[02/20 16:38:22]  sf_get_cex returned in 13.038353 secs.
[02/20 16:38:22]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_qdel + 1R > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 16:38:22]  --------------------------------------------------------------------------------
[02/20 16:38:22]  Iteration: 41 (24 solution, 16 counterexamples)
[02/20 16:39:06]  Generator returned sat in 42.710917 secs.
[02/20 16:39:06]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 16:39:15]  Verifer returned unsat in 9.377569 secs.
[02/20 16:39:15]  sf_get_cex returned in 9.479522 secs.
[02/20 16:39:15]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 16:39:15]  --------------------------------------------------------------------------------
[02/20 16:39:15]  Iteration: 42 (25 solution, 16 counterexamples)
[02/20 16:39:21]  Generator returned sat in 4.149072 secs.
[02/20 16:39:21]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:39:32]  Verifer returned unsat in 10.481350 secs.
[02/20 16:39:32]  sf_get_cex returned in 10.574884 secs.
[02/20 16:39:32]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:39:32]  --------------------------------------------------------------------------------
[02/20 16:39:32]  Iteration: 43 (26 solution, 16 counterexamples)
[02/20 16:40:30]  Generator returned sat in 57.281438 secs.
[02/20 16:40:30]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + -1alpha + 1r_f[0m
[02/20 16:40:41]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:40:41]  Verifer returned sat in 10.716275 secs.
[02/20 16:40:41]  sf_get_cex returned in 10.822018 secs.
[02/20 16:40:41]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S      del_L  qdelay_t
0       -596.928571       1.000000     115.142857            -600.0        0.000000                     0.0           100.0      133.321429                0.0    3.071429          -1.0         NaN    NaN        NaN       0.0
1       -478.250000  118681.642857     118.678571            -500.0        0.000000                     0.0           100.0      133.321429                0.0   21.750000           0.0  118.678571  100.0   0.000000       0.0
2       -356.035714  122236.035714     122.214286            -400.0        0.000000                     0.0           100.0      133.321429                0.0   43.964286           0.0  122.214286  100.0   0.000000       0.0
3       -230.285714  125793.964286     125.750000            -300.0        0.000000                     0.0           100.0      133.321429                0.0   69.714286           0.0  125.750000  100.0   0.000000       0.0
4       -101.000000  129355.428571     129.285714            -200.0        0.000000                     0.0           100.0      133.321429                0.0   99.000000           0.0  129.285714  100.0   0.000000       0.0
5         31.821429  132920.428571     132.821429            -100.0        0.000000                     0.0           100.0      133.321429                0.0  131.821429           0.0  132.821429  100.0   0.000000       0.0
6        168.178571  136488.964286     136.357143               0.0        0.000000                     0.0           100.0      100.000000                1.0  168.178571           1.0  136.357143  100.0   0.000000       1.0
7        301.000000  132989.607143     132.821429             100.0        1.000000                     0.0           100.0      100.000000                1.0  200.000000           1.0  132.821429  100.0   1.000000       1.0
8        430.285714  129486.714286     129.285714             200.0       30.285714                     1.0           100.0      100.000000                1.0  200.000000           1.0  129.285714  100.0  29.285714       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, 
, large_loss_count=1, loss_amount=212/7, beliefs_remain_consistent=True, beliefs_improve=True, alpha=99/28, buf_size=200, start_state=[0].[0m
[02/20 16:40:41]  --------------------------------------------------------------------------------
[02/20 16:40:41]  Iteration: 44 (26 solution, 17 counterexamples)
[02/20 16:43:04]  Generator returned sat in 140.803662 secs.
[02/20 16:43:04]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 1max_c + -2alpha + 1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c[0m
[02/20 16:43:19]  Verifer returned unsat in 15.409727 secs.
[02/20 16:43:19]  sf_get_cex returned in 15.517291 secs.
[02/20 16:43:19]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 1max_c + -2alpha + 1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c[0m
[02/20 16:43:19]  --------------------------------------------------------------------------------
[02/20 16:43:19]  Iteration: 45 (27 solution, 17 counterexamples)
[02/20 16:43:32]  Generator returned sat in 11.152437 secs.
[02/20 16:43:32]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:43:39]  Verifer returned unsat in 7.206070 secs.
[02/20 16:43:39]  sf_get_cex returned in 7.298069 secs.
[02/20 16:43:39]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 16:43:39]  --------------------------------------------------------------------------------
[02/20 16:43:39]  Iteration: 46 (28 solution, 17 counterexamples)
[02/20 16:43:48]  Generator returned sat in 7.436749 secs.
[02/20 16:43:48]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:44:25]  Verifer returned unsat in 36.765351 secs.
[02/20 16:44:25]  sf_get_cex returned in 36.861499 secs.
[02/20 16:44:25]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:44:25]  --------------------------------------------------------------------------------
[02/20 16:44:25]  Iteration: 47 (29 solution, 17 counterexamples)
[02/20 16:44:33]  Generator returned sat in 6.096263 secs.
[02/20 16:44:33]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + -1alpha > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:44:45]  Verifer returned unsat in 11.563825 secs.
[02/20 16:44:45]  sf_get_cex returned in 11.659219 secs.
[02/20 16:44:45]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + -1alpha > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 16:44:45]  --------------------------------------------------------------------------------
[02/20 16:44:45]  Iteration: 48 (30 solution, 17 counterexamples)
[02/20 16:44:51]  Generator returned sat in 5.288446 secs.
[02/20 16:44:52]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + -1alpha > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:45:00]  Verifer returned unsat in 8.406245 secs.
[02/20 16:45:00]  sf_get_cex returned in 8.502682 secs.
[02/20 16:45:00]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + -1alpha > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:45:00]  --------------------------------------------------------------------------------
[02/20 16:45:00]  Iteration: 49 (31 solution, 17 counterexamples)
[02/20 16:45:08]  Generator returned sat in 6.169981 secs.
[02/20 16:45:08]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:45:24]  Verifer returned unsat in 16.030307 secs.
[02/20 16:45:24]  sf_get_cex returned in 16.126974 secs.
[02/20 16:45:24]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:45:24]  --------------------------------------------------------------------------------
[02/20 16:45:24]  Iteration: 50 (32 solution, 17 counterexamples)
[02/20 16:45:30]  Generator returned sat in 4.716532 secs.
[02/20 16:45:30]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c + -2alpha > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:45:35]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 16:45:35]  Verifer returned sat in 4.432926 secs.
[02/20 16:45:35]  sf_get_cex returned in 4.538472 secs.
[02/20 16:45:35]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A   del_S  del_L  qdelay_t
0        100167.375            1.0          1.000        100167.375             0.0                     0.0       66.583333           100.0                1.0      0.0          -1.0     NaN     NaN    NaN       1.0
1        100217.250        49875.0         49.875        100217.250             0.0                     0.0       66.583333           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
2        100267.125        49875.0         49.875        100267.125             0.0                     0.0       66.583333           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
3        100317.000        49875.0         49.875        100317.000             0.0                     0.0       66.583333           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
4        100366.875        49875.0         49.875        100366.875             0.0                     0.0       66.583333           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
5        100416.750        49875.0         49.875        100416.750             0.0                     0.0       66.583333           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
6        100466.625        49875.0         49.875        100466.625             0.0                     0.0       66.583333           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
7        100516.500        49875.0         49.875        100516.500             0.0                     0.0       66.583333           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
8        100566.375        49875.0         49.875        100566.375             0.0                     0.0       66.583333           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=401/24, buf_size=200, start_state=[0].[0m
[02/20 16:45:35]  --------------------------------------------------------------------------------
[02/20 16:45:35]  Iteration: 51 (32 solution, 18 counterexamples)
[02/20 16:47:33]  Generator returned sat in 116.067571 secs.
[02/20 16:47:33]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:47:42]  Verifer returned unsat in 8.942346 secs.
[02/20 16:47:42]  sf_get_cex returned in 9.041665 secs.
[02/20 16:47:42]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 16:47:42]  --------------------------------------------------------------------------------
[02/20 16:47:42]  Iteration: 52 (33 solution, 18 counterexamples)
[02/20 16:47:58]  Generator returned sat in 14.885219 secs.
[02/20 16:47:58]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_qdel > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 16:48:10]  Verifer returned unsat in 11.465471 secs.
[02/20 16:48:10]  sf_get_cex returned in 11.567452 secs.
[02/20 16:48:10]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_qdel > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 16:48:10]  --------------------------------------------------------------------------------
[02/20 16:48:10]  Iteration: 53 (34 solution, 18 counterexamples)
[02/20 16:48:34]  Generator returned sat in 22.379820 secs.
[02/20 16:48:34]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + 2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 16:48:39]  Improved number of small numbers from 94 to 130 out of a max of 130
[02/20 16:48:39]  Verifer returned sat in 4.922786 secs.
[02/20 16:48:39]  sf_get_cex returned in 5.033553 secs.
[02/20 16:48:39]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0    -107121.945312       0.999512       0.999756    -107121.945312             0.0                     0.0       62.999268           100.0                1.0      0.0          -1.0        NaN        NaN    NaN       1.0
1    -107077.946289   43999.023438      43.999023    -107077.946289             0.0                     0.0       62.999268           100.0                0.0      0.0           0.0  43.999023  43.999023    0.0       0.0
2    -107033.947266   43999.023438      43.999023    -107033.947266             0.0                     0.0       62.999268           100.0                0.0      0.0           0.0  43.999023  43.999023    0.0       0.0
3    -106989.948242   43999.023438      43.999023    -106989.948242             0.0                     0.0       62.999268           100.0                0.0      0.0           0.0  43.999023  43.999023    0.0       0.0
4    -106945.949219   43999.023438      43.999023    -106945.949219             0.0                     0.0       62.999268           100.0                0.0      0.0           0.0  43.999023  43.999023    0.0       0.0
5    -106901.950195   43999.023438      43.999023    -106901.950195             0.0                     0.0       62.999268           100.0                0.0      0.0           0.0  43.999023  43.999023    0.0       0.0
6    -106857.951172   43999.023438      43.999023    -106857.951172             0.0                     0.0       62.999268           100.0                0.0      0.0           0.0  43.999023  43.999023    0.0       0.0
7    -106813.952148   43999.023438      43.999023    -106813.952148             0.0                     0.0       62.999268           100.0                0.0      0.0           0.0  43.999023  43.999023    0.0       0.0
8    -106769.953125   43999.023438      43.999023    -106769.953125             0.0                     0.0       62.999268           100.0                0.0      0.0           0.0  43.999023  43.999023    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77825/4096, buf_size=200, start_state=[0].[0m
[02/20 16:48:39]  --------------------------------------------------------------------------------
[02/20 16:48:39]  Iteration: 54 (34 solution, 19 counterexamples)
[02/20 16:53:36]  Generator returned sat in 295.274605 secs.
[02/20 16:53:36]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:53:54]  Verifer returned unsat in 17.974123 secs.
[02/20 16:53:54]  sf_get_cex returned in 18.084379 secs.
[02/20 16:53:54]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 16:53:54]  --------------------------------------------------------------------------------
[02/20 16:53:54]  Iteration: 55 (35 solution, 19 counterexamples)
[02/20 16:54:28]  Generator returned sat in 32.237542 secs.
[02/20 16:54:28]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 16:54:37]  Verifer returned unsat in 8.466852 secs.
[02/20 16:54:37]  sf_get_cex returned in 8.566055 secs.
[02/20 16:54:37]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -1max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 16:54:37]  --------------------------------------------------------------------------------
[02/20 16:54:37]  Iteration: 56 (36 solution, 19 counterexamples)
[02/20 16:54:45]  Generator returned sat in 6.681840 secs.
[02/20 16:54:45]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 16:54:55]  Verifer returned unsat in 9.088410 secs.
[02/20 16:54:55]  sf_get_cex returned in 9.192276 secs.
[02/20 16:54:55]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 16:54:55]  --------------------------------------------------------------------------------
[02/20 16:54:55]  Iteration: 57 (37 solution, 19 counterexamples)
[02/20 16:55:31]  Generator returned sat in 34.622576 secs.
[02/20 16:55:31]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + -1alpha + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1alpha + 1r_f[0m
[02/20 16:55:44]  Improved number of small numbers from 94 to 130 out of a max of 130
[02/20 16:55:44]  Verifer returned sat in 12.680594 secs.
[02/20 16:55:44]  sf_get_cex returned in 12.843826 secs.
[02/20 16:55:44]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t    queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0     -93421.437500       0.999268      26.986816     -93497.449219             0.0                     0.0       99.999756      100.999512                0.0  76.011719          -1.0        NaN        NaN    NaN       0.0
1     -93398.448730   23064.781250      22.988770     -93398.448730             0.0                     0.0       99.999756      100.999512                0.0   0.000000           0.0  22.988770  99.000488    0.0       0.0
2     -93379.458008   18990.722656      18.990723     -93379.458008             0.0                     0.0       99.999756      100.999512                0.0   0.000000           0.0  18.990723  18.990723    0.0       0.0
3     -93364.465332   14992.675781      14.992676     -93364.465332             0.0                     0.0       99.999756      100.999512                0.0   0.000000           0.0  14.992676  14.992676    0.0       0.0
4     -93353.470703   10994.628906      10.994629     -93353.470703             0.0                     0.0       99.999756      100.999512                0.0   0.000000           0.0  10.994629  10.994629    0.0       0.0
5     -93346.474121    6996.582031       6.996582     -93346.474121             0.0                     0.0       99.999756      100.999512                0.0   0.000000           0.0   6.996582   6.996582    0.0       0.0
6     -93342.476074    3998.046875       3.998047     -93342.476074             0.0                     0.0       99.999756      100.999512                0.0   0.000000           0.0   3.998047   3.998047    0.0       0.0
7     -93334.479980    7996.093750       7.996094     -93334.479980             0.0                     0.0       99.999756      100.999512                0.0   0.000000           0.0   7.996094   7.996094    0.0       0.0
8     -93330.481934    3998.046875       3.998047     -93330.481934             0.0                     0.0       99.999756      100.999512                0.0   0.000000           0.0   3.998047   3.998047    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2047/512, buf_size=200, start_state=[0].[0m
[02/20 16:55:44]  --------------------------------------------------------------------------------
[02/20 16:55:44]  Iteration: 58 (37 solution, 20 counterexamples)
[02/20 16:57:53]  Generator returned sat in 127.322162 secs.
[02/20 16:57:53]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1alpha + 1r_f[0m
[02/20 16:58:09]  Improved number of small numbers from 76 to 85 out of a max of 130
[02/20 16:58:09]  Verifer returned sat in 15.777069 secs.
[02/20 16:58:09]  sf_get_cex returned in 15.873773 secs.
[02/20 16:58:09]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0     -93474.720868       0.999023      40.374725     -93474.720868             0.0                     0.0       60.374512           100.0                0.0      0.0          -1.0        NaN        NaN    NaN       0.0
1     -93415.345410   59375.457764      59.375458     -93415.345410             0.0                     0.0       60.374512           100.0                0.0      0.0           0.0  59.375458  59.375458    0.0       0.0
2     -93374.970685   40374.725342      40.374725     -93374.970685             0.0                     0.0       60.374512           100.0                0.0      0.0           0.0  40.374725  40.374725    0.0       0.0
3     -93315.595227   59375.457764      59.375458     -93315.595227             0.0                     0.0       60.374512           100.0                0.0      0.0           0.0  59.375458  59.375458    0.0       0.0
4     -93275.220502   40374.725342      40.374725     -93275.220502             0.0                     0.0       60.374512           100.0                0.0      0.0           0.0  40.374725  40.374725    0.0       0.0
5     -93215.845044   59375.457764      59.375458     -93215.845044             0.0                     0.0       60.374512           100.0                0.0      0.0           0.0  59.375458  59.375458    0.0       0.0
6     -93175.470319   40374.725342      40.374725     -93175.470319             0.0                     0.0       60.374512           100.0                0.0      0.0           0.0  40.374725  40.374725    0.0       0.0
7     -93116.094861   59375.457764      59.375458     -93116.094861             0.0                     0.0       60.374512           100.0                0.0      0.0           0.0  59.375458  59.375458    0.0       0.0
8     -93075.720136   40374.725342      40.374725     -93075.720136             0.0                     0.0       60.374512           100.0                0.0      0.0           0.0  40.374725  40.374725    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77827/4096, buf_size=200, start_state=[0].[0m
[02/20 16:58:09]  --------------------------------------------------------------------------------
[02/20 16:58:09]  Iteration: 59 (37 solution, 21 counterexamples)
[02/20 17:05:04]  Generator returned sat in 412.671374 secs.
[02/20 17:05:04]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + -2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 17:05:29]  Verifer returned unsat in 25.650712 secs.
[02/20 17:05:29]  sf_get_cex returned in 25.747317 secs.
[02/20 17:05:29]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2max_c + -2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 17:05:30]  --------------------------------------------------------------------------------
[02/20 17:05:30]  Iteration: 60 (38 solution, 21 counterexamples)
[02/20 17:06:24]  Generator returned sat in 52.213866 secs.
[02/20 17:06:24]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 2r_f[0m
[02/20 17:06:32]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 17:06:32]  Verifer returned sat in 7.715450 secs.
[02/20 17:06:32]  sf_get_cex returned in 7.817101 secs.
[02/20 17:06:32]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0         -117768.0            1.0           34.0         -117801.0             0.0                     0.0            99.0           186.5                1.0     33.0          -1.0    NaN    NaN    NaN       1.0
1         -117700.0        68033.0           68.0         -117701.0             0.0                     0.0           100.0           186.5                0.0      1.0           0.0   68.0  100.0    0.0       0.0
2         -117564.0       136001.0          136.0         -117601.0             0.0                     0.0           100.0           186.5                0.0     37.0           0.0  136.0  100.0    0.0       0.0
3         -117292.0       272037.0          272.0         -117501.0             9.0                     0.0           100.0           100.0                0.0    200.0           1.0  272.0  100.0    9.0       0.0
4         -117193.0        99209.0           99.0         -117401.0             9.0                     9.0           100.0           100.0                1.0    199.0           1.0   99.0  100.0    0.0       1.0
5         -117094.0        99208.0           99.0         -117301.0             9.0                     9.0           100.0           100.0                2.0    198.0           1.0   99.0  100.0    0.0       2.0
6         -116995.0        99207.0           99.0         -117201.0             9.0                     9.0           100.0           100.0                1.0    197.0           1.0   99.0  100.0    0.0       1.0
7         -116896.0        99206.0           99.0         -117101.0             9.0                     9.0           100.0           100.0                1.0    196.0           1.0   99.0  100.0    0.0       1.0
8         -116797.0        99205.0           99.0         -117001.0             9.0                     9.0           100.0           100.0                1.0    195.0           1.0   99.0  100.0    0.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=9, beliefs_remain_consistent=True, beliefs_improve=True, alpha=1, buf_size=200, start_state=[0].[0m
[02/20 17:06:32]  --------------------------------------------------------------------------------
[02/20 17:06:32]  Iteration: 61 (38 solution, 22 counterexamples)
[02/20 17:10:01]  Generator returned sat in 207.209347 secs.
[02/20 17:10:01]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_qdel > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 17:10:14]  Verifer returned unsat in 12.995092 secs.
[02/20 17:10:14]  sf_get_cex returned in 13.111401 secs.
[02/20 17:10:14]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_qdel > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 17:10:14]  --------------------------------------------------------------------------------
[02/20 17:10:14]  Iteration: 62 (39 solution, 22 counterexamples)
[02/20 17:12:10]  Generator returned sat in 113.909788 secs.
[02/20 17:12:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + 1alpha + -2r_f > 0):
    + 2r_f
else:
    + 1/2r_f[0m
[02/20 17:12:32]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 17:12:32]  Verifer returned sat in 21.636911 secs.
[02/20 17:12:32]  sf_get_cex returned in 21.754420 secs.
[02/20 17:12:32]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t    queue_t  utilized_0,t      del_A     del_S  del_L  qdelay_t
0         -45.46875        1.00000       1.515625          -55.5625             0.0                     0.0           1.000           244.0                2.0   10.09375          -1.0        NaN       NaN    NaN       2.0
1         -42.43750     3041.34375       3.031250          -42.4375             0.0                     0.0          13.125           244.0                0.0    0.00000           0.0    3.03125   13.1250    0.0       0.0
2         -36.37500     6062.50000       6.062500          -36.3750             0.0                     0.0          13.125           244.0                0.0    0.00000           0.0    6.06250    6.0625    0.0       0.0
3         -24.25000    12125.00000      12.125000          -24.2500             0.0                     0.0          13.125           244.0                0.0    0.00000           0.0   12.12500   12.1250    0.0       0.0
4           0.00000    24250.00000      24.250000            0.0000             0.0                     0.0          24.250           244.0                0.0    0.00000           0.0   24.25000   24.2500    0.0       0.0
5          48.50000    48500.00000      48.500000           48.5000             0.0                     0.0          48.500           244.0                0.0    0.00000           0.0   48.50000   48.5000    0.0       0.0
6         145.50000    97000.00000      97.000000          145.5000             0.0                     0.0          97.000           244.0                0.0    0.00000           0.0   97.00000   97.0000    0.0       0.0
7         339.50000   194000.00000     194.000000          245.5000             0.0                     0.0         100.000           244.0                0.0   94.00000           0.0  194.00000  100.0000    0.0       0.0
8         727.50000   388094.00000     388.000000          345.5000           182.0                     0.0         100.000           100.0                0.0  200.00000           1.0  388.00000  100.0000  182.0       0.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=182, beliefs_remain_consistent=True, beliefs_improve=True, alpha=1, buf_size=200, start_state=[0].[0m
[02/20 17:12:32]  --------------------------------------------------------------------------------
[02/20 17:12:32]  Iteration: 63 (39 solution, 23 counterexamples)
[02/20 17:15:49]  Generator returned sat in 194.717868 secs.
[02/20 17:15:49]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:16:07]  Verifer returned unsat in 18.394099 secs.
[02/20 17:16:07]  sf_get_cex returned in 18.490251 secs.
[02/20 17:16:07]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:16:07]  --------------------------------------------------------------------------------
[02/20 17:16:07]  Iteration: 64 (40 solution, 23 counterexamples)
[02/20 17:16:22]  Generator returned sat in 12.995902 secs.
[02/20 17:16:22]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 17:16:53]  Verifer returned unsat in 30.756834 secs.
[02/20 17:16:53]  sf_get_cex returned in 30.853688 secs.
[02/20 17:16:53]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 17:16:53]  --------------------------------------------------------------------------------
[02/20 17:16:53]  Iteration: 65 (41 solution, 23 counterexamples)
[02/20 17:17:18]  Generator returned sat in 22.483002 secs.
[02/20 17:17:18]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 17:17:37]  Verifer returned unsat in 18.789284 secs.
[02/20 17:17:37]  sf_get_cex returned in 18.905294 secs.
[02/20 17:17:37]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 17:17:37]  --------------------------------------------------------------------------------
[02/20 17:17:37]  Iteration: 66 (42 solution, 23 counterexamples)
[02/20 17:17:51]  Generator returned sat in 12.406657 secs.
[02/20 17:17:52]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 17:18:19]  Verifer returned unsat in 27.575051 secs.
[02/20 17:18:19]  sf_get_cex returned in 27.687627 secs.
[02/20 17:18:19]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 17:18:19]  --------------------------------------------------------------------------------
[02/20 17:18:19]  Iteration: 67 (43 solution, 23 counterexamples)
[02/20 17:18:36]  Generator returned sat in 14.871125 secs.
[02/20 17:18:36]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:18:46]  Verifer returned unsat in 9.880173 secs.
[02/20 17:18:46]  sf_get_cex returned in 9.980490 secs.
[02/20 17:18:46]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:18:46]  --------------------------------------------------------------------------------
[02/20 17:18:46]  Iteration: 68 (44 solution, 23 counterexamples)
[02/20 17:19:45]  Generator returned sat in 56.929032 secs.
[02/20 17:19:46]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:20:00]  Verifer returned unsat in 14.581139 secs.
[02/20 17:20:00]  sf_get_cex returned in 14.694896 secs.
[02/20 17:20:00]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:20:00]  --------------------------------------------------------------------------------
[02/20 17:20:00]  Iteration: 69 (45 solution, 23 counterexamples)
[02/20 17:20:12]  Generator returned sat in 9.241118 secs.
[02/20 17:20:12]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:20:48]  Verifer returned unsat in 36.153428 secs.
[02/20 17:20:48]  sf_get_cex returned in 36.255853 secs.
[02/20 17:20:48]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:20:48]  --------------------------------------------------------------------------------
[02/20 17:20:48]  Iteration: 70 (46 solution, 23 counterexamples)
[02/20 17:21:01]  Generator returned sat in 10.449949 secs.
[02/20 17:21:01]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:21:12]  Verifer returned unsat in 10.882918 secs.
[02/20 17:21:12]  sf_get_cex returned in 10.972038 secs.
[02/20 17:21:12]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:21:12]  --------------------------------------------------------------------------------
[02/20 17:21:12]  Iteration: 71 (47 solution, 23 counterexamples)
[02/20 17:21:43]  Generator returned sat in 29.161589 secs.
[02/20 17:21:43]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2alpha + -1r_f > 0):
    + 2min_c
else:
    + 1/2r_f[0m
[02/20 17:21:58]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 17:21:58]  Verifer returned sat in 14.921936 secs.
[02/20 17:21:58]  sf_get_cex returned in 15.058587 secs.
[02/20 17:21:58]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0     -16736.996109       1.000000     199.221790     -16736.996109             0.0                     0.0           100.0           100.0                1.0      0.0          -1.0        NaN        NaN    NaN       1.0
1     -16637.385214   99610.894942      99.610895     -16637.385214             0.0                     0.0           100.0           100.0                0.0      0.0           0.0  99.610895  99.610895    0.0       0.0
2     -16587.579767   49805.447471      49.805447     -16587.579767             0.0                     0.0           100.0           100.0                0.0      0.0           0.0  49.805447  49.805447    0.0       0.0
3     -16562.677043   24902.723735      24.902724     -16562.677043             0.0                     0.0           100.0           100.0                0.0      0.0           0.0  24.902724  24.902724    0.0       0.0
4     -16550.225681   12451.361868      12.451362     -16550.225681             0.0                     0.0           100.0           100.0                0.0      0.0           0.0  12.451362  12.451362    0.0       0.0
5     -16544.000000    6225.680934       6.225681     -16544.000000             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   6.225681   6.225681    0.0       0.0
6     -16540.887160    3112.840467       3.112840     -16540.887160             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   3.112840   3.112840    0.0       0.0
7     -16539.330739    1556.420233       1.556420     -16539.330739             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   1.556420   1.556420    0.0       0.0
8     -16538.552529     778.210117       0.778210     -16538.552529             0.0                     0.0           100.0           100.0                0.0      0.0           0.0   0.778210   0.778210    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=100/257, buf_size=200, start_state=[0].[0m
[02/20 17:21:58]  --------------------------------------------------------------------------------
[02/20 17:21:58]  Iteration: 72 (47 solution, 24 counterexamples)
[02/20 17:25:37]  Generator returned sat in 216.891191 secs.
[02/20 17:25:37]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 17:26:07]  Improved number of small numbers from 81 to 81 out of a max of 130
[02/20 17:26:07]  Verifer returned sat in 29.048508 secs.
[02/20 17:26:07]  sf_get_cex returned in 29.145457 secs.
[02/20 17:26:07]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0     -16943.497511       0.999756      37.666771     -16943.497511             0.0                     0.0       66.666667           100.0                1.0      0.0          -1.0        NaN        NaN    NaN       1.0
1     -16900.997424   42500.087193      42.500087     -16900.997424             0.0                     0.0       66.666667           100.0                0.0      0.0           0.0  42.500087  42.500087    0.0       0.0
2     -16853.664021   47333.403088      47.333403     -16853.664021             0.0                     0.0       66.666667           100.0                0.0      0.0           0.0  47.333403  47.333403    0.0       0.0
3     -16801.497302   52166.718983      52.166719     -16801.497302             0.0                     0.0       66.666667           100.0                0.0      0.0           0.0  52.166719  52.166719    0.0       0.0
4     -16744.497267   57000.034877      57.000035     -16744.497267             0.0                     0.0       66.666667           100.0                0.0      0.0           0.0  57.000035  57.000035    0.0       0.0
5     -16682.663916   61833.350772      61.833351     -16682.663916             0.0                     0.0       66.666667           100.0                0.0      0.0           0.0  61.833351  61.833351    0.0       0.0
6     -16615.997250   66666.666667      66.666667     -16615.997250             0.0                     0.0       66.666667           100.0                0.0      0.0           0.0  66.666667  66.666667    0.0       0.0
7     -16582.663916   33333.333333      33.333333     -16582.663916             0.0                     0.0       66.666667           100.0                0.0      0.0           0.0  33.333333  33.333333    0.0       0.0
8     -16544.497267   38166.649228      38.166649     -16544.497267             0.0                     0.0       66.666667           100.0                0.0      0.0           0.0  38.166649  38.166649    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=831485/172032, buf_size=200, start_state=[0].[0m
[02/20 17:26:07]  --------------------------------------------------------------------------------
[02/20 17:26:07]  Iteration: 73 (47 solution, 25 counterexamples)
[02/20 17:31:35]  Generator returned sat in 325.869098 secs.
[02/20 17:31:35]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:31:51]  Verifer returned unsat in 15.670148 secs.
[02/20 17:31:51]  sf_get_cex returned in 15.778026 secs.
[02/20 17:31:51]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:31:51]  --------------------------------------------------------------------------------
[02/20 17:31:51]  Iteration: 74 (48 solution, 25 counterexamples)
[02/20 17:32:07]  Generator returned sat in 14.110149 secs.
[02/20 17:32:07]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:32:19]  Verifer returned unsat in 11.829503 secs.
[02/20 17:32:19]  sf_get_cex returned in 11.936777 secs.
[02/20 17:32:19]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:32:19]  --------------------------------------------------------------------------------
[02/20 17:32:19]  Iteration: 75 (49 solution, 25 counterexamples)
[02/20 17:32:33]  Generator returned sat in 11.273841 secs.
[02/20 17:32:33]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:32:44]  Verifer returned unsat in 11.359925 secs.
[02/20 17:32:44]  sf_get_cex returned in 11.477334 secs.
[02/20 17:32:44]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:32:45]  --------------------------------------------------------------------------------
[02/20 17:32:45]  Iteration: 76 (50 solution, 25 counterexamples)
[02/20 17:33:05]  Generator returned sat in 17.928721 secs.
[02/20 17:33:05]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 17:33:17]  Improved number of small numbers from 85 to 86 out of a max of 130
[02/20 17:33:17]  Verifer returned sat in 11.981380 secs.
[02/20 17:33:17]  sf_get_cex returned in 12.108643 secs.
[02/20 17:33:17]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t    queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0      11694.561321       0.999268      41.665771      11676.560344             0.0                     0.0       60.666341           100.0                0.0  18.000977          -1.0        NaN        NaN    NaN       0.0
1      11736.227174   41683.853841      41.665853      11736.227174             0.0                     0.0       60.666341           100.0                0.0   0.000000           0.0  41.665853  59.666829    0.0       0.0
2      11777.893027   41665.852865      41.665853      11777.893027             0.0                     0.0       60.666341           100.0                0.0   0.000000           0.0  41.665853  41.665853    0.0       0.0
3      11819.558880   41665.852865      41.665853      11819.558880             0.0                     0.0       60.666341           100.0                0.0   0.000000           0.0  41.665853  41.665853    0.0       0.0
4      11861.224732   41665.852865      41.665853      11861.224732             0.0                     0.0       60.666341           100.0                0.0   0.000000           0.0  41.665853  41.665853    0.0       0.0
5      11902.890585   41665.852865      41.665853      11902.890585             0.0                     0.0       60.666341           100.0                0.0   0.000000           0.0  41.665853  41.665853    0.0       0.0
6      11944.556438   41665.852865      41.665853      11944.556438             0.0                     0.0       60.666341           100.0                0.0   0.000000           0.0  41.665853  41.665853    0.0       0.0
7      11986.222291   41665.852865      41.665853      11986.222291             0.0                     0.0       60.666341           100.0                0.0   0.000000           0.0  41.665853  41.665853    0.0       0.0
8      12027.888144   41665.852865      41.665853      12027.888144             0.0                     0.0       60.666341           100.0                0.0   0.000000           0.0  41.665853  41.665853    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=38913/2048, buf_size=200, start_state=[0].[0m
[02/20 17:33:17]  --------------------------------------------------------------------------------
[02/20 17:33:17]  Iteration: 77 (50 solution, 26 counterexamples)
[02/20 17:38:56]  Generator returned sat in 336.445385 secs.
[02/20 17:38:56]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 17:39:25]  Verifer returned unsat in 28.704564 secs.
[02/20 17:39:25]  sf_get_cex returned in 28.808142 secs.
[02/20 17:39:25]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 17:39:25]  --------------------------------------------------------------------------------
[02/20 17:39:25]  Iteration: 78 (51 solution, 26 counterexamples)
[02/20 17:39:39]  Generator returned sat in 11.698506 secs.
[02/20 17:39:39]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 17:40:58]  Verifer returned unsat in 79.039069 secs.
[02/20 17:40:58]  sf_get_cex returned in 79.153047 secs.
[02/20 17:40:58]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 17:40:58]  --------------------------------------------------------------------------------
[02/20 17:40:58]  Iteration: 79 (52 solution, 26 counterexamples)
[02/20 17:41:12]  Generator returned sat in 11.739269 secs.
[02/20 17:41:13]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 1max_c + 2alpha > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 17:41:26]  Verifer returned unsat in 13.542814 secs.
[02/20 17:41:26]  sf_get_cex returned in 13.652162 secs.
[02/20 17:41:26]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 1max_c + 2alpha > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 17:41:26]  --------------------------------------------------------------------------------
[02/20 17:41:26]  Iteration: 80 (53 solution, 26 counterexamples)
[02/20 17:41:44]  Generator returned sat in 15.053591 secs.
[02/20 17:41:44]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:42:08]  Verifer returned unsat in 23.755053 secs.
[02/20 17:42:08]  sf_get_cex returned in 23.863563 secs.
[02/20 17:42:08]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 17:42:08]  --------------------------------------------------------------------------------
[02/20 17:42:08]  Iteration: 81 (54 solution, 26 counterexamples)
[02/20 17:44:32]  Generator returned sat in 141.871339 secs.
[02/20 17:44:32]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 2r_f[0m
[02/20 17:44:42]  Improved number of small numbers from 75 to 75 out of a max of 130
[02/20 17:44:42]  Verifer returned sat in 10.080644 secs.
[02/20 17:44:42]  sf_get_cex returned in 10.181328 secs.
[02/20 17:44:42]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S       del_L  qdelay_t
0      75228.408671       0.999268      20.374725      75128.526255        0.000000                0.000000           100.0       223.99707                1.0   99.882416          -1.0         NaN    NaN         NaN       1.0
1      75269.158122   40849.333099      40.749451      75228.526255        0.000000                0.000000           100.0       223.99707                0.0   40.631866           0.0   40.749451  100.0    0.000000       0.0
2      75350.657023   81539.533234      81.498901      75328.526255        0.000000                0.000000           100.0       223.99707                0.0   22.130768           0.0   81.498901  100.0    0.000000       0.0
3      75513.654826  163019.933502     162.997803      75428.526255        0.000000                0.000000           100.0       223.99707                0.0   85.128571           0.0  162.997803  100.0    0.000000       0.0
4      75594.654094   81084.396149      80.999268      75528.526255        0.000000                0.000000           100.0       223.99707                0.0   66.127838           0.0   80.999268  100.0    0.000000       0.0
5      75756.652629  162064.662994     161.998535      75628.526255        0.000000                0.000000           100.0       223.99707                0.0  128.126373           0.0  161.998535  100.0    0.000000       0.0
6      76080.649699  324125.196686     323.997070      75728.526255      152.123444                0.000000           100.0       100.00000                1.0  200.000000           1.0  323.997070  100.0  152.123444       1.0
7      76161.648967   81351.391022      80.999268      75828.526255      152.123444              152.123444           100.0       100.00000                1.0  180.999268           1.0   80.999268  100.0    0.000000       1.0
8      76242.648234   81332.390289      80.999268      75928.526255      152.123444              152.123444           100.0       100.00000                2.0  161.998535           1.0   80.999268  100.0    0.000000       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=4984781/32768, beliefs_remain_consistent=True, beliefs_improve=True, alpha=77827/4096, buf_size=200, start_state=[0].[0m
[02/20 17:44:42]  --------------------------------------------------------------------------------
[02/20 17:44:42]  Iteration: 82 (54 solution, 27 counterexamples)
[02/20 17:48:43]  Generator returned sat in 238.310829 secs.
[02/20 17:48:43]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 17:49:10]  Improved number of small numbers from 67 to 67 out of a max of 130
[02/20 17:49:10]  Verifer returned sat in 26.145126 secs.
[02/20 17:49:10]  sf_get_cex returned in 26.251606 secs.
[02/20 17:49:10]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t   queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0      80190.921226       0.999268      27.929927      80172.394216             0.0                     0.0       66.982482           100.0                2.0  18.52701          -1.0        NaN        NaN    NaN       2.0
1      80238.377430   47474.731608      47.456205      80238.377430             0.0                     0.0       66.982482           100.0                0.0   0.00000           0.0  47.456205  65.983214    0.0       0.0
2      80285.833635   47456.204598      47.456205      80285.833635             0.0                     0.0       66.982482           100.0                0.0   0.00000           0.0  47.456205  47.456205    0.0       0.0
3      80333.289839   47456.204598      47.456205      80333.289839             0.0                     0.0       66.982482           100.0                0.0   0.00000           0.0  47.456205  47.456205    0.0       0.0
4      80380.746044   47456.204598      47.456205      80380.746044             0.0                     0.0       66.982482           100.0                0.0   0.00000           0.0  47.456205  47.456205    0.0       0.0
5      80428.202249   47456.204598      47.456205      80428.202249             0.0                     0.0       66.982482           100.0                0.0   0.00000           0.0  47.456205  47.456205    0.0       0.0
6      80475.658453   47456.204598      47.456205      80475.658453             0.0                     0.0       66.982482           100.0                0.0   0.00000           0.0  47.456205  47.456205    0.0       0.0
7      80523.114658   47456.204598      47.456205      80523.114658             0.0                     0.0       66.982482           100.0                0.0   0.00000           0.0  47.456205  47.456205    0.0       0.0
8      80570.570862   47456.204598      47.456205      80570.570862             0.0                     0.0       66.982482           100.0                0.0   0.00000           0.0  47.456205  47.456205    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1519613/77824, buf_size=200, start_state=[0].[0m
[02/20 17:49:10]  --------------------------------------------------------------------------------
[02/20 17:49:10]  Iteration: 83 (54 solution, 28 counterexamples)
[02/20 17:54:18]  Generator returned sat in 305.917057 secs.
[02/20 17:54:18]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + -2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + -1alpha + 1r_f[0m
[02/20 17:54:38]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 17:54:38]  Verifer returned sat in 19.796697 secs.
[02/20 17:54:38]  sf_get_cex returned in 19.906324 secs.
[02/20 17:54:38]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S      del_L  qdelay_t
0       -500.000000       1.000000     115.307692            -500.0        0.000000                0.000000        3.576923      137.269231                1.0    0.000000          -1.0         NaN    NaN        NaN       1.0
1       -381.115385  118884.615385     118.884615            -400.0        0.000000                0.000000      100.000000      137.269231                0.0   18.884615           0.0  118.884615  100.0   0.000000       0.0
2       -258.653846  122480.423077     122.461538            -300.0        0.000000                0.000000      100.000000      137.269231                0.0   41.346154           0.0  122.461538  100.0   0.000000       0.0
3       -132.615385  126079.807692     126.038462            -200.0        0.000000                0.000000      100.000000      137.269231                0.0   67.384615           0.0  126.038462  100.0   0.000000       0.0
4         -3.000000  129682.769231     129.615385            -100.0        0.000000                0.000000      100.000000      137.269231                0.0   97.000000           0.0  129.615385  100.0   0.000000       0.0
5        130.192308  133289.307692     133.192308               0.0        0.000000                0.000000      100.000000      137.269231                0.0  130.192308           0.0  133.192308  100.0   0.000000       0.0
6        266.961538  136899.423077     136.769231             100.0        0.000000                0.000000      100.000000      100.000000                1.0  166.961538           1.0  136.769231  100.0   0.000000       1.0
7        400.153846  133359.269231     133.192308             200.0        0.153846                0.000000      100.000000      100.000000                1.0  200.000000           1.0  133.192308  100.0   0.153846       1.0
8        529.769231  129815.538462     129.615385             300.0       29.769231                0.153846      100.000000      100.000000                1.0  200.000000           1.0  129.615385  100.0  29.615385       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, 
, large_loss_count=1, loss_amount=387/13, beliefs_remain_consistent=True, beliefs_improve=True, alpha=93/26, buf_size=200, start_state=[0].[0m
[02/20 17:54:38]  --------------------------------------------------------------------------------
[02/20 17:54:38]  Iteration: 84 (54 solution, 29 counterexamples)
[02/20 18:00:12]  Generator returned sat in 331.010834 secs.
[02/20 18:00:12]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + 2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 18:00:27]  Verifer returned unsat in 14.548002 secs.
[02/20 18:00:27]  sf_get_cex returned in 14.652718 secs.
[02/20 18:00:27]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + 2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 18:00:27]  --------------------------------------------------------------------------------
[02/20 18:00:27]  Iteration: 85 (55 solution, 29 counterexamples)
[02/20 18:00:47]  Generator returned sat in 17.148305 secs.
[02/20 18:00:47]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 18:01:09]  Verifer returned unsat in 22.033339 secs.
[02/20 18:01:09]  sf_get_cex returned in 22.139263 secs.
[02/20 18:01:09]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 18:01:09]  --------------------------------------------------------------------------------
[02/20 18:01:09]  Iteration: 86 (56 solution, 29 counterexamples)
[02/20 18:02:04]  Generator returned sat in 52.821892 secs.
[02/20 18:02:05]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + -1alpha + 1r_f[0m
[02/20 18:02:24]  Improved number of small numbers from 68 to 74 out of a max of 130
[02/20 18:02:24]  Verifer returned sat in 18.723156 secs.
[02/20 18:02:24]  sf_get_cex returned in 18.818362 secs.
[02/20 18:02:24]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S      del_L  qdelay_t
0    -221445.865833       0.999512     115.142648    -221448.938256        0.000000                0.000000       99.000244      140.892578                0.0    3.072423          -1.0         NaN    NaN        NaN       0.0
1    -221327.187462  118681.443307     118.678371    -221348.938256        0.000000                0.000000      100.000000      140.892578                0.0   21.750793           0.0  118.678371  100.0   0.000000       0.0
2    -221204.973368  122235.844683     122.214094    -221248.938256        0.000000                0.000000      100.000000      140.892578                0.0   43.964887           0.0  122.214094  100.0   0.000000       0.0
3    -221079.223552  125793.781782     125.749817    -221148.938256        0.000000                0.000000      100.000000      140.892578                0.0   69.714704           0.0  125.749817  100.0   0.000000       0.0
4    -220949.938012  129355.254604     129.285540    -221048.938256        0.000000                0.000000      100.000000      140.892578                0.0   99.000244           0.0  129.285540  100.0   0.000000       0.0
5    -220817.116749  132920.263149     132.821263    -220948.938256        0.000000                0.000000      100.000000      140.892578                0.0  131.821507           0.0  132.821263  100.0   0.000000       0.0
6    -220680.759763  136488.807417     136.356986    -220848.938256        0.000000                0.000000      100.000000      100.000000                1.0  168.178493           1.0  136.356986  100.0   0.000000       1.0
7    -220547.938500  132989.441398     132.821263    -220748.938256        0.999756                0.000000      100.000000      100.000000                1.0  200.000000           1.0  132.821263  100.0   0.999756       1.0
8    -220418.652960  129486.539655     129.285540    -220648.938256       30.285296                0.999756      100.000000      100.000000                1.0  200.000000           1.0  129.285540  100.0  29.285540       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, 
, large_loss_count=1, loss_amount=217085/7168, beliefs_remain_consistent=True, beliefs_improve=True, alpha=405505/114688, buf_size=200, start_state=[0].[0m
[02/20 18:02:24]  --------------------------------------------------------------------------------
[02/20 18:02:24]  Iteration: 87 (56 solution, 30 counterexamples)
[02/20 18:11:18]  Generator returned sat in 531.724745 secs.
[02/20 18:11:18]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 18:11:33]  Verifer returned unsat in 14.202261 secs.
[02/20 18:11:33]  sf_get_cex returned in 14.315335 secs.
[02/20 18:11:33]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 18:11:33]  --------------------------------------------------------------------------------
[02/20 18:11:33]  Iteration: 88 (57 solution, 30 counterexamples)
[02/20 18:11:52]  Generator returned sat in 17.078550 secs.
[02/20 18:11:52]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 18:12:06]  Verifer returned unsat in 13.892902 secs.
[02/20 18:12:06]  sf_get_cex returned in 14.000318 secs.
[02/20 18:12:06]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 18:12:07]  --------------------------------------------------------------------------------
[02/20 18:12:07]  Iteration: 89 (58 solution, 30 counterexamples)
[02/20 18:13:04]  Generator returned sat in 54.328477 secs.
[02/20 18:13:04]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1alpha + 1r_f[0m
[02/20 18:13:22]  Verifer returned unsat in 17.668022 secs.
[02/20 18:13:22]  sf_get_cex returned in 17.776834 secs.
[02/20 18:13:22]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1alpha + 1r_f[0m
[02/20 18:13:22]  --------------------------------------------------------------------------------
[02/20 18:13:22]  Iteration: 90 (59 solution, 30 counterexamples)
[02/20 18:15:30]  Generator returned sat in 125.343530 secs.
[02/20 18:15:30]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + -1alpha + 1r_f[0m
[02/20 18:15:44]  Improved number of small numbers from 67 to 73 out of a max of 130
[02/20 18:15:44]  Verifer returned sat in 13.860007 secs.
[02/20 18:15:44]  sf_get_cex returned in 13.958478 secs.
[02/20 18:15:44]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S      del_L  qdelay_t
0     596344.543009       0.999512     122.272505    -192859.599081   789204.141846           789204.141846        3.545654      270.363037                2.0    0.000244          -1.0         NaN    NaN        NaN       2.0
1     596470.361013  915022.146351     125.818004    -192759.599081   789204.141846           789204.141846      100.000000      270.363037                0.0   25.818248           0.0  125.818004  100.0   0.000000       0.0
2     596599.724516  918593.463290     129.363503    -192659.599081   789204.141846           789204.141846      100.000000      270.363037                0.0   55.181752           0.0  129.363503  100.0   0.000000       0.0
3     596732.633519  922168.325728     132.909002    -192559.599081   789204.141846           789204.141846      100.000000      270.363037                0.0   88.090754           0.0  132.909002  100.0   0.000000       0.0
4     596869.088020  925746.733665     136.454501    -192459.599081   789204.141846           789204.141846      100.000000      270.363037                0.0  124.545255           0.0  136.454501  100.0   0.000000       0.0
5     597009.088020  929328.687100     140.000000    -192359.599081   789204.141846           789204.141846      100.000000      100.000000                1.0  164.545255           1.0  140.000000  100.0   0.000000       1.0
6     597145.542521  925823.188166     136.454501    -192259.599081   789205.141602           789204.141846      100.000000      100.000000                1.0  200.000000           1.0  136.454501  100.0   0.999756       1.0
7     597278.451523  922314.143732     132.909002    -192159.599081   789238.050604           789205.141602      100.000000      100.000000                1.0  200.000000           1.0  132.909002  100.0  32.909002       1.0
8     597407.815026  918801.553800     129.363503    -192059.599081   789267.414107           789238.050604      100.000000      100.000000                2.0  200.000000           1.0  129.363503  100.0  29.363503       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=2, loss_amount=2850795/45056, beliefs_remain_consistent=True, beliefs_improve=True, alpha=79873/22528, buf_size=200, start_state=[0].[0m
[02/20 18:15:44]  --------------------------------------------------------------------------------
[02/20 18:15:44]  Iteration: 91 (59 solution, 31 counterexamples)
[02/20 18:26:29]  Generator returned sat in 642.319623 secs.
[02/20 18:26:29]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1max_c + -1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 18:26:58]  Verifer returned unsat in 28.850495 secs.
[02/20 18:26:58]  sf_get_cex returned in 28.970618 secs.
[02/20 18:26:58]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + -1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 18:26:58]  --------------------------------------------------------------------------------
[02/20 18:26:58]  Iteration: 92 (60 solution, 31 counterexamples)
[02/20 18:28:56]  Generator returned sat in 115.278876 secs.
[02/20 18:28:57]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 18:29:11]  Verifer returned unsat in 14.648806 secs.
[02/20 18:29:12]  sf_get_cex returned in 14.776378 secs.
[02/20 18:29:12]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 18:29:12]  --------------------------------------------------------------------------------
[02/20 18:29:12]  Iteration: 93 (61 solution, 31 counterexamples)
[02/20 18:29:31]  Generator returned sat in 16.740545 secs.
[02/20 18:29:31]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 18:29:44]  Verifer returned unsat in 13.059274 secs.
[02/20 18:29:44]  sf_get_cex returned in 13.165207 secs.
[02/20 18:29:44]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 18:29:45]  --------------------------------------------------------------------------------
[02/20 18:29:45]  Iteration: 94 (62 solution, 31 counterexamples)
[02/20 18:30:08]  Generator returned sat in 20.572611 secs.
[02/20 18:30:08]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 18:30:24]  Verifer returned unsat in 15.919130 secs.
[02/20 18:30:24]  sf_get_cex returned in 16.036920 secs.
[02/20 18:30:24]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 18:30:24]  --------------------------------------------------------------------------------
[02/20 18:30:24]  Iteration: 95 (63 solution, 31 counterexamples)
[02/20 18:33:02]  Generator returned sat in 154.787372 secs.
[02/20 18:33:02]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 2r_f[0m
[02/20 18:33:08]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 18:33:08]  Verifer returned sat in 6.033384 secs.
[02/20 18:33:08]  sf_get_cex returned in 6.130527 secs.
[02/20 18:33:08]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S  del_L  qdelay_t
0     -21430.300000       1.000000     216.678571          -21455.8             0.0                     0.0       42.642857      256.642857                1.0   25.500000          -1.0         NaN    NaN    NaN       1.0
1     -21406.800000   23525.500000      23.500000          -21406.8             0.0                     0.0       49.000000      256.642857                0.0    0.000000           0.0   23.500000   49.0    0.0       0.0
2     -21359.800000   47000.000000      47.000000          -21359.8             0.0                     0.0       49.000000      256.642857                0.0    0.000000           0.0   47.000000   47.0    0.0       0.0
3     -21265.800000   94000.000000      94.000000          -21265.8             0.0                     0.0       94.000000      256.642857                0.0    0.000000           0.0   94.000000   94.0    0.0       0.0
4     -21077.800000  188000.000000     188.000000          -21165.8             0.0                     0.0      100.000000      256.642857                0.0   88.000000           0.0  188.000000  100.0    0.0       0.0
5     -20996.942857   80945.142857      80.857143          -21065.8             0.0                     0.0      100.000000      256.642857                0.0   68.857143           0.0   80.857143  100.0    0.0       0.0
6     -20835.228571  161783.142857     161.714286          -20965.8             0.0                     0.0      100.000000      256.642857                0.0  130.571429           0.0  161.714286  100.0    0.0       0.0
7     -20511.800000  323559.142857     323.428571          -20865.8           154.0                     0.0      100.000000      100.000000                1.0  200.000000           1.0  323.428571  100.0  154.0       1.0
8     -20430.942857   81211.142857      80.857143          -20765.8           154.0                   154.0      100.000000      100.000000                1.0  180.857143           1.0   80.857143  100.0    0.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=154, beliefs_remain_consistent=True, beliefs_improve=True, alpha=134/7, buf_size=200, start_state=[0].[0m
[02/20 18:33:08]  --------------------------------------------------------------------------------
[02/20 18:33:08]  Iteration: 96 (63 solution, 32 counterexamples)
[02/20 18:41:54]  Generator returned sat in 523.178414 secs.
[02/20 18:41:55]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 18:42:19]  Verifer returned unsat in 24.355129 secs.
[02/20 18:42:19]  sf_get_cex returned in 24.484537 secs.
[02/20 18:42:19]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 18:42:19]  --------------------------------------------------------------------------------
[02/20 18:42:19]  Iteration: 97 (64 solution, 32 counterexamples)
[02/20 18:45:08]  Generator returned sat in 166.503775 secs.
[02/20 18:45:09]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 18:45:26]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 18:45:26]  Verifer returned sat in 17.284613 secs.
[02/20 18:45:26]  sf_get_cex returned in 17.383280 secs.
[02/20 18:45:26]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0            -542.0            1.0           84.0            -741.0             0.0                     0.0           100.0           100.0                1.0    199.0          -1.0    NaN    NaN    NaN       1.0
1            -440.0       102199.0          102.0            -641.0             1.0                     0.0           100.0           100.0                2.0    200.0           1.0  102.0  100.0    1.0       2.0
2            -320.0       120201.0          120.0            -541.0            21.0                     1.0           100.0           100.0                1.0    200.0           1.0  120.0  100.0   20.0       1.0
3            -182.0       138221.0          138.0            -441.0            59.0                    21.0           100.0           100.0                2.0    200.0           1.0  138.0  100.0   38.0       2.0
4            -100.0        82259.0           82.0            -341.0            59.0                    59.0           100.0           100.0                2.0    182.0           1.0   82.0  100.0    0.0       2.0
5               0.0       100241.0          100.0            -241.0            59.0                    59.0           100.0           100.0                2.0    182.0           1.0  100.0  100.0    0.0       2.0
6             118.0       118241.0          118.0            -141.0            59.0                    59.0           100.0           100.0                1.0    200.0           1.0  118.0  100.0    0.0       1.0
7             254.0       136259.0          136.0             -41.0            95.0                    59.0           100.0           100.0                1.0    200.0           1.0  136.0  100.0   36.0       1.0
8             408.0       154295.0          154.0              59.0           149.0                    95.0           100.0           100.0                2.0    200.0           1.0  154.0  100.0   54.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, 
, large_loss_count=0, loss_amount=148, beliefs_remain_consistent=True, beliefs_improve=False, alpha=18, buf_size=200, start_state=[0].[0m
[02/20 18:45:26]  --------------------------------------------------------------------------------
[02/20 18:45:26]  Iteration: 98 (64 solution, 33 counterexamples)
[02/20 18:49:14]  Generator returned sat in 224.780621 secs.
[02/20 18:49:14]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 18:50:08]  Verifer returned unsat in 53.552991 secs.
[02/20 18:50:08]  sf_get_cex returned in 53.670891 secs.
[02/20 18:50:08]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 18:50:08]  --------------------------------------------------------------------------------
[02/20 18:50:08]  Iteration: 99 (65 solution, 33 counterexamples)
[02/20 18:51:29]  Generator returned sat in 78.590304 secs.
[02/20 18:51:29]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 18:51:48]  Verifer returned unsat in 18.635674 secs.
[02/20 18:51:48]  sf_get_cex returned in 18.764249 secs.
[02/20 18:51:48]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/20 18:51:48]  --------------------------------------------------------------------------------
[02/20 18:51:48]  Iteration: 100 (66 solution, 33 counterexamples)
[02/20 18:53:18]  Generator returned sat in 87.766369 secs.
[02/20 18:53:19]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 18:53:21]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 18:53:21]  Verifer returned sat in 2.138597 secs.
[02/20 18:53:21]  sf_get_cex returned in 2.236288 secs.
[02/20 18:53:21]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0             551.0            1.0            2.0             551.0             0.0                     0.0             1.0           100.0                0.0      0.0          -1.0    NaN    NaN    NaN       0.0
1             552.0         1000.0            1.0             552.0             0.0                     0.0             1.0           100.0                0.0      0.0           0.0    1.0    1.0    0.0       0.0
2             553.0         1000.0            1.0             553.0             0.0                     0.0             1.0           100.0                0.0      0.0           0.0    1.0    1.0    0.0       0.0
3             554.0         1000.0            1.0             554.0             0.0                     0.0             1.0           100.0                0.0      0.0           0.0    1.0    1.0    0.0       0.0
4             555.0         1000.0            1.0             555.0             0.0                     0.0             1.0           100.0                0.0      0.0           0.0    1.0    1.0    0.0       0.0
5             556.0         1000.0            1.0             556.0             0.0                     0.0             1.0           100.0                0.0      0.0           0.0    1.0    1.0    0.0       0.0
6             557.0         1000.0            1.0             557.0             0.0                     0.0             1.0           100.0                0.0      0.0           0.0    1.0    1.0    0.0       0.0
7             558.0         1000.0            1.0             558.0             0.0                     0.0             1.0           100.0                0.0      0.0           0.0    1.0    1.0    0.0       0.0
8             559.0         1000.0            1.0             559.0             0.0                     0.0             1.0           100.0                0.0      0.0           0.0    1.0    1.0    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1, buf_size=200, start_state=[0].[0m
[02/20 18:53:21]  --------------------------------------------------------------------------------
[02/20 18:53:21]  Iteration: 101 (66 solution, 34 counterexamples)
[02/20 18:58:26]  Generator returned sat in 302.089223 secs.
[02/20 18:58:26]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 18:59:05]  Verifer returned unsat in 38.498941 secs.
[02/20 18:59:05]  sf_get_cex returned in 38.597195 secs.
[02/20 18:59:05]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + -1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 18:59:05]  --------------------------------------------------------------------------------
[02/20 18:59:05]  Iteration: 102 (67 solution, 34 counterexamples)
[02/20 18:59:29]  Generator returned sat in 20.740198 secs.
[02/20 18:59:29]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + -2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 18:59:56]  Verifer returned unsat in 26.994097 secs.
[02/20 18:59:56]  sf_get_cex returned in 27.104506 secs.
[02/20 18:59:56]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2max_c + -2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 18:59:56]  --------------------------------------------------------------------------------
[02/20 18:59:56]  Iteration: 103 (68 solution, 34 counterexamples)
[02/20 19:03:05]  Generator returned sat in 186.254707 secs.
[02/20 19:03:06]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 19:03:24]  Verifer returned unsat in 18.591013 secs.
[02/20 19:03:24]  sf_get_cex returned in 18.697962 secs.
[02/20 19:03:24]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 19:03:24]  --------------------------------------------------------------------------------
[02/20 19:03:24]  Iteration: 104 (69 solution, 34 counterexamples)
[02/20 19:03:49]  Generator returned sat in 21.349131 secs.
[02/20 19:03:49]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2max_c + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 19:04:14]  Verifer returned unsat in 24.447519 secs.
[02/20 19:04:14]  sf_get_cex returned in 24.557419 secs.
[02/20 19:04:14]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2max_c + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 19:04:14]  --------------------------------------------------------------------------------
[02/20 19:04:14]  Iteration: 105 (70 solution, 34 counterexamples)
[02/20 19:04:55]  Generator returned sat in 38.036737 secs.
[02/20 19:04:55]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 19:05:07]  Verifer returned unsat in 12.153167 secs.
[02/20 19:05:07]  sf_get_cex returned in 12.251312 secs.
[02/20 19:05:07]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -1max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 19:05:07]  --------------------------------------------------------------------------------
[02/20 19:05:07]  Iteration: 106 (71 solution, 34 counterexamples)
[02/20 19:07:10]  Generator returned sat in 119.789467 secs.
[02/20 19:07:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 19:07:37]  Verifer returned unsat in 26.203072 secs.
[02/20 19:07:37]  sf_get_cex returned in 26.342058 secs.
[02/20 19:07:37]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 19:07:37]  --------------------------------------------------------------------------------
[02/20 19:07:37]  Iteration: 107 (72 solution, 34 counterexamples)
[02/20 19:08:13]  Generator returned sat in 33.669137 secs.
[02/20 19:08:14]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 19:08:38]  Verifer returned unsat in 24.330780 secs.
[02/20 19:08:38]  sf_get_cex returned in 24.444846 secs.
[02/20 19:08:38]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/20 19:08:38]  --------------------------------------------------------------------------------
[02/20 19:08:38]  Iteration: 108 (73 solution, 34 counterexamples)
[02/20 19:09:23]  Generator returned sat in 41.696592 secs.
[02/20 19:09:23]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:09:42]  Verifer returned unsat in 18.561695 secs.
[02/20 19:09:42]  sf_get_cex returned in 18.667218 secs.
[02/20 19:09:42]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:09:42]  --------------------------------------------------------------------------------
[02/20 19:09:42]  Iteration: 109 (74 solution, 34 counterexamples)
[02/20 19:10:11]  Generator returned sat in 26.591928 secs.
[02/20 19:10:12]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:10:25]  Verifer returned unsat in 12.756492 secs.
[02/20 19:10:25]  sf_get_cex returned in 12.858304 secs.
[02/20 19:10:25]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:10:25]  --------------------------------------------------------------------------------
[02/20 19:10:25]  Iteration: 110 (75 solution, 34 counterexamples)
[02/20 19:11:56]  Generator returned sat in 88.078259 secs.
[02/20 19:11:56]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 19:12:16]  Verifer returned unsat in 19.839243 secs.
[02/20 19:12:16]  sf_get_cex returned in 19.947004 secs.
[02/20 19:12:16]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 19:12:16]  --------------------------------------------------------------------------------
[02/20 19:12:16]  Iteration: 111 (76 solution, 34 counterexamples)
[02/20 19:12:39]  Generator returned sat in 20.262459 secs.
[02/20 19:12:40]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 19:13:00]  Improved number of small numbers from 76 to 77 out of a max of 130
[02/20 19:13:00]  Verifer returned sat in 20.581708 secs.
[02/20 19:13:00]  sf_get_cex returned in 20.683735 secs.
[02/20 19:13:00]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0      1.958606e+07       0.999512      49.625244      1.958606e+07             0.0                     0.0       50.874786           100.0                0.0      0.0          -1.0        NaN        NaN    NaN       0.0
1      1.958611e+07   49875.030518      49.875031      1.958611e+07             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
2      1.958616e+07   49875.030518      49.875031      1.958616e+07             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
3      1.958621e+07   49875.030518      49.875031      1.958621e+07             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
4      1.958626e+07   49875.030518      49.875031      1.958626e+07             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
5      1.958631e+07   49875.030518      49.875031      1.958631e+07             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
6      1.958636e+07   49875.030518      49.875031      1.958636e+07             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
7      1.958641e+07   49875.030518      49.875031      1.958641e+07             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
8      1.958646e+07   49875.030518      49.875031      1.958646e+07             0.0                     0.0       50.874786           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4095/4096, buf_size=200, start_state=[0].[0m
[02/20 19:13:00]  --------------------------------------------------------------------------------
[02/20 19:13:00]  Iteration: 112 (76 solution, 35 counterexamples)
[02/20 19:20:49]  Generator returned sat in 464.894258 secs.
[02/20 19:20:49]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 19:21:08]  Verifer returned unsat in 18.831977 secs.
[02/20 19:21:08]  sf_get_cex returned in 18.934209 secs.
[02/20 19:21:08]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 19:21:08]  --------------------------------------------------------------------------------
[02/20 19:21:08]  Iteration: 113 (77 solution, 35 counterexamples)
[02/20 19:22:26]  Generator returned sat in 75.186714 secs.
[02/20 19:22:26]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c + 2alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/20 19:22:39]  Improved number of small numbers from 80 to 80 out of a max of 130
[02/20 19:22:39]  Verifer returned sat in 12.860859 secs.
[02/20 19:22:39]  sf_get_cex returned in 12.959887 secs.
[02/20 19:22:39]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t      del_A       del_S  del_L  qdelay_t
0      2.006783e+07       0.999512      58.300830      2.006767e+07             0.0                     0.0           100.0           100.0                1.0  164.797656          -1.0        NaN         NaN    NaN       1.0
1      2.006788e+07   52015.521940      51.850724      2.006777e+07             0.0                     0.0           100.0           100.0                2.0  116.648381           1.0  51.850724  100.000000    0.0       2.0
2      2.006793e+07   45517.266870      45.400618      2.006787e+07             0.0                     0.0           100.0           100.0                1.0   62.048999           1.0  45.400618  100.000000    0.0       1.0
3      2.006797e+07   39012.561694      38.950513      2.006797e+07             0.0                     0.0           100.0           100.0                0.0    0.999512           0.0  38.950513  100.000000    0.0       0.0
4      2.006800e+07   32501.406413      32.500407      2.006800e+07             0.0                     0.0           100.0           100.0                0.0    0.000000           0.0  32.500407   33.499919    0.0       0.0
5      2.006802e+07   26050.301107      26.050301      2.006802e+07             0.0                     0.0           100.0           100.0                0.0    0.000000           0.0  26.050301   26.050301    0.0       0.0
6      2.006804e+07   19600.195312      19.600195      2.006804e+07             0.0                     0.0           100.0           100.0                0.0    0.000000           0.0  19.600195   19.600195    0.0       0.0
7      2.006806e+07   13150.089518      13.150090      2.006806e+07             0.0                     0.0           100.0           100.0                0.0    0.000000           0.0  13.150090   13.150090    0.0       0.0
8      2.006806e+07    6699.983724       6.699984      2.006806e+07             0.0                     0.0           100.0           100.0                0.0    0.000000           0.0   6.699984    6.699984    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=792589/122880, buf_size=200, start_state=[0].[0m
[02/20 19:22:40]  --------------------------------------------------------------------------------
[02/20 19:22:40]  Iteration: 114 (77 solution, 36 counterexamples)
[02/20 19:37:28]  Generator returned sat in 885.539855 secs.
[02/20 19:37:29]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 19:37:42]  Verifer returned unsat in 13.100188 secs.
[02/20 19:37:42]  sf_get_cex returned in 13.249583 secs.
[02/20 19:37:42]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 19:37:42]  --------------------------------------------------------------------------------
[02/20 19:37:42]  Iteration: 115 (78 solution, 36 counterexamples)
[02/20 19:38:23]  Generator returned sat in 37.737860 secs.
[02/20 19:38:23]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c + 2alpha + -1r_f > 0):
    + 2min_c
else:
    + 1min_c + -1alpha[0m
[02/20 19:38:35]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 19:38:35]  Verifer returned sat in 11.311654 secs.
[02/20 19:38:35]  sf_get_cex returned in 11.476637 secs.
[02/20 19:38:35]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0          -2.78125           1.00      297.71875          -2.78125             0.0                     0.0         3.28125           300.0                2.0      0.0          -1.0        NaN        NaN    NaN       2.0
1           0.00000        2781.25        2.78125           0.00000             0.0                     0.0         3.28125           300.0                0.0      0.0           0.0    2.78125    2.78125    0.0       0.0
2           6.56250        6562.50        6.56250           6.56250             0.0                     0.0         6.56250           300.0                0.0      0.0           0.0    6.56250    6.56250    0.0       0.0
3          19.68750       13125.00       13.12500          19.68750             0.0                     0.0        13.12500           300.0                0.0      0.0           0.0   13.12500   13.12500    0.0       0.0
4          45.93750       26250.00       26.25000          45.93750             0.0                     0.0        26.25000           300.0                0.0      0.0           0.0   26.25000   26.25000    0.0       0.0
5          98.43750       52500.00       52.50000          98.43750             0.0                     0.0        52.50000           300.0                0.0      0.0           0.0   52.50000   52.50000    0.0       0.0
6         203.43750      105000.00      105.00000         198.43750             0.0                     0.0       100.00000           300.0                0.0      5.0           0.0  105.00000  100.00000    0.0       0.0
7         403.43750      200005.00      200.00000         298.43750             0.0                     0.0       100.00000           300.0                0.0    105.0           0.0  200.00000  100.00000    0.0       0.0
8         603.43750      200105.00      200.00000         398.43750             5.0                     0.0       100.00000           100.0                1.0    200.0           1.0  200.00000  100.00000    5.0       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=5, beliefs_remain_consistent=True, beliefs_improve=True, alpha=1/2, buf_size=200, start_state=[0].[0m
[02/20 19:38:35]  --------------------------------------------------------------------------------
[02/20 19:38:35]  Iteration: 116 (78 solution, 37 counterexamples)
[02/20 19:47:44]  Generator returned sat in 546.453390 secs.
[02/20 19:47:45]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 1max_c + 2alpha > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 19:47:54]  Verifer returned unsat in 9.127396 secs.
[02/20 19:47:54]  sf_get_cex returned in 9.229330 secs.
[02/20 19:47:54]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 1max_c + 2alpha > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/20 19:47:54]  --------------------------------------------------------------------------------
[02/20 19:47:54]  Iteration: 117 (79 solution, 37 counterexamples)
[02/20 19:49:01]  Generator returned sat in 63.241556 secs.
[02/20 19:49:01]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -1max_c + -2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:49:13]  Verifer returned unsat in 12.072930 secs.
[02/20 19:49:13]  sf_get_cex returned in 12.173458 secs.
[02/20 19:49:13]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -1max_c + -2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:49:13]  --------------------------------------------------------------------------------
[02/20 19:49:13]  Iteration: 118 (80 solution, 37 counterexamples)
[02/20 19:49:45]  Generator returned sat in 28.325221 secs.
[02/20 19:49:45]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:50:03]  Verifer returned unsat in 18.100450 secs.
[02/20 19:50:03]  sf_get_cex returned in 18.261449 secs.
[02/20 19:50:03]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:50:03]  --------------------------------------------------------------------------------
[02/20 19:50:03]  Iteration: 119 (81 solution, 37 counterexamples)
[02/20 19:50:34]  Generator returned sat in 27.024141 secs.
[02/20 19:50:34]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:50:47]  Verifer returned unsat in 13.261094 secs.
[02/20 19:50:47]  sf_get_cex returned in 13.370919 secs.
[02/20 19:50:47]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:50:47]  --------------------------------------------------------------------------------
[02/20 19:50:47]  Iteration: 120 (82 solution, 37 counterexamples)
[02/20 19:51:16]  Generator returned sat in 24.957577 secs.
[02/20 19:51:16]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:51:31]  Verifer returned unsat in 15.115361 secs.
[02/20 19:51:31]  sf_get_cex returned in 15.218813 secs.
[02/20 19:51:31]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 19:51:31]  --------------------------------------------------------------------------------
[02/20 19:51:31]  Iteration: 121 (83 solution, 37 counterexamples)
[02/20 19:52:52]  Generator returned sat in 77.027772 secs.
[02/20 19:52:52]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1alpha + 1r_f[0m
[02/20 19:53:18]  Verifer returned unsat in 26.218196 secs.
[02/20 19:53:18]  sf_get_cex returned in 26.332907 secs.
[02/20 19:53:18]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1alpha + 1r_f[0m
[02/20 19:53:18]  --------------------------------------------------------------------------------
[02/20 19:53:18]  Iteration: 122 (84 solution, 37 counterexamples)
[02/20 19:56:16]  Generator returned sat in 174.610826 secs.
[02/20 19:56:17]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 2min_c[0m
[02/20 19:56:26]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 19:56:26]  Verifer returned sat in 9.630479 secs.
[02/20 19:56:26]  sf_get_cex returned in 9.759347 secs.
[02/20 19:56:26]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A       del_S     del_L  qdelay_t
0    -133445.500000       1.000000     200.432900    -133445.500000        0.000000                     0.0        3.368506      399.134199                0.0    0.000000          -1.0         NaN         NaN       NaN       0.0
1    -133442.997294    2502.705628       2.502706    -133442.997294        0.000000                     0.0        3.368506      399.134199                0.0    0.000000           0.0    2.502706    2.502706  0.000000       0.0
2    -133436.260281    6737.012987       6.737013    -133436.260281        0.000000                     0.0        6.737013      399.134199                0.0    0.000000           0.0    6.737013    6.737013  0.000000       0.0
3    -133422.786255   13474.025974      13.474026    -133422.786255        0.000000                     0.0       13.474026      399.134199                0.0    0.000000           0.0   13.474026   13.474026  0.000000       0.0
4    -133395.838203   26948.051948      26.948052    -133395.838203        0.000000                     0.0       26.948052      399.134199                0.0    0.000000           0.0   26.948052   26.948052  0.000000       0.0
5    -133341.942100   53896.103896      53.896104    -133341.942100        0.000000                     0.0       53.896104      399.134199                0.0    0.000000           0.0   53.896104   53.896104  0.000000       0.0
6    -133234.149892  107792.207792     107.792208    -133241.942100        0.000000                     0.0      100.000000      399.134199                0.0    7.792208           0.0  107.792208  100.000000  0.000000       0.0
7    -133034.149892  200007.792208     200.000000    -133141.942100        0.000000                     0.0      100.000000      399.134199                0.0  107.792208           0.0  200.000000  100.000000  0.000000       0.0
8    -132834.149892  200107.792208     200.000000    -133041.942100        7.792208                     0.0      100.000000      100.000000                1.0  200.000000           1.0  200.000000  100.000000  7.792208       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=600/77, beliefs_remain_consistent=True, beliefs_improve=True, alpha=200/231, buf_size=200, start_state=[0].[0m
[02/20 19:56:26]  --------------------------------------------------------------------------------
[02/20 19:56:26]  Iteration: 123 (84 solution, 38 counterexamples)
[02/20 20:05:06]  Generator returned sat in 516.072706 secs.
[02/20 20:05:06]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -1alpha + -2r_f > 0):
    + 2r_f
else:
    + 1min_c + -1alpha[0m
[02/20 20:05:17]  Improved number of small numbers from 104 to 107 out of a max of 130
[02/20 20:05:17]  Verifer returned sat in 11.054529 secs.
[02/20 20:05:17]  sf_get_cex returned in 11.153644 secs.
[02/20 20:05:17]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A       del_S     del_L  qdelay_t
0      66282.221914       0.999756       8.520788      66282.221914        0.000000                0.000000       35.082764      187.332357                0.0    0.000000          -1.0         NaN         NaN       NaN       0.0
1      66299.263489   17041.575114      17.041575      66299.263489        0.000000                0.000000       35.082764      187.332357                0.0    0.000000           0.0   17.041575   17.041575  0.000000       0.0
2      66333.346639   34083.150228      34.083150      66333.346639        0.000000                0.000000       35.082764      187.332357                0.0    0.000000           0.0   34.083150   34.083150  0.000000       0.0
3      66401.512939   68166.300456      68.166300      66401.512939        0.000000                0.000000       68.166300      187.332357                0.0    0.000000           0.0   68.166300   68.166300  0.000000       0.0
4      66537.845540  136332.600911     136.332601      66501.512939        0.000000                0.000000      100.000000      187.332357                0.0   36.332601           0.0  136.332601  100.000000  0.000000       0.0
5      66810.510742  272701.534424     272.665202      66601.512939        8.997803                0.000000      100.000000      100.000000                0.0  200.000000           1.0  272.665202  100.000000  8.997803       0.0
6      66909.510986   99209.241943      99.000244      66701.512939        8.997803                8.997803      100.000000      100.000000                1.0  199.000244           1.0   99.000244  100.000000  0.000000       1.0
7      67008.511230   99208.242188      99.000244      66801.512939        8.997803                8.997803      100.000000      100.000000                2.0  198.000488           1.0   99.000244  100.000000  0.000000       2.0
8      67107.511475   99207.242432      99.000244      66901.512939        8.997803                8.997803      100.000000      100.000000                1.0  197.000732           1.0   99.000244  100.000000  0.000000       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=36855/4096, beliefs_remain_consistent=True, beliefs_improve=True, alpha=4095/4096, buf_size=200, start_state=[0].[0m
[02/20 20:05:18]  --------------------------------------------------------------------------------
[02/20 20:05:18]  Iteration: 124 (84 solution, 39 counterexamples)
[02/20 20:16:32]  Generator returned sat in 670.570304 secs.
[02/20 20:16:32]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 1alpha + -2r_f > 0):
    + 2min_c
else:
    + 1min_c + -1alpha[0m
[02/20 20:16:36]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 20:16:36]  Verifer returned sat in 4.193802 secs.
[02/20 20:16:36]  sf_get_cex returned in 4.308419 secs.
[02/20 20:16:36]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A       del_S     del_L  qdelay_t
0     -13148.735755       1.000000       0.569801     -13150.881410        0.000000                     0.0        0.569801           400.0                1.0    2.145655          -1.0         NaN         NaN       NaN       1.0
1     -13147.596154    1141.746795       1.139601     -13147.596154        0.000000                     0.0        3.285256           400.0                0.0    0.000000           0.0    1.139601    3.285256  0.000000       0.0
2     -13141.025641    6570.512821       6.570513     -13141.025641        0.000000                     0.0        6.570513           400.0                0.0    0.000000           0.0    6.570513    6.570513  0.000000       0.0
3     -13127.884615   13141.025641      13.141026     -13127.884615        0.000000                     0.0       13.141026           400.0                0.0    0.000000           0.0   13.141026   13.141026  0.000000       0.0
4     -13101.602564   26282.051282      26.282051     -13101.602564        0.000000                     0.0       26.282051           400.0                0.0    0.000000           0.0   26.282051   26.282051  0.000000       0.0
5     -13049.038462   52564.102564      52.564103     -13049.038462        0.000000                     0.0       52.564103           400.0                0.0    0.000000           0.0   52.564103   52.564103  0.000000       0.0
6     -12943.910256  105128.205128     105.128205     -12949.038462        0.000000                     0.0      100.000000           400.0                0.0    5.128205           0.0  105.128205  100.000000  0.000000       0.0
7     -12743.910256  200005.128205     200.000000     -12849.038462        0.000000                     0.0      100.000000           400.0                0.0  105.128205           0.0  200.000000  100.000000  0.000000       0.0
8     -12543.910256  200105.128205     200.000000     -12749.038462        5.128205                     0.0      100.000000           100.0                1.0  200.000000           1.0  200.000000  100.000000  5.128205       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=200/39, beliefs_remain_consistent=True, beliefs_improve=True, alpha=200/351, buf_size=200, start_state=[0].[0m
[02/20 20:16:36]  --------------------------------------------------------------------------------
[02/20 20:16:36]  Iteration: 125 (84 solution, 40 counterexamples)
[02/20 20:25:02]  Generator returned sat in 501.632400 secs.
[02/20 20:25:02]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 20:25:26]  Verifer returned unsat in 23.524607 secs.
[02/20 20:25:26]  sf_get_cex returned in 23.636153 secs.
[02/20 20:25:26]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 20:25:26]  --------------------------------------------------------------------------------
[02/20 20:25:26]  Iteration: 126 (85 solution, 40 counterexamples)
[02/20 20:26:04]  Generator returned sat in 34.855572 secs.
[02/20 20:26:05]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 20:26:25]  Verifer returned unsat in 20.654388 secs.
[02/20 20:26:25]  sf_get_cex returned in 20.770430 secs.
[02/20 20:26:25]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 20:26:25]  --------------------------------------------------------------------------------
[02/20 20:26:25]  Iteration: 127 (86 solution, 40 counterexamples)
[02/20 20:27:02]  Generator returned sat in 33.101631 secs.
[02/20 20:27:03]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 20:27:30]  Verifer returned unsat in 27.090765 secs.
[02/20 20:27:30]  sf_get_cex returned in 27.209636 secs.
[02/20 20:27:30]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/20 20:27:30]  --------------------------------------------------------------------------------
[02/20 20:27:30]  Iteration: 128 (87 solution, 40 counterexamples)
[02/20 20:31:26]  Generator returned sat in 232.144089 secs.
[02/20 20:31:26]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 2r_f[0m
[02/20 20:31:33]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 20:31:33]  Verifer returned sat in 6.811310 secs.
[02/20 20:31:33]  sf_get_cex returned in 6.914282 secs.
[02/20 20:31:33]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t    del_A   del_S  del_L  qdelay_t
0        -71404.125          1.000        24.5625         -71453.00             0.0                     0.0            99.0           388.0                2.0   48.875          -1.0      NaN     NaN    NaN       2.0
1        -71355.000      49173.875        49.1250         -71355.00             0.0                     0.0            99.0           388.0                0.0    0.000           0.0   49.125   98.00    0.0       0.0
2        -71256.750      98250.000        98.2500         -71256.75             0.0                     0.0            99.0           388.0                0.0    0.000           0.0   98.250   98.25    0.0       0.0
3        -71060.250     196500.000       196.5000         -71156.75             0.0                     0.0           100.0           388.0                0.0   96.500           0.0  196.500  100.00    0.0       0.0
4        -70962.250      98096.500        98.0000         -71056.75             0.0                     0.0           100.0           388.0                0.0   94.500           0.0   98.000  100.00    0.0       0.0
5        -70766.250     196094.500       196.0000         -70956.75             0.0                     0.0           100.0           388.0                0.0  190.500           0.0  196.000  100.00    0.0       0.0
6        -70374.250     392190.500       392.0000         -70856.75           282.5                     0.0           100.0           100.0                1.0  200.000           1.0  392.000  100.00  282.5       1.0
7        -70276.250      98482.500        98.0000         -70756.75           282.5                   282.5           100.0           100.0                1.0  198.000           1.0   98.000  100.00    0.0       1.0
8        -70178.250      98480.500        98.0000         -70656.75           282.5                   282.5           100.0           100.0                2.0  196.000           1.0   98.000  100.00    0.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=565/2, beliefs_remain_consistent=True, beliefs_improve=True, alpha=2, buf_size=200, start_state=[0].[0m
[02/20 20:31:33]  --------------------------------------------------------------------------------
[02/20 20:31:33]  Iteration: 129 (87 solution, 41 counterexamples)
[02/20 20:41:57]  Generator returned sat in 619.912110 secs.
[02/20 20:41:57]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:42:28]  Verifer returned unsat in 31.266848 secs.
[02/20 20:42:28]  sf_get_cex returned in 31.385958 secs.
[02/20 20:42:28]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:42:28]  --------------------------------------------------------------------------------
[02/20 20:42:28]  Iteration: 130 (88 solution, 41 counterexamples)
[02/20 20:43:17]  Generator returned sat in 44.738580 secs.
[02/20 20:43:17]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:43:39]  Verifer returned unsat in 21.877901 secs.
[02/20 20:43:39]  sf_get_cex returned in 21.997994 secs.
[02/20 20:43:39]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:43:39]  --------------------------------------------------------------------------------
[02/20 20:43:39]  Iteration: 131 (89 solution, 41 counterexamples)
[02/20 20:44:18]  Generator returned sat in 34.840496 secs.
[02/20 20:44:18]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:44:31]  Verifer returned unsat in 12.663094 secs.
[02/20 20:44:31]  sf_get_cex returned in 12.770655 secs.
[02/20 20:44:31]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:44:31]  --------------------------------------------------------------------------------
[02/20 20:44:31]  Iteration: 132 (90 solution, 41 counterexamples)
[02/20 20:45:10]  Generator returned sat in 35.002184 secs.
[02/20 20:45:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:45:41]  Verifer returned unsat in 31.069340 secs.
[02/20 20:45:41]  sf_get_cex returned in 31.187496 secs.
[02/20 20:45:41]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:45:41]  --------------------------------------------------------------------------------
[02/20 20:45:41]  Iteration: 133 (91 solution, 41 counterexamples)
[02/20 20:46:31]  Generator returned sat in 46.134605 secs.
[02/20 20:46:32]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:46:56]  Verifer returned unsat in 24.310369 secs.
[02/20 20:46:56]  sf_get_cex returned in 24.415093 secs.
[02/20 20:46:56]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:46:56]  --------------------------------------------------------------------------------
[02/20 20:46:56]  Iteration: 134 (92 solution, 41 counterexamples)
[02/20 20:47:33]  Generator returned sat in 32.645709 secs.
[02/20 20:47:33]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -1max_c + -2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:47:45]  Verifer returned unsat in 12.011189 secs.
[02/20 20:47:45]  sf_get_cex returned in 12.125013 secs.
[02/20 20:47:45]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -1max_c + -2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:47:45]  --------------------------------------------------------------------------------
[02/20 20:47:45]  Iteration: 135 (93 solution, 41 counterexamples)
[02/20 20:51:20]  Generator returned sat in 211.452687 secs.
[02/20 20:51:21]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:52:52]  Verifer returned unsat in 90.961538 secs.
[02/20 20:52:52]  sf_get_cex returned in 91.098518 secs.
[02/20 20:52:52]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:52:52]  --------------------------------------------------------------------------------
[02/20 20:52:52]  Iteration: 136 (94 solution, 41 counterexamples)
[02/20 20:53:27]  Generator returned sat in 31.195006 secs.
[02/20 20:53:27]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:54:02]  Verifer returned unsat in 34.734262 secs.
[02/20 20:54:02]  sf_get_cex returned in 34.834705 secs.
[02/20 20:54:02]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 20:54:02]  --------------------------------------------------------------------------------
[02/20 20:54:02]  Iteration: 137 (95 solution, 41 counterexamples)
[02/20 20:54:39]  Generator returned sat in 33.127044 secs.
[02/20 20:54:39]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 20:54:58]  Verifer returned unsat in 18.511690 secs.
[02/20 20:54:58]  sf_get_cex returned in 18.623116 secs.
[02/20 20:54:58]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 20:54:58]  --------------------------------------------------------------------------------
[02/20 20:54:58]  Iteration: 138 (96 solution, 41 counterexamples)
[02/20 20:55:30]  Generator returned sat in 28.353241 secs.
[02/20 20:55:30]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + 1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 20:55:48]  Improved number of small numbers from 94 to 130 out of a max of 130
[02/20 20:55:48]  Verifer returned sat in 17.708438 secs.
[02/20 20:55:48]  sf_get_cex returned in 17.835666 secs.
[02/20 20:55:48]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A   del_S  del_L  qdelay_t
0    -208150.019043       0.999756         49.875    -208150.019043             0.0                     0.0            67.0           100.0                1.0      0.0          -1.0     NaN     NaN    NaN       1.0
1    -208100.144043   49875.000000         49.875    -208100.144043             0.0                     0.0            67.0           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
2    -208050.269043   49875.000000         49.875    -208050.269043             0.0                     0.0            67.0           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
3    -208000.394043   49875.000000         49.875    -208000.394043             0.0                     0.0            67.0           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
4    -207950.519043   49875.000000         49.875    -207950.519043             0.0                     0.0            67.0           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
5    -207900.644043   49875.000000         49.875    -207900.644043             0.0                     0.0            67.0           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
6    -207850.769043   49875.000000         49.875    -207850.769043             0.0                     0.0            67.0           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
7    -207800.894043   49875.000000         49.875    -207800.894043             0.0                     0.0            67.0           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
8    -207751.019043   49875.000000         49.875    -207751.019043             0.0                     0.0            67.0           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=137/8, buf_size=200, start_state=[0].[0m
[02/20 20:55:48]  --------------------------------------------------------------------------------
[02/20 20:55:48]  Iteration: 139 (96 solution, 42 counterexamples)
[02/20 21:05:28]  Generator returned sat in 575.942636 secs.
[02/20 21:05:28]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + -1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 21:05:56]  Verifer returned unsat in 28.316053 secs.
[02/20 21:05:57]  sf_get_cex returned in 28.458129 secs.
[02/20 21:05:57]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + -1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/20 21:05:57]  --------------------------------------------------------------------------------
[02/20 21:05:57]  Iteration: 140 (97 solution, 42 counterexamples)
[02/20 21:06:38]  Generator returned sat in 37.380905 secs.
[02/20 21:06:38]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 21:07:09]  Verifer returned unsat in 30.873960 secs.
[02/20 21:07:09]  sf_get_cex returned in 30.984920 secs.
[02/20 21:07:09]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/20 21:07:09]  --------------------------------------------------------------------------------
[02/20 21:07:09]  Iteration: 141 (98 solution, 42 counterexamples)
[02/20 21:08:53]  Generator returned sat in 99.588162 secs.
[02/20 21:08:53]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:09:10]  Verifer returned unsat in 16.280013 secs.
[02/20 21:09:10]  sf_get_cex returned in 16.388051 secs.
[02/20 21:09:10]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:09:10]  --------------------------------------------------------------------------------
[02/20 21:09:10]  Iteration: 142 (99 solution, 42 counterexamples)
[02/20 21:10:08]  Generator returned sat in 54.295313 secs.
[02/20 21:10:08]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:10:28]  Verifer returned unsat in 19.159467 secs.
[02/20 21:10:28]  sf_get_cex returned in 19.269105 secs.
[02/20 21:10:28]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:10:28]  --------------------------------------------------------------------------------
[02/20 21:10:28]  Iteration: 143 (100 solution, 42 counterexamples)
[02/20 21:11:20]  Generator returned sat in 48.348857 secs.
[02/20 21:11:20]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:11:34]  Verifer returned unsat in 13.390693 secs.
[02/20 21:11:34]  sf_get_cex returned in 13.493166 secs.
[02/20 21:11:34]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:11:34]  --------------------------------------------------------------------------------
[02/20 21:11:34]  Iteration: 144 (101 solution, 42 counterexamples)
[02/20 21:12:45]  Generator returned sat in 67.764174 secs.
[02/20 21:12:46]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2max_c + 2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 21:13:14]  Verifer returned unsat in 28.498951 secs.
[02/20 21:13:14]  sf_get_cex returned in 28.596039 secs.
[02/20 21:13:14]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2max_c + 2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 21:13:14]  --------------------------------------------------------------------------------
[02/20 21:13:14]  Iteration: 145 (102 solution, 42 counterexamples)
[02/20 21:13:55]  Generator returned sat in 36.633640 secs.
[02/20 21:13:55]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 21:14:48]  Verifer returned unsat in 52.777915 secs.
[02/20 21:14:48]  sf_get_cex returned in 52.881387 secs.
[02/20 21:14:48]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 21:14:48]  --------------------------------------------------------------------------------
[02/20 21:14:48]  Iteration: 146 (103 solution, 42 counterexamples)
[02/20 21:16:05]  Generator returned sat in 73.523324 secs.
[02/20 21:16:06]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:16:25]  Verifer returned unsat in 19.668591 secs.
[02/20 21:16:25]  sf_get_cex returned in 19.771729 secs.
[02/20 21:16:25]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:16:26]  --------------------------------------------------------------------------------
[02/20 21:16:26]  Iteration: 147 (104 solution, 42 counterexamples)
[02/20 21:17:08]  Generator returned sat in 38.590226 secs.
[02/20 21:17:08]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:17:22]  Verifer returned unsat in 13.839959 secs.
[02/20 21:17:22]  sf_get_cex returned in 13.945951 secs.
[02/20 21:17:22]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:17:22]  --------------------------------------------------------------------------------
[02/20 21:17:22]  Iteration: 148 (105 solution, 42 counterexamples)
[02/20 21:20:09]  Generator returned sat in 162.972645 secs.
[02/20 21:20:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + 1alpha > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 21:20:25]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 21:20:25]  Verifer returned sat in 15.507751 secs.
[02/20 21:20:25]  sf_get_cex returned in 15.621341 secs.
[02/20 21:20:25]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0           74992.0            1.0            1.0           74951.0             0.0                     0.0            82.0           100.0                1.0     41.0          -1.0    NaN    NaN    NaN       1.0
1           75033.0        41041.0           41.0           75033.0             0.0                     0.0            82.0           100.0                0.0      0.0           0.0   41.0   82.0    0.0       0.0
2           75074.0        41000.0           41.0           75074.0             0.0                     0.0            82.0           100.0                0.0      0.0           0.0   41.0   41.0    0.0       0.0
3           75115.0        41000.0           41.0           75115.0             0.0                     0.0            82.0           100.0                0.0      0.0           0.0   41.0   41.0    0.0       0.0
4           75156.0        41000.0           41.0           75156.0             0.0                     0.0            82.0           100.0                0.0      0.0           0.0   41.0   41.0    0.0       0.0
5           75197.0        41000.0           41.0           75197.0             0.0                     0.0            82.0           100.0                0.0      0.0           0.0   41.0   41.0    0.0       0.0
6           75238.0        41000.0           41.0           75238.0             0.0                     0.0            82.0           100.0                0.0      0.0           0.0   41.0   41.0    0.0       0.0
7           75279.0        41000.0           41.0           75279.0             0.0                     0.0            82.0           100.0                0.0      0.0           0.0   41.0   41.0    0.0       0.0
8           75320.0        41000.0           41.0           75320.0             0.0                     0.0            82.0           100.0                0.0      0.0           0.0   41.0   41.0    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=200, start_state=[0].[0m
[02/20 21:20:25]  --------------------------------------------------------------------------------
[02/20 21:20:25]  Iteration: 149 (105 solution, 43 counterexamples)
[02/20 21:25:33]  Generator returned sat in 303.290547 secs.
[02/20 21:25:33]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -2r_f > 0):
    + 2min_c
else:
    + 1min_c + -1alpha[0m
[02/20 21:25:40]  Improved number of small numbers from 111 to 130 out of a max of 130
[02/20 21:25:40]  Verifer returned sat in 7.334220 secs.
[02/20 21:25:40]  sf_get_cex returned in 7.444203 secs.
[02/20 21:25:40]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S      del_L  qdelay_t
0      74958.307861       0.999756     200.500000      74859.307861        0.000000                0.000000           100.0      400.999756                0.0   99.000000          -1.0         NaN    NaN        NaN       0.0
1      75057.308105   99099.244141      99.000244      74959.307861        0.000000                0.000000           100.0      400.999756                0.0   98.000244           0.0   99.000244  100.0   0.000000       0.0
2      75257.308105  200098.000244     200.000000      75059.307861        0.000000                0.000000           100.0      400.999756                0.0  198.000244           0.0  200.000000  100.0   0.000000       0.0
3      75457.308105  200198.000244     200.000000      75159.307861       98.000244                0.000000           100.0      100.000000                1.0  200.000000           1.0  200.000000  100.0  98.000244       1.0
4      75556.308350   99298.244385      99.000244      75259.307861       98.000244               98.000244           100.0      100.000000                1.0  199.000244           1.0   99.000244  100.0   0.000000       1.0
5      75655.308594   99297.244629      99.000244      75359.307861       98.000244               98.000244           100.0      100.000000                2.0  198.000488           1.0   99.000244  100.0   0.000000       2.0
6      75754.308838   99296.244873      99.000244      75459.307861       98.000244               98.000244           100.0      100.000000                1.0  197.000732           1.0   99.000244  100.0   0.000000       1.0
7      75853.309082   99295.245117      99.000244      75559.307861       98.000244               98.000244           100.0      100.000000                1.0  196.000977           1.0   99.000244  100.0   0.000000       1.0
8      75952.309326   99294.245361      99.000244      75659.307861       98.000244               98.000244           100.0      100.000000                1.0  195.001221           1.0   99.000244  100.0   0.000000       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=401409/4096, beliefs_remain_consistent=True, beliefs_improve=True, alpha=4095/4096, buf_size=200, start_state=[0].[0m
[02/20 21:25:41]  --------------------------------------------------------------------------------
[02/20 21:25:41]  Iteration: 150 (105 solution, 44 counterexamples)
[02/20 21:36:54]  Generator returned sat in 669.864863 secs.
[02/20 21:36:55]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:37:09]  Verifer returned unsat in 14.676433 secs.
[02/20 21:37:10]  sf_get_cex returned in 14.783990 secs.
[02/20 21:37:10]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:37:10]  --------------------------------------------------------------------------------
[02/20 21:37:10]  Iteration: 151 (106 solution, 44 counterexamples)
[02/20 21:40:14]  Generator returned sat in 180.756842 secs.
[02/20 21:40:15]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 21:40:37]  Verifer returned unsat in 21.497821 secs.
[02/20 21:40:37]  sf_get_cex returned in 21.650770 secs.
[02/20 21:40:37]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 21:40:37]  --------------------------------------------------------------------------------
[02/20 21:40:37]  Iteration: 152 (107 solution, 44 counterexamples)
[02/20 21:41:42]  Generator returned sat in 61.110821 secs.
[02/20 21:41:42]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:42:08]  Verifer returned unsat in 25.405620 secs.
[02/20 21:42:08]  sf_get_cex returned in 25.518624 secs.
[02/20 21:42:08]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/20 21:42:08]  --------------------------------------------------------------------------------
[02/20 21:42:08]  Iteration: 153 (108 solution, 44 counterexamples)
[02/20 21:46:13]  Generator returned sat in 241.164837 secs.
[02/20 21:46:13]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 2alpha + -2r_f > 0):
    + 2r_f
else:
    + 1/2r_f[0m
[02/20 21:46:20]  Improved number of small numbers from 98 to 130 out of a max of 130
[02/20 21:46:20]  Verifer returned sat in 7.015275 secs.
[02/20 21:46:20]  sf_get_cex returned in 7.126016 secs.
[02/20 21:46:20]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t  del_A       del_S  del_L  qdelay_t
0      -26066.86084       0.999756           12.5     -26165.861084             0.0                     0.0           100.0      399.000244                0.0   99.000244          -1.0    NaN         NaN    NaN       0.0
1      -26041.86084   25099.000244           25.0     -26065.861084             0.0                     0.0           100.0      399.000244                0.0   24.000244           0.0   25.0  100.000000    0.0       0.0
2      -25991.86084   50024.000244           50.0     -25991.860840             0.0                     0.0           100.0      399.000244                0.0    0.000000           0.0   50.0   74.000244    0.0       0.0
3      -25891.86084  100000.000000          100.0     -25891.860840             0.0                     0.0           100.0      399.000244                0.0    0.000000           0.0  100.0  100.000000    0.0       0.0
4      -25691.86084  200000.000000          200.0     -25791.860840             0.0                     0.0           100.0      399.000244                0.0  100.000000           0.0  200.0  100.000000    0.0       0.0
5      -25291.86084  400100.000000          400.0     -25691.860840           200.0                     0.0           100.0      100.000000                1.0  200.000000           1.0  400.0  100.000000  200.0       1.0
6      -25091.86084  200400.000000          200.0     -25591.860840           300.0                   200.0           100.0      100.000000                1.0  200.000000           1.0  200.0  100.000000  100.0       1.0
7      -24991.86084  100500.000000          100.0     -25491.860840           300.0                   300.0           100.0      100.000000                2.0  200.000000           1.0  100.0  100.000000    0.0       2.0
8      -24941.86084   50500.000000           50.0     -25391.860840           300.0                   300.0           100.0      100.000000                2.0  150.000000           1.0   50.0  100.000000    0.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, 
, large_loss_count=2, loss_amount=300, beliefs_remain_consistent=True, beliefs_improve=True, alpha=4095/4096, buf_size=200, start_state=[0].[0m
[02/20 21:46:20]  --------------------------------------------------------------------------------
[02/20 21:46:20]  Iteration: 154 (108 solution, 45 counterexamples)
[02/20 21:52:46]  Generator returned sat in 381.929411 secs.
[02/20 21:52:47]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 21:53:07]  Verifer returned unsat in 19.537374 secs.
[02/20 21:53:07]  sf_get_cex returned in 19.651794 secs.
[02/20 21:53:07]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 21:53:07]  --------------------------------------------------------------------------------
[02/20 21:53:07]  Iteration: 155 (109 solution, 45 counterexamples)
[02/20 21:54:00]  Generator returned sat in 48.943850 secs.
[02/20 21:54:00]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 21:54:21]  Verifer returned unsat in 20.850964 secs.
[02/20 21:54:21]  sf_get_cex returned in 20.972295 secs.
[02/20 21:54:21]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 21:54:21]  --------------------------------------------------------------------------------
[02/20 21:54:21]  Iteration: 156 (110 solution, 45 counterexamples)
[02/20 21:55:09]  Generator returned sat in 43.328069 secs.
[02/20 21:55:09]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 21:55:36]  Verifer returned unsat in 26.977481 secs.
[02/20 21:55:36]  sf_get_cex returned in 27.088984 secs.
[02/20 21:55:36]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 21:55:36]  --------------------------------------------------------------------------------
[02/20 21:55:36]  Iteration: 157 (111 solution, 45 counterexamples)
[02/20 21:58:32]  Generator returned sat in 172.057499 secs.
[02/20 21:58:33]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 21:58:50]  Verifer returned unsat in 17.221562 secs.
[02/20 21:58:50]  sf_get_cex returned in 17.349886 secs.
[02/20 21:58:50]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 21:58:50]  --------------------------------------------------------------------------------
[02/20 21:58:50]  Iteration: 158 (112 solution, 45 counterexamples)
[02/20 21:59:45]  Generator returned sat in 50.584879 secs.
[02/20 21:59:45]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:00:02]  Verifer returned unsat in 16.047779 secs.
[02/20 22:00:02]  sf_get_cex returned in 16.165330 secs.
[02/20 22:00:02]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:00:02]  --------------------------------------------------------------------------------
[02/20 22:00:02]  Iteration: 159 (113 solution, 45 counterexamples)
[02/20 22:01:09]  Generator returned sat in 63.571280 secs.
[02/20 22:01:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:01:25]  Verifer returned unsat in 14.903610 secs.
[02/20 22:01:25]  sf_get_cex returned in 15.010486 secs.
[02/20 22:01:25]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:01:25]  --------------------------------------------------------------------------------
[02/20 22:01:25]  Iteration: 160 (114 solution, 45 counterexamples)
[02/20 22:02:10]  Generator returned sat in 40.649645 secs.
[02/20 22:02:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:02:26]  Verifer returned unsat in 15.589924 secs.
[02/20 22:02:26]  sf_get_cex returned in 15.689650 secs.
[02/20 22:02:26]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:02:26]  --------------------------------------------------------------------------------
[02/20 22:02:26]  Iteration: 161 (115 solution, 45 counterexamples)
[02/20 22:03:15]  Generator returned sat in 44.724963 secs.
[02/20 22:03:15]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:03:34]  Verifer returned unsat in 19.127837 secs.
[02/20 22:03:34]  sf_get_cex returned in 19.236834 secs.
[02/20 22:03:34]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:03:34]  --------------------------------------------------------------------------------
[02/20 22:03:34]  Iteration: 162 (116 solution, 45 counterexamples)
[02/20 22:06:12]  Generator returned sat in 154.012754 secs.
[02/20 22:06:13]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:06:36]  Verifer returned unsat in 23.048526 secs.
[02/20 22:06:36]  sf_get_cex returned in 23.155516 secs.
[02/20 22:06:36]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:06:36]  --------------------------------------------------------------------------------
[02/20 22:06:36]  Iteration: 163 (117 solution, 45 counterexamples)
[02/20 22:07:31]  Generator returned sat in 50.335563 secs.
[02/20 22:07:31]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:07:41]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 22:07:41]  Verifer returned sat in 9.817192 secs.
[02/20 22:07:41]  sf_get_cex returned in 9.928472 secs.
[02/20 22:07:41]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0           16719.3            1.0           39.9           16680.4             0.0                     0.0            80.8           100.0                0.0     38.9          -1.0    NaN    NaN    NaN       0.0
1           16760.2        40938.9           40.9           16760.2             0.0                     0.0            80.8           100.0                0.0      0.0           0.0   40.9   79.8    0.0       0.0
2           16800.6        40400.0           40.4           16800.6             0.0                     0.0            80.8           100.0                0.0      0.0           0.0   40.4   40.4    0.0       0.0
3           16841.0        40400.0           40.4           16841.0             0.0                     0.0            80.8           100.0                0.0      0.0           0.0   40.4   40.4    0.0       0.0
4           16881.4        40400.0           40.4           16881.4             0.0                     0.0            80.8           100.0                0.0      0.0           0.0   40.4   40.4    0.0       0.0
5           16921.8        40400.0           40.4           16921.8             0.0                     0.0            80.8           100.0                0.0      0.0           0.0   40.4   40.4    0.0       0.0
6           16962.2        40400.0           40.4           16962.2             0.0                     0.0            80.8           100.0                0.0      0.0           0.0   40.4   40.4    0.0       0.0
7           17002.6        40400.0           40.4           17002.6             0.0                     0.0            80.8           100.0                0.0      0.0           0.0   40.4   40.4    0.0       0.0
8           17043.0        40400.0           40.4           17043.0             0.0                     0.0            80.8           100.0                0.0      0.0           0.0   40.4   40.4    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1, buf_size=200, start_state=[0].[0m
[02/20 22:07:41]  --------------------------------------------------------------------------------
[02/20 22:07:41]  Iteration: 164 (117 solution, 46 counterexamples)
[02/20 22:20:22]  Generator returned sat in 756.834365 secs.
[02/20 22:20:23]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 22:21:04]  Verifer returned unsat in 41.323700 secs.
[02/20 22:21:04]  sf_get_cex returned in 41.426401 secs.
[02/20 22:21:04]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 22:21:04]  --------------------------------------------------------------------------------
[02/20 22:21:04]  Iteration: 165 (118 solution, 46 counterexamples)
[02/20 22:21:47]  Generator returned sat in 38.532537 secs.
[02/20 22:21:47]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 22:22:08]  Verifer returned unsat in 20.758971 secs.
[02/20 22:22:08]  sf_get_cex returned in 20.853578 secs.
[02/20 22:22:08]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 22:22:08]  --------------------------------------------------------------------------------
[02/20 22:22:08]  Iteration: 166 (119 solution, 46 counterexamples)
[02/20 22:22:48]  Generator returned sat in 36.571119 secs.
[02/20 22:22:49]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2max_c + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 22:23:17]  Verifer returned unsat in 28.096501 secs.
[02/20 22:23:17]  sf_get_cex returned in 28.189235 secs.
[02/20 22:23:17]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2max_c + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 22:23:17]  --------------------------------------------------------------------------------
[02/20 22:23:17]  Iteration: 167 (120 solution, 46 counterexamples)
[02/20 22:24:20]  Generator returned sat in 59.484133 secs.
[02/20 22:24:21]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 22:24:48]  Verifer returned unsat in 26.912610 secs.
[02/20 22:24:48]  sf_get_cex returned in 27.023880 secs.
[02/20 22:24:48]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 22:24:48]  --------------------------------------------------------------------------------
[02/20 22:24:48]  Iteration: 168 (121 solution, 46 counterexamples)
[02/20 22:27:11]  Generator returned sat in 139.487544 secs.
[02/20 22:27:12]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1max_c + -2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:27:57]  Verifer returned unsat in 45.227464 secs.
[02/20 22:27:57]  sf_get_cex returned in 45.358429 secs.
[02/20 22:27:57]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + -2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:27:57]  --------------------------------------------------------------------------------
[02/20 22:27:57]  Iteration: 169 (122 solution, 46 counterexamples)
[02/20 22:29:48]  Generator returned sat in 106.159892 secs.
[02/20 22:29:48]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:30:04]  Verifer returned unsat in 15.191386 secs.
[02/20 22:30:04]  sf_get_cex returned in 15.312864 secs.
[02/20 22:30:04]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:30:04]  --------------------------------------------------------------------------------
[02/20 22:30:04]  Iteration: 170 (123 solution, 46 counterexamples)
[02/20 22:30:59]  Generator returned sat in 50.682824 secs.
[02/20 22:30:59]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:31:15]  Verifer returned unsat in 15.572800 secs.
[02/20 22:31:15]  sf_get_cex returned in 15.679257 secs.
[02/20 22:31:15]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:31:15]  --------------------------------------------------------------------------------
[02/20 22:31:15]  Iteration: 171 (124 solution, 46 counterexamples)
[02/20 22:32:38]  Generator returned sat in 79.024781 secs.
[02/20 22:32:39]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 22:32:56]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 22:32:56]  Verifer returned sat in 17.157921 secs.
[02/20 22:32:56]  sf_get_cex returned in 17.271440 secs.
[02/20 22:32:56]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A   del_S  del_L  qdelay_t
0          -854.500            1.0         31.125          -854.500             0.0                     0.0           99.75           100.0                2.0      0.0          -1.0     NaN     NaN    NaN       2.0
1          -804.625        49875.0         49.875          -804.625             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
2          -754.750        49875.0         49.875          -754.750             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
3          -704.875        49875.0         49.875          -704.875             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
4          -655.000        49875.0         49.875          -655.000             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
5          -605.125        49875.0         49.875          -605.125             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
6          -555.250        49875.0         49.875          -555.250             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
7          -505.375        49875.0         49.875          -505.375             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
8          -455.500        49875.0         49.875          -455.500             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=200, start_state=[0].[0m
[02/20 22:32:56]  --------------------------------------------------------------------------------
[02/20 22:32:56]  Iteration: 172 (124 solution, 47 counterexamples)
[02/20 22:41:37]  Generator returned sat in 516.267204 secs.
[02/20 22:41:37]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:41:58]  Verifer returned unsat in 20.464230 secs.
[02/20 22:41:58]  sf_get_cex returned in 20.570899 secs.
[02/20 22:41:58]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:41:58]  --------------------------------------------------------------------------------
[02/20 22:41:58]  Iteration: 173 (125 solution, 47 counterexamples)
[02/20 22:44:35]  Generator returned sat in 153.218216 secs.
[02/20 22:44:35]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:44:48]  Verifer returned unsat in 12.542691 secs.
[02/20 22:44:48]  sf_get_cex returned in 12.664595 secs.
[02/20 22:44:48]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:44:48]  --------------------------------------------------------------------------------
[02/20 22:44:48]  Iteration: 174 (126 solution, 47 counterexamples)
[02/20 22:45:45]  Generator returned sat in 52.930322 secs.
[02/20 22:45:46]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:46:07]  Verifer returned unsat in 21.742921 secs.
[02/20 22:46:07]  sf_get_cex returned in 21.859742 secs.
[02/20 22:46:07]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:46:08]  --------------------------------------------------------------------------------
[02/20 22:46:08]  Iteration: 175 (127 solution, 47 counterexamples)
[02/20 22:46:57]  Generator returned sat in 45.513811 secs.
[02/20 22:46:58]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:47:28]  Verifer returned unsat in 30.428154 secs.
[02/20 22:47:28]  sf_get_cex returned in 30.531651 secs.
[02/20 22:47:28]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:47:28]  --------------------------------------------------------------------------------
[02/20 22:47:28]  Iteration: 176 (128 solution, 47 counterexamples)
[02/20 22:48:15]  Generator returned sat in 42.560349 secs.
[02/20 22:48:15]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:48:35]  Verifer returned unsat in 19.735873 secs.
[02/20 22:48:35]  sf_get_cex returned in 19.841411 secs.
[02/20 22:48:35]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:48:35]  --------------------------------------------------------------------------------
[02/20 22:48:35]  Iteration: 177 (129 solution, 47 counterexamples)
[02/20 22:49:24]  Generator returned sat in 44.529312 secs.
[02/20 22:49:24]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:49:43]  Verifer returned unsat in 18.697312 secs.
[02/20 22:49:43]  sf_get_cex returned in 18.804908 secs.
[02/20 22:49:43]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 22:49:43]  --------------------------------------------------------------------------------
[02/20 22:49:43]  Iteration: 178 (130 solution, 47 counterexamples)
[02/20 22:50:56]  Generator returned sat in 69.239047 secs.
[02/20 22:50:57]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 22:51:07]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 22:51:07]  Verifer returned sat in 10.076036 secs.
[02/20 22:51:07]  sf_get_cex returned in 10.172750 secs.
[02/20 22:51:07]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0    -117214.498592       1.000000      34.284507    -117214.498592             0.0                     0.0       68.569014      114.295775                0.0      0.0          -1.0        NaN        NaN    NaN       0.0
1    -117174.500000   39998.591549      39.998592    -117174.500000             0.0                     0.0       68.569014      114.295775                0.0      0.0           0.0  39.998592  39.998592    0.0       0.0
2    -117128.787324   45712.676056      45.712676    -117128.787324             0.0                     0.0       68.569014      114.295775                0.0      0.0           0.0  45.712676  45.712676    0.0       0.0
3    -117077.360563   51426.760563      51.426761    -117077.360563             0.0                     0.0       68.569014      114.295775                0.0      0.0           0.0  51.426761  51.426761    0.0       0.0
4    -117020.219718   57140.845070      57.140845    -117020.219718             0.0                     0.0       68.569014      114.295775                0.0      0.0           0.0  57.140845  57.140845    0.0       0.0
5    -116957.364789   62854.929577      62.854930    -116957.364789             0.0                     0.0       68.569014      114.295775                0.0      0.0           0.0  62.854930  62.854930    0.0       0.0
6    -116888.795775   68569.014085      68.569014    -116888.795775             0.0                     0.0       68.569014      114.295775                0.0      0.0           0.0  68.569014  68.569014    0.0       0.0
7    -116854.511268   34284.507042      34.284507    -116854.511268             0.0                     0.0       68.569014      114.295775                0.0      0.0           0.0  34.284507  34.284507    0.0       0.0
8    -116814.512676   39998.591549      39.998592    -116814.512676             0.0                     0.0       68.569014      114.295775                0.0      0.0           0.0  39.998592  39.998592    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4057/710, buf_size=200, start_state=[0].[0m
[02/20 22:51:07]  --------------------------------------------------------------------------------
[02/20 22:51:07]  Iteration: 179 (130 solution, 48 counterexamples)
[02/20 23:01:33]  Generator returned sat in 621.296155 secs.
[02/20 23:01:33]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 23:02:06]  Verifer returned unsat in 33.290751 secs.
[02/20 23:02:06]  sf_get_cex returned in 33.388502 secs.
[02/20 23:02:06]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 23:02:07]  --------------------------------------------------------------------------------
[02/20 23:02:07]  Iteration: 180 (131 solution, 48 counterexamples)
[02/20 23:03:01]  Generator returned sat in 49.755767 secs.
[02/20 23:03:01]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 23:03:21]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 23:03:21]  Verifer returned sat in 20.231678 secs.
[02/20 23:03:21]  sf_get_cex returned in 20.341819 secs.
[02/20 23:03:21]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A   del_S  del_L  qdelay_t
0     122448.396021            1.0         55.875     122448.396021             0.0                     0.0           89.25           100.0                1.0      0.0          -1.0     NaN     NaN    NaN       1.0
1     122493.021021        44625.0         44.625     122493.021021             0.0                     0.0           89.25           100.0                0.0      0.0           0.0  44.625  44.625    0.0       0.0
2     122539.646021        46625.0         46.625     122539.646021             0.0                     0.0           89.25           100.0                0.0      0.0           0.0  46.625  46.625    0.0       0.0
3     122588.271021        48625.0         48.625     122588.271021             0.0                     0.0           89.25           100.0                0.0      0.0           0.0  48.625  48.625    0.0       0.0
4     122638.896021        50625.0         50.625     122638.896021             0.0                     0.0           89.25           100.0                0.0      0.0           0.0  50.625  50.625    0.0       0.0
5     122691.521021        52625.0         52.625     122691.521021             0.0                     0.0           89.25           100.0                0.0      0.0           0.0  52.625  52.625    0.0       0.0
6     122746.146021        54625.0         54.625     122746.146021             0.0                     0.0           89.25           100.0                0.0      0.0           0.0  54.625  54.625    0.0       0.0
7     122802.771021        56625.0         56.625     122802.771021             0.0                     0.0           89.25           100.0                0.0      0.0           0.0  56.625  56.625    0.0       0.0
8     122847.396021        44625.0         44.625     122847.396021             0.0                     0.0           89.25           100.0                0.0      0.0           0.0  44.625  44.625    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=2, buf_size=200, start_state=[0].[0m
[02/20 23:03:22]  --------------------------------------------------------------------------------
[02/20 23:03:22]  Iteration: 181 (131 solution, 49 counterexamples)
[02/20 23:11:30]  Generator returned sat in 483.725921 secs.
[02/20 23:11:30]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/20 23:11:52]  Improved number of small numbers from 88 to 88 out of a max of 130
[02/20 23:11:52]  Verifer returned sat in 21.683797 secs.
[02/20 23:11:52]  sf_get_cex returned in 21.785443 secs.
[02/20 23:11:52]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t   queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0     122895.888224       0.999756      64.667155     122894.888468             0.0                     0.0       67.666423           100.0                0.0  0.999756          -1.0        NaN        NaN    NaN       0.0
1     122961.555135   65667.910563      65.666911     122961.555135             0.0                     0.0       67.666423           100.0                0.0  0.000000           0.0  65.666911  66.666667    0.0       0.0
2     123028.221802   66666.666667      66.666667     123028.221802             0.0                     0.0       67.666423           100.0                0.0  0.000000           0.0  66.666667  66.666667    0.0       0.0
3     123062.055013   33833.211263      33.833211     123062.055013             0.0                     0.0       67.666423           100.0                0.0  0.000000           0.0  33.833211  33.833211    0.0       0.0
4     123096.887980   34832.967122      34.832967     123096.887980             0.0                     0.0       67.666423           100.0                0.0  0.000000           0.0  34.832967  34.832967    0.0       0.0
5     123132.720703   35832.722982      35.832723     123132.720703             0.0                     0.0       67.666423           100.0                0.0  0.000000           0.0  35.832723  35.832723    0.0       0.0
6     123169.553182   36832.478841      36.832479     123169.553182             0.0                     0.0       67.666423           100.0                0.0  0.000000           0.0  36.832479  36.832479    0.0       0.0
7     123207.385417   37832.234701      37.832235     123207.385417             0.0                     0.0       67.666423           100.0                0.0  0.000000           0.0  37.832235  37.832235    0.0       0.0
8     123246.217407   38831.990560      38.831991     123246.217407             0.0                     0.0       67.666423           100.0                0.0  0.000000           0.0  38.831991  38.831991    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=4095/4096, buf_size=200, start_state=[0].[0m
[02/20 23:11:52]  --------------------------------------------------------------------------------
[02/20 23:11:52]  Iteration: 182 (131 solution, 50 counterexamples)
[02/20 23:21:45]  Generator returned sat in 589.001392 secs.
[02/20 23:21:46]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 23:22:14]  Verifer returned unsat in 28.172492 secs.
[02/20 23:22:14]  sf_get_cex returned in 28.294126 secs.
[02/20 23:22:14]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 23:22:14]  --------------------------------------------------------------------------------
[02/20 23:22:14]  Iteration: 183 (132 solution, 50 counterexamples)
[02/20 23:23:09]  Generator returned sat in 50.074331 secs.
[02/20 23:23:09]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 23:23:34]  Verifer returned unsat in 24.428876 secs.
[02/20 23:23:34]  sf_get_cex returned in 24.554937 secs.
[02/20 23:23:34]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/20 23:23:34]  --------------------------------------------------------------------------------
[02/20 23:23:34]  Iteration: 184 (133 solution, 50 counterexamples)
[02/20 23:24:29]  Generator returned sat in 50.431444 secs.
[02/20 23:24:29]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 23:24:54]  Verifer returned unsat in 24.617100 secs.
[02/20 23:24:54]  sf_get_cex returned in 24.724032 secs.
[02/20 23:24:54]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 23:24:54]  --------------------------------------------------------------------------------
[02/20 23:24:54]  Iteration: 185 (134 solution, 50 counterexamples)
[02/20 23:27:14]  Generator returned sat in 134.906321 secs.
[02/20 23:27:14]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:27:25]  Verifer returned unsat in 11.043327 secs.
[02/20 23:27:25]  sf_get_cex returned in 11.151838 secs.
[02/20 23:27:25]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:27:26]  --------------------------------------------------------------------------------
[02/20 23:27:26]  Iteration: 186 (135 solution, 50 counterexamples)
[02/20 23:28:24]  Generator returned sat in 54.150025 secs.
[02/20 23:28:25]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:28:37]  Verifer returned unsat in 12.455358 secs.
[02/20 23:28:37]  sf_get_cex returned in 12.564118 secs.
[02/20 23:28:37]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:28:37]  --------------------------------------------------------------------------------
[02/20 23:28:37]  Iteration: 187 (136 solution, 50 counterexamples)
[02/20 23:30:01]  Generator returned sat in 79.125007 secs.
[02/20 23:30:02]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1max_c + 1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:30:13]  Verifer returned unsat in 10.967736 secs.
[02/20 23:30:13]  sf_get_cex returned in 11.078947 secs.
[02/20 23:30:13]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + 1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:30:13]  --------------------------------------------------------------------------------
[02/20 23:30:13]  Iteration: 188 (137 solution, 50 counterexamples)
[02/20 23:31:17]  Generator returned sat in 59.304671 secs.
[02/20 23:31:17]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:31:34]  Verifer returned unsat in 16.867674 secs.
[02/20 23:31:34]  sf_get_cex returned in 16.971779 secs.
[02/20 23:31:34]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:31:34]  --------------------------------------------------------------------------------
[02/20 23:31:34]  Iteration: 189 (138 solution, 50 counterexamples)
[02/20 23:33:10]  Generator returned sat in 91.278560 secs.
[02/20 23:33:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 23:33:49]  Verifer returned unsat in 38.875155 secs.
[02/20 23:33:49]  sf_get_cex returned in 38.995792 secs.
[02/20 23:33:49]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/20 23:33:49]  --------------------------------------------------------------------------------
[02/20 23:33:49]  Iteration: 190 (139 solution, 50 counterexamples)
[02/20 23:35:09]  Generator returned sat in 75.421013 secs.
[02/20 23:35:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:35:24]  Verifer returned unsat in 13.654945 secs.
[02/20 23:35:24]  sf_get_cex returned in 13.765429 secs.
[02/20 23:35:24]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:35:24]  --------------------------------------------------------------------------------
[02/20 23:35:24]  Iteration: 191 (140 solution, 50 counterexamples)
[02/20 23:36:21]  Generator returned sat in 52.977484 secs.
[02/20 23:36:22]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 23:36:40]  Verifer returned unsat in 17.922469 secs.
[02/20 23:36:40]  sf_get_cex returned in 18.023707 secs.
[02/20 23:36:40]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/20 23:36:40]  --------------------------------------------------------------------------------
[02/20 23:36:40]  Iteration: 192 (141 solution, 50 counterexamples)
[02/20 23:40:25]  Generator returned sat in 221.049284 secs.
[02/20 23:40:26]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:40:39]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/20 23:40:39]  Verifer returned sat in 13.370849 secs.
[02/20 23:40:39]  sf_get_cex returned in 13.494687 secs.
[02/20 23:40:39]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0     103358.913667            1.0           49.5     103358.913667             0.0                     0.0            99.0           100.0                0.0      0.0          -1.0    NaN    NaN    NaN       0.0
1     103408.413667        49500.0           49.5     103408.413667             0.0                     0.0            99.0           100.0                0.0      0.0           0.0   49.5   49.5    0.0       0.0
2     103457.913667        49500.0           49.5     103457.913667             0.0                     0.0            99.0           100.0                0.0      0.0           0.0   49.5   49.5    0.0       0.0
3     103507.413667        49500.0           49.5     103507.413667             0.0                     0.0            99.0           100.0                0.0      0.0           0.0   49.5   49.5    0.0       0.0
4     103556.913667        49500.0           49.5     103556.913667             0.0                     0.0            99.0           100.0                0.0      0.0           0.0   49.5   49.5    0.0       0.0
5     103606.413667        49500.0           49.5     103606.413667             0.0                     0.0            99.0           100.0                0.0      0.0           0.0   49.5   49.5    0.0       0.0
6     103655.913667        49500.0           49.5     103655.913667             0.0                     0.0            99.0           100.0                0.0      0.0           0.0   49.5   49.5    0.0       0.0
7     103705.413667        49500.0           49.5     103705.413667             0.0                     0.0            99.0           100.0                0.0      0.0           0.0   49.5   49.5    0.0       0.0
8     103754.913667        49500.0           49.5     103754.913667             0.0                     0.0            99.0           100.0                0.0      0.0           0.0   49.5   49.5    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=3/2, buf_size=200, start_state=[0].[0m
[02/20 23:40:39]  --------------------------------------------------------------------------------
[02/20 23:40:39]  Iteration: 193 (141 solution, 51 counterexamples)
[02/20 23:48:05]  Generator returned sat in 441.000767 secs.
[02/20 23:48:05]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 23:48:12]  Verifer returned unsat in 6.397801 secs.
[02/20 23:48:12]  sf_get_cex returned in 6.570522 secs.
[02/20 23:48:12]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/20 23:48:12]  --------------------------------------------------------------------------------
[02/20 23:48:12]  Iteration: 194 (142 solution, 51 counterexamples)
[02/20 23:53:04]  Generator returned sat in 287.753819 secs.
[02/20 23:53:05]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -2max_c + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:53:17]  Verifer returned unsat in 12.276184 secs.
[02/20 23:53:17]  sf_get_cex returned in 12.396116 secs.
[02/20 23:53:17]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:53:17]  --------------------------------------------------------------------------------
[02/20 23:53:17]  Iteration: 195 (143 solution, 51 counterexamples)
[02/20 23:54:20]  Generator returned sat in 58.828366 secs.
[02/20 23:54:21]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1max_c + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:54:35]  Verifer returned unsat in 14.479050 secs.
[02/20 23:54:35]  sf_get_cex returned in 14.589228 secs.
[02/20 23:54:35]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1max_c + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:54:36]  --------------------------------------------------------------------------------
[02/20 23:54:36]  Iteration: 196 (144 solution, 51 counterexamples)
[02/20 23:55:35]  Generator returned sat in 55.331306 secs.
[02/20 23:55:36]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:55:46]  Verifer returned unsat in 9.617034 secs.
[02/20 23:55:46]  sf_get_cex returned in 9.725868 secs.
[02/20 23:55:46]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:55:46]  --------------------------------------------------------------------------------
[02/20 23:55:46]  Iteration: 197 (145 solution, 51 counterexamples)
[02/20 23:57:57]  Generator returned sat in 126.411713 secs.
[02/20 23:57:57]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + 2alpha + 2r_f > 0):
    + 1min_c
else:
    + 1min_c + 1alpha[0m
[02/20 23:58:08]  Improved number of small numbers from 94 to 130 out of a max of 130
[02/20 23:58:08]  Verifer returned sat in 10.939371 secs.
[02/20 23:58:08]  sf_get_cex returned in 11.050136 secs.
[02/20 23:58:08]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0     -65631.588867            1.0      20.999756     -65631.588867             0.0                     0.0            21.0           100.0                2.0      0.0          -1.0    NaN    NaN    NaN       2.0
1     -65610.588867        21000.0      21.000000     -65610.588867             0.0                     0.0            21.0           100.0                0.0      0.0           0.0   21.0   21.0    0.0       0.0
2     -65589.588867        21000.0      21.000000     -65589.588867             0.0                     0.0            21.0           100.0                0.0      0.0           0.0   21.0   21.0    0.0       0.0
3     -65568.588867        21000.0      21.000000     -65568.588867             0.0                     0.0            21.0           100.0                0.0      0.0           0.0   21.0   21.0    0.0       0.0
4     -65547.588867        21000.0      21.000000     -65547.588867             0.0                     0.0            21.0           100.0                0.0      0.0           0.0   21.0   21.0    0.0       0.0
5     -65526.588867        21000.0      21.000000     -65526.588867             0.0                     0.0            21.0           100.0                0.0      0.0           0.0   21.0   21.0    0.0       0.0
6     -65505.588867        21000.0      21.000000     -65505.588867             0.0                     0.0            21.0           100.0                0.0      0.0           0.0   21.0   21.0    0.0       0.0
7     -65484.588867        21000.0      21.000000     -65484.588867             0.0                     0.0            21.0           100.0                0.0      0.0           0.0   21.0   21.0    0.0       0.0
8     -65463.588867        21000.0      21.000000     -65463.588867             0.0                     0.0            21.0           100.0                0.0      0.0           0.0   21.0   21.0    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77823/4096, buf_size=200, start_state=[0].[0m
[02/20 23:58:08]  --------------------------------------------------------------------------------
[02/20 23:58:08]  Iteration: 198 (145 solution, 52 counterexamples)
[02/21 00:13:44]  Generator returned sat in 931.648919 secs.
[02/21 00:13:45]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 00:14:01]  Verifer returned unsat in 15.742548 secs.
[02/21 00:14:01]  sf_get_cex returned in 15.845433 secs.
[02/21 00:14:01]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 00:14:01]  --------------------------------------------------------------------------------
[02/21 00:14:01]  Iteration: 199 (146 solution, 52 counterexamples)
[02/21 00:16:04]  Generator returned sat in 118.236752 secs.
[02/21 00:16:04]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 00:16:14]  Verifer returned unsat in 9.960468 secs.
[02/21 00:16:14]  sf_get_cex returned in 10.057364 secs.
[02/21 00:16:14]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 1min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 00:16:14]  --------------------------------------------------------------------------------
[02/21 00:16:14]  Iteration: 200 (147 solution, 52 counterexamples)
[02/21 00:17:24]  Generator returned sat in 64.572348 secs.
[02/21 00:17:24]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + -1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 00:17:42]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/21 00:17:42]  Verifer returned sat in 17.975326 secs.
[02/21 00:17:42]  sf_get_cex returned in 18.084025 secs.
[02/21 00:17:42]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A   del_S  del_L  qdelay_t
0          -809.623            1.0         40.625          -809.623             0.0                     0.0           99.75           100.0                0.0      0.0          -1.0     NaN     NaN    NaN       0.0
1          -759.748        49875.0         49.875          -759.748             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
2          -709.873        49875.0         49.875          -709.873             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
3          -659.998        49875.0         49.875          -659.998             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
4          -610.123        49875.0         49.875          -610.123             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
5          -560.248        49875.0         49.875          -560.248             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
6          -510.373        49875.0         49.875          -510.373             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
7          -460.498        49875.0         49.875          -460.498             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
8          -410.623        49875.0         49.875          -410.623             0.0                     0.0           99.75           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=200, start_state=[0].[0m
[02/21 00:17:43]  --------------------------------------------------------------------------------
[02/21 00:17:43]  Iteration: 201 (147 solution, 53 counterexamples)
[02/21 00:26:21]  Generator returned sat in 513.677618 secs.
[02/21 00:26:21]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1min_c
else:
    + 1alpha + 1r_f[0m
[02/21 00:26:40]  Improved number of small numbers from 76 to 76 out of a max of 130
[02/21 00:26:40]  Verifer returned sat in 19.013407 secs.
[02/21 00:26:40]  sf_get_cex returned in 19.115094 secs.
[02/21 00:26:41]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0     -14291.959823       0.999756      30.874786     -14291.959823             0.0                     0.0       49.875031           100.0                2.0      0.0          -1.0        NaN        NaN    NaN       2.0
1     -14242.084792   49875.030518      49.875031     -14242.084792             0.0                     0.0       49.875031           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
2     -14192.209761   49875.030518      49.875031     -14192.209761             0.0                     0.0       49.875031           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
3     -14142.334731   49875.030518      49.875031     -14142.334731             0.0                     0.0       49.875031           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
4     -14092.459700   49875.030518      49.875031     -14092.459700             0.0                     0.0       49.875031           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
5     -14042.584670   49875.030518      49.875031     -14042.584670             0.0                     0.0       49.875031           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
6     -13992.709639   49875.030518      49.875031     -13992.709639             0.0                     0.0       49.875031           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
7     -13942.834609   49875.030518      49.875031     -13942.834609             0.0                     0.0       49.875031           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
8     -13892.959578   49875.030518      49.875031     -13892.959578             0.0                     0.0       49.875031           100.0                0.0      0.0           0.0  49.875031  49.875031    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=77825/4096, buf_size=200, start_state=[0].[0m
[02/21 00:26:41]  --------------------------------------------------------------------------------
[02/21 00:26:41]  Iteration: 202 (147 solution, 54 counterexamples)
[02/21 00:41:11]  Generator returned sat in 865.958549 secs.
[02/21 00:41:12]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 2max_c > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 00:41:22]  Verifer returned unsat in 9.732335 secs.
[02/21 00:41:22]  sf_get_cex returned in 9.834764 secs.
[02/21 00:41:22]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 00:41:22]  --------------------------------------------------------------------------------
[02/21 00:41:22]  Iteration: 203 (148 solution, 54 counterexamples)
[02/21 00:45:09]  Generator returned sat in 222.502376 secs.
[02/21 00:45:10]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 00:45:34]  Verifer returned unsat in 23.747120 secs.
[02/21 00:45:34]  sf_get_cex returned in 23.868870 secs.
[02/21 00:45:34]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 00:45:34]  --------------------------------------------------------------------------------
[02/21 00:45:34]  Iteration: 204 (149 solution, 54 counterexamples)
[02/21 00:48:47]  Generator returned sat in 188.159170 secs.
[02/21 00:48:47]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c[0m
[02/21 00:48:53]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/21 00:48:53]  Verifer returned sat in 5.278971 secs.
[02/21 00:48:53]  sf_get_cex returned in 5.387487 secs.
[02/21 00:48:53]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A   del_S  del_L  qdelay_t
0         -7099.500            1.0        34.5625         -7099.500             0.0                     0.0          49.875           100.0                2.0      0.0          -1.0     NaN     NaN    NaN       2.0
1         -7049.625        49875.0        49.8750         -7049.625             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
2         -6999.750        49875.0        49.8750         -6999.750             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
3         -6949.875        49875.0        49.8750         -6949.875             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
4         -6900.000        49875.0        49.8750         -6900.000             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
5         -6850.125        49875.0        49.8750         -6850.125             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
6         -6800.250        49875.0        49.8750         -6800.250             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
7         -6750.375        49875.0        49.8750         -6750.375             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
8         -6700.500        49875.0        49.8750         -6700.500             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=200, start_state=[0].[0m
[02/21 00:48:53]  --------------------------------------------------------------------------------
[02/21 00:48:53]  Iteration: 205 (149 solution, 55 counterexamples)
[02/21 00:53:51]  Generator returned sat in 293.174706 secs.
[02/21 00:53:51]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -2min_c + 1max_c + 2alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c[0m
[02/21 00:53:52]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/21 00:53:52]  Verifer returned sat in 0.608836 secs.
[02/21 00:53:52]  sf_get_cex returned in 0.699705 secs.
[02/21 00:53:52]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A   del_S  del_L  qdelay_t
0      -7099.500244            1.0      36.249512      -7099.500244             0.0                     0.0          49.875           100.0                2.0      0.0          -1.0     NaN     NaN    NaN       2.0
1      -7049.625244        49875.0      49.875000      -7049.625244             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
2      -6999.750244        49875.0      49.875000      -6999.750244             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
3      -6949.875244        49875.0      49.875000      -6949.875244             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
4      -6900.000244        49875.0      49.875000      -6900.000244             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
5      -6850.125244        49875.0      49.875000      -6850.125244             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
6      -6800.250244        49875.0      49.875000      -6800.250244             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
7      -6750.375244        49875.0      49.875000      -6750.375244             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
8      -6700.500244        49875.0      49.875000      -6700.500244             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=73727/4096, buf_size=200, start_state=[0].[0m
[02/21 00:53:52]  --------------------------------------------------------------------------------
[02/21 00:53:52]  Iteration: 206 (149 solution, 56 counterexamples)
[02/21 00:57:35]  Generator returned sat in 217.633001 secs.
[02/21 00:57:35]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + 1max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c[0m
[02/21 00:57:36]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/21 00:57:36]  Verifer returned sat in 0.397514 secs.
[02/21 00:57:36]  sf_get_cex returned in 0.483960 secs.
[02/21 00:57:36]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t   del_A   del_S  del_L  qdelay_t
0      -7099.500488       0.999756      43.062012      -7099.500488             0.0                     0.0          49.875           100.0                2.0      0.0          -1.0     NaN     NaN    NaN       2.0
1      -7049.625488   49875.000000      49.875000      -7049.625488             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
2      -6999.750488   49875.000000      49.875000      -6999.750488             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
3      -6949.875488   49875.000000      49.875000      -6949.875488             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
4      -6900.000488   49875.000000      49.875000      -6900.000488             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
5      -6850.125488   49875.000000      49.875000      -6850.125488             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
6      -6800.250488   49875.000000      49.875000      -6800.250488             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
7      -6750.375488   49875.000000      49.875000      -6750.375488             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
8      -6700.500488   49875.000000      49.875000      -6700.500488             0.0                     0.0          49.875           100.0                0.0      0.0           0.0  49.875  49.875    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=36863/2048, buf_size=200, start_state=[0].[0m
[02/21 00:57:36]  --------------------------------------------------------------------------------
[02/21 00:57:36]  Iteration: 207 (149 solution, 57 counterexamples)
[02/21 01:14:26]  Generator returned sat in 1005.100943 secs.
[02/21 01:14:27]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 2min_c + -1max_c + 2alpha + -1r_f > 0):
    + 1min_c
else:
    + 1min_c + 1alpha[0m
[02/21 01:14:40]  Verifer returned unsat in 13.498108 secs.
[02/21 01:14:40]  sf_get_cex returned in 13.600836 secs.
[02/21 01:14:40]  Proved solution: 
[1m[92mr_f = max alpha,
if (+ 2min_c + -1max_c + 2alpha + -1r_f > 0):
    + 1min_c
else:
    + 1min_c + 1alpha[0m
[02/21 01:14:41]  --------------------------------------------------------------------------------
[02/21 01:14:41]  Iteration: 208 (150 solution, 57 counterexamples)
[02/21 01:16:13]  Generator returned sat in 87.060662 secs.
[02/21 01:16:13]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1min_c
else:
    + 1min_c + 1alpha[0m
[02/21 01:16:22]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/21 01:16:22]  Verifer returned sat in 8.385516 secs.
[02/21 01:16:22]  sf_get_cex returned in 8.490375 secs.
[02/21 01:16:22]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t      del_A      del_S  del_L  qdelay_t
0      24946.666667       1.000000      46.333333      24946.666667             0.0                     0.0       46.333333           100.0                2.0      0.0          -1.0        NaN        NaN    NaN       2.0
1      24993.000000   46333.333333      46.333333      24993.000000             0.0                     0.0       46.333333           100.0                0.0      0.0           0.0  46.333333  46.333333    0.0       0.0
2      25039.333333   46333.333333      46.333333      25039.333333             0.0                     0.0       46.333333           100.0                0.0      0.0           0.0  46.333333  46.333333    0.0       0.0
3      25085.666667   46333.333333      46.333333      25085.666667             0.0                     0.0       46.333333           100.0                0.0      0.0           0.0  46.333333  46.333333    0.0       0.0
4      25132.000000   46333.333333      46.333333      25132.000000             0.0                     0.0       46.333333           100.0                0.0      0.0           0.0  46.333333  46.333333    0.0       0.0
5      25178.333333   46333.333333      46.333333      25178.333333             0.0                     0.0       46.333333           100.0                0.0      0.0           0.0  46.333333  46.333333    0.0       0.0
6      25224.666667   46333.333333      46.333333      25224.666667             0.0                     0.0       46.333333           100.0                0.0      0.0           0.0  46.333333  46.333333    0.0       0.0
7      25271.000000   46333.333333      46.333333      25271.000000             0.0                     0.0       46.333333           100.0                0.0      0.0           0.0  46.333333  46.333333    0.0       0.0
8      25317.333333   46333.333333      46.333333      25317.333333             0.0                     0.0       46.333333           100.0                0.0      0.0           0.0  46.333333  46.333333    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=False, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=19, buf_size=200, start_state=[0].[0m
[02/21 01:16:22]  --------------------------------------------------------------------------------
[02/21 01:16:22]  Iteration: 209 (150 solution, 58 counterexamples)
[02/21 01:35:58]  Generator returned sat in 1171.298059 secs.
[02/21 01:35:59]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -2r_f > 0):
    + 2min_c
else:
    + 1/2min_c[0m
[02/21 01:36:15]  Improved number of small numbers from 89 to 90 out of a max of 130
[02/21 01:36:15]  Verifer returned sat in 16.057874 secs.
[02/21 01:36:15]  sf_get_cex returned in 16.153888 secs.
[02/21 01:36:15]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A       del_S     del_L  qdelay_t
0    -158776.193197       0.999756     200.500000    -158781.006048        0.000000                0.000000        3.999023      400.999756                1.0    4.812851          -1.0         NaN         NaN       NaN       1.0
1    -158774.193685    2004.324570       1.999512    -158774.193685        0.000000                0.000000        6.812363      400.999756                0.0    0.000000           0.0    1.999512    6.812363  0.000000       0.0
2    -158760.568960   13624.725342      13.624725    -158760.568960        0.000000                0.000000       13.624725      400.999756                0.0    0.000000           0.0   13.624725   13.624725  0.000000       0.0
3    -158733.319509   27249.450684      27.249451    -158733.319509        0.000000                0.000000       27.249451      400.999756                0.0    0.000000           0.0   27.249451   27.249451  0.000000       0.0
4    -158678.820608   54498.901367      54.498901    -158678.820608        0.000000                0.000000       54.498901      400.999756                0.0    0.000000           0.0   54.498901   54.498901  0.000000       0.0
5    -158569.822805  108997.802734     108.997803    -158578.820608        0.000000                0.000000      100.000000      400.999756                0.0    8.997803           0.0  108.997803  100.000000  0.000000       0.0
6    -158369.822805  200008.997803     200.000000    -158478.820608        0.000000                0.000000      100.000000      400.999756                0.0  108.997803           0.0  200.000000  100.000000  0.000000       0.0
7    -158169.822805  200108.997803     200.000000    -158378.820608        8.997803                0.000000      100.000000      100.000000                1.0  200.000000           1.0  200.000000  100.000000  8.997803       1.0
8    -158119.822805   50208.997803      50.000000    -158278.820608        8.997803                8.997803      100.000000      100.000000                1.0  150.000000           1.0   50.000000  100.000000  0.000000       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=36855/4096, beliefs_remain_consistent=True, beliefs_improve=True, alpha=4095/4096, buf_size=200, start_state=[0].[0m
[02/21 01:36:15]  --------------------------------------------------------------------------------
[02/21 01:36:15]  Iteration: 210 (150 solution, 59 counterexamples)
[02/21 01:48:20]  Generator returned sat in 719.218124 secs.
[02/21 01:48:20]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 2r_f[0m
[02/21 01:48:37]  Improved number of small numbers from 63 to 64 out of a max of 130
[02/21 01:48:37]  Verifer returned sat in 16.498060 secs.
[02/21 01:48:37]  sf_get_cex returned in 16.587172 secs.
[02/21 01:48:37]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t     queue_t  utilized_0,t       del_A  del_S      del_L  qdelay_t
0    -356706.994207       0.999512      56.125031    -356805.994451        0.000000                0.000000       99.999756      100.999512                1.0   99.000244          -1.0         NaN    NaN        NaN       1.0
1    -356594.744146  112349.061279     112.250061    -356705.994451        0.000000                0.000000      100.000000      100.999512                0.0  111.250305           0.0  112.250061  100.0   0.000000       0.0
2    -356370.244024  224611.372375     224.500122    -356605.994451       35.750427                0.000000      100.000000      100.000000                1.0  200.000000           1.0  224.500122  100.0  35.750427       1.0
3    -356320.244024   50235.750427      50.000000    -356505.994451       35.750427               35.750427      100.000000      100.000000                1.0  150.000000           1.0   50.000000  100.0   0.000000       1.0
4    -356220.244024  100185.750427     100.000000    -356405.994451       35.750427               35.750427      100.000000      100.000000                2.0  150.000000           1.0  100.000000  100.0   0.000000       2.0
5    -356020.244024  200185.750427     200.000000    -356305.994451       85.750427               35.750427      100.000000      100.000000                1.0  200.000000           1.0  200.000000  100.0  50.000000       1.0
6    -355970.244024   50285.750427      50.000000    -356205.994451       85.750427               85.750427      100.000000      100.000000                1.0  150.000000           1.0   50.000000  100.0   0.000000       1.0
7    -355870.244024  100235.750427     100.000000    -356105.994451       85.750427               85.750427      100.000000      100.000000                2.0  150.000000           1.0  100.000000  100.0   0.000000       2.0
8    -355670.244024  200235.750427     200.000000    -356005.994451      135.750427               85.750427      100.000000      100.000000                1.0  200.000000           1.0  200.000000  100.0  50.000000       1.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, 
, large_loss_count=2, loss_amount=2224135/16384, beliefs_remain_consistent=True, beliefs_improve=True, alpha=25089/4096, buf_size=200, start_state=[0].[0m
[02/21 01:48:37]  --------------------------------------------------------------------------------
[02/21 01:48:37]  Iteration: 211 (150 solution, 60 counterexamples)
[02/21 02:10:13]  Generator returned sat in 1290.388062 secs.
[02/21 02:10:13]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ 1max_c + -2r_f > 0):
    + 2r_f
else:
    + 1/2min_c[0m
[02/21 02:10:22]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/21 02:10:22]  Verifer returned sat in 8.433385 secs.
[02/21 02:10:22]  sf_get_cex returned in 8.546932 secs.
[02/21 02:10:22]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0          -51037.5            1.0           6.25          -51048.0             0.0                     0.0            24.0           401.0                1.0     10.5          -1.0    NaN    NaN    NaN       1.0
1          -51025.0        12510.5          12.50          -51025.0             0.0                     0.0            24.0           401.0                0.0      0.0           0.0   12.5   23.0    0.0       0.0
2          -51000.0        25000.0          25.00          -51000.0             0.0                     0.0            25.0           401.0                0.0      0.0           0.0   25.0   25.0    0.0       0.0
3          -50950.0        50000.0          50.00          -50950.0             0.0                     0.0            50.0           401.0                0.0      0.0           0.0   50.0   50.0    0.0       0.0
4          -50850.0       100000.0         100.00          -50850.0             0.0                     0.0           100.0           401.0                0.0      0.0           0.0  100.0  100.0    0.0       0.0
5          -50650.0       200000.0         200.00          -50750.0             0.0                     0.0           100.0           401.0                0.0    100.0           0.0  200.0  100.0    0.0       0.0
6          -50250.0       400100.0         400.00          -50650.0           200.0                     0.0           100.0           100.0                1.0    200.0           1.0  400.0  100.0  200.0       1.0
7          -50200.0        50400.0          50.00          -50550.0           200.0                   200.0           100.0           100.0                1.0    150.0           1.0   50.0  100.0    0.0       1.0
8          -50150.0        50350.0          50.00          -50450.0           200.0                   200.0           100.0           100.0                2.0    100.0           1.0   50.0  100.0    0.0       2.0
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, 
, ramp_down_cwnd=False, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, 
, large_loss_count=1, loss_amount=200, beliefs_remain_consistent=True, beliefs_improve=True, alpha=1, buf_size=200, start_state=[0].[0m
[02/21 02:10:22]  --------------------------------------------------------------------------------
[02/21 02:10:22]  Iteration: 212 (150 solution, 61 counterexamples)
[02/21 02:31:37]  Generator returned sat in 1269.957430 secs.
[02/21 02:31:38]  Candidate solution: 
[1m[94mr_f = max alpha,
if (+ -1min_c + -2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 2r_f[0m
[02/21 02:31:56]  Improved number of small numbers from 130 to 130 out of a max of 130
[02/21 02:31:56]  Verifer returned sat in 17.700066 secs.
[02/21 02:31:56]  sf_get_cex returned in 17.814635 secs.
[02/21 02:31:56]  Counter example: 
[93m   adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__loss_detected_0,t  adv__min_c_0,t  adv__max_c_0,t  adv__min_qdel_0,t  queue_t  utilized_0,t  del_A  del_S  del_L  qdelay_t
0             -16.5            1.0           2.25             -16.5             0.0                     0.0             6.0           100.0                1.0      0.0          -1.0    NaN    NaN    NaN       1.0
1             -12.0         4500.0           4.50             -12.0             0.0                     0.0             6.0           100.0                0.0      0.0           0.0    4.5    4.5    0.0       0.0
2              -9.0         3000.0           3.00              -9.0             0.0                     0.0             6.0           100.0                0.0      0.0           0.0    3.0    3.0    0.0       0.0
3              -3.0         6000.0           6.00              -3.0             0.0                     0.0             6.0           100.0                0.0      0.0           0.0    6.0    6.0    0.0       0.0
4               0.0         3000.0           3.00               0.0             0.0                     0.0             6.0           100.0                0.0      0.0           0.0    3.0    3.0    0.0       0.0
5               6.0         6000.0           6.00               6.0             0.0                     0.0             6.0           100.0                0.0      0.0           0.0    6.0    6.0    0.0       0.0
6               9.0         3000.0           3.00               9.0             0.0                     0.0             6.0           100.0                0.0      0.0           0.0    3.0    3.0    0.0       0.0
7              15.0         6000.0           6.00              15.0             0.0                     0.0             6.0           100.0                0.0      0.0           0.0    6.0    6.0    0.0       0.0
8              18.0         3000.0           3.00              18.0             0.0                     0.0             6.0           100.0                0.0      0.0           0.0    3.0    3.0    0.0       0.0
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_large_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, 
, ramp_down_cwnd=True, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, 
, large_loss_count=0, loss_amount=0, beliefs_remain_consistent=True, beliefs_improve=False, alpha=1, buf_size=200, start_state=[0].[0m
[02/21 02:31:56]  --------------------------------------------------------------------------------
[02/21 02:31:56]  Iteration: 213 (150 solution, 62 counterexamples)
[02/21 02:32:12]  Generator returned unsat in 10.689344 secs.
[02/21 02:32:12]  [96mNo more solutions found[0m
[02/21 02:32:12]  Final solutions:
[02/21 02:32:12]  0: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  1: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  2: [1m[92mr_f = max alpha,
if (+ -2max_c + 2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  3: [1m[92mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  4: [1m[92mr_f = max alpha,
if (+ 2min_c + -1max_c + -2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  5: [1m[92mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  6: [1m[92mr_f = max alpha,
if (+ -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  7: [1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  8: [1m[92mr_f = max alpha,
if (+ 1max_c + -1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/21 02:32:12]  9: [1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  10: [1m[92mr_f = max alpha,
if (+ -1min_qdel + 1R > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  11: [1m[92mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/21 02:32:12]  12: [1m[92mr_f = max alpha,
if (+ 1max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/21 02:32:12]  13: [1m[92mr_f = max alpha,
if (+ -1min_qdel + 1R > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  14: [1m[92mr_f = max alpha,
if (+ 1max_c + -1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/21 02:32:12]  15: [1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  16: [1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  17: [1m[92mr_f = max alpha,
if (+ 1max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  18: [1m[92mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  19: [1m[92mr_f = max alpha,
if (+ 1max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  20: [1m[92mr_f = max alpha,
if (+ 1min_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  21: [1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  22: [1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  23: [1m[92mr_f = max alpha,
if (+ 1min_qdel > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  24: [1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/21 02:32:12]  25: [1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  26: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  27: [1m[92mr_f = max alpha,
if (+ 1max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  28: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  29: [1m[92mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  30: [1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + 1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  31: [1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  32: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/21 02:32:12]  33: [1m[92mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  34: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  35: [1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  36: [1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + 2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  37: [1m[92mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  38: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  39: [1m[92mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  40: [1m[92mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  41: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  42: [1m[92mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  43: [1m[92mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  44: [1m[92mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  45: [1m[92mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  46: [1m[92mr_f = max alpha,
if (+ 2max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  47: [1m[92mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/21 02:32:12]  48: [1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  49: [1m[92mr_f = max alpha,
if (+ -1max_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  50: [1m[92mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  51: [1m[92mr_f = max alpha,
if (+ 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  52: [1m[92mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  53: [1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  54: [1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  55: [1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  56: [1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  57: [1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + -1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/21 02:32:12]  58: [1m[92mr_f = max alpha,
if (+ -1min_qdel + 2R > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  59: [1m[92mr_f = max alpha,
if (+ -2min_c + 1max_c + -2alpha + 1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c[0m
[02/21 02:32:12]  60: [1m[92mr_f = max alpha,
if (+ -2min_c + 1max_c + 2alpha > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  61: [1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  62: [1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  63: [1m[92mr_f = max alpha,
if (+ -2max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  64: [1m[92mr_f = max alpha,
if (+ -1min_c + -2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  65: [1m[92mr_f = max alpha,
if (+ 1max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  66: [1m[92mr_f = max alpha,
if (+ -1min_c + -1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  67: [1m[92mr_f = max alpha,
if (+ 1min_c + -1max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  68: [1m[92mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  69: [1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  70: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  71: [1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  72: [1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  73: [1m[92mr_f = max alpha,
if (+ 2max_c + -2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/21 02:32:12]  74: [1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  75: [1m[92mr_f = max alpha,
if (+ 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  76: [1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  77: [1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  78: [1m[92mr_f = max alpha,
if (+ -1max_c + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  79: [1m[92mr_f = max alpha,
if (+ 1min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  80: [1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  81: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/21 02:32:12]  82: [1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + 1alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  83: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  84: [1m[92mr_f = max alpha,
if (+ 1max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  85: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  86: [1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  87: [1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  88: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  89: [1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + -1alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  90: [1m[92mr_f = max alpha,
if (+ 1max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  91: [1m[92mr_f = max alpha,
if (+ -1min_c + -1alpha + 2r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  92: [1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + -1alpha > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  93: [1m[92mr_f = max alpha,
if (+ 1min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  94: [1m[92mr_f = max alpha,
if (+ 2max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  95: [1m[92mr_f = max alpha,
if (+ 2min_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  96: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + -1alpha + 1r_f[0m
[02/21 02:32:12]  97: [1m[92mr_f = max alpha,
if (+ 1max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  98: [1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  99: [1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  100: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  101: [1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  102: [1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + -1alpha > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  103: [1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  104: [1m[92mr_f = max alpha,
if (+ 1min_qdel > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  105: [1m[92mr_f = max alpha,
if (+ -1min_c + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  106: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  107: [1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  108: [1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  109: [1m[92mr_f = max alpha,
if (+ 2min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  110: [1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + 1alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  111: [1m[92mr_f = max alpha,
if (+ -2max_c + 2r_f > 0):
    + 1/2r_f
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  112: [1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + 2alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2r_f[0m
[02/21 02:32:12]  113: [1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  114: [1m[92mr_f = max alpha,
if (+ -2max_c + 1alpha + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  115: [1m[92mr_f = max alpha,
if (+ 2min_c + -1max_c + 2alpha + -1r_f > 0):
    + 1min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  116: [1m[92mr_f = max alpha,
if (+ -2max_c + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  117: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  118: [1m[92mr_f = max alpha,
if (+ 2min_c + -1max_c + -2alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  119: [1m[92mr_f = max alpha,
if (+ -2min_c + 1max_c + 2alpha > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  120: [1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  121: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  122: [1m[92mr_f = max alpha,
if (+ 1min_c + -1max_c + 1alpha > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  123: [1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  124: [1m[92mr_f = max alpha,
if (+ 1min_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  125: [1m[92mr_f = max alpha,
if (+ -2min_c + 2r_f > 0):
    + -1alpha + 1r_f
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  126: [1m[92mr_f = max alpha,
if (+ -2min_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  127: [1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + -1alpha + 1r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  128: [1m[92mr_f = max alpha,
if (+ -1max_c + 2alpha + 1r_f > 0):
    + 1/2min_c
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  129: [1m[92mr_f = max alpha,
if (+ -1max_c + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  130: [1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  131: [1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  132: [1m[92mr_f = max alpha,
if (+ 1max_c + 1alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  133: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  134: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  135: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  136: [1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + 2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/21 02:32:12]  137: [1m[92mr_f = max alpha,
if (+ -1min_c + 1max_c > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  138: [1m[92mr_f = max alpha,
if (+ -1min_c + -2alpha + 2r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  139: [1m[92mr_f = max alpha,
if (+ 1min_c + -1max_c + -2alpha + 1r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  140: [1m[92mr_f = max alpha,
if (+ 1min_qdel + -1R > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  141: [1m[92mr_f = max alpha,
if (+ 2min_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1/2min_c[0m
[02/21 02:32:12]  142: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + 1alpha + -2r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  143: [1m[92mr_f = max alpha,
if (+ 2max_c + -2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2r_f[0m
[02/21 02:32:12]  144: [1m[92mr_f = max alpha,
if (+ 1min_c + -2max_c + 2alpha + 1r_f > 0):
    + 1/2r_f
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  145: [1m[92mr_f = max alpha,
if (+ -2min_c + 2max_c + 2alpha + -1r_f > 0):
    + 1alpha + 1r_f
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  146: [1m[92mr_f = max alpha,
if (+ -1min_c + 2max_c + -2alpha + -1r_f > 0):
    + 1min_c + 1alpha
else:
    + 1min_c + -1alpha[0m
[02/21 02:32:12]  147: [1m[92mr_f = max alpha,
if (+ -1min_c + -1max_c + -2alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1alpha + 1r_f[0m
[02/21 02:32:12]  148: [1m[92mr_f = max alpha,
if (+ -1max_c + -1alpha + 2r_f > 0):
    + 1min_c + -1alpha
else:
    + 1min_c + 1alpha[0m
[02/21 02:32:12]  149: [1m[92mr_f = max alpha,
if (+ 1min_c + 1max_c + -2alpha + -2r_f > 0):
    + 1alpha + 1r_f
else:
    + 1/2min_c[0m
[02/21 02:32:12]  Took 37723.290920 secs.
