[07/11 20:17:26]  Iteration: 1
[07/11 20:17:26]  Generator returned sat in 0.004251 secs.
[07/11 20:17:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 2S_f[0][t-2] + 2S_f[0][t-3] + 2S_f[0][t-4] + 2)[0m
[07/11 20:17:26]  Improved gap from 3/200 to 100
[07/11 20:17:26]  Improved number of small numbers from 77 to 77 out of a max of 77
[07/11 20:17:26]  Counter example: 
[93m   arrival_0,t  cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   313.375625     0.005  -186.624375  186.624375         0.0
1   313.375625   500.000   -86.624375  186.624375         0.0
2   313.375625   400.000   -74.624375  186.624375         0.0
3   313.375625     0.005    13.375625  186.624375         0.0
4   313.375625     0.010   113.375625  186.624375         0.0
5   313.375625     0.010   213.375625  186.624375         0.0
6   746.380625   533.005   386.375625  186.624375         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:26]  Iteration: 2
[07/11 20:17:26]  Generator returned sat in 0.013638 secs.
[07/11 20:17:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-3] + 3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:17:26]  Improved gap from inf to 100
[07/11 20:17:26]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:26]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0    649.62793    0.004883  -210.374268  110.374512         0.0
1    649.62793  859.999756  -110.374268  110.374512         0.0
2    649.62793  760.000000   -10.374512  110.374512         0.0
3    649.62793    0.004883    89.625732  110.374512         0.0
4    649.62793    0.010000   289.625488  110.374512         0.0
5    649.62793    0.010000   389.625488  110.374512         0.0
6    749.62793  360.002441   389.625488  110.374512         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:26]  Iteration: 3
[07/11 20:17:27]  Generator returned sat in 0.013536 secs.
[07/11 20:17:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-3] + 3/2S_f[0][t-4] + 1)[0m
[07/11 20:17:27]  Improved gap from inf to 100
[07/11 20:17:27]  Improved number of small numbers from 75 to 77 out of a max of 77
[07/11 20:17:27]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   649.627686    0.004883  -210.374268  110.374512         0.0
1   649.627686  859.999756  -110.374268  110.374512         0.0
2   649.627686  760.000000   -10.041016  110.374512         0.0
3   649.627686    0.004639    89.625488  110.374512         0.0
4   649.627686    0.010000   289.625488  110.374512         0.0
5   649.627686    0.010000   389.625488  110.374512         0.0
6   749.627686  360.002197   389.625488  110.374512         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:27]  Iteration: 4
[07/11 20:17:27]  Generator returned sat in 0.008182 secs.
[07/11 20:17:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-3] + 3/2S_f[0][t-4] + 0)[0m
[07/11 20:17:27]  Improved gap from 0 to 100
[07/11 20:17:27]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:27]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t  wasted_t  tot_lost_t
0   100.500732    0.004883   -99.499268 -0.500488         0.0
1   100.500732    0.002197     0.500488 -0.500488         0.0
2   100.500732    0.002197   100.500732 -0.500488         0.0
3   760.502930  660.002197   200.500488 -0.500488         0.0
4   760.502930    0.010000   400.500488 -0.500488         0.0
5   802.502930  402.002441   400.500732 -0.500488         0.0
6  1152.503174  752.002441   500.500488 -0.500488         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:28]  Iteration: 5
[07/11 20:17:28]  Generator returned sat in 0.021130 secs.
[07/11 20:17:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-3] + 3/2S_f[0][t-4] + 0)[0m
[07/11 20:17:28]  Improved gap from inf to 100
[07/11 20:17:28]  Improved number of small numbers from 71 to 77 out of a max of 77
[07/11 20:17:28]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t  wasted_t  tot_lost_t
0   100.500732    0.004639   -99.499268 -0.500732         0.0
1   100.500732    0.002197    73.000977 -0.500732         0.0
2   100.500732    0.002197   100.500732 -0.500732         0.0
3   760.502686  660.001953   225.512207 -0.500732         0.0
4   760.502686    0.010000   400.500732 -0.500732         0.0
5   760.502930  360.002197   474.500732 -0.500732         0.0
6   975.258301  500.757568   500.500732 -0.500732         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:28]  Iteration: 6
[07/11 20:17:28]  Generator returned sat in 0.111286 secs.
[07/11 20:17:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:17:28]  Improved gap from inf to 100
[07/11 20:17:28]  Improved number of small numbers from 40 to 75 out of a max of 77
[07/11 20:17:28]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t   wasted_t  tot_lost_t
0  -389.301270    0.004395  -589.301392  589.30127         0.0
1  -389.301270  199.997559  -576.502197  589.30127         0.0
2  -389.301270    0.002441  -389.301270  589.30127         0.0
3    70.700928  460.002197  -289.301270  589.30127         0.0
4    70.700928  360.000000  -289.301270  589.30127         0.0
5   138.700928  428.002197   -89.301270  589.30127         0.0
6   401.500000  490.801270   -89.301270  589.30127         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:29]  Iteration: 7
[07/11 20:17:29]  Generator returned sat in 0.195188 secs.
[07/11 20:17:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -2)[0m
[07/11 20:17:29]  Improved gap from inf to 100
[07/11 20:17:29]  Improved number of small numbers from 73 to 73 out of a max of 77
[07/11 20:17:29]  Counter example: 
[93m    arrival_0,t      cwnd_0,t   service_0,t  wasted_t  tot_lost_t
0  60634.000000      0.004395  60434.000000  -60434.0         0.0
1  60634.000000      0.002197  60434.000000  -60434.0         0.0
2  60634.000000      0.002197  60634.000000  -60434.0         0.0
3  90999.002197  30365.002197  60634.001099  -60434.0         0.0
4  90999.002197  29915.000549  60734.000000  -60434.0         0.0
5  91098.997803  30364.997803  60934.000000  -60434.0         0.0
6  91199.002197  30265.002197  60934.000000  -60434.0         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:29]  Iteration: 8
[07/11 20:17:29]  Generator returned sat in 0.069562 secs.
[07/11 20:17:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -2)[0m
[07/11 20:17:30]  Improved gap from 1249/102400 to 100
[07/11 20:17:30]  Improved number of small numbers from 77 to 77 out of a max of 77
[07/11 20:17:30]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   944.006592    0.004395   944.004395 -944.004395         0.0
1   944.006592    0.002197   944.004395 -944.004395         0.0
2  1704.006592  760.002197  1044.004395 -944.004395         0.0
3  1704.006592    0.002197  1204.004395 -944.004395         0.0
4  1704.006592  370.002197  1344.004395 -944.004395         0.0
5  1704.006592  360.002197  1344.004395 -944.004395         0.0
6  1804.006592  460.002197  1444.004395 -944.004395         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:30]  Iteration: 9
[07/11 20:17:30]  Generator returned sat in 0.023175 secs.
[07/11 20:17:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + -2)[0m
[07/11 20:17:30]  Improved gap from inf to 100
[07/11 20:17:30]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:17:30]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  tot_lost_t
0  -389.667480    0.003906 -1221.337158  1121.337158         0.0
1  -389.667480  831.668701 -1021.337158  1121.337158         0.0
2  -389.667480  631.669678  -921.337158  1121.337158         0.0
3  -389.667480    0.002197  -921.336914  1121.337158         0.0
4  -389.667480  458.668701  -821.336914  1121.337158         0.0
5  -312.668457  508.668457  -672.669434  1121.337158         0.0
6  -189.667236  483.002197  -621.337158  1121.337158         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:30]  Iteration: 10
[07/11 20:17:31]  Generator returned sat in 0.090021 secs.
[07/11 20:17:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:17:31]  Improved gap from 1/512 to 48.4375
[07/11 20:17:31]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:31]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0 -15499.676514    0.003662 -15599.676514  15599.676270         0.0
1 -15499.676514    0.001953 -15548.114014  15599.676514         0.0
2 -15499.676514   48.437256 -15499.676514  15599.676514         0.0
3 -15151.239014  348.437500 -15299.676514  15599.676514         0.0
4 -15151.239014   52.000000 -15201.237061  15599.676514         0.0
5 -15151.239014    0.010000 -15199.676514  15651.239014         0.0
6 -15151.239014    0.010000 -15151.239014  15651.239014         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:17:31]  Iteration: 11
[07/11 20:17:31]  Generator returned sat in 0.150404 secs.
[07/11 20:17:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -2S_f[0][t-1] + -2S_f[0][t-2] + -1S_f[0][t-3] + 2S_f[0][t-4] + 2)[0m
[07/11 20:17:31]  Improved gap from 15/16384 to 100
[07/11 20:17:32]  Improved number of small numbers from 30 to 77 out of a max of 77
[07/11 20:17:32]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0  -430.332031    0.003662  -630.333984  530.333984         0.0
1  -430.332031    0.001953  -430.333984  530.333984         0.0
2   162.667725  593.001709  -330.333984  530.333984         0.0
3   162.667725    0.001709  -330.333984  530.333984         0.0
4   162.667969  493.001953  -197.333984  530.333984         0.0
5   329.667969  527.001953   -30.333984  530.333984         0.0
6   329.667969  127.001953   -30.333984  530.333984         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:32]  Iteration: 12
[07/11 20:17:32]  Generator returned sat in 0.035285 secs.
[07/11 20:17:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -2S_f[0][t-1] + -2S_f[0][t-2] + -1S_f[0][t-3] + 2S_f[0][t-4] + 3/2)[0m
[07/11 20:17:32]  Improved gap from inf to 100
[07/11 20:17:32]  Improved number of small numbers from 67 to 71 out of a max of 77
[07/11 20:17:32]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0  -435.499756    0.003662  -635.500651  535.500651         0.0
1  -435.499756    0.001953  -435.500651  535.500651         0.0
2   172.501302  608.001953  -335.500651  535.500651         0.0
3   172.501302    0.001465  -335.500651  535.500651         0.0
4   172.501302  508.001953  -187.499552  535.500651         0.0
5   324.500203  511.999756   -35.500651  535.500651         0.0
6   324.500203  111.999756   -35.500651  535.500651         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:32]  Iteration: 13
[07/11 20:17:33]  Generator returned sat in 0.034496 secs.
[07/11 20:17:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -2S_f[0][t-1] + -2S_f[0][t-2] + -1S_f[0][t-3] + 2S_f[0][t-4] + 1)[0m
[07/11 20:17:33]  Improved gap from inf to 100
[07/11 20:17:33]  Improved number of small numbers from 72 to 74 out of a max of 78
[07/11 20:17:33]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0  -435.500000    0.003662  -635.500651  535.500651         0.0
1  -435.500000    0.001709  -435.500651  535.500651         0.0
2   172.001302  607.501953  -335.500651  535.500651         0.0
3   172.001302    0.001221  -335.500651  535.500651         0.0
4   172.001302  507.501953  -187.999593  535.500651         0.0
5   324.500244  512.499837   -35.500732  535.500651         0.0
6   324.500244  112.500000   -35.500651  535.500651         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:33]  Iteration: 14
[07/11 20:17:33]  Generator returned sat in 0.037483 secs.
[07/11 20:17:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -2S_f[0][t-1] + -2S_f[0][t-2] + -1S_f[0][t-3] + 2S_f[0][t-4] + 1/2)[0m
[07/11 20:17:33]  Improved gap from inf to 100
[07/11 20:17:33]  Improved number of small numbers from 67 to 71 out of a max of 77
[07/11 20:17:33]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0  -449.500000    0.003418  -649.500651  549.500651         0.0
1  -449.500000    0.001953  -449.500651  549.500651         0.0
2   199.501302  649.001953  -349.500651  549.500651         0.0
3   199.501302    0.001221  -349.500651  549.500651         0.0
4   199.501302  549.001953  -160.499308  549.500651         0.0
5   310.499959  470.999268   -49.500651  549.500651         0.0
6   310.499959   70.999268   -49.500651  549.500651         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:34]  Iteration: 15
[07/11 20:17:34]  Generator returned sat in 0.046332 secs.
[07/11 20:17:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -2S_f[0][t-1] + -2S_f[0][t-2] + -1S_f[0][t-3] + 2S_f[0][t-4] + 0)[0m
[07/11 20:17:34]  Improved gap from inf to 100
[07/11 20:17:34]  Improved number of small numbers from 67 to 71 out of a max of 77
[07/11 20:17:34]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0  -449.500000    0.003174  -649.500651  549.500651         0.0
1  -449.500000    0.001709  -449.500651  549.500651         0.0
2   199.001302  648.501953  -349.500651  549.500651         0.0
3   199.001302    0.001221  -349.500651  549.500651         0.0
4   199.001302  548.501953  -160.999308  549.500651         0.0
5   310.499959  471.499268   -49.500651  549.500651         0.0
6   310.499959   71.499268   -49.500651  549.500651         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:34]  Iteration: 16
[07/11 20:17:34]  Generator returned sat in 0.042826 secs.
[07/11 20:17:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -2S_f[0][t-1] + -2S_f[0][t-2] + -1S_f[0][t-3] + 2S_f[0][t-4] + -1)[0m
[07/11 20:17:34]  Improved gap from inf to 100
[07/11 20:17:35]  Improved number of small numbers from 71 to 71 out of a max of 77
[07/11 20:17:35]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0  -449.500000    0.003174  -658.500651  558.500651         0.0
1  -449.500000    0.001709  -458.500651  558.500651         0.0
2   199.001302  657.501953  -358.500651  558.500651         0.0
3   199.001302    0.001221  -358.500651  558.500651         0.0
4   216.001302  574.501953  -160.999308  558.500651         0.0
5   318.499959  479.499268   -58.500651  558.500651         0.0
6   318.499959   79.499268   -58.500651  558.500651         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:35]  Iteration: 17
[07/11 20:17:35]  Generator returned sat in 0.079975 secs.
[07/11 20:17:35]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -2S_f[0][t-3] + 2S_f[0][t-4] + -1)[0m
[07/11 20:17:35]  Improved gap from 1/100 to 100
[07/11 20:17:35]  Improved number of small numbers from 77 to 77 out of a max of 77
[07/11 20:17:35]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  41297.499512    0.002930  41197.499512 -41197.499512         0.0
1  41297.499512    0.001465  41197.499512 -41197.499512         0.0
2  41393.001709  195.502197  41393.000244 -41197.499512         0.0
3  41697.500977  304.500732  41412.499512 -41197.499512         0.0
4  41697.500977   37.998535  41497.499512 -41197.499512         0.0
5  41697.500977    0.010000  41697.499512 -41197.499512         0.0
6  42057.500977  360.001465  41697.499512 -41197.499512         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:36]  Iteration: 18
[07/11 20:17:36]  Generator returned sat in 0.053066 secs.
[07/11 20:17:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -2S_f[0][t-3] + 2S_f[0][t-4] + -3/2)[0m
[07/11 20:17:36]  Improved gap from inf to 100
[07/11 20:17:36]  Improved number of small numbers from 57 to 77 out of a max of 77
[07/11 20:17:36]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  41297.499023    0.002686  41197.499512 -41197.499512         0.0
1  41297.499023    0.001221  41197.499512 -41197.499512         0.0
2  41393.250244  195.750732  41393.249512 -41197.499512         0.0
3  41697.500000  304.250488  41412.499268 -41197.499512         0.0
4  41697.500000   36.999512  41497.499512 -41197.499512         0.0
5  41697.500000    0.010000  41697.499512 -41197.499512         0.0
6  42057.500000  360.000488  41697.499512 -41197.499512         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:36]  Iteration: 19
[07/11 20:17:36]  Generator returned sat in 0.042713 secs.
[07/11 20:17:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -2S_f[0][t-3] + 2S_f[0][t-4] + -2)[0m
[07/11 20:17:36]  Improved gap from inf to 100
[07/11 20:17:36]  Improved number of small numbers from 77 to 77 out of a max of 77
[07/11 20:17:36]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  41297.499023    0.002686  41183.499512 -41197.499512         0.0
1  41297.499023    0.001221  41197.499512 -41197.499512         0.0
2  41393.250244  195.750732  41393.249512 -41197.499512         0.0
3  41697.500000  304.250488  41412.249268 -41197.499512         0.0
4  41697.500000    7.999512  41497.499512 -41197.499512         0.0
5  41697.500000    0.010000  41697.499512 -41197.499512         0.0
6  42057.500000  360.000488  41697.499512 -41197.499512         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:37]  Iteration: 20
[07/11 20:17:37]  Generator returned sat in 0.374316 secs.
[07/11 20:17:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + 3/2S_f[0][t-4] + -2)[0m
[07/11 20:17:37]  Improved gap from 537/51200 to 48.4375
[07/11 20:17:37]  Improved number of small numbers from 59 to 73 out of a max of 77
[07/11 20:17:37]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  41513.617920    0.002441  41097.499512 -41097.499512         0.0
1  41513.617920    0.000977  41130.801432 -41097.499512         0.0
2  41513.617920  382.816162  41263.416829 -41097.499512         0.0
3  41513.617920  250.200684  41297.499512 -41097.499512         0.0
4  41513.617920   48.437500  41497.499512 -41097.499512         0.0
5  41513.617920   16.118245  41499.061035 -41047.498535         0.0
6  41547.498535   48.437500  41547.498535 -41047.498535         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:17:38]  Iteration: 21
[07/11 20:17:38]  Generator returned sat in 0.074897 secs.
[07/11 20:17:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + -3/2S_f[0][t-4] + -2)[0m
[07/11 20:17:38]  Improved gap from 2123/204800 to 100
[07/11 20:17:38]  Improved number of small numbers from 36 to 40 out of a max of 77
[07/11 20:17:38]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0  -115.109619    0.002197  -215.110975  215.110975         0.0
1  -115.109619    0.000977  -115.110975  215.110975         0.0
2   -48.443902   66.667074   -48.445123  215.110975         0.0
3   544.890245  593.335368   -15.110975  215.110975         0.0
4   544.890245  560.000000   184.889025  215.110975         0.0
5   644.890245  460.001221   184.889025  215.110975         0.0
6   644.890245  193.334147   284.889025  215.110975         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:39]  Iteration: 22
[07/11 20:17:39]  Generator returned sat in 0.137222 secs.
[07/11 20:17:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + -3/2S_f[0][t-4] + -2)[0m
[07/11 20:17:39]  Improved gap from 9/16384 to 100
[07/11 20:17:39]  Improved number of small numbers from 30 to 40 out of a max of 77
[07/11 20:17:39]  Counter example: 
[93m   arrival_0,t     cwnd_0,t  service_0,t     wasted_t  tot_lost_t
0  -986.284912     0.001953 -1086.286028  1086.286028         0.0
1  -986.284912     0.001221  -986.286028  1086.286028         0.0
2  -986.284912     0.000977  -986.286028  1086.286028         0.0
3  -886.284930   100.001099  -886.286028  1086.286028         0.0
4  2763.715070  3650.001099  -686.286028  1086.286028         0.0
5  2863.715070  3550.001099  -605.286028  1086.286028         0.0
6  2863.715070  3290.501099  -586.286028  1086.286028         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:40]  Iteration: 23
[07/11 20:17:40]  Generator returned sat in 0.076818 secs.
[07/11 20:17:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-2] + -2S_f[0][t-3] + -3/2S_f[0][t-4] + -2)[0m
[07/11 20:17:40]  Improved gap from 0 to 48.4375
[07/11 20:17:40]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:40]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   -20.180664    0.001709   -20.182129   20.182129         0.0
1   -20.180664    0.001465   -20.181885   62.744141         0.0
2   137.256592  157.438477   137.255859   62.744141         0.0
3   385.693359  248.437500   137.255859   62.744141         0.0
4   385.693359    0.010000   337.255859   62.744141         0.0
5   385.693359    0.010000   337.255859  114.306641         0.0
6   385.693359    0.010000   385.693359  114.306885         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:17:41]  Iteration: 24
[07/11 20:17:41]  Generator returned sat in 0.746458 secs.
[07/11 20:17:41]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -3/2S_f[0][t-1] + 2S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 20:17:42]  Improved gap from 0 to 90.625
[07/11 20:17:42]  Improved number of small numbers from 34 to 54 out of a max of 77
[07/11 20:17:42]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  98640.716553    0.001709  98540.715820 -98540.716064         0.0
1  98640.716797  100.000977  98640.715820 -98540.716064         0.0
2  98641.144531    0.428711  98641.143770 -98540.715842         0.0
3  98940.707551  299.563782  98840.715842 -98540.715842         0.0
4  98940.707551    0.010000  98940.706697 -98540.715842         0.0
5  98940.716697    0.010000  98940.715842 -98531.341064         0.0
6  99391.341697  450.625854  99031.341064 -98531.341064         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:42]  Iteration: 25
[07/11 20:17:43]  Generator returned sat in 0.451812 secs.
[07/11 20:17:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:17:43]  Improved gap from 7/16384 to 48.4375
[07/11 20:17:43]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:43]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  98640.716064    0.001465  98440.716064 -98540.716064         0.0
1  98640.716064    0.000488  98640.715820 -98540.716064         0.0
2  98689.214844   48.499023  98640.716064 -98489.214844         0.0
3  98740.715332   99.999268  98689.214844 -98440.715332         0.0
4  98890.714844  201.500000  98840.715332 -98440.715332         0.0
5  98890.714844   49.999023  98842.277344 -98390.714844         0.0
6  99043.776611  201.499268  98890.714844 -98390.714844         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:43]  Iteration: 26
[07/11 20:17:43]  Generator returned sat in 0.088100 secs.
[07/11 20:17:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/11 20:17:44]  Improved gap from 393209/8192 to 46.875
[07/11 20:17:44]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:17:44]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  102520.455811    0.001221  102328.705566 -102420.455566         0.0
1  102520.455811    0.000488  102520.455566 -102420.455566         0.0
2  102520.455811    0.000244  102520.455566 -102367.330566         0.0
3  102614.205322   93.749756  102567.330566 -102314.205566         0.0
4  102761.080566  193.750000  102711.080811 -102314.205566         0.0
5  102761.080566   48.875000  102714.205566 -102261.080566         0.0
6  102906.830811  192.625244  102761.080566 -102261.080566         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:44]  Iteration: 27
[07/11 20:17:44]  Generator returned sat in 0.342349 secs.
[07/11 20:17:44]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -2S_f[0][t-3] + 1S_f[0][t-4] + 1/2)[0m
[07/11 20:17:45]  Improved gap from 5/16384 to 48.4375
[07/11 20:17:45]  Improved number of small numbers from 59 to 77 out of a max of 77
[07/11 20:17:45]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  102391.584961    0.000977  102316.910400 -102365.768066         0.0
1  102391.584961    0.000732  102391.584229 -102365.768066         0.0
2  102465.768555   74.184326  102465.768066 -102314.205566         0.0
3  102712.644287  246.876221  102589.451172 -102314.205566         0.0
4  102712.644287    0.010010  102712.643799 -102314.205566         0.0
5  102762.643066   49.999268  102714.205566 -102262.643066         0.0
6  102762.643066    0.010000  102762.643066 -102262.643066         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:17:45]  Iteration: 28
[07/11 20:17:45]  Generator returned sat in 0.105612 secs.
[07/11 20:17:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -2S_f[0][t-3] + 1S_f[0][t-4] + 1)[0m
[07/11 20:17:45]  Improved gap from 775/16 to 48.4375
[07/11 20:17:45]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:45]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  102363.721924    0.000977  102363.721436 -102363.721436         0.0
1  102363.721924    0.000244  102363.721436 -102363.721436         0.0
2  102515.283936  151.562500  102515.283936 -102363.721436         0.0
3  102615.784180  100.500244  102615.783936 -102363.721436         0.0
4  102768.346436  152.562500  102763.721436 -102363.721436         0.0
5  102768.346436    0.010000  102763.721680 -102312.159180         0.0
6  102812.159180   48.437500  102812.159180 -102312.159180         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:17:46]  Iteration: 29
[07/11 20:17:46]  Generator returned sat in 0.308698 secs.
[07/11 20:17:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:17:46]  Improved gap from 204797/6144 to 48.4375
[07/11 20:17:46]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:46]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -162687.261963    0.000977 -162981.012451  162887.262451         0.0
1 -162687.261963    0.000244 -162787.262451  162887.262451         0.0
2 -162687.261963    0.000244 -162687.262451  162887.262451         0.0
3 -162687.261963    0.000488 -162687.262451  162938.824951         0.0
4 -162490.387451  196.875000 -162540.386963  162938.824951         0.0
5 -162490.387451    0.010000 -162538.824707  162990.387207         0.0
6 -162393.511475  145.313232 -162490.387207  162990.387207         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:47]  Iteration: 30
[07/11 20:17:47]  Generator returned sat in 0.111901 secs.
[07/11 20:17:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:17:47]  Improved gap from 771/16 to 48.4375
[07/11 20:17:47]  Improved number of small numbers from 44 to 61 out of a max of 78
[07/11 20:17:47]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -162477.761963    0.000732 -162795.761963  162750.761841         0.0
1 -162477.761963    0.000244 -162650.761963  162750.761841         0.0
2 -162477.761963    0.000244 -162550.761841  162750.761841         0.0
3 -162477.761963   72.999756 -162550.761841  162777.761963         0.0
4 -162377.761719  173.000122 -162379.324219  162777.761963         0.0
5 -162377.761719    0.010000 -162377.761841  162829.324341         0.0
6 -162207.386597  170.375244 -162329.324341  162829.324341         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:48]  Iteration: 31
[07/11 20:17:48]  Generator returned sat in 0.175022 secs.
[07/11 20:17:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:17:48]  Improved gap from 3/8192 to 32.8125
[07/11 20:17:49]  Improved number of small numbers from 38 to 45 out of a max of 77
[07/11 20:17:49]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -162374.637207    0.000488 -162574.637329  162474.637329         0.0
1 -162374.637207  200.000000 -162374.637329  162474.637329         0.0
2 -162342.605713   32.031616 -162342.605896  162509.793396         0.0
3 -162309.793030   32.812866 -162309.793396  162576.980896         0.0
4 -162177.761963  132.031433 -162194.168213  162576.980896         0.0
5 -162145.339996   48.828217 -162176.980896  162644.168396         0.0
6 -162044.949463  132.031433 -162144.168396  162644.168457         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:49]  Iteration: 32
[07/11 20:17:49]  Generator returned sat in 0.232588 secs.
[07/11 20:17:49]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:17:49]  Improved gap from 1/4096 to 31.25
[07/11 20:17:49]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:49]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -178850.878418    0.000244 -179050.878906  178950.878906         0.0
1 -178850.878418    0.000244 -178850.878906  178950.878906         0.0
2 -178816.379150   34.499756 -178816.379395  178985.129395         0.0
3 -178747.505127   68.874268 -178785.129395  179047.505127         0.0
4 -178649.129883  135.999512 -178666.254883  179047.505127         0.0
5 -178616.255127   49.999756 -178647.505127  179116.255127         0.0
6 -178511.505615  135.999512 -178616.255127  179116.255127         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:50]  Iteration: 33
[07/11 20:17:50]  Generator returned sat in 0.144359 secs.
[07/11 20:17:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:17:50]  Improved gap from 1003535/32768 to 31.25
[07/11 20:17:51]  Improved number of small numbers from 34 to 50 out of a max of 77
[07/11 20:17:51]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -179574.858398    0.000244 -179808.358174  179708.358174         0.0
1 -179574.858398    0.000244 -179608.358174  179708.358174         0.0
2 -179574.858398   33.499756 -179574.858418  179743.608418         0.0
3 -179543.608296   31.250122 -179543.608418  179806.983887         0.0
4 -179408.108662  135.499756 -179425.733662  179806.983887         0.0
5 -179375.733784   49.999878 -179406.983887  179875.733784         0.0
6 -179271.484131  135.499756 -179375.733784  179875.733784         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:51]  Iteration: 34
[07/11 20:17:51]  Generator returned sat in 0.401658 secs.
[07/11 20:17:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + -2S_f[0][t-3] + 1S_f[0][t-4] + 1)[0m
[07/11 20:17:52]  Improved gap from 1/16384 to 48.4375
[07/11 20:17:52]  Improved number of small numbers from 36 to 58 out of a max of 77
[07/11 20:17:52]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -215133.848235  0.000244 -215683.848145  215583.848145         0.0
1 -215133.848235  0.000244 -215484.265869  215583.848145         0.0
2 -215133.848235  0.000244 -215483.848145  215583.848145         0.0
3 -215133.848235  0.000244 -215334.134277  215583.848145         0.0
4 -215133.848235  0.010000 -215183.848145  215583.848145         0.0
5 -215133.848235  0.010010 -215182.285735  215633.848235         0.0
6 -215133.848235  0.010000 -215133.848235  215633.848389         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:17:52]  Iteration: 35
[07/11 20:17:53]  Generator returned sat in 0.153524 secs.
[07/11 20:17:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + -2S_f[0][t-3] + 1S_f[0][t-4] + 3/2)[0m
[07/11 20:17:53]  Improved gap from 9817611/204800 to 48.4375
[07/11 20:17:53]  Improved number of small numbers from 61 to 75 out of a max of 77
[07/11 20:17:53]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -134092.071533   0.000244 -134492.071777  134492.071777         0.0
1 -134092.071533   0.000244 -134453.806152  134492.071777         0.0
2 -134092.071533   0.000244 -134292.071777  134492.071777         0.0
3 -134092.071533   0.000244 -134215.540527  134492.071777         0.0
4 -134092.071533  48.437500 -134092.071777  134492.071777         0.0
5 -134092.061777   0.010000 -134092.071777  134543.634277         0.0
6 -134043.634277  48.437500 -134043.634277  134543.634277         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:17:53]  Iteration: 36
[07/11 20:17:54]  Generator returned sat in 0.976833 secs.
[07/11 20:17:54]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -3/2S_f[0][t-1] + 2S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 1)[0m
[07/11 20:17:54]  Improved gap from 0 to 90.625
[07/11 20:17:55]  Improved number of small numbers from 32 to 42 out of a max of 77
[07/11 20:17:55]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0 -62407.248779    0.000244 -62582.884338  62482.884338         0.0
1 -62407.248779  175.635498 -62407.248820  62482.884338         0.0
2 -62382.696777   24.552043 -62382.696899  62482.884338         0.0
3 -62082.884216  299.812683 -62182.884338  62482.884338         0.0
4 -62082.884216   64.828155 -62082.884338  62482.884338         0.0
5 -62082.874216    0.010122 -62082.884338  62492.259277         0.0
6 -61632.259216  450.625122 -61992.259277  62492.259277         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:17:55]  Iteration: 37
[07/11 20:17:56]  Generator returned sat in 0.440543 secs.
[07/11 20:17:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1)[0m
[07/11 20:17:56]  Improved gap from 1/8192 to 48.4375
[07/11 20:17:56]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:17:56]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0 -61882.884277    0.000244 -62282.884521  62282.884521         0.0
1 -61882.884277  175.635498 -62182.884521  62282.884521         0.0
2 -61882.884277    0.000244 -62150.218018  62282.884521         0.0
3 -61882.884277    0.000244 -62082.884521  62282.884521         0.0
4 -61882.884277  151.000000 -61884.446777  62282.884521         0.0
5 -61834.447021   49.999756 -61882.884521  62334.447021         0.0
6 -61780.884277  102.000244 -61834.447021  62334.447021         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:56]  Iteration: 38
[07/11 20:17:57]  Generator returned sat in 0.217276 secs.
[07/11 20:17:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:17:57]  Improved gap from 775/16 to 48.4375
[07/11 20:17:57]  Improved number of small numbers from 45 to 73 out of a max of 77
[07/11 20:17:57]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0 -62260.904541    0.000244 -62260.904785  62227.446533         0.0
1 -62158.779785  102.125000 -62158.779948  62227.446533         0.0
2 -62115.509074   43.270874 -62126.446777  62227.446777         0.0
3 -61979.009521  147.437256 -62027.446777  62279.009277         0.0
4 -61872.759521  154.687256 -61879.009277  62279.009277         0.0
5 -61829.009521   49.999756 -61879.009277  62329.009521         0.0
6 -61729.009277  150.000000 -61829.009521  62329.009521         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:58]  Iteration: 39
[07/11 20:17:58]  Generator returned sat in 0.229721 secs.
[07/11 20:17:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:17:58]  Improved gap from 196607/6144 to 48.4375
[07/11 20:17:59]  Improved number of small numbers from 34 to 43 out of a max of 77
[07/11 20:17:59]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0 -62252.571289    0.000244 -62252.571493  62219.822021         0.0
1 -62137.238241  115.333252 -62137.238241  62219.822021         0.0
2 -62119.821696   17.416545 -62119.821818  62219.822021         0.0
3 -62004.488566  115.333252 -62004.488566  62256.051066         0.0
4 -61829.488688  174.999878 -61857.613444  62256.051066         0.0
5 -61829.488688   28.124634 -61856.051066  62307.613525         0.0
6 -61681.051188  174.999878 -61807.613525  62307.613525         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:17:59]  Iteration: 40
[07/11 20:17:59]  Generator returned sat in 0.379184 secs.
[07/11 20:17:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:17:59]  Improved gap from 1/8192 to 100
[07/11 20:17:59]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:17:59]  Counter example: 
[93m    arrival_0,t    cwnd_0,t  service_0,t     wasted_t  tot_lost_t
0  26107.511475    0.000244  25907.51123 -25907.51123         0.0
1  26107.511475  200.000000  25907.51123 -25907.51123         0.0
2  26107.511475    0.000244  26080.51123 -25907.51123         0.0
3  26667.511230  587.000000  26207.51123 -25907.51123         0.0
4  26667.511230  150.500000  26307.51123 -25907.51123         0.0
5  26767.511230  460.000000  26307.51123 -25907.51123         0.0
6  26767.511230  304.500000  26407.51123 -25907.51123         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:18:00]  Iteration: 41
[07/11 20:18:00]  Generator returned sat in 0.307150 secs.
[07/11 20:18:00]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -1)[0m
[07/11 20:18:00]  Improved gap from inf to 100
[07/11 20:18:00]  Improved number of small numbers from 75 to 75 out of a max of 77
[07/11 20:18:00]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t     wasted_t  tot_lost_t
0  26107.511475    0.000244  25825.511230 -25907.51123         0.0
1  26107.511475  200.000000  25907.511230 -25907.51123         0.0
2  26107.511475    0.000244  26081.511393 -25907.51123         0.0
3  26667.511475  586.000081  26207.511230 -25907.51123         0.0
4  26667.511475  313.000000  26307.511230 -25907.51123         0.0
5  26767.511475  460.000244  26403.511230 -25907.51123         0.0
6  26767.511475  348.999674  26407.511230 -25907.51123         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:18:01]  Iteration: 42
[07/11 20:18:01]  Generator returned sat in 0.321985 secs.
[07/11 20:18:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -2)[0m
[07/11 20:18:01]  Improved gap from 0 to 100
[07/11 20:18:01]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:18:01]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  67745.501465    0.000244  67745.501465 -67820.501465         0.0
1  67820.501465   75.000000  67820.501465 -67820.501465         0.0
2  67920.501709  100.000244  67920.501465 -67820.501465         0.0
3  68120.501709  200.000244  68120.501465 -67820.501465         0.0
4  68418.501465  298.000000  68120.501465 -67820.501465         0.0
5  68418.501465  298.000000  68320.501465 -67820.501465         0.0
6  68818.501465  498.000000  68320.501465 -67820.501465         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:18:01]  Iteration: 43
[07/11 20:18:02]  Generator returned sat in 0.586437 secs.
[07/11 20:18:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -2)[0m
[07/11 20:18:02]  Improved gap from inf to 100
[07/11 20:18:02]  Improved number of small numbers from 73 to 73 out of a max of 77
[07/11 20:18:02]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  67745.501465    0.000244  67745.501465 -67820.501465         0.0
1  67820.501465   75.000000  67820.501465 -67820.501465         0.0
2  67920.501709  100.000244  67920.501465 -67820.501465         0.0
3  68218.501465  298.000000  68120.501465 -67820.501465         0.0
4  68218.501465   98.000000  68182.501709 -67820.501465         0.0
5  68449.501587  266.999878  68320.501465 -67820.501465         0.0
6  68680.501709  360.000244  68320.501465 -67820.501465         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:18:03]  Iteration: 44
[07/11 20:18:04]  Generator returned sat in 0.883591 secs.
[07/11 20:18:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + -1S_f[0][t-3] + 1S_f[0][t-4] + 1/2)[0m
[07/11 20:18:04]  Improved gap from 1049/102400 to 48.4375
[07/11 20:18:04]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:18:04]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  68272.210938    0.000244  68121.720703 -68221.720703         0.0
1  68272.210938    0.000244  68272.210938 -68221.720703         0.0
2  68670.158203  397.947266  68421.720703 -68221.720703         0.0
3  68670.158203    0.000244  68521.720703 -68221.720703         0.0
4  68670.158203    0.010000  68621.066895 -68221.720703         0.0
5  68670.158203    0.010000  68621.720703 -68170.158203         0.0
6  68670.158203    0.010000  68670.158203 -68170.157959         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:04]  Iteration: 45
[07/11 20:18:05]  Generator returned sat in 0.542347 secs.
[07/11 20:18:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1)[0m
[07/11 20:18:05]  Improved gap from 0 to 23.4375
[07/11 20:18:05]  Improved number of small numbers from 41 to 57 out of a max of 77
[07/11 20:18:05]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  68260.540039    0.000244  68260.539795 -68260.540039         0.0
1  68260.540039    0.000244  68260.540039 -68260.540039         0.0
2  68493.206543  232.666504  68421.720703 -68260.540039         0.0
3  68493.206543    0.000244  68460.540080 -68193.206706         0.0
4  68519.769145   59.229065  68493.206706 -68119.769145         0.0
5  68543.206645   49.999939  68519.769145 -68043.206645         0.0
6  68560.612803   40.843658  68543.206645 -68043.206543         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:05]  Iteration: 46
[07/11 20:18:06]  Generator returned sat in 0.409394 secs.
[07/11 20:18:06]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 3/2)[0m
[07/11 20:18:06]  Improved gap from 1111025/49152 to 23.4375
[07/11 20:18:06]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:18:06]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  67586.198975    0.000244  67486.199219 -67486.199219         0.0
1  67586.198975   99.999756  67586.198975 -67486.199219         0.0
2  67686.199219  100.000244  67662.761719 -67486.199219         0.0
3  67686.199219    0.000244  67686.199219 -67409.636719         0.0
4  67722.855469   36.656250  67710.678223 -67334.115723         0.0
5  67748.896729   38.218506  67734.115723 -67257.553223         0.0
6  67770.771973   36.656250  67757.553223 -67257.553223         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:07]  Iteration: 47
[07/11 20:18:09]  Generator returned sat in 2.607115 secs.
[07/11 20:18:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:18:09]  Improved gap from 375/16 to 48.4375
[07/11 20:18:10]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:18:10]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  77070.218506    0.000244  76918.655762 -77018.655762         0.0
1  77070.218506  151.562500  77070.218506 -77018.655762         0.0
2  77218.655762  148.437256  77217.093506 -77018.655762         0.0
3  77218.655762    0.000244  77218.655762 -76967.093506         0.0
4  77367.093506  148.437744  77367.073730 -76967.093506         0.0
5  77367.093506    0.010000  77367.093506 -76915.531006         0.0
6  77442.073730   74.980225  77415.531006 -76915.531006         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:10]  Iteration: 48
[07/11 20:18:10]  Generator returned sat in 0.550569 secs.
[07/11 20:18:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-4] + -1/2)[0m
[07/11 20:18:11]  Improved gap from 196353/4096 to 48.4375
[07/11 20:18:11]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:18:11]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  101963.698486    0.000244  101811.593262 -101911.593262         0.0
1  101963.698486    0.000244  101963.698486 -101911.593262         0.0
2  102111.593506  147.895020  102111.593262 -101911.593262         0.0
3  102111.593506    0.000244  102111.593262 -101860.030762         0.0
4  102261.093262  149.500000  102258.468506 -101860.030762         0.0
5  102261.093262    0.010000  102260.030762 -101808.468262         0.0
6  102332.187256   72.156494  102308.468262 -101808.468262         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:11]  Iteration: 49
[07/11 20:18:12]  Generator returned sat in 0.519731 secs.
[07/11 20:18:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-4] + -2)[0m
[07/11 20:18:12]  Improved gap from 8191/2048 to 48.4375
[07/11 20:18:12]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:18:12]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  101969.602539    0.000244  101769.602539 -101869.602539         0.0
1  101969.602539    0.000244  101969.602295 -101869.602539         0.0
2  102316.821289  347.218994  102069.602539 -101869.602539         0.0
3  102316.821289  247.218750  102169.602539 -101869.602539         0.0
4  102316.821289   98.000000  102268.040283 -101869.602539         0.0
5  102316.821533   48.781250  102269.602539 -101818.040039         0.0
6  102366.040283   96.437744  102318.040039 -101818.040039         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:12]  Iteration: 50
[07/11 20:18:13]  Generator returned sat in 0.708389 secs.
[07/11 20:18:13]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-4] + -1/2)[0m
[07/11 20:18:13]  Improved gap from 1/16384 to 48.4375
[07/11 20:18:13]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:18:13]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  121406.612305    0.000244  121306.112061 -121306.612305         0.0
1  121406.612305    0.000244  121406.612305 -121306.612305         0.0
2  121506.612549  100.000244  121506.612305 -121306.612305         0.0
3  121506.612549    0.000244  121506.612305 -121306.612061         0.0
4  121706.612549  200.000244  121705.592529 -121306.612061         0.0
5  121706.612549    0.010000  121706.612061 -121255.049805         0.0
6  121904.582520  197.970459  121755.049805 -121255.049805         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:14]  Iteration: 51
[07/11 20:18:14]  Generator returned sat in 0.563164 secs.
[07/11 20:18:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-4] + -1)[0m
[07/11 20:18:14]  Improved gap from 198401/4096 to 48.4375
[07/11 20:18:15]  Improved number of small numbers from 38 to 58 out of a max of 77
[07/11 20:18:15]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  121810.160156    0.000244  121710.160049 -121710.160049         0.0
1  121810.160156    0.000244  121810.159912 -121710.160049         0.0
2  122115.597412  305.437500  121910.160049 -121710.160049         0.0
3  122115.597412  205.437256  121910.160049 -121710.160049         0.0
4  122115.597412  199.000000  122108.597671 -121710.160049         0.0
5  122115.597412    0.010000  122110.160049 -121658.597656         0.0
6  122306.816482  196.656433  122158.597656 -121658.597656         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:15]  Iteration: 52
[07/11 20:18:17]  Generator returned sat in 1.236552 secs.
[07/11 20:18:17]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + -3/2)[0m
[07/11 20:18:17]  Improved gap from 0 to 48.4375
[07/11 20:18:17]  Improved number of small numbers from 36 to 56 out of a max of 77
[07/11 20:18:17]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  121894.029541    0.000244  121408.175807 -121444.029608         0.0
1  121894.029541    0.000244  121544.029608 -121444.029608         0.0
2  121894.029541  349.999756  121609.175645 -121444.029608         0.0
3  121894.029541  284.853760  121644.029608 -121444.029608         0.0
4  121894.029541  249.999756  121844.029608 -121444.029608         0.0
5  121894.029541   31.073018  121845.591986 -121394.029541         0.0
6  122095.591742  249.999756  121894.029541 -121394.029541         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:18]  Iteration: 53
[07/11 20:18:18]  Generator returned sat in 0.640561 secs.
[07/11 20:18:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + -1)[0m
[07/11 20:18:19]  Improved gap from 1/8192 to 48.4375
[07/11 20:18:19]  Improved number of small numbers from 38 to 38 out of a max of 77
[07/11 20:18:19]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  157282.592041    0.000244  157182.591919 -157182.591919         0.0
1  157282.592041    0.000244  157282.591919 -157182.591919         0.0
2  157382.216960   99.625041  157382.216838 -157182.591919         0.0
3  157631.029419  248.812581  157382.591919 -157182.591919         0.0
4  157631.029419  248.437378  157581.029541 -157182.591919         0.0
5  157631.029419   49.593648  157582.591919 -157131.029419         0.0
6  157779.810974  197.219055  157631.029419 -157131.029419         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:19]  Iteration: 54
[07/11 20:18:20]  Generator returned sat in 0.660108 secs.
[07/11 20:18:20]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + -1/2)[0m
[07/11 20:18:20]  Improved gap from 0 to 48.4375
[07/11 20:18:21]  Improved number of small numbers from 40 to 48 out of a max of 77
[07/11 20:18:21]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161247.217041    0.000244  161042.974144 -161081.404256         0.0
1  161247.217041    0.000244  161169.675320 -161081.404256         0.0
2  161247.217041   77.541504  161247.216960 -161081.404256         0.0
3  161531.404134  284.187174  161281.404256 -161081.404256         0.0
4  161531.404134  249.999756  161481.404256 -161081.404256         0.0
5  161531.404134   49.999756  161482.966634 -161031.404134         0.0
6  161732.966390  249.999756  161531.404134 -161031.404134         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:21]  Iteration: 55
[07/11 20:18:22]  Generator returned sat in 1.210203 secs.
[07/11 20:18:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2)[0m
[07/11 20:18:22]  Improved gap from 1/16384 to 48.4375
[07/11 20:18:22]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:18:22]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161028.404053    0.000244  161028.403809 -161028.403809         0.0
1  161028.404053    0.000244  161028.403809 -161028.403809         0.0
2  161228.341553  199.937744  161228.341309 -161028.403809         0.0
3  161428.404053  200.062744  161328.403809 -161028.403809         0.0
4  161428.404053   48.437500  161428.341309 -161028.403809         0.0
5  161428.404053    0.010000  161428.403809 -160976.841309         0.0
6  161476.841309   48.437500  161476.841309 -160976.841309         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:23]  Iteration: 56
[07/11 20:18:23]  Generator returned sat in 0.703357 secs.
[07/11 20:18:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -2)[0m
[07/11 20:18:24]  Improved gap from 767/16 to 48.4375
[07/11 20:18:24]  Improved number of small numbers from 50 to 59 out of a max of 77
[07/11 20:18:24]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161688.404053    0.000244  161288.403809 -161288.403931         0.0
1  161688.404053  400.000000  161291.528687 -161288.403931         0.0
2  161688.404053  396.875244  161488.403931 -161288.403931         0.0
3  161688.404053  200.000000  161584.404175 -161288.403931         0.0
4  161688.404053   48.437500  161686.841553 -161288.403931         0.0
5  161688.404053    0.010000  161688.403931 -161236.841431         0.0
6  161736.841431   48.437500  161736.841431 -161236.841309         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:24]  Iteration: 57
[07/11 20:18:26]  Generator returned sat in 1.625495 secs.
[07/11 20:18:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:18:26]  Improved gap from 409599/8192 to 48.4375
[07/11 20:18:27]  Improved number of small numbers from 42 to 50 out of a max of 77
[07/11 20:18:27]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  168897.404053    0.000244  168765.258301 -168797.403931         0.0
1  168897.404053    0.000244  168897.403931 -168797.403931         0.0
2  169245.841431  348.437500  168963.883301 -168797.403931         0.0
3  169245.841431    0.000244  168997.403931 -168797.403931         0.0
4  169245.841431  248.437500  169195.841553 -168797.403931         0.0
5  169245.841431   34.520874  169197.403931 -168745.841431         0.0
6  169445.841309  248.437378  169245.841431 -168745.841431         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:27]  Iteration: 58
[07/11 20:18:28]  Generator returned sat in 0.760038 secs.
[07/11 20:18:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1)[0m
[07/11 20:18:28]  Improved gap from 793601/16384 to 48.4375
[07/11 20:18:28]  Improved number of small numbers from 49 to 59 out of a max of 77
[07/11 20:18:29]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  168559.090820    0.000244  168336.195308 -168370.96582         0.0
1  168559.090820    0.000244  168461.090929 -168370.96582         0.0
2  168559.090820    0.000244  168537.778524 -168370.96582         0.0
3  168819.403320  281.624797  168570.965820 -168370.96582         0.0
4  168819.403320  248.437378  168769.403442 -168370.96582         0.0
5  168819.403320   49.999878  168770.965820 -168319.40332         0.0
6  169019.403198  248.437378  168819.403320 -168319.40332         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:29]  Iteration: 59
[07/11 20:18:30]  Generator returned sat in 0.887679 secs.
[07/11 20:18:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:18:30]  Improved gap from 0 to 48.4375
[07/11 20:18:30]  Improved number of small numbers from 51 to 57 out of a max of 77
[07/11 20:18:30]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161240.965820    0.000244  161109.112020 -161140.965820         0.0
1  161240.965820    0.000244  161240.965820 -161140.965820         0.0
2  161308.111979   67.146159  161308.111857 -161140.965820         0.0
3  161590.965698  282.853841  161340.965820 -161140.965820         0.0
4  161590.965698  249.999756  161540.965820 -161140.965820         0.0
5  161590.965698   35.073018  161542.528198 -161090.965698         0.0
6  161792.527954  249.999756  161590.965698 -161090.965698         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:31]  Iteration: 60
[07/11 20:18:31]  Generator returned sat in 0.815070 secs.
[07/11 20:18:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:18:32]  Improved gap from 1/8192 to 48.4375
[07/11 20:18:32]  Improved number of small numbers from 56 to 62 out of a max of 77
[07/11 20:18:32]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161090.464111    0.000244  161090.463908 -161124.819946         0.0
1  161215.313354  124.849447  161215.313232 -161124.819946         0.0
2  161292.299316   76.986084  161292.299316 -161124.819946         0.0
3  161574.819824  282.520508  161324.819946 -161124.819946         0.0
4  161574.819824  249.999756  161524.819946 -161124.819946         0.0
5  161574.819824   49.999756  161526.382324 -161074.819824         0.0
6  161776.382080  249.999756  161574.819824 -161074.819824         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:32]  Iteration: 61
[07/11 20:18:34]  Generator returned sat in 1.630909 secs.
[07/11 20:18:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -3/2S_f[0][t-3] + -2)[0m
[07/11 20:18:34]  Improved gap from 5/49152 to 37.5
[07/11 20:18:35]  Improved number of small numbers from 32 to 44 out of a max of 77
[07/11 20:18:35]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161290.464111    0.000244  161090.463867 -161090.463908         0.0
1  161290.464111    0.000244  161154.464233 -161090.463908         0.0
2  161290.464111    0.000244  161290.463908 -161090.463908         0.0
3  161527.963908  237.500000  161361.464640 -161090.463908         0.0
4  161527.963908  166.499146  161477.964030 -161090.463908         0.0
5  161527.963908   46.251404  161490.463908 -161027.963908         0.0
6  161656.963053  166.499146  161527.963908 -161027.963908         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:35]  Iteration: 62
[07/11 20:18:36]  Generator returned sat in 1.171888 secs.
[07/11 20:18:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + -2)[0m
[07/11 20:18:37]  Improved gap from 0 to 26.5625
[07/11 20:18:38]  Improved number of small numbers from 32 to 40 out of a max of 77
[07/11 20:18:38]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161182.150635    0.000244  161082.150401 -161082.150401         0.0
1  161182.150635    0.000244  161182.150401 -161082.150401         0.0
2  161182.150635    0.000122  161182.150401 -161081.275767         0.0
3  161527.963877  345.813477  161281.275767 -161081.275767         0.0
4  161527.963877   48.437317  161481.275767 -161081.275767         0.0
5  161527.963877   46.688049  161500.401377 -161027.963877         0.0
6  161887.963938  387.562561  161527.963877 -161027.963877         0.0
high_util=False, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:18:38]  Iteration: 63
[07/11 20:18:39]  Generator returned sat in 1.414029 secs.
[07/11 20:18:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + -2)[0m
[07/11 20:18:40]  Improved gap from 1/32768 to 28.125
[07/11 20:18:41]  Improved number of small numbers from 34 to 45 out of a max of 77
[07/11 20:18:41]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  176622.788818    0.000244  176612.165769 -176612.165771         0.0
1  176622.788818    0.000244  176622.788816 -176550.913816         0.0
2  176731.289426  108.500610  176731.289304 -176550.913816         0.0
3  176750.913938   19.624634  176750.913816 -176479.038816         0.0
4  176907.163816  156.250000  176857.163938 -176479.038816         0.0
5  176907.163816   28.561951  176879.038816 -176407.163818         0.0
6  177035.288816  156.250000  176907.163818 -176407.163818         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:18:41]  Iteration: 64
[07/11 20:18:43]  Generator returned sat in 1.725271 secs.
[07/11 20:18:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -1/2S_f[0][t-4] + -2)[0m
[07/11 20:18:43]  Improved gap from 4071/409600 to 48.4375
[07/11 20:18:43]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:18:43]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  271104.602295    0.000244  270656.164795 -270656.164795         0.0
1  271104.602295    0.000244  270656.164795 -270656.164795         0.0
2  271104.602295  448.437256  270756.164795 -270656.164795         0.0
3  271104.602295    0.000244  270956.164795 -270656.164795         0.0
4  271104.602295   98.000000  271054.602539 -270656.164795         0.0
5  271104.602295    0.010000  271056.164795 -270604.602295         0.0
6  271104.602295    1.124512  271104.602295 -270604.602295         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:43]  Iteration: 65
[07/11 20:18:47]  Generator returned sat in 3.807100 secs.
[07/11 20:18:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -1S_f[0][t-4] + -1)[0m
[07/11 20:18:47]  Improved gap from 775/16 to 100
[07/11 20:18:48]  Improved number of small numbers from 55 to 71 out of a max of 77
[07/11 20:18:48]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  271414.602539    0.000244  270737.602539 -270754.602539         0.0
1  271414.602539    0.000244  270754.602539 -270754.602539         0.0
2  271414.602539  660.000000  270893.602417 -270754.602539         0.0
3  271414.602539    0.000244  271054.602539 -270754.602539         0.0
4  271414.602539   38.000244  271054.602539 -270754.602539         0.0
5  271414.602539    0.010000  271254.602539 -270754.602539         0.0
6  271614.602661  360.000122  271254.602539 -270754.602539         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:18:48]  Iteration: 66
[07/11 20:18:50]  Generator returned sat in 1.978132 secs.
[07/11 20:18:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1)[0m
[07/11 20:18:50]  Improved gap from 0 to 23.4375
[07/11 20:18:50]  Improved number of small numbers from 48 to 63 out of a max of 77
[07/11 20:18:50]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  183750.602539    0.000244  183750.602295 -183750.602295         0.0
1  183848.602783   98.000488  183848.602539 -183750.602295         0.0
2  183950.602539  102.000000  183950.602295 -183750.602295         0.0
3  183950.602539    0.000244  183950.602295 -183674.039795         0.0
4  184000.602173   49.999878  183974.039795 -183600.602173         0.0
5  184000.602173   22.437500  184000.602173 -183524.039673         0.0
6  184037.883301   37.281128  184024.039673 -183524.039551         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:51]  Iteration: 67
[07/11 20:18:52]  Generator returned sat in 1.233640 secs.
[07/11 20:18:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + -1)[0m
[07/11 20:18:52]  Improved gap from 0 to 23.4375
[07/11 20:18:52]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:18:52]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  175946.559570    0.000244  175746.559326 -175746.559570         0.0
1  175946.559570  100.000000  175846.559570 -175746.559570         0.0
2  175946.559570    0.000244  175946.559570 -175746.559570         0.0
3  175946.559814    0.000244  175946.559570 -175669.997070         0.0
4  175995.559570   49.000000  175970.059570 -175595.559570         0.0
5  176004.309570   34.250000  175995.559570 -175520.059326         0.0
6  176044.559570   49.000000  176020.059326 -175520.059326         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:53]  Iteration: 68
[07/11 20:18:55]  Generator returned sat in 1.852613 secs.
[07/11 20:18:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1)[0m
[07/11 20:18:55]  Improved gap from 1/8192 to 29.6875
[07/11 20:18:56]  Improved number of small numbers from 32 to 43 out of a max of 77
[07/11 20:18:56]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  175688.695068    0.000244  175688.694824 -175688.694998         0.0
1  175688.695068    0.000244  175688.694998 -175688.694998         0.0
2  176111.820669  423.125671  175851.632192 -175688.694998         0.0
3  176111.820669    0.000244  175988.694998 -175688.694998         0.0
4  176111.820669  123.125610  176068.382559 -175688.694998         0.0
5  176118.382498   49.999939  176088.694998 -175618.382498         0.0
6  176118.382498    0.010000  176118.382498 -175618.382324         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:56]  Iteration: 69
[07/11 20:18:58]  Generator returned sat in 1.894606 secs.
[07/11 20:18:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-3] + -3/2)[0m
[07/11 20:18:58]  Improved gap from 1/8192 to 23.4375
[07/11 20:18:58]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:18:58]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  176110.863525    0.000244  175966.614502 -175966.614746         0.0
1  176110.863525    0.000244  176066.614746 -175966.614746         0.0
2  176110.863525    0.000244  176066.614746 -175910.863770         0.0
3  176169.614258  102.999512  176136.927246 -175869.614258         0.0
4  176170.583496   33.656250  176169.614258 -175793.051758         0.0
5  176219.614014   49.999756  176193.051758 -175719.614014         0.0
6  176219.614014   26.562256  176219.614014 -175719.614014         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:18:59]  Iteration: 70
[07/11 20:19:00]  Generator returned sat in 1.320637 secs.
[07/11 20:19:00]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-3] + -2)[0m
[07/11 20:19:00]  Improved gap from 375/16 to 23.4375
[07/11 20:19:01]  Improved number of small numbers from 65 to 75 out of a max of 77
[07/11 20:19:01]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  153094.363525   0.000244  152897.050781 -152897.051025         0.0
1  153094.363525   0.000244  152997.050537 -152897.051025         0.0
2  153094.363525   0.000244  153024.050781 -152894.363525         0.0
3  153094.363525  70.312744  153094.363525 -152817.801270         0.0
4  153141.020020  46.656494  153121.800781 -152745.238281         0.0
5  153168.675781  46.875000  153145.238281 -152668.675781         0.0
6  153168.675781  23.437378  153168.675781 -152668.675781         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:19:01]  Iteration: 71
[07/11 20:19:02]  Generator returned sat in 1.557001 secs.
[07/11 20:19:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -2)[0m
[07/11 20:19:03]  Improved gap from 1/16384 to 31.25
[07/11 20:19:03]  Improved number of small numbers from 34 to 53 out of a max of 77
[07/11 20:19:03]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  198097.794189    0.000244  197670.292725 -197670.292841         0.0
1  198097.794189    0.000244  197670.292841 -197670.292841         0.0
2  198097.794189    0.000244  197830.542231 -197670.292841         0.0
3  198097.794189    0.000244  197970.292841 -197670.292841         0.0
4  198097.794189  127.501221  198051.542964 -197670.292841         0.0
5  198101.542841   49.999878  198070.292841 -197601.542841         0.0
6  198101.542841    0.010000  198101.542841 -197601.542725         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:19:04]  Iteration: 72
[07/11 20:19:05]  Generator returned sat in 1.436419 secs.
[07/11 20:19:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2)[0m
[07/11 20:19:06]  Improved gap from 35840003/1146880 to 31.25
[07/11 20:19:06]  Improved number of small numbers from 38 to 64 out of a max of 77
[07/11 20:19:06]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  197512.246826    0.000244  197080.996582 -197080.996732         0.0
1  197512.246826    0.000244  197080.996732 -197080.996732         0.0
2  197512.246826    0.000244  197240.245878 -197080.996732         0.0
3  197512.246826    0.000244  197380.996732 -197080.996732         0.0
4  197512.246826  130.001709  197462.246854 -197080.996732         0.0
5  197512.246826   49.999756  197480.996826 -197012.246826         0.0
6  197512.246826    0.010000  197512.246826 -197012.246826         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:19:06]  Iteration: 73
[07/11 20:19:10]  Generator returned sat in 3.754681 secs.
[07/11 20:19:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -1S_f[0][t-4] + -3/2)[0m
[07/11 20:19:10]  Improved gap from 143359919/2867200 to 100
[07/11 20:19:11]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:19:11]  Counter example: 
[93m    arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  222249.24707    0.000244  221649.246826 -221749.246826         0.0
1  222249.24707    0.000244  221749.246826 -221749.246826         0.0
2  222249.24707    0.000244  221887.746582 -221749.246826         0.0
3  222249.24707    0.000244  222049.246826 -221749.246826         0.0
4  222249.24707  121.500488  222049.246826 -221749.246826         0.0
5  222249.24707    0.010000  222249.246826 -221749.246826         0.0
6  222609.24707  360.000244  222249.246826 -221749.246826         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:19:11]  Iteration: 74
[07/11 20:19:13]  Generator returned sat in 2.618492 secs.
[07/11 20:19:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:19:14]  Improved gap from 0 to 21.875
[07/11 20:19:14]  Improved number of small numbers from 34 to 43 out of a max of 77
[07/11 20:19:14]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  255336.267090   0.000244  255297.392437 -255297.392578         0.0
1  255336.267090   0.000244  255336.266948 -255258.141948         0.0
2  255358.141948  21.875000  255358.141948 -255180.016948         0.0
3  255380.017070  21.875122  255380.016948 -255101.892090         0.0
4  255434.266704  54.249756  255406.141826 -255034.266704         0.0
5  255456.141704  49.999878  255434.266704 -254956.141704         0.0
6  255488.391521  54.124817  255456.141704 -254956.141602         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:19:15]  Iteration: 75
[07/11 20:19:20]  Generator returned sat in 5.870584 secs.
[07/11 20:19:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + 2)[0m
[07/11 20:19:21]  Improved gap from 1/16384 to 23.4375
[07/11 20:19:21]  Improved number of small numbers from 34 to 45 out of a max of 77
[07/11 20:19:21]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  212096.681396    0.000244  211896.681641 -211996.681580         0.0
1  212096.681396    0.000244  212083.556986 -211996.681580         0.0
2  212196.681702  113.124715  212196.681580 -211996.681580         0.0
3  212196.681702    0.000122  212196.681580 -211920.119141         0.0
4  212255.243876   58.562297  212228.681498 -211855.243876         0.0
5  212278.681376   49.999878  212255.243876 -211778.681396         0.0
6  212313.087402   57.843526  212278.681396 -211778.681396         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:19:22]  Iteration: 76
[07/11 20:19:26]  Generator returned sat in 4.719411 secs.
[07/11 20:19:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 2)[0m
[07/11 20:19:27]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 2)[0m
[07/11 20:19:27]  Iteration: 77
[07/11 20:19:28]  Generator returned sat in 1.660985 secs.
[07/11 20:19:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-3] + 1S_f[0][t-4] + 2)[0m
[07/11 20:19:28]  Improved gap from 1/8192 to 48.4375
[07/11 20:19:29]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:19:29]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  211914.661377    0.000244  211914.661133 -211993.670898         0.0
1  212220.680420  306.019287  211993.670898 -211993.670898         0.0
2  212220.680420    0.000244  212193.670898 -211993.670898         0.0
3  212267.555664   73.884766  212219.118164 -211967.555664         0.0
4  212367.555664  148.437500  212367.545654 -211967.555664         0.0
5  212367.555664    0.010000  212367.555664 -211915.993164         0.0
6  212492.545898  124.990234  212415.993164 -211915.992920         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:19:29]  Iteration: 78
[07/11 20:19:31]  Generator returned sat in 1.940119 secs.
[07/11 20:19:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:19:31]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:19:31]  Iteration: 79
[07/11 20:19:33]  Generator returned sat in 1.748273 secs.
[07/11 20:19:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -3/2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:19:33]  Improved gap from 1/8192 to 48.4375
[07/11 20:19:33]  Improved number of small numbers from 34 to 50 out of a max of 77
[07/11 20:19:33]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  285654.546143    0.000244  285446.545176 -285454.545908         0.0
1  285654.546143    0.000244  285454.545908 -285454.545908         0.0
2  285654.546143    0.000244  285654.545908 -285454.545908         0.0
3  285654.546143    0.000122  285654.545908 -285402.983408         0.0
4  285852.545542  197.999634  285802.545664 -285402.983408         0.0
5  285852.545542   49.999756  285802.983408 -285352.545654         0.0
6  285953.420908  150.437500  285852.545654 -285352.545654         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:19:34]  Iteration: 80
[07/11 20:19:40]  Generator returned sat in 6.456260 secs.
[07/11 20:19:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 3/2S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -1/2)[0m
[07/11 20:19:41]  Improved gap from 0 to 89.0625
[07/11 20:19:41]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:19:41]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  316061.813721    0.000244  315861.813721 -315861.813721         0.0
1  316061.813721    0.000244  315861.813721 -315861.813721         0.0
2  316061.813721    0.000244  316061.813721 -315861.813721         0.0
3  316250.876221  189.062500  316161.522217 -315861.813721         0.0
4  316250.876221    0.010000  316161.813721 -315850.876221         0.0
5  316610.876465  449.062744  316250.876221 -315850.876221         0.0
6  316610.876465  110.000244  316350.876221 -315850.876221         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:19:41]  Iteration: 81
[07/11 20:19:45]  Generator returned sat in 4.338810 secs.
[07/11 20:19:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:19:46]  Improved gap from 1/100 to 48.4375
[07/11 20:19:46]  Improved number of small numbers from 35 to 77 out of a max of 77
[07/11 20:19:46]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  316920.213135    0.000244  316370.546875 -316470.546875         0.0
1  316920.213135    0.000244  316470.546875 -316470.546875         0.0
2  316920.213135    0.000244  316670.546875 -316470.546875         0.0
3  316920.213135  249.666260  316770.546875 -316470.546875         0.0
4  316920.213135  100.500000  316870.213379 -316470.546875         0.0
5  316920.213135   49.999756  316870.546875 -316420.213135         0.0
6  316920.213135    0.010000  316920.213135 -316420.213135         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:19:46]  Iteration: 82
[07/11 20:19:52]  Generator returned sat in 5.743376 secs.
[07/11 20:19:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + -1)[0m
[07/11 20:19:52]  Improved gap from 1/8192 to 23.4375
[07/11 20:19:52]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:19:52]  Counter example: 
[93m    arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  326914.63916   0.000244  326714.638916 -326814.638916         0.0
1  326914.63916   0.000244  326891.201660 -326814.638916         0.0
2  326914.63916   0.000244  326914.639160 -326738.076660         0.0
3  326938.07666  23.437500  326938.076660 -326661.514160         0.0
4  326983.95166  45.875000  326961.514160 -326584.951660         0.0
5  327007.38916  45.875000  326984.951660 -326511.513672         0.0
6  327030.82666  45.875000  327011.513672 -326511.513672         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:19:53]  Iteration: 83
[07/11 20:19:54]  Generator returned sat in 1.874352 secs.
[07/11 20:19:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1/2)[0m
[07/11 20:19:55]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1/2)[0m
[07/11 20:19:55]  Iteration: 84
[07/11 20:20:01]  Generator returned sat in 5.993970 secs.
[07/11 20:20:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1)[0m
[07/11 20:20:01]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1)[0m
[07/11 20:20:01]  Iteration: 85
[07/11 20:20:03]  Generator returned sat in 1.807900 secs.
[07/11 20:20:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 3/2)[0m
[07/11 20:20:03]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 3/2)[0m
[07/11 20:20:03]  Iteration: 86
[07/11 20:20:07]  Generator returned sat in 4.366816 secs.
[07/11 20:20:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:20:07]  Improved gap from 0 to 48.4375
[07/11 20:20:08]  Improved number of small numbers from 50 to 56 out of a max of 77
[07/11 20:20:08]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  361135.931885    0.000244  361021.890161 -361078.952026         0.0
1  361135.931885    0.000244  361135.931634 -361078.952026         0.0
2  361245.910604  109.978970  361245.910604 -361078.952026         0.0
3  361528.951904  283.041300  361278.952026 -361078.952026         0.0
4  361528.951904  249.999756  361478.952026 -361078.952026         0.0
5  361528.951904    0.010000  361480.514404 -361028.951904         0.0
6  361730.514160  249.999756  361528.951904 -361028.951904         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:20:08]  Iteration: 87
[07/11 20:20:11]  Generator returned sat in 2.794935 secs.
[07/11 20:20:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + 2)[0m
[07/11 20:20:11]  Improved gap from 1/8192 to 26.5625
[07/11 20:20:12]  Improved number of small numbers from 32 to 45 out of a max of 77
[07/11 20:20:12]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  361345.264160    0.000244  361178.951904 -361178.952026         0.0
1  361345.264160    0.000244  361178.952026 -361178.952026         0.0
2  361345.264160  166.312012  361345.263977 -361178.952026         0.0
3  361605.514526  260.250549  361478.952026 -361178.952026         0.0
4  361605.514526  119.376099  361555.514587 -361178.952026         0.0
5  361605.514526   49.999817  361578.952026 -361105.514526         0.0
6  361605.514526    0.010000  361605.514526 -361105.514404         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:20:12]  Iteration: 88
[07/11 20:20:14]  Generator returned sat in 2.307689 secs.
[07/11 20:20:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -3/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + 2)[0m
[07/11 20:20:15]  Improved gap from 2073/204800 to 48.4375
[07/11 20:20:15]  Improved number of small numbers from 32 to 54 out of a max of 78
[07/11 20:20:15]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  360888.709229    0.000244  360488.708984 -360488.709059         0.0
1  360888.709229    0.000244  360488.709059 -360488.709059         0.0
2  360888.709229    0.000244  360688.709059 -360488.709059         0.0
3  360888.709229  200.000000  360691.833815 -360488.709059         0.0
4  360888.709229   97.312866  360887.146681 -360488.709059         0.0
5  360888.709229    0.010000  360888.709059 -360437.146559         0.0
6  360986.021925   97.312866  360937.146559 -360437.146484         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:20:15]  Iteration: 89
[07/11 20:20:20]  Generator returned sat in 4.383066 secs.
[07/11 20:20:20]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-3] + 1/2)[0m
[07/11 20:20:20]  Improved gap from 1/8192 to 23.4375
[07/11 20:20:20]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:20:20]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  360731.427490    0.000244  360524.094238 -360524.094482         0.0
1  360731.427490    0.000244  360589.719238 -360524.094482         0.0
2  360731.427490  141.708008  360724.094482 -360524.094482         0.0
3  360731.427490    0.000244  360731.427246 -360476.218750         0.0
4  360802.781250   71.354004  360776.218994 -360402.781250         0.0
5  360802.781250   26.562256  360802.781250 -360326.218750         0.0
6  360838.958252   36.177002  360826.218750 -360326.218750         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:20:20]  Iteration: 90
[07/11 20:20:23]  Generator returned sat in 2.177912 secs.
[07/11 20:20:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2)[0m
[07/11 20:20:23]  Improved gap from 375/16 to 23.4375
[07/11 20:20:24]  Improved number of small numbers from 34 to 57 out of a max of 77
[07/11 20:20:24]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  360198.891602   0.000244  360029.578613 -360029.578613         0.0
1  360198.891602   0.000244  360128.578831 -360029.578613         0.0
2  360198.891602  37.500000  360198.891602 -360029.578369         0.0
3  360253.015869  54.124268  360229.578586 -359953.016113         0.0
4  360279.578464  49.999878  360253.016113 -359879.578464         0.0
5  360279.578464  26.562256  360279.578464 -359803.015964         0.0
6  360304.078403  24.499939  360303.015964 -359803.015869         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:20:24]  Iteration: 91
[07/11 20:20:27]  Generator returned sat in 2.471426 secs.
[07/11 20:20:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-3] + 0)[0m
[07/11 20:20:27]  Improved gap from 0 to 23.4375
[07/11 20:20:27]  Improved number of small numbers from 38 to 47 out of a max of 77
[07/11 20:20:27]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  377192.161865    0.000244  377092.161865 -377092.161947         0.0
1  377192.162109  100.000244  377192.161947 -377092.161947         0.0
2  377315.599447  123.437500  377292.161947 -377092.161947         0.0
3  377315.599447   23.437256  377292.161947 -377015.599447         0.0
4  377342.161947   50.000000  377315.599569 -376942.161947         0.0
5  377342.161947   11.718811  377342.161947 -376865.599447         0.0
6  377367.161947   25.000000  377365.599447 -376865.599365         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:20:27]  Iteration: 92
[07/11 20:20:35]  Generator returned sat in 8.031101 secs.
[07/11 20:20:35]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1S_f[0][t-3] + 0)[0m
[07/11 20:20:36]  Improved gap from 375/16 to 48.4375
[07/11 20:20:36]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:20:36]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  377653.734375    0.000244  377153.734131 -377253.734131         0.0
1  377653.734375  500.000244  377255.306396 -377253.734131         0.0
2  377653.734375  398.427734  377453.734131 -377253.734131         0.0
3  377653.734375    0.000244  377453.744141 -377253.734131         0.0
4  377653.734375  198.427734  377652.171875 -377253.734131         0.0
5  377653.734375    0.010010  377653.734131 -377202.171631         0.0
6  377852.161865  198.427734  377702.171631 -377202.171631         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:20:36]  Iteration: 93
[07/11 20:20:45]  Generator returned sat in 9.002134 secs.
[07/11 20:20:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + -1)[0m
[07/11 20:20:46]  Improved gap from 409599/8192 to 48.4375
[07/11 20:20:46]  Improved number of small numbers from 30 to 41 out of a max of 77
[07/11 20:20:46]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  377283.701416    0.000244  377277.342900 -377277.343018         0.0
1  377286.961553    9.618653  377286.961553 -377277.342773         0.0
2  377431.065143  144.103591  377431.065143 -377277.342773         0.0
3  377720.110424  289.045281  377508.928739 -377277.342773         0.0
4  377720.110424  210.346059  377675.780644 -377277.342773         0.0
5  377720.110424   43.743599  377677.342900 -377225.780518         0.0
6  377887.688959  210.346059  377725.780518 -377225.780518         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:20:47]  Iteration: 94
[07/11 20:20:52]  Generator returned sat in 5.716007 secs.
[07/11 20:20:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + 2)[0m
[07/11 20:20:53]  Improved gap from 0 to 21.875
[07/11 20:20:53]  Improved number of small numbers from 34 to 52 out of a max of 77
[07/11 20:20:53]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  377698.235352    0.000244  377576.360352 -377576.360352         0.0
1  377698.235352  121.874756  377651.652172 -377576.360352         0.0
2  377698.235352    0.000244  377676.360424 -377498.235424         0.0
3  377720.110424   43.750000  377698.235424 -377420.110424         0.0
4  377748.235302   49.999878  377720.110424 -377348.235302         0.0
5  377765.860424   45.750000  377748.235302 -377270.110352         0.0
6  377797.110241   48.874939  377770.110352 -377270.110352         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:20:54]  Iteration: 95
[07/11 20:21:22]  Generator returned sat in 28.233591 secs.
[07/11 20:21:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + 1)[0m
[07/11 20:21:22]  Improved gap from 5322727/307200 to 48.4375
[07/11 20:21:23]  Improved number of small numbers from 34 to 43 out of a max of 77
[07/11 20:21:23]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  377620.110352    0.000244  377320.110424 -377420.110424         0.0
1  377620.110352    0.000244  377420.110424 -377420.110424         0.0
2  377620.110352  199.999756  377617.423534 -377420.110424         0.0
3  377868.547924  251.124390  377720.110424 -377420.110424         0.0
4  377868.547924  105.030334  377818.548046 -377420.110424         0.0
5  377868.547924   49.999878  377820.110424 -377368.547924         0.0
6  377868.547924    0.010000  377868.547924 -377368.547852         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:21:23]  Iteration: 96
[07/11 20:21:25]  Generator returned sat in 2.389307 secs.
[07/11 20:21:25]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:21:26]  Improved gap from 1/16384 to 48.4375
[07/11 20:21:26]  Improved number of small numbers from 34 to 45 out of a max of 77
[07/11 20:21:26]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  377521.600342    0.000244  377321.600352 -377421.600352         0.0
1  377521.600342    0.000244  377421.600352 -377421.600352         0.0
2  377870.600209  448.999858  377621.600352 -377421.600352         0.0
3  377870.600209    0.000244  377721.600352 -377421.600352         0.0
4  377870.600209  101.500000  377820.600270 -377421.600352         0.0
5  377870.600209   49.999878  377821.600586 -377370.600209         0.0
6  377870.600209    0.010000  377870.600209 -377370.600098         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:21:26]  Iteration: 97
[07/11 20:21:29]  Generator returned sat in 2.432150 secs.
[07/11 20:21:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:21:29]  Improved gap from 9966827/204800 to 48.4375
[07/11 20:21:30]  Improved number of small numbers from 34 to 43 out of a max of 77
[07/11 20:21:30]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  376802.159668    0.000244  376784.096571 -376802.159315         0.0
1  376802.159668    0.000244  376802.159315 -376802.159315         0.0
2  377250.596815  448.437500  377002.159315 -376802.159315         0.0
3  377250.596815    0.000244  377102.159315 -376802.159315         0.0
4  377250.596815  142.968628  377200.596937 -376802.159315         0.0
5  377250.596815   49.656433  377202.159315 -376750.596815         0.0
6  377250.596815    0.010000  377250.596815 -376750.596680         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:21:30]  Iteration: 98
[07/11 20:21:42]  Generator returned sat in 11.904157 secs.
[07/11 20:21:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:21:42]  Improved gap from 0 to 45.3125
[07/11 20:21:43]  Improved number of small numbers from 29 to 37 out of a max of 77
[07/11 20:21:43]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  376352.410156    0.000244  376252.410047 -376352.410047         0.0
1  376352.410156    0.000244  376352.410047 -376352.410047         0.0
2  376552.410169  200.000122  376552.410047 -376352.410047         0.0
3  376799.076348  246.666300  376649.743136 -376352.410047         0.0
4  376799.076348  149.333089  376749.076470 -376352.410047         0.0
5  376799.076348   49.999878  376752.410047 -376299.076348         0.0
6  376799.076348    6.333700  376799.076348 -376299.076172         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:21:43]  Iteration: 99
[07/11 20:21:47]  Generator returned sat in 3.948682 secs.
[07/11 20:21:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:21:48]  Improved gap from 1/8192 to 31.25
[07/11 20:21:49]  Improved number of small numbers from 34 to 40 out of a max of 77
[07/11 20:21:49]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  397279.737952    0.000244  397181.237463 -397181.237463         0.0
1  397279.737952    0.000244  397181.237463 -397179.737952         0.0
2  397279.737952    0.000244  397279.737952 -397179.737952         0.0
3  397479.737952  200.000000  397479.737952 -397179.737952         0.0
4  397529.488684   49.750732  397498.238684 -397129.488684         0.0
5  397889.488806  391.250122  397529.488684 -397129.488684         0.0
6  397889.488806  214.126099  397629.488770 -397129.488684         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:21:49]  Iteration: 100
[07/11 20:21:54]  Generator returned sat in 5.330935 secs.
[07/11 20:21:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 20:21:55]  Improved gap from 367/12 to 29.6875
[07/11 20:21:56]  Improved number of small numbers from 34 to 42 out of a max of 77
[07/11 20:21:56]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  440558.377441    0.000244  440458.377284 -440458.377284         0.0
1  440558.377441    0.000244  440557.065150 -440458.377284         0.0
2  440558.377441    0.000244  440558.377284 -440458.377284         0.0
3  440910.689540  352.312256  440658.377284 -440458.377284         0.0
4  440910.689540   51.656067  440858.377284 -440458.377284         0.0
5  440910.689540   52.312134  440881.002040 -440410.689540         0.0
6  441270.689662  389.687622  440910.689540 -440410.689540         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:21:56]  Iteration: 101
[07/11 20:21:59]  Generator returned sat in 2.599079 secs.
[07/11 20:21:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:21:59]  Improved gap from 0 to 31.25
[07/11 20:22:00]  Improved number of small numbers from 30 to 38 out of a max of 77
[07/11 20:22:00]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  451652.171387    0.000244  451652.171089 -451652.171089         0.0
1  451652.171387    0.000244  451652.171089 -451651.671456         0.0
2  451751.671517   99.500427  451751.671456 -451651.671456         0.0
3  452002.422066  250.750610  451951.671456 -451651.671456         0.0
4  452002.422066   50.750549  451971.172066 -451602.422066         0.0
5  452362.422127  391.250061  452002.422066 -451602.422066         0.0
6  452362.422127  215.125916  452102.422119 -451602.422066         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:22:00]  Iteration: 102
[07/11 20:22:04]  Generator returned sat in 3.610368 secs.
[07/11 20:22:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-4] + 1)[0m
[07/11 20:22:04]  Improved gap from 1/16384 to 15.625
[07/11 20:22:04]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:22:04]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  451961.234619   0.000244  451946.734375 -451946.734619         0.0
1  451961.234619   0.000244  451961.234619 -451876.859619         0.0
2  451986.797119  25.562500  451986.796875 -451802.421875         0.0
3  452002.421875  15.625000  452002.421875 -451718.046875         0.0
4  452051.296875  48.875000  452018.046875 -451651.296875         0.0
5  452068.046631  49.999756  452051.296875 -451568.046631         0.0
6  452100.171875  48.875000  452068.046631 -451568.046631         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:22:05]  Iteration: 103
[07/11 20:22:07]  Generator returned sat in 2.774924 secs.
[07/11 20:22:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/11 20:22:08]  Improved gap from 1/16384 to 14.0625
[07/11 20:22:08]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:22:08]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  452009.254639   0.000244  451999.004395 -451999.004395         0.0
1  452009.254639   0.000244  452009.254639 -451923.317139         0.0
2  452050.223145  40.968506  452036.160645 -451850.223145         0.0
3  452050.223389  14.062744  452050.223145 -451764.285645         0.0
4  452096.410645  46.187500  452064.285645 -451696.410645         0.0
5  452114.285400  49.999756  452096.410645 -451614.285400         0.0
6  452142.598145  46.187500  452114.285400 -451614.285400         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:22:08]  Iteration: 104
[07/11 20:22:14]  Generator returned sat in 5.751355 secs.
[07/11 20:22:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + 2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:22:14]  Improved gap from 1/8192 to 100
[07/11 20:22:15]  Improved number of small numbers from 42 to 52 out of a max of 77
[07/11 20:22:15]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  451843.222900    0.000244  451843.222900 -451843.223083         0.0
1  451843.223145    0.000244  451843.223083 -451843.223083         0.0
2  452050.223145  207.000061  452043.223083 -451843.223083         0.0
3  452243.223083  200.000000  452085.223022 -451843.223083         0.0
4  452243.223083    0.010000  452243.223083 -451843.223083         0.0
5  452603.223145  360.000061  452243.223083 -451843.223083         0.0
6  452603.223145    0.010000  452343.223145 -451843.223083         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:22:15]  Iteration: 105
[07/11 20:22:19]  Generator returned sat in 3.599512 secs.
[07/11 20:22:19]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:22:19]  Improved gap from 1/8192 to 23.4375
[07/11 20:22:19]  Improved number of small numbers from 34 to 38 out of a max of 77
[07/11 20:22:19]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  452787.286865   0.000244  452787.286682 -452787.286865         0.0
1  452814.098938  26.812256  452814.098816 -452737.536316         0.0
2  452837.536438  23.437622  452837.536316 -452660.973816         0.0
3  452886.661072  49.124756  452860.973816 -452586.661072         0.0
4  452913.223450  52.249634  452886.661072 -452513.223450         0.0
5  452936.660950  49.999878  452913.223450 -452436.660950         0.0
6  452964.785767  51.562317  452936.660950 -452436.660889         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:22:20]  Iteration: 106
[07/11 20:22:30]  Generator returned sat in 10.472762 secs.
[07/11 20:22:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-3] + 1)[0m
[07/11 20:22:30]  Improved gap from 0 to 23.4375
[07/11 20:22:31]  Improved number of small numbers from 45 to 53 out of a max of 77
[07/11 20:22:31]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  452828.162476   0.000244  452745.101074 -452745.101074         0.0
1  452828.162476   0.000244  452745.101196 -452728.162476         0.0
2  452828.162476   0.000244  452828.162476 -452651.599976         0.0
3  452851.599976  23.437500  452851.599976 -452579.286865         0.0
4  452905.849365  54.249390  452879.286987 -452505.849365         0.0
5  452905.849365  26.562256  452905.849365 -452429.286865         0.0
6  452933.974060  28.124695  452929.286865 -452429.286865         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:22:31]  Iteration: 107
[07/11 20:22:39]  Generator returned sat in 7.452844 secs.
[07/11 20:22:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:22:39]  Improved gap from 1/8192 to 35.9375
[07/11 20:22:40]  Improved number of small numbers from 38 to 51 out of a max of 77
[07/11 20:22:40]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  452697.706787    0.000244  452560.452380 -452660.452148         0.0
1  452697.706787    0.000244  452697.706653 -452660.452148         0.0
2  452860.452380  162.745728  452843.395495 -452660.452148         0.0
3  452919.270740   75.875244  452883.333240 -452619.270740         0.0
4  453055.208240  171.875000  453005.208362 -452619.270740         0.0
5  453055.208240   49.999756  453019.270740 -452555.208252         0.0
6  453191.145740  171.875000  453055.208252 -452555.208252         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:22:40]  Iteration: 108
[07/11 20:22:45]  Generator returned sat in 5.234757 secs.
[07/11 20:22:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-3] + 3/2)[0m
[07/11 20:22:45]  Improved gap from 0 to 23.4375
[07/11 20:22:46]  Improved number of small numbers from 38 to 54 out of a max of 77
[07/11 20:22:46]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  631554.895996   0.000244  631331.458252 -631331.458374         0.0
1  631554.895996   0.000244  631431.458374 -631331.458374         0.0
2  631554.895996   0.000244  631531.458374 -631331.458374         0.0
3  631554.895996   0.000244  631531.458374 -631254.895996         0.0
4  631582.958374  51.500000  631556.395996 -631182.958374         0.0
5  631582.958374  13.968811  631582.958374 -631106.395874         0.0
6  631610.208374  27.250000  631606.395874 -631106.395752         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:22:46]  Iteration: 109
[07/11 20:22:59]  Generator returned sat in 12.899528 secs.
[07/11 20:22:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + -1)[0m
[07/11 20:22:59]  Improved gap from 0 to 100
[07/11 20:23:00]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:23:00]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  673584.963623    0.000244  673484.963379 -673484.963379         0.0
1  673584.963623    0.000244  673546.973389 -673484.963379         0.0
2  673584.963623    0.000244  673584.963379 -673484.963379         0.0
3  673982.963379  398.000000  673745.963623 -673484.963379         0.0
4  673982.963379    0.010000  673884.963379 -673484.963379         0.0
5  673982.963379   96.980469  673884.963623 -673484.963379         0.0
6  674344.963623  460.000000  673984.963379 -673484.963379         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:23:00]  Iteration: 110
[07/11 20:23:13]  Generator returned sat in 12.749319 secs.
[07/11 20:23:13]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -1S_f[0][t-4] + -3/2)[0m
[07/11 20:23:13]  Improved gap from 103399999/3072000 to 48.4375
[07/11 20:23:13]  Improved number of small numbers from 34 to 42 out of a max of 77
[07/11 20:23:13]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  714228.390381    0.000244  714228.390315 -714290.432190         0.0
1  714390.432312  162.041997  714390.432190 -714290.432190         0.0
2  714390.432312    0.000061  714390.432190 -714265.098389         0.0
3  714465.098501   74.666311  714465.098440 -714213.536133         0.0
4  714662.973440  197.875000  714612.973501 -714213.536133         0.0
5  714662.973440   35.104406  714614.535889 -714162.973440         0.0
6  714662.973440    0.010000  714662.973440 -714162.973389         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:23:14]  Iteration: 111
[07/11 20:23:28]  Generator returned sat in 14.082271 secs.
[07/11 20:23:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -1S_f[0][t-4] + -1)[0m
[07/11 20:23:28]  Improved gap from 0 to 48.4375
[07/11 20:23:29]  Improved number of small numbers from 32 to 42 out of a max of 77
[07/11 20:23:29]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  729758.848145    0.000244  729688.754354 -729710.410645         0.0
1  729758.848145    0.000244  729710.410848 -729658.848348         0.0
2  730108.848226  398.437378  729758.848348 -729658.848348         0.0
3  730108.848226  349.999756  729906.286092 -729658.848348         0.0
4  730108.848226   70.156616  730058.848348 -729658.848348         0.0
5  730108.848226   49.999756  730058.848348 -729608.848226         0.0
6  730129.004964   70.156616  730108.848226 -729608.848145         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:23:29]  Iteration: 112
[07/11 20:23:34]  Generator returned sat in 4.428338 secs.
[07/11 20:23:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + -1)[0m
[07/11 20:23:34]  Improved gap from 1/32768 to 1.5625
[07/11 20:23:34]  Improved number of small numbers from 36 to 78 out of a max of 78
[07/11 20:23:34]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  815901.411377   0.000244  815801.410889 -815801.410889         0.0
1  815901.411377   0.000244  815901.410889 -815801.410889         0.0
2  815902.973389   1.562500  815901.410889 -815702.973389         0.0
3  815902.973633   1.562744  815902.973389 -815604.536133         0.0
4  815953.535889  50.562500  815905.098633 -815553.535889         0.0
5  815953.535889   2.687744  815953.535889 -815455.098389         0.0
6  816003.879639  50.343750  815955.098389 -815455.098389         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:23:34]  Iteration: 113
[07/11 20:23:38]  Generator returned sat in 3.619558 secs.
[07/11 20:23:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:23:38]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:23:38]  Iteration: 114
[07/11 20:23:42]  Generator returned sat in 3.334663 secs.
[07/11 20:23:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:23:42]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:23:42]  Iteration: 115
[07/11 20:23:45]  Generator returned sat in 3.374902 secs.
[07/11 20:23:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:23:45]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:23:45]  Iteration: 116
[07/11 20:23:49]  Generator returned sat in 3.324414 secs.
[07/11 20:23:49]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:23:49]  Improved gap from 0 to 0
[07/11 20:23:49]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:23:49]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  754394.993408  0.000244  754394.973389 -754394.993408         0.0
1  754394.993408  0.000244  754394.993408 -754294.993652         0.0
2  754394.993652  0.000244  754394.993652 -754194.993652         0.0
3  754394.993896  0.000244  754394.993652 -754094.993896         0.0
4  754395.003906  0.010254  754394.993896 -753995.003906         0.0
5  754395.003906  0.010000  754395.003906 -753895.003906         0.0
6  754395.014160  0.010254  754395.003906 -753895.003662         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:23:49]  Iteration: 117
[07/11 20:23:53]  Generator returned sat in 3.466104 secs.
[07/11 20:23:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + -1/2)[0m
[07/11 20:23:53]  Improved gap from 0 to 0
[07/11 20:23:54]  Improved number of small numbers from 35 to 69 out of a max of 77
[07/11 20:23:54]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  755316.609375  0.000244  755315.589600 -755315.589600         0.0
1  755316.609375  0.000244  755316.609131 -755216.609375         0.0
2  755316.609375  0.000244  755316.609375 -755116.609375         0.0
3  755316.609619  0.000244  755316.609375 -755016.609619         0.0
4  755316.619385  0.010010  755316.619263 -754916.629150         0.0
5  755316.629263  0.010000  755316.629202 -754816.629395         0.0
6  755316.639202  0.010000  755316.629395 -754816.629395         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:23:54]  Iteration: 118
[07/11 20:24:11]  Generator returned sat in 16.932391 secs.
[07/11 20:24:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -1S_f[0][t-4] + -1/2)[0m
[07/11 20:24:12]  Improved gap from 0 to 48.4375
[07/11 20:24:12]  Improved number of small numbers from 34 to 44 out of a max of 77
[07/11 20:24:12]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  755016.629150    0.000244  754892.410574 -754968.191650         0.0
1  755016.629150    0.000244  754968.191702 -754916.629202         0.0
2  755332.462657  364.270955  755051.858246 -754916.629202         0.0
3  755332.462657    0.000244  755216.629202 -754916.629202         0.0
4  755332.462657  115.833333  755315.066824 -754916.629202         0.0
5  755365.066702   49.999878  755316.629202 -754865.066702         0.0
6  755432.462535  115.833333  755365.066702 -754865.066650         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:24:12]  Iteration: 119
[07/11 20:24:38]  Generator returned sat in 25.966443 secs.
[07/11 20:24:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 1)[0m
[07/11 20:24:39]  Improved gap from 1/16384 to 23.4375
[07/11 20:24:40]  Improved number of small numbers from 32 to 51 out of a max of 77
[07/11 20:24:40]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  755681.491211    0.000244  755469.554498 -755485.178223         0.0
1  755681.491211    0.000244  755485.178399 -755485.178223         0.0
2  755681.491211  196.312744  755681.491204 -755485.178223         0.0
3  755708.615899   27.124695  755685.178399 -755408.615967         0.0
4  755782.053643   96.875244  755782.053521 -755408.615723         0.0
5  755832.053399   49.999878  755808.615899 -755332.053467         0.0
6  755896.053430   87.437531  755832.053467 -755332.053223         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:24:40]  Iteration: 120
[07/11 20:24:44]  Generator returned sat in 4.359008 secs.
[07/11 20:24:44]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 20:24:45]  Improved gap from 37/11468800 to 48.4375
[07/11 20:24:45]  Improved number of small numbers from 32 to 46 out of a max of 77
[07/11 20:24:45]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  674408.567871    0.000244  674308.567669 -674308.567669         0.0
1  674408.567871    0.000244  674408.567669 -674308.567669         0.0
2  674408.567871    0.000061  674408.567669 -674273.606689         0.0
3  674722.044254  313.476584  674495.212364 -674273.606689         0.0
4  674722.044254  144.322347  674672.044315 -674273.606689         0.0
5  674722.044254   46.093628  674673.606689 -674222.044254         0.0
6  674722.044254    0.010000  674722.044254 -674170.481934         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:24:46]  Iteration: 121
[07/11 20:24:50]  Generator returned sat in 4.644480 secs.
[07/11 20:24:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:24:51]  Improved gap from 344053/8192 to 46.875
[07/11 20:24:51]  Improved number of small numbers from 34 to 41 out of a max of 77
[07/11 20:24:51]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  740660.045166    0.000244  740560.044925 -740560.044925         0.0
1  740660.045166    0.000244  740660.044925 -740560.044925         0.0
2  740660.045166    0.000061  740660.044925 -740506.919925         0.0
3  740953.794925  293.750000  740805.795230 -740506.919925         0.0
4  740953.794925  123.875153  740903.794986 -740506.919925         0.0
5  740953.794925   49.999878  740906.919925 -740453.794925         0.0
6  740982.357547   75.437622  740953.794925 -740453.794922         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:24:51]  Iteration: 122
[07/11 20:25:04]  Generator returned sat in 12.116339 secs.
[07/11 20:25:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:25:04]  Improved gap from 1/8192 to 23.4375
[07/11 20:25:04]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:25:04]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  740652.506348   0.000244  740321.233398 -740387.568848         0.0
1  740652.506348   0.000244  740471.776123 -740387.568848         0.0
2  740652.506348   0.000244  740587.568848 -740387.568848         0.0
3  740652.506348  64.937500  740629.068848 -740352.506348         0.0
4  740675.943848  46.875000  740652.506348 -740275.943848         0.0
5  740675.943848   0.010000  740675.943848 -740199.381348         0.0
6  740704.068848  28.125000  740699.381348 -740199.381348         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:25:04]  Iteration: 123
[07/11 20:25:10]  Generator returned sat in 5.031123 secs.
[07/11 20:25:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:25:10]  Improved gap from 1/16384 to 23.4375
[07/11 20:25:10]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:25:10]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  739809.340820    0.000244  739809.340820 -739823.801025         0.0
1  739997.364014  188.023193  739897.633545 -739823.801025         0.0
2  739997.364014    0.000244  739997.363770 -739823.801025         0.0
3  740023.801514   26.437744  740023.801270 -739747.238770         0.0
4  740070.676270   46.875000  740047.238770 -739670.676270         0.0
5  740070.676270    0.010000  740070.676270 -739594.113770         0.0
6  740105.832520   35.156250  740094.113770 -739594.113770         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:25:10]  Iteration: 124
[07/11 20:25:15]  Generator returned sat in 4.648088 secs.
[07/11 20:25:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:25:15]  Improved gap from 282619/24576 to 46.875
[07/11 20:25:16]  Improved number of small numbers from 36 to 48 out of a max of 77
[07/11 20:25:16]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  755235.259277    0.000244  755235.259155 -755235.259155         0.0
1  755335.259277  100.000122  755335.259155 -755235.259155         0.0
2  755335.259277    0.000061  755335.259155 -755204.134033         0.0
3  755504.009399  168.750244  755504.009338 -755204.134033         0.0
4  755639.884430  135.875092  755601.009216 -755204.134033         0.0
5  755651.009155   49.999939  755604.134033 -755151.009155         0.0
6  755691.571533   87.437500  755651.009155 -755151.009033         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:25:16]  Iteration: 125
[07/11 20:25:21]  Generator returned sat in 5.102160 secs.
[07/11 20:25:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:25:22]  Improved gap from 1/8192 to 23.4375
[07/11 20:25:22]  Improved number of small numbers from 32 to 51 out of a max of 77
[07/11 20:25:22]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  755335.827393    0.000244  754954.068524 -755054.068524         0.0
1  755335.827393  181.759277  755054.068524 -755054.068524         0.0
2  755335.827393  281.758789  755254.068524 -755054.068524         0.0
3  755335.827393    0.000244  755277.197049 -755035.827393         0.0
4  755362.389837   85.192788  755335.827459 -754962.389837         0.0
5  755362.389837    0.010000  755362.389837 -754885.827393         0.0
6  755420.484346   58.094509  755385.827393 -754885.827393         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:25:23]  Iteration: 126
[07/11 20:25:28]  Generator returned sat in 4.964399 secs.
[07/11 20:25:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/11 20:25:28]  Improved gap from 2112005/90112 to 23.4375
[07/11 20:25:28]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:25:28]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  755315.515137    0.000244  755084.881836 -755084.882080         0.0
1  755315.515137  181.759277  755183.956055 -755084.882080         0.0
2  755315.515137    0.000244  755284.881836 -755084.882080         0.0
3  755315.515137    0.000244  755315.514648 -755038.952148         0.0
4  755362.389648   46.875000  755338.952148 -754962.389648         0.0
5  755362.389648    0.010000  755362.389648 -754887.379883         0.0
6  755393.948242   31.558594  755387.380127 -754887.379883         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:25:28]  Iteration: 127
[07/11 20:25:29]  Generator returned unsat in 0.255939 secs.
[07/11 20:25:29]  [96mNo more solutions found[0m
[07/11 20:25:29]  Final solutions: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)
c_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 2)
c_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 3/2)
c_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)
c_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1/2)
c_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1)
c_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)
c_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
