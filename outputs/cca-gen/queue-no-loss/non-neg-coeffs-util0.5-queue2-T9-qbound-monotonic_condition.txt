[07/25 20:53:23]  --------------------------------------------------------------------------------
[07/25 20:53:23]  Iteration: 1 (0 solution, 0 counterexamples)
[07/25 20:53:23]  Generator returned sat in 0.004476 secs.
[07/25 20:53:23]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:53:23]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/25 20:53:23]  Verifer returned sat in 0.296008 secs.
[07/25 20:53:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t
0        -5828.9        -6128.9    6128.9      -5828.9      0.100      -6128.9        0.0    300.0           300.0
1        -5729.0        -6028.9    6128.9      -5729.0    399.900      -6028.9        0.0    299.9           299.9
2         1198.1        -6028.9    6128.9       1198.1   7227.000      -6028.9        0.0   7227.0          7127.0
3         1198.1        -5828.9    6128.9       1198.1      0.100      -5828.9        0.0   7027.0          7027.0
4         1198.1        -5828.9    6128.9       1198.1    602.150      -5828.9        0.0   7027.0          6927.0
5         1198.1        -5728.9    6128.9       1198.1   1305.225      -5728.9        0.0   6927.0          6827.0
6         1198.1        -5628.9    6128.9       1198.1   3212.450      -5628.9        0.0   6827.0          6727.0
7         1198.1        -5457.9    6128.9       1198.1   6826.900      -5457.9        0.0   6656.0          6627.0
8         8939.9        -5328.9    6128.9       8939.9  14397.800      -5328.9        0.0  14268.8         14268.8
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:53:24]  --------------------------------------------------------------------------------
[07/25 20:53:24]  Iteration: 2 (0 solution, 1 counterexamples)
[07/25 20:53:24]  Generator returned sat in 0.014488 secs.
[07/25 20:53:24]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:24]  Improved number of small numbers from 70 to 100 out of a max of 100
[07/25 20:53:24]  Verifer returned sat in 0.293923 secs.
[07/25 20:53:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5729.000244   -6229.000000  6128.899902 -5729.000244    0.099854 -6229.000000        0.0  499.999756      399.999756
1   -5729.000000   -6129.000000  6128.899902 -5729.000000  500.000000 -6129.000000        0.0  400.000000      300.000000
2   -5429.049805   -6029.000000  6128.899902 -5429.049805  699.950195 -6029.000000        0.0  599.950195      499.950195
3   -5429.049805   -5918.699951  6128.899902 -5429.049805  599.900146 -5918.699951        0.0  489.650146      399.950195
4   -5429.049805   -5729.000000  6128.899902 -5429.049805  457.100098 -5729.000000        0.0  299.950195      299.950195
5   -5298.449951   -5728.949951  6128.899902 -5298.449951  430.550049 -5728.949951        0.0  430.500000      330.550049
6   -5298.449951   -5629.000000  6128.899902 -5298.449951  367.300049 -5629.000000        0.0  330.550049      230.550049
7   -5298.449951   -5429.000000  6128.899902 -5298.449951  330.500000 -5429.000000        0.0  130.550049      130.550049
8   -5113.750000   -5429.000000  6128.899902 -5113.750000  315.250000 -5429.000000        0.0  315.250000      215.250000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:24]  --------------------------------------------------------------------------------
[07/25 20:53:24]  Iteration: 3 (0 solution, 2 counterexamples)
[07/25 20:53:24]  Generator returned sat in 0.108375 secs.
[07/25 20:53:24]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:53:25]  Improved number of small numbers from 76 to 100 out of a max of 100
[07/25 20:53:25]  Verifer returned sat in 0.218940 secs.
[07/25 20:53:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5729.000488   -6206.399658  6128.899658 -5729.000488    0.099609 -6206.399658        0.0  477.399170      399.999512
1   -5729.000000   -6127.000244  6128.899658 -5729.000000  477.399658 -6127.000244        0.0  398.000244      300.000000
2   -5629.000000   -6029.000000  6128.899658 -5629.000000  498.000244 -6029.000000        0.0  400.000000      300.000000
3   -5629.000000   -5918.699951  6128.899658 -5629.000000  399.949951 -5918.699951        0.0  289.699951      200.000000
4   -5629.000000   -5729.000000  6128.899658 -5629.000000  289.699707 -5729.000000        0.0  100.000000      100.000000
5   -5328.999756   -5729.000000  6128.899658 -5328.999756  400.000244 -5729.000000        0.0  400.000244      300.000244
6   -5328.999756   -5629.000000  6128.899658 -5328.999756  302.000000 -5629.000000        0.0  300.000244      200.000244
7   -5328.999756   -5429.000244  6128.899658 -5328.999756  291.699951 -5429.000244        0.0  100.000488      100.000244
8   -5328.999756   -5429.000000  6128.899658 -5328.999756    1.500000 -5429.000000        0.0  100.000244        0.000244
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:25]  --------------------------------------------------------------------------------
[07/25 20:53:25]  Iteration: 4 (0 solution, 3 counterexamples)
[07/25 20:53:25]  Generator returned sat in 0.009100 secs.
[07/25 20:53:25]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:53:25]  Improved number of small numbers from 84 to 100 out of a max of 100
[07/25 20:53:25]  Verifer returned sat in 0.165025 secs.
[07/25 20:53:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5729.000488   -6206.399658  6128.899658 -5729.000488    0.099365 -6206.399658        0.0  477.399170      399.999512
1   -5729.000000   -6127.500244  6128.899658 -5729.000000  477.399658 -6127.500244        0.0  398.500244      300.000000
2   -5629.000000   -6029.000000  6128.899658 -5629.000000  498.500244 -6029.000000        0.0  400.000000      300.000000
3   -5629.000000   -5918.699951  6128.899658 -5629.000000  399.999756 -5918.699951        0.0  289.699951      200.000000
4   -5629.000000   -5729.000000  6128.899658 -5629.000000  289.199707 -5729.000000        0.0  100.000000      100.000000
5   -5328.999756   -5729.000000  6128.899658 -5328.999756  400.000244 -5729.000000        0.0  400.000244      300.000244
6   -5328.999756   -5629.000000  6128.899658 -5328.999756  301.500000 -5629.000000        0.0  300.000244      200.000244
7   -5328.999756   -5429.000488  6128.899658 -5328.999756  291.199951 -5429.000488        0.0  100.000732      100.000244
8   -5328.999756   -5429.000000  6128.899658 -5328.999756    1.500000 -5429.000000        0.0  100.000244        0.000244
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:26]  --------------------------------------------------------------------------------
[07/25 20:53:26]  Iteration: 5 (0 solution, 4 counterexamples)
[07/25 20:53:26]  Generator returned sat in 0.013290 secs.
[07/25 20:53:26]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:53:26]  Improved gap from 0 to 23.4375
[07/25 20:53:26]  Improved number of small numbers from 54 to 101 out of a max of 101
[07/25 20:53:26]  Verifer returned sat in 0.394942 secs.
[07/25 20:53:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5929.123779   -6229.123779  6129.023682 -5929.123779    0.099365 -6229.123779        0.0  300.000000      200.000244
1   -5929.123779   -6029.124023  6129.023682 -5929.123779  300.000000 -6029.124023        0.0  100.000244      100.000244
2   -5929.123779   -5952.561279  6129.023682 -5929.123779  100.000000 -5952.561279        0.0   23.437500        0.000244
3   -5929.123779   -5929.123779  6152.460938 -5929.123779    0.024902 -5929.123779        0.0    0.000000      -76.562500
4   -5629.123779   -5752.561279  6152.460938 -5629.123779  300.000000 -5752.561279        0.0  123.437500      123.437500
5   -5629.123779   -5652.586426  6152.460938 -5629.123779    1.500000 -5652.586426        0.0   23.462646       23.437500
6   -5629.123779   -5652.561279  6229.023438 -5629.123779    1.500000 -5652.561279        0.0   23.437500        0.000000
7   -5629.123779   -5629.123779  6305.585938 -5629.123779    1.500000 -5629.123779        0.0    0.000000      -23.437500
8   -5505.686279   -5605.686279  6305.585938 -5505.686279  123.437500 -5605.686279        0.0  100.000000        0.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:53:27]  --------------------------------------------------------------------------------
[07/25 20:53:27]  Iteration: 6 (0 solution, 5 counterexamples)
[07/25 20:53:27]  Generator returned sat in 0.044939 secs.
[07/25 20:53:27]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:27]  Improved number of small numbers from 68 to 100 out of a max of 100
[07/25 20:53:27]  Verifer returned sat in 0.204621 secs.
[07/25 20:53:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6429.618652   -6629.618896  6629.018311 -6429.618652    0.099121 -6629.618896        0.0  200.000244      200.000000
1   -6129.621338   -6529.618652  6629.018311 -6129.621338  499.997559 -6529.618652        0.0  399.997314      399.997314
2   -6129.621338   -6429.618652  6629.018311 -6129.621338   99.999756 -6429.618652        0.0  299.997314      299.997314
3   -6029.618652   -6429.618652  6629.018311 -6029.618652  400.000000 -6429.618652        0.0  400.000000      300.000000
4   -6029.618652   -6329.618652  6629.018311 -6029.618652    0.010000 -6329.618652        0.0  300.000000      200.000000
5   -6029.618652   -6129.618896  6629.018311 -6029.618652  200.500000 -6129.618896        0.0  100.000244      100.000000
6   -6029.618652   -6029.621338  6629.018311 -6029.618652    0.010000 -6029.621338        0.0    0.002686        0.000000
7   -5629.124023   -6029.616211  6629.018311 -5629.124023  400.497314 -6029.616211        0.0  400.492188      300.494629
8   -5629.124023   -5929.618652  6629.018311 -5629.124023    0.010000 -5929.618652        0.0  300.494629      200.494629
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:28]  --------------------------------------------------------------------------------
[07/25 20:53:28]  Iteration: 7 (0 solution, 6 counterexamples)
[07/25 20:53:28]  Generator returned sat in 0.056783 secs.
[07/25 20:53:28]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:29]  Improved number of small numbers from 63 to 71 out of a max of 100
[07/25 20:53:29]  Verifer returned sat in 0.922075 secs.
[07/25 20:53:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6301.691162   -6801.691211  6629.018311 -6301.691162    0.099121 -6801.691211        0.0  500.000049      400.000049
1   -6301.691162   -6681.738711  6629.018311 -6301.691162    0.002441 -6681.738711        0.0  380.047549      300.000049
2   -6101.691211   -6597.688711  6629.018311 -6101.691211  580.047500 -6597.688711        0.0  495.997500      400.000000
3   -6101.691211   -6501.691211  6629.018311 -6101.691211  495.995000 -6501.691211        0.0  400.000000      300.000000
4   -6101.691211   -6301.691211  6629.018311 -6101.691211  399.997500 -6301.691211        0.0  200.000000      200.000000
5   -5909.668711   -6201.691211  6629.018311 -5909.668711  392.022500 -6201.691211        0.0  292.022500      292.022500
6   -5805.681211   -6101.691211  6629.018311 -5805.681211  396.010000 -6101.691211        0.0  296.010000      296.010000
7   -5701.686211   -6101.688477  6629.018311 -5701.686211  400.005000 -6101.688477        0.0  400.002266      300.005000
8   -5701.686211   -5909.666260  6629.018311 -5701.686211    0.010000 -5909.666260        0.0  207.980049      200.005000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:29]  --------------------------------------------------------------------------------
[07/25 20:53:29]  Iteration: 8 (0 solution, 7 counterexamples)
[07/25 20:53:29]  Generator returned sat in 0.054077 secs.
[07/25 20:53:29]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:30]  Improved number of small numbers from 63 to 100 out of a max of 100
[07/25 20:53:30]  Verifer returned sat in 0.321125 secs.
[07/25 20:53:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6401.688477   -6871.766113  6629.018311 -6401.688477    0.098877 -6871.766113        0.0  470.077637      399.997803
1   -6303.688477   -6801.686279  6629.018311 -6303.688477  568.077637 -6801.686279        0.0  497.997803      397.997803
2   -6303.686279   -6701.686279  6629.018311 -6303.686279  498.000000 -6701.686279        0.0  398.000000      298.000000
3   -6201.686279   -6600.686035  6629.018311 -6201.686279  500.000000 -6600.686035        0.0  398.999756      300.000000
4   -6201.686279   -6401.686279  6629.018311 -6201.686279  387.040039 -6401.686279        0.0  200.000000      200.000000
5   -6006.666260   -6303.686279  6629.018311 -6006.666260  395.020020 -6303.686279        0.0  297.020020      295.020020
6   -5905.676270   -6201.686279  6629.018311 -5905.676270  398.010010 -6201.686279        0.0  296.010010      296.010010
7   -5801.681396   -6201.683594  6629.018311 -5801.681396  400.004883 -6201.683594        0.0  400.002197      300.004883
8   -5801.681396   -6001.686279  6629.018311 -5801.681396    0.010000 -6001.686279        0.0  200.004883      200.004883
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:30]  --------------------------------------------------------------------------------
[07/25 20:53:30]  Iteration: 9 (0 solution, 8 counterexamples)
[07/25 20:53:30]  Generator returned sat in 0.036480 secs.
[07/25 20:53:30]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:31]  Improved number of small numbers from 68 to 82 out of a max of 100
[07/25 20:53:31]  Verifer returned sat in 0.518677 secs.
[07/25 20:53:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6401.688721   -6897.681885  6629.018311 -6401.688721    0.098633 -6897.681885        0.0  495.993164      399.997559
1   -6303.688721   -6801.686279  6629.018311 -6303.688721  593.993164 -6801.686279        0.0  497.997559      397.997559
2   -6302.672119   -6701.686279  6629.018311 -6302.672119  499.014160 -6701.686279        0.0  399.014160      299.014160
3   -6201.684326   -6600.686035  6629.018311 -6201.684326  500.001953 -6600.686035        0.0  399.001709      300.001953
4   -6201.684326   -6401.686279  6629.018311 -6201.684326  398.998901 -6401.686279        0.0  200.001953      200.001953
5   -6001.686829   -6302.672302  6629.018311 -6001.686829  399.999451 -6302.672302        0.0  300.985474      299.999451
6   -5902.665588   -6201.686279  6629.018311 -5902.665588  400.006714 -6201.686279        0.0  299.020691      299.020691
7   -5801.683044   -6201.683838  6629.018311 -5801.683044  400.003235 -6201.683838        0.0  400.000793      300.003235
8   -5801.683044   -6001.686279  6629.018311 -5801.683044    0.010000 -6001.686279        0.0  200.003235      200.003235
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:31]  --------------------------------------------------------------------------------
[07/25 20:53:31]  Iteration: 10 (0 solution, 9 counterexamples)
[07/25 20:53:32]  Generator returned sat in 0.048899 secs.
[07/25 20:53:32]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:32]  Improved gap from 0 to 100
[07/25 20:53:32]  Improved number of small numbers from 97 to 97 out of a max of 101
[07/25 20:53:32]  Verifer returned sat in 0.377038 secs.
[07/25 20:53:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6301.587646   -6701.636963  6629.018311 -6301.587646    0.098633 -6701.636963        0.0  400.049316      400.000000
1   -6301.587646   -6701.587646  6629.018311 -6301.587646    0.049316 -6701.587646        0.0  400.000000      300.000000
2   -6010.094482   -6588.587646  6629.018311 -6010.094482  691.493164 -6588.587646        0.0  578.493164      491.493164
3   -6010.045166   -6427.784912  6629.018311 -6010.045166  578.542480 -6427.784912        0.0  417.739746      391.542480
4   -6001.587646   -6301.587646  6629.018311 -6001.587646  426.197266 -6301.587646        0.0  300.000000      300.000000
5   -5888.489014   -6201.587646  6629.018311 -5888.489014  413.098633 -6201.587646        0.0  313.098633      313.098633
6   -5801.538330   -6201.587646  6629.018311 -5801.538330  400.049316 -6201.587646        0.0  400.049316      300.049316
7   -5801.538330   -6001.587646  6629.018311 -5801.538330  313.123291 -6001.587646        0.0  200.049316      200.049316
8   -5695.026001   -6001.538330  6629.018311 -5695.026001  306.561646 -6001.538330        0.0  306.512329      206.561646
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:33]  --------------------------------------------------------------------------------
[07/25 20:53:33]  Iteration: 11 (0 solution, 10 counterexamples)
[07/25 20:53:33]  Generator returned sat in 0.149763 secs.
[07/25 20:53:33]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:33]  Improved gap from 0 to 0
[07/25 20:53:33]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/25 20:53:33]  Verifer returned sat in 0.433817 secs.
[07/25 20:53:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6201.570312   -6701.572754  6529.505859 -6201.570312    0.098145 -6701.572754        0.0  500.002441      500.002197
1   -6201.570312   -6601.572754  6529.505859 -6201.570312    0.002686 -6601.572754        0.0  400.002441      400.002197
2   -6201.570312   -6601.572510  6529.505859 -6201.570312  400.002441 -6601.572510        0.0  400.002197      300.002197
3   -6201.570068   -6501.572510  6529.505859 -6201.570068  400.002441 -6501.572510        0.0  300.002441      200.002441
4   -6201.570068   -6301.572754  6529.505859 -6201.570068    0.500000 -6301.572754        0.0  100.002686      100.002441
5   -6201.570068   -6201.582520  6529.505859 -6201.570068    0.010000 -6201.582520        0.0    0.012451        0.002441
6   -6201.570068   -6201.572510  6629.018311 -6201.570068    0.010000 -6201.572510        0.0    0.002441       -0.485107
7   -6201.072510   -6201.084961  6729.005859 -6201.072510    0.500000 -6201.084961        0.0    0.012451        0.000000
8   -6201.072510   -6201.072510  6729.005859 -6201.072510    0.010000 -6201.072510        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:53:34]  --------------------------------------------------------------------------------
[07/25 20:53:34]  Iteration: 12 (0 solution, 11 counterexamples)
[07/25 20:53:34]  Generator returned sat in 0.018418 secs.
[07/25 20:53:34]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:34]  Improved gap from 1997/4096 to 0
[07/25 20:53:35]  Improved number of small numbers from 82 to 101 out of a max of 101
[07/25 20:53:35]  Verifer returned sat in 0.449479 secs.
[07/25 20:53:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6201.571289   -6701.572754  6529.505859 -6201.571289    0.097900 -6701.572754        0.0  500.001465      500.001465
1   -6201.571289   -6601.572754  6529.505859 -6201.571289    0.001250 -6601.572754        0.0  400.001465      400.001465
2   -6201.571289   -6601.572510  6529.505859 -6201.571289  399.999756 -6601.572510        0.0  400.001221      300.001465
3   -6201.571289   -6401.572754  6529.505859 -6201.571289    0.001221 -6401.572754        0.0  200.001465      200.001465
4   -6201.571289   -6301.572754  6529.505859 -6201.571289    0.010000 -6301.572754        0.0  100.001465      100.001465
5   -6201.571289   -6301.571289  6529.505859 -6201.571289    0.010000 -6301.571289        0.0  100.000000        0.001465
6   -6201.571289   -6201.572754  6629.504395 -6201.571289    0.010000 -6201.572754        0.0    0.001465        0.000000
7   -6200.572754   -6200.583740  6728.505859 -6200.572754    1.000000 -6200.583740        0.0    0.010986        0.000000
8   -6200.572754   -6200.572754  6728.505859 -6200.572754    0.010000 -6200.572754        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:53:35]  --------------------------------------------------------------------------------
[07/25 20:53:35]  Iteration: 13 (0 solution, 12 counterexamples)
[07/25 20:53:35]  Generator returned sat in 0.024244 secs.
[07/25 20:53:35]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:36]  Improved gap from 3/2048 to 0
[07/25 20:53:36]  Improved number of small numbers from 63 to 90 out of a max of 101
[07/25 20:53:36]  Verifer returned sat in 0.755378 secs.
[07/25 20:53:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5642.069824   -6042.070068  6431.004395 -5642.069824    0.097900 -6042.070068        0.0  400.000244      400.000186
1   -5642.069824   -5942.070068  6431.004395 -5642.069824    0.001465 -5942.070068        0.0  300.000244      300.000186
2   -5642.069824   -5942.069824  6431.004395 -5642.069824  299.998779 -5942.069824        0.0  300.000000      200.000186
3   -5642.069824   -5742.070068  6431.004395 -5642.069824    0.001465 -5742.070068        0.0  100.000244      100.000186
4   -5642.069824   -5643.568604  6431.004395 -5642.069824    0.010000 -5643.568604        0.0    1.498779        0.000186
5   -5642.068604   -5642.070010  6531.002930 -5642.068604    1.500000 -5642.070010        0.0    0.001406       -0.000059
6   -5640.570010   -5640.581055  6629.504395 -5640.570010    1.500000 -5640.581055        0.0    0.011045        0.000000
7   -5640.570010   -5640.570010  6729.504150 -5640.570010    0.010000 -5640.570010        0.0    0.000000       -0.000244
8   -5640.560010   -5640.568848  6729.504150 -5640.560010    0.010000 -5640.568848        0.0    0.008838      -99.990244
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:53:37]  --------------------------------------------------------------------------------
[07/25 20:53:37]  Iteration: 14 (0 solution, 13 counterexamples)
[07/25 20:53:37]  Generator returned sat in 0.072592 secs.
[07/25 20:53:37]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:37]  Improved gap from 0 to 100
[07/25 20:53:38]  Improved number of small numbers from 47 to 101 out of a max of 101
[07/25 20:53:38]  Verifer returned sat in 0.759700 secs.
[07/25 20:53:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5780.142090   -6399.007568  6687.941895 -5780.142090    0.097900 -6399.007568        0.0  618.865479      518.865479
1   -5780.093018   -6299.007568  6687.941895 -5780.093018  618.914551 -6299.007568        0.0  518.914551      418.914551
2   -5599.007568   -6099.007568  6687.941895 -5599.007568  700.000000 -6099.007568        0.0  500.000000      500.000000
3   -5599.007568   -6051.154053  6687.941895 -5599.007568  500.000000 -6051.154053        0.0  452.146484      400.000000
4   -5599.007568   -5899.007568  6687.941895 -5599.007568  425.926758 -5899.007568        0.0  300.000000      300.000000
5   -5484.044189   -5884.093018  6687.941895 -5484.044189  414.963379 -5884.093018        0.0  400.048828      314.963379
6   -5484.044189   -5780.093018  6687.941895 -5484.044189  316.938965 -5780.093018        0.0  296.048828      214.963379
7   -5484.044189   -5599.007568  6687.941895 -5484.044189  296.000000 -5599.007568        0.0  114.963379      114.963379
8   -5299.007568   -5599.007568  6687.941895 -5299.007568  300.000000 -5599.007568        0.0  300.000000      200.000000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:38]  --------------------------------------------------------------------------------
[07/25 20:53:38]  Iteration: 15 (0 solution, 14 counterexamples)
[07/25 20:53:39]  Generator returned sat in 0.037176 secs.
[07/25 20:53:39]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:39]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/25 20:53:39]  Verifer returned sat in 0.218578 secs.
[07/25 20:53:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5780.142090   -6399.007568  6687.941895 -5780.142090    0.097900 -6399.007568        0.0  618.865479      518.865479
1   -5780.093018   -6299.007568  6687.941895 -5780.093018  618.914551 -6299.007568        0.0  518.914551      418.914551
2   -5599.007568   -6105.674805  6687.941895 -5599.007568  700.000000 -6105.674805        0.0  506.667236      500.000000
3   -5599.007568   -6050.820312  6687.941895 -5599.007568  506.667236 -6050.820312        0.0  451.812744      400.000000
4   -5599.007568   -5899.007568  6687.941895 -5599.007568  428.927246 -5899.007568        0.0  300.000000      300.000000
5   -5483.043945   -5884.093018  6687.941895 -5483.043945  415.963623 -5884.093018        0.0  401.049072      315.963623
6   -5483.043945   -5780.093018  6687.941895 -5483.043945  320.272705 -5780.093018        0.0  297.049072      215.963623
7   -5483.043945   -5599.007568  6687.941895 -5483.043945  297.000000 -5599.007568        0.0  115.963623      115.963623
8   -5299.007568   -5599.007568  6687.941895 -5299.007568  300.000000 -5599.007568        0.0  300.000000      200.000000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:39]  --------------------------------------------------------------------------------
[07/25 20:53:39]  Iteration: 16 (0 solution, 15 counterexamples)
[07/25 20:53:40]  Generator returned sat in 0.073860 secs.
[07/25 20:53:40]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:40]  Improved number of small numbers from 90 to 100 out of a max of 100
[07/25 20:53:40]  Verifer returned sat in 0.172751 secs.
[07/25 20:53:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5783.142090   -6399.007568  6687.94165 -5783.142090    0.097900 -6399.007568        0.0  615.865479      515.865723
1   -5780.093018   -6299.007812  6687.94165 -5780.093018  618.914551 -6299.007812        0.0  518.914795      418.914795
2   -5599.007812   -6120.707275  6687.94165 -5599.007812  700.000000 -6120.707275        0.0  521.699463      500.000000
3   -5599.007812   -6056.803955  6687.94165 -5599.007812  521.650879 -6056.803955        0.0  457.796143      400.000000
4   -5599.007812   -5899.007812  6687.94165 -5599.007812  431.927246 -5899.007812        0.0  300.000000      300.000000
5   -5483.044189   -5884.093262  6687.94165 -5483.044189  415.963623 -5884.093262        0.0  401.049072      315.963623
6   -5483.044189   -5783.092773  6687.94165 -5483.044189  326.288818 -5783.092773        0.0  300.048584      215.963623
7   -5483.044189   -5599.007812  6687.94165 -5483.044189  300.000000 -5599.007812        0.0  115.963623      115.963623
8   -5299.007812   -5599.007812  6687.94165 -5299.007812  300.000000 -5599.007812        0.0  300.000000      200.000000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:40]  --------------------------------------------------------------------------------
[07/25 20:53:40]  Iteration: 17 (0 solution, 16 counterexamples)
[07/25 20:53:41]  Generator returned sat in 0.264215 secs.
[07/25 20:53:41]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:41]  Improved number of small numbers from 94 to 100 out of a max of 100
[07/25 20:53:41]  Verifer returned sat in 0.184225 secs.
[07/25 20:53:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5599.008057   -6399.007812  6687.94165 -5599.008057    0.097656 -6399.007812        0.0  799.999756      699.999756
1   -5599.007812   -6299.007812  6687.94165 -5599.007812  800.000000 -6299.007812        0.0  700.000000      600.000000
2   -5599.007812   -6116.374268  6687.94165 -5599.007812  699.999756 -6116.374268        0.0  517.366455      500.000000
3   -5599.007812   -6055.470703  6687.94165 -5599.007812  517.317383 -6055.470703        0.0  456.462891      400.000000
4   -5599.007812   -5899.007812  6687.94165 -5599.007812  430.927246 -5899.007812        0.0  300.000000      300.000000
5   -5483.044189   -5884.093262  6687.94165 -5483.044189  415.963623 -5884.093262        0.0  401.049072      315.963623
6   -5483.044189   -5783.093018  6687.94165 -5483.044189  324.622314 -5783.093018        0.0  300.048828      215.963623
7   -5483.044189   -5599.007812  6687.94165 -5483.044189  299.000000 -5599.007812        0.0  115.963623      115.963623
8   -5299.007812   -5599.007812  6687.94165 -5299.007812  300.000000 -5599.007812        0.0  300.000000      200.000000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:42]  --------------------------------------------------------------------------------
[07/25 20:53:42]  Iteration: 18 (0 solution, 17 counterexamples)
[07/25 20:53:42]  Generator returned sat in 0.219315 secs.
[07/25 20:53:42]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:42]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/25 20:53:42]  Verifer returned sat in 0.137938 secs.
[07/25 20:53:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5699.007812   -6399.007812  6687.94165 -5699.007812    0.097656 -6399.007812        0.0  700.000000      600.000000
1   -5698.958984   -6299.007812  6687.94165 -5698.958984  700.048828 -6299.007812        0.0  600.048828      500.048828
2   -5698.958984   -6099.032227  6687.94165 -5698.958984  600.024414 -6099.032227        0.0  400.073242      400.048828
3   -5698.958984   -6099.007812  6687.94165 -5698.958984  400.024414 -6099.007812        0.0  400.048828      300.048828
4   -5698.958984   -5899.007812  6687.94165 -5698.958984  400.024414 -5899.007812        0.0  200.048828      200.048828
5   -5498.983398   -5899.007812  6687.94165 -5498.983398  400.024414 -5899.007812        0.0  400.024414      300.024414
6   -5498.983398   -5699.007812  6687.94165 -5498.983398  400.024414 -5699.007812        0.0  200.024414      200.024414
7   -5298.983398   -5699.007812  6687.94165 -5298.983398  400.024414 -5699.007812        0.0  400.024414      300.024414
8   -5298.983398   -5599.007812  6687.94165 -5298.983398  400.024414 -5599.007812        0.0  300.024414      200.024414
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:43]  --------------------------------------------------------------------------------
[07/25 20:53:43]  Iteration: 19 (0 solution, 18 counterexamples)
[07/25 20:53:44]  Generator returned sat in 0.243061 secs.
[07/25 20:53:44]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:44]  Improved gap from 1/800 to 100
[07/25 20:53:44]  Improved number of small numbers from 65 to 101 out of a max of 101
[07/25 20:53:44]  Verifer returned sat in 0.368502 secs.
[07/25 20:53:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5748.420166   -6548.420410  6687.94165 -5748.420166    0.097412 -6548.420410        0.0  800.000244      700.000244
1   -5748.420166   -6448.420410  6687.94165 -5748.420166  799.999756 -6448.420410        0.0  700.000244      600.000244
2   -5748.420166   -6348.420410  6687.94165 -5748.420166    0.048584 -6348.420410        0.0  600.000244      500.000244
3   -5748.420166   -6248.420410  6687.94165 -5748.420166  497.195312 -6248.420410        0.0  500.000244      400.000244
4   -5748.420166   -6048.420410  6687.94165 -5748.420166  399.097656 -6048.420410        0.0  300.000244      300.000244
5   -5648.371582   -6048.420410  6687.94165 -5648.371582  400.048828 -6048.420410        0.0  400.048828      300.048828
6   -5648.371582   -5848.420410  6687.94165 -5648.371582  350.524414 -5848.420410        0.0  200.048828      200.048828
7   -5472.658203   -5748.420410  6687.94165 -5472.658203  375.762207 -5748.420410        0.0  275.762207      275.762207
8   -5410.039307   -5748.420166  6687.94165 -5410.039307  338.381104 -5748.420166        0.0  338.380859      238.381104
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:44]  --------------------------------------------------------------------------------
[07/25 20:53:44]  Iteration: 20 (0 solution, 19 counterexamples)
[07/25 20:53:45]  Generator returned sat in 0.326789 secs.
[07/25 20:53:45]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:45]  Improved gap from 0 to 0
[07/25 20:53:46]  Improved number of small numbers from 56 to 92 out of a max of 101
[07/25 20:53:46]  Verifer returned sat in 0.609335 secs.
[07/25 20:53:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6348.401611   -6348.401855  6587.923096 -6348.401611    0.097168 -6348.401855        0.0    0.000244        0.000244
1   -6248.401855   -6248.401855  6587.923096 -6248.401855  100.000000 -6248.401855        0.0    0.000000        0.000000
2   -5848.400635   -6148.401855  6587.923096 -5848.400635  400.001221 -6148.401855        0.0  300.001221      300.001221
3   -5848.400635   -6048.401855  6587.923096 -5848.400635    0.001221 -6048.401855        0.0  200.001221      200.001221
4   -5848.400635   -5948.401855  6587.923096 -5848.400635    0.010000 -5948.401855        0.0  100.001221      100.001221
5   -5848.400635   -5948.400391  6587.923096 -5848.400635    0.010000 -5948.400391        0.0   99.999756        0.001221
6   -5848.400635   -5848.401660  6687.921650 -5848.400635    0.010000 -5848.401660        0.0    0.001025       -0.000225
7   -5848.391660   -5848.400410  6787.912842 -5848.391660    0.010000 -5848.400410        0.0    0.008750       -0.000059
8   -5848.390410   -5848.391602  6787.912842 -5848.390410    0.010000 -5848.391602        0.0    0.001191      -99.998809
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:53:46]  --------------------------------------------------------------------------------
[07/25 20:53:46]  Iteration: 21 (0 solution, 20 counterexamples)
[07/25 20:53:47]  Generator returned sat in 0.081843 secs.
[07/25 20:53:47]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:53:47]  Improved gap from 1/200 to 100
[07/25 20:53:48]  Improved number of small numbers from 58 to 66 out of a max of 101
[07/25 20:53:48]  Verifer returned sat in 0.720064 secs.
[07/25 20:53:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t
0   -6448.904297   -6548.901855  6788.4229 -6448.904297     0.097168 -6548.901855        0.0    99.997559       99.997363
1   -6289.904297   -6448.901660  6788.4229 -6289.904297   258.997559 -6448.901660        0.0   158.997363      158.997363
2   -6289.901660   -6448.901660  6788.4229 -6289.901660   159.000000 -6448.901660        0.0   159.000000       59.000000
3   -6148.909160   -6289.901660  6788.4229 -6148.909160   299.992500 -6289.901660        0.0   140.992500       99.992500
4   -6148.909160   -6148.911660  6788.4229 -6148.909160     0.010000 -6148.911660        0.0     0.002500       -0.007500
5   -6148.901660   -6148.901660  6788.4229 -6148.901660     0.010000 -6148.901660        0.0     0.000000     -100.000000
6   -5848.386660   -5948.901660  6788.4229 -5848.386660   300.515000 -5948.901660        0.0   100.515000      100.515000
7   -5156.629160   -5948.901660  6788.4229 -5156.629160   792.272500 -5948.901660        0.0   792.272500      692.272500
8   -4559.982910   -5848.384033  6788.4229 -4559.982910  1388.918750 -5848.384033        0.0  1288.401123     1188.918750
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:53:48]  --------------------------------------------------------------------------------
[07/25 20:53:48]  Iteration: 22 (0 solution, 21 counterexamples)
[07/25 20:53:49]  Generator returned sat in 0.252938 secs.
[07/25 20:53:49]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:49]  Improved gap from 1/800 to 1.5625
[07/25 20:53:49]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/25 20:53:49]  Verifer returned sat in 0.433043 secs.
[07/25 20:53:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5654.899170   -5954.899170  6788.422852 -5654.899170    0.097168 -5954.899170        0.0  300.000000      200.000000
1   -5454.900391   -5754.899170  6788.422852 -5454.900391  499.998779 -5754.899170        0.0  299.998779      299.998779
2   -5354.900635   -5754.898193  6788.422852 -5354.900635  399.998535 -5754.898193        0.0  399.997559      299.998535
3   -5352.898193   -5654.899170  6788.422852 -5352.898193  402.000000 -5654.899170        0.0  302.000977      202.000977
4   -5352.898193   -5454.899414  6788.422852 -5352.898193    2.000000 -5454.899414        0.0  102.001221      102.000977
5   -5352.898193   -5354.900635  6788.422852 -5352.898193    0.010000 -5354.900635        0.0    2.002441        2.000977
6   -5352.898193   -5354.899170  6886.421875 -5352.898193    2.000000 -5354.899170        0.0    2.000977        0.000000
7   -5352.898193   -5352.898193  6984.859375 -5352.898193    2.000000 -5352.898193        0.0    0.000000       -1.562500
8   -5350.898193   -5351.335449  6984.859375 -5350.898193    2.000000 -5351.335449        0.0    0.437256      -99.562500
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:53:50]  --------------------------------------------------------------------------------
[07/25 20:53:50]  Iteration: 23 (0 solution, 22 counterexamples)
[07/25 20:53:50]  Generator returned sat in 0.140448 secs.
[07/25 20:53:50]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:51]  Improved gap from 0 to 23.4375
[07/25 20:53:51]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/25 20:53:51]  Verifer returned sat in 0.731082 secs.
[07/25 20:53:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4608.096924   -5034.409424  5941.495605 -4608.096924    0.097168 -5034.409424        0.0  426.312500      399.875000
1   -4608.034424   -5007.971680  5941.495605 -4608.034424  426.375000 -5007.971680        0.0  399.937256      299.937500
2   -4581.659180   -4807.971924  5941.495605 -4581.659180  426.312500 -4807.971924        0.0  226.312744      226.312744
3   -4581.596924   -4807.971924  5941.495605 -4581.596924  226.375000 -4807.971924        0.0  226.375000      126.375000
4   -4581.534424   -4608.034424  5941.495605 -4581.534424  226.437500 -4608.034424        0.0   26.500000       26.437500
5   -4581.534424   -4607.971680  6015.058105 -4581.534424    2.000000 -4607.971680        0.0   26.437256        0.000000
6   -4581.534424   -4581.534424  6091.620361 -4581.534424    2.000000 -4581.534424        0.0    0.000000      -23.437744
7   -4355.096924   -4458.159424  6091.620361 -4355.096924  226.437500 -4458.159424        0.0  103.062500      102.999756
8   -4308.284424   -4458.096680  6091.620361 -4308.284424  149.875000 -4458.096680        0.0  149.812256       49.812256
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:52]  --------------------------------------------------------------------------------
[07/25 20:53:52]  Iteration: 24 (0 solution, 23 counterexamples)
[07/25 20:53:52]  Generator returned sat in 0.093629 secs.
[07/25 20:53:52]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:52]  Improved gap from 0 to 100
[07/25 20:53:52]  Improved number of small numbers from 91 to 101 out of a max of 101
[07/25 20:53:52]  Verifer returned sat in 0.307519 secs.
[07/25 20:53:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4508.083008   -4908.034668  6391.582764 -4508.083008     0.096924 -4908.034668        0.0  399.951660      399.951416
1   -4508.083008   -4808.034424  6391.582764 -4508.083008   399.951172 -4808.034424        0.0  299.951416      299.951416
2   -4508.083008   -4708.034424  6391.582764 -4508.083008   299.951172 -4708.034424        0.0  199.951416      199.951416
3   -4507.985840   -4608.034424  6391.582764 -4507.985840   200.048584 -4608.034424        0.0  100.048584      100.048584
4   -4507.985840   -4608.034424  6391.582764 -4507.985840     2.000000 -4608.034424        0.0  100.048584        0.048584
5   -4507.985840   -4508.034424  6391.582764 -4507.985840     2.000000 -4508.034424        0.0    0.048584      -99.951416
6   -4305.034424   -4399.034424  6391.582764 -4305.034424   203.000000 -4399.034424        0.0   94.000000        3.000000
7   -3885.534424   -4304.985840  6391.582764 -3885.534424   513.500000 -4304.985840        0.0  419.451416      322.500000
8   -3231.687256   -4208.034424  6391.582764 -3231.687256  1073.298584 -4208.034424        0.0  976.347168      876.347168
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:53:53]  --------------------------------------------------------------------------------
[07/25 20:53:53]  Iteration: 25 (0 solution, 24 counterexamples)
[07/25 20:53:54]  Generator returned sat in 0.188480 secs.
[07/25 20:53:54]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:54]  Improved gap from 397/8192 to 100
[07/25 20:53:54]  Improved number of small numbers from 54 to 101 out of a max of 101
[07/25 20:53:54]  Verifer returned sat in 0.377761 secs.
[07/25 20:53:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4625.368652   -4625.417480  6108.868652 -4625.368652     0.096924 -4625.417480        0.0    0.048828       -0.048340
1   -4425.271973   -4625.320312  6108.868652 -4425.271973   200.145508 -4625.320312        0.0  200.048340      100.048340
2   -4425.271973   -4425.320312  6108.868652 -4425.271973   199.999756 -4425.320312        0.0    0.048340        0.048340
3   -4125.320312   -4375.368896  6108.868652 -4125.320312   300.000000 -4375.368896        0.0  250.048584      200.000000
4   -3925.368896   -4325.320312  6108.868652 -3925.368896   450.000000 -4325.320312        0.0  399.951416      299.951416
5   -3650.320312   -4225.320312  6108.868652 -3650.320312   675.000000 -4225.320312        0.0  575.000000      475.000000
6   -3212.820312   -4125.320312  6108.868652 -3212.820312  1012.500000 -4125.320312        0.0  912.500000      812.500000
7   -3212.820312   -3925.320557  6108.868652 -3212.820312     1.500000 -3925.320557        0.0  712.500244      712.500000
8   -3212.820312   -3825.320557  6108.868652 -3212.820312     2.250000 -3825.320557        0.0  612.500244      612.500000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:53:55]  --------------------------------------------------------------------------------
[07/25 20:53:55]  Iteration: 26 (0 solution, 25 counterexamples)
[07/25 20:53:56]  Generator returned sat in 0.989771 secs.
[07/25 20:53:56]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:56]  Improved gap from 0 to 0
[07/25 20:53:56]  Improved number of small numbers from 96 to 101 out of a max of 101
[07/25 20:53:56]  Verifer returned sat in 0.253655 secs.
[07/25 20:53:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4425.335205   -4525.333008  6108.868408 -4425.335205    0.096924 -4525.333008        0.0   99.997803       99.997559
1   -4125.335449   -4425.332764  6108.868408 -4125.335449  399.997559 -4425.332764        0.0  299.997314      299.997314
2   -4125.320312   -4325.332812  6108.868408 -4125.320312  300.012451 -4325.332812        0.0  200.012500      200.012451
3   -4125.320312   -4225.332764  6108.868408 -4125.320312  200.012451 -4225.332764        0.0  100.012451      100.012451
4   -4125.320312   -4225.332764  6108.868408 -4125.320312    0.010000 -4225.332764        0.0  100.012451        0.012451
5   -4125.320312   -4125.332764  6208.855957 -4125.320312    0.010000 -4125.332764        0.0    0.012451        0.000000
6   -4125.320312   -4125.320312  6308.855957 -4125.320312    0.010000 -4125.320312        0.0    0.000000        0.000000
7   -4124.820312   -4124.833008  6408.355957 -4124.820312    0.500000 -4124.833008        0.0    0.012695        0.000000
8   -4124.820312   -4124.820312  6408.355957 -4124.820312    0.010000 -4124.820312        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:53:57]  --------------------------------------------------------------------------------
[07/25 20:53:57]  Iteration: 27 (0 solution, 26 counterexamples)
[07/25 20:53:58]  Generator returned sat in 0.074474 secs.
[07/25 20:53:58]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:53:58]  Improved gap from 0 to 1.5625
[07/25 20:53:58]  Improved number of small numbers from 62 to 101 out of a max of 101
[07/25 20:53:58]  Verifer returned sat in 0.497467 secs.
[07/25 20:53:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4560.054199   -5106.783936  6108.868164 -4560.054199    0.096924 -5106.783936        0.0  546.729736      546.729736
1   -4560.005859   -5006.783936  6108.868164 -4560.005859  546.778076 -5006.783936        0.0  446.778076      446.778076
2   -4560.005859   -4906.783936  6108.868164 -4560.005859    0.048584 -4906.783936        0.0  346.778076      346.778076
3   -4558.443604   -4806.784180  6108.868164 -4558.443604  348.340332 -4806.784180        0.0  248.340576      248.340332
4   -4558.443604   -4706.832275  6108.868164 -4558.443604    2.000000 -4706.832275        0.0  148.388672      148.340332
5   -4558.443604   -4706.783936  6108.868164 -4558.443604    2.000000 -4706.783936        0.0  148.340332       48.340332
6   -4558.443604   -4560.006104  6160.527832 -4558.443604    2.000000 -4560.006104        0.0    1.562500        0.000000
7   -4558.006104   -4558.443604  6258.965088 -4558.006104    2.000000 -4558.443604        0.0    0.437500       -1.125244
8   -4556.443604   -4556.880859  6258.965088 -4556.443604    2.000000 -4556.880859        0.0    0.437256      -99.562744
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:53:59]  --------------------------------------------------------------------------------
[07/25 20:53:59]  Iteration: 28 (0 solution, 27 counterexamples)
[07/25 20:54:00]  Generator returned sat in 0.423043 secs.
[07/25 20:54:00]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:54:00]  Improved gap from 1 to 100
[07/25 20:54:00]  Improved number of small numbers from 66 to 93 out of a max of 101
[07/25 20:54:00]  Verifer returned sat in 0.709734 secs.
[07/25 20:54:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4560.006104   -4914.450195  6108.868164 -4560.006104    0.096924 -4914.450195        0.0  354.444092      254.444336
1   -4560.005859   -4777.880615  6108.868164 -4560.005859  354.444336 -4777.880615        0.0  217.874756      154.444580
2   -4560.005859   -4714.450195  6108.868164 -4560.005859    0.048340 -4714.450195        0.0  154.444336       54.444580
3   -4514.450195   -4560.005859  6108.868164 -4514.450195  200.000000 -4560.005859        0.0   45.555664        0.000244
4   -4381.783691   -4514.450439  6108.868164 -4381.783691  178.222168 -4514.450439        0.0  132.666748       32.666748
5   -4381.735352   -4381.783691  6108.868164 -4381.735352  132.715088 -4381.783691        0.0    0.048340      -67.284912
6   -4214.450439   -4311.637854  6108.868164 -4214.450439  167.333252 -4311.637854        0.0   97.187414        0.000000
7   -3814.401842   -4214.450439  6108.868164 -3814.401842  497.236012 -4214.450439        0.0  400.048598      300.048598
8   -3814.401842   -4014.450439  6108.868164 -3814.401842  151.000000 -4014.450439        0.0  200.048598      200.048598
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:54:01]  --------------------------------------------------------------------------------
[07/25 20:54:01]  Iteration: 29 (0 solution, 28 counterexamples)
[07/25 20:54:02]  Generator returned sat in 0.581864 secs.
[07/25 20:54:02]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:54:02]  Improved gap from 0 to 48.4375
[07/25 20:54:02]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/25 20:54:02]  Verifer returned sat in 0.419643 secs.
[07/25 20:54:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4597.485596   -4597.488037  5891.903320 -4597.485596    0.096924 -4597.488037        0.0    0.002441       -0.000244
1   -4597.485352   -4597.485352  5943.465820 -4597.485352    0.002686 -4597.485352        0.0    0.000000      -48.437500
2   -4249.047852   -4450.157715  5943.465820 -4249.047852  348.437500 -4450.157715        0.0  201.109863      200.000000
3   -4195.927734   -4387.677734  5943.465820 -4195.927734  254.229980 -4387.677734        0.0  191.750000      153.120117
4   -4195.927734   -4249.050293  5943.465820 -4195.927734    0.010000 -4249.050293        0.0   53.122559       53.120117
5   -4195.927734   -4249.047852  5990.345703 -4195.927734    0.010000 -4249.047852        0.0   53.120117        0.000000
6   -4147.492920   -4195.927734  6041.908203 -4147.492920  101.554932 -4195.927734        0.0   48.434814       -0.002686
7   -4099.052734   -4147.490234  6093.470703 -4099.052734   96.875000 -4147.490234        0.0   48.437500        0.000000
8   -4099.052734   -4099.052734  6093.470947 -4099.052734    0.010000 -4099.052734        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:03]  --------------------------------------------------------------------------------
[07/25 20:54:03]  Iteration: 30 (0 solution, 29 counterexamples)
[07/25 20:54:04]  Generator returned sat in 0.300228 secs.
[07/25 20:54:04]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:54:05]  Improved gap from 2073/204800 to 17.1875
[07/25 20:54:05]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/25 20:54:05]  Verifer returned sat in 0.988357 secs.
[07/25 20:54:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1869.116455   -2069.116699  2857.427246 -1869.116455    0.096924 -2069.116699        0.0  200.000244      200.000244
1   -1669.116699   -2069.116699  2857.427246 -1669.116699  400.000000 -2069.116699        0.0  400.000000      300.000000
2   -1536.352783   -1969.116699  2857.427246 -1536.352783  532.763916 -1969.116699        0.0  432.763916      332.763916
3   -1536.352783   -1869.116455  2857.427246 -1536.352783  426.000000 -1869.116455        0.0  332.763672      232.763916
4   -1536.352783   -1669.116699  2857.427246 -1536.352783  215.000000 -1669.116699        0.0  132.763916      132.763916
5   -1536.352783   -1593.151123  2857.427246 -1536.352783  109.500000 -1593.151123        0.0   56.798340       32.763916
6   -1536.352783   -1553.540283  2924.663330 -1536.352783   56.750000 -1553.540283        0.0   17.187500        0.000000
7   -1523.165283   -1536.352783  3007.475830 -1523.165283   30.375000 -1536.352783        0.0   13.187500       -4.000000
8   -1519.165283   -1519.165283  3007.475830 -1519.165283   17.187500 -1519.165283        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:05]  --------------------------------------------------------------------------------
[07/25 20:54:05]  Iteration: 31 (0 solution, 30 counterexamples)
[07/25 20:54:06]  Generator returned sat in 0.115046 secs.
[07/25 20:54:06]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:54:06]  Improved gap from 0 to 48.4375
[07/25 20:54:07]  Improved number of small numbers from 61 to 101 out of a max of 101
[07/25 20:54:07]  Verifer returned sat in 0.491574 secs.
[07/25 20:54:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -992.288574   -1341.605957  2857.427246  -992.288574    0.096680 -1341.605957        0.0  349.317383      249.317627
1    -841.611084   -1141.606201  2857.427246  -841.611084  499.994873 -1141.606201        0.0  299.995117      299.995117
2    -793.173584   -1041.606201  2857.427246  -793.173584  348.432617 -1041.606201        0.0  248.432617      248.432617
3    -793.168701    -992.283447  2857.427246  -793.168701  248.437500  -992.283447        0.0  199.114746      148.437500
4    -793.168701    -841.606201  2857.427246  -793.168701    0.010000  -841.606201        0.0   48.437500       48.437500
5    -793.168701    -841.606201  2908.989746  -793.168701    0.010000  -841.606201        0.0   48.437500        0.000000
6    -793.168701    -793.168701  2955.869873  -793.168701    0.010000  -793.168701        0.0    0.000000      -53.119873
7    -691.611328    -740.048828  3007.432373  -691.611328  101.557373  -740.048828        0.0   48.437500        0.000000
8    -691.611328    -691.611328  3007.432373  -691.611328    0.010000  -691.611328        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:07]  --------------------------------------------------------------------------------
[07/25 20:54:07]  Iteration: 32 (0 solution, 31 counterexamples)
[07/25 20:54:09]  Generator returned sat in 1.293326 secs.
[07/25 20:54:09]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:54:10]  Improved gap from 0 to 100
[07/25 20:54:10]  Improved number of small numbers from 61 to 101 out of a max of 101
[07/25 20:54:10]  Verifer returned sat in 0.738769 secs.
[07/25 20:54:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1241.202637   -1441.106201  2856.951416 -1241.202637    0.096680 -1441.106201        0.0  199.903564       99.903809
1   -1241.106445   -1241.154541  2856.951416 -1241.106445  199.999756 -1241.154541        0.0    0.048096        0.000000
2   -1041.154541   -1241.106445  2856.951416 -1041.154541  200.000000 -1241.106445        0.0  199.951904       99.951904
3    -907.821289   -1041.154541  2856.951416  -907.821289  333.285156 -1041.154541        0.0  133.333252      133.285156
4    -841.178711   -1041.106201  2856.951416  -841.178711  199.975830 -1041.106201        0.0  199.927490       99.927734
5    -841.178711    -907.772949  2856.951416  -841.178711  100.024170  -907.772949        0.0   66.594238       -0.072266
6    -741.106201    -841.106201  2856.951416  -741.106201  166.666748  -841.106201        0.0  100.000000        0.000244
7    -640.557861    -641.332031  2856.951416  -640.557861  200.548340  -641.332031        0.0    0.774170        0.548584
8    -241.057861    -641.106201  2856.951416  -241.057861  400.274170  -641.106201        0.0  400.048340      300.048584
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:54:10]  --------------------------------------------------------------------------------
[07/25 20:54:10]  Iteration: 33 (0 solution, 32 counterexamples)
[07/25 20:54:12]  Generator returned sat in 0.713130 secs.
[07/25 20:54:12]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 20:54:12]  Improved gap from 0 to 100
[07/25 20:54:13]  Improved number of small numbers from 60 to 70 out of a max of 101
[07/25 20:54:13]  Verifer returned sat in 0.639266 secs.
[07/25 20:54:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1751.562744   -1851.560303  3367.405166 -1751.562744     0.096680 -1851.560303        0.0   99.997559       99.997451
1   -1751.557861   -1751.560195  3367.405166 -1751.557861   100.002441 -1751.560195        0.0    0.002334        0.002334
2   -1551.562695   -1651.560195  3367.405166 -1551.562695   199.997500 -1651.560195        0.0   99.997500       99.997500
3   -1551.562695   -1551.570195  3367.405166 -1551.562695    99.997314 -1551.570195        0.0    0.007500       -0.002500
4   -1551.560195   -1551.560195  3367.405166 -1551.560195     0.010000 -1551.560195        0.0    0.000000     -100.000000
5   -1350.545195   -1361.560195  3367.405166 -1350.545195   201.015000 -1361.560195        0.0   11.015000        1.015000
6    -769.037695   -1350.542695  3367.405166  -769.037695   592.522500 -1350.542695        0.0  581.505000      482.522500
7    -259.731445   -1151.560303  3367.405166  -259.731445  1090.811250 -1151.560303        0.0  891.828857      891.828750
8    -259.731445   -1051.560303  3367.405166  -259.731445     0.010000 -1051.560303        0.0  791.828857      791.828750
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:54:13]  --------------------------------------------------------------------------------
[07/25 20:54:13]  Iteration: 34 (0 solution, 33 counterexamples)
[07/25 20:54:14]  Generator returned sat in 0.230029 secs.
[07/25 20:54:14]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:54:14]  Improved number of small numbers from 55 to 100 out of a max of 100
[07/25 20:54:14]  Verifer returned sat in 0.261238 secs.
[07/25 20:54:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1952.060303   -2252.057617  3667.902588 -1952.060303    0.096436 -2252.057617        0.0  299.997314      199.997314
1   -1952.060303   -2052.057861  3667.902588 -1952.060303  299.997314 -2052.057861        0.0   99.997559       99.997314
2   -1852.057861   -1952.057617  3667.902588 -1852.057861  200.000000 -1952.057617        0.0   99.999756       99.999756
3   -1852.057861   -1952.057617  3667.902832 -1852.057861   99.000000 -1952.057617        0.0   99.999756        0.000000
4   -1652.057617   -1752.057861  3667.902832 -1652.057617  300.000000 -1752.057861        0.0  100.000244      100.000244
5   -1150.557861   -1652.057861  3667.902832 -1150.557861  601.500000 -1652.057861        0.0  501.500000      501.500000
6   -1150.557861   -1652.057617  3667.902832 -1150.557861    0.010000 -1652.057617        0.0  501.499756      401.500000
7   -1150.557861   -1552.057617  3667.902832 -1150.557861    0.010000 -1552.057617        0.0  401.499756      301.500000
8   -1150.557861   -1452.057617  3667.902832 -1150.557861    0.010000 -1452.057617        0.0  301.499756      201.500000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:54:15]  --------------------------------------------------------------------------------
[07/25 20:54:15]  Iteration: 35 (0 solution, 34 counterexamples)
[07/25 20:54:16]  Generator returned sat in 0.202093 secs.
[07/25 20:54:16]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:54:16]  Improved gap from 1/600 to 48.4375
[07/25 20:54:17]  Improved number of small numbers from 60 to 69 out of a max of 101
[07/25 20:54:17]  Verifer returned sat in 0.835634 secs.
[07/25 20:54:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1086.382080   -1300.442895  3667.902832 -1086.382080    0.096191 -1300.442895        0.0  214.060815      199.998315
1   -1086.382080   -1186.380615  3667.902832 -1086.382080  214.060791 -1186.380615        0.0   99.998535       99.998315
2   -1086.378906   -1086.380395  3667.902832 -1086.378906  100.001709 -1086.380395        0.0    0.001489        0.001489
3    -886.382062   -1025.402339  3667.902832  -886.382062  199.998333 -1025.402339        0.0  139.020278       99.998333
4    -886.382062    -886.383728  3667.902832  -886.382062  139.020278  -886.383728        0.0    0.001667       -0.001667
5    -886.373728    -886.380395  3719.465332  -886.373728    0.010000  -886.380395        0.0    0.006667      -48.430833
6    -784.880395    -833.724376  3766.402832  -784.880395  101.500000  -833.724376        0.0   48.843981        0.000000
7    -736.385395    -784.880395  3817.907832  -736.385395   97.338981  -784.880395        0.0   48.495000        0.000000
8    -736.385395    -736.385395  3817.907959  -736.385395    0.010000  -736.385395        0.0    0.000000      -99.999873
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:17]  --------------------------------------------------------------------------------
[07/25 20:54:17]  Iteration: 36 (0 solution, 35 counterexamples)
[07/25 20:54:19]  Generator returned sat in 0.687730 secs.
[07/25 20:54:19]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:54:19]  Improved gap from 0 to 14.0625
[07/25 20:54:20]  Improved number of small numbers from 59 to 101 out of a max of 101
[07/25 20:54:20]  Verifer returned sat in 0.870867 secs.
[07/25 20:54:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -552.835449   -1052.787354  3667.902832  -552.835449    0.096191 -1052.787354        0.0  499.951904      399.951904
1    -552.787598    -852.787354  3667.902832  -552.787598  499.999756  -852.787354        0.0  299.999756      299.999756
2    -425.614502    -852.787354  3667.902832  -425.614502  427.172852  -852.787354        0.0  427.172852      327.172852
3    -425.614502    -752.787354  3667.902832  -425.614502  419.000000  -752.787354        0.0  327.172852      227.172852
4    -425.614502    -552.787598  3667.902832  -425.614502  210.000000  -552.787598        0.0  127.173096      127.172852
5    -425.614502    -478.912354  3667.902832  -425.614502  105.500000  -478.912354        0.0   53.297852       27.172852
6    -425.614502    -452.787354  3740.729980  -425.614502   53.250000  -452.787354        0.0   27.172852        0.000000
7    -425.614502    -425.614502  3826.667480  -425.614502   27.125000  -425.614502        0.0    0.000000      -14.062500
8    -411.552002    -411.552002  3826.667480  -411.552002   14.062500  -411.552002        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:20]  --------------------------------------------------------------------------------
[07/25 20:54:20]  Iteration: 37 (0 solution, 36 counterexamples)
[07/25 20:54:21]  Generator returned sat in 0.230337 secs.
[07/25 20:54:21]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:54:22]  Improved gap from 1/800 to 17.1875
[07/25 20:54:22]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 20:54:22]  Verifer returned sat in 0.754641 secs.
[07/25 20:54:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -426.465576   -1026.417725  3667.902832  -426.465576    0.096191 -1026.417725        0.0  599.952148      499.952148
1    -426.465576    -926.417725  3667.902832  -426.465576    0.047852  -926.417725        0.0  499.952148      399.952148
2    -395.994873    -826.417725  3667.902832  -395.994873  530.422852  -826.417725        0.0  430.422852      330.422852
3    -395.994873    -626.417725  3667.902832  -395.994873  426.000000  -626.417725        0.0  230.422852      230.422852
4    -395.994873    -526.417725  3667.902832  -395.994873  215.000000  -526.417725        0.0  130.422852      130.422852
5    -395.994873    -526.417725  3667.902832  -395.994873  109.500000  -526.417725        0.0  130.422852       30.422852
6    -395.994873    -426.417725  3737.479980  -395.994873   56.750000  -426.417725        0.0   30.422852        0.000000
7    -395.994873    -395.994873  3820.292480  -395.994873   30.375000  -395.994873        0.0    0.000000      -17.187500
8    -378.807373    -378.807373  3820.292480  -378.807373   17.187500  -378.807373        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:22]  --------------------------------------------------------------------------------
[07/25 20:54:22]  Iteration: 38 (0 solution, 37 counterexamples)
[07/25 20:54:23]  Generator returned sat in 0.200707 secs.
[07/25 20:54:23]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:54:24]  Improved gap from 3779781/262144 to 14.0625
[07/25 20:54:24]  Improved number of small numbers from 54 to 101 out of a max of 101
[07/25 20:54:24]  Verifer returned sat in 0.938818 secs.
[07/25 20:54:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    1254.628906     672.084229  3552.142822  1254.628906    0.095947   672.084229        0.0  582.544678      482.544678
1    1254.676270     872.084229  3552.142822  1254.676270  582.592041   872.084229        0.0  382.592041      382.592041
2    1307.974121     872.084473  3552.142822  1307.974121  435.889893   872.084473        0.0  435.889648      335.889893
3    1307.974121     972.084229  3552.142822  1307.974121  419.000000   972.084229        0.0  335.889893      235.889893
4    1307.974121    1172.084229  3552.142822  1307.974121  210.000000  1172.084229        0.0  135.889893      135.889893
5    1307.974121    1254.676270  3552.142822  1307.974121  105.500000  1254.676270        0.0   53.297852       35.889893
6    1307.974121    1280.801270  3616.252930  1307.974121   53.250000  1280.801270        0.0   27.172852        0.000000
7    1307.974121    1307.974121  3702.190430  1307.974121   27.125000  1307.974121        0.0    0.000000      -14.062500
8    1322.036621    1322.036621  3702.190430  1322.036621   14.062500  1322.036621        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:25]  --------------------------------------------------------------------------------
[07/25 20:54:25]  Iteration: 39 (0 solution, 38 counterexamples)
[07/25 20:54:26]  Generator returned sat in 0.222301 secs.
[07/25 20:54:26]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:54:27]  Improved gap from 255/16 to 15.625
[07/25 20:54:27]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/25 20:54:27]  Verifer returned sat in 1.072674 secs.
[07/25 20:54:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1273.620605   -1835.650391  6143.800049 -1273.620605    0.095947 -1835.650391        0.0  562.029785      462.029785
1   -1235.697998   -1635.650391  6143.800049 -1235.697998  599.952393 -1635.650391        0.0  399.952393      399.952393
2   -1220.025391   -1635.650391  6143.800049 -1220.025391  415.625000 -1635.650391        0.0  415.625000      315.625000
3   -1220.025391   -1435.650635  6143.800049 -1220.025391  407.000000 -1435.650635        0.0  215.625244      215.625000
4   -1220.025391   -1335.650391  6143.800049 -1220.025391  205.000000 -1335.650391        0.0  115.625000      115.625000
5   -1220.025391   -1273.573242  6143.800049 -1220.025391  104.000000 -1273.573242        0.0   53.547852       15.625000
6   -1220.025391   -1235.650391  6228.175049 -1220.025391   53.500000 -1235.650391        0.0   15.625000        0.000000
7   -1207.400391   -1220.025391  6312.550049 -1207.400391   28.250000 -1220.025391        0.0   12.625000       -3.000000
8   -1204.400391   -1204.400391  6312.550049 -1204.400391   15.625000 -1204.400391        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:27]  --------------------------------------------------------------------------------
[07/25 20:54:27]  Iteration: 40 (0 solution, 39 counterexamples)
[07/25 20:54:29]  Generator returned sat in 0.215641 secs.
[07/25 20:54:29]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:54:29]  Improved gap from 48763/4096 to 14.0625
[07/25 20:54:30]  Improved number of small numbers from 79 to 101 out of a max of 101
[07/25 20:54:30]  Verifer returned sat in 0.893688 secs.
[07/25 20:54:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1775.060547   -2350.887939  6143.800049 -1775.060547    0.095947 -2350.887939        0.0  575.827393      475.827393
1   -1750.935303   -2150.887939  6143.800049 -1750.935303  599.952637 -2150.887939        0.0  399.952637      399.952637
2   -1724.715576   -2150.887939  6143.800049 -1724.715576  426.172363 -2150.887939        0.0  426.172363      326.172363
3   -1724.715576   -1950.887939  6143.800049 -1724.715576  388.000000 -1950.887939        0.0  226.172363      226.172363
4   -1724.715576   -1860.605469  6143.800049 -1724.715576  195.000000 -1860.605469        0.0  135.889893      126.172363
5   -1724.715576   -1775.012695  6143.800049 -1724.715576   98.500000 -1775.012695        0.0   50.297119       26.172363
6   -1724.715576   -1750.887939  6217.627686 -1724.715576   50.250000 -1750.887939        0.0   26.172363        0.000000
7   -1724.715576   -1724.715576  6303.565186 -1724.715576   26.125000 -1724.715576        0.0    0.000000      -14.062500
8   -1710.653076   -1710.653076  6303.565186 -1710.653076   14.062500 -1710.653076        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:30]  --------------------------------------------------------------------------------
[07/25 20:54:30]  Iteration: 41 (0 solution, 40 counterexamples)
[07/25 20:54:32]  Generator returned sat in 0.713011 secs.
[07/25 20:54:32]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:54:32]  Improved gap from 0 to 100
[07/25 20:54:32]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 20:54:32]  Verifer returned sat in 0.268331 secs.
[07/25 20:54:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2479.220703   -2779.210449  6303.565186 -2479.220703    0.095947 -2779.210449        0.0  299.989746      199.989990
1   -2479.210693   -2579.210693  6303.565186 -2479.210693  299.999756 -2579.210693        0.0  100.000000      100.000000
2   -2279.220459   -2579.210449  6303.565186 -2279.220459  299.990234 -2579.210449        0.0  299.989990      199.990234
3   -2079.210449   -2479.210693  6303.565186 -2079.210449  500.000000 -2479.210693        0.0  400.000244      300.000244
4   -1978.710693   -2279.210693  6303.565186 -1978.710693  500.500000 -2279.210693        0.0  300.500000      300.500000
5   -1778.210693   -2179.210693  6303.565186 -1778.210693  501.000000 -2179.210693        0.0  401.000000      401.000000
6   -1677.710693   -2079.210693  6303.565186 -1677.710693  501.500000 -2079.210693        0.0  401.500000      401.500000
7   -1677.710693   -2079.210693  6303.565186 -1677.710693    0.010000 -2079.210693        0.0  401.500000      301.500000
8   -1677.710693   -1978.700684  6303.565186 -1677.710693    0.010000 -1978.700684        0.0  300.989990      201.500000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:54:32]  --------------------------------------------------------------------------------
[07/25 20:54:32]  Iteration: 42 (0 solution, 41 counterexamples)
[07/25 20:54:34]  Generator returned sat in 0.356634 secs.
[07/25 20:54:34]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:54:34]  Improved gap from 0 to 100
[07/25 20:54:34]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 20:54:34]  Verifer returned sat in 0.245024 secs.
[07/25 20:54:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2479.305420   -2779.210693  6303.565186 -2479.305420    0.095947 -2779.210693        0.0  299.905273      199.905273
1   -2479.305420   -2679.210693  6303.565186 -2479.305420  299.905273 -2679.210693        0.0  199.905273       99.905273
2   -2479.305420   -2579.210693  6303.565186 -2479.305420  199.905273 -2579.210693        0.0   99.905273       -0.094727
3   -2181.521240   -2479.210693  6303.565186 -2181.521240  397.689453 -2479.210693        0.0  297.689453      197.689453
4   -2081.021240   -2377.994873  6303.565186 -2081.021240  398.189453 -2377.994873        0.0  296.973633      198.189453
5   -1979.305420   -2181.426514  6303.565186 -1979.305420  398.689453 -2181.426514        0.0  202.121094      199.905273
6   -1782.237061   -2080.926514  6303.565186 -1782.237061  399.189453 -2080.926514        0.0  298.689453      296.973633
7   -1681.237061   -1979.210693  6303.565186 -1681.237061  399.689453 -1979.210693        0.0  297.973633      297.973633
8   -1579.021240   -1979.115967  6303.565186 -1579.021240  400.189453 -1979.115967        0.0  400.094727      300.189453
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:54:34]  --------------------------------------------------------------------------------
[07/25 20:54:34]  Iteration: 43 (0 solution, 42 counterexamples)
[07/25 20:54:36]  Generator returned sat in 0.618438 secs.
[07/25 20:54:36]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 20:54:36]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/25 20:54:36]  Verifer returned sat in 0.130253 secs.
[07/25 20:54:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2479.305664   -2779.210693  6303.564941 -2479.305664    0.095947 -2779.210693        0.0  299.905029      199.905029
1   -2479.305664   -2679.210693  6303.564941 -2479.305664  299.905029 -2679.210693        0.0  199.905029       99.905029
2   -2479.305420   -2578.258301  6303.564941 -2479.305420  199.905273 -2578.258301        0.0   98.952881       -0.094727
3   -2181.521484   -2478.758301  6303.564941 -2181.521484  396.736816 -2478.758301        0.0  297.236816      197.689209
4   -2081.021484   -2377.994873  6303.564941 -2081.021484  397.736816 -2377.994873        0.0  296.973389      198.189209
5   -1979.258057   -2181.426514  6303.564941 -1979.258057  398.736816 -2181.426514        0.0  202.168457      199.952637
6   -1781.689697   -2080.926514  6303.564941 -1781.689697  399.736816 -2080.926514        0.0  299.236816      297.520996
7   -1680.189697   -1979.210693  6303.564941 -1680.189697  400.736816 -1979.210693        0.0  299.020996      299.020996
8   -1577.473877   -1979.115967  6303.564941 -1577.473877  401.736816 -1979.115967        0.0  401.642090      301.736816
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:54:37]  --------------------------------------------------------------------------------
[07/25 20:54:37]  Iteration: 44 (0 solution, 43 counterexamples)
[07/25 20:54:38]  Generator returned sat in 0.282240 secs.
[07/25 20:54:38]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:54:38]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/25 20:54:38]  Verifer returned sat in 0.139719 secs.
[07/25 20:54:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2479.305908   -2779.210938  6303.564941 -2479.305908    0.095947 -2779.210938        0.0  299.905029      199.905029
1   -2479.305908   -2679.210693  6303.564941 -2479.305908  299.905029 -2679.210693        0.0  199.904785       99.905029
2   -2479.305664   -2577.258545  6303.564941 -2479.305664  199.905029 -2577.258545        0.0   97.952881       -0.094727
3   -2181.521729   -2478.258301  6303.564941 -2181.521729  395.736816 -2478.258301        0.0  296.736572      197.689209
4   -2081.021484   -2377.994873  6303.564941 -2081.021484  397.236816 -2377.994873        0.0  296.973389      198.189453
5   -1979.258057   -2181.426758  6303.564941 -1979.258057  398.736816 -2181.426758        0.0  202.168701      199.952881
6   -1781.189941   -2080.926514  6303.564941 -1781.189941  400.236816 -2080.926514        0.0  299.736572      298.020996
7   -1679.189697   -1979.210938  6303.564941 -1679.189697  401.736816 -1979.210938        0.0  300.021240      300.021240
8   -1575.974121   -1979.116211  6303.564941 -1575.974121  403.236816 -1979.116211        0.0  403.142090      303.236816
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:54:39]  --------------------------------------------------------------------------------
[07/25 20:54:39]  Iteration: 45 (0 solution, 44 counterexamples)
[07/25 20:54:42]  Generator returned sat in 2.091594 secs.
[07/25 20:54:42]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:54:42]  Improved gap from 1/600 to 0
[07/25 20:54:42]  Improved number of small numbers from 79 to 99 out of a max of 101
[07/25 20:54:42]  Verifer returned sat in 0.354881 secs.
[07/25 20:54:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2377.494873   -2977.507568  6303.564697 -2377.494873    0.095703 -2977.507568        0.0  600.012695      500.012695
1   -2377.494873   -2777.507568  6303.564697 -2377.494873  600.012451 -2777.507568        0.0  400.012695      400.012695
2   -2377.494873   -2677.507568  6303.564697 -2377.494873  400.012451 -2677.507568        0.0  300.012695      300.012695
3   -2377.494873   -2577.507568  6303.564697 -2377.494873  300.012451 -2577.507568        0.0  200.012695      200.012695
4   -2377.494873   -2477.507568  6303.564697 -2377.494873    0.500000 -2477.507568        0.0  100.012695      100.012695
5   -2377.494873   -2477.504639  6303.564697 -2377.494873    0.010000 -2477.504639        0.0  100.009766        0.012695
6   -2377.494873   -2377.507324  6403.552002 -2377.494873    0.010000 -2377.507324        0.0    0.012451        0.000000
7   -2377.494873   -2377.494873  6503.542236 -2377.494873    0.010000 -2377.494873        0.0    0.000000       -0.009766
8   -2377.484873   -2377.485107  6503.542236 -2377.484873    0.010000 -2377.485107        0.0    0.000234      -99.999766
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:43]  --------------------------------------------------------------------------------
[07/25 20:54:43]  Iteration: 46 (0 solution, 45 counterexamples)
[07/25 20:54:45]  Generator returned sat in 0.889033 secs.
[07/25 20:54:45]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:54:45]  Improved gap from 1/600 to 12.5
[07/25 20:54:45]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 20:54:45]  Verifer returned sat in 0.707757 secs.
[07/25 20:54:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2902.542236   -3302.542236  6647.349365 -2902.542236    0.095703 -3302.542236        0.0  400.000000           400.0
1   -2802.542236   -3202.589600  6647.349365 -2802.542236  500.000000 -3202.589600        0.0  400.047363           400.0
2   -2802.542236   -3202.542236  6647.349365 -2802.542236    0.047363 -3202.542236        0.0  400.000000           300.0
3   -2802.542236   -3102.542236  6647.349365 -2802.542236  400.000000 -3102.542236        0.0  300.000000           200.0
4   -2802.542236   -2927.494873  6647.349365 -2802.542236  200.000000 -2927.494873        0.0  124.952637           100.0
5   -2802.542236   -2902.542236  6647.349365 -2802.542236  100.000000 -2902.542236        0.0  100.000000             0.0
6   -2802.542236   -2802.542236  6734.849365 -2802.542236   50.000000 -2802.542236        0.0    0.000000           -12.5
7   -2777.542236   -2790.042236  6822.349365 -2777.542236   25.000000 -2790.042236        0.0   12.500000             0.0
8   -2777.542236   -2777.542236  6822.349365 -2777.542236    0.500000 -2777.542236        0.0    0.000000          -100.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:46]  --------------------------------------------------------------------------------
[07/25 20:54:46]  Iteration: 47 (0 solution, 46 counterexamples)
[07/25 20:54:49]  Generator returned sat in 1.960622 secs.
[07/25 20:54:49]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:54:49]  Improved gap from 0 to 48.4375
[07/25 20:54:50]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/25 20:54:50]  Verifer returned sat in 0.699959 secs.
[07/25 20:54:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1500.443604   -1951.177734  6533.699707 -1500.443604    0.095215 -1951.177734        0.0  450.734131      450.733887
1   -1500.443604   -1951.177490  6533.699707 -1500.443604  450.733887 -1951.177490        0.0  450.733887      350.733887
2   -1500.443604   -1753.065674  6533.699707 -1500.443604    0.047119 -1753.065674        0.0  252.622070      250.733887
3   -1500.443604   -1751.177490  6533.699707 -1500.443604  202.746094 -1751.177490        0.0  250.733887      150.733887
4   -1500.443604   -1551.177490  6533.699707 -1500.443604  101.373047 -1551.177490        0.0   50.733887       50.733887
5   -1500.443604   -1551.130127  6582.965820 -1500.443604   50.686523 -1551.130127        0.0   50.686523        0.000000
6   -1449.662354   -1500.443604  6632.184570 -1449.662354  101.467773 -1500.443604        0.0   50.781250        0.000000
7   -1449.662354   -1449.662354  6683.747070 -1449.662354   50.733887 -1449.662354        0.0    0.000000      -48.437500
8   -1398.404785   -1401.224854  6683.747070 -1398.404785   51.257568 -1401.224854        0.0    2.820068      -97.179932
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:50]  --------------------------------------------------------------------------------
[07/25 20:54:50]  Iteration: 48 (0 solution, 47 counterexamples)
[07/25 20:54:51]  Generator returned sat in 0.323225 secs.
[07/25 20:54:51]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 20:54:52]  Improved gap from 767/16 to 48.4375
[07/25 20:54:52]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 20:54:52]  Verifer returned sat in 0.896263 secs.
[07/25 20:54:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3425.886475   -3825.886719  6532.403076 -3425.886475    0.094971 -3825.886719        0.0  400.000244      400.000000
1   -3425.886475   -3825.886475  6532.403076 -3425.886475    0.047119 -3825.886475        0.0  400.000000      300.000000
2   -3425.886475   -3625.886475  6532.403076 -3425.886475  399.952393 -3625.886475        0.0  200.000000      200.000000
3   -3425.886475   -3571.341064  6532.403076 -3425.886475  200.000000 -3571.341064        0.0  145.454590      100.000000
4   -3425.886475   -3425.933838  6532.403076 -3425.886475  100.000000 -3425.933838        0.0    0.047363        0.000000
5   -3375.933838   -3425.886475  6582.450439 -3375.933838   50.000000 -3425.886475        0.0   49.952637        0.000000
6   -3375.933838   -3375.933838  6634.012939 -3375.933838   25.000000 -3375.933838        0.0    0.000000      -48.437500
7   -3277.230225   -3327.496338  6683.746826 -3277.230225   98.703613 -3327.496338        0.0   50.266113        0.000000
8   -3277.230225   -3277.230225  6683.747070 -3277.230225   50.218750 -3277.230225        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:53]  --------------------------------------------------------------------------------
[07/25 20:54:53]  Iteration: 49 (0 solution, 48 counterexamples)
[07/25 20:54:54]  Generator returned sat in 0.311756 secs.
[07/25 20:54:54]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:54:55]  Improved gap from 775/16 to 48.4375
[07/25 20:54:55]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/25 20:54:55]  Verifer returned sat in 1.069469 secs.
[07/25 20:54:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3651.122070   -4199.559570  7676.539551 -3651.122070    0.094727 -4199.559570        0.0  548.437500      448.437744
1   -3651.122070   -4099.559570  7676.539551 -3651.122070  548.437256 -4099.559570        0.0  448.437500      348.437744
2   -3651.122070   -3899.559814  7676.539551 -3651.122070  448.437256 -3899.559814        0.0  248.437744      248.437744
3   -3651.122070   -3899.559814  7676.539551 -3651.122070  104.531250 -3899.559814        0.0  248.437744      148.437744
4   -3651.122070   -3699.591064  7676.539551 -3651.122070   52.265625 -3699.591064        0.0   48.468994       48.437744
5   -3651.122070   -3699.559814  7728.101807 -3651.122070   26.132812 -3699.559814        0.0   48.437744        0.000000
6   -3598.059814   -3651.122070  7775.039551 -3598.059814  101.500000 -3651.122070        0.0   53.062256        0.000000
7   -3598.059814   -3598.059814  7826.602051 -3598.059814   50.750000 -3598.059814        0.0    0.000000      -48.437500
8   -3545.794189   -3549.622314  7826.602051 -3545.794189   52.265625 -3549.622314        0.0    3.828125      -96.171875
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:54:56]  --------------------------------------------------------------------------------
[07/25 20:54:56]  Iteration: 50 (0 solution, 49 counterexamples)
[07/25 20:55:00]  Generator returned sat in 2.979961 secs.
[07/25 20:55:00]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:55:00]  Improved gap from 0 to 23.4375
[07/25 20:55:00]  Improved number of small numbers from 81 to 101 out of a max of 101
[07/25 20:55:00]  Verifer returned sat in 0.358038 secs.
[07/25 20:55:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3551.122070   -4174.559570  7750.062988 -3551.122070    0.094727 -4174.559570        0.0  623.437500      523.437500
1   -3551.122070   -4074.559570  7750.062988 -3551.122070    0.023438 -4074.559570        0.0  523.437500      423.437500
2   -3551.122070   -3874.559570  7750.062988 -3551.122070  301.500000 -3874.559570        0.0  323.437500      323.437500
3   -3551.122070   -3874.559570  7750.062988 -3551.122070    0.023438 -3874.559570        0.0  323.437500      223.437500
4   -3551.122070   -3677.660889  7750.062988 -3551.122070  300.000000 -3677.660889        0.0  126.538818      123.437500
5   -3551.122070   -3674.559570  7750.062988 -3551.122070    1.500000 -3674.559570        0.0  123.437500       23.437500
6   -3551.122070   -3574.559570  7826.625488 -3551.122070    1.500000 -3574.559570        0.0   23.437500        0.000000
7   -3551.122070   -3551.122070  7903.187988 -3551.122070    1.500000 -3551.122070        0.0    0.000000      -23.437500
8   -3424.583252   -3527.684570  7903.187988 -3424.583252  126.538818 -3527.684570        0.0  103.101318        3.101318
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:55:01]  --------------------------------------------------------------------------------
[07/25 20:55:01]  Iteration: 51 (0 solution, 50 counterexamples)
[07/25 20:55:03]  Generator returned sat in 1.113665 secs.
[07/25 20:55:03]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:55:04]  Improved gap from 193/4096 to 23.4375
[07/25 20:55:05]  Improved number of small numbers from 48 to 74 out of a max of 101
[07/25 20:55:05]  Verifer returned sat in 1.482040 secs.
[07/25 20:55:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2630.501465   -2753.939209  6429.442627 -2630.501465    0.094482 -2753.939209        0.0  123.437744      123.437744
1   -2630.501465   -2653.986084  6429.442627 -2630.501465  123.437256 -2653.986084        0.0   23.484619       23.437744
2   -2630.501465   -2653.939198  6506.004883 -2630.501465   23.484375 -2653.939198        0.0   23.437733        0.000000
3   -2304.888937   -2530.501709  6506.004883 -2304.888937  349.050260 -2530.501709        0.0  225.612772      225.612528
4   -2304.888937   -2430.501698  6506.004883 -2304.888937  176.525130 -2430.501698        0.0  125.612760      125.612528
5   -2304.888937   -2352.067383  6506.004883 -2304.888937   90.262565 -2352.067383        0.0   47.178446       25.612528
6   -2304.888937   -2330.501465  6580.392355 -2304.888937   47.131283 -2330.501465        0.0   25.612528        0.000000
7   -2304.888937   -2304.888937  6656.052246 -2304.888937   25.565641 -2304.888937        0.0    0.000000      -24.340109
8   -2179.276177   -2280.548828  6656.052246 -2179.276177  125.612760 -2280.548828        0.0  101.272651        1.272651
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:55:05]  --------------------------------------------------------------------------------
[07/25 20:55:05]  Iteration: 52 (0 solution, 51 counterexamples)
[07/25 20:55:07]  Generator returned sat in 0.332315 secs.
[07/25 20:55:07]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:55:07]  Improved gap from 193/8192 to 23.4375
[07/25 20:55:08]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 20:55:08]  Verifer returned sat in 0.850172 secs.
[07/25 20:55:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2611.577148   -2854.452148  6589.208252 -2611.577148    0.094238 -2854.452148        0.0  242.875000      200.000000
1   -2611.577148   -2811.577148  6589.208252 -2611.577148    0.047119 -2811.577148        0.0  200.000000      100.000000
2   -2611.577148   -2635.014648  6589.208252 -2611.577148  199.999756 -2635.014648        0.0   23.437500        0.000000
3   -2528.326660   -2611.577148  6605.957520 -2528.326660  106.687988 -2611.577148        0.0   83.250488       -0.000244
4   -2368.702148   -2428.326416  6605.957520 -2368.702148  242.875000 -2428.326416        0.0   59.624268       59.624268
5   -2304.888916   -2368.655029  6605.957520 -2304.888916  123.437500 -2368.655029        0.0   63.766113       23.437500
6   -2304.888916   -2328.326416  6682.520020 -2304.888916   63.718750 -2328.326416        0.0   23.437500        0.000000
7   -2294.467041   -2304.888916  6759.082520 -2294.467041   33.859375 -2304.888916        0.0   10.421875      -13.015625
8   -2181.451416   -2281.451416  6759.082520 -2181.451416  123.437500 -2281.451416        0.0  100.000000        0.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:55:08]  --------------------------------------------------------------------------------
[07/25 20:55:08]  Iteration: 53 (0 solution, 52 counterexamples)
[07/25 20:55:12]  Generator returned sat in 2.761778 secs.
[07/25 20:55:12]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:12]  Improved gap from 0 to 48.4375
[07/25 20:55:13]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 20:55:13]  Verifer returned sat in 0.552568 secs.
[07/25 20:55:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2866.973145   -2866.973145  6406.145996 -2866.973145    0.094238 -2866.973145        0.0    0.000000       -3.125000
1   -2663.942627   -2763.848145  6406.145996 -2663.942627  203.030518 -2763.848145        0.0   99.905518       99.905518
2   -2465.316406   -2663.848145  6406.145996 -2465.316406  298.531738 -2663.848145        0.0  198.531738      198.531738
3   -2465.316406   -2563.848145  6406.145996 -2465.316406  198.531494 -2563.848145        0.0   98.531738       98.531738
4   -2412.285645   -2465.316406  6406.145996 -2412.285645  151.562500 -2465.316406        0.0   53.030762       51.562500
5   -2412.285645   -2463.848145  6454.583496 -2412.285645    0.500000 -2463.848145        0.0   51.562500        0.000000
6   -2363.848145   -2412.285645  6506.145996 -2363.848145  100.000000 -2412.285645        0.0   48.437500        0.000000
7   -2363.848145   -2363.848145  6557.708496 -2363.848145    0.500000 -2363.848145        0.0    0.000000      -48.437500
8   -2313.114014   -2315.410645  6557.708496 -2313.114014   50.734131 -2315.410645        0.0    2.296631      -97.703369
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:55:13]  --------------------------------------------------------------------------------
[07/25 20:55:13]  Iteration: 54 (0 solution, 53 counterexamples)
[07/25 20:55:15]  Generator returned sat in 0.374380 secs.
[07/25 20:55:15]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:15]  Improved gap from 193/16384 to 15.625
[07/25 20:55:16]  Improved number of small numbers from 61 to 101 out of a max of 101
[07/25 20:55:16]  Verifer returned sat in 0.833254 secs.
[07/25 20:55:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2698.152344   -2698.152588  6140.450439 -2698.152344    0.094238 -2698.152588        0.0    0.000244      -99.999756
1   -2498.105469   -2498.152588  6140.450439 -2498.105469  200.047119 -2498.152588        0.0    0.047119        0.047119
2   -2482.433350   -2498.058105  6224.730957 -2482.433350   15.719238 -2498.058105        0.0   15.624756       -0.000244
3   -2463.801025   -2480.976807  6306.098877 -2463.801025   34.257080 -2480.976807        0.0   17.175781        0.000000
4   -2263.801025   -2363.871826  6306.098877 -2263.801025  217.175781 -2363.871826        0.0  100.070801      100.000000
5   -2229.591064   -2363.801025  6306.098877 -2229.591064  134.280762 -2363.801025        0.0  134.209961       34.209961
6   -2229.543945   -2263.801025  6371.841797 -2229.543945  134.257080 -2263.801025        0.0   34.257080        0.000000
7   -2229.543945   -2229.543945  6456.216553 -2229.543945    0.500000 -2229.543945        0.0    0.000000      -15.625244
8   -2095.216064   -2213.918701  6456.216553 -2095.216064  134.327881 -2213.918701        0.0  118.702637       18.702637
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:55:16]  --------------------------------------------------------------------------------
[07/25 20:55:16]  Iteration: 55 (0 solution, 54 counterexamples)
[07/25 20:55:19]  Generator returned sat in 1.382304 secs.
[07/25 20:55:19]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:19]  Improved gap from 193/4096 to 100
[07/25 20:55:19]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 20:55:19]  Verifer returned sat in 0.390655 secs.
[07/25 20:55:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t
0   -2424.758057   -2624.710938  6306.098633 -2424.758057     0.093994 -2624.710938        0.0   199.952881       99.952881
1   -2424.663818   -2424.711182  6306.098633 -2424.663818   200.047119 -2424.711182        0.0     0.047363        0.047119
2   -2324.664062   -2324.710938  6306.098633 -2324.664062   100.047119 -2324.710938        0.0     0.046875        0.046875
3   -2291.346191   -2291.393555  6306.098633 -2291.346191    33.364746 -2291.393555        0.0     0.047363      -66.635254
4   -2224.664062   -2224.710938  6306.098633 -2224.664062    66.729492 -2224.710938        0.0     0.046875      -99.953125
5   -2091.251953   -2124.710938  6306.098633 -2091.251953   133.458984 -2124.710938        0.0    33.458984      -66.541016
6   -1857.792969   -2024.710938  6306.098633 -1857.792969   266.917969 -2024.710938        0.0   166.917969       66.917969
7   -1490.875000   -1824.711182  6306.098633 -1490.875000   533.835938 -1824.711182        0.0   333.836182      333.835938
8    -757.039307   -1824.710938  6306.098633  -757.039307  1067.671875 -1824.710938        0.0  1067.671631      967.671631
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:55:20]  --------------------------------------------------------------------------------
[07/25 20:55:20]  Iteration: 56 (0 solution, 55 counterexamples)
[07/25 20:55:22]  Generator returned sat in 0.648347 secs.
[07/25 20:55:22]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:22]  Improved gap from 385/16384 to 20.3125
[07/25 20:55:22]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/25 20:55:22]  Verifer returned sat in 0.674572 secs.
[07/25 20:55:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -1902.898682   -1902.945312  5670.844971 -1902.898682   0.093994 -1902.945312        0.0   0.046631       -0.047119
1   -1882.585938   -1902.851318  5750.532227 -1882.585938  20.359375 -1902.851318        0.0  20.265381       -0.047119
2   -1882.491943   -1882.538818  5830.219727 -1882.491943  20.359375 -1882.538818        0.0   0.046875      -20.265625
3   -1858.343750   -1858.390625  5906.071533 -1858.343750  24.195068 -1858.390625        0.0   0.046875      -20.265625
4   -1813.835938   -1838.078125  5981.829346 -1813.835938  44.554688 -1838.078125        0.0  24.242188        0.000000
5   -1773.304932   -1795.488281  6041.298340 -1773.304932  64.773193 -1795.488281        0.0  22.183350        0.000000
6   -1708.437744   -1773.257812  6076.431152 -1708.437744  87.050537 -1773.257812        0.0  64.820068        0.000000
7   -1688.125000   -1708.437744  6156.118408 -1688.125000  85.132812 -1708.437744        0.0  20.312744        0.000000
8   -1688.125000   -1688.125000  6156.118652 -1688.125000   1.500000 -1688.125000        0.0   0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:55:23]  --------------------------------------------------------------------------------
[07/25 20:55:23]  Iteration: 57 (0 solution, 56 counterexamples)
[07/25 20:55:26]  Generator returned sat in 2.255094 secs.
[07/25 20:55:26]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:27]  Verifer returned unsat in 0.141200 secs.
[07/25 20:55:27]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:27]  --------------------------------------------------------------------------------
[07/25 20:55:27]  Iteration: 58 (1 solution, 56 counterexamples)
[07/25 20:55:28]  Generator returned sat in 0.303058 secs.
[07/25 20:55:28]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:28]  Verifer returned unsat in 0.185868 secs.
[07/25 20:55:28]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:28]  --------------------------------------------------------------------------------
[07/25 20:55:28]  Iteration: 59 (2 solution, 56 counterexamples)
[07/25 20:55:30]  Generator returned sat in 0.296717 secs.
[07/25 20:55:30]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:30]  Verifer returned unsat in 0.177961 secs.
[07/25 20:55:30]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:30]  --------------------------------------------------------------------------------
[07/25 20:55:30]  Iteration: 60 (3 solution, 56 counterexamples)
[07/25 20:55:32]  Generator returned sat in 0.507922 secs.
[07/25 20:55:32]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:32]  Verifer returned unsat in 0.271474 secs.
[07/25 20:55:32]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:32]  --------------------------------------------------------------------------------
[07/25 20:55:32]  Iteration: 61 (4 solution, 56 counterexamples)
[07/25 20:55:35]  Generator returned sat in 0.966417 secs.
[07/25 20:55:35]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:35]  Improved gap from 0 to 23.4375
[07/25 20:55:36]  Improved number of small numbers from 49 to 101 out of a max of 101
[07/25 20:55:36]  Verifer returned sat in 0.699652 secs.
[07/25 20:55:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2105.020996   -2605.020752  6873.548096 -2105.020996    0.093994 -2605.020752        0.0  499.999756      499.999756
1   -2105.020996   -2505.020996  6873.548096 -2105.020996  499.999756 -2505.020996        0.0  400.000000      399.999756
2   -2105.020996   -2505.020752  6873.548096 -2105.020996    0.046875 -2505.020752        0.0  399.999756      299.999756
3   -2105.020996   -2405.020752  6873.548096 -2105.020996  399.953125 -2405.020752        0.0  299.999756      199.999756
4   -2105.020996   -2205.067627  6873.548096 -2105.020996  200.000000 -2205.067627        0.0  100.046631       99.999756
5   -2105.020996   -2155.067627  6873.548340 -2105.020996  100.000000 -2155.067627        0.0   50.046631        0.000000
6   -2105.020996   -2105.020996  6950.110596 -2105.020996   50.000000 -2105.020996        0.0    0.000000      -23.437744
7   -2080.020996   -2081.583252  7026.673096 -2080.020996   25.000000 -2081.583252        0.0    1.562256      -21.875244
8   -1958.098877   -2058.145752  7026.673096 -1958.098877  123.484375 -2058.145752        0.0  100.046875        0.046875
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:55:36]  --------------------------------------------------------------------------------
[07/25 20:55:36]  Iteration: 62 (4 solution, 57 counterexamples)
[07/25 20:55:38]  Generator returned sat in 0.468221 secs.
[07/25 20:55:38]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:38]  Improved gap from 375/16 to 23.4375
[07/25 20:55:39]  Improved number of small numbers from 39 to 101 out of a max of 101
[07/25 20:55:39]  Verifer returned sat in 0.869732 secs.
[07/25 20:55:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1632.867676   -2132.867920  6621.710693 -1632.867676    0.093994 -2132.867920        0.0  500.000244      500.000244
1   -1632.867676   -2032.914795  6621.710693 -1632.867676    0.047119 -2032.914795        0.0  400.047119      400.000244
2   -1632.867676   -2032.867920  6621.710693 -1632.867676  400.047119 -2032.867920        0.0  400.000244      300.000244
3   -1632.867676   -1856.305176  6621.710693 -1632.867676  399.953125 -1856.305176        0.0  223.437500      200.000244
4   -1632.867676   -1735.945801  6621.710693 -1632.867676  199.976562 -1735.945801        0.0  103.078125      100.000244
5   -1632.867676   -1682.908936  6621.710693 -1632.867676   99.988281 -1682.908936        0.0   50.041260        0.000244
6   -1632.867676   -1632.867920  6698.272949 -1632.867676   49.994141 -1632.867920        0.0    0.000244      -23.437500
7   -1607.870850   -1609.430176  6774.835449 -1607.870850   24.997070 -1609.430176        0.0    1.559326      -21.878174
8   -1482.914551   -1585.992676  6774.835449 -1482.914551  126.515625 -1585.992676        0.0  103.078125        3.078125
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:55:39]  --------------------------------------------------------------------------------
[07/25 20:55:39]  Iteration: 63 (4 solution, 58 counterexamples)
[07/25 20:55:41]  Generator returned sat in 0.911372 secs.
[07/25 20:55:41]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:42]  Improved gap from 375/16 to 23.4375
[07/25 20:55:42]  Improved number of small numbers from 58 to 101 out of a max of 101
[07/25 20:55:42]  Verifer returned sat in 0.695959 secs.
[07/25 20:55:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     770.371338     342.246094  4146.596680   770.371338    0.093750   342.246094        0.0  428.125244      428.125244
1     770.371338     442.246094  4146.596680   770.371338    0.046875   442.246094        0.0  328.125244      328.125244
2     770.371338     542.246094  4146.596680   770.371338  328.124756   542.246094        0.0  228.125244      228.125244
3     770.371338     542.246094  4146.596680   770.371338  228.125000   542.246094        0.0  228.125244      128.125244
4     770.371338     667.293457  4146.596680   770.371338  200.000000   667.293457        0.0  103.077881       28.125244
5     770.371338     742.246338  4218.471436   770.371338  100.000000   742.246338        0.0   28.125000        0.000000
6     792.246338     770.371338  4295.033936   792.246338   50.000000   770.371338        0.0   21.875000       -1.562500
7     795.371338     793.808838  4371.596436   795.371338   25.000000   793.808838        0.0    1.562500      -21.875000
8     920.324219     817.246338  4371.596436   920.324219  126.515381   817.246338        0.0  103.077881        3.077881
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:55:43]  --------------------------------------------------------------------------------
[07/25 20:55:43]  Iteration: 64 (4 solution, 59 counterexamples)
[07/25 20:55:46]  Generator returned sat in 1.881269 secs.
[07/25 20:55:46]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:46]  Verifer returned unsat in 0.383218 secs.
[07/25 20:55:46]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:46]  --------------------------------------------------------------------------------
[07/25 20:55:46]  Iteration: 65 (5 solution, 59 counterexamples)
[07/25 20:55:49]  Generator returned sat in 1.374489 secs.
[07/25 20:55:49]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:49]  Improved gap from 1/800 to 23.4375
[07/25 20:55:50]  Improved number of small numbers from 56 to 97 out of a max of 101
[07/25 20:55:50]  Verifer returned sat in 0.718591 secs.
[07/25 20:55:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     903.684814     903.682373  3585.160156   903.684814    0.093750   903.682373        0.0    0.002441        0.002441
1     903.684814     903.682617  3585.160156   903.684814    0.001465   903.682617        0.0    0.002197      -99.997559
2    1327.119873    1103.682373  3585.160156  1327.119873  423.437256  1103.682373        0.0  223.437500      223.437500
3    1327.119873    1200.561035  3585.160156  1327.119873  223.437256  1200.561035        0.0  126.558838      123.437500
4    1327.119873    1303.680908  3585.160156  1327.119873    0.010000  1303.680908        0.0   23.438965       23.437500
5    1327.119873    1303.682373  3661.722656  1327.119873    0.010000  1303.682373        0.0   23.437500        0.000000
6    1327.119873    1327.119873  3735.162842  1327.119873    0.010000  1327.119873        0.0    0.000000      -26.559814
7    1453.678711    1453.677380  3735.162842  1453.678711  126.558838  1453.677380        0.0    0.001331       -0.000977
8    1453.687380    1453.679688  3735.163086  1453.687380    0.010000  1453.679688        0.0    0.007692      -99.992064
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:55:50]  --------------------------------------------------------------------------------
[07/25 20:55:50]  Iteration: 66 (5 solution, 60 counterexamples)
[07/25 20:55:53]  Generator returned sat in 0.744843 secs.
[07/25 20:55:53]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:53]  Improved gap from 0 to 48.4375
[07/25 20:55:53]  Improved number of small numbers from 67 to 101 out of a max of 101
[07/25 20:55:53]  Verifer returned sat in 0.432660 secs.
[07/25 20:55:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -497.932861    -497.932861  4986.775146  -497.932861    0.093506  -497.932861        0.0    0.000000         0.00000
1     -97.932861    -497.932617  4986.775146   -97.932861  400.000000  -497.932617        0.0  399.999756       300.00000
2     -49.495361    -297.932861  4986.775146   -49.495361  448.437256  -297.932861        0.0  248.437500       248.43750
3     -49.495361    -252.600342  4986.775146   -49.495361  223.437256  -252.600342        0.0  203.104980       148.43750
4     -49.495361     -97.932861  4986.775146   -49.495361    0.010000   -97.932861        0.0   48.437500        48.43750
5     -49.495361     -97.932861  5038.337646   -49.495361    0.010000   -97.932861        0.0   48.437500         0.00000
6     -49.495361     -49.495361  5085.222656   -49.495361    0.010000   -49.495361        0.0    0.000000       -53.11499
7      52.057129       3.619629  5136.785156    52.057129  101.552490     3.619629        0.0   48.437500         0.00000
8      52.057129      52.057129  5136.785156    52.057129    0.010000    52.057129        0.0    0.000000      -100.00000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:55:53]  --------------------------------------------------------------------------------
[07/25 20:55:53]  Iteration: 67 (5 solution, 61 counterexamples)
[07/25 20:55:56]  Generator returned sat in 1.290032 secs.
[07/25 20:55:56]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:55:56]  Improved gap from 0 to 48.4375
[07/25 20:55:57]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/25 20:55:57]  Verifer returned sat in 0.380996 secs.
[07/25 20:55:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -196.350342    -196.350342  4685.190186  -196.350342    0.093262  -196.350342        0.0    0.000000       -0.002441
1    -147.910400    -196.347900  4736.752686  -147.910400   48.439941  -196.347900        0.0   48.437500        0.000000
2     200.524658     -51.020264  4736.752686   200.524658  396.872559   -51.020264        0.0  251.544922      248.435059
3     200.527100      -2.587646  4736.752686   200.527100  251.547363    -2.587646        0.0  203.114746      148.437500
4     200.527100     152.086914  4736.752686   200.527100    0.010000   152.086914        0.0   48.440186       48.437500
5     200.527100     152.089600  4788.315186   200.527100    0.010000   152.089600        0.0   48.437500        0.000000
6     253.644531     200.527100  4835.197510   253.644531  101.554932   200.527100        0.0   53.117432       -0.000244
7     302.084473     253.646973  4886.757812   302.084473  101.557373   253.646973        0.0   48.437500        0.000000
8     302.084473     302.084473  4886.757812   302.084473    0.010000   302.084473        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:55:57]  --------------------------------------------------------------------------------
[07/25 20:55:57]  Iteration: 68 (5 solution, 62 counterexamples)
[07/25 20:56:00]  Generator returned sat in 1.293971 secs.
[07/25 20:56:00]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:56:01]  Improved gap from 0 to 35.9375
[07/25 20:56:01]  Improved number of small numbers from 56 to 78 out of a max of 101
[07/25 20:56:01]  Verifer returned sat in 1.447291 secs.
[07/25 20:56:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -1892.022217   -1892.022339  6369.645508 -1892.022217    0.093262 -1892.022339        0.0   0.000122      -11.218994
1   -1780.803101   -1781.116455  6369.645508 -1780.803101  111.219238 -1781.116455        0.0   0.313354        0.000122
2   -1743.912109   -1780.803101  6432.708008 -1743.912109   37.204346 -1780.803101        0.0  36.890991       -0.046387
3   -1743.818970   -1743.865601  6495.770264 -1743.818970   36.984131 -1743.865601        0.0   0.046631      -36.890991
4   -1667.787231   -1706.927979  6556.629517 -1667.787231   76.078369 -1706.927979        0.0  39.140747        0.000000
5   -1667.787231   -1667.787231  6619.692139 -1667.787231   39.094238 -1667.787231        0.0   0.000000      -36.937378
6   -1609.279297   -1630.849731  6682.754639 -1609.279297   58.507935 -1630.849731        0.0  21.570435      -15.366943
7   -1572.341797   -1593.912354  6745.816895 -1572.341797   58.507935 -1593.912354        0.0  21.570557      -15.367188
8   -1535.404541   -1556.974609  6745.816895 -1535.404541   58.507812 -1556.974609        0.0  21.570068      -78.429932
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:02]  --------------------------------------------------------------------------------
[07/25 20:56:02]  Iteration: 69 (5 solution, 63 counterexamples)
[07/25 20:56:04]  Generator returned sat in 0.520541 secs.
[07/25 20:56:04]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 20:56:04]  Improved gap from 191/4096 to 35.9375
[07/25 20:56:05]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/25 20:56:05]  Verifer returned sat in 0.708865 secs.
[07/25 20:56:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1859.194824   -1979.854736  6447.944092 -1859.194824    0.093262 -1979.854736        0.0  120.659912       99.906982
1   -1823.210938   -1859.148193  6447.944092 -1823.210938  156.643799 -1859.148193        0.0   35.937256       35.890869
2   -1823.210693   -1859.101807  6512.006592 -1823.210693   35.937500 -1859.101807        0.0   35.891113       -0.046387
3   -1787.226807   -1823.164307  6576.068848 -1787.226807   71.875000 -1823.164307        0.0   35.937500       -0.000244
4   -1743.819092   -1782.959717  6632.661377 -1743.819092   79.345215 -1782.959717        0.0   39.140625        0.000000
5   -1743.819092   -1743.819092  6696.723877 -1743.819092   39.094238 -1743.819092        0.0    0.000000      -35.937500
6   -1685.177734   -1707.881592  6760.786377 -1685.177734   58.641357 -1707.881592        0.0   22.703857      -13.233643
7   -1649.240234   -1671.944092  6821.848877 -1649.240234   58.641357 -1671.944092        0.0   22.703857      -16.233643
8   -1615.436279   -1633.006348  6821.848877 -1615.436279   56.507812 -1633.006348        0.0   17.570068      -82.429688
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:05]  --------------------------------------------------------------------------------
[07/25 20:56:05]  Iteration: 70 (5 solution, 64 counterexamples)
[07/25 20:56:07]  Generator returned sat in 0.485354 secs.
[07/25 20:56:07]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:56:08]  Improved gap from 191/16384 to 35.9375
[07/25 20:56:08]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 20:56:08]  Verifer returned sat in 0.589404 secs.
[07/25 20:56:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1844.568848   -1959.241455  6423.255615 -1844.568848    0.093262 -1959.241455        0.0  114.672607       78.735107
1   -1844.568848   -1923.303955  6444.473877 -1844.568848    0.046631 -1923.303955        0.0   78.735107       -0.046631
2   -1808.631348   -1844.522217  6508.536377 -1808.631348  114.672607 -1844.522217        0.0   35.890869       -0.046631
3   -1772.693848   -1808.584717  6572.598877 -1772.693848   71.828369 -1808.584717        0.0   35.890869       -0.046631
4   -1732.756348   -1772.647217  6632.661377 -1732.756348   75.828369 -1772.647217        0.0   39.890869       -0.046631
5   -1696.818848   -1732.709717  6696.723877 -1696.818848   75.828369 -1732.709717        0.0   35.890869       -0.046631
6   -1676.303467   -1696.772217  6760.786377 -1676.303467   56.406250 -1696.772217        0.0   20.468750      -15.468750
7   -1640.365967   -1660.834717  6822.645508 -1640.365967   56.406250 -1660.834717        0.0   20.468750      -17.672119
8   -1604.428467   -1622.693848  6822.645508 -1604.428467   56.406250 -1622.693848        0.0   18.265381      -81.734619
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:08]  --------------------------------------------------------------------------------
[07/25 20:56:08]  Iteration: 71 (5 solution, 65 counterexamples)
[07/25 20:56:10]  Generator returned sat in 0.518458 secs.
[07/25 20:56:10]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 20:56:11]  Improved gap from 575/16 to 35.9375
[07/25 20:56:12]  Improved number of small numbers from 46 to 52 out of a max of 101
[07/25 20:56:12]  Verifer returned sat in 1.712930 secs.
[07/25 20:56:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -1979.239746   -1979.239973  6539.677490 -1979.239746    0.093018 -1979.239973        0.0   0.000227      -11.219133
1   -1871.287947   -1871.334456  6539.677490 -1871.287947  107.952026 -1871.334456        0.0   0.046509       -3.267334
2   -1867.973982   -1868.020491  6603.739868 -1867.973982    3.360474 -1868.020491        0.0   0.046509      -35.890991
3   -1796.192000   -1832.082991  6667.802368 -1796.192000   71.828491 -1832.082991        0.0  35.890991       -0.046509
4   -1757.004500   -1796.145491  6728.661377 -1757.004500   75.078491 -1796.145491        0.0  39.140991        0.000000
5   -1757.004500   -1757.004500  6792.723877 -1757.004500   39.094482 -1757.004500        0.0   0.000000      -35.937500
6   -1699.996504   -1721.067000  6856.786377 -1699.996504   57.007996 -1721.067000        0.0  21.070496      -14.867004
7   -1664.059004   -1685.129500  6917.848877 -1664.059004   57.007996 -1685.129500        0.0  21.070496      -17.867004
8   -1628.121504   -1646.191895  6917.848877 -1628.121504   57.007996 -1646.191895        0.0  18.070391      -81.929504
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:12]  --------------------------------------------------------------------------------
[07/25 20:56:12]  Iteration: 72 (5 solution, 66 counterexamples)
[07/25 20:56:15]  Generator returned sat in 0.834349 secs.
[07/25 20:56:15]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:56:15]  Improved gap from 0 to 23.4375
[07/25 20:56:16]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/25 20:56:16]  Verifer returned sat in 0.687701 secs.
[07/25 20:56:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -801.241455    -949.163086  5496.335938  -801.241455    0.092773  -949.163086        0.0  147.921631      123.437744
1    -801.241455    -924.678711  5496.335938  -801.241455  147.874756  -924.678711        0.0  123.437256       23.437744
2    -801.241455    -824.678955  5572.898193  -801.241455    0.046387  -824.678955        0.0   23.437500        0.000000
3    -777.803955    -801.241455  5649.460693  -777.803955   46.875000  -801.241455        0.0   23.437500        0.000000
4    -653.319824    -677.803955  5649.460693  -653.319824  147.921631  -677.803955        0.0   24.484131       24.484131
5    -653.319824    -676.757324  5724.976562  -653.319824    2.000000  -676.757324        0.0   23.437500        0.000000
6    -653.319824    -653.319824  5799.507324  -653.319824    2.000000  -653.319824        0.0    0.000000      -25.469238
7    -505.398193    -551.288086  5799.507324  -505.398193  147.921631  -551.288086        0.0   45.889893       22.452393
8    -505.398193    -527.850342  5799.507324  -505.398193    2.000000  -527.850342        0.0   22.452148      -77.547607
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:16]  --------------------------------------------------------------------------------
[07/25 20:56:16]  Iteration: 73 (5 solution, 67 counterexamples)
[07/25 20:56:18]  Generator returned sat in 0.827725 secs.
[07/25 20:56:18]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:56:19]  Improved gap from 95/2048 to 48.4375
[07/25 20:56:19]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 20:56:19]  Verifer returned sat in 0.333318 secs.
[07/25 20:56:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -952.804199   -1152.757812  5624.414551  -952.804199    0.092773 -1152.757812        0.0  199.953613       99.953613
1    -855.558105    -952.757812  5624.414551  -855.558105  297.199707  -952.757812        0.0   97.199707       97.199707
2    -855.558105    -855.604492  5624.414551  -855.558105   97.199707  -855.604492        0.0    0.046387       -2.800293
3    -599.725586    -793.475586  5624.414551  -599.725586  255.878906  -793.475586        0.0  193.750000      153.032227
4    -599.725586    -652.804199  5624.414551  -599.725586    2.000000  -652.804199        0.0   53.078613       53.032227
5    -599.725586    -652.757812  5671.382324  -599.725586    2.000000  -652.757812        0.0   53.032227        0.000000
6    -551.334473    -599.725586  5722.944824  -551.334473  101.423340  -599.725586        0.0   48.391113       -0.046387
7    -502.850586    -551.288086  5774.507324  -502.850586   96.875000  -551.288086        0.0   48.437500        0.000000
8    -502.850586    -502.850586  5774.507324  -502.850586    2.000000  -502.850586        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:19]  --------------------------------------------------------------------------------
[07/25 20:56:19]  Iteration: 74 (5 solution, 68 counterexamples)
[07/25 20:56:22]  Generator returned sat in 1.065194 secs.
[07/25 20:56:22]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:56:26]  Improved gap from 459797/12288 to 40.625
[07/25 20:56:26]  Improved number of small numbers from 47 to 68 out of a max of 101
[07/25 20:56:26]  Verifer returned sat in 4.142657 secs.
[07/25 20:56:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2847.539551   -2847.539795  5624.414551 -2847.539551    0.092529 -2847.539795        0.0    0.000244        0.000045
1   -2647.585938   -2747.539795  5624.414551 -2647.585938  199.953857 -2747.539795        0.0   99.953857       99.953658
2   -2553.780762   -2647.539596  5624.414551 -2553.780762  193.759033 -2647.539596        0.0   93.758834       93.758834
3   -2389.187870   -2553.734420  5624.414551 -2389.187870  258.351725 -2553.734420        0.0  164.546549      158.351725
4   -2389.187870   -2456.822021  5624.414551 -2389.187870  131.175863 -2456.822021        0.0   67.634151       58.351725
5   -2389.187870   -2447.539596  5666.062826 -2389.187870   67.587931 -2447.539596        0.0   58.351725        0.000000
6   -2347.539596   -2389.187870  5724.368408 -2347.539596  100.000000 -2389.187870        0.0   41.648275       -0.046143
7   -2306.914596   -2347.493331  5783.743164 -2306.914596   82.273275 -2347.493331        0.0   40.578735       -0.046387
8   -2304.356694   -2306.868164  5783.743164 -2304.356694   43.136637 -2306.868164        0.0    2.511471      -97.488485
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:27]  --------------------------------------------------------------------------------
[07/25 20:56:27]  Iteration: 75 (5 solution, 69 counterexamples)
[07/25 20:56:29]  Generator returned sat in 0.799488 secs.
[07/25 20:56:29]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:56:30]  Improved gap from 0 to 100
[07/25 20:56:30]  Improved number of small numbers from 62 to 101 out of a max of 101
[07/25 20:56:30]  Verifer returned sat in 0.474365 secs.
[07/25 20:56:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2983.326904   -3083.280518  5624.414551 -2983.326904    0.092529 -3083.280518        0.0   99.953613       99.953613
1   -2883.280518   -2983.280518  5624.414551 -2883.280518  200.000000 -2983.280518        0.0  100.000000      100.000000
2   -2883.280518   -2983.280518  5624.414551 -2883.280518    0.046387 -2983.280518        0.0  100.000000        0.000000
3   -2593.187988   -2783.280518  5624.414551 -2593.187988  390.092529 -2783.280518        0.0  190.092529      190.092529
4   -2391.187988   -2783.280518  5624.414551 -2391.187988  392.092529 -2783.280518        0.0  392.092529      292.092529
5   -2389.187988   -2583.280518  5624.414551 -2389.187988  394.092529 -2583.280518        0.0  194.092529      194.092529
6   -2187.187988   -2583.280518  5624.414551 -2187.187988  396.092529 -2583.280518        0.0  396.092529      296.092529
7   -2185.187988   -2383.280518  5624.414551 -2185.187988  398.092529 -2383.280518        0.0  198.092529      198.092529
8   -1983.187988   -2383.234375  5624.414551 -1983.187988  400.092529 -2383.234375        0.0  400.046387      300.092529
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:56:30]  --------------------------------------------------------------------------------
[07/25 20:56:30]  Iteration: 76 (5 solution, 70 counterexamples)
[07/25 20:56:33]  Generator returned sat in 1.177398 secs.
[07/25 20:56:33]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:56:33]  Improved gap from 0 to 100
[07/25 20:56:34]  Improved number of small numbers from 50 to 101 out of a max of 101
[07/25 20:56:34]  Verifer returned sat in 0.444445 secs.
[07/25 20:56:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3502.147217   -3702.100586  6243.234619 -3502.147217    0.092285 -3702.100586        0.0  199.953369      199.953369
1   -3502.100586   -3702.100586  6243.234619 -3502.100586  200.000000 -3702.100586        0.0  200.000000      100.000000
2   -3002.123779   -3502.123779  6243.234619 -3002.123779  699.976807 -3502.123779        0.0  500.000000      499.976807
3   -3002.123779   -3502.100586  6243.234619 -3002.123779    0.022949 -3502.100586        0.0  499.976807      399.976807
4   -3002.123779   -3399.100586  6243.234619 -3002.123779  200.000000 -3399.100586        0.0  396.976807      299.976807
5   -3002.123779   -3302.100586  6243.234619 -3002.123779  303.000000 -3302.100586        0.0  299.976807      199.976807
6   -3002.123779   -3102.100586  6243.234619 -3002.123779  200.023193 -3102.100586        0.0   99.976807       99.976807
7   -2702.100586   -3002.100586  6243.234619 -2702.100586  400.000000 -3002.100586        0.0  300.000000      300.000000
8   -2601.600586   -3002.100586  6243.234619 -2601.600586  400.500000 -3002.100586        0.0  400.500000      300.500000
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:56:34]  --------------------------------------------------------------------------------
[07/25 20:56:34]  Iteration: 77 (5 solution, 71 counterexamples)
[07/25 20:56:36]  Generator returned sat in 0.745223 secs.
[07/25 20:56:36]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:56:39]  Improved number of small numbers from 59 to 100 out of a max of 100
[07/25 20:56:39]  Verifer returned sat in 2.372514 secs.
[07/25 20:56:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4407.147461   -4491.516846  6243.234619 -4407.147461    0.092285 -4491.516846        0.0   84.369385       -0.045898
1   -4307.147705   -4407.101562  6243.234619 -4307.147705  184.369141 -4407.101562        0.0   99.953857       -0.046143
2   -4307.055420   -4307.101318  6243.234619 -4307.055420  100.046143 -4307.101318        0.0    0.045898      -99.953857
3   -3807.147461   -4203.286133  6243.234619 -3807.147461  499.953857 -4203.286133        0.0  396.138672      299.954102
4   -3807.147461   -4007.101562  6243.234619 -3807.147461  396.092285 -4007.101562        0.0  199.954102      199.954102
5   -3607.055420   -4007.101562  6243.234619 -3607.055420  400.046143 -4007.101562        0.0  400.046143      300.046143
6   -3607.055420   -3807.101562  6243.234619 -3607.055420  352.022949 -3807.101562        0.0  200.046143      200.046143
7   -3430.997803   -3707.101562  6243.234619 -3430.997803  376.103760 -3707.101562        0.0  276.103760      276.103760
8   -3430.997803   -3707.055176  6243.234619 -3430.997803  150.000000 -3707.055176        0.0  276.057373      176.103760
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 20:56:39]  --------------------------------------------------------------------------------
[07/25 20:56:39]  Iteration: 78 (5 solution, 72 counterexamples)
[07/25 20:56:43]  Generator returned sat in 2.004684 secs.
[07/25 20:56:43]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:56:43]  Improved gap from 189/2048 to 1.5625
[07/25 20:56:43]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 20:56:43]  Verifer returned sat in 0.353544 secs.
[07/25 20:56:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4007.193604   -4107.193604  6243.234619 -4007.193604    0.092285 -4107.193604        0.0  100.000000      100.000000
1   -4007.193604   -4008.756104  6243.234619 -4007.193604    0.046143 -4008.756104        0.0    1.562500        0.000000
2   -4007.193604   -4007.193604  6243.234619 -4007.193604    0.046143 -4007.193604        0.0    0.000000     -100.000000
3   -3807.147461   -3807.193604  6243.234619 -3807.147461  200.046143 -3807.193604        0.0    0.046143        0.046143
4   -3805.193604   -3807.193604  6341.234619 -3805.193604    2.000000 -3807.193604        0.0    2.000000        0.000000
5   -3805.193604   -3805.193604  6439.672119 -3805.193604    2.000000 -3805.193604        0.0    0.000000       -1.562500
6   -3803.193604   -3803.631104  6538.109619 -3803.193604    2.000000 -3803.631104        0.0    0.437500       -1.125000
7   -3801.631104   -3802.068604  6636.547119 -3801.631104    2.000000 -3802.068604        0.0    0.437500       -1.125000
8   -3800.068604   -3800.506104  6636.547119 -3800.068604    2.000000 -3800.506104        0.0    0.437500      -99.562500
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:44]  --------------------------------------------------------------------------------
[07/25 20:56:44]  Iteration: 79 (5 solution, 73 counterexamples)
[07/25 20:56:50]  Generator returned sat in 4.303472 secs.
[07/25 20:56:50]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:56:50]  Improved gap from 1/120 to 0
[07/25 20:56:51]  Improved number of small numbers from 62 to 93 out of a max of 101
[07/25 20:56:51]  Verifer returned sat in 0.853179 secs.
[07/25 20:56:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3309.757812   -3309.759766  5445.798828 -3309.757812    0.092285 -3309.759766        0.0    0.001953        0.000244
1   -3309.757812   -3309.758057  5545.798584 -3309.757812    0.001667 -3309.758057        0.0    0.000244        0.000000
2   -2910.256592   -3309.757812  5545.798584 -2910.256592  399.501465 -3309.757812        0.0  399.501221      299.501221
3   -2909.759521   -3209.757812  5545.798584 -2909.759521  399.998291 -3209.757812        0.0  299.998291      199.998291
4   -2909.759521   -3009.757812  5545.798584 -2909.759521    0.010000 -3009.757812        0.0   99.998291       99.998291
5   -2909.759521   -2910.256592  5545.798828 -2909.759521    0.010000 -2910.256592        0.0    0.497070       -0.001465
6   -2909.756592   -2909.758014  5645.790527 -2909.756592    0.500000 -2909.758014        0.0    0.001423       -0.006836
7   -2909.748014   -2909.749681  5745.788574 -2909.748014    0.010000 -2909.749681        0.0    0.001667       -0.000212
8   -2909.739681   -2909.746338  5745.788818 -2909.739681    0.010000 -2909.746338        0.0    0.006657      -99.991634
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:51]  --------------------------------------------------------------------------------
[07/25 20:56:51]  Iteration: 80 (5 solution, 74 counterexamples)
[07/25 20:56:54]  Generator returned sat in 0.823892 secs.
[07/25 20:56:54]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:56:54]  Improved gap from 1/600 to 48.4375
[07/25 20:56:54]  Improved number of small numbers from 92 to 101 out of a max of 101
[07/25 20:56:54]  Verifer returned sat in 0.405387 secs.
[07/25 20:56:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4235.707764   -4435.710205  6471.750977 -4235.707764    0.092041 -4435.710205        0.0  200.002441      100.002441
1   -4235.707764   -4235.710205  6471.750977 -4235.707764    0.002500 -4235.710205        0.0    0.002441        0.002441
2   -3935.707764   -4137.817627  6471.750977 -3935.707764  300.002441 -4137.817627        0.0  202.109863      200.002441
3   -3887.270264   -4089.385498  6471.750977 -3887.270264  250.547363 -4089.385498        0.0  202.115234      148.439941
4   -3887.270264   -3935.710205  6471.750977 -3887.270264    0.010000 -3935.710205        0.0   48.439941       48.439941
5   -3887.270264   -3935.707764  6523.311035 -3887.270264    0.010000 -3935.707764        0.0   48.437500        0.000000
6   -3834.152832   -3887.270264  6570.191162 -3834.152832  101.554932 -3887.270264        0.0   53.117432       -0.002441
7   -3785.712646   -3834.150312  6621.753418 -3785.712646  101.557617 -3834.150312        0.0   48.437666        0.000000
8   -3785.712646   -3785.712646  6621.753418 -3785.712646    0.010000 -3785.712646        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:56:55]  --------------------------------------------------------------------------------
[07/25 20:56:55]  Iteration: 81 (5 solution, 75 counterexamples)
[07/25 20:57:00]  Generator returned sat in 3.887528 secs.
[07/25 20:57:01]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:02]  Improved gap from 0 to 48.4375
[07/25 20:57:02]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/25 20:57:02]  Verifer returned sat in 1.770327 secs.
[07/25 20:57:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4737.480713   -4737.526855  6420.186035 -4737.480713    0.092041 -4737.526855        0.0    0.046143       -0.045898
1   -4688.997559   -4737.434814  6471.748535 -4688.997559   48.529297 -4737.434814        0.0   48.437256       -0.000244
2   -4389.043213   -4590.438232  6471.748535 -4389.043213  348.391602 -4590.438232        0.0  201.395020      199.954102
3   -4389.043213   -4488.997314  6471.748535 -4389.043213   48.345459 -4488.997314        0.0   99.954102       99.954102
4   -4340.559814   -4389.043457  6471.748535 -4340.559814  148.437500 -4389.043457        0.0   48.483643       48.437500
5   -4340.559814   -4388.997314  6523.311035 -4340.559814    1.500000 -4388.997314        0.0   48.437500        0.000000
6   -4287.526855   -4340.559814  6570.278076 -4287.526855  101.470459 -4340.559814        0.0   53.032959        0.000000
7   -4287.526855   -4287.526855  6621.840576 -4287.526855    1.500000 -4287.526855        0.0    0.000000      -48.437500
8   -4236.018555   -4239.089355  6621.840576 -4236.018555   51.508301 -4239.089355        0.0    3.070801      -96.929199
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:57:03]  --------------------------------------------------------------------------------
[07/25 20:57:03]  Iteration: 82 (5 solution, 76 counterexamples)
[07/25 20:57:05]  Generator returned sat in 0.908266 secs.
[07/25 20:57:06]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:07]  Improved gap from 2317/48 to 48.4375
[07/25 20:57:08]  Improved number of small numbers from 54 to 73 out of a max of 101
[07/25 20:57:08]  Verifer returned sat in 2.122426 secs.
[07/25 20:57:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5417.710449   -5517.618652  7200.369761 -5417.710449    0.092041 -5517.618652        0.0   99.908203       99.908091
1   -5319.467529   -5417.618540  7200.369761 -5319.467529  198.151123 -5417.618540        0.0   98.151011       98.151011
2   -5117.710581   -5319.375376  7200.369761 -5117.710581  299.907959 -5319.375376        0.0  201.664795      199.907959
3   -5117.710581   -5282.879639  7200.369761 -5117.710581  201.664795 -5282.879639        0.0  165.169058       99.907959
4   -5064.677734   -5117.710581  7200.369761 -5064.677734  218.201904 -5117.710581        0.0   53.032847       52.940806
5   -5064.677734   -5117.618540  7247.428955 -5064.677734    1.000000 -5117.618540        0.0   52.940806        0.000000
6   -5016.240122   -5064.677734  7298.991343 -5016.240122  101.378418 -5064.677734        0.0   48.437612        0.000000
7   -5016.240122   -5016.240122  7350.553711 -5016.240122    1.000000 -5016.240122        0.0    0.000000      -48.437632
8   -4965.004893   -4967.802490  7350.553955 -4965.004893   51.235229 -4967.802490        0.0    2.797598      -97.202158
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:57:08]  --------------------------------------------------------------------------------
[07/25 20:57:08]  Iteration: 83 (5 solution, 77 counterexamples)
[07/25 20:57:11]  Generator returned sat in 0.945234 secs.
[07/25 20:57:11]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:15]  Verifer returned unsat in 3.684549 secs.
[07/25 20:57:15]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:15]  --------------------------------------------------------------------------------
[07/25 20:57:15]  Iteration: 84 (6 solution, 77 counterexamples)
[07/25 20:57:18]  Generator returned sat in 1.308467 secs.
[07/25 20:57:18]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:19]  Improved gap from 47/1024 to 42.1875
[07/25 20:57:19]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 20:57:19]  Verifer returned sat in 0.967088 secs.
[07/25 20:57:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3823.553223   -4023.507324  7209.194336 -3823.553223    0.092041 -4023.507324        0.0  199.954102       99.954102
1   -3723.553467   -3823.507568  7209.194336 -3723.553467  299.953857 -3823.507568        0.0   99.954102       99.953857
2   -3723.461670   -3723.507324  7209.194336 -3723.461670  100.045898 -3723.507324        0.0    0.045654        0.045654
3   -3461.741699   -3627.675293  7209.194336 -3461.741699  261.765625 -3627.675293        0.0  165.933594      161.765625
4   -3461.741699   -3527.229004  7209.194336 -3461.741699  130.882812 -3527.229004        0.0   65.487305       61.765625
5   -3461.741699   -3523.507324  7247.428711 -3461.741699   65.441406 -3523.507324        0.0   61.765625        0.000000
6   -3422.007324   -3461.741699  7305.241211 -3422.007324  101.500000 -3461.741699        0.0   39.734375       -2.453125
7   -3377.274902   -3419.554199  7362.961914 -3377.274902   84.466797 -3419.554199        0.0   42.279297        0.000000
8   -3377.274902   -3377.274902  7362.961914 -3377.274902   42.233398 -3377.274902        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:57:19]  --------------------------------------------------------------------------------
[07/25 20:57:19]  Iteration: 85 (6 solution, 78 counterexamples)
[07/25 20:57:22]  Generator returned sat in 0.946231 secs.
[07/25 20:57:22]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:23]  Improved gap from 187/16384 to 10.9375
[07/25 20:57:24]  Improved number of small numbers from 70 to 99 out of a max of 101
[07/25 20:57:24]  Verifer returned sat in 1.400191 secs.
[07/25 20:57:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4949.225098   -4949.270752  7142.872559 -4949.225098    0.092041 -4949.270752        0.0    0.045654       -0.045654
1   -4938.287598   -4949.179443  7231.935059 -4938.287598   10.983154 -4949.179443        0.0   10.891846       -0.045654
2   -4938.196045   -4938.241943  7231.935059 -4938.196045   10.983398 -4938.241943        0.0    0.045898      -99.954102
3   -4586.777100   -4762.554932  7231.935059 -4586.777100  351.464844 -4762.554932        0.0  175.777832      151.464844
4   -4586.777100   -4641.601807  7231.935059 -4586.777100  175.732422 -4641.601807        0.0   54.824707       51.464844
5   -4553.735596   -4586.730957  7247.428467 -4553.735596   87.866211 -4586.730957        0.0   32.995361       -0.000244
6   -4542.797852   -4553.689941  7336.445557 -4542.797852   43.933105 -4553.689941        0.0   10.892090       -0.045410
7   -4531.723389   -4542.752441  7425.416504 -4531.723389   21.966553 -4542.752441        0.0   11.029053        0.000000
8   -4531.723389   -4531.723389  7425.416504 -4531.723389   10.983276 -4531.723389        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:57:24]  --------------------------------------------------------------------------------
[07/25 20:57:24]  Iteration: 86 (6 solution, 79 counterexamples)
[07/25 20:57:28]  Generator returned sat in 1.979647 secs.
[07/25 20:57:28]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:28]  Improved gap from 187/8192 to 100
[07/25 20:57:29]  Improved number of small numbers from 43 to 61 out of a max of 101
[07/25 20:57:29]  Verifer returned sat in 0.823458 secs.
[07/25 20:57:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4753.758301   -4953.758057  6947.381909 -4753.758301    0.092041 -4953.758057        0.0  199.999756       99.999795
1   -4753.758301   -4853.758057  6947.381909 -4753.758301    0.045410 -4853.758057        0.0   99.999756       -0.000205
2   -4720.409424   -4720.409544  6947.381909 -4720.409424  133.348633 -4720.409544        0.0    0.000120      -66.651328
3   -4653.712441   -4653.758057  6947.381909 -4653.712441   66.697103 -4653.758057        0.0    0.045615      -99.954346
4   -4553.712402   -4553.758096  6947.381909 -4553.712402  100.045654 -4553.758096        0.0    0.045693      -99.954307
5   -4403.689614   -4453.758096  6947.381909 -4403.689614  150.068481 -4453.758096        0.0   50.068481      -49.931519
6   -4228.655374   -4253.758096  6947.381909 -4228.655374  225.102722 -4253.758096        0.0   25.102722       25.102722
7   -3916.104012   -4228.609719  6947.381909 -3916.104012  337.654083 -4228.609719        0.0  312.505707      237.654083
8   -3722.128594   -4153.758057  6947.381909 -3722.128594  506.481125 -4153.758057        0.0  431.629462      331.629501
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 20:57:29]  --------------------------------------------------------------------------------
[07/25 20:57:29]  Iteration: 87 (6 solution, 80 counterexamples)
[07/25 20:57:35]  Generator returned sat in 4.095517 secs.
[07/25 20:57:35]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:57:36]  Improved gap from 0 to 46.875
[07/25 20:57:36]  Improved number of small numbers from 59 to 76 out of a max of 101
[07/25 20:57:36]  Verifer returned sat in 0.921994 secs.
[07/25 20:57:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4557.106689   -4822.363892  6915.987705 -4557.106689    0.092041 -4822.363892        0.0  265.257202      265.257202
1   -4557.106689   -4722.364014  6915.987705 -4557.106689    0.045654 -4722.364014        0.0  165.257324      165.257202
2   -4557.106689   -4622.363892  6915.987705 -4557.106689    0.045410 -4622.363892        0.0   65.257202       65.257202
3   -4422.454956   -4557.060913  6915.987705 -4422.454956  199.908936 -4557.060913        0.0  134.605957       99.908936
4   -4422.409424   -4422.455078  6915.987705 -4422.409424  134.651489 -4422.455078        0.0    0.045654       -0.045532
5   -4420.955078   -4422.363892  6969.112705 -4420.955078    1.500000 -4422.363892        0.0    1.408813      -45.466187
6   -4320.363892   -4375.488892  7013.987549 -4320.363892  102.000000 -4375.488892        0.0   55.125000       -0.000156
7   -4282.702881   -4320.318359  7066.124512 -4282.702881   92.786011 -4320.318359        0.0   37.615479      -10.202183
8   -4267.250000   -4272.500488  7066.124512 -4267.250000   53.068359 -4272.500488        0.0    5.250488      -94.749302
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:57:37]  --------------------------------------------------------------------------------
[07/25 20:57:37]  Iteration: 88 (6 solution, 81 counterexamples)
[07/25 20:57:40]  Generator returned sat in 0.999112 secs.
[07/25 20:57:40]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 20:57:42]  Improved gap from 0 to 29.6875
[07/25 20:57:43]  Improved number of small numbers from 47 to 101 out of a max of 101
[07/25 20:57:43]  Verifer returned sat in 2.926028 secs.
[07/25 20:57:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6831.116699   -6831.162109  7133.672119 -6831.116699    0.091797 -6831.162109        0.0    0.045410        0.000244
1   -6831.116699   -6831.116699  7203.984375 -6831.116699    0.022949 -6831.116699        0.0    0.000000      -29.687500
2   -6501.451904   -6701.429199  7203.984375 -6501.451904  329.664795 -6701.429199        0.0  199.977295      199.977295
3   -6501.451904   -6601.429199  7203.984375 -6501.451904    0.022949 -6601.429199        0.0   99.977295       99.977295
4   -6501.451904   -6501.474609  7203.984375 -6501.451904    1.500000 -6501.474609        0.0    0.022705       -0.022705
5   -6499.974609   -6501.429199  7272.946777 -6499.974609    1.500000 -6501.429199        0.0    1.454590      -29.583008
6   -6398.679199   -6470.391602  7301.234375 -6398.679199  102.750000 -6470.391602        0.0   71.712402        0.000000
7   -6351.497803   -6398.679199  7354.052979 -6351.497803  118.893799 -6398.679199        0.0   47.181396        0.000000
8   -6351.497803   -6351.497803  7354.052979 -6351.497803    1.500000 -6351.497803        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:57:43]  --------------------------------------------------------------------------------
[07/25 20:57:43]  Iteration: 89 (6 solution, 82 counterexamples)
[07/25 20:57:50]  Generator returned sat in 5.349385 secs.
[07/25 20:57:50]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:51]  Improved gap from 0 to 23.4375
[07/25 20:57:51]  Improved number of small numbers from 62 to 101 out of a max of 101
[07/25 20:57:51]  Verifer returned sat in 0.416831 secs.
[07/25 20:57:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6831.116699   -7354.548584  7657.103760 -6831.116699    0.091553 -7354.548584        0.0  523.431885      523.431885
1   -6831.116699   -7254.548584  7657.103760 -6831.116699    0.005859 -7254.548584        0.0  423.431885      423.431885
2   -6831.116699   -7177.985840  7657.103760 -6831.116699    0.005615 -7177.985840        0.0  346.869141      323.431885
3   -6831.116699   -7092.829834  7657.103760 -6831.116699    0.022949 -7092.829834        0.0  261.713135      223.431885
4   -6831.111084   -6954.548584  7657.103760 -6831.111084  261.718750 -6954.548584        0.0  123.437500      123.437500
5   -6831.111084   -6954.542969  7657.103760 -6831.111084    0.500000 -6954.542969        0.0  123.431885       23.437500
6   -6831.111084   -6854.548584  7733.666260 -6831.111084    0.500000 -6854.548584        0.0   23.437500        0.000000
7   -6831.111084   -6831.111084  7810.228516 -6831.111084    0.500000 -6831.111084        0.0    0.000000      -23.437744
8   -6707.673584   -6807.673340  7810.228516 -6707.673584  123.437500 -6807.673340        0.0   99.999756       -0.000244
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:57:51]  --------------------------------------------------------------------------------
[07/25 20:57:51]  Iteration: 90 (6 solution, 83 counterexamples)
[07/25 20:57:54]  Generator returned sat in 1.198226 secs.
[07/25 20:57:55]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:55]  Improved gap from 0 to 23.4375
[07/25 20:57:55]  Improved number of small numbers from 91 to 101 out of a max of 101
[07/25 20:57:55]  Verifer returned sat in 0.430475 secs.
[07/25 20:57:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7392.328613   -7839.197510  7685.735596 -7392.328613    0.091309 -7839.197510        0.0  446.868896      423.434326
1   -7392.328613   -7715.762939  7685.735596 -7392.328613    0.005859 -7715.762939        0.0  323.434326      323.434326
2   -7392.328369   -7615.762939  7685.735596 -7392.328369  323.434570 -7615.762939        0.0  223.434570      223.434570
3   -7392.325439   -7615.762939  7685.735596 -7392.325439  223.437500 -7615.762939        0.0  223.437500      123.437500
4   -7392.325439   -7415.765869  7685.735596 -7392.325439  223.434570 -7415.765869        0.0   23.440430       23.437500
5   -7392.325439   -7415.762939  7762.298096 -7392.325439    0.500000 -7415.762939        0.0   23.437500        0.000000
6   -7392.325439   -7392.325439  7838.860596 -7392.325439    0.500000 -7392.325439        0.0    0.000000      -23.437500
7   -7168.887939   -7368.887939  7838.860596 -7168.887939  223.437500 -7368.887939        0.0  200.000000      100.000000
8   -7168.887939   -7265.769043  7838.860596 -7168.887939   46.877930 -7265.769043        0.0   96.881104        0.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:57:55]  --------------------------------------------------------------------------------
[07/25 20:57:55]  Iteration: 91 (6 solution, 84 counterexamples)
[07/25 20:57:58]  Generator returned sat in 1.009601 secs.
[07/25 20:57:59]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:57:59]  Improved gap from 515/1024 to 23.4375
[07/25 20:57:59]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 20:57:59]  Verifer returned sat in 0.427762 secs.
[07/25 20:57:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7418.796875   -7833.762939  7685.735596 -7418.796875    0.091309 -7833.762939        0.0  414.966064      396.966064
1   -7415.762939   -7715.762939  7685.735596 -7415.762939  418.000000 -7715.762939        0.0  300.000000      300.000000
2   -7415.762939   -7715.762939  7685.735596 -7415.762939  300.000000 -7715.762939        0.0  300.000000      200.000000
3   -7415.762939   -7613.044189  7685.735596 -7415.762939  300.000000 -7613.044189        0.0  197.281250      100.000000
4   -7392.325439   -7418.796875  7685.735596 -7392.325439  220.718750 -7418.796875        0.0   26.471436       23.437500
5   -7392.325439   -7415.762939  7762.298096 -7392.325439    0.500000 -7415.762939        0.0   23.437500        0.000000
6   -7392.325439   -7392.325439  7838.860596 -7392.325439    0.500000 -7392.325439        0.0    0.000000      -23.437500
7   -7171.606689   -7295.156250  7838.860596 -7171.606689  220.718750 -7295.156250        0.0  123.549561       97.281250
8   -7171.515625   -7268.887939  7838.860596 -7171.515625  123.640625 -7268.887939        0.0   97.372314       -2.627686
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:57:59]  --------------------------------------------------------------------------------
[07/25 20:57:59]  Iteration: 92 (6 solution, 85 counterexamples)
[07/25 20:58:03]  Generator returned sat in 1.850766 secs.
[07/25 20:58:03]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:04]  Verifer returned unsat in 0.424282 secs.
[07/25 20:58:04]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:04]  --------------------------------------------------------------------------------
[07/25 20:58:04]  Iteration: 93 (7 solution, 85 counterexamples)
[07/25 20:58:07]  Generator returned sat in 0.876836 secs.
[07/25 20:58:07]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:07]  Verifer returned unsat in 0.523260 secs.
[07/25 20:58:07]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:07]  --------------------------------------------------------------------------------
[07/25 20:58:07]  Iteration: 94 (8 solution, 85 counterexamples)
[07/25 20:58:10]  Generator returned sat in 0.840412 secs.
[07/25 20:58:10]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:11]  Verifer returned unsat in 0.352872 secs.
[07/25 20:58:11]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:11]  --------------------------------------------------------------------------------
[07/25 20:58:11]  Iteration: 95 (9 solution, 85 counterexamples)
[07/25 20:58:14]  Generator returned sat in 0.917807 secs.
[07/25 20:58:14]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:14]  Improved gap from 0 to 23.4375
[07/25 20:58:14]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/25 20:58:14]  Verifer returned sat in 0.608410 secs.
[07/25 20:58:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7191.633545   -7691.588379  8289.129395 -7191.633545    0.091064 -7691.588379        0.0  499.954834      499.954834
1   -7191.588379   -7591.588379  8289.129395 -7191.588379  500.000000 -7591.588379        0.0  400.000000      400.000000
2   -7168.196289   -7591.588379  8289.129395 -7168.196289  423.392090 -7591.588379        0.0  423.392090      323.392090
3   -7168.150879   -7429.892334  8289.129395 -7168.150879  423.437500 -7429.892334        0.0  261.741455      223.437500
4   -7168.150879   -7291.588379  8289.129395 -7168.150879  261.696045 -7291.588379        0.0  123.437500      123.437500
5   -7168.150879   -7191.633545  8289.129395 -7168.150879    1.000000 -7191.633545        0.0   23.482666       23.437500
6   -7168.150879   -7191.588379  8365.691895 -7168.150879    1.000000 -7191.588379        0.0   23.437500        0.000000
7   -7168.150879   -7168.150879  8442.254395 -7168.150879    1.000000 -7168.150879        0.0    0.000000      -23.437500
8   -7044.713379   -7144.713135  8442.254395 -7044.713379  123.437500 -7144.713135        0.0   99.999756        0.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:58:15]  --------------------------------------------------------------------------------
[07/25 20:58:15]  Iteration: 96 (9 solution, 86 counterexamples)
[07/25 20:58:18]  Generator returned sat in 1.164734 secs.
[07/25 20:58:18]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:18]  Verifer returned unsat in 0.275455 secs.
[07/25 20:58:18]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:18]  --------------------------------------------------------------------------------
[07/25 20:58:18]  Iteration: 97 (10 solution, 86 counterexamples)
[07/25 20:58:21]  Generator returned sat in 0.887117 secs.
[07/25 20:58:21]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:22]  Verifer returned unsat in 0.449595 secs.
[07/25 20:58:22]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:22]  --------------------------------------------------------------------------------
[07/25 20:58:22]  Iteration: 98 (11 solution, 86 counterexamples)
[07/25 20:58:25]  Generator returned sat in 0.941725 secs.
[07/25 20:58:25]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:25]  Verifer returned unsat in 0.287286 secs.
[07/25 20:58:25]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:25]  --------------------------------------------------------------------------------
[07/25 20:58:25]  Iteration: 99 (12 solution, 86 counterexamples)
[07/25 20:58:28]  Generator returned sat in 0.869740 secs.
[07/25 20:58:28]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:28]  Verifer returned unsat in 0.276725 secs.
[07/25 20:58:28]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:28]  --------------------------------------------------------------------------------
[07/25 20:58:28]  Iteration: 100 (13 solution, 86 counterexamples)
[07/25 20:58:31]  Generator returned sat in 0.860060 secs.
[07/25 20:58:31]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:32]  Verifer returned unsat in 0.292040 secs.
[07/25 20:58:32]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:32]  --------------------------------------------------------------------------------
[07/25 20:58:32]  Iteration: 101 (14 solution, 86 counterexamples)
[07/25 20:58:35]  Generator returned sat in 0.978831 secs.
[07/25 20:58:35]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:35]  Verifer returned unsat in 0.324972 secs.
[07/25 20:58:35]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:35]  --------------------------------------------------------------------------------
[07/25 20:58:35]  Iteration: 102 (15 solution, 86 counterexamples)
[07/25 20:58:38]  Generator returned sat in 0.891251 secs.
[07/25 20:58:38]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:39]  Verifer returned unsat in 0.421120 secs.
[07/25 20:58:39]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:39]  --------------------------------------------------------------------------------
[07/25 20:58:39]  Iteration: 103 (16 solution, 86 counterexamples)
[07/25 20:58:42]  Generator returned sat in 0.875950 secs.
[07/25 20:58:42]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:42]  Verifer returned unsat in 0.400337 secs.
[07/25 20:58:42]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:42]  --------------------------------------------------------------------------------
[07/25 20:58:42]  Iteration: 104 (17 solution, 86 counterexamples)
[07/25 20:58:45]  Generator returned sat in 0.911812 secs.
[07/25 20:58:45]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:45]  Verifer returned unsat in 0.315261 secs.
[07/25 20:58:45]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:45]  --------------------------------------------------------------------------------
[07/25 20:58:45]  Iteration: 105 (18 solution, 86 counterexamples)
[07/25 20:58:48]  Generator returned sat in 0.876343 secs.
[07/25 20:58:48]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:49]  Verifer returned unsat in 0.389189 secs.
[07/25 20:58:49]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:49]  --------------------------------------------------------------------------------
[07/25 20:58:49]  Iteration: 106 (19 solution, 86 counterexamples)
[07/25 20:58:52]  Generator returned sat in 0.866388 secs.
[07/25 20:58:52]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:52]  Verifer returned unsat in 0.296637 secs.
[07/25 20:58:52]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:52]  --------------------------------------------------------------------------------
[07/25 20:58:52]  Iteration: 107 (20 solution, 86 counterexamples)
[07/25 20:58:56]  Generator returned sat in 1.799444 secs.
[07/25 20:58:56]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:58:57]  Improved gap from 373/8192 to 35.9375
[07/25 20:58:58]  Improved number of small numbers from 51 to 60 out of a max of 101
[07/25 20:58:58]  Verifer returned sat in 1.371164 secs.
[07/25 20:58:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6105.465820   -6255.549927  8159.128662 -6105.465820    0.090820 -6255.549927        0.0  150.084106       68.032358
1   -6073.589233   -6105.374959  8159.128662 -6073.589233  181.960693 -6105.374959        0.0   31.785726       -0.091055
2   -6037.560669   -6073.498169  8223.191152 -6037.560669   67.814290 -6073.498169        0.0   35.937500        0.000000
3   -5963.503540   -6037.560669  8249.134023 -5963.503540  109.994629 -6037.560669        0.0   74.057129        0.000000
4   -5927.566040   -5963.503540  8313.196523 -5927.566040  109.994629 -5963.503540        0.0   35.937500        0.000000
5   -5891.567830   -5927.566040  8377.198314 -5891.567830   71.935710 -5927.566040        0.0   35.998210        0.000000
6   -5853.599976   -5891.567830  8439.230225 -5853.599976   73.966064 -5891.567830        0.0   37.967855       -0.000234
7   -5817.571411   -5853.508911  8503.201660 -5817.571411   73.996419 -5853.508911        0.0   35.937500       -0.000234
8   -5743.514282   -5817.480469  8503.201660 -5743.514282  109.994629 -5817.480469        0.0   73.966187      -25.943105
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:58:58]  --------------------------------------------------------------------------------
[07/25 20:58:58]  Iteration: 108 (20 solution, 87 counterexamples)
[07/25 20:59:01]  Generator returned sat in 1.058293 secs.
[07/25 20:59:01]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:02]  Improved gap from 0 to 35.9375
[07/25 20:59:02]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/25 20:59:02]  Verifer returned sat in 1.016714 secs.
[07/25 20:59:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6314.602051   -6479.671387  8189.883789 -6314.602051    0.090576 -6479.671387        0.0  165.069336       99.908936
1   -6288.710449   -6314.511230  8189.883789 -6288.710449  190.960938 -6314.511230        0.0   25.800781       25.800537
2   -6252.772949   -6288.710449  8228.145752 -6252.772949   61.738281 -6288.710449        0.0   35.937500        0.000000
3   -6173.761230   -6252.772949  8249.134033 -6173.761230  114.949219 -6252.772949        0.0   79.011719        0.000000
4   -6137.823730   -6173.761230  8313.196533 -6137.823730  114.949219 -6173.761230        0.0   35.937500        0.000000
5   -6101.886230   -6137.823730  8377.259033 -6101.886230   71.875000 -6137.823730        0.0   35.937500        0.000000
6   -6060.880371   -6101.886230  8436.253174 -6060.880371   76.943359 -6101.886230        0.0   41.005859        0.000000
7   -6024.942871   -6060.789551  8500.224854 -6024.942871   76.943359 -6060.789551        0.0   35.846680       -0.090820
8   -5947.817871   -6024.851807  8500.224854 -5947.817871  112.971680 -6024.851807        0.0   77.033936      -22.965820
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:59:03]  --------------------------------------------------------------------------------
[07/25 20:59:03]  Iteration: 109 (20 solution, 88 counterexamples)
[07/25 20:59:06]  Generator returned sat in 1.143752 secs.
[07/25 20:59:06]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:08]  Improved gap from 543/16 to 35.9375
[07/25 20:59:08]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/25 20:59:08]  Verifer returned sat in 1.782410 secs.
[07/25 20:59:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -5710.782227   -5745.628906  7402.439453 -5710.782227    0.090332 -5745.628906        0.0  34.846680       34.846680
1   -5674.844482   -5710.691406  7431.564453 -5674.844482   70.784424 -5710.691406        0.0  35.846924       -0.090576
2   -5638.907227   -5674.753906  7495.626953 -5638.907227   71.784180 -5674.753906        0.0  35.846680       -0.090820
3   -5567.941406   -5638.816406  7524.751953 -5567.941406  106.812500 -5638.816406        0.0  70.875000        0.000000
4   -5532.003906   -5567.941406  7588.814453 -5532.003906  106.812500 -5567.941406        0.0  35.937500        0.000000
5   -5496.066406   -5532.003906  7652.876953 -5496.066406   71.875000 -5532.003906        0.0  35.937500        0.000000
6   -5460.128906   -5496.066406  7716.939453 -5460.128906   71.875000 -5496.066406        0.0  35.937500        0.000000
7   -5424.191406   -5460.128906  7774.842529 -5424.191406   71.875000 -5460.128906        0.0  35.937500       -6.159424
8   -5405.722656   -5418.031982  7774.842773 -5405.722656   54.406250 -5418.031982        0.0  12.309326      -87.690430
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:59:08]  --------------------------------------------------------------------------------
[07/25 20:59:08]  Iteration: 110 (20 solution, 89 counterexamples)
[07/25 20:59:13]  Generator returned sat in 2.326064 secs.
[07/25 20:59:13]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:13]  Improved gap from 0 to 48.4375
[07/25 20:59:13]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/25 20:59:13]  Verifer returned sat in 0.573686 secs.
[07/25 20:59:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5945.355713   -6045.355469  7834.177246 -5945.355713    0.090088 -6045.355469        0.0   99.999756       99.999756
1   -5945.355713   -6045.355469  7834.177490 -5945.355713   99.999756 -6045.355469        0.0   99.999756        0.000000
2   -5645.368164   -5845.455811  7834.177490 -5645.368164  399.987305 -5845.455811        0.0  200.087646      199.987549
3   -5645.368164   -5779.688965  7834.177490 -5645.368164    0.001250 -5779.688965        0.0  134.320801       99.987549
4   -5645.355713   -5645.366699  7834.177490 -5645.355713  134.333252 -5645.366699        0.0    0.010986        0.000000
5   -5645.355713   -5645.355713  7885.739746 -5645.355713    0.010000 -5645.355713        0.0    0.000000      -48.437744
6   -5543.805664   -5592.243164  7932.627441 -5543.805664  101.550049 -5592.243164        0.0   48.437500        0.000000
7   -5543.805664   -5543.805664  7984.189697 -5543.805664    0.010000 -5543.805664        0.0    0.000000      -48.437744
8   -5491.525146   -5495.367920  7984.189941 -5491.525146   52.280518 -5495.367920        0.0    3.842773      -96.156982
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 20:59:14]  --------------------------------------------------------------------------------
[07/25 20:59:14]  Iteration: 111 (20 solution, 90 counterexamples)
[07/25 20:59:19]  Generator returned sat in 3.265570 secs.
[07/25 20:59:19]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:20]  Improved gap from 1/1000 to 7.8125
[07/25 20:59:21]  Improved number of small numbers from 58 to 101 out of a max of 101
[07/25 20:59:21]  Verifer returned sat in 1.172153 secs.
[07/25 20:59:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7065.060303   -7065.060303  8853.882080 -7065.060303    0.090088 -7065.060303        0.0    0.000000        0.000000
1   -7057.247803   -7065.060303  8946.069580 -7057.247803    7.812500 -7065.060303        0.0    7.812500        0.000000
2   -7057.247803   -7057.247803  8996.024414 -7057.247803    0.045166 -7057.247803        0.0    0.000000      -50.045166
3   -6807.247803   -6932.157715  8996.024414 -6807.247803  250.000000 -6932.157715        0.0  124.909912       99.954834
4   -6807.157715   -6807.202799  8996.024414 -6807.157715  125.000000 -6807.202799        0.0    0.045085        0.044922
5   -6744.702799   -6775.862549  9033.479736 -6744.702799   62.500000 -6775.862549        0.0   31.159749       -0.044840
6   -6744.612549   -6744.657715  9125.622070 -6744.612549   31.250000 -6744.657715        0.0    0.045166       -7.812256
7   -6729.032715   -6736.800293  9217.809570 -6729.032715   15.625000 -6736.800293        0.0    7.767578       -0.044922
8   -6728.987793   -6728.987793  9217.809570 -6728.987793    7.812500 -6728.987793        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:59:21]  --------------------------------------------------------------------------------
[07/25 20:59:21]  Iteration: 112 (20 solution, 91 counterexamples)
[07/25 20:59:28]  Generator returned sat in 4.367903 secs.
[07/25 20:59:28]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:28]  Verifer returned unsat in 0.271686 secs.
[07/25 20:59:28]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:28]  --------------------------------------------------------------------------------
[07/25 20:59:28]  Iteration: 113 (21 solution, 91 counterexamples)
[07/25 20:59:31]  Generator returned sat in 1.129417 secs.
[07/25 20:59:31]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:32]  Verifer returned unsat in 0.374583 secs.
[07/25 20:59:32]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:32]  --------------------------------------------------------------------------------
[07/25 20:59:32]  Iteration: 114 (22 solution, 91 counterexamples)
[07/25 20:59:35]  Generator returned sat in 1.089914 secs.
[07/25 20:59:35]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:36]  Verifer returned unsat in 0.333946 secs.
[07/25 20:59:36]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:36]  --------------------------------------------------------------------------------
[07/25 20:59:36]  Iteration: 115 (23 solution, 91 counterexamples)
[07/25 20:59:39]  Generator returned sat in 1.072174 secs.
[07/25 20:59:39]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:39]  Verifer returned unsat in 0.372706 secs.
[07/25 20:59:39]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:39]  --------------------------------------------------------------------------------
[07/25 20:59:39]  Iteration: 116 (24 solution, 91 counterexamples)
[07/25 20:59:43]  Generator returned sat in 1.042728 secs.
[07/25 20:59:43]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:43]  Verifer returned unsat in 0.320774 secs.
[07/25 20:59:43]  Proved solution: 
[1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 20:59:43]  --------------------------------------------------------------------------------
[07/25 20:59:43]  Iteration: 117 (25 solution, 91 counterexamples)
[07/25 20:59:53]  Generator returned sat in 7.677030 secs.
[07/25 20:59:53]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:59:53]  Improved gap from 0 to 48.4375
[07/25 20:59:54]  Improved number of small numbers from 49 to 101 out of a max of 101
[07/25 20:59:54]  Verifer returned sat in 0.468267 secs.
[07/25 20:59:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6991.915527   -7476.452148  8872.486816 -6991.915527    0.089844 -7476.452148        0.0  484.536621      453.079834
1   -6991.915527   -7344.995605  8872.486816 -6991.915527  484.536377 -7344.995605        0.0  353.080078      353.079834
2   -6991.915527   -7244.995605  8872.486816 -6991.915527    0.044922 -7244.995605        0.0  253.080078      253.079834
3   -6991.915527   -7184.665527  8872.486816 -6991.915527  253.079834 -7184.665527        0.0  192.750000      153.079834
4   -6991.915527   -7044.995605  8872.486816 -6991.915527  146.393311 -7044.995605        0.0   53.080078       53.079834
5   -6991.915527   -7044.950684  8919.406982 -6991.915527    0.500000 -7044.950684        0.0   53.035156        0.000000
6   -6944.428223   -6991.915527  8970.969482 -6944.428223  100.522461 -6991.915527        0.0   47.487305       -0.950195
7   -6895.040527   -6943.478027  9022.531982 -6895.040527   96.875000 -6943.478027        0.0   48.437500        0.000000
8   -6895.040527   -6895.040527  9022.531982 -6895.040527    0.500000 -6895.040527        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:59:54]  --------------------------------------------------------------------------------
[07/25 20:59:54]  Iteration: 118 (25 solution, 92 counterexamples)
[07/25 20:59:57]  Generator returned sat in 1.271519 secs.
[07/25 20:59:58]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 20:59:58]  Improved gap from 199079/4096 to 48.4375
[07/25 20:59:58]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 20:59:58]  Verifer returned sat in 0.453562 secs.
[07/25 20:59:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7122.108643   -7570.546143  8867.844482 -7122.108643    0.089844 -7570.546143        0.0  448.437500      448.437500
1   -7122.108643   -7570.546143  8867.844482 -7122.108643  448.437500 -7570.546143        0.0  448.437500      348.437500
2   -7122.108643   -7470.546143  8867.844482 -7122.108643    0.044922 -7470.546143        0.0  348.437500      248.437500
3   -7122.108643   -7323.188721  8867.844482 -7122.108643    0.011230 -7323.188721        0.0  201.080078      148.437500
4   -7122.108643   -7170.557373  8867.844482 -7122.108643    0.500000 -7170.557373        0.0   48.448730       48.437500
5   -7122.108643   -7170.546143  8919.406982 -7122.108643    0.500000 -7170.546143        0.0   48.437500        0.000000
6   -7122.108643   -7122.108643  8966.304443 -7122.108643    0.500000 -7122.108643        0.0    0.000000      -53.102539
7   -7020.568604   -7069.006104  9017.866943 -7020.568604  101.540039 -7069.006104        0.0   48.437500        0.000000
8   -7020.568604   -7020.568604  9017.866943 -7020.568604    0.500000 -7020.568604        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 20:59:58]  --------------------------------------------------------------------------------
[07/25 20:59:58]  Iteration: 119 (25 solution, 93 counterexamples)
[07/25 21:00:02]  Generator returned sat in 1.366135 secs.
[07/25 21:00:02]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:02]  Improved gap from 775/16 to 48.4375
[07/25 21:00:03]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/25 21:00:03]  Verifer returned sat in 0.555465 secs.
[07/25 21:00:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6721.465332   -7174.530518  8920.770264 -6721.465332    0.089600 -7174.530518        0.0  453.065186      453.065186
1   -6721.465332   -7174.527588  8920.770264 -6721.465332  453.065186 -7174.527588        0.0  453.062256      353.065186
2   -6721.465332   -6974.530518  8920.770264 -6721.465332    0.002686 -6974.530518        0.0  253.065186      253.065186
3   -6721.465332   -6912.215332  8920.770264 -6721.465332    0.011230 -6912.215332        0.0  190.750000      153.065186
4   -6721.465332   -6774.587646  8920.770264 -6721.465332    0.500000 -6774.587646        0.0   53.122314       53.065186
5   -6721.465332   -6774.530518  8967.705078 -6721.465332    0.500000 -6774.530518        0.0   53.065186        0.000000
6   -6673.030518   -6721.465332  9019.267578 -6673.030518  101.500000 -6721.465332        0.0   48.434814       -0.002686
7   -6624.590332   -6673.027832  9070.830078 -6624.590332   96.875000 -6673.027832        0.0   48.437500        0.000000
8   -6624.590332   -6624.590332  9070.830078 -6624.590332    0.500000 -6624.590332        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:00:03]  --------------------------------------------------------------------------------
[07/25 21:00:03]  Iteration: 120 (25 solution, 94 counterexamples)
[07/25 21:00:07]  Generator returned sat in 1.352704 secs.
[07/25 21:00:07]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:07]  Improved gap from 393183/8192 to 48.4375
[07/25 21:00:07]  Improved number of small numbers from 86 to 101 out of a max of 101
[07/25 21:00:07]  Verifer returned sat in 0.438565 secs.
[07/25 21:00:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5231.019775   -5779.457275  7425.697021 -5231.019775    0.089355 -5779.457275        0.0  548.437500      448.437500
1   -5231.019775   -5579.457520  7425.697021 -5231.019775    0.001221 -5579.457520        0.0  348.437744      348.437500
2   -5231.019775   -5479.457275  7425.697021 -5231.019775    0.002686 -5479.457275        0.0  248.437500      248.437500
3   -5231.019775   -5430.142334  7425.697021 -5231.019775    0.010986 -5430.142334        0.0  199.122559      148.437500
4   -5231.019775   -5279.457520  7425.697021 -5231.019775    0.500000 -5279.457520        0.0   48.437744       48.437500
5   -5231.019775   -5279.457275  7477.259521 -5231.019775    0.500000 -5279.457275        0.0   48.437500        0.000000
6   -5231.019775   -5231.019775  7524.135986 -5231.019775    0.500000 -5231.019775        0.0    0.000000      -53.123535
7   -5129.458496   -5177.896240  7575.698242 -5129.458496  101.561279 -5177.896240        0.0   48.437744        0.000000
8   -5129.458496   -5129.458496  7575.698486 -5129.458496    0.500000 -5129.458496        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:00:08]  --------------------------------------------------------------------------------
[07/25 21:00:08]  Iteration: 121 (25 solution, 95 counterexamples)
[07/25 21:00:13]  Generator returned sat in 3.382122 secs.
[07/25 21:00:14]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:14]  Improved gap from 775/16 to 48.4375
[07/25 21:00:14]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/25 21:00:14]  Verifer returned sat in 0.425116 secs.
[07/25 21:00:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5533.803223   -6082.240723  8818.637451 -5533.803223   0.089111 -6082.240723        0.0  548.437500      448.437500
1   -5533.803223   -5882.240723  8818.637451 -5533.803223   0.001221 -5882.240723        0.0  348.437500      348.437500
2   -5533.803223   -5782.240723  8818.637451 -5533.803223   0.002686 -5782.240723        0.0  248.437500      248.437500
3   -5533.803223   -5723.553223  8818.637451 -5533.803223   0.000244 -5723.553223        0.0  189.750000      148.437500
4   -5533.803223   -5582.240967  8818.637451 -5533.803223   0.500000 -5582.240967        0.0   48.437744       48.437500
5   -5533.803223   -5582.240723  8870.199951 -5533.803223   0.500000 -5582.240723        0.0   48.437500        0.000000
6   -5533.803223   -5533.803223  8921.762451 -5533.803223   0.500000 -5533.803223        0.0    0.000000      -48.437500
7   -5436.928223   -5485.365723  8973.324951 -5436.928223  96.875000 -5485.365723        0.0   48.437500        0.000000
8   -5436.928223   -5436.928223  8973.325195 -5436.928223   0.500000 -5436.928223        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:00:14]  --------------------------------------------------------------------------------
[07/25 21:00:14]  Iteration: 122 (25 solution, 96 counterexamples)
[07/25 21:00:18]  Generator returned sat in 1.397120 secs.
[07/25 21:00:18]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:18]  Improved gap from 767/16 to 48.4375
[07/25 21:00:19]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/25 21:00:19]  Verifer returned sat in 0.456638 secs.
[07/25 21:00:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5282.385498   -5830.822754  8823.324951 -5282.385498    0.089111 -5830.822754        0.0  548.437256        448.4375
1   -5282.385498   -5630.822998  8823.324951 -5282.385498    0.001221 -5630.822998        0.0  348.437500        348.4375
2   -5282.385498   -5530.822998  8823.324951 -5282.385498    0.000244 -5530.822998        0.0  248.437500        248.4375
3   -5282.385498   -5482.510010  8823.324951 -5282.385498    0.000244 -5482.510010        0.0  200.124512        148.4375
4   -5282.385498   -5330.822998  8823.324951 -5282.385498    0.500000 -5330.822998        0.0   48.437500         48.4375
5   -5282.385498   -5330.822998  8874.887451 -5282.385498    0.500000 -5330.822998        0.0   48.437500          0.0000
6   -5282.385498   -5282.385498  8926.449951 -5282.385498    0.500000 -5282.385498        0.0    0.000000        -48.4375
7   -5180.823242   -5233.947754  8973.325195 -5180.823242  101.562256 -5233.947754        0.0   53.124512          0.0000
8   -5180.823242   -5180.823242  8973.325195 -5180.823242    0.500000 -5180.823242        0.0    0.000000       -100.0000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:00:19]  --------------------------------------------------------------------------------
[07/25 21:00:19]  Iteration: 123 (25 solution, 97 counterexamples)
[07/25 21:00:23]  Generator returned sat in 1.455548 secs.
[07/25 21:00:23]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:23]  Improved gap from 775/16 to 48.4375
[07/25 21:00:24]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/25 21:00:24]  Verifer returned sat in 0.526135 secs.
[07/25 21:00:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5975.323486   -6528.447998  8823.324707 -5975.323486    0.089111 -6528.447998        0.0  553.124512      453.124756
1   -5975.323486   -6328.448242  8823.324707 -5975.323486    0.001221 -6328.448242        0.0  353.124756      353.124756
2   -5975.323486   -6229.571045  8823.324707 -5975.323486    0.000244 -6229.571045        0.0  254.247559      253.124756
3   -5975.323486   -6167.073486  8823.324707 -5975.323486    0.000244 -6167.073486        0.0  191.750000      153.124756
4   -5975.323486   -6028.448242  8823.324707 -5975.323486  181.687256 -6028.448242        0.0   53.124756       53.124756
5   -5975.323486   -6028.447998  8870.199951 -5975.323486    0.500000 -6028.447998        0.0   53.124512        0.000000
6   -5926.886475   -5975.323486  8921.762451 -5926.886475  101.561523 -5975.323486        0.0   48.437012       -0.000488
7   -5878.448486   -5926.885986  8973.324951 -5878.448486   96.875000 -5926.885986        0.0   48.437500        0.000000
8   -5878.448486   -5878.448486  8973.325195 -5878.448486    0.500000 -5878.448486        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:00:24]  --------------------------------------------------------------------------------
[07/25 21:00:24]  Iteration: 124 (25 solution, 98 counterexamples)
[07/25 21:00:29]  Generator returned sat in 3.046146 secs.
[07/25 21:00:29]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:30]  Improved gap from 0 to 29.6875
[07/25 21:00:30]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/25 21:00:30]  Verifer returned sat in 0.695637 secs.
[07/25 21:00:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -6085.284912   -6085.285156  8581.103027 -6085.284912   0.088867 -6085.285156        0.0   0.000244        0.000244
1   -5985.329590   -5985.374023  8581.103027 -5985.329590  99.955566 -5985.374023        0.0   0.044434       -0.044434
2   -5985.240479   -5985.284912  8651.415283 -5985.240479   0.133545 -5985.284912        0.0   0.044434      -29.643066
3   -5925.909912   -5955.597412  8721.727783 -5925.909912  59.375000 -5955.597412        0.0  29.687500        0.000000
4   -5925.909912   -5925.909912  8792.040283 -5925.909912   0.500000 -5925.909912        0.0   0.000000      -29.687500
5   -5866.445801   -5896.133545  8862.263672 -5866.445801  59.464111 -5896.133545        0.0  29.687744        0.000000
6   -5866.445801   -5866.445801  8932.576172 -5866.445801   0.500000 -5866.445801        0.0   0.000000      -29.687500
7   -5777.294189   -5806.981934  8973.112061 -5777.294189  89.151611 -5806.981934        0.0  29.687744        0.000000
8   -5777.294189   -5777.294189  8973.112061 -5777.294189   0.500000 -5777.294189        0.0   0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:00:31]  --------------------------------------------------------------------------------
[07/25 21:00:31]  Iteration: 125 (25 solution, 99 counterexamples)
[07/25 21:00:35]  Generator returned sat in 2.245427 secs.
[07/25 21:00:35]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:36]  Improved gap from 4097/8192 to 48.4375
[07/25 21:00:36]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:00:36]  Verifer returned sat in 0.562579 secs.
[07/25 21:00:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6097.062500   -6297.018066  8692.835938 -6097.062500    0.088867 -6297.018066        0.0  199.955566       99.955566
1   -5996.973633   -6097.018066  8692.835938 -5996.973633  300.044434 -6097.018066        0.0  100.044434      100.044434
2   -5996.973633   -6042.330566  8692.835938 -5996.973633    0.044434 -6042.330566        0.0   45.356934        0.044434
3   -5996.973633   -5997.018066  8744.398438 -5996.973633   45.356934 -5997.018066        0.0    0.044434      -48.393066
4   -5847.018066   -5848.625000  8744.398438 -5847.018066  150.000000 -5848.625000        0.0    1.606934        1.562500
5   -5847.018066   -5848.580566  8795.960938 -5847.018066    0.500000 -5848.580566        0.0    1.562500      -46.875000
6   -5751.705566   -5800.143066  8847.523438 -5751.705566   96.875000 -5800.143066        0.0   48.437500        0.000000
7   -5751.705566   -5751.705566  8899.085938 -5751.705566    0.500000 -5751.705566        0.0    0.000000      -48.437500
8   -5703.245850   -5703.268066  8950.648438 -5703.245850   48.459717 -5703.268066        0.0    0.022217      -48.415283
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:00:36]  --------------------------------------------------------------------------------
[07/25 21:00:36]  Iteration: 126 (25 solution, 100 counterexamples)
[07/25 21:00:41]  Generator returned sat in 1.982945 secs.
[07/25 21:00:41]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:42]  Improved gap from 102127/7168 to 25.0
[07/25 21:00:42]  Improved number of small numbers from 73 to 101 out of a max of 101
[07/25 21:00:42]  Verifer returned sat in 1.536053 secs.
[07/25 21:00:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -6000.240234   -6000.262451  8516.857910 -6000.240234   0.088623 -6000.262451        0.0   0.022217        0.021973
1   -5975.240234   -6000.218018  8591.813721 -5975.240234  25.022217 -6000.218018        0.0  24.977783       -0.022217
2   -5938.240234   -5975.218018  8654.835938 -5938.240234  61.977783 -5975.218018        0.0  36.977783        0.000000
3   -5901.218018   -5938.240234  8717.813721 -5901.218018  74.000000 -5938.240234        0.0  37.022217        0.000000
4   -5876.218018   -5901.218018  8792.813721 -5876.218018  62.022217 -5901.218018        0.0  25.000000        0.000000
5   -5802.218018   -5876.218018  8818.791504 -5802.218018  99.000000 -5876.218018        0.0  74.000000       -0.022217
6   -5777.218018   -5802.195801  8893.791504 -5777.218018  99.000000 -5802.195801        0.0  24.977783       -0.022217
7   -5752.195801   -5777.195801  8968.791504 -5752.195801  50.000000 -5777.195801        0.0  25.000000        0.000000
8   -5751.695801   -5752.173584  8968.791504 -5751.695801  25.500000 -5752.173584        0.0   0.477783      -99.500000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:00:43]  --------------------------------------------------------------------------------
[07/25 21:00:43]  Iteration: 127 (25 solution, 101 counterexamples)
[07/25 21:00:47]  Generator returned sat in 1.387039 secs.
[07/25 21:00:47]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:48]  Improved gap from 363/16384 to 100
[07/25 21:00:48]  Improved number of small numbers from 65 to 95 out of a max of 101
[07/25 21:00:48]  Verifer returned sat in 1.466314 secs.
[07/25 21:00:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6075.196045   -6075.218262  8654.835693 -6075.196045    0.088623 -6075.218262        0.0    0.022217        0.021973
1   -5975.240234   -6075.173828  8654.835693 -5975.240234   99.978027 -6075.173828        0.0   99.933594       -0.022217
2   -5975.195801   -5975.218018  8654.835693 -5975.195801   99.978027 -5975.218018        0.0    0.022217      -99.977783
3   -5475.240234   -5875.218018  8654.835693 -5475.240234  499.977783 -5875.218018        0.0  399.977783      299.977783
4   -5475.240234   -5775.218018  8654.835693 -5475.240234  350.489014 -5775.218018        0.0  299.977783      199.977783
5   -5475.240234   -5576.129395  8654.835693 -5475.240234  299.955811 -5576.129395        0.0  100.889160       99.977783
6   -5177.040771   -5475.218018  8654.835693 -5177.040771  399.088623 -5475.218018        0.0  298.177246      298.177246
7   -5075.173706   -5475.195801  8654.835693 -5075.173706  400.044312 -5475.195801        0.0  400.022095      300.044312
8   -5075.173706   -5375.151611  8654.835693 -5075.173706  300.022217 -5375.151611        0.0  299.977905      200.044312
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:00:49]  --------------------------------------------------------------------------------
[07/25 21:00:49]  Iteration: 128 (25 solution, 102 counterexamples)
[07/25 21:00:54]  Generator returned sat in 2.898392 secs.
[07/25 21:00:54]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:00:55]  Improved gap from 1/3200 to 48.4375
[07/25 21:00:55]  Improved number of small numbers from 51 to 99 out of a max of 101
[07/25 21:00:55]  Verifer returned sat in 1.105462 secs.
[07/25 21:00:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6404.980957   -6504.980957  9084.598633 -6404.980957    0.088623 -6504.980957        0.0  100.000000      100.000000
1   -6404.980957   -6453.418457  9084.598633 -6404.980957    0.044434 -6453.418457        0.0   48.437500        0.000000
2   -6205.025391   -6306.699219  9084.598633 -6205.025391  248.393066 -6306.699219        0.0  101.673828       99.955566
3   -6107.699219   -6204.980957  9084.598633 -6107.699219  199.000000 -6204.980957        0.0   97.281738       97.281738
4   -6104.980957   -6105.639893  9084.598633 -6104.980957  100.000000 -6105.639893        0.0    0.658936        0.000000
5   -6055.139893   -6104.980957  9134.757568 -6055.139893   50.500000 -6104.980957        0.0   49.841064        0.000000
6   -6004.121826   -6055.095947  9183.739502 -6004.121826  100.859131 -6055.095947        0.0   50.974121        0.000000
7   -6004.121826   -6004.121826  9235.302002 -6004.121826   50.929565 -6004.121826        0.0    0.000000      -48.437500
8   -5953.362793   -5955.684326  9235.302002 -5953.362793   50.759033 -5955.684326        0.0    2.321533      -97.678467
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:00:56]  --------------------------------------------------------------------------------
[07/25 21:00:56]  Iteration: 129 (25 solution, 103 counterexamples)
[07/25 21:01:01]  Generator returned sat in 2.543696 secs.
[07/25 21:01:01]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:01:01]  Improved gap from 0 to 23.4375
[07/25 21:01:01]  Improved number of small numbers from 93 to 101 out of a max of 101
[07/25 21:01:01]  Verifer returned sat in 0.349452 secs.
[07/25 21:01:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6304.981201   -6504.981201  9084.598633 -6304.981201    0.088623 -6504.981201        0.0  200.000000        200.0000
1   -5981.543701   -6504.958984  9084.598633 -5981.543701  523.437500 -6504.958984        0.0  523.415283        423.4375
2   -5981.543701   -6404.981201  9084.598633 -5981.543701    0.021973 -6404.981201        0.0  423.437500        323.4375
3   -5981.543701   -6304.981201  9084.598633 -5981.543701    0.021973 -6304.981201        0.0  323.437500        223.4375
4   -5981.543701   -6104.981201  9084.598633 -5981.543701  200.000000 -6104.981201        0.0  123.437500        123.4375
5   -5981.543701   -6005.003418  9084.598633 -5981.543701    0.500000 -6005.003418        0.0   23.459717         23.4375
6   -5981.543701   -6004.981201  9161.161133 -5981.543701    0.500000 -6004.981201        0.0   23.437500          0.0000
7   -5981.543701   -5981.543701  9237.723633 -5981.543701    0.500000 -5981.543701        0.0    0.000000        -23.4375
8   -5858.106201   -5958.106201  9237.723633 -5858.106201  123.437500 -5958.106201        0.0  100.000000          0.0000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:01:02]  --------------------------------------------------------------------------------
[07/25 21:01:02]  Iteration: 130 (25 solution, 104 counterexamples)
[07/25 21:01:13]  Generator returned sat in 9.265817 secs.
[07/25 21:01:13]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:01:14]  Improved gap from 45/4096 to 12.5
[07/25 21:01:14]  Improved number of small numbers from 62 to 101 out of a max of 101
[07/25 21:01:14]  Verifer returned sat in 0.987964 secs.
[07/25 21:01:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6157.981689   -6657.981689  9084.598389 -6157.981689    0.088623 -6657.981689        0.0  500.000000      500.000000
1   -6157.981689   -6557.981689  9084.598389 -6157.981689  499.999756 -6557.981689        0.0  400.000000      400.000000
2   -6157.937500   -6557.981689  9084.598389 -6157.937500  400.044189 -6557.981689        0.0  400.044189      300.044189
3   -6157.937500   -6357.981689  9084.598389 -6157.937500  400.000000 -6357.981689        0.0  200.044189      200.044189
4   -6157.937500   -6257.981689  9084.598389 -6157.937500  200.000000 -6257.981689        0.0  100.044189      100.044189
5   -6157.937500   -6207.981689  9084.598389 -6157.937500  100.000000 -6207.981689        0.0   50.044189        0.044189
6   -6157.937500   -6157.981689  9172.098389 -6157.937500   50.000000 -6157.981689        0.0    0.044189      -12.455811
7   -6132.981689   -6145.481689  9259.598389 -6132.981689   25.000000 -6145.481689        0.0   12.500000        0.000000
8   -6132.981689   -6132.981689  9259.598389 -6132.981689    1.500000 -6132.981689        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:01:15]  --------------------------------------------------------------------------------
[07/25 21:01:15]  Iteration: 131 (25 solution, 105 counterexamples)
[07/25 21:01:21]  Generator returned sat in 3.133422 secs.
[07/25 21:01:21]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:01:22]  Improved gap from 25/2 to 12.5
[07/25 21:01:22]  Improved number of small numbers from 66 to 101 out of a max of 101
[07/25 21:01:22]  Verifer returned sat in 0.993122 secs.
[07/25 21:01:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6049.156250   -6549.156494  9133.098145 -6049.156250    0.088379 -6549.156494        0.0  500.000244      500.000000
1   -6049.156250   -6549.156250  9133.098145 -6049.156250  500.000000 -6549.156250        0.0  500.000000      400.000000
2   -6049.156250   -6449.156250  9133.098145 -6049.156250    0.044189 -6449.156250        0.0  400.000000      300.000000
3   -6049.156250   -6249.200684  9133.098145 -6049.156250  400.000000 -6249.200684        0.0  200.044434      200.000000
4   -6049.156250   -6149.200684  9133.098145 -6049.156250  200.000000 -6149.200684        0.0  100.044434      100.000000
5   -6049.156250   -6099.112061  9133.098145 -6049.156250  100.000000 -6099.112061        0.0   49.955811        0.000000
6   -6049.112061   -6049.156250  9220.598145 -6049.112061   50.000000 -6049.156250        0.0    0.044189      -12.455811
7   -6024.156250   -6036.656250  9308.098145 -6024.156250   25.000000 -6036.656250        0.0   12.500000        0.000000
8   -6024.156250   -6024.156250  9308.098389 -6024.156250    1.500000 -6024.156250        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:01:22]  --------------------------------------------------------------------------------
[07/25 21:01:22]  Iteration: 132 (25 solution, 106 counterexamples)
[07/25 21:01:27]  Generator returned sat in 2.300327 secs.
[07/25 21:01:27]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:01:27]  Improved gap from 181/4096 to 100
[07/25 21:01:27]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:01:27]  Verifer returned sat in 0.357250 secs.
[07/25 21:01:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6324.200439   -7024.200439  9308.098145 -6324.200439    0.088379 -7024.200439        0.0  700.000000      600.000000
1   -6324.200439   -6924.200439  9308.098145 -6324.200439    0.044189 -6924.200439        0.0  600.000000      500.000000
2   -6324.200439   -6824.200439  9308.098145 -6324.200439    0.044189 -6824.200439        0.0  500.000000      400.000000
3   -6249.786377   -6721.200439  9308.098145 -6249.786377  574.414062 -6721.200439        0.0  471.414062      374.414062
4   -6249.786377   -6524.200439  9308.098145 -6249.786377  438.707031 -6524.200439        0.0  274.414062      274.414062
5   -6104.846924   -6437.200439  9308.098145 -6104.846924  419.353516 -6437.200439        0.0  332.353516      319.353516
6   -6034.023682   -6324.200439  9308.098145 -6034.023682  403.176758 -6324.200439        0.0  290.176758      290.176758
7   -5924.112061   -6324.156250  9308.098145 -5924.112061  400.088379 -6324.156250        0.0  400.044189      300.088379
8   -5924.112061   -6198.526123  9308.098145 -5924.112061    1.500000 -6198.526123        0.0  274.414062      200.088379
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:01:28]  --------------------------------------------------------------------------------
[07/25 21:01:28]  Iteration: 133 (25 solution, 107 counterexamples)
[07/25 21:01:33]  Generator returned sat in 2.408945 secs.
[07/25 21:01:33]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:01:33]  Improved gap from 181/16384 to 23.4375
[07/25 21:01:33]  Improved number of small numbers from 93 to 101 out of a max of 101
[07/25 21:01:33]  Verifer returned sat in 0.336097 secs.
[07/25 21:01:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6796.683594   -7096.661865  9154.973145 -6796.683594    0.087891 -7096.661865        0.0  299.978271      199.978271
1   -6573.224365   -6996.661865  9154.973145 -6573.224365  523.437500 -6996.661865        0.0  423.437500      323.437500
2   -6573.224365   -6796.661865  9154.973145 -6573.224365    0.022217 -6796.661865        0.0  223.437500      223.437500
3   -6573.224365   -6696.661865  9154.973145 -6573.224365    0.021973 -6696.661865        0.0  123.437500      123.437500
4   -6573.224365   -6596.683838  9154.973145 -6573.224365    1.500000 -6596.683838        0.0   23.459473       23.437500
5   -6573.224365   -6596.661865  9231.535645 -6573.224365    1.500000 -6596.661865        0.0   23.437500        0.000000
6   -6573.224365   -6573.224365  9308.098145 -6573.224365    1.500000 -6573.224365        0.0    0.000000      -23.437500
7   -6449.786865   -6549.786621  9308.098145 -6449.786865  123.437500 -6549.786621        0.0   99.999756        0.000000
8   -6449.786865   -6449.786865  9308.098145 -6449.786865    1.500000 -6449.786865        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:01:34]  --------------------------------------------------------------------------------
[07/25 21:01:34]  Iteration: 134 (25 solution, 108 counterexamples)
[07/25 21:01:41]  Generator returned sat in 4.784209 secs.
[07/25 21:01:41]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:01:42]  Improved gap from 0 to 23.4375
[07/25 21:01:42]  Improved number of small numbers from 65 to 101 out of a max of 101
[07/25 21:01:42]  Verifer returned sat in 0.526851 secs.
[07/25 21:01:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6522.873779   -6769.748779  8828.060303 -6522.873779    0.087646 -6769.748779        0.0  246.875000      146.875244
1   -6522.873779   -6569.749023  8828.060303 -6522.873779  246.875000 -6569.749023        0.0   46.875244       46.875244
2   -6522.873779   -6546.311279  8881.185059 -6522.873779   46.831055 -6546.311279        0.0   23.437500        0.000000
3   -6499.436279   -6522.873779  8957.747559 -6499.436279   46.875000 -6522.873779        0.0   23.437500        0.000000
4   -6275.998779   -6400.980225  8957.747559 -6275.998779  246.875000 -6400.980225        0.0  124.981445      123.437500
5   -6275.998779   -6399.436279  8957.747559 -6275.998779  124.937500 -6399.436279        0.0  123.437500       23.437500
6   -6275.998779   -6299.436279  9034.310059 -6275.998779   63.968750 -6299.436279        0.0   23.437500        0.000000
7   -6265.951904   -6275.998779  9110.872559 -6265.951904   33.484375 -6275.998779        0.0   10.046875      -13.390625
8   -6151.017334   -6252.561279  9110.872559 -6151.017334  124.981445 -6252.561279        0.0  101.543945        1.543945
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:01:42]  --------------------------------------------------------------------------------
[07/25 21:01:42]  Iteration: 135 (25 solution, 109 counterexamples)
[07/25 21:01:47]  Generator returned sat in 1.984310 secs.
[07/25 21:01:47]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:01:48]  Improved gap from 0 to 23.4375
[07/25 21:01:48]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/25 21:01:48]  Verifer returned sat in 0.847927 secs.
[07/25 21:01:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9558.083496   -9808.989746  8835.241699 -9558.083496    0.087646 -9808.989746        0.0  250.906250      207.031250
1   -9558.083496   -9765.114746  8835.241699 -9558.083496  250.906006 -9765.114746        0.0  207.031250      107.031250
2   -9481.371094   -9565.114990  8835.241699 -9481.371094  283.743652 -9565.114990        0.0   83.743896       83.743652
3   -9481.371094   -9565.114746  8851.497803 -9481.371094   83.700195 -9565.114746        0.0   83.743652       -0.000244
4   -9321.239746   -9381.370850  8851.497803 -9321.239746  243.875000 -9381.370850        0.0   60.131104       60.131104
5   -9257.933350   -9321.196289  8851.497803 -9257.933350  123.437500 -9321.196289        0.0   63.262939       23.437500
6   -9257.933350   -9281.370850  8928.060303 -9257.933350   63.218750 -9281.370850        0.0   23.437500        0.000000
7   -9248.261475   -9257.933350  9001.541748 -9248.261475   33.109375 -9257.933350        0.0    9.671875      -16.846680
8   -9134.495850   -9231.414795  9001.541748 -9134.495850  123.437500 -9231.414795        0.0   96.918945       -3.081055
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:01:48]  --------------------------------------------------------------------------------
[07/25 21:01:48]  Iteration: 136 (25 solution, 110 counterexamples)
[07/25 21:01:53]  Generator returned sat in 2.480775 secs.
[07/25 21:01:54]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:01:54]  Improved number of small numbers from 45 to 100 out of a max of 100
[07/25 21:01:54]  Verifer returned sat in 0.420941 secs.
[07/25 21:01:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9456.999023   -9757.977051  8828.104004 -9456.999023    0.087402 -9757.977051        0.0  300.978027      300.978027
1   -9456.999023   -9657.977295  8828.104004 -9456.999023    0.021973 -9657.977295        0.0  200.978271      200.978027
2   -9159.867676   -9557.977051  8828.104004 -9159.867676  498.109619 -9557.977051        0.0  398.109375      398.109375
3   -9159.867676   -9557.955322  8828.104004 -9159.867676    0.021973 -9557.955322        0.0  398.087646      298.109375
4   -9159.867676   -9456.977051  8828.104004 -9159.867676  200.021729 -9456.977051        0.0  297.109375      198.109375
5   -9159.867676   -9357.977051  8828.104004 -9159.867676  202.010986 -9357.977051        0.0  198.109375       98.109375
6   -9157.977051   -9159.867676  8828.104004 -9157.977051  200.000000 -9159.867676        0.0    1.890625        0.000000
7   -8761.780029   -9057.977295  8828.104004 -8761.780029  398.087646 -9057.977295        0.0  296.197266      296.197021
8   -8657.933594   -9057.955078  8828.104004 -8657.933594  400.043701 -9057.955078        0.0  400.021484      300.043457
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 21:01:54]  --------------------------------------------------------------------------------
[07/25 21:01:54]  Iteration: 137 (25 solution, 111 counterexamples)
[07/25 21:02:00]  Generator returned sat in 2.561959 secs.
[07/25 21:02:00]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:02:00]  Improved gap from 45/8192 to 48.4375
[07/25 21:02:00]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:02:00]  Verifer returned sat in 0.385226 secs.
[07/25 21:02:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9660.017578  -10108.455078  9178.582031 -9660.017578    0.087402 -10108.455078        0.0  448.437500        448.4375
1   -9660.017578  -10008.455078  9178.582031 -9660.017578  448.437500 -10008.455078        0.0  348.437500        348.4375
2   -9660.017578   -9908.455078  9178.582031 -9660.017578  348.437500  -9908.455078        0.0  248.437500        248.4375
3   -9660.017578   -9862.792969  9178.582031 -9660.017578  248.437500  -9862.792969        0.0  202.775391        148.4375
4   -9660.017578   -9708.542480  9178.582031 -9660.017578  122.831055  -9708.542480        0.0   48.524902         48.4375
5   -9660.017578   -9708.455078  9230.144531 -9660.017578    1.500000  -9708.455078        0.0   48.437500          0.0000
6   -9608.455078   -9660.017578  9278.582031 -9608.455078  100.000000  -9660.017578        0.0   51.562500          0.0000
7   -9558.629883   -9608.367676  9328.756836 -9558.629883  101.387695  -9608.367676        0.0   49.737793          0.0000
8   -9558.629883   -9558.629883  9328.756836 -9558.629883    1.500000  -9558.629883        0.0    0.000000       -100.0000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:02:01]  --------------------------------------------------------------------------------
[07/25 21:02:01]  Iteration: 138 (25 solution, 112 counterexamples)
[07/25 21:02:06]  Generator returned sat in 2.152366 secs.
[07/25 21:02:06]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:02:06]  Improved gap from 357/16384 to 23.4375
[07/25 21:02:06]  Improved number of small numbers from 88 to 101 out of a max of 101
[07/25 21:02:06]  Verifer returned sat in 0.423318 secs.
[07/25 21:02:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9759.843262  -10183.280762  9178.581543 -9759.843262    0.086914 -10183.280762        0.0  423.437500      423.437500
1   -9759.843262  -10083.281006  9178.581543 -9759.843262  423.437500 -10083.281006        0.0  323.437744      323.437500
2   -9759.843262   -9983.280762  9178.581543 -9759.843262    0.043701  -9983.280762        0.0  223.437500      223.437500
3   -9759.843262   -9883.280762  9178.581543 -9759.843262  223.437500  -9883.280762        0.0  123.437500      123.437500
4   -9759.843262   -9783.324463  9178.581543 -9759.843262    1.500000  -9783.324463        0.0   23.481201       23.437500
5   -9759.843262   -9783.280762  9255.144043 -9759.843262    1.500000  -9783.280762        0.0   23.437500        0.000000
6   -9759.843262   -9759.843262  9330.250244 -9759.843262    1.500000  -9759.843262        0.0    0.000000      -24.893799
7   -9636.405762   -9636.449463  9330.250244 -9636.405762  123.437500  -9636.449463        0.0    0.043701       -1.456299
8   -9634.949463   -9634.949463  9330.250244 -9634.949463    1.500000  -9634.949463        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:02:07]  --------------------------------------------------------------------------------
[07/25 21:02:07]  Iteration: 139 (25 solution, 113 counterexamples)
[07/25 21:02:12]  Generator returned sat in 2.265554 secs.
[07/25 21:02:12]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:02:12]  Improved number of small numbers from 61 to 100 out of a max of 100
[07/25 21:02:12]  Verifer returned sat in 0.748982 secs.
[07/25 21:02:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9056.918457   -9262.657471  9330.250244 -9056.918457    0.086914 -9262.657471        0.0  205.739014      105.739258
1   -9056.831543   -9162.657715  9330.250244 -9056.831543  205.825928 -9162.657715        0.0  105.826172        5.826172
2   -9056.831543   -9056.874756  9330.250244 -9056.831543    0.043457 -9056.874756        0.0    0.043213      -94.173828
3   -8565.527100   -8962.657471  9330.250244 -8565.527100  491.347656 -8962.657471        0.0  397.130371      297.130615
4   -8565.483643   -8762.657715  9330.250244 -8565.483643  397.173828 -8762.657715        0.0  197.174072      197.174072
5   -8362.570801   -8762.614014  9330.250244 -8362.570801  400.086914 -8762.614014        0.0  400.043213      300.086914
6   -8362.570801   -8565.527100  9330.250244 -8362.570801  348.673828 -8565.527100        0.0  202.956299      200.086914
7   -8362.570801   -8498.396729  9330.250244 -8362.570801  198.565186 -8498.396729        0.0  135.825928      100.086914
8   -8265.483643   -8462.657715  9330.250244 -8265.483643  232.913086 -8462.657715        0.0  197.174072       97.174072
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:02:13]  --------------------------------------------------------------------------------
[07/25 21:02:13]  Iteration: 140 (25 solution, 114 counterexamples)
[07/25 21:02:22]  Generator returned sat in 6.509849 secs.
[07/25 21:02:22]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:02:24]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/25 21:02:24]  Verifer returned sat in 1.585578 secs.
[07/25 21:02:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8692.396729   -8898.309814  9330.250244 -8692.396729    0.086914 -8898.309814        0.0  205.913086      105.913086
1   -8598.309814   -8798.309814  9330.250244 -8598.309814  300.000000 -8798.309814        0.0  200.000000      100.000000
2   -8598.309814   -8692.353271  9330.250244 -8598.309814    0.043457 -8692.353271        0.0   94.043457        0.000000
3   -8201.222900   -8598.266357  9330.250244 -8201.222900  491.130371 -8598.266357        0.0  397.043457      297.086914
4   -8201.179443   -8398.309814  9330.250244 -8201.179443  397.086914 -8398.309814        0.0  197.130371      197.130371
5   -7998.266357   -8398.309814  9330.250244 -7998.266357  400.043457 -8398.309814        0.0  400.043457      300.043457
6   -7998.266357   -8201.135986  9330.250244 -7998.266357  348.543457 -8201.135986        0.0  202.869629      200.043457
7   -7826.799072   -8098.309814  9330.250244 -7826.799072  374.336914 -8098.309814        0.0  271.510742      271.510742
8   -7826.799072   -8023.929443  9330.250244 -7826.799072  150.000000 -8023.929443        0.0  197.130371      171.510742
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:02:24]  --------------------------------------------------------------------------------
[07/25 21:02:24]  Iteration: 141 (25 solution, 115 counterexamples)
[07/25 21:02:31]  Generator returned sat in 3.940118 secs.
[07/25 21:02:31]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:02:32]  Verifer returned unsat in 0.409176 secs.
[07/25 21:02:32]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:02:32]  --------------------------------------------------------------------------------
[07/25 21:02:32]  Iteration: 142 (26 solution, 115 counterexamples)
[07/25 21:02:36]  Generator returned sat in 1.875278 secs.
[07/25 21:02:36]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:02:37]  Verifer returned unsat in 0.204697 secs.
[07/25 21:02:37]  Proved solution: 
[1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:02:37]  --------------------------------------------------------------------------------
[07/25 21:02:37]  Iteration: 143 (27 solution, 115 counterexamples)
[07/25 21:02:41]  Generator returned sat in 1.906532 secs.
[07/25 21:02:41]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:02:42]  Verifer returned unsat in 0.204792 secs.
[07/25 21:02:42]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:02:42]  --------------------------------------------------------------------------------
[07/25 21:02:42]  Iteration: 144 (28 solution, 115 counterexamples)
[07/25 21:02:49]  Generator returned sat in 4.761141 secs.
[07/25 21:02:49]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:02:50]  Improved gap from 1/600 to 48.4375
[07/25 21:02:50]  Improved number of small numbers from 58 to 65 out of a max of 101
[07/25 21:02:50]  Verifer returned sat in 0.943545 secs.
[07/25 21:02:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7529.454102   -7729.451572  8675.557744 -7529.454102    0.08667 -7729.451572        0.0  199.997471       99.997471
1   -7495.069072   -7529.451572  8675.557744 -7495.069072  234.38250 -7529.451572        0.0   34.382500       34.382500
2   -7433.576572   -7487.254072  8679.682744 -7433.576572   95.87500 -7487.254072        0.0   53.677500        0.000000
3   -7385.139072   -7433.576572  8731.245244 -7385.139072  102.11500 -7433.576572        0.0   48.437500        0.000000
4   -7285.139072   -7285.141572  8731.245244 -7285.139072  148.43750 -7285.141572        0.0    0.002500        0.000000
5   -7285.131572   -7285.139072  8782.807617 -7285.131572    0.01000 -7285.139072        0.0    0.007500      -48.430127
6   -7183.581572   -7236.701416  8829.687744 -7183.581572  101.55750 -7236.701416        0.0   53.119844        0.000000
7   -7183.581572   -7183.581572  8881.250244 -7183.581572    0.01000 -7183.581572        0.0    0.000000      -48.437500
8   -7132.301572   -7135.144043  8881.250244 -7132.301572   51.28000 -7135.144043        0.0    2.842471      -97.157500
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:02:51]  --------------------------------------------------------------------------------
[07/25 21:02:51]  Iteration: 145 (28 solution, 116 counterexamples)
[07/25 21:02:56]  Generator returned sat in 2.346837 secs.
[07/25 21:02:56]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:02:56]  Improved gap from 759/16 to 48.4375
[07/25 21:02:57]  Improved number of small numbers from 55 to 61 out of a max of 101
[07/25 21:02:57]  Verifer returned sat in 1.143002 secs.
[07/25 21:02:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6279.161621   -6472.034072  7425.265244 -6279.161621    0.086426 -6472.034072        0.0  192.872451       99.997451
1   -6220.474072   -6279.159072  7425.265244 -6220.474072  251.560000 -6279.159072        0.0   58.685000       58.685000
2   -6179.159072   -6220.471572  7425.265244 -6179.159072  100.000000 -6220.471572        0.0   41.312500        0.000000
3   -6130.721572   -6179.159072  7476.827744 -6130.721572   89.750000 -6179.159072        0.0   48.437500        0.000000
4   -6030.721572   -6030.724072  7476.827744 -6030.721572  148.437500 -6030.724072        0.0    0.002500        0.000000
5   -6030.714072   -6030.721572  7528.390244 -6030.714072    0.010000 -6030.721572        0.0    0.007500      -48.430000
6   -5933.846572   -5982.284072  7579.952744 -5933.846572   96.875000 -5982.284072        0.0   48.437500        0.000000
7   -5933.846572   -5933.846572  7631.515137 -5933.846572    0.010000 -5933.846572        0.0    0.000000      -48.437607
8   -5883.407822   -5885.408936  7631.515137 -5883.407822   50.438750 -5885.408936        0.0    2.001113      -97.998857
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:02:58]  --------------------------------------------------------------------------------
[07/25 21:02:58]  Iteration: 146 (28 solution, 117 counterexamples)
[07/25 21:03:02]  Generator returned sat in 2.055341 secs.
[07/25 21:03:02]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:03:03]  Improved gap from 759/16 to 48.4375
[07/25 21:03:04]  Improved number of small numbers from 57 to 85 out of a max of 101
[07/25 21:03:04]  Verifer returned sat in 1.119829 secs.
[07/25 21:03:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6517.554199   -6560.868896  7514.152832 -6517.554199    0.086426 -6560.868896        0.0   43.314697        0.002461
1   -6517.554199   -6517.556396  7514.152832 -6517.554199    0.002500 -6517.556396        0.0    0.002197      -99.997539
2   -6217.556396   -6318.671572  7514.152832 -6217.556396  300.000000 -6318.671572        0.0  101.115176      100.000264
3   -6217.556396   -6265.993896  7514.152832 -6217.556396  101.114990 -6265.993896        0.0   48.437500        0.000264
4   -6117.556396   -6117.559072  7514.152832 -6117.556396  148.437500 -6117.559072        0.0    0.002676        0.000264
5   -6117.549072   -6117.556572  7565.715088 -6117.549072    0.010000 -6117.556572        0.0    0.007500      -48.430156
6   -6015.999072   -6064.436768  7612.595244 -6015.999072  101.557500 -6064.436768        0.0   48.437695        0.000000
7   -6015.999072   -6015.999072  7664.157715 -6015.999072    0.010000 -6015.999072        0.0    0.000000      -48.437529
8   -5964.219072   -5967.561523  7664.157959 -5964.219072   51.780000 -5967.561523        0.0    3.342451      -96.657285
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:03:04]  --------------------------------------------------------------------------------
[07/25 21:03:04]  Iteration: 147 (28 solution, 118 counterexamples)
[07/25 21:03:09]  Generator returned sat in 2.528588 secs.
[07/25 21:03:10]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:03:11]  Improved gap from 0 to 35.9375
[07/25 21:03:11]  Improved number of small numbers from 55 to 64 out of a max of 101
[07/25 21:03:11]  Verifer returned sat in 1.629382 secs.
[07/25 21:03:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6501.900635   -6664.608896  7342.720459 -6501.900635    0.086182 -6664.608896        0.0  162.708262       76.354310
1   -6501.817230   -6501.858896  7342.720459 -6501.817230  162.791667 -6501.858896        0.0    0.041667      -23.562285
2   -6440.317230   -6478.254730  7404.782744 -6440.317230   61.541667 -6478.254730        0.0   37.937500        0.000000
3   -6362.108896   -6440.317230  7426.574411 -6362.108896  116.145833 -6440.317230        0.0   78.208333        0.000000
4   -6326.171396   -6362.108896  7490.636911 -6326.171396  114.145833 -6362.108896        0.0   35.937500        0.000000
5   -6290.233896   -6326.171396  7554.699411 -6290.233896   71.875000 -6326.171396        0.0   35.937500        0.000000
6   -6248.129730   -6290.233896  7612.595215 -6248.129730   78.041667 -6290.233896        0.0   42.104167       -0.000029
7   -6213.192230   -6248.088063  7676.615967 -6213.192230   77.041667 -6248.088063        0.0   34.895833       -1.041777
8   -6134.067230   -6212.150391  7676.615967 -6134.067230  114.020833 -6212.150391        0.0   78.083161      -21.916777
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:03:12]  --------------------------------------------------------------------------------
[07/25 21:03:12]  Iteration: 148 (28 solution, 119 counterexamples)
[07/25 21:03:20]  Generator returned sat in 5.063226 secs.
[07/25 21:03:20]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:03:20]  Improved gap from 0 to 100
[07/25 21:03:20]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/25 21:03:20]  Verifer returned sat in 0.449880 secs.
[07/25 21:03:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6787.706299   -6936.206543  7652.128906 -6787.706299    0.086182 -6936.206543        0.0  148.500244       99.957031
1   -6787.620361   -6787.663330  7652.128906 -6787.620361  148.586182 -6787.663330        0.0    0.042969        0.042969
2   -6687.706299   -6687.749268  7652.128906 -6687.706299   99.957031 -6687.749268        0.0    0.042969       -0.042969
3   -6587.663330   -6687.663330  7652.128906 -6587.663330  100.085938 -6687.663330        0.0  100.000000        0.000000
4   -6389.077148   -6587.663330  7652.128906 -6389.077148  298.586182 -6587.663330        0.0  198.586182       98.586182
5   -6389.077148   -6389.120117  7652.128906 -6389.077148    1.500000 -6389.120117        0.0    0.042969       -1.413818
6   -6387.620117   -6387.663330  7652.128906 -6387.620117    1.500000 -6387.663330        0.0    0.043213      -99.956787
7   -6086.913330   -6187.663330  7652.128906 -6086.913330  300.750000 -6187.663330        0.0  100.750000      100.750000
8   -5637.288330   -6087.663330  7652.128906 -5637.288330  550.375000 -6087.663330        0.0  450.375000      450.375000
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/25 21:03:21]  --------------------------------------------------------------------------------
[07/25 21:03:21]  Iteration: 149 (28 solution, 120 counterexamples)
[07/25 21:03:27]  Generator returned sat in 3.634867 secs.
[07/25 21:03:27]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:03:27]  Improved gap from 1/300 to 48.4375
[07/25 21:03:28]  Improved number of small numbers from 57 to 101 out of a max of 101
[07/25 21:03:28]  Verifer returned sat in 0.407259 secs.
[07/25 21:03:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7087.691406   -7187.690186  7650.592041 -7087.691406    0.086182 -7187.690186        0.0   99.998779       99.998779
1   -6739.253906   -7087.690186  7650.592041 -6739.253906  448.436279 -7087.690186        0.0  348.436279      348.436279
2   -6739.252686   -6987.807861  7650.592041 -6739.252686  348.437500 -6987.807861        0.0  248.555176      248.437500
3   -6739.252686   -6939.372803  7650.592041 -6739.252686    0.001221 -6939.372803        0.0  200.120117      148.437500
4   -6739.252686   -6787.691406  7650.592041 -6739.252686    0.010000 -6787.691406        0.0   48.438721       48.437500
5   -6739.252686   -6787.690186  7702.154541 -6739.252686    0.010000 -6787.690186        0.0   48.437500        0.000000
6   -6686.131348   -6739.252686  7749.031982 -6686.131348  101.558838 -6739.252686        0.0   53.121338       -0.001221
7   -6637.692627   -6686.130127  7800.594482 -6637.692627  101.560059 -6686.130127        0.0   48.437500        0.000000
8   -6637.692627   -6637.692627  7800.594482 -6637.692627    0.010000 -6637.692627        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:03:28]  --------------------------------------------------------------------------------
[07/25 21:03:28]  Iteration: 150 (28 solution, 121 counterexamples)
[07/25 21:03:34]  Generator returned sat in 2.703497 secs.
[07/25 21:03:34]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:03:34]  Improved gap from 767/16 to 48.4375
[07/25 21:03:34]  Improved number of small numbers from 59 to 101 out of a max of 101
[07/25 21:03:34]  Verifer returned sat in 0.412678 secs.
[07/25 21:03:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7187.253906   -7486.132080  8148.023926 -7187.253906    0.086182 -7486.132080        0.0  298.878174      198.878174
1   -6937.695312   -7286.132080  8148.023926 -6937.695312  548.436768 -7286.132080        0.0  348.436768      348.436768
2   -6937.694580   -7187.253174  8148.023926 -6937.694580  348.437500 -7187.253174        0.0  249.558594      248.437500
3   -6937.694580   -7138.817139  8148.023926 -6937.694580    0.000977 -7138.817139        0.0  201.122559      148.437500
4   -6937.694580   -6986.132812  8148.023926 -6937.694580    0.010000 -6986.132812        0.0   48.438232       48.437500
5   -6937.694580   -6986.132080  8199.586426 -6937.694580    0.010000 -6986.132080        0.0   48.437500        0.000000
6   -6884.571533   -6937.694580  8246.462646 -6884.571533  101.560547 -6937.694580        0.0   53.123047       -0.000732
7   -6836.133301   -6884.570801  8298.025146 -6836.133301  101.561279 -6884.570801        0.0   48.437500        0.000000
8   -6836.133301   -6836.133301  8298.025146 -6836.133301    0.010000 -6836.133301        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:03:35]  --------------------------------------------------------------------------------
[07/25 21:03:35]  Iteration: 151 (28 solution, 122 counterexamples)
[07/25 21:03:40]  Generator returned sat in 2.443206 secs.
[07/25 21:03:40]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:03:40]  Improved gap from 767/16 to 48.4375
[07/25 21:03:41]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:03:41]  Verifer returned sat in 0.364312 secs.
[07/25 21:03:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6774.131104   -6974.131104  7636.022949 -6774.131104    0.086182 -6974.131104        0.0  200.000000      100.000000
1   -6618.444580   -6774.131104  7636.022949 -6618.444580  355.686523 -6774.131104        0.0  155.686523      155.686523
2   -6425.693604   -6774.130127  7636.022949 -6425.693604  348.437500 -6774.130127        0.0  348.436523      248.437500
3   -6425.693604   -6618.443604  7636.022949 -6425.693604    0.000977 -6618.443604        0.0  192.750000      148.437500
4   -6425.693604   -6478.817627  7636.022949 -6425.693604    0.010000 -6478.817627        0.0   53.124023       48.437500
5   -6425.693604   -6474.131104  7687.585449 -6425.693604    0.010000 -6474.131104        0.0   48.437500        0.000000
6   -6425.693604   -6425.693604  7739.147949 -6425.693604    0.010000 -6425.693604        0.0    0.000000      -48.437500
7   -6328.818604   -6377.256104  7790.710449 -6328.818604   96.875000 -6377.256104        0.0   48.437500        0.000000
8   -6328.818604   -6328.818604  7790.710449 -6328.818604    0.010000 -6328.818604        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:03:41]  --------------------------------------------------------------------------------
[07/25 21:03:41]  Iteration: 152 (28 solution, 123 counterexamples)
[07/25 21:03:51]  Generator returned sat in 7.050843 secs.
[07/25 21:03:51]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:03:51]  Improved gap from 0 to 100
[07/25 21:03:52]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/25 21:03:52]  Verifer returned sat in 0.523579 secs.
[07/25 21:03:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7481.050537   -7581.029297  7736.419434 -7481.050537    0.086182 -7581.029297        0.0   99.978760       -0.020996
1   -7381.050293   -7481.029297  7736.419434 -7381.050293  199.979004 -7481.029297        0.0   99.979004       -0.020752
2   -6881.237793   -7381.029297  7736.419434 -6881.237793  599.791504 -7381.029297        0.0  499.791504      399.791748
3   -6881.237793   -7280.633545  7736.419434 -6881.237793  499.770752 -7280.633545        0.0  399.395752      299.791748
4   -6880.550293   -7081.029541  7736.419434 -6880.550293  400.083252 -7081.029541        0.0  200.479248      200.479248
5   -6680.988037   -7081.008545  7736.419434 -6680.988037  400.041504 -7081.008545        0.0  400.020508      300.041504
6   -6680.988037   -6881.217041  7736.419434 -6680.988037    1.000000 -6881.217041        0.0  200.229004      200.041504
7   -6680.988037   -6814.112793  7736.419434 -6680.988037  200.208252 -6814.112793        0.0  133.124756      100.041504
8   -6580.550293   -6781.029541  7736.419434 -6580.550293  233.562500 -6781.029541        0.0  200.479248      100.479248
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:03:52]  --------------------------------------------------------------------------------
[07/25 21:03:52]  Iteration: 153 (28 solution, 124 counterexamples)
[07/25 21:03:59]  Generator returned sat in 4.432207 secs.
[07/25 21:04:00]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:04:00]  Improved gap from 353/8192 to 23.4375
[07/25 21:04:00]  Improved number of small numbers from 57 to 101 out of a max of 101
[07/25 21:04:00]  Verifer returned sat in 0.447911 secs.
[07/25 21:04:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7157.592041   -7580.986328  8036.452637 -7157.592041    0.085938 -7580.986328        0.0  423.394287      423.394287
1   -7157.592041   -7480.986328  8036.452637 -7157.592041  423.394287 -7480.986328        0.0  323.394287      323.394287
2   -7157.592041   -7381.029541  8036.452637 -7157.592041    0.042969 -7381.029541        0.0  223.437500      223.394287
3   -7157.548828   -7380.986328  8036.452637 -7157.548828  223.480713 -7380.986328        0.0  223.437500      123.437500
4   -7157.548828   -7181.029297  8036.452637 -7157.548828  200.000000 -7181.029297        0.0   23.480469       23.437500
5   -7157.548828   -7180.986328  8113.015137 -7157.548828    1.000000 -7180.986328        0.0   23.437500        0.000000
6   -7157.548828   -7157.548828  8189.577637 -7157.548828    1.000000 -7157.548828        0.0    0.000000      -23.437500
7   -6934.111328   -7134.111084  8189.577637 -6934.111328  223.437500 -7134.111084        0.0  199.999756      100.000000
8   -6934.111328   -7034.111084  8189.577637 -6934.111328   46.918213 -7034.111084        0.0   99.999756        0.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:04:01]  --------------------------------------------------------------------------------
[07/25 21:04:01]  Iteration: 154 (28 solution, 125 counterexamples)
[07/25 21:04:12]  Generator returned sat in 8.788182 secs.
[07/25 21:04:12]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:04:13]  Improved gap from 1/150 to 48.4375
[07/25 21:04:13]  Improved number of small numbers from 73 to 101 out of a max of 101
[07/25 21:04:13]  Verifer returned sat in 0.310999 secs.
[07/25 21:04:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7580.983643   -7580.986328  8036.452637 -7580.983643    0.085938 -7580.986328        0.0    0.002686        0.002686
1   -7180.986328   -7580.986328  8036.452637 -7180.986328  400.000000 -7580.986328        0.0  400.000000      300.000000
2   -7132.546387   -7380.986572  8036.452637 -7132.546387  448.439941 -7380.986572        0.0  248.440186      248.439941
3   -7132.546387   -7331.661133  8036.452637 -7132.546387  248.440000 -7331.661133        0.0  199.114746      148.439941
4   -7132.546387   -7180.986572  8036.452637 -7132.546387    0.010000 -7180.986572        0.0   48.440186       48.439941
5   -7132.546387   -7180.983887  8088.012695 -7132.546387    0.010000 -7180.983887        0.0   48.437500        0.000000
6   -7132.546387   -7132.546387  8139.574951 -7132.546387    0.010000 -7132.546387        0.0    0.000000      -48.437744
7   -7030.989014   -7079.426514  8186.455322 -7030.989014  101.557373 -7079.426514        0.0   48.437500        0.000000
8   -7030.989014   -7030.989014  8186.455322 -7030.989014    0.010000 -7030.989014        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:04:13]  --------------------------------------------------------------------------------
[07/25 21:04:13]  Iteration: 155 (28 solution, 126 counterexamples)
[07/25 21:04:24]  Generator returned sat in 7.816204 secs.
[07/25 21:04:24]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:04:25]  Improved gap from 0 to 0
[07/25 21:04:25]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:04:25]  Verifer returned sat in 0.383027 secs.
[07/25 21:04:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7186.938965   -7588.460449  8036.452637 -7186.938965    0.085938 -7588.460449        0.0  401.521484      401.521484
1   -7186.938965   -7488.460449  8036.452637 -7186.938965  401.521484 -7488.460449        0.0  301.521484      301.521484
2   -7186.938965   -7388.460449  8036.452637 -7186.938965  301.521484 -7388.460449        0.0  201.521484      201.521484
3   -7186.938965   -7288.460449  8036.452637 -7186.938965  201.500000 -7288.460449        0.0  101.521484      101.521484
4   -7186.938965   -7188.460449  8036.452637 -7186.938965    1.500000 -7188.460449        0.0    1.521484        1.521484
5   -7186.938965   -7186.960449  8134.909668 -7186.938965    1.500000 -7186.960449        0.0    0.021484       -0.021484
6   -7186.460449   -7186.917480  8234.452637 -7186.460449    0.500000 -7186.917480        0.0    0.457031        0.000000
7   -7185.417480   -7185.438965  8333.388184 -7185.417480    1.500000 -7185.438965        0.0    0.021484       -0.021484
8   -7183.938965   -7185.395996  8333.388184 -7183.938965    1.500000 -7185.395996        0.0    1.457031      -98.542969
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:04:25]  --------------------------------------------------------------------------------
[07/25 21:04:25]  Iteration: 156 (28 solution, 127 counterexamples)
[07/25 21:04:31]  Generator returned sat in 2.941658 secs.
[07/25 21:04:31]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:04:31]  Improved gap from 11/256 to 0
[07/25 21:04:32]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/25 21:04:32]  Verifer returned sat in 0.431511 secs.
[07/25 21:04:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7025.443359   -7525.486328  7979.813965 -7025.443359    0.085693 -7525.486328        0.0  500.042969      500.042725
1   -7025.443359   -7425.486328  7979.813965 -7025.443359  500.042725 -7425.486328        0.0  400.042969      400.042725
2   -7025.443359   -7325.486328  7979.813965 -7025.443359    0.042725 -7325.486328        0.0  300.042969      300.042725
3   -7025.443359   -7325.486084  7979.813965 -7025.443359  201.500000 -7325.486084        0.0  300.042725      200.042725
4   -7025.443359   -7125.486328  7979.813965 -7025.443359    1.500000 -7125.486328        0.0  100.042969      100.042725
5   -7025.443359   -7026.943359  7979.813965 -7025.443359    1.500000 -7026.943359        0.0    1.500000        0.042725
6   -7025.443359   -7025.486084  8079.770996 -7025.443359    1.500000 -7025.486084        0.0    0.042725       -0.000244
7   -7023.986084   -7025.443115  8178.271240 -7023.986084    1.500000 -7025.443115        0.0    1.457031       -0.042725
8   -7023.943115   -7023.943115  8178.271240 -7023.943115    1.500000 -7023.943115        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:04:32]  --------------------------------------------------------------------------------
[07/25 21:04:32]  Iteration: 157 (28 solution, 128 counterexamples)
[07/25 21:04:42]  Generator returned sat in 6.858385 secs.
[07/25 21:04:42]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 21:04:43]  Improved gap from 0 to 48.4375
[07/25 21:04:43]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:04:43]  Verifer returned sat in 0.708001 secs.
[07/25 21:04:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7431.871826   -7531.786133  7986.114014 -7431.871826    0.085693 -7531.786133        0.0   99.914307       99.914307
1   -7331.871826   -7431.786133  7986.114014 -7331.871826  199.914307 -7431.786133        0.0   99.914307       99.914307
2   -7083.348633   -7331.786133  7986.114014 -7083.348633  348.437500 -7331.786133        0.0  248.437500      248.437500
3   -7083.348633   -7279.098633  7986.114014 -7083.348633   98.875000 -7279.098633        0.0  195.750000      148.437500
4   -7083.348633   -7132.177246  7986.114014 -7083.348633   51.437500 -7132.177246        0.0   48.828613       48.437500
5   -7083.348633   -7131.786133  8037.676514 -7083.348633   27.718750 -7131.786133        0.0   48.437500        0.000000
6   -7030.786133   -7083.348633  8085.114014 -7030.786133  101.000000 -7083.348633        0.0   52.562500        0.000000
7   -6984.473633   -7030.700439  8136.590820 -6984.473633   98.875000 -7030.700439        0.0   46.226807       -2.210693
8   -6979.262939   -6982.262939  8136.590820 -6979.262939   51.437500 -6982.262939        0.0    3.000000      -97.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:04:43]  --------------------------------------------------------------------------------
[07/25 21:04:43]  Iteration: 158 (28 solution, 129 counterexamples)
[07/25 21:04:54]  Generator returned sat in 7.916871 secs.
[07/25 21:04:54]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 21:04:57]  Improved gap from 175/4096 to 40.625
[07/25 21:04:57]  Improved number of small numbers from 38 to 101 out of a max of 101
[07/25 21:04:57]  Verifer returned sat in 2.354586 secs.
[07/25 21:04:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8259.836182   -8562.107666  8487.114014 -8259.836182    0.085205 -8562.107666   2.314209  299.957275      199.957520
1   -8259.836182   -8362.107910  8487.114014 -8259.836182    0.042480 -8362.107910   2.314209   99.957520       99.957520
2   -8259.750977   -8262.107910  8487.114014 -8259.750977  100.042725 -8262.107910   2.314209    0.042725        0.042725
3   -7997.964600   -8162.107910  8487.114014 -7997.964600  261.829102 -8162.107910   2.314209  161.829102      161.829102
4   -7997.964600   -8068.778564  8487.114014 -7997.964600  132.914551 -8068.778564   2.314209   68.499756       61.829102
5   -7997.964600   -8062.107910  8525.284912 -7997.964600   68.457275 -8062.107910   2.314209   61.829102        0.000000
6   -7959.293701   -8000.278809  8584.659912 -7959.293701  100.500000 -8000.278809   2.314209   38.670898       -1.954102
7   -7916.550049   -7959.653809  8643.870117 -7916.550049   81.414551 -7959.653809   2.314209   40.789551       -0.000244
8   -7914.632324   -7918.821533  8643.870117 -7914.632324   42.707275 -7918.821533   2.314209    1.875000      -98.082520
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:04:57]  --------------------------------------------------------------------------------
[07/25 21:04:57]  Iteration: 159 (28 solution, 130 counterexamples)
[07/25 21:05:03]  Generator returned sat in 2.330702 secs.
[07/25 21:05:03]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 21:05:06]  Improved gap from 40959/1024 to 40.625
[07/25 21:05:06]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/25 21:05:06]  Verifer returned sat in 3.259006 secs.
[07/25 21:05:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8979.103516   -9038.435547  8487.113770 -8979.103516    0.084961 -9038.435547        0.0   59.332031       59.332031
1   -8938.435791   -8979.060791  8487.114014 -8938.435791   99.999756 -8979.060791        0.0   40.625000        0.000000
2   -8838.393311   -8838.435791  8487.114014 -8838.393311  140.667480 -8838.435791        0.0    0.042480        0.042480
3   -8577.272705   -8738.435791  8487.114014 -8577.272705  261.163086 -8738.435791        0.0  161.163086      161.163086
4   -8577.272705   -8645.606201  8487.114014 -8577.272705  132.581543 -8645.606201        0.0   68.333496       61.163086
5   -8577.272705   -8638.435791  8525.950928 -8577.272705   68.290771 -8638.435791        0.0   61.163086        0.000000
6   -8537.435791   -8577.272705  8584.994629 -8537.435791  101.000000 -8577.272705        0.0   39.836914       -1.119385
7   -8495.691162   -8536.316406  8644.369385 -8495.691162   81.581543 -8536.316406        0.0   40.625244        0.000000
8   -8493.525635   -8495.648926  8644.369385 -8493.525635   42.790771 -8495.648926        0.0    2.123291      -97.834473
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:05:07]  --------------------------------------------------------------------------------
[07/25 21:05:07]  Iteration: 160 (28 solution, 131 counterexamples)
[07/25 21:05:16]  Generator returned sat in 6.139899 secs.
[07/25 21:05:16]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 21:05:18]  Improved gap from 87/4096 to 29.6875
[07/25 21:05:18]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 21:05:18]  Verifer returned sat in 1.969523 secs.
[07/25 21:05:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8941.185547   -8941.185547  8417.182129 -8941.185547    0.084717 -8941.185547        0.0    0.000000        0.000000
1   -8911.498047   -8941.185547  8487.494629 -8911.498047   29.687500 -8941.185547        0.0   29.687500        0.000000
2   -8611.519531   -8811.498047  8487.494629 -8611.519531  329.666016 -8811.498047        0.0  199.978516      199.978516
3   -8611.519531   -8715.808105  8487.494629 -8611.519531    0.021240 -8715.808105        0.0  104.288574       99.978516
4   -8611.519531   -8611.540527  8487.494629 -8611.519531    1.000000 -8611.540527        0.0    0.020996       -0.021484
5   -8610.540527   -8611.498047  8557.807129 -8610.540527    1.000000 -8611.498047        0.0    0.957520      -28.729980
6   -8508.998047   -8581.810547  8584.994629 -8508.998047  102.500000 -8581.810547        0.0   72.812500        0.000000
7   -8461.561768   -8508.998047  8637.558350 -8461.561768  120.248779 -8508.998047        0.0   47.436279        0.000000
8   -8461.561768   -8461.561768  8637.558350 -8461.561768    1.000000 -8461.561768        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:05:19]  --------------------------------------------------------------------------------
[07/25 21:05:19]  Iteration: 161 (28 solution, 132 counterexamples)
[07/25 21:05:27]  Generator returned sat in 5.098788 secs.
[07/25 21:05:27]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 21:05:27]  Improved gap from 347/16384 to 100
[07/25 21:05:27]  Improved number of small numbers from 44 to 101 out of a max of 101
[07/25 21:05:27]  Verifer returned sat in 0.332228 secs.
[07/25 21:05:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9573.271973   -9647.832520  9123.829102 -9573.271973    0.084717 -9647.832520        0.0   74.560547       74.560547
1   -9547.853516   -9573.271729  9123.829102 -9547.853516   99.979004 -9573.271729        0.0   25.418213       -0.020996
2   -9347.853271   -9547.832520  9123.829102 -9347.853271  225.418457 -9547.832520        0.0  199.979248       99.979248
3   -9347.853271   -9347.874756  9123.829102 -9347.853271    0.021240 -9347.874756        0.0    0.021484       -0.020752
4   -9346.874756   -9347.832275  9123.829102 -9346.874756    1.000000 -9347.832275        0.0    0.957520      -99.042236
5   -9119.892822   -9147.832520  9123.829102 -9119.892822  227.939453 -9147.832520        0.0   27.939697       27.939697
6   -8631.862793   -9119.871582  9123.829102 -8631.862793  515.969727 -9119.871582        0.0  488.008789      415.969727
7   -8631.862793   -8947.832520  9123.829102 -8631.862793  487.988037 -8947.832520        0.0  315.969727      315.969727
8   -8631.862793   -8947.832520  9123.829102 -8631.862793    1.000000 -8947.832520        0.0  315.969727      215.969727
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:05:28]  --------------------------------------------------------------------------------
[07/25 21:05:28]  Iteration: 162 (28 solution, 133 counterexamples)
[07/25 21:05:37]  Generator returned sat in 6.257875 secs.
[07/25 21:05:37]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 21:05:38]  Improved gap from 347/16384 to 1.5625
[07/25 21:05:38]  Improved number of small numbers from 74 to 101 out of a max of 101
[07/25 21:05:38]  Verifer returned sat in 0.475742 secs.
[07/25 21:05:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -9035.202393   -9135.159912  8828.454102 -9035.202393    0.084717 -9135.159912        0.0  99.957520       99.957275
1   -8935.202148   -9035.159912  8828.454102 -8935.202148  199.957764 -9035.159912        0.0  99.957764       99.957520
2   -8835.202148   -8935.159668  8828.454102 -8835.202148  199.957764 -8935.159668        0.0  99.957520       99.957520
3   -8736.574951   -8835.159668  8828.454102 -8736.574951  198.584717 -8835.159668        0.0  98.584717       98.584717
4   -8736.574951   -8736.617676  8828.454102 -8736.574951    2.000000 -8736.617676        0.0   0.042725       -1.415283
5   -8735.117676   -8735.159668  8926.891357 -8735.117676    1.500000 -8735.159668        0.0   0.041992       -1.520752
6   -8733.159668   -8733.202393  9024.538818 -8733.159668    2.000000 -8733.202393        0.0   0.042725       -1.915283
7   -8731.202393   -8731.244385  9122.976318 -8731.202393    2.000000 -8731.244385        0.0   0.041992       -1.520508
8   -8729.244385   -8729.681885  9122.976318 -8729.244385    2.000000 -8729.681885        0.0   0.437500      -99.562500
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:05:38]  --------------------------------------------------------------------------------
[07/25 21:05:38]  Iteration: 163 (28 solution, 134 counterexamples)
[07/25 21:05:44]  Generator returned sat in 2.566873 secs.
[07/25 21:05:44]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:05:45]  Verifer returned unsat in 0.301256 secs.
[07/25 21:05:45]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:05:45]  --------------------------------------------------------------------------------
[07/25 21:05:45]  Iteration: 164 (29 solution, 134 counterexamples)
[07/25 21:05:56]  Generator returned sat in 8.429821 secs.
[07/25 21:05:56]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:05:57]  Improved gap from 347/8192 to 0
[07/25 21:05:57]  Improved number of small numbers from 49 to 101 out of a max of 101
[07/25 21:05:57]  Verifer returned sat in 0.388517 secs.
[07/25 21:05:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8085.471436   -8587.013672  8180.308350 -8085.471436    0.084473 -8587.013672        0.0  501.542236       401.54248
1   -8085.471436   -8487.013916  8180.308350 -8085.471436  501.542236 -8487.013916        0.0  401.542480       301.54248
2   -8085.471436   -8287.013916  8180.308350 -8085.471436    0.042236 -8287.013916        0.0  201.542480       201.54248
3   -8085.471436   -8187.013916  8180.308350 -8085.471436  201.542236 -8187.013916        0.0  101.542480       101.54248
4   -8085.471436   -8187.013916  8180.308350 -8085.471436    1.500000 -8187.013916        0.0  101.542480         1.54248
5   -8085.471436   -8087.013916  8278.765869 -8085.471436    1.500000 -8087.013916        0.0    1.542480         0.00000
6   -8085.471436   -8085.471436  8377.808350 -8085.471436    1.500000 -8085.471436        0.0    0.000000        -0.95752
7   -8083.971436   -8084.513916  8477.265869 -8083.971436    1.500000 -8084.513916        0.0    0.542480         0.00000
8   -8083.971436   -8083.971436  8477.265869 -8083.971436    0.500000 -8083.971436        0.0    0.000000      -100.00000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:05:57]  --------------------------------------------------------------------------------
[07/25 21:05:57]  Iteration: 165 (29 solution, 135 counterexamples)
[07/25 21:06:03]  Generator returned sat in 2.901418 secs.
[07/25 21:06:03]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:06:04]  Improved gap from 1961/2048 to 1.5625
[07/25 21:06:04]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 21:06:04]  Verifer returned sat in 0.503273 secs.
[07/25 21:06:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8185.460693   -8687.023438  8180.765869 -8185.460693    0.084473 -8687.023438        0.0  501.562744      501.562744
1   -8185.460693   -8587.023438  8180.765869 -8185.460693  501.562500 -8587.023438        0.0  401.562744      401.562744
2   -8185.460693   -8487.023438  8180.765869 -8185.460693    0.041992 -8487.023438        0.0  301.562744      301.562744
3   -8185.460693   -8487.023193  8180.765869 -8185.460693    0.010498 -8487.023193        0.0  301.562500      201.562744
4   -8185.460693   -8287.023438  8180.765869 -8185.460693    2.000000 -8287.023438        0.0  101.562744      101.562744
5   -8185.460693   -8187.034180  8180.765869 -8185.460693    0.500000 -8187.034180        0.0    1.573486        1.562744
6   -8185.460693   -8187.023438  8279.203125 -8185.460693    0.500000 -8187.023438        0.0    1.562744        0.000000
7   -8185.460693   -8185.460693  8377.640625 -8185.460693    0.500000 -8185.460693        0.0    0.000000       -1.562500
8   -8183.460693   -8183.898193  8377.640625 -8183.460693    2.000000 -8183.898193        0.0    0.437500      -99.562500
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:06:04]  --------------------------------------------------------------------------------
[07/25 21:06:04]  Iteration: 166 (29 solution, 136 counterexamples)
[07/25 21:06:12]  Generator returned sat in 3.887521 secs.
[07/25 21:06:12]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:06:12]  Improved gap from 25/16 to 1.5625
[07/25 21:06:12]  Improved number of small numbers from 85 to 101 out of a max of 101
[07/25 21:06:12]  Verifer returned sat in 0.400872 secs.
[07/25 21:06:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8185.460693   -8687.023193  8281.628418 -8185.460693    0.084473 -8687.023193        0.0  501.562500        501.5625
1   -8185.460693   -8687.023193  8281.628418 -8185.460693  400.497314 -8687.023193        0.0  501.562500        401.5625
2   -8185.460693   -8487.023193  8281.628418 -8185.460693    0.041748 -8487.023193        0.0  301.562500        301.5625
3   -8185.460693   -8487.023193  8281.628418 -8185.460693    0.010254 -8487.023193        0.0  301.562500        201.5625
4   -8185.460693   -8333.895508  8281.628418 -8185.460693    2.000000 -8333.895508        0.0  148.434814        101.5625
5   -8185.460693   -8187.463379  8281.628418 -8185.460693    2.000000 -8187.463379        0.0    2.002686          1.5625
6   -8185.460693   -8187.023193  8380.065918 -8185.460693    2.000000 -8187.023193        0.0    1.562500          0.0000
7   -8185.023193   -8185.460693  8478.503418 -8185.023193    2.000000 -8185.460693        0.0    0.437500         -1.1250
8   -8183.460693   -8183.898193  8478.503418 -8183.460693    2.000000 -8183.898193        0.0    0.437500        -99.5625
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:06:13]  --------------------------------------------------------------------------------
[07/25 21:06:13]  Iteration: 167 (29 solution, 137 counterexamples)
[07/25 21:06:20]  Generator returned sat in 4.438925 secs.
[07/25 21:06:20]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:06:21]  Improved gap from 0 to 4.6875
[07/25 21:06:21]  Improved number of small numbers from 42 to 101 out of a max of 101
[07/25 21:06:21]  Verifer returned sat in 0.813027 secs.
[07/25 21:06:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8337.092529   -8477.377686  8031.739746 -8337.092529    0.084473 -8477.377686        0.0  140.285156      100.041992
1   -8337.092529   -8337.134766  8031.739746 -8337.092529    0.021240 -8337.134766        0.0    0.042236        0.041992
2   -8337.092529   -8337.092529  8127.010254 -8337.092529    0.020996 -8337.092529        0.0    0.000000       -4.687500
3   -8332.384033   -8332.405029  8222.322754 -8332.384033    4.708496 -8332.405029        0.0    0.020996       -4.666504
4   -8187.432373   -8262.294189  8222.322754 -8187.432373  144.972656 -8262.294189        0.0   74.861816       40.285156
5   -8187.432373   -8227.717529  8282.037598 -8187.432373   74.840576 -8227.717529        0.0   40.285156        0.000000
6   -8118.342529   -8187.432373  8311.926758 -8118.342529  109.375000 -8187.432373        0.0   69.089844       -1.020996
7   -8112.946045   -8117.321533  8406.920410 -8112.946045   74.486328 -8117.321533        0.0    4.375488       -0.630859
8   -7972.348877   -8112.314941  8406.920410 -7972.348877  144.972656 -8112.314941        0.0  139.966064       39.966309
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:06:22]  --------------------------------------------------------------------------------
[07/25 21:06:22]  Iteration: 168 (29 solution, 138 counterexamples)
[07/25 21:06:28]  Generator returned sat in 3.264973 secs.
[07/25 21:06:28]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:06:29]  Improved gap from 0 to 46.875
[07/25 21:06:29]  Improved number of small numbers from 70 to 101 out of a max of 101
[07/25 21:06:29]  Verifer returned sat in 0.832231 secs.
[07/25 21:06:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8631.751221   -8994.708740  8205.676758 -8631.751221    0.084229 -8994.708740        0.0  362.957520      263.332520
1   -8495.168213   -8795.083984  8205.676758 -8495.168213  499.540527 -8795.083984        0.0  299.915771      299.915527
2   -8495.168213   -8795.083740  8205.676758 -8495.168213    0.042236 -8795.083740        0.0  299.915527      199.915527
3   -8495.168213   -8631.708740  8205.676758 -8495.168213  299.915283 -8631.708740        0.0  136.540527       99.915527
4   -8448.208740   -8495.125977  8205.676758 -8448.208740  183.500000 -8495.125977        0.0   46.917236       46.875000
5   -8448.208740   -8495.083740  8258.801758 -8448.208740    1.000000 -8495.083740        0.0   46.875000        0.000000
6   -8448.208740   -8448.208740  8311.926758 -8448.208740    1.000000 -8448.208740        0.0    0.000000      -46.875000
7   -8354.458740   -8401.333740  8365.051758 -8354.458740   93.750000 -8401.333740        0.0   46.875000        0.000000
8   -8354.458740   -8354.458740  8365.051758 -8354.458740    1.000000 -8354.458740        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:06:30]  --------------------------------------------------------------------------------
[07/25 21:06:30]  Iteration: 169 (29 solution, 139 counterexamples)
[07/25 21:06:37]  Generator returned sat in 3.712951 secs.
[07/25 21:06:37]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:06:40]  Improved gap from 0 to 40.625
[07/25 21:06:40]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/25 21:06:40]  Verifer returned sat in 3.021321 secs.
[07/25 21:06:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8416.133545   -8616.091553  7713.508301 -8416.133545    0.083984 -8616.091553        0.0  199.958008       99.958008
1   -8316.133789   -8416.091797  7713.508301 -8316.133789  299.957764 -8416.091797        0.0   99.958008       99.957764
2   -8316.049561   -8316.091553  7713.508301 -8316.049561  100.042236 -8316.091553        0.0    0.041992        0.041992
3   -8054.716553   -8216.091553  7713.508301 -8054.716553  261.375000 -8216.091553        0.0  161.375000      161.375000
4   -8054.716553   -8121.602539  7713.508301 -8054.716553  131.687500 -8121.602539        0.0   66.885986       61.375000
5   -8054.716553   -8116.091553  7752.133301 -8054.716553   66.843750 -8116.091553        0.0   61.375000        0.000000
6   -8014.091553   -8054.716553  7811.508057 -8014.091553  102.000000 -8054.716553        0.0   40.625000       -0.000244
7   -7972.029053   -8014.049561  7869.445557 -7972.029053   82.687500 -8014.049561        0.0   42.020508       -0.000244
8   -7971.705811   -7971.987061  7869.445557 -7971.705811   42.343750 -7971.987061        0.0    0.281250      -99.677002
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:06:40]  --------------------------------------------------------------------------------
[07/25 21:06:40]  Iteration: 170 (29 solution, 140 counterexamples)
[07/25 21:06:48]  Generator returned sat in 3.866524 secs.
[07/25 21:06:48]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:06:48]  Improved gap from 1 to 17.1875
[07/25 21:06:49]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 21:06:49]  Verifer returned sat in 0.808741 secs.
[07/25 21:06:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -11581.436279  -12211.853271  7697.883301 -11581.436279    0.083740 -12211.853271        0.0  630.416992      530.416992
1  -11581.436279  -12011.853271  7697.883301 -11581.436279  630.416748 -12011.853271        0.0  430.416992      430.416992
2  -11581.436279  -12011.853271  7697.883301 -11581.436279  430.416748 -12011.853271        0.0  430.416992      330.416992
3  -11581.436279  -11811.853516  7697.883301 -11581.436279  426.000000 -11811.853516        0.0  230.417236      230.416992
4  -11581.436279  -11714.207031  7697.883301 -11581.436279  215.000000 -11714.207031        0.0  132.770752      130.416992
5  -11581.436279  -11711.853271  7697.883301 -11581.436279  109.500000 -11711.853271        0.0  130.416992       30.416992
6  -11581.436279  -11611.853271  7767.466309 -11581.436279   56.750000 -11611.853271        0.0   30.416992        0.000000
7  -11581.436279  -11581.436279  7850.278809 -11581.436279   30.375000 -11581.436279        0.0    0.000000      -17.187500
8  -11564.248779  -11564.248779  7850.278809 -11564.248779   17.187500 -11564.248779        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:06:49]  --------------------------------------------------------------------------------
[07/25 21:06:49]  Iteration: 171 (29 solution, 141 counterexamples)
[07/25 21:06:57]  Generator returned sat in 5.033890 secs.
[07/25 21:06:58]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:06:58]  Improved gap from 343/8192 to 17.1875
[07/25 21:06:58]  Improved number of small numbers from 83 to 101 out of a max of 101
[07/25 21:06:58]  Verifer returned sat in 0.773331 secs.
[07/25 21:06:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -12259.643799  -12792.456543  7697.883301 -12259.643799    0.083740 -12792.456543        0.0  532.812744      532.770752
1  -12259.643799  -12792.414307  7697.883301 -12259.643799    0.041992 -12792.414307        0.0  532.770508      432.770752
2  -12259.643799  -12685.685791  7697.883301 -12259.643799    0.041992 -12685.685791        0.0  426.041992      332.770752
3  -12259.643799  -12592.414307  7697.883301 -12259.643799  426.000000 -12592.414307        0.0  332.770508      232.770752
4  -12259.643799  -12392.414551  7697.883301 -12259.643799  215.000000 -12392.414551        0.0  132.770752      132.770752
5  -12259.643799  -12392.372559  7697.883301 -12259.643799  109.500000 -12392.372559        0.0  132.728760       32.770752
6  -12259.643799  -12290.060791  7765.112549 -12259.643799   56.750000 -12290.060791        0.0   30.416992        0.000000
7  -12259.643799  -12259.643799  7847.925049 -12259.643799   30.375000 -12259.643799        0.0    0.000000      -17.187500
8  -12242.456299  -12242.456299  7847.925293 -12242.456299   17.187500 -12242.456299        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:06:59]  --------------------------------------------------------------------------------
[07/25 21:06:59]  Iteration: 172 (29 solution, 142 counterexamples)
[07/25 21:07:06]  Generator returned sat in 4.175157 secs.
[07/25 21:07:07]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 21:07:08]  Improved gap from 0 to 39.0625
[07/25 21:07:09]  Improved number of small numbers from 57 to 93 out of a max of 101
[07/25 21:07:09]  Verifer returned sat in 2.254072 secs.
[07/25 21:07:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -13930.382812  -13930.424805  7157.589844 -13930.382812    0.083740 -13930.424805        0.0    0.041992        0.041992
1  -13830.425049  -13930.424805  7157.589844 -13830.425049   99.999756 -13930.424805        0.0   99.999756       -0.000244
2  -13630.466797  -13730.424805  7157.589844 -13630.466797  299.958008 -13730.424805        0.0   99.958008       99.958008
3  -13470.592285  -13630.424805  7157.589844 -13470.592285  259.832520 -13630.424805        0.0  159.832520      159.832520
4  -13470.592285  -13538.592285  7157.589844 -13470.592285  131.916260 -13538.592285        0.0   68.000000       59.832520
5  -13470.592285  -13530.424805  7197.757324 -13470.592285   67.958130 -13530.424805        0.0   59.832520        0.000000
6  -13428.424805  -13470.592285  7255.548096 -13428.424805  102.000000 -13470.592285        0.0   42.167480       -0.041748
7  -13388.676025  -13428.383026  7315.841064 -13388.676025   81.916260 -13428.383026        0.0   39.707001        0.000000
8  -13385.424896  -13388.634033  7315.841064 -13385.424896   42.958130 -13388.634033        0.0    3.209137      -96.748871
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:07:09]  --------------------------------------------------------------------------------
[07/25 21:07:09]  Iteration: 173 (29 solution, 143 counterexamples)
[07/25 21:07:18]  Generator returned sat in 5.523234 secs.
[07/25 21:07:18]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:07:22]  Verifer returned unsat in 3.025516 secs.
[07/25 21:07:22]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:07:22]  --------------------------------------------------------------------------------
[07/25 21:07:22]  Iteration: 174 (30 solution, 143 counterexamples)
[07/25 21:07:27]  Generator returned sat in 2.534367 secs.
[07/25 21:07:28]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:07:30]  Improved number of small numbers from 57 to 100 out of a max of 100
[07/25 21:07:30]  Verifer returned sat in 1.835953 secs.
[07/25 21:07:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -13621.095215  -13820.927734  7197.757568 -13621.095215    0.083740 -13820.927734        0.0  199.832520       99.832520
1  -13621.011475  -13720.927734  7197.757568 -13621.011475  199.916260 -13720.927734        0.0   99.916260       -0.083740
2  -13520.927734  -13620.927490  7197.757568 -13520.927734  200.000000 -13620.927490        0.0   99.999756        0.000000
3  -13124.341309  -13520.178955  7197.757568 -13124.341309  496.586182 -13520.178955        0.0  395.837646      296.586426
4  -13121.011475  -13320.927734  7197.757568 -13121.011475  399.167480 -13320.927734        0.0  199.916260      199.916260
5  -12920.843994  -13320.927734  7197.757568 -12920.843994  400.083740 -13320.927734        0.0  400.083740      300.083740
6  -12920.843994  -13120.927734  7197.757568 -12920.843994  350.541748 -13120.927734        0.0  200.083740      200.083740
7  -12745.531250  -13120.843750  7197.757568 -12745.531250  375.396484 -13120.843750        0.0  375.312500      275.396484
8  -12745.531250  -12945.447510  7197.757568 -12745.531250  102.041992 -12945.447510        0.0  199.916260      175.396484
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:07:30]  --------------------------------------------------------------------------------
[07/25 21:07:30]  Iteration: 175 (30 solution, 144 counterexamples)
[07/25 21:07:36]  Generator returned sat in 2.777591 secs.
[07/25 21:07:36]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:07:36]  Improved gap from 99 to 100
[07/25 21:07:37]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:07:37]  Verifer returned sat in 0.163126 secs.
[07/25 21:07:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -13621.095215  -13819.927734  7197.757568 -13621.095215    0.083740 -13819.927734        0.0  198.832520       99.832520
1  -13621.011475  -13719.927734  7197.757568 -13621.011475  198.916260 -13719.927734        0.0   98.916260       -0.083740
2  -13520.927734  -13620.927490  7197.757568 -13520.927734  199.000000 -13620.927490        0.0   99.999756        0.000000
3  -13124.341309  -13520.178955  7197.757568 -13124.341309  496.586182 -13520.178955        0.0  395.837646      296.586426
4  -13121.011475  -13320.927734  7197.757568 -13121.011475  399.167480 -13320.927734        0.0  199.916260      199.916260
5  -12920.843994  -13320.927734  7197.757568 -12920.843994  400.083740 -13320.927734        0.0  400.083740      300.083740
6  -12920.843994  -13120.927734  7197.757568 -12920.843994  351.041748 -13120.927734        0.0  200.083740      200.083740
7  -12744.781250  -13120.843750  7197.757568 -12744.781250  376.146484 -13120.843750        0.0  376.062500      276.146484
8  -12744.781250  -12945.447510  7197.757568 -12744.781250  102.041992 -12945.447510        0.0  200.666260      176.146484
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:07:37]  --------------------------------------------------------------------------------
[07/25 21:07:37]  Iteration: 176 (30 solution, 145 counterexamples)
[07/25 21:07:47]  Generator returned sat in 6.415441 secs.
[07/25 21:07:47]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:07:47]  Verifer returned unsat in 0.270924 secs.
[07/25 21:07:47]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:07:47]  --------------------------------------------------------------------------------
[07/25 21:07:47]  Iteration: 177 (31 solution, 145 counterexamples)
[07/25 21:07:54]  Generator returned sat in 2.951569 secs.
[07/25 21:07:54]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:07:54]  Verifer returned unsat in 0.258731 secs.
[07/25 21:07:54]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:07:54]  --------------------------------------------------------------------------------
[07/25 21:07:54]  Iteration: 178 (32 solution, 145 counterexamples)
[07/25 21:08:05]  Generator returned sat in 7.660182 secs.
[07/25 21:08:05]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:06]  Verifer returned unsat in 0.281936 secs.
[07/25 21:08:06]  Proved solution: 
[1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:06]  --------------------------------------------------------------------------------
[07/25 21:08:06]  Iteration: 179 (33 solution, 145 counterexamples)
[07/25 21:08:15]  Generator returned sat in 5.944212 secs.
[07/25 21:08:15]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:16]  Improved gap from 0 to 25.0
[07/25 21:08:16]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/25 21:08:16]  Verifer returned sat in 0.496978 secs.
[07/25 21:08:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -13278.227295  -13733.937012  7210.766602 -13278.227295    0.083496 -13733.937012        0.0  455.709717      455.709717
1  -13278.227295  -13733.936768  7210.766602 -13278.227295  455.709473 -13733.936768        0.0  455.709473      355.709717
2  -13278.227295  -13633.936768  7210.766602 -13278.227295    0.041748 -13633.936768        0.0  355.709473      255.709717
3  -13278.227295  -13457.602783  7210.766602 -13278.227295  355.667969 -13457.602783        0.0  179.375488      155.709717
4  -13278.227295  -13369.436035  7210.766602 -13278.227295  179.333984 -13369.436035        0.0   91.208740       55.709717
5  -13278.227295  -13325.352295  7255.056885 -13278.227295   91.166992 -13325.352295        0.0   47.125000        0.000000
6  -13278.227295  -13278.227295  7330.056885 -13278.227295   47.083496 -13278.227295        0.0    0.000000      -25.000000
7  -13253.185547  -13253.227295  7405.056885 -13253.185547   25.041748 -13253.227295        0.0    0.041748      -24.958252
8  -13137.018555  -13219.477539  7405.057129 -13137.018555  116.208740 -13219.477539        0.0   82.458984       -8.791016
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:08:16]  --------------------------------------------------------------------------------
[07/25 21:08:16]  Iteration: 180 (33 solution, 146 counterexamples)
[07/25 21:08:24]  Generator returned sat in 3.942832 secs.
[07/25 21:08:24]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:25]  Improved gap from 0 to 100
[07/25 21:08:25]  Improved number of small numbers from 81 to 83 out of a max of 101
[07/25 21:08:25]  Verifer returned sat in 1.224471 secs.
[07/25 21:08:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -13278.227295  -13478.269043  7255.056885 -13278.227295    0.083496 -13478.269043        0.0  200.041748      100.041748
1  -13278.227295  -13378.269043  7255.056885 -13278.227295    0.041504 -13378.269043        0.0  100.041748        0.041748
2  -13278.227295  -13278.269043  7255.056885 -13278.227295    0.041504 -13278.269043        0.0    0.041748      -99.958252
3  -12745.200114  -13167.273899  7255.056885 -12745.200114  533.068929 -13167.273899        0.0  422.073785      333.068929
4  -12745.200114  -13000.134087  7255.056885 -12745.200114  422.032037 -13000.134087        0.0  254.933974      233.068929
5  -12600.050591  -12878.269043  7255.056885 -12600.050591  400.083496 -12878.269043        0.0  278.218452      278.218452
6  -12478.227295  -12878.269043  7255.056885 -12478.227295  400.041748 -12878.269043        0.0  400.041748      300.041748
7  -12478.227295  -12678.269043  7255.056885 -12478.227295  344.523302 -12678.269043        0.0  200.041748      200.041748
8  -12345.074870  -12600.009033  7255.056885 -12345.074870  333.194173 -12600.009033        0.0  254.934163      233.194173
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:08:26]  --------------------------------------------------------------------------------
[07/25 21:08:26]  Iteration: 181 (33 solution, 147 counterexamples)
[07/25 21:08:40]  Generator returned sat in 10.928921 secs.
[07/25 21:08:40]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:40]  Improved gap from 1/400 to 48.4375
[07/25 21:08:41]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/25 21:08:41]  Verifer returned sat in 0.358690 secs.
[07/25 21:08:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -13419.326904  -13719.322021  7255.056641 -13419.326904    0.083496 -13719.322021        0.0  299.995117      199.995117
1  -13360.004395  -13619.322021  7255.056641 -13360.004395  359.317627 -13619.322021        0.0  259.317627      159.317627
2  -13360.004395  -13419.322021  7255.056641 -13360.004395  259.317500 -13419.322021        0.0   59.317627       59.317627
3  -13167.254639  -13360.004639  7255.056641 -13167.254639  252.067383 -13360.004639        0.0  192.750000      152.067383
4  -13167.254639  -13220.374512  7255.056641 -13167.254639  180.158691 -13220.374512        0.0   53.119873       52.067383
5  -13167.254639  -13219.322021  7302.989258 -13167.254639    0.010000 -13219.322021        0.0   52.067383        0.000000
6  -13118.822021  -13167.254639  7354.551758 -13118.822021  100.500000 -13167.254639        0.0   48.432617       -0.004883
7  -13070.379639  -13118.817139  7406.114258 -13070.379639   96.875000 -13118.817139        0.0   48.437500        0.000000
8  -13070.379639  -13070.379639  7406.114502 -13070.379639    0.010000 -13070.379639        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:08:41]  --------------------------------------------------------------------------------
[07/25 21:08:41]  Iteration: 182 (33 solution, 148 counterexamples)
[07/25 21:08:48]  Generator returned sat in 3.235025 secs.
[07/25 21:08:48]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:48]  Verifer returned unsat in 0.360125 secs.
[07/25 21:08:48]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:48]  --------------------------------------------------------------------------------
[07/25 21:08:48]  Iteration: 183 (34 solution, 148 counterexamples)
[07/25 21:08:55]  Generator returned sat in 2.693460 secs.
[07/25 21:08:55]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:55]  Verifer returned unsat in 0.388786 secs.
[07/25 21:08:55]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:08:55]  --------------------------------------------------------------------------------
[07/25 21:08:55]  Iteration: 184 (35 solution, 148 counterexamples)
[07/25 21:09:02]  Generator returned sat in 3.422241 secs.
[07/25 21:09:02]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:09:03]  Verifer returned unsat in 0.334963 secs.
[07/25 21:09:03]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:09:03]  --------------------------------------------------------------------------------
[07/25 21:09:03]  Iteration: 185 (36 solution, 148 counterexamples)
[07/25 21:09:13]  Generator returned sat in 6.526034 secs.
[07/25 21:09:13]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:09:15]  Improved gap from 171/4096 to 32.8125
[07/25 21:09:15]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/25 21:09:15]  Verifer returned sat in 1.742842 secs.
[07/25 21:09:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -12852.027588  -12852.048340  7188.905762 -12852.027588    0.083252 -12852.048340        0.0    0.020752        0.020508
1  -12819.194092  -12852.006592  7256.051758 -12819.194092   32.854248 -12852.006592        0.0   32.812500        0.000000
2  -12519.214844  -12719.194092  7256.051758 -12519.214844  332.791748 -12719.194092        0.0  199.979248      199.979248
3  -12519.214844  -12619.881592  7256.051758 -12519.214844  199.958252 -12619.881592        0.0  100.666748       99.979248
4  -12519.214844  -12519.235840  7256.051758 -12519.214844    1.500000 -12519.235840        0.0    0.020996       -0.020752
5  -12517.735840  -12519.194092  7323.239258 -12517.735840    1.500000 -12519.194092        0.0    1.458252      -31.354248
6  -12418.444092  -12486.381592  7355.301758 -12418.444092  100.750000 -12486.381592        0.0   67.937500        0.000000
7  -12369.256592  -12418.444092  7406.114258 -12369.256592  117.125000 -12418.444092        0.0   49.187500        0.000000
8  -12369.256592  -12369.256592  7406.114258 -12369.256592    1.500000 -12369.256592        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:09:15]  --------------------------------------------------------------------------------
[07/25 21:09:15]  Iteration: 186 (36 solution, 149 counterexamples)
[07/25 21:09:25]  Generator returned sat in 6.287985 secs.
[07/25 21:09:25]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:09:26]  Improved gap from 341/8192 to 15.625
[07/25 21:09:26]  Improved number of small numbers from 77 to 101 out of a max of 101
[07/25 21:09:26]  Verifer returned sat in 0.779853 secs.
[07/25 21:09:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -10715.110596  -11249.444092  7006.385254 -10715.110596    0.083252 -11249.444092        0.0  534.333496      534.333496
1  -10715.110596  -11149.444092  7006.385254 -10715.110596  534.333252 -11149.444092        0.0  434.333496      434.333496
2  -10715.110596  -11149.443848  7006.385254 -10715.110596  434.333252 -11149.443848        0.0  434.333252      334.333496
3  -10715.110596  -10949.444092  7006.385254 -10715.110596  407.000000 -10949.444092        0.0  234.333496      234.333496
4  -10715.110596  -10849.444092  7006.385254 -10715.110596  205.000000 -10849.444092        0.0  134.333496      134.333496
5  -10715.110596  -10768.652344  7006.385254 -10715.110596  104.000000 -10768.652344        0.0   53.541748       34.333496
6  -10715.110596  -10749.443848  7072.051758 -10715.110596   53.500000 -10749.443848        0.0   34.333252        0.000000
7  -10715.110596  -10715.110596  7156.426758 -10715.110596   28.250000 -10715.110596        0.0    0.000000      -15.625000
8  -10699.485596  -10699.485596  7156.426758 -10699.485596   15.625000 -10699.485596        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:09:26]  --------------------------------------------------------------------------------
[07/25 21:09:26]  Iteration: 187 (36 solution, 150 counterexamples)
[07/25 21:09:41]  Generator returned sat in 10.569477 secs.
[07/25 21:09:41]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:09:42]  Improved gap from 3/2 to 14.0625
[07/25 21:09:42]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/25 21:09:42]  Verifer returned sat in 1.231943 secs.
[07/25 21:09:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9765.230957   -9951.168213  6300.029785 -9765.230957    0.083252 -9951.168213        0.0  185.937256       85.937256
1   -9765.230957   -9765.230957  6300.029785 -9765.230957    0.041748 -9765.230957        0.0    0.000000      -14.062744
2   -9363.126709   -9751.168213  6300.029785 -9363.126709  402.104248 -9751.168213        0.0  388.041504      288.041504
3   -9363.126709   -9558.168213  6300.029785 -9363.126709  388.000000 -9558.168213        0.0  195.041504      188.041504
4   -9363.126709   -9461.626709  6300.029785 -9363.126709  195.000000 -9461.626709        0.0   98.500000       88.041504
5   -9363.126709   -9375.980713  6310.779785 -9363.126709   98.500000 -9375.980713        0.0   12.854004       -1.208496
6   -9325.730713   -9361.918213  6374.592285 -9325.730713   50.250000 -9361.918213        0.0   36.187500        0.000000
7   -9325.730713   -9325.730713  6460.529785 -9325.730713   26.125000 -9325.730713        0.0    0.000000      -14.062500
8   -9311.668213   -9311.668213  6460.529785 -9311.668213   14.062500 -9311.668213        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:09:43]  --------------------------------------------------------------------------------
[07/25 21:09:43]  Iteration: 188 (36 solution, 151 counterexamples)
[07/25 21:09:55]  Generator returned sat in 8.416259 secs.
[07/25 21:09:55]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:09:55]  Improved gap from 0 to 0
[07/25 21:09:55]  Improved number of small numbers from 82 to 101 out of a max of 101
[07/25 21:09:55]  Verifer returned sat in 0.401320 secs.
[07/25 21:09:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9400.897217   -9700.897217  6473.842041 -9400.897217    0.083008 -9700.897217        0.0  300.000000      200.000000
1   -9400.897217   -9500.897217  6473.842041 -9400.897217  299.999756 -9500.897217        0.0  100.000000      100.000000
2   -9100.897217   -9500.897217  6473.842041 -9100.897217  400.000000 -9500.897217        0.0  400.000000      300.000000
3   -9100.355713   -9400.897217  6473.842041 -9100.355713  400.541504 -9400.897217        0.0  300.541504      200.541504
4   -9100.355713   -9200.897461  6473.842041 -9100.355713    0.500000 -9200.897461        0.0  100.541748      100.541504
5   -9100.355713   -9100.897217  6473.842041 -9100.355713    0.500000 -9100.897217        0.0    0.541504        0.541504
6   -9100.355713   -9100.897217  6573.300537 -9100.355713    0.500000 -9100.897217        0.0    0.541504        0.000000
7   -9100.355713   -9100.355713  6673.300293 -9100.355713    0.500000 -9100.355713        0.0    0.000000       -0.000244
8   -9099.855713   -9100.313965  6673.300293 -9099.855713    0.500000 -9100.313965        0.0    0.458252      -99.500244
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:09:56]  --------------------------------------------------------------------------------
[07/25 21:09:56]  Iteration: 189 (36 solution, 152 counterexamples)
[07/25 21:10:07]  Generator returned sat in 7.544684 secs.
[07/25 21:10:07]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:10:07]  Improved gap from 0 to 0
[07/25 21:10:08]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 21:10:08]  Verifer returned sat in 0.505982 secs.
[07/25 21:10:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9387.221191   -9887.262939  6473.842041 -9387.221191    0.083008 -9887.262939        0.0  500.041748      500.041504
1   -9387.221191   -9887.262695  6473.842041 -9387.221191  499.999756 -9887.262695        0.0  500.041504      400.041504
2   -9387.221191   -9687.262939  6473.842041 -9387.221191  500.041260 -9687.262939        0.0  300.041748      300.041504
3   -9387.221191   -9687.262695  6473.842041 -9387.221191  300.041504 -9687.262695        0.0  300.041504      200.041504
4   -9387.221191   -9487.262939  6473.842041 -9387.221191    1.000000 -9487.262939        0.0  100.041748      100.041504
5   -9387.221191   -9388.221436  6473.842041 -9387.221191    1.000000 -9388.221436        0.0    1.000244        0.041504
6   -9387.221191   -9387.262695  6573.800537 -9387.221191    1.000000 -9387.262695        0.0    0.041504        0.000000
7   -9386.262695   -9387.221191  6672.842041 -9386.262695    1.000000 -9387.221191        0.0    0.958496        0.000000
8   -9386.262695   -9386.262695  6672.842041 -9386.262695    0.500000 -9386.262695        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:10:08]  --------------------------------------------------------------------------------
[07/25 21:10:08]  Iteration: 190 (36 solution, 153 counterexamples)
[07/25 21:10:16]  Generator returned sat in 3.959680 secs.
[07/25 21:10:16]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:10:16]  Improved gap from 8191/16384 to 0
[07/25 21:10:16]  Improved number of small numbers from 79 to 101 out of a max of 101
[07/25 21:10:16]  Verifer returned sat in 0.241790 secs.
[07/25 21:10:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9388.262939   -9887.263184  6473.842041 -9388.262939    0.082764 -9887.263184        0.0  499.000244      498.999756
1   -9388.262939   -9887.262695  6473.842041 -9388.262939  499.000244 -9887.262695        0.0  498.999756      398.999756
2   -9387.262451   -9687.262939  6473.842041 -9387.262451  500.000244 -9687.262939        0.0  300.000488      300.000244
3   -9387.262451   -9687.262695  6473.842041 -9387.262451  300.000000 -9687.262695        0.0  300.000244      200.000244
4   -9387.262451   -9487.262939  6473.842041 -9387.262451    1.000000 -9487.262939        0.0  100.000488      100.000244
5   -9387.262451   -9388.262695  6473.842041 -9387.262451    0.500000 -9388.262695        0.0    1.000244        0.000244
6   -9387.262451   -9387.262695  6573.841797 -9387.262451    1.000000 -9387.262695        0.0    0.000244        0.000000
7   -9386.262695   -9387.262451  6672.842041 -9386.262695    1.000000 -9387.262451        0.0    0.999756        0.000000
8   -9386.262695   -9386.262695  6672.842041 -9386.262695    0.500000 -9386.262695        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:10:17]  --------------------------------------------------------------------------------
[07/25 21:10:17]  Iteration: 191 (36 solution, 154 counterexamples)
[07/25 21:10:26]  Generator returned sat in 6.001673 secs.
[07/25 21:10:26]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:10:27]  Improved gap from 1/16384 to 0
[07/25 21:10:27]  Improved number of small numbers from 70 to 101 out of a max of 101
[07/25 21:10:27]  Verifer returned sat in 0.445870 secs.
[07/25 21:10:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9491.845459   -9991.803955  6475.883301 -9491.845459    0.082520 -9991.803955        0.0  499.958496      499.958496
1   -9491.845459   -9891.803955  6475.883301 -9491.845459  499.958496 -9891.803955        0.0  399.958496      399.958496
2   -9491.845459   -9891.803711  6475.883301 -9491.845459  399.958496 -9891.803711        0.0  399.958252      299.958496
3   -9490.262451   -9691.803955  6475.883301 -9490.262451  401.541260 -9691.803955        0.0  201.541504      201.541504
4   -9490.262451   -9591.803955  6475.883301 -9490.262451    1.500000 -9591.803955        0.0  101.541504      101.541504
5   -9490.262451   -9491.803955  6475.883301 -9490.262451    0.500000 -9491.803955        0.0    1.541504        1.541504
6   -9490.262451   -9490.303711  6572.924561 -9490.262451    1.500000 -9490.303711        0.0    0.041260       -1.417236
7   -9488.803711   -9488.845215  6672.883057 -9488.803711    1.500000 -9488.845215        0.0    0.041504        0.000000
8   -9487.345215   -9488.762695  6672.883057 -9487.345215    1.500000 -9488.762695        0.0    1.417480      -98.541504
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:10:27]  --------------------------------------------------------------------------------
[07/25 21:10:27]  Iteration: 192 (36 solution, 155 counterexamples)
[07/25 21:10:36]  Generator returned sat in 5.083798 secs.
[07/25 21:10:36]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:10:37]  Improved gap from 85/2048 to 0
[07/25 21:10:37]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/25 21:10:37]  Verifer returned sat in 0.585735 secs.
[07/25 21:10:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9490.294189   -9690.294189  6874.373535 -9490.294189    0.082275 -9690.294189        0.0  200.000000      200.000000
1   -9490.294189   -9590.294189  6874.373535 -9490.294189  200.000000 -9590.294189        0.0  100.000000      100.000000
2   -9339.211670   -9590.252686  6874.373535 -9339.211670  251.082520 -9590.252686        0.0  251.041016      151.082520
3   -9190.252686   -9490.293945  6874.373535 -9190.252686  400.000000 -9490.293945        0.0  300.041260      200.041504
4   -9190.252686   -9339.252930  6874.373535 -9190.252686    1.000000 -9339.252930        0.0  149.000244      100.041504
5   -9190.252686   -9191.252930  6874.373535 -9190.252686    1.000000 -9191.252930        0.0    1.000244        0.041504
6   -9190.252686   -9190.294189  6974.332031 -9190.252686    1.000000 -9190.294189        0.0    0.041504        0.000000
7   -9189.294189   -9190.252686  7073.373535 -9189.294189    1.000000 -9190.252686        0.0    0.958496        0.000000
8   -9189.294189   -9189.294189  7073.373535 -9189.294189    0.500000 -9189.294189        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:10:37]  --------------------------------------------------------------------------------
[07/25 21:10:37]  Iteration: 193 (36 solution, 156 counterexamples)
[07/25 21:10:47]  Generator returned sat in 5.413431 secs.
[07/25 21:10:47]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:10:47]  Improved gap from 85/2048 to 0
[07/25 21:10:47]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/25 21:10:47]  Verifer returned sat in 0.544927 secs.
[07/25 21:10:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -9087.551025   -9487.468506  6673.455811 -9087.551025    0.082275 -9487.468506        0.0  399.91748       399.91748
1   -9087.468506   -9387.468506  6673.455811 -9087.468506  400.000000 -9387.468506        0.0  300.00000       300.00000
2   -9087.468506   -9387.468506  6673.455811 -9087.468506  299.999756 -9387.468506        0.0  300.00000       200.00000
3   -9087.468506   -9187.468506  6673.455811 -9087.468506  299.999756 -9187.468506        0.0  100.00000       100.00000
4   -9087.468506   -9187.468506  6673.455811 -9087.468506    1.500000 -9187.468506        0.0  100.00000         0.00000
5   -9087.468506   -9087.468506  6773.455811 -9087.468506    1.500000 -9087.468506        0.0    0.00000         0.00000
6   -9086.968506   -9087.468506  6872.955811 -9086.968506    0.500000 -9087.468506        0.0    0.50000         0.00000
7   -9086.968506   -9086.968506  6972.955811 -9086.968506    0.500000 -9086.968506        0.0    0.00000         0.00000
8   -9085.468506   -9086.968506  6972.955811 -9085.468506    1.500000 -9086.968506        0.0    1.50000       -98.50000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:10:48]  --------------------------------------------------------------------------------
[07/25 21:10:48]  Iteration: 194 (36 solution, 157 counterexamples)
[07/25 21:10:56]  Generator returned sat in 4.145607 secs.
[07/25 21:10:56]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:10:56]  Improved gap from 0 to 0
[07/25 21:10:56]  Improved number of small numbers from 79 to 101 out of a max of 101
[07/25 21:10:56]  Verifer returned sat in 0.483011 secs.
[07/25 21:10:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9384.302246   -9784.261230  6673.455811 -9384.302246    0.082275 -9784.261230        0.0  399.958984      399.958984
1   -9284.302246   -9684.261230  6673.455811 -9284.302246  499.958984 -9684.261230        0.0  399.958984      399.958984
2   -9284.220215   -9684.261230  6673.455811 -9284.220215  400.041016 -9684.261230        0.0  400.041016      300.041016
3   -9284.220215   -9484.261475  6673.455811 -9284.220215  299.999756 -9484.261475        0.0  200.041260      200.041016
4   -9284.220215   -9384.261230  6673.455811 -9284.220215    1.500000 -9384.261230        0.0  100.041016      100.041016
5   -9284.220215   -9384.261230  6673.455811 -9284.220215    1.500000 -9384.261230        0.0  100.041016        0.041016
6   -9284.220215   -9284.261230  6773.414795 -9284.220215    1.500000 -9284.261230        0.0    0.041016        0.000000
7   -9282.761230   -9284.220215  6871.955811 -9282.761230    1.500000 -9284.220215        0.0    1.458984        0.000000
8   -9282.761230   -9282.761230  6871.955811 -9282.761230    0.500000 -9282.761230        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:10:57]  --------------------------------------------------------------------------------
[07/25 21:10:57]  Iteration: 195 (36 solution, 158 counterexamples)
[07/25 21:11:08]  Generator returned sat in 7.043053 secs.
[07/25 21:11:08]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:11:09]  Improved gap from 21/512 to 15.625
[07/25 21:11:09]  Improved number of small numbers from 59 to 101 out of a max of 101
[07/25 21:11:09]  Verifer returned sat in 1.268817 secs.
[07/25 21:11:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9097.490723   -9297.449219  6673.455811 -9097.490723    0.082275 -9297.449219        0.0  199.958496       99.958740
1   -9097.490723   -9097.490723  6673.455811 -9097.490723    0.041016 -9097.490723        0.0    0.000000       -0.041260
2   -8690.408447   -9097.449463  6673.455811 -8690.408447  407.082275 -9097.449463        0.0  407.041016      307.041016
3   -8690.408447   -8897.449463  6673.455811 -8690.408447  407.000000 -8897.449463        0.0  207.041016      207.041016
4   -8690.408447   -8797.449463  6673.455811 -8690.408447  205.000000 -8797.449463        0.0  107.041016      107.041016
5   -8690.408447   -8732.240723  6673.455811 -8690.408447  104.000000 -8732.240723        0.0   41.832275        7.041016
6   -8678.740723   -8678.740723  6739.122070 -8678.740723   53.500000 -8678.740723        0.0    0.000000      -15.625000
7   -8650.490723   -8663.115723  6823.497070 -8650.490723   28.250000 -8663.115723        0.0   12.625000       -3.000000
8   -8647.490723   -8647.490723  6823.497070 -8647.490723   15.625000 -8647.490723        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:11:10]  --------------------------------------------------------------------------------
[07/25 21:11:10]  Iteration: 196 (36 solution, 159 counterexamples)
[07/25 21:11:20]  Generator returned sat in 6.627045 secs.
[07/25 21:11:20]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/25 21:11:22]  Improved gap from 337/16384 to 25.0
[07/25 21:11:23]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/25 21:11:23]  Verifer returned sat in 2.253893 secs.
[07/25 21:11:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -8960.367432   -8960.387695  6356.496826 -8960.367432   0.082275 -8960.387695        0.0   0.020264        0.020020
1   -8935.346680   -8960.346680  6431.456055 -8935.346680  25.041016 -8960.346680        0.0  25.000000        0.000000
2   -8902.367188   -8935.346680  6498.476562 -8902.367188  57.979492 -8935.346680        0.0  32.979492        0.000000
3   -8902.346924   -8902.367188  6573.476562 -8902.346924  32.999756 -8902.367188        0.0   0.020264      -24.979736
4   -8844.346680   -8877.367188  6640.456055 -8844.346680  58.020508 -8877.367188        0.0  33.020508        0.000000
5   -8844.346680   -8844.346680  6715.456055 -8844.346680  30.510254 -8844.346680        0.0   0.000000      -25.000000
6   -8753.346680   -8799.367188  6748.497070 -8753.346680  91.000000 -8799.367188        0.0  46.020508       -0.958984
7   -8752.367188   -8752.387695  6823.497070 -8752.367188  47.000000 -8752.387695        0.0   0.020508      -24.979492
8   -8727.387695   -8727.387695  6823.497070 -8727.387695  25.000000 -8727.387695        0.0   0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:11:23]  --------------------------------------------------------------------------------
[07/25 21:11:23]  Iteration: 197 (36 solution, 160 counterexamples)
[07/25 21:11:31]  Generator returned sat in 4.353597 secs.
[07/25 21:11:31]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:11:33]  Improved gap from 0 to 25.0
[07/25 21:11:33]  Improved number of small numbers from 49 to 101 out of a max of 101
[07/25 21:11:33]  Verifer returned sat in 1.567056 secs.
[07/25 21:11:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8713.373535   -8882.332275  6609.435547 -8713.373535    0.082275 -8882.332275        0.0  168.958740       99.958740
1   -8713.353027   -8813.332275  6609.435547 -8713.353027  168.979248 -8813.332275        0.0   99.979248       -0.020752
2   -8688.332275   -8713.332275  6684.435547 -8688.332275  125.000000 -8713.332275        0.0   25.000000        0.000000
3   -8688.332275   -8688.332275  6690.435303 -8688.332275    0.020508 -8688.332275        0.0    0.000000      -94.000244
4   -8494.332275   -8567.332275  6690.435303 -8494.332275  194.000000 -8567.332275        0.0   73.000000       -0.000244
5   -8469.332275   -8494.311768  6765.415039 -8469.332275   98.000000 -8494.311768        0.0   24.979492       -0.020508
6   -8444.311768   -8469.311768  6840.415039 -8444.311768   50.000000 -8469.311768        0.0   25.000000        0.000000
7   -8443.311768   -8444.311768  6915.414795 -8443.311768   26.000000 -8444.311768        0.0    1.000000      -24.000244
8   -8321.291260   -8419.311523  6915.415039 -8321.291260  123.020508 -8419.311523        0.0   98.020264       -1.979492
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:11:33]  --------------------------------------------------------------------------------
[07/25 21:11:33]  Iteration: 198 (36 solution, 161 counterexamples)
[07/25 21:11:44]  Generator returned sat in 6.691093 secs.
[07/25 21:11:44]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:11:45]  Improved gap from 303441/16384 to 48.4375
[07/25 21:11:46]  Improved number of small numbers from 45 to 95 out of a max of 101
[07/25 21:11:46]  Verifer returned sat in 1.842436 secs.
[07/25 21:11:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -18403.197266  -18600.278076  16540.302002 -18403.197266    0.082275 -18600.278076        0.0  197.080811      197.080811
1  -18403.197266  -18600.277832  16540.302002 -18403.197266  197.080566 -18600.277832        0.0  197.080566       97.080811
2  -18403.156250  -18403.197266  16540.302002 -18403.156250  197.121582 -18403.197266        0.0    0.041016       -2.878174
3  -18200.319336  -18302.675781  16540.302002 -18200.319336  202.877930 -18302.675781        0.0  102.356445       99.958740
4  -18200.236816  -18200.278076  16540.302002 -18200.236816  102.438965 -18200.278076        0.0    0.041260        0.041260
5  -18148.058594  -18200.236816  16587.218262 -18148.058594   52.219482 -18200.236816        0.0   52.178223       -0.864258
6  -18098.756592  -18147.194103  16638.780518 -18098.756592  101.480225 -18147.194103        0.0   48.437511        0.000000
7  -18095.453991  -18098.756592  16690.343018 -18095.453991   51.740112 -18098.756592        0.0    3.302601      -45.134899
8  -18047.995850  -18050.319092  16690.343262 -18047.995850   50.760742 -18050.319092        0.0    2.323242      -97.676514
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:11:46]  --------------------------------------------------------------------------------
[07/25 21:11:46]  Iteration: 199 (36 solution, 162 counterexamples)
[07/25 21:11:57]  Generator returned sat in 6.210411 secs.
[07/25 21:11:57]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/25 21:11:57]  Improved gap from 0 to 23.4375
[07/25 21:11:57]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/25 21:11:57]  Verifer returned sat in 0.587833 secs.
[07/25 21:11:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -18447.194336  -18692.069336  16587.218018 -18447.194336    0.082275 -18692.069336        0.0  244.875000      200.000000
1  -18447.153076  -18547.194336  16587.218018 -18447.153076  244.916260 -18547.194336        0.0  100.041260      100.041260
2  -18347.194336  -18447.194336  16587.218018 -18347.194336  200.000000 -18447.194336        0.0  100.000000      100.000000
3  -18347.194336  -18447.194336  16587.218018 -18347.194336  100.000000 -18447.194336        0.0  100.000000        0.000000
4  -18202.319336  -18247.194336  16587.218018 -18202.319336  244.875000 -18247.194336        0.0   44.875000       44.875000
5  -18123.756836  -18186.516357  16587.218018 -18123.756836  123.437500 -18186.516357        0.0   62.759521       23.437500
6  -18123.756836  -18147.194336  16663.780518 -18123.756836   62.718750 -18147.194336        0.0   23.437500        0.000000
7  -18114.834961  -18123.756836  16737.259277 -18114.834961   32.359375 -18123.756836        0.0    8.921875      -17.599365
8  -18000.319336  -18097.235107  16737.259277 -18000.319336  123.437500 -18097.235107        0.0   96.915771       -3.083740
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:11:58]  --------------------------------------------------------------------------------
[07/25 21:11:58]  Iteration: 200 (36 solution, 163 counterexamples)
[07/25 21:12:13]  Generator returned sat in 11.612644 secs.
[07/25 21:12:14]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:12:14]  Verifer returned unsat in 0.306923 secs.
[07/25 21:12:14]  Proved solution: 
[1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:12:14]  --------------------------------------------------------------------------------
[07/25 21:12:14]  Iteration: 201 (37 solution, 163 counterexamples)
[07/25 21:12:27]  Generator returned sat in 9.348312 secs.
[07/25 21:12:27]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:12:28]  Improved gap from 337/8192 to 14.0625
[07/25 21:12:28]  Improved number of small numbers from 57 to 101 out of a max of 101
[07/25 21:12:28]  Verifer returned sat in 1.004338 secs.
[07/25 21:12:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -18148.059326  -18248.018311  16587.218018 -18148.059326    0.082031 -18248.018311        0.0   99.958984       99.958984
1  -18147.204102  -18148.018555  16587.218018 -18147.204102  100.814209 -18148.018555        0.0    0.814453        0.814209
2  -17712.122070  -18147.163330  16587.218018 -17712.122070  435.896484 -18147.163330        0.0  435.041260      335.896240
3  -17712.122070  -17948.018555  16587.218018 -17712.122070  435.000000 -17948.018555        0.0  235.896484      235.896240
4  -17712.122070  -17848.018555  16587.218018 -17712.122070  218.000000 -17848.018555        0.0  135.896484      135.896240
5  -17712.122070  -17767.413330  16587.218018 -17712.122070  109.500000 -17767.413330        0.0   55.291260       35.896240
6  -17712.122070  -17726.184570  16651.321777 -17712.122070   55.250000 -17726.184570        0.0   14.062500        0.000000
7  -17698.059570  -17712.122070  16737.259277 -17698.059570   28.125000 -17712.122070        0.0   14.062500        0.000000
8  -17698.059570  -17698.059570  16737.259277 -17698.059570    0.500000 -17698.059570        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:12:29]  --------------------------------------------------------------------------------
[07/25 21:12:29]  Iteration: 202 (37 solution, 164 counterexamples)
[07/25 21:12:37]  Generator returned sat in 4.495871 secs.
[07/25 21:12:37]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:12:38]  Improved gap from 167/8192 to 14.0625
[07/25 21:12:39]  Improved number of small numbers from 70 to 101 out of a max of 101
[07/25 21:12:39]  Verifer returned sat in 1.207221 secs.
[07/25 21:12:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -18699.743896  -18799.702881  17337.861572 -18699.743896    0.082031 -18799.702881        0.0   99.958984       99.958984
1  -18691.618896  -18699.702881  17337.861572 -18691.618896  108.083984 -18699.702881        0.0    8.083984        8.083984
2  -18691.536865  -18691.578125  17337.861572 -18691.536865    8.166016 -18691.578125        0.0    0.041260      -91.833984
3  -18272.578125  -18499.702881  17337.861572 -18272.578125  419.000000 -18499.702881        0.0  227.124756      227.124756
4  -18272.578125  -18408.433594  17337.861572 -18272.578125  210.000000 -18408.433594        0.0  135.855469      127.124756
5  -18272.578125  -18325.786865  17337.861572 -18272.578125  105.500000 -18325.786865        0.0   53.208740       27.124756
6  -18272.536865  -18299.702881  17410.695557 -18272.536865   53.250000 -18299.702881        0.0   27.166016        0.000000
7  -18272.536865  -18272.536865  17496.633057 -18272.536865   27.125000 -18272.536865        0.0    0.000000      -14.062500
8  -18258.474365  -18258.474365  17496.633301 -18258.474365   14.062500 -18258.474365        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:12:39]  --------------------------------------------------------------------------------
[07/25 21:12:39]  Iteration: 203 (37 solution, 165 counterexamples)
[07/25 21:12:47]  Generator returned sat in 4.056951 secs.
[07/25 21:12:47]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:12:48]  Improved gap from 0 to 48.4375
[07/25 21:12:48]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:12:48]  Verifer returned sat in 0.502077 secs.
[07/25 21:12:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -18302.424561  -18402.342529  16940.501221 -18302.424561    0.082031 -18402.342529        0.0   99.917969       99.917969
1  -18302.342529  -18302.383545  16940.501221 -18302.342529  100.000000 -18302.383545        0.0    0.041016        0.000000
2  -18102.383545  -18203.100342  16940.501221 -18102.383545  200.000000 -18203.100342        0.0  100.716797       99.958984
3  -18004.100342  -18102.342529  16940.501221 -18004.100342  199.000000 -18102.342529        0.0   98.242188       98.242188
4  -18002.342529  -18002.985107  16940.501221 -18002.342529  100.000000 -18002.985107        0.0    0.642578        0.000000
5  -17952.485107  -18002.342529  16990.643799 -17952.485107   50.500000 -18002.342529        0.0   49.857422        0.000000
6  -17901.463623  -17952.444092  17039.622314 -17901.463623  100.878906 -17952.444092        0.0   50.980469        0.000000
7  -17901.463623  -17901.463623  17091.184814 -17901.463623   50.939453 -17901.463623        0.0    0.000000      -48.437500
8  -17850.202881  -17853.026123  17091.184814 -17850.202881   51.260742 -17853.026123        0.0    2.823242      -97.176758
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:12:48]  --------------------------------------------------------------------------------
[07/25 21:12:48]  Iteration: 204 (37 solution, 166 counterexamples)
[07/25 21:12:58]  Generator returned sat in 6.040504 secs.
[07/25 21:12:59]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:13:01]  Improved gap from 0 to 35.9375
[07/25 21:13:01]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:13:01]  Verifer returned sat in 2.306742 secs.
[07/25 21:13:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -18077.114014  -18302.410889  16783.893555 -18077.114014    0.082031 -18302.410889        0.0  225.296875      168.539062
1  -18077.114014  -18145.653076  16783.893555 -18077.114014  225.296875 -18145.653076        0.0   68.539062       68.539062
2  -18077.114014  -18113.051514  16815.354492 -18077.114014   68.498047 -18113.051514        0.0   35.937500        0.000000
3  -18000.903076  -18077.114014  16839.143555 -18000.903076  112.148438 -18077.114014        0.0   76.210938        0.000000
4  -17963.965576  -18000.903076  16902.206055 -17963.965576  113.148438 -18000.903076        0.0   36.937500        0.000000
5  -17928.028076  -17963.965576  16966.268555 -17928.028076   72.875000 -17963.965576        0.0   35.937500        0.000000
6  -17888.922607  -17928.028076  17027.163086 -17888.922607   75.042969 -17928.028076        0.0   39.105469        0.000000
7  -17852.985107  -17888.881592  17091.184570 -17852.985107   75.042969 -17888.881592        0.0   35.896484       -0.041016
8  -17794.849365  -17850.944092  17091.184570 -17794.849365   94.032227 -17850.944092        0.0   56.094727      -41.905273
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:13:01]  --------------------------------------------------------------------------------
[07/25 21:13:01]  Iteration: 205 (37 solution, 167 counterexamples)
[07/25 21:13:16]  Generator returned sat in 10.820456 secs.
[07/25 21:13:16]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:13:17]  Improved gap from 335/8192 to 48.4375
[07/25 21:13:17]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/25 21:13:17]  Verifer returned sat in 0.662290 secs.
[07/25 21:13:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -18469.474854  -18569.474854  17003.022949 -18469.474854    0.081787 -18569.474854        0.0  100.000000      100.000000
1  -18469.474854  -18469.474854  17003.022949 -18469.474854  100.000000 -18469.474854        0.0    0.000000        0.000000
2  -18308.263428  -18370.109131  17003.022949 -18308.263428  161.211426 -18370.109131        0.0   61.845703       61.211426
3  -18116.513428  -18308.263428  17003.022949 -18116.513428  253.595703 -18308.263428        0.0  191.750000      152.961426
4  -18116.513428  -18169.556641  17003.022949 -18116.513428    0.500000 -18169.556641        0.0   53.043213       52.961426
5  -18116.513428  -18169.474854  17050.061523 -18116.513428    0.500000 -18169.474854        0.0   52.961426        0.000000
6  -18068.157715  -18116.513428  17101.624023 -18068.157715  101.317139 -18116.513428        0.0   48.355713       -0.081787
7  -18019.638428  -18068.075928  17153.186523 -18019.638428   96.875000 -18068.075928        0.0   48.437500        0.000000
8  -18019.638428  -18019.638428  17153.186523 -18019.638428    0.500000 -18019.638428        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:13:18]  --------------------------------------------------------------------------------
[07/25 21:13:18]  Iteration: 206 (37 solution, 168 counterexamples)
[07/25 21:13:37]  Generator returned sat in 15.842077 secs.
[07/25 21:13:38]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:13:38]  Improved gap from 0 to 23.4375
[07/25 21:13:39]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/25 21:13:39]  Verifer returned sat in 0.962837 secs.
[07/25 21:13:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22308.394287  -22554.228027  17003.022461 -22308.394287    0.081787 -22554.228027        0.0  245.833740      199.958740
1  -22308.353027  -22408.353027  17003.022461 -22308.353027  245.875000 -22408.353027        0.0  100.000000      100.000000
2  -22108.394043  -22408.353027  17003.022461 -22108.394043  299.958984 -22408.353027        0.0  299.958984      199.958984
3  -22062.437256  -22308.353027  17003.022461 -22062.437256  345.915771 -22308.353027        0.0  245.915771      145.915771
4  -22062.437256  -22108.353027  17003.022461 -22062.437256  245.875000 -22108.353027        0.0   45.915771       45.915771
5  -21984.915527  -22047.134277  17003.022461 -21984.915527  123.437500 -22047.134277        0.0   62.218750       23.437500
6  -21984.915527  -22008.353027  17079.584961 -21984.915527   62.218750 -22008.353027        0.0   23.437500        0.000000
7  -21976.743652  -21984.915527  17156.147461 -21976.743652   31.609375 -21984.915527        0.0    8.171875      -15.265625
8  -21861.478027  -21961.478027  17156.147461 -21861.478027  123.437500 -21961.478027        0.0  100.000000        0.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:13:39]  --------------------------------------------------------------------------------
[07/25 21:13:39]  Iteration: 207 (37 solution, 169 counterexamples)
[07/25 21:13:48]  Generator returned sat in 5.259561 secs.
[07/25 21:13:49]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/25 21:13:51]  Improved gap from 0 to 35.9375
[07/25 21:13:51]  Improved number of small numbers from 58 to 101 out of a max of 101
[07/25 21:13:51]  Verifer returned sat in 2.411002 secs.
[07/25 21:13:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22054.346680  -22215.065186  16972.561035 -22054.346680    0.081543 -22215.065186        0.0  160.718506       99.959229
1  -21984.767334  -22054.305908  16972.561035 -21984.767334  230.297852 -22054.305908        0.0   69.538574       69.538574
2  -21984.767334  -22021.704834  17003.022461 -21984.767334   69.497559 -22021.704834        0.0   36.937500        0.000000
3  -21906.555908  -21984.767334  17024.811035 -21906.555908  115.148926 -21984.767334        0.0   78.211426        0.000000
4  -21869.618408  -21906.555908  17087.873535 -21869.618408  115.148926 -21906.555908        0.0   36.937500        0.000000
5  -21832.680908  -21869.618408  17150.936035 -21832.680908   73.875000 -21869.618408        0.0   36.937500        0.000000
6  -21793.575195  -21832.680908  17211.830078 -21793.575195   76.043213 -21832.680908        0.0   39.105713       -0.000244
7  -21756.637695  -21793.534180  17274.852051 -21756.637695   76.043213 -21793.534180        0.0   36.896484       -0.040771
8  -21698.501709  -21756.596680  17274.852051 -21698.501709   95.032471 -21756.596680        0.0   58.094971      -41.904785
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/25 21:13:52]  --------------------------------------------------------------------------------
[07/25 21:13:52]  Iteration: 208 (37 solution, 170 counterexamples)
[07/25 21:14:02]  Generator returned sat in 6.738404 secs.
[07/25 21:14:03]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:03]  Improved number of small numbers from 57 to 100 out of a max of 100
[07/25 21:14:03]  Verifer returned sat in 0.646805 secs.
[07/25 21:14:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22293.382324  -22493.341309  17274.852051 -22293.382324    0.081543 -22493.341309        0.0  199.958984       99.959229
1  -22293.382080  -22393.341553  17274.852051 -22293.382080  199.959229 -22393.341553        0.0   99.959473       -0.040527
2  -22293.300781  -22293.341309  17274.852051 -22293.300781  100.040771 -22293.341309        0.0    0.040527      -99.959229
3  -21745.076172  -22177.280273  17274.852051 -21745.076172  548.265137 -22177.280273        0.0  432.204102      348.265381
4  -21745.076172  -21993.341553  17274.852051 -21745.076172  432.163086 -21993.341553        0.0  248.265381      248.265381
5  -21577.260010  -21993.300537  17274.852051 -21577.260010  416.081543 -21993.300537        0.0  416.040527      316.081543
6  -21577.260010  -21893.341553  17274.852051 -21577.260010  300.040771 -21893.341553        0.0  316.081543      216.081543
7  -21577.260010  -21719.168213  17274.852051 -21577.260010  283.938721 -21719.168213        0.0  141.908203      116.081543
8  -21444.994873  -21693.341309  17274.852051 -21444.994873  274.173340 -21693.341309        0.0  248.346436      148.346680
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/25 21:14:04]  --------------------------------------------------------------------------------
[07/25 21:14:04]  Iteration: 209 (37 solution, 171 counterexamples)
[07/25 21:14:19]  Generator returned sat in 11.202271 secs.
[07/25 21:14:19]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:22]  Verifer returned unsat in 2.339456 secs.
[07/25 21:14:22]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:22]  --------------------------------------------------------------------------------
[07/25 21:14:22]  Iteration: 210 (38 solution, 171 counterexamples)
[07/25 21:14:29]  Generator returned sat in 3.616750 secs.
[07/25 21:14:29]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:32]  Verifer returned unsat in 2.320466 secs.
[07/25 21:14:32]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:32]  --------------------------------------------------------------------------------
[07/25 21:14:32]  Iteration: 211 (39 solution, 171 counterexamples)
[07/25 21:14:45]  Generator returned sat in 8.683205 secs.
[07/25 21:14:45]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:45]  Verifer returned unsat in 0.209576 secs.
[07/25 21:14:45]  Proved solution: 
[1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:45]  --------------------------------------------------------------------------------
[07/25 21:14:45]  Iteration: 212 (40 solution, 171 counterexamples)
[07/25 21:14:53]  Generator returned sat in 3.630725 secs.
[07/25 21:14:53]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:53]  Verifer returned unsat in 0.119659 secs.
[07/25 21:14:53]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:14:53]  --------------------------------------------------------------------------------
[07/25 21:14:53]  Iteration: 213 (41 solution, 171 counterexamples)
[07/25 21:15:01]  Generator returned sat in 3.818749 secs.
[07/25 21:15:01]  Candidate solution: 
[1m[94mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:02]  Verifer returned unsat in 0.507409 secs.
[07/25 21:15:02]  Proved solution: 
[1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:02]  --------------------------------------------------------------------------------
[07/25 21:15:02]  Iteration: 214 (42 solution, 171 counterexamples)
[07/25 21:15:12]  Generator returned sat in 6.114252 secs.
[07/25 21:15:12]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/25 21:15:13]  Improved gap from 0 to 23.4375
[07/25 21:15:14]  Improved number of small numbers from 46 to 65 out of a max of 101
[07/25 21:15:14]  Verifer returned sat in 1.459624 secs.
[07/25 21:15:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22670.192332  -22919.235789  17700.746338 -22670.192332    0.081299 -22919.235789        0.0  249.043457      149.043508
1  -22670.192332  -22719.235840  17700.746338 -22670.192332  249.043213 -22719.235840        0.0   49.043508       49.043508
2  -22670.192332  -22693.629883  17751.702830 -22670.192332    0.020264 -22693.629883        0.0   23.437551        0.000000
3  -22670.192332  -22670.192332  17826.096924 -22670.192332    0.020508 -22670.192332        0.0    0.000000      -25.605906
4  -22421.148875  -22547.690989  17826.096924 -22421.148875  249.043457 -22547.690989        0.0  126.542114      123.437551
5  -22421.148875  -22486.429932  17826.096924 -22421.148875  126.521729 -22486.429932        0.0   65.281057       23.437551
6  -22421.148875  -22444.586375  17902.659373 -22421.148875   65.260864 -22444.586375        0.0   23.437500        0.000000
7  -22409.955942  -22421.148875  17979.221680 -22409.955942   34.630432 -22421.148875        0.0   11.192932      -12.244761
8  -22294.606760  -22397.711182  17979.221680 -22294.606760  126.542114 -22397.711182        0.0  103.104421        3.104421
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/25 21:15:14]  --------------------------------------------------------------------------------
[07/25 21:15:14]  Iteration: 215 (42 solution, 172 counterexamples)
[07/25 21:15:26]  Generator returned sat in 7.866532 secs.
[07/25 21:15:27]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:28]  Verifer returned unsat in 1.537780 secs.
[07/25 21:15:28]  Proved solution: 
[1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:28]  --------------------------------------------------------------------------------
[07/25 21:15:28]  Iteration: 216 (43 solution, 172 counterexamples)
[07/25 21:15:38]  Generator returned sat in 5.677478 secs.
[07/25 21:15:38]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:39]  Verifer returned unsat in 0.823730 secs.
[07/25 21:15:39]  Proved solution: 
[1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:39]  --------------------------------------------------------------------------------
[07/25 21:15:39]  Iteration: 217 (44 solution, 172 counterexamples)
[07/25 21:15:45]  Generator returned unsat in 1.503078 secs.
[07/25 21:15:45]  [96mNo more solutions found[0m
[07/25 21:15:45]  Final solutions:
[07/25 21:15:45]  0: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  1: [1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  2: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  3: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  4: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  5: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  6: [1m[92mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  7: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  8: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  9: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  10: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  11: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  12: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  13: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  14: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  15: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  16: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  17: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  18: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  19: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  20: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  21: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  22: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  23: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  24: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  25: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  26: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  27: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  28: [1m[92mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  29: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  30: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  31: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  32: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  33: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  34: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  35: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  36: [1m[92mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  37: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  38: [1m[92mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  39: [1m[92mif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  40: [1m[92mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  41: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  42: [1m[92mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  43: [1m[92mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/25 21:15:45]  Took 1342.323218 secs.
