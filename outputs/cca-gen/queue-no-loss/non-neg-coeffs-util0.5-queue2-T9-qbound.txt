[07/19 22:02:00]  --------------------------------------------------------------------------------
[07/19 22:02:00]  Iteration: 1 (0 solution, 0 counterexamples)
[07/19 22:02:00]  Generator returned sat in 0.005566 secs.
[07/19 22:02:00]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:02:01]  Improved gap from 1/10 to 100
[07/19 22:02:01]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:02:01]  Verifer returned sat in 0.348803 secs.
[07/19 22:02:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0      -28376.30       -28476.3   28476.3    -28376.30      0.10     -28476.3        0.0    100.00          100.00
1      -28376.30       -28476.3   28476.3    -28376.30    100.00     -28476.3        0.0    100.00            0.00
2      -28276.40       -28276.5   28476.3    -28276.40    199.90     -28276.5        0.0      0.10           -0.10
3      -28227.55       -28276.3   28476.3    -28227.55     48.95     -28276.3        0.0     48.75          -51.25
4      -27776.40       -28079.3   28476.3    -27776.40    499.90     -28079.3        0.0    302.90          299.90
5      -26283.50       -27976.3   28476.3    -26283.50   1795.80     -27976.3        0.0   1692.80         1692.80
6      -23782.30       -27876.3   28476.3    -23782.30   4194.00     -27876.3        0.0   4094.00         4094.00
7      -18686.30       -27776.3   28476.3    -18686.30   9190.00     -27776.3        0.0   9090.00         9090.00
8       -8788.30       -27676.3   28476.3     -8788.30  18988.00     -27676.3        0.0  18888.00        18888.00
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:01]  --------------------------------------------------------------------------------
[07/19 22:02:01]  Iteration: 2 (0 solution, 1 counterexamples)
[07/19 22:02:01]  Generator returned sat in 0.033264 secs.
[07/19 22:02:01]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:02]  Improved number of small numbers from 57 to 100 out of a max of 100
[07/19 22:02:02]  Verifer returned sat in 0.574944 secs.
[07/19 22:02:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26125.476318  -26717.225342  28476.299805 -26125.476318    0.099609 -26717.225342        0.0  591.749023      500.000000
1  -26125.426514  -26625.476318  28476.299805 -26125.426514  591.798828 -26625.476318        0.0  500.049805      400.049805
2  -26025.376709  -26524.476318  28476.299805 -26025.376709  600.099609 -26524.476318        0.0  499.099609      400.099609
3  -26025.376709  -26425.476318  28476.299805 -26025.376709  499.049805 -26425.476318        0.0  400.099609      300.099609
4  -26025.376709  -26225.476318  28476.299805 -26025.376709  396.399414 -26225.476318        0.0  200.099609      200.099609
5  -25826.276611  -26125.476318  28476.299805 -25826.276611  399.199707 -26125.476318        0.0  299.199707      299.199707
6  -25725.376465  -26125.426514  28476.299805 -25725.376465  400.099854 -26125.426514        0.0  400.050049      300.099854
7  -25725.376465  -25925.526611  28476.299805 -25725.376465  150.024902 -25925.526611        0.0  200.150146      200.099854
8  -25725.376465  -25925.476318  28476.299805 -25725.376465  149.974854 -25925.476318        0.0  200.099854      100.099854
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:02]  --------------------------------------------------------------------------------
[07/19 22:02:02]  Iteration: 3 (0 solution, 2 counterexamples)
[07/19 22:02:02]  Generator returned sat in 0.038208 secs.
[07/19 22:02:02]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:03]  Improved number of small numbers from 57 to 84 out of a max of 100
[07/19 22:02:03]  Verifer returned sat in 0.768601 secs.
[07/19 22:02:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t
0  -26447.781738  -27147.781738  28998.60498 -26447.781738     0.099365 -27147.781738        0.0   700.000000      700.000000
1  -26447.781738  -27126.781611  28998.60498 -26447.781738   699.999756 -27126.781611        0.0   678.999873      600.000000
2  -26447.781738  -26947.782861  28998.60498 -26447.781738   678.999756 -26947.782861        0.0   500.001123      500.000000
3  -26447.781738  -26947.781738  28998.60498 -26447.781738     0.001250 -26947.781738        0.0   500.000000      400.000000
4  -26447.781738  -26847.781611  28998.60498 -26447.781738   301.002500 -26847.781611        0.0   399.999873      300.000000
5  -25826.276611  -26747.781611  28998.60498 -25826.276611  1021.505000 -26747.781611        0.0   921.505000      821.505127
6  -24403.769736  -26547.781738  28998.60498 -24403.769736  2344.011875 -26547.781738        0.0  2144.012002     2144.012002
7  -24403.769736  -26447.782861  28998.60498 -24403.769736     0.010000 -26447.782861        0.0  2044.013125     2044.012002
8  -24403.769736  -26447.781738  28998.60498 -24403.769736   601.018125 -26447.781738        0.0  2044.012002     1944.012002
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:04]  --------------------------------------------------------------------------------
[07/19 22:02:04]  Iteration: 4 (0 solution, 3 counterexamples)
[07/19 22:02:04]  Generator returned sat in 0.009482 secs.
[07/19 22:02:04]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:04]  Improved gap from 0 to 100
[07/19 22:02:04]  Improved number of small numbers from 56 to 93 out of a max of 101
[07/19 22:02:04]  Verifer returned sat in 0.686296 secs.
[07/19 22:02:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25826.277100  -26425.780518  28276.60376 -25826.277100    0.099365 -26425.780518        0.0  599.503418      599.503418
1  -25826.277100  -26325.780518  28276.60376 -25826.277100  599.501465 -26325.780518        0.0  499.503418      499.503418
2  -25826.276855  -26225.780762  28276.60376 -25826.276855  499.503662 -26225.780762        0.0  399.503906      399.503662
3  -25826.276855  -26225.780518  28276.60376 -25826.276855   74.125313 -26225.780518        0.0  399.503662      299.503662
4  -25826.276855  -26125.780518  28276.60376 -25826.276855  149.250625 -26125.780518        0.0  299.503662      199.503662
5  -25826.276855  -25925.780687  28276.60376 -25826.276855  299.501250 -25925.780687        0.0   99.503831       99.503662
6  -25325.778187  -25826.277100  28276.60376 -25325.778187  600.002500 -25826.277100        0.0  500.498913      500.002331
7  -25325.778187  -25725.782959  28276.60376 -25325.778187    0.010000 -25725.782959        0.0  400.004772      400.002331
8  -25325.778187  -25725.780518  28276.60376 -25325.778187    0.010000 -25725.780518        0.0  400.002331      300.002331
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:05]  --------------------------------------------------------------------------------
[07/19 22:02:05]  Iteration: 5 (0 solution, 4 counterexamples)
[07/19 22:02:05]  Generator returned sat in 0.151577 secs.
[07/19 22:02:05]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:05]  Improved gap from 0 to 0
[07/19 22:02:06]  Improved number of small numbers from 58 to 78 out of a max of 101
[07/19 22:02:06]  Verifer returned sat in 0.559376 secs.
[07/19 22:02:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26025.802979  -26225.800518  27976.616455 -26025.802979    0.099121 -26225.800518        0.0  199.997539       99.997734
1  -26025.800518  -26125.800293  27976.616455 -26025.800518  200.000000 -26125.800293        0.0   99.999775        0.000195
2  -26025.800518  -26025.800518  28076.616211 -26025.800518   99.997559 -26025.800518        0.0    0.000000       -0.000049
3  -25725.788018  -25925.800537  28076.616211 -25725.788018  300.012500 -25925.800537        0.0  200.012520      200.012451
4  -25725.788018  -25825.800537  28076.616211 -25725.788018    0.010000 -25825.800537        0.0  100.012520      100.012451
5  -25725.788018  -25825.800293  28076.616211 -25725.788018    0.010000 -25825.800293        0.0  100.012275        0.012451
6  -25725.788018  -25725.800293  28176.603760 -25725.788018    0.010000 -25725.800293        0.0    0.012275        0.000000
7  -25725.788018  -25725.788018  28276.603760 -25725.788018    0.010000 -25725.788018        0.0    0.000000        0.000000
8  -25725.778018  -25725.787842  28276.603760 -25725.778018    0.010000 -25725.787842        0.0    0.009824      -99.990000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:02:06]  --------------------------------------------------------------------------------
[07/19 22:02:06]  Iteration: 6 (0 solution, 5 counterexamples)
[07/19 22:02:06]  Generator returned sat in 0.012205 secs.
[07/19 22:02:06]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:02:06]  Improved gap from 1/800 to 100
[07/19 22:02:06]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:02:06]  Verifer returned sat in 0.301327 secs.
[07/19 22:02:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25925.799072  -26025.800537  28176.60376 -25925.799072    0.098877 -26025.800537        0.0  100.001465      100.001465
1  -25925.799072  -25925.800537  28176.60376 -25925.799072    0.001221 -25925.800537        0.0    0.001465        0.001465
2  -25725.799072  -25925.299316  28176.60376 -25725.799072  200.001465 -25925.299316        0.0  199.500244      100.001465
3  -25725.799072  -25825.800293  28176.60376 -25725.799072    0.001250 -25825.800293        0.0  100.001221        0.001465
4  -25725.799072  -25725.800537  28176.60376 -25725.799072    0.010000 -25725.800537        0.0    0.001465      -99.998535
5  -25525.300537  -25625.800537  28176.60376 -25525.300537  200.500000 -25625.800537        0.0  100.500000        0.500000
6  -25325.801758  -25525.299072  28176.60376 -25325.801758  299.998779 -25525.299072        0.0  199.497314       99.998779
7  -25325.801758  -25326.049805  28176.60376 -25325.801758    0.010000 -25326.049805        0.0    0.248047       -0.001221
8  -24925.799072  -25325.800537  28176.60376 -24925.799072  400.250732 -25325.800537        0.0  400.001465      300.001465
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:07]  --------------------------------------------------------------------------------
[07/19 22:02:07]  Iteration: 7 (0 solution, 6 counterexamples)
[07/19 22:02:07]  Generator returned sat in 0.055617 secs.
[07/19 22:02:07]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:02:07]  Improved gap from 5/16384 to 100
[07/19 22:02:08]  Improved number of small numbers from 40 to 74 out of a max of 101
[07/19 22:02:08]  Verifer returned sat in 0.865325 secs.
[07/19 22:02:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26318.410889  -26618.411133  28769.214153 -26318.410889    0.098877 -26618.411133        0.0  300.000244      300.000042
1  -26318.410889  -26518.411133  28769.214153 -26318.410889    0.049316 -26518.411133        0.0  200.000244      200.000042
2  -25818.361572  -26418.460205  28769.214153 -25818.361572  700.049561 -26418.460205        0.0  600.098633      600.049358
3  -25818.361572  -26418.410889  28769.214153 -25818.361572   13.689045 -26418.410889        0.0  600.049316      500.049358
4  -25818.361572  -26318.410889  28769.214153 -25818.361572   29.378090 -26318.410889        0.0  500.049316      400.049358
5  -25818.361572  -26218.410889  28769.214153 -25818.361572   60.756180 -26218.410889        0.0  400.049316      300.049358
6  -25818.361572  -26067.435547  28769.214153 -25818.361572  123.512360 -26067.435547        0.0  249.073975      200.049358
7  -25818.361572  -25918.410931  28769.214153 -25818.361572  249.024719 -25918.410931        0.0  100.049358      100.049358
8  -25418.361492  -25918.410931  28769.214153 -25418.361492  500.049438 -25918.410931        0.0  500.049438      400.049438
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:08]  --------------------------------------------------------------------------------
[07/19 22:02:08]  Iteration: 8 (0 solution, 7 counterexamples)
[07/19 22:02:09]  Generator returned sat in 0.228256 secs.
[07/19 22:02:09]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:09]  Improved number of small numbers from 42 to 100 out of a max of 100
[07/19 22:02:09]  Verifer returned sat in 0.500507 secs.
[07/19 22:02:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26018.391602  -26518.391357  28669.144775 -26018.391602    0.098877 -26518.391357        0.0  499.999756      400.000000
1  -26018.366699  -26318.391602  28669.144775 -26018.366699  500.024658 -26318.391602        0.0  300.024902      300.024902
2  -25718.391602  -26218.391602  28669.144775 -25718.391602  600.000000 -26218.391602        0.0  500.000000      500.000000
3  -25718.391602  -26217.440918  28669.144775 -25718.391602  398.049316 -26217.440918        0.0  499.049316      400.000000
4  -25718.391602  -26018.416016  28669.144775 -25718.391602  399.049316 -26018.416016        0.0  300.024414      300.000000
5  -25618.366699  -26018.391602  28669.144775 -25618.366699  400.049316 -26018.391602        0.0  400.024902      300.024902
6  -25618.366699  -25918.391357  28669.144775 -25618.366699  200.000000 -25918.391357        0.0  300.024658      200.024902
7  -25618.366699  -25718.416260  28669.144775 -25618.366699  299.049561 -25718.416260        0.0  100.049561      100.024902
8  -25418.366699  -25718.391602  28669.144775 -25418.366699  300.049561 -25718.391602        0.0  300.024902      200.024902
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:10]  --------------------------------------------------------------------------------
[07/19 22:02:10]  Iteration: 9 (0 solution, 8 counterexamples)
[07/19 22:02:10]  Generator returned sat in 0.071209 secs.
[07/19 22:02:10]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:02:10]  Improved gap from 0 to 100
[07/19 22:02:10]  Improved number of small numbers from 93 to 101 out of a max of 101
[07/19 22:02:10]  Verifer returned sat in 0.260039 secs.
[07/19 22:02:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26018.941162  -26618.891602  28669.144775 -26018.941162    0.098877 -26618.891602        0.0  599.950439      599.950439
1  -26018.891602  -26518.891602  28669.144775 -26018.891602  600.000000 -26518.891602        0.0  500.000000      500.000000
2  -25918.891602  -26418.891846  28669.144775 -25918.891602  600.000000 -26418.891846        0.0  500.000244      500.000000
3  -25918.891602  -26418.842041  28669.144775 -25918.891602  400.098877 -26418.842041        0.0  499.950439      400.000000
4  -25918.891602  -26218.891602  28669.144775 -25918.891602  400.098877 -26218.891602        0.0  300.000000      300.000000
5  -25818.792725  -26218.891602  28669.144775 -25818.792725  400.098877 -26218.891602        0.0  400.098877      300.098877
6  -25818.792725  -26018.941162  28669.144775 -25818.792725  400.098877 -26018.941162        0.0  200.148438      200.098877
7  -25618.842285  -26018.891602  28669.144775 -25618.842285  400.098877 -26018.891602        0.0  400.049316      300.049316
8  -25618.792725  -25918.891602  28669.144775 -25618.792725  400.098877 -25918.891602        0.0  300.098877      200.098877
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:11]  --------------------------------------------------------------------------------
[07/19 22:02:11]  Iteration: 10 (0 solution, 9 counterexamples)
[07/19 22:02:11]  Generator returned sat in 0.375510 secs.
[07/19 22:02:11]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:02:12]  Improved number of small numbers from 84 to 84 out of a max of 100
[07/19 22:02:12]  Verifer returned sat in 0.325220 secs.
[07/19 22:02:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t
0  -26018.891602  -26618.891602  28669.144775 -26018.891602     0.098877 -26618.891602        0.0   600.000000      600.000000
1  -25918.891602  -26518.891602  28669.144775 -25918.891602   700.000000 -26518.891602        0.0   600.000000      600.000000
2  -25918.891602  -26418.891602  28669.144775 -25918.891602   600.000000 -26418.891602        0.0   500.000000      500.000000
3  -25918.891602  -26318.891602  28669.144775 -25918.891602   177.821723 -26318.891602        0.0   400.000000      400.000000
4  -25918.891602  -26218.891602  28669.144775 -25918.891602   266.732585 -26218.891602        0.0   300.000000      300.000000
5  -25818.792725  -26218.891602  28669.144775 -25818.792725   400.098877 -26218.891602        0.0   400.098877      300.098877
6  -25618.743286  -26118.891602  28669.144775 -25618.743286   600.148315 -26118.891602        0.0   500.148315      400.148315
7  -25218.669128  -26018.891602  28669.144775 -25218.669128   900.222473 -26018.891602        0.0   800.222473      700.222473
8  -24668.557892  -25918.891602  28669.144775 -24668.557892  1350.333710 -25918.891602        0.0  1250.333710     1150.333710
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:12]  --------------------------------------------------------------------------------
[07/19 22:02:12]  Iteration: 11 (0 solution, 10 counterexamples)
[07/19 22:02:12]  Generator returned sat in 0.084332 secs.
[07/19 22:02:12]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:13]  Improved gap from 0 to 100
[07/19 22:02:13]  Improved number of small numbers from 89 to 97 out of a max of 101
[07/19 22:02:13]  Verifer returned sat in 0.369851 secs.
[07/19 22:02:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -26318.792969  -26718.891602  28669.144531 -26318.792969    0.098633 -26718.891602  200.098633  200.000000      100.000244
1  -26318.792969  -26518.916504  28669.144531 -26318.792969  199.975342 -26518.916504  200.098633    0.024902        0.000244
2  -26068.756104  -26518.891602  28669.144531 -26068.756104  250.061768 -26518.891602  200.098633  250.036865      150.037109
3  -26068.756104  -26318.891846  28669.144531 -26068.756104   25.006165 -26318.891846  200.098633   50.037109       50.037109
4  -26068.756104  -26318.891846  28669.144531 -26068.756104   50.012329 -26318.891846  200.098633   50.037109      -49.962891
5  -26018.768555  -26218.891602  28669.144531 -26018.768555  100.024658 -26218.891602  200.098633    0.024414      -99.975342
6  -25818.743652  -26118.891846  28669.144531 -25818.743652  200.049316 -26118.891846  200.098633  100.049561        0.049561
7  -25518.694580  -26018.817871  28669.144531 -25518.694580  400.098633 -26018.817871  200.098633  300.024658      200.098633
8  -25018.521973  -25818.891846  28669.144531 -25018.521973  800.197266 -25818.891846  200.098633  600.271240      600.271240
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:13]  --------------------------------------------------------------------------------
[07/19 22:02:13]  Iteration: 12 (0 solution, 11 counterexamples)
[07/19 22:02:13]  Generator returned sat in 0.067755 secs.
[07/19 22:02:14]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:14]  Improved number of small numbers from 78 to 88 out of a max of 100
[07/19 22:02:14]  Verifer returned sat in 0.345372 secs.
[07/19 22:02:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -26318.793213  -26718.891602  28669.144531 -26318.793213    0.098633 -26718.891602  200.098633  199.999756      100.000000
1  -26318.793213  -26518.916504  28669.144531 -26318.793213  199.975342 -26518.916504  200.098633    0.024658        0.000000
2  -26039.763428  -26518.891846  28669.144531 -26039.763428  279.054443 -26518.891846  200.098633  279.029785      179.029785
3  -26039.763428  -26318.892090  28669.144531 -26039.763428   52.678144 -26318.892090  200.098633   79.030029       79.029785
4  -26039.763428  -26318.891846  28669.144531 -26039.763428   79.017216 -26318.891846  200.098633   79.029785      -20.970215
5  -26000.267388  -26200.378350  28669.144531 -26000.267388  118.525825 -26200.378350  200.098633    0.012329      -81.474175
6  -25822.490980  -26118.891846  28669.144531 -25822.490980  177.788737 -26118.891846  200.098633   96.302233       -3.697767
7  -25652.110107  -25918.892090  28669.144531 -25652.110107  266.683105 -25918.892090  200.098633   66.683350       66.683105
8  -25318.768799  -25918.879395  28669.144531 -25318.768799  400.024658 -25918.879395  200.098633  400.011963      300.024414
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:14]  --------------------------------------------------------------------------------
[07/19 22:02:14]  Iteration: 13 (0 solution, 12 counterexamples)
[07/19 22:02:15]  Generator returned sat in 0.292748 secs.
[07/19 22:02:15]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:15]  Improved gap from 0 to 0
[07/19 22:02:15]  Improved number of small numbers from 82 to 99 out of a max of 101
[07/19 22:02:15]  Verifer returned sat in 0.544331 secs.
[07/19 22:02:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26418.893311  -26818.891846  28669.144287 -26418.893311    0.098633 -26818.891846        0.0  399.998535      299.998535
1  -26418.893311  -26618.891846  28669.144287 -26418.893311  399.998535 -26618.891846        0.0  199.998535      199.998535
2  -26318.880615  -26618.891846  28669.144287 -26318.880615  300.011230 -26618.891846        0.0  300.011230      200.011230
3  -26318.880615  -26418.891846  28669.144287 -26318.880615  300.011230 -26418.891846        0.0  100.011230      100.011230
4  -26318.880615  -26318.892090  28669.144287 -26318.880615    0.010000 -26318.892090        0.0    0.011475        0.011230
5  -26318.880615  -26318.891846  28769.133057 -26318.880615    0.010000 -26318.891846        0.0    0.011230        0.000000
6  -26318.391846  -26318.880615  28868.644287 -26318.391846    0.500000 -26318.880615        0.0    0.488770        0.000000
7  -26318.391846  -26318.391846  28968.644287 -26318.391846    0.010000 -26318.391846        0.0    0.000000        0.000000
8  -26318.381846  -26318.390625  28968.644287 -26318.381846    0.010000 -26318.390625        0.0    0.008779      -99.990000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:02:16]  --------------------------------------------------------------------------------
[07/19 22:02:16]  Iteration: 14 (0 solution, 13 counterexamples)
[07/19 22:02:16]  Generator returned sat in 0.034764 secs.
[07/19 22:02:16]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:16]  Improved gap from 0 to 0
[07/19 22:02:17]  Improved number of small numbers from 63 to 101 out of a max of 101
[07/19 22:02:17]  Verifer returned sat in 0.467821 secs.
[07/19 22:02:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27517.231689  -27817.229248  28770.144287 -27517.231689    0.098633 -27817.229248        0.0  299.997559      299.997559
1  -27517.231689  -27717.229248  28770.144287 -27517.231689    0.002500 -27717.229248        0.0  199.997559      199.997559
2  -27317.229248  -27717.229248  28770.144287 -27317.229248  400.000000 -27717.229248        0.0  400.000000      300.000000
3  -27315.741943  -27517.229492  28770.144287 -27315.741943  401.487305 -27517.229492        0.0  201.487549      201.487305
4  -27315.741943  -27417.229248  28770.144287 -27315.741943    0.010000 -27417.229248        0.0  101.487305      101.487305
5  -27315.741943  -27417.229248  28770.144287 -27315.741943    0.010000 -27417.229248        0.0  101.487305        1.487305
6  -27315.741943  -27317.229248  28868.656982 -27315.741943    1.500000 -27317.229248        0.0    1.487305        0.000000
7  -27315.729248  -27315.741943  28968.644287 -27315.729248    1.500000 -27315.741943        0.0    0.012695        0.000000
8  -27315.729248  -27315.729248  28968.644287 -27315.729248    0.010000 -27315.729248        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:02:17]  --------------------------------------------------------------------------------
[07/19 22:02:17]  Iteration: 15 (0 solution, 14 counterexamples)
[07/19 22:02:17]  Generator returned sat in 0.043784 secs.
[07/19 22:02:17]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:18]  Improved gap from 525/1024 to 0
[07/19 22:02:18]  Improved number of small numbers from 61 to 83 out of a max of 101
[07/19 22:02:18]  Verifer returned sat in 0.924892 secs.
[07/19 22:02:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27923.475098  -27923.485107  28766.666992 -27923.475098    0.098633 -27923.485107        0.0    0.010010        0.008301
1  -27923.475098  -27923.483398  28866.658691 -27923.475098    0.001667 -27923.483398        0.0    0.008301        0.000000
2  -27623.481689  -27923.474854  28866.658691 -27623.481689  300.001709 -27923.474854        0.0  299.993164      199.993408
3  -27623.481689  -27823.474854  28866.658691 -27623.481689    0.001465 -27823.474854        0.0  199.993164       99.993408
4  -27623.481689  -27623.483356  28866.658691 -27623.481689    0.010000 -27623.483356        0.0    0.001667       -0.006592
5  -27623.473356  -27623.475023  28966.650316 -27623.473356    0.010000 -27623.475023        0.0    0.001667       -0.006634
6  -27623.465023  -27623.466689  29066.641982 -27623.465023    0.010000 -27623.466689        0.0    0.001667       -0.006634
7  -27623.456689  -27623.458356  29166.633545 -27623.456689    0.010000 -27623.458356        0.0    0.001667       -0.006738
8  -27623.448356  -27623.449951  29166.633789 -27623.448356    0.010000 -27623.449951        0.0    0.001595      -99.998161
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:02:19]  --------------------------------------------------------------------------------
[07/19 22:02:19]  Iteration: 16 (0 solution, 15 counterexamples)
[07/19 22:02:20]  Generator returned sat in 0.620736 secs.
[07/19 22:02:20]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:02:20]  Improved gap from 0 to 100
[07/19 22:02:20]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/19 22:02:20]  Verifer returned sat in 0.406907 secs.
[07/19 22:02:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27623.535889  -28023.535889  28866.670166 -27623.535889    0.098633 -28023.535889        0.0  400.000000      399.950684
1  -27623.535889  -28023.486572  28866.670166 -27623.535889    0.049316 -28023.486572        0.0  399.950684      299.950684
2  -27223.437500  -27923.486572  28866.670166 -27223.437500  800.049072 -27923.486572        0.0  700.049072      600.049072
3  -27223.437500  -27823.486572  28866.670166 -27223.437500  395.049072 -27823.486572        0.0  600.049072      500.049072
4  -27223.437500  -27623.486572  28866.670166 -27223.437500  396.049072 -27623.486572        0.0  400.049072      400.049072
5  -27223.437500  -27621.536133  28866.670166 -27223.437500  397.049072 -27621.536133        0.0  398.098633      300.049072
6  -27223.437500  -27523.486572  28866.670166 -27223.437500  398.049072 -27523.486572        0.0  300.049072      200.049072
7  -27124.437500  -27323.486572  28866.670166 -27124.437500  399.049072 -27323.486572        0.0  199.049072      199.049072
8  -26923.437500  -27323.486572  28866.670166 -26923.437500  400.049072 -27323.486572        0.0  400.049072      300.049072
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:21]  --------------------------------------------------------------------------------
[07/19 22:02:21]  Iteration: 17 (0 solution, 16 counterexamples)
[07/19 22:02:21]  Generator returned sat in 0.173380 secs.
[07/19 22:02:21]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:02:21]  Improved gap from 0 to 1.5625
[07/19 22:02:21]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:02:21]  Verifer returned sat in 0.222384 secs.
[07/19 22:02:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27723.535889  -28123.535889  28866.670166 -27723.535889    0.098633 -28123.535889        0.0  400.000000      400.000000
1  -27723.535889  -28123.535889  28866.670166 -27723.535889  400.000000 -28123.535889        0.0  400.000000      300.000000
2  -27721.634521  -27923.535889  28866.670166 -27721.634521  401.901367 -27923.535889        0.0  201.901367      201.901367
3  -27721.634521  -27823.535889  28866.670166 -27721.634521  201.852051 -27823.535889        0.0  101.901367      101.901367
4  -27721.634521  -27723.683838  28866.670166 -27721.634521    2.000000 -27723.683838        0.0    2.049316        1.901367
5  -27721.634521  -27723.535889  28964.719482 -27721.634521    2.000000 -27723.535889        0.0    1.901367       -0.049316
6  -27721.535889  -27721.585205  29062.768799 -27721.535889    2.000000 -27721.585205        0.0    0.049316       -1.901367
7  -27719.585205  -27719.634521  29161.206299 -27719.585205    2.000000 -27719.634521        0.0    0.049316       -1.513184
8  -27717.634521  -27718.072021  29161.206299 -27717.634521    2.000000 -27718.072021        0.0    0.437500      -99.562500
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:02:22]  --------------------------------------------------------------------------------
[07/19 22:02:22]  Iteration: 18 (0 solution, 17 counterexamples)
[07/19 22:02:23]  Generator returned sat in 0.602834 secs.
[07/19 22:02:23]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:02:23]  Improved gap from 0 to 100
[07/19 22:02:24]  Improved number of small numbers from 64 to 83 out of a max of 101
[07/19 22:02:24]  Verifer returned sat in 0.802422 secs.
[07/19 22:02:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28073.602295  -28073.603760  29161.206299 -28073.602295    0.098633 -28073.603760        0.0    0.001465        0.000244
1  -28073.601074  -28073.602539  29161.206299 -28073.601074    0.002686 -28073.602539        0.0    0.001465      -99.998535
2  -27973.601318  -27973.602383  29161.206299 -27973.601318  100.001221 -27973.602383        0.0    0.001064      -99.998779
3  -27673.602383  -27773.603633  29161.206299 -27673.602383  300.000000 -27773.603633        0.0  100.001250      100.000156
4  -27673.602383  -27773.602539  29161.206299 -27673.602383    0.010000 -27773.602539        0.0  100.000156        0.000156
5  -27673.602383  -27673.602383  29161.206299 -27673.602383    0.010000 -27673.602383        0.0    0.000000      -99.999844
6  -27522.592383  -27522.592383  29161.206299 -27522.592383  151.010000 -27522.592383        0.0    0.000000      -48.989844
7  -27245.076758  -27373.602539  29161.206299 -27245.076758  277.515625 -27373.602539        0.0  128.525781      128.525781
8  -26895.086914  -27373.602539  29161.206299 -26895.086914  478.515625 -27373.602539        0.0  478.515625      378.515625
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:24]  --------------------------------------------------------------------------------
[07/19 22:02:24]  Iteration: 19 (0 solution, 18 counterexamples)
[07/19 22:02:25]  Generator returned sat in 0.043932 secs.
[07/19 22:02:25]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:02:25]  Improved gap from 633601/6400 to 100
[07/19 22:02:25]  Improved number of small numbers from 66 to 74 out of a max of 101
[07/19 22:02:25]  Verifer returned sat in 0.625380 secs.
[07/19 22:02:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28073.602295  -28074.612549  29161.206299 -28073.602295    0.098389 -28074.612549        0.0    1.010254        1.000088
1  -28073.601318  -28074.602295  29161.206299 -28073.601318    1.011230 -28074.602295        0.0    1.000977      -98.998936
2  -27973.601318  -27974.602383  29161.206299 -27973.601318  101.000977 -27974.602383        0.0    1.001064      -98.998936
3  -27673.602383  -27774.602383  29161.206299 -27673.602383  301.000000 -27774.602383        0.0  101.000000      101.000000
4  -27673.602383  -27773.602539  29161.206299 -27673.602383    0.010000 -27773.602539        0.0  100.000156        1.000000
5  -27673.602383  -27673.602383  29161.206299 -27673.602383    0.010000 -27673.602383        0.0    0.000000      -99.000000
6  -27522.592383  -27522.592383  29161.206299 -27522.592383  151.010000 -27522.592383        0.0    0.000000      -47.990000
7  -27245.077383  -27374.602383  29161.206299 -27245.077383  277.515000 -27374.602383        0.0  129.525000      129.525000
8  -26897.087305  -27374.602383  29161.206299 -26897.087305  477.515078 -27374.602383        0.0  477.515078      377.515078
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:26]  --------------------------------------------------------------------------------
[07/19 22:02:26]  Iteration: 20 (0 solution, 19 counterexamples)
[07/19 22:02:26]  Generator returned sat in 0.061895 secs.
[07/19 22:02:26]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:27]  Improved number of small numbers from 73 to 73 out of a max of 100
[07/19 22:02:27]  Verifer returned sat in 0.547658 secs.
[07/19 22:02:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28073.602295  -28074.612549  29161.206299 -28073.602295    0.098389 -28074.612549        0.0    1.010254        1.000088
1  -28073.601318  -28074.602295  29161.206299 -28073.601318    1.011230 -28074.602295        0.0    1.000977      -98.998936
2  -27973.601318  -27974.602383  29161.206299 -27973.601318  101.000977 -27974.602383        0.0    1.001064      -98.998936
3  -27672.602383  -27774.602383  29161.206299 -27672.602383  302.000000 -27774.602383        0.0  102.000000      102.000000
4  -27672.602383  -27773.602539  29161.206299 -27672.602383    0.010000 -27773.602539        0.0  101.000156        2.000000
5  -27672.602383  -27672.602383  29161.206299 -27672.602383    0.010000 -27672.602383        0.0    0.000000      -98.000000
6  -27521.592383  -27521.592383  29161.206299 -27521.592383  151.010000 -27521.592383        0.0    0.000000      -46.990000
7  -27244.077383  -27374.602383  29161.206299 -27244.077383  277.515000 -27374.602383        0.0  130.525000      130.525000
8  -26897.587305  -27374.602383  29161.206299 -26897.587305  477.015078 -27374.602383        0.0  477.015078      377.015078
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:27]  --------------------------------------------------------------------------------
[07/19 22:02:27]  Iteration: 21 (0 solution, 20 counterexamples)
[07/19 22:02:28]  Generator returned sat in 0.650983 secs.
[07/19 22:02:28]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:28]  Improved gap from 0 to 100
[07/19 22:02:29]  Improved number of small numbers from 53 to 67 out of a max of 101
[07/19 22:02:29]  Verifer returned sat in 0.906519 secs.
[07/19 22:02:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28171.778076  -28971.778076  29958.382166 -28171.778076    0.098145 -28971.778076        0.0  800.000000      700.000174
1  -28171.778076  -28771.778250  29958.382166 -28171.778076    0.002197 -28771.778250        0.0  600.000174      600.000174
2  -28149.553139  -28671.778320  29958.382166 -28149.553139  622.225111 -28671.778320        0.0  522.225182      522.225111
3  -28149.553139  -28571.778320  29958.382166 -28149.553139    0.005333 -28571.778320        0.0  422.225182      422.225111
4  -28149.553139  -28475.480768  29958.382166 -28149.553139    0.010000 -28475.480768        0.0  325.927630      322.225111
5  -28149.553139  -28371.778320  29958.382166 -28149.553139  148.148741 -28371.778320        0.0  222.225182      222.225111
6  -28149.553139  -28271.778250  29958.382166 -28149.553139  222.223111 -28271.778250        0.0  122.225111      122.225111
7  -27938.443583  -28271.778250  29958.382166 -27938.443583  333.334667 -28271.778250        0.0  333.334667      233.334667
8  -27771.776250  -28171.778076  29958.382166 -27771.776250  500.002000 -28171.778076        0.0  400.001826      300.002000
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:30]  --------------------------------------------------------------------------------
[07/19 22:02:30]  Iteration: 22 (0 solution, 21 counterexamples)
[07/19 22:02:30]  Generator returned sat in 0.202501 secs.
[07/19 22:02:30]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:30]  Improved gap from 0 to 48.4375
[07/19 22:02:31]  Improved number of small numbers from 65 to 101 out of a max of 101
[07/19 22:02:31]  Verifer returned sat in 0.422582 secs.
[07/19 22:02:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28538.662354  -28789.465088  29825.158936 -28538.662354    0.098145 -28789.465088        0.0  250.802734      199.782715
1  -28538.662354  -28738.444824  29825.158936 -28538.662354    0.002686 -28738.444824        0.0  199.782471       99.782715
2  -28538.657471  -28538.659912  29825.158936 -28538.657471  199.787354 -28538.659912        0.0    0.002441       -0.212402
3  -28338.459961  -28488.784912  29825.158936 -28338.459961  200.199951 -28488.784912        0.0  150.324951       99.985107
4  -28338.444824  -28338.457520  29825.158936 -28338.444824  150.340088 -28338.457520        0.0    0.012695        0.000244
5  -28338.444824  -28338.445068  29875.283936 -28338.444824    0.010000 -28338.445068        0.0    0.000244      -49.874756
6  -28238.337646  -28288.570068  29925.049072 -28238.337646  100.107422 -28288.570068        0.0   50.232422       -0.002441
7  -28188.462646  -28238.334961  29975.174072 -28188.462646  100.107422 -28238.334961        0.0   49.872314       -0.002441
8  -28188.273682  -28188.459961  29975.174072 -28188.273682   50.061279 -28188.459961        0.0    0.186279      -99.813477
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:31]  --------------------------------------------------------------------------------
[07/19 22:02:31]  Iteration: 23 (0 solution, 22 counterexamples)
[07/19 22:02:32]  Generator returned sat in 0.063956 secs.
[07/19 22:02:32]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:32]  Improved gap from 1/200 to 48.4375
[07/19 22:02:33]  Improved number of small numbers from 57 to 70 out of a max of 101
[07/19 22:02:33]  Verifer returned sat in 1.099705 secs.
[07/19 22:02:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28362.153809  -28462.156006  29825.158691 -28362.153809    0.098145 -28462.156006        0.0  100.002197      100.002051
1  -28362.153809  -28362.156250  29825.158691 -28362.153809   23.440000 -28362.156250        0.0    0.002441        0.002051
2  -28313.713623  -28362.151104  29876.716436 -28313.713623   48.442627 -28362.151104        0.0   48.437480       -0.000020
3  -28065.276104  -28259.016104  29876.716436 -28065.276104  296.875000 -28259.016104        0.0  193.740000      148.437500
4  -28065.276104  -28113.713623  29876.716436 -28065.276104    0.010000 -28113.713623        0.0   48.437520       48.437500
5  -28065.276104  -28113.713604  29928.278936 -28065.276104    0.010000 -28113.713604        0.0   48.437500        0.000000
6  -28065.276104  -28065.276104  29979.841436 -28065.276104    0.010000 -28065.276104        0.0    0.000000      -48.437500
7  -27968.401104  -28016.838604  30031.403936 -27968.401104   96.875000 -28016.838604        0.0   48.437500        0.000000
8  -27968.401104  -27968.401104  30082.966309 -27968.401104    0.010000 -27968.401104        0.0    0.000000      -48.437627
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:02:33]  --------------------------------------------------------------------------------
[07/19 22:02:33]  Iteration: 24 (0 solution, 23 counterexamples)
[07/19 22:02:34]  Generator returned sat in 0.216440 secs.
[07/19 22:02:34]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:35]  Improved gap from 1/600 to 48.4375
[07/19 22:02:35]  Improved number of small numbers from 67 to 97 out of a max of 101
[07/19 22:02:35]  Verifer returned sat in 1.291903 secs.
[07/19 22:02:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27739.449951  -27790.865234  29153.867920 -27739.449951    0.097900 -27790.865234        0.0   51.415283       51.415039
1  -27739.449951  -27787.887207  29202.452637 -27739.449951    0.024414 -27787.887207        0.0   48.437256       -0.000244
2  -27439.474365  -27639.449707  29202.452637 -27439.474365  348.412842 -27639.449707        0.0  199.975342      199.975342
3  -27439.474365  -27590.963379  29202.452637 -27439.474365    0.024658 -27590.963379        0.0  151.489014       99.975342
4  -27439.474365  -27440.987671  29202.452637 -27439.474365   99.950928 -27440.987671        0.0    1.513306       -0.024658
5  -27391.012207  -27439.449707  29254.015137 -27391.012207   49.975464 -27439.449707        0.0   48.437500        0.000000
6  -27339.449707  -27391.012207  29302.452637 -27339.449707  100.000000 -27391.012207        0.0   51.562500        0.000000
7  -27291.036621  -27339.449707  29354.015137 -27291.036621   99.975586 -27339.449707        0.0   48.413086       -0.024414
8  -27289.461914  -27291.012207  29354.015137 -27289.461914   49.987793 -27291.012207        0.0    1.550293      -98.449707
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:36]  --------------------------------------------------------------------------------
[07/19 22:02:36]  Iteration: 25 (0 solution, 24 counterexamples)
[07/19 22:02:37]  Generator returned sat in 1.001923 secs.
[07/19 22:02:37]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:02:37]  Improved gap from 401/16384 to 100
[07/19 22:02:38]  Improved number of small numbers from 58 to 101 out of a max of 101
[07/19 22:02:38]  Verifer returned sat in 0.394799 secs.
[07/19 22:02:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27991.061279  -27991.110352  29302.452637 -27991.061279    0.097900 -27991.110352        0.0    0.049072        0.024414
1  -27991.061279  -27991.085693  29302.452637 -27991.061279    0.024658 -27991.085693        0.0    0.024414      -99.975586
2  -27891.061279  -27891.085693  29302.452637 -27891.061279  100.024414 -27891.085693        0.0    0.024414      -99.975586
3  -27391.036865  -27691.085693  29302.452637 -27391.036865  500.048828 -27691.085693        0.0  300.048828      300.048828
4  -27391.036865  -27691.049072  29302.452637 -27391.036865  300.024658 -27691.049072        0.0  300.012207      200.048828
5  -27391.012451  -27591.085693  29302.452637 -27391.012451  300.036621 -27591.085693        0.0  200.073242      100.073242
6  -27291.085693  -27491.085693  29302.452637 -27291.085693  300.000000 -27491.085693        0.0  200.000000      100.000000
7  -27291.085693  -27291.110107  29302.452637 -27291.085693  200.000000 -27291.110107        0.0    0.024414        0.000000
8  -26689.201660  -27291.061035  29302.452637 -26689.201660  601.908447 -27291.061035        0.0  601.859375      501.884033
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:38]  --------------------------------------------------------------------------------
[07/19 22:02:38]  Iteration: 26 (0 solution, 25 counterexamples)
[07/19 22:02:39]  Generator returned sat in 0.563298 secs.
[07/19 22:02:39]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:02:40]  Improved number of small numbers from 72 to 100 out of a max of 100
[07/19 22:02:40]  Verifer returned sat in 0.283226 secs.
[07/19 22:02:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27988.232666  -28091.134521  29302.452393 -27988.232666    0.097656 -28091.134521        0.0  102.901855      102.853027
1  -27988.232666  -28091.085693  29302.452393 -27988.232666    0.049072 -28091.085693        0.0  102.853027        2.853027
2  -27891.134766  -27988.183838  29302.452393 -27891.134766  199.950928 -27988.183838        0.0   97.049072       -0.049072
3  -27490.585938  -27891.085693  29302.452393 -27490.585938  497.597900 -27891.085693        0.0  400.499756      300.499756
4  -27490.585938  -27691.085693  29302.452393 -27490.585938  100.524414 -27691.085693        0.0  200.499756      200.499756
5  -27490.585693  -27591.085693  29302.452393 -27490.585693  200.500000 -27591.085693        0.0  100.500000      100.500000
6  -27392.036621  -27558.118408  29302.452393 -27392.036621  199.049072 -27558.118408        0.0  166.081787       99.049072
7  -27391.134766  -27392.036621  29302.452637 -27391.134766  166.983643 -27392.036621        0.0    0.901855       -0.048828
8  -26991.036621  -27391.085938  29302.452637 -26991.036621  401.000000 -27391.085938        0.0  400.049316      300.049316
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:40]  --------------------------------------------------------------------------------
[07/19 22:02:40]  Iteration: 27 (0 solution, 26 counterexamples)
[07/19 22:02:41]  Generator returned sat in 0.072356 secs.
[07/19 22:02:41]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:02:41]  Improved gap from 1407/20480 to 100
[07/19 22:02:41]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/19 22:02:41]  Verifer returned sat in 0.355222 secs.
[07/19 22:02:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -29470.737061  -29572.590332  30683.957031 -29470.737061    0.097412 -29572.590332        0.0  101.853271        1.853271
1  -29470.737061  -29470.785889  30683.957031 -29470.737061    0.048584 -29470.785889        0.0    0.048828      -98.146729
2  -29173.037842  -29272.590332  30683.957031 -29173.037842  297.748047 -29272.590332        0.0   99.552490       99.552490
3  -28972.639160  -29172.988770  30683.957031 -28972.639160  299.951172 -29172.988770        0.0  200.349609      199.951172
4  -28972.639160  -29072.590576  30683.957031 -28972.639160  200.300781 -29072.590576        0.0   99.951416       99.951172
5  -28572.541748  -28972.590332  30683.957031 -28572.541748  500.048828 -28972.590332        0.0  400.048584      400.048584
6  -28072.017090  -28972.590332  30683.957031 -28072.017090  900.573242 -28972.590332        0.0  900.573242      800.573242
7  -28072.017090  -28772.590576  30683.957031 -28072.017090  100.699219 -28772.590576        0.0  700.573486      700.573242
8  -28072.017090  -28772.541748  30683.957031 -28072.017090  150.500000 -28772.541748        0.0  700.524658      600.573242
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:41]  --------------------------------------------------------------------------------
[07/19 22:02:41]  Iteration: 28 (0 solution, 27 counterexamples)
[07/19 22:02:43]  Generator returned sat in 0.756801 secs.
[07/19 22:02:43]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:02:43]  Improved gap from 1/800 to 100
[07/19 22:02:43]  Improved number of small numbers from 78 to 101 out of a max of 101
[07/19 22:02:43]  Verifer returned sat in 0.218259 secs.
[07/19 22:02:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28872.017334  -28872.019775  30683.957031 -28872.017334    0.097168 -28872.019775        0.0    0.002441        0.001221
1  -28872.017334  -28872.018555  30683.957031 -28872.017334    0.001465 -28872.018555        0.0    0.001221      -99.998779
2  -28772.017334  -28772.018311  30683.957031 -28772.017334  100.001221 -28772.018311        0.0    0.000977      -99.998779
3  -28472.516602  -28672.018311  30683.957031 -28472.516602  299.501709 -28672.018311        0.0  199.501709       99.501953
4  -28472.516602  -28472.517822  30683.957031 -28472.516602    0.010000 -28472.517822        0.0    0.001221       -0.498047
5  -28072.017090  -28472.018311  30683.957031 -28072.017090  400.500732 -28472.018311        0.0  400.001221      300.001465
6  -28072.017090  -28372.018311  30683.957031 -28072.017090    0.010000 -28372.018311        0.0  300.001221      200.001465
7  -28072.017090  -28272.018555  30683.957031 -28072.017090    0.010000 -28272.018555        0.0  200.001465      100.001465
8  -28072.017090  -28172.018555  30683.957031 -28072.017090    0.010000 -28172.018555        0.0  100.001465        0.001465
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:43]  --------------------------------------------------------------------------------
[07/19 22:02:43]  Iteration: 29 (0 solution, 28 counterexamples)
[07/19 22:02:45]  Generator returned sat in 0.707422 secs.
[07/19 22:02:45]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:02:45]  Improved gap from 1/23 to 100
[07/19 22:02:45]  Improved number of small numbers from 48 to 101 out of a max of 101
[07/19 22:02:45]  Verifer returned sat in 0.703532 secs.
[07/19 22:02:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -29523.403564  -29523.427979  31335.366211 -29523.403564    0.097168 -29523.427979        0.0    0.024414        0.024414
1  -29423.403564  -29423.427979  31335.366211 -29423.403564  100.024414 -29423.427979        0.0    0.024414        0.024414
2  -28823.403809  -29348.379150  31335.366211 -28823.403809  600.024170 -29348.379150        0.0  524.975342      500.024170
3  -28823.403809  -29223.452393  31335.366211 -28823.403809    0.024414 -29223.452393        0.0  400.048584      400.024170
4  -28823.403809  -29223.427979  31335.366211 -28823.403809  150.000000 -29223.427979        0.0  400.024170      300.024170
5  -28823.403809  -29123.427979  31335.366211 -28823.403809  175.000000 -29123.427979        0.0  300.024170      200.024170
6  -28823.403809  -29023.427979  31335.366211 -28823.403809  199.975586 -29023.427979        0.0  200.024170      100.024170
7  -28823.403809  -28823.427979  31335.366211 -28823.403809  200.000000 -28823.427979        0.0    0.024170        0.024170
8  -28422.427979  -28822.452148  31335.366211 -28422.427979  401.000000 -28822.452148        0.0  400.024170      301.000000
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:02:46]  --------------------------------------------------------------------------------
[07/19 22:02:46]  Iteration: 30 (0 solution, 29 counterexamples)
[07/19 22:02:47]  Generator returned sat in 0.104141 secs.
[07/19 22:02:47]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:02:48]  Improved gap from 199/4096 to 100
[07/19 22:02:48]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/19 22:02:48]  Verifer returned sat in 1.484009 secs.
[07/19 22:02:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -29373.369385  -29373.417969  31335.366211 -29373.369385    0.096924 -29373.417969        0.0    0.048584      -99.951416
1  -29273.369385  -29273.417969  31335.366211 -29273.369385  100.048584 -29273.417969        0.0    0.048584      -99.951416
2  -29073.417969  -29173.417969  31335.366211 -29073.417969  200.000000 -29173.417969        0.0  100.000000        0.000000
3  -28672.154785  -29073.417969  31335.366211 -28672.154785  501.263184 -29073.417969        0.0  401.263184      301.263184
4  -28672.154785  -28873.660889  31335.366211 -28672.154785  400.631592 -28873.660889        0.0  201.506104      201.263184
5  -28473.466553  -28773.417969  31335.366211 -28473.466553  400.194336 -28773.417969        0.0  299.951416      299.951416
6  -28373.320801  -28773.369141  31335.366211 -28373.320801  400.097168 -28773.369141        0.0  400.048340      300.097168
7  -28373.320801  -28573.417969  31335.366211 -28373.320801  350.072998 -28573.417969        0.0  200.097168      200.097168
8  -28248.260010  -28473.417969  31335.366211 -28248.260010  325.157959 -28473.417969        0.0  225.157959      225.157959
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:49]  --------------------------------------------------------------------------------
[07/19 22:02:49]  Iteration: 31 (0 solution, 30 counterexamples)
[07/19 22:02:50]  Generator returned sat in 0.671139 secs.
[07/19 22:02:50]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:02:50]  Improved number of small numbers from 57 to 100 out of a max of 100
[07/19 22:02:50]  Verifer returned sat in 0.358482 secs.
[07/19 22:02:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28972.203125  -29472.203125  31434.151367 -28972.203125    0.096680 -29472.203125        0.0  500.000000      400.000000
1  -28872.203125  -29305.908203  31434.151367 -28872.203125  600.000000 -29305.908203        0.0  433.705078      400.000000
2  -28672.251953  -29272.203125  31434.151367 -28672.251953  633.656250 -29272.203125        0.0  599.951172      499.951172
3  -28672.154785  -29138.886230  31434.151367 -28672.154785  600.048340 -29138.886230        0.0  466.731445      400.048340
4  -28672.154785  -28972.203125  31434.151367 -28672.154785  466.682617 -28972.203125        0.0  300.048340      300.048340
5  -28572.009277  -28872.203125  31434.151367 -28572.009277  400.193848 -28872.203125        0.0  300.193848      300.193848
6  -28472.106201  -28872.155029  31434.151367 -28472.106201  400.096924 -28872.155029        0.0  400.048828      300.096924
7  -28472.106201  -28672.203125  31434.151367 -28472.106201  333.414062 -28672.203125        0.0  200.096924      200.096924
8  -28355.496094  -28672.154785  31434.151367 -28355.496094  316.707031 -28672.154785        0.0  316.658691      216.707031
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:02:51]  --------------------------------------------------------------------------------
[07/19 22:02:51]  Iteration: 32 (0 solution, 31 counterexamples)
[07/19 22:02:53]  Generator returned sat in 1.419804 secs.
[07/19 22:02:53]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:02:53]  Improved gap from 0 to 48.4375
[07/19 22:02:54]  Improved number of small numbers from 62 to 97 out of a max of 101
[07/19 22:02:54]  Verifer returned sat in 0.995047 secs.
[07/19 22:02:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27616.547119  -28116.498779  31434.151367 -27616.547119    0.096436 -28116.498779        0.0  499.951660      399.951904
1  -27616.499023  -27916.499023  31434.151367 -27616.499023  499.999756 -27916.499023        0.0  300.000000      300.000000
2  -27566.749023  -27816.499023  31434.151367 -27566.749023  349.750000 -27816.499023        0.0  249.750000      249.750000
3  -27566.749023  -27716.499023  31434.151367 -27566.749023  100.298340 -27716.499023        0.0  149.750000      149.750000
4  -27566.749023  -27617.200439  31434.151367 -27566.749023   51.149170 -27617.200439        0.0   50.451416       49.750000
5  -27566.749023  -27616.499023  31484.401367 -27566.749023   26.574585 -27616.499023        0.0   49.750000        0.000000
6  -27566.749023  -27566.749023  31534.651367 -27566.749023   14.287292 -27566.749023        0.0    0.000000      -49.750000
7  -27490.874023  -27516.998779  31584.901367 -27490.874023   75.875000 -27516.998779        0.0   26.124756      -23.625000
8  -27465.897949  -27467.248779  31584.901367 -27465.897949   51.100830 -27467.248779        0.0    1.350830      -98.648926
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:02:54]  --------------------------------------------------------------------------------
[07/19 22:02:54]  Iteration: 33 (0 solution, 32 counterexamples)
[07/19 22:02:55]  Generator returned sat in 0.209192 secs.
[07/19 22:02:55]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:56]  Verifer returned unsat in 0.349004 secs.
[07/19 22:02:56]  Proved solution: 
[1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:56]  --------------------------------------------------------------------------------
[07/19 22:02:56]  Iteration: 34 (1 solution, 32 counterexamples)
[07/19 22:02:57]  Generator returned sat in 0.188903 secs.
[07/19 22:02:57]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:02:57]  Improved gap from 0 to 23.4375
[07/19 22:02:57]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/19 22:02:57]  Verifer returned sat in 0.389453 secs.
[07/19 22:02:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27716.557373  -28239.994873  31657.647461 -27716.557373    0.096436 -28239.994873        0.0  523.437500        523.4375
1  -27716.557373  -28239.994873  31657.647461 -27716.557373  523.437256 -28239.994873        0.0  523.437500        423.4375
2  -27716.557373  -28039.994873  31657.647461 -27716.557373    0.001250 -28039.994873        0.0  323.437500        323.4375
3  -27716.557373  -27978.276611  31657.647461 -27716.557373    0.001221 -27978.276611        0.0  261.719238        223.4375
4  -27716.557373  -27839.994873  31657.647461 -27716.557373  261.718262 -27839.994873        0.0  123.437500        123.4375
5  -27716.557373  -27739.996094  31657.647461 -27716.557373    0.010000 -27739.996094        0.0   23.438721         23.4375
6  -27716.557373  -27739.994873  31734.209961 -27716.557373    0.010000 -27739.994873        0.0   23.437500          0.0000
7  -27716.557373  -27716.557373  31810.772461 -27716.557373    0.010000 -27716.557373        0.0    0.000000        -23.4375
8  -27593.119873  -27693.119873  31810.772461 -27593.119873  123.437500 -27693.119873        0.0  100.000000          0.0000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:02:57]  --------------------------------------------------------------------------------
[07/19 22:02:57]  Iteration: 35 (1 solution, 33 counterexamples)
[07/19 22:03:00]  Generator returned sat in 1.418906 secs.
[07/19 22:03:00]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:03:00]  Improved gap from 379275/4096 to 100
[07/19 22:03:00]  Improved number of small numbers from 50 to 101 out of a max of 101
[07/19 22:03:00]  Verifer returned sat in 0.319891 secs.
[07/19 22:03:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28185.774414  -28485.726074  31657.647461 -28185.774414    0.096436 -28485.726074        0.0  299.951660      199.951660
1  -28185.774414  -28385.726074  31657.647461 -28185.774414  299.903320 -28385.726074        0.0  199.951660       99.951660
2  -28185.774414  -28285.726074  31657.647461 -28185.774414    0.048340 -28285.726074        0.0   99.951660       -0.048340
3  -27893.177979  -28185.726074  31657.647461 -27893.177979  392.548096 -28185.726074        0.0  292.548096      192.548096
4  -27791.677979  -28081.322754  31657.647461 -27791.677979  394.048096 -28081.322754        0.0  289.644775      194.048096
5  -27685.774658  -27885.726318  31657.647461 -27685.774658  395.548096 -27885.726318        0.0  199.951660      199.951416
6  -27488.678223  -27785.726074  31657.647461 -27488.678223  397.048096 -27785.726074        0.0  297.047852      297.047852
7  -27387.177979  -27685.726074  31657.647461 -27387.177979  398.548096 -27685.726074        0.0  298.548096      298.548096
8  -27285.677979  -27685.726074  31657.647461 -27285.677979  400.048096 -27685.726074        0.0  400.048096      300.048096
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:03:00]  --------------------------------------------------------------------------------
[07/19 22:03:00]  Iteration: 36 (1 solution, 34 counterexamples)
[07/19 22:03:01]  Generator returned sat in 0.303972 secs.
[07/19 22:03:01]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:03:02]  Improved gap from 0 to 15.625
[07/19 22:03:02]  Improved number of small numbers from 70 to 101 out of a max of 101
[07/19 22:03:02]  Verifer returned sat in 0.756173 secs.
[07/19 22:03:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27914.052979  -28314.101074  31657.647461 -27914.052979    0.096436 -28314.101074        0.0  400.048096      400.048096
1  -27808.120605  -28314.101074  31657.647461 -27808.120605  505.980469 -28314.101074        0.0  505.980469      405.980469
2  -27779.774170  -28186.822510  31657.647461 -27779.774170  534.326904 -28186.822510        0.0  407.048340      334.326904
3  -27779.774170  -28014.101318  31657.647461 -27779.774170  407.000000 -28014.101318        0.0  234.327148      234.326904
4  -27779.774170  -27914.101074  31657.647461 -27779.774170  205.000000 -27914.101074        0.0  134.326904      134.326904
5  -27779.774170  -27914.052979  31657.647461 -27779.774170  104.000000 -27914.052979        0.0  134.278809       34.326904
6  -27779.774170  -27808.072510  31723.320557 -27779.774170   53.500000 -27808.072510        0.0   28.298340        0.000000
7  -27779.774170  -27779.774170  31807.695557 -27779.774170   28.250000 -27779.774170        0.0    0.000000      -15.625000
8  -27764.149170  -27764.149170  31807.695801 -27764.149170   15.625000 -27764.149170        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:03:03]  --------------------------------------------------------------------------------
[07/19 22:03:03]  Iteration: 37 (1 solution, 35 counterexamples)
[07/19 22:03:04]  Generator returned sat in 0.176728 secs.
[07/19 22:03:04]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:03:05]  Improved gap from 0 to 15.625
[07/19 22:03:05]  Improved number of small numbers from 54 to 101 out of a max of 101
[07/19 22:03:05]  Verifer returned sat in 1.458177 secs.
[07/19 22:03:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26394.877686  -26594.733154  30178.594238 -26394.877686    0.096191 -26594.733154        0.0  199.855469       99.855713
1  -26394.781250  -26394.829590  30178.594238 -26394.781250  199.951904 -26394.829590        0.0    0.048340       -0.047852
2  -25987.684814  -26394.733398  30178.594238 -25987.684814  407.144775 -26394.733398        0.0  407.048584      307.048584
3  -25987.684814  -26194.733398  30178.594238 -25987.684814  407.000000 -26194.733398        0.0  207.048584      207.048584
4  -25987.684814  -26094.733398  30178.594238 -25987.684814  205.000000 -26094.733398        0.0  107.048584      107.048584
5  -25987.684814  -26013.906250  30178.594238 -25987.684814  104.000000 -26013.906250        0.0   26.221436        7.048584
6  -25960.406250  -25988.704590  30244.267090 -25960.406250   53.500000 -25988.704590        0.0   28.298340        0.000000
7  -25960.406250  -25960.406250  30328.642090 -25960.406250   28.250000 -25960.406250        0.0    0.000000      -15.625000
8  -25944.781250  -25944.781250  30328.642334 -25944.781250   15.625000 -25944.781250        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:03:06]  --------------------------------------------------------------------------------
[07/19 22:03:06]  Iteration: 38 (1 solution, 36 counterexamples)
[07/19 22:03:07]  Generator returned sat in 0.418727 secs.
[07/19 22:03:07]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:03:07]  Improved gap from 0 to 48.4375
[07/19 22:03:08]  Improved number of small numbers from 56 to 80 out of a max of 101
[07/19 22:03:08]  Verifer returned sat in 1.256914 secs.
[07/19 22:03:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27857.906738  -28106.230565  31790.091405 -27857.906738    0.095947 -28106.230565        0.0  248.323827      248.323827
1  -27706.230565  -28106.229248  31790.091405 -27706.230565  400.000000 -28106.229248        0.0  399.998683      300.000000
2  -27657.793213  -27906.348065  31790.091405 -27657.793213  448.436035 -27906.348065        0.0  248.554852      248.437352
3  -27657.793213  -27857.906815  31790.091405 -27657.793213    0.001465 -27857.906815        0.0  200.113602      148.437352
4  -27657.793213  -27706.231689  31790.091405 -27657.793213  125.661875 -27706.231689        0.0   48.438477       48.437352
5  -27657.793213  -27706.230565  31841.653809 -27657.793213    0.010000 -27706.230565        0.0   48.437352       -0.000244
6  -27604.671815  -27657.791815  31888.531494 -27604.671815  101.558750 -27657.791815        0.0   53.120000       -0.001161
7  -27556.234315  -27604.670654  31940.093750 -27556.234315  101.557500 -27604.670654        0.0   48.436339       -0.001405
8  -27552.390137  -27556.232910  31940.093750 -27552.390137   52.280518 -27556.232910        0.0    3.842773      -96.157227
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:03:08]  --------------------------------------------------------------------------------
[07/19 22:03:08]  Iteration: 39 (1 solution, 37 counterexamples)
[07/19 22:03:10]  Generator returned sat in 0.905188 secs.
[07/19 22:03:10]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:10]  Improved gap from 1/400 to 48.4375
[07/19 22:03:11]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/19 22:03:11]  Verifer returned sat in 0.452940 secs.
[07/19 22:03:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27955.589111  -27955.591309  31589.224121 -27955.589111    0.095703 -27955.591309        0.0    0.002197      -50.225830
1  -27856.925537  -27905.363037  31640.786377 -27856.925537   98.665771 -27905.363037        0.0   48.437500        0.000000
2  -27506.702148  -27805.363037  31640.786377 -27506.702148  398.660889 -27805.363037        0.0  298.660889      250.223389
3  -27506.702148  -27702.245605  31640.786377 -27506.702148  298.660833 -27702.245605        0.0  195.543457      150.223389
4  -27506.702148  -27556.928223  31640.786377 -27506.702148  128.672852 -27556.928223        0.0   50.226074       50.223389
5  -27506.702148  -27556.925537  31690.562988 -27506.702148    0.010000 -27556.925537        0.0   50.223389        0.000000
6  -27506.702148  -27506.702148  31742.125488 -27506.702148    0.010000 -27506.702148        0.0    0.000000      -48.437500
7  -27406.930420  -27458.264648  31790.791260 -27406.930420   99.771729 -27458.264648        0.0   51.334229        0.000000
8  -27406.930420  -27406.930420  31790.791504 -27406.930420   51.331787 -27406.930420        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:03:11]  --------------------------------------------------------------------------------
[07/19 22:03:11]  Iteration: 40 (1 solution, 38 counterexamples)
[07/19 22:03:13]  Generator returned sat in 0.584989 secs.
[07/19 22:03:13]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:14]  Improved gap from 0 to 100
[07/19 22:03:14]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:03:14]  Verifer returned sat in 1.303966 secs.
[07/19 22:03:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27715.500244  -27915.452393  31640.786377 -27715.500244    0.095459 -27915.452393        0.0  199.952148       99.952148
1  -27715.500244  -27815.452393  31640.786377 -27715.500244    0.047607 -27815.452393        0.0   99.952148       -0.047852
2  -27715.404785  -27715.452393  31640.786377 -27715.404785  100.047607 -27715.452393        0.0    0.047607      -99.952393
3  -27241.069580  -27595.452393  31640.786377 -27241.069580  474.382812 -27595.452393        0.0  354.382812      274.382812
4  -27196.260986  -27426.452393  31640.786377 -27196.260986  399.191406 -27426.452393        0.0  230.191406      219.191406
5  -27030.356689  -27315.452393  31640.786377 -27030.356689  396.095703 -27315.452393        0.0  285.095703      285.095703
6  -26915.404541  -27315.452393  31640.786377 -26915.404541  400.047852 -27315.452393        0.0  400.047852      300.047852
7  -26915.404541  -27115.452393  31640.786377 -26915.404541  342.023926 -27115.452393        0.0  200.047852      200.047852
8  -26786.940430  -27030.309082  31640.786377 -26786.940430  328.511963 -27030.309082        0.0  243.368652      228.511963
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:03:14]  --------------------------------------------------------------------------------
[07/19 22:03:14]  Iteration: 41 (1 solution, 39 counterexamples)
[07/19 22:03:16]  Generator returned sat in 0.451785 secs.
[07/19 22:03:16]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:16]  Improved gap from 0 to 100
[07/19 22:03:16]  Improved number of small numbers from 85 to 85 out of a max of 101
[07/19 22:03:16]  Verifer returned sat in 0.527733 secs.
[07/19 22:03:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -27615.452393  -27899.497393  31640.786377 -27615.452393    0.095459 -27899.497393        0.0  284.04500       200.00000
1  -27615.452393  -27815.452393  31640.786377 -27615.452393    0.005000 -27815.452393        0.0  200.00000       100.00000
2  -27615.452393  -27715.452393  31640.786377 -27615.452393  200.000000 -27715.452393        0.0  100.00000         0.00000
3  -27215.457393  -27611.472393  31640.786377 -27215.457393  499.995000 -27611.472393        0.0  396.01500       299.99500
4  -27215.457393  -27415.452393  31640.786377 -27215.457393  396.010000 -27415.452393        0.0  199.99500       199.99500
5  -27015.447393  -27415.452393  31640.786377 -27015.447393  400.005000 -27415.452393        0.0  400.00500       300.00500
6  -27015.447393  -27215.452393  31640.786377 -27015.447393  352.002500 -27215.452393        0.0  200.00500       200.00500
7  -26839.441143  -27215.452393  31640.786377 -26839.441143  376.011250 -27215.452393        0.0  376.01125       276.01125
8  -26839.441143  -27115.452393  31640.786377 -26839.441143    0.010000 -27115.452393        0.0  276.01125       176.01125
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:03:17]  --------------------------------------------------------------------------------
[07/19 22:03:17]  Iteration: 42 (1 solution, 40 counterexamples)
[07/19 22:03:18]  Generator returned sat in 0.379691 secs.
[07/19 22:03:18]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:18]  Improved gap from 0 to 100
[07/19 22:03:18]  Improved number of small numbers from 77 to 101 out of a max of 101
[07/19 22:03:18]  Verifer returned sat in 0.292903 secs.
[07/19 22:03:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27317.452393  -27517.452393  31640.786377 -27317.452393    0.094971 -27517.452393        0.0  200.000000      200.000000
1  -27317.452393  -27417.452393  31640.786377 -27317.452393    0.005127 -27417.452393        0.0  100.000000      100.000000
2  -27317.452393  -27417.452393  31640.786377 -27317.452393   99.999756 -27417.452393        0.0  100.000000        0.000000
3  -27027.449951  -27309.457520  31640.786377 -27027.449951  390.002441 -27309.457520        0.0  282.007568      190.002441
4  -26917.455078  -27211.457520  31640.786377 -26917.455078  392.002441 -27211.457520        0.0  294.002441      199.997314
5  -26817.455078  -27017.452393  31640.786377 -26817.455078  394.002441 -27017.452393        0.0  199.997314      199.997314
6  -26621.449951  -26917.452393  31640.786377 -26621.449951  396.002441 -26917.452393        0.0  296.002441      296.002441
7  -26519.449951  -26817.452393  31640.786377 -26519.449951  398.002441 -26817.452393        0.0  298.002441      298.002441
8  -26417.449951  -26817.452393  31640.786377 -26417.449951  400.002441 -26817.452393        0.0  400.002441      300.002441
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:03:19]  --------------------------------------------------------------------------------
[07/19 22:03:19]  Iteration: 43 (1 solution, 41 counterexamples)
[07/19 22:03:21]  Generator returned sat in 1.163565 secs.
[07/19 22:03:21]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:22]  Improved gap from 0 to 37.5
[07/19 22:03:22]  Improved number of small numbers from 61 to 101 out of a max of 101
[07/19 22:03:22]  Verifer returned sat in 1.307453 secs.
[07/19 22:03:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27338.843018  -27438.795654  31640.786133 -27338.843018    0.094727 -27438.795654        0.0   99.952637       99.952637
1  -27338.748291  -27338.795898  31640.786133 -27338.748291  100.047363 -27338.795898        0.0    0.047607        0.047363
2  -27074.390869  -27338.795654  31640.786133 -27074.390869  264.405029 -27338.795654        0.0  264.404785      164.404785
3  -27074.390869  -27139.200684  31640.786133 -27074.390869   70.905029 -27139.200684        0.0   64.809814       64.404785
4  -27066.295654  -27074.343262  31640.786133 -27066.295654   72.905029 -27074.343262        0.0    8.047607      -27.500000
5  -26999.438232  -27038.795654  31701.428711 -26999.438232   74.905029 -27038.795654        0.0   39.357422        0.000000
6  -26961.890625  -26999.390625  31763.881104 -26961.890625   76.905029 -26999.390625        0.0   37.500000        0.000000
7  -26928.485596  -26961.890625  31826.381104 -26928.485596   70.905029 -26961.890625        0.0   33.405029       -4.094971
8  -26888.985596  -26924.390625  31826.381104 -26888.985596   72.905029 -26924.390625        0.0   35.405029      -64.594971
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:03:23]  --------------------------------------------------------------------------------
[07/19 22:03:23]  Iteration: 44 (1 solution, 42 counterexamples)
[07/19 22:03:24]  Generator returned sat in 0.229897 secs.
[07/19 22:03:24]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:26]  Improved gap from 37473/1024 to 37.5
[07/19 22:03:26]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/19 22:03:26]  Verifer returned sat in 2.108428 secs.
[07/19 22:03:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27170.119141  -27270.072021  31472.0625 -27170.119141    0.094727 -27270.072021        0.0   99.952881       99.952881
1  -27170.024658  -27170.072021  31472.0625 -27170.024658  100.047363 -27170.072021        0.0    0.047363        0.047363
2  -26907.572021  -27170.024658  31472.0625 -26907.572021  262.500000 -27170.024658        0.0  262.452637      162.500000
3  -26907.572021  -26976.477295  31472.0625 -26907.572021   67.000000 -26976.477295        0.0   68.905273       62.500000
4  -26907.477295  -26907.524658  31472.0625 -26907.477295   69.000000 -26907.524658        0.0    0.047363      -37.405273
5  -26836.524658  -26870.072021  31534.5625 -26836.524658   71.000000 -26870.072021        0.0   33.547363       -3.952637
6  -26797.072021  -26832.572021  31597.0625 -26797.072021   73.000000 -26832.572021        0.0   35.500000       -2.000000
7  -26757.572021  -26795.072021  31659.5625 -26757.572021   75.000000 -26795.072021        0.0   37.500000        0.000000
8  -26737.345703  -26757.572021  31659.5625 -26737.345703   57.726318 -26757.572021        0.0   20.226318      -79.773682
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:03:26]  --------------------------------------------------------------------------------
[07/19 22:03:26]  Iteration: 45 (1 solution, 43 counterexamples)
[07/19 22:03:28]  Generator returned sat in 0.566974 secs.
[07/19 22:03:28]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:30]  Improved gap from 193/16384 to 45.3125
[07/19 22:03:30]  Improved number of small numbers from 64 to 76 out of a max of 101
[07/19 22:03:30]  Verifer returned sat in 2.626223 secs.
[07/19 22:03:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26689.714844  -26689.720242  30941.171224 -26689.714844    0.094482 -26689.720242        0.0    0.005398        0.005398
1  -26644.397325  -26689.709961  30995.848307 -26644.397325   45.322917 -26689.709961        0.0   45.312636        0.000000
2  -26344.402588  -26550.668159  30995.848307 -26344.402588  345.307373 -26550.668159        0.0  206.265571      199.994737
3  -26344.402588  -26463.386909  30995.848307 -26344.402588    0.005371 -26463.386909        0.0  118.984321       99.994737
4  -26344.402588  -26344.407742  30995.848307 -26344.402588  114.666667 -26344.407742        0.0    0.005154       -0.005263
5  -26285.074409  -26344.397325  31036.525391 -26285.074409   59.333333 -26344.397325        0.0   59.322917        0.000000
6  -26239.761909  -26285.074409  31091.212891 -26239.761909  104.635417 -26285.074409        0.0   45.312500        0.000000
7  -26194.418159  -26239.761909  31145.868896 -26194.418159   90.656250 -26239.761909        0.0   45.343750       -0.000244
8  -26192.433784  -26194.412842  31145.868896 -26192.433784   47.328125 -26194.412842        0.0    1.979058      -98.015869
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:03:31]  --------------------------------------------------------------------------------
[07/19 22:03:31]  Iteration: 46 (1 solution, 44 counterexamples)
[07/19 22:03:32]  Generator returned sat in 0.263403 secs.
[07/19 22:03:32]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:34]  Improved gap from 1661183/36864 to 45.3125
[07/19 22:03:35]  Improved number of small numbers from 49 to 65 out of a max of 101
[07/19 22:03:35]  Verifer returned sat in 3.124631 secs.
[07/19 22:03:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25636.589355  -25636.613130  30941.160889 -25636.589355    0.094238 -25636.613130        0.0    0.023775       -0.023385
1  -25591.253389  -25636.565918  30995.848307 -25591.253389   45.359741 -25636.565918        0.0   45.312529        0.000000
2  -25294.893799  -25491.253389  30995.848307 -25294.893799  341.672119 -25491.253389        0.0  196.359590      196.359590
3  -25294.893799  -25431.451753  30995.848307 -25294.893799    0.023682 -25431.451753        0.0  136.557955       96.359590
4  -25294.893799  -25294.917269  30995.848307 -25294.893799  103.580688 -25294.917269        0.0    0.023470       -3.640410
5  -25241.126924  -25291.253389  31045.721842 -25241.126924   53.790344 -25291.253389        0.0   50.126465        0.000000
6  -25190.253389  -25241.126924  31094.848307 -25190.253389  101.000000 -25241.126924        0.0   50.873535        0.000000
7  -25144.964510  -25190.253389  31149.535645 -25144.964510   96.162415 -25190.253389        0.0   45.288879       -0.023783
8  -25140.172182  -25144.940674  31149.535645 -25140.172182   50.081207 -25144.940674        0.0    4.768492      -95.231455
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:03:36]  --------------------------------------------------------------------------------
[07/19 22:03:36]  Iteration: 47 (1 solution, 45 counterexamples)
[07/19 22:03:39]  Generator returned sat in 1.864496 secs.
[07/19 22:03:39]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:03:39]  Improved gap from 1/400 to 100
[07/19 22:03:39]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/19 22:03:39]  Verifer returned sat in 0.312137 secs.
[07/19 22:03:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25741.352051  -25841.356689  31145.721924 -25741.352051    0.093994 -25841.356689        0.0  100.004639      100.000000
1  -25741.352051  -25841.352051  31145.721924 -25741.352051    0.005000 -25841.352051        0.0  100.000000        0.000000
2  -25590.711914  -25741.351807  31145.721924 -25590.711914  250.640137 -25741.351807        0.0  150.639893       50.640137
3  -25590.711914  -25590.716797  31145.721924 -25590.711914   24.562500 -25590.716797        0.0    0.004883      -49.359863
4  -25541.091797  -25541.096924  31145.721924 -25541.091797   49.625000 -25541.096924        0.0    0.005127      -99.739746
5  -25441.346924  -25441.351807  31145.721924 -25441.346924   99.750000 -25441.351807        0.0    0.004883      -99.994873
6  -25241.351807  -25241.842041  31145.721924 -25241.351807  200.000000 -25241.842041        0.0    0.490234        0.000244
7  -24841.342041  -25241.347168  31145.721924 -24841.342041  400.500000 -25241.347168        0.0  400.005127      300.010010
8  -24841.342041  -25141.351807  31145.721924 -24841.342041    0.010000 -25141.351807        0.0  300.009766      200.010010
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:03:39]  --------------------------------------------------------------------------------
[07/19 22:03:39]  Iteration: 48 (1 solution, 46 counterexamples)
[07/19 22:03:41]  Generator returned sat in 0.708430 secs.
[07/19 22:03:41]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:41]  Improved gap from 1/16384 to 100
[07/19 22:03:42]  Improved number of small numbers from 53 to 67 out of a max of 101
[07/19 22:03:42]  Verifer returned sat in 0.861273 secs.
[07/19 22:03:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25884.911621  -25984.914062  31493.061787 -25884.911621    0.093750 -25984.914062        0.0  100.002441       99.999791
1  -25884.911621  -25984.911377  31493.061787 -25884.911621    0.005000 -25984.911377        0.0   99.999756       -0.000209
2  -25684.908936  -25784.911621  31493.061787 -25684.908936  300.002441 -25784.911621        0.0  100.002686      100.002476
3  -25684.908936  -25684.911412  31493.061787 -25684.908936   51.468000 -25684.911412        0.0    0.002476        0.002476
4  -25605.709412  -25605.711912  31493.061787 -25605.709412   79.202000 -25605.711912        0.0    0.002500      -20.798000
5  -25484.908912  -25484.911412  31493.061787 -25484.908912  120.803000 -25484.911412        0.0    0.002500        0.002500
6  -25301.706912  -25484.911412  31493.061787 -25301.706912  183.204500 -25484.911412        0.0  183.204500       83.204500
7  -25208.104662  -25284.911412  31493.061787 -25208.104662  276.806750 -25284.911412        0.0   76.806750       76.806750
8  -24867.701287  -25284.911412  31493.061787 -24867.701287  417.210125 -25284.911412        0.0  417.210125      317.210125
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:03:42]  --------------------------------------------------------------------------------
[07/19 22:03:42]  Iteration: 49 (1 solution, 47 counterexamples)
[07/19 22:03:44]  Generator returned sat in 0.379024 secs.
[07/19 22:03:44]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:44]  Improved gap from 0 to 1.5625
[07/19 22:03:44]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/19 22:03:44]  Verifer returned sat in 0.346103 secs.
[07/19 22:03:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -25786.864502  -25786.911621  31295.038330 -25786.864502    0.093750 -25786.911621        0.0   0.047119        0.023438
1  -25786.864502  -25786.887939  31295.038330 -25786.864502    0.023193 -25786.887939        0.0   0.023438      -99.976562
2  -25488.427002  -25586.888184  31295.038330 -25488.427002  298.460938 -25586.888184        0.0  98.461182       98.460938
3  -25488.427002  -25488.450684  31295.038574 -25488.427002    0.023193 -25488.450684        0.0   0.023682       -1.538818
4  -25486.450684  -25486.474121  31393.062012 -25486.450684    2.000000 -25486.474121        0.0   0.023438       -1.539062
5  -25484.474121  -25484.911377  31491.499268 -25484.474121    2.000000 -25484.911377        0.0   0.437256       -1.125244
6  -25482.911377  -25483.348877  31589.936768 -25482.911377    2.000000 -25483.348877        0.0   0.437500       -1.125000
7  -25481.348877  -25481.786377  31688.374268 -25481.348877    2.000000 -25481.786377        0.0   0.437500       -1.125000
8  -25479.786377  -25480.223877  31688.374512 -25479.786377    2.000000 -25480.223877        0.0   0.437500      -99.562256
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:03:45]  --------------------------------------------------------------------------------
[07/19 22:03:45]  Iteration: 50 (1 solution, 48 counterexamples)
[07/19 22:03:48]  Generator returned sat in 2.714562 secs.
[07/19 22:03:48]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:49]  Improved gap from 0 to 48.4375
[07/19 22:03:49]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:03:49]  Verifer returned sat in 0.377263 secs.
[07/19 22:03:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26130.247314  -26130.247314  31486.835205 -26130.247314    0.093750 -26130.247314        0.0    0.000000     -100.000000
1  -25581.786377  -25930.247314  31486.835205 -25581.786377  548.460938 -25930.247314        0.0  348.460938      348.460938
2  -25581.786377  -25830.247314  31486.835205 -25581.786377    0.023438 -25830.247314        0.0  248.460938      248.460938
3  -25581.786377  -25775.606689  31486.835205 -25581.786377    0.023438 -25775.606689        0.0  193.820312      148.460938
4  -25581.786377  -25630.247314  31486.835205 -25581.786377  179.320312 -25630.247314        0.0   48.460938       48.460938
5  -25581.786377  -25630.223877  31538.374268 -25581.786377    1.500000 -25630.223877        0.0   48.437500        0.000000
6  -25581.786377  -25581.786377  31589.936768 -25581.786377    1.500000 -25581.786377        0.0    0.000000      -48.437500
7  -25482.876221  -25533.348877  31639.464111 -25482.876221   98.910156 -25533.348877        0.0   50.472656        0.000000
8  -25482.876221  -25482.876221  31639.464111 -25482.876221   50.449219 -25482.876221        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:03:49]  --------------------------------------------------------------------------------
[07/19 22:03:49]  Iteration: 51 (1 solution, 49 counterexamples)
[07/19 22:03:52]  Generator returned sat in 1.142620 secs.
[07/19 22:03:52]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:03:52]  Improved gap from 0 to 48.4375
[07/19 22:03:52]  Improved number of small numbers from 64 to 70 out of a max of 101
[07/19 22:03:52]  Verifer returned sat in 0.861531 secs.
[07/19 22:03:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25972.247803  -26123.763288  31486.835205 -25972.247803    0.093506 -26123.763288        0.0  151.515485       51.515485
1  -25923.763288  -25972.200684  31486.835205 -25923.763288  200.000000 -25972.200684        0.0   48.437396        0.000000
2  -25923.763288  -25923.763288  31486.835205 -25923.763288    0.046875 -25923.763288        0.0    0.000000     -100.000000
3  -25623.763288  -25759.471621  31486.835205 -25623.763288  300.000000 -25759.471621        0.0  135.708333      100.000000
4  -25575.325788  -25628.403913  31486.835205 -25575.325788  184.145833 -25628.403913        0.0   53.078125       48.437500
5  -25575.325788  -25623.763288  31538.397705 -25575.325788    2.000000 -25623.763288        0.0   48.437500        0.000000
6  -25575.325788  -25575.325788  31589.960205 -25575.325788    2.000000 -25575.325788        0.0    0.000000      -48.437500
7  -25481.252871  -25526.888288  31641.522705 -25481.252871   94.072917 -25526.888288        0.0   45.635417       -2.802083
8  -25474.130475  -25478.450684  31641.522705 -25474.130475   52.757812 -25478.450684        0.0    4.320208      -95.679688
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:03:53]  --------------------------------------------------------------------------------
[07/19 22:03:53]  Iteration: 52 (1 solution, 50 counterexamples)
[07/19 22:03:58]  Generator returned sat in 4.352750 secs.
[07/19 22:03:58]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:03:59]  Improved gap from 0 to 14.0625
[07/19 22:03:59]  Improved number of small numbers from 54 to 101 out of a max of 101
[07/19 22:03:59]  Verifer returned sat in 0.798403 secs.
[07/19 22:03:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26622.450195  -26722.309814  32185.381836 -26622.450195    0.093262 -26722.309814        0.0   99.859619       99.859619
1  -26622.356689  -26622.403320  32185.381836 -26622.356689   99.953125 -26622.403320        0.0    0.046631       -0.046875
2  -26202.263184  -26622.309814  32185.381836 -26202.263184  420.140137 -26622.309814        0.0  420.046631      320.046631
3  -26202.263184  -26422.309814  32185.381836 -26202.263184  420.000000 -26422.309814        0.0  220.046631      220.046631
4  -26202.263184  -26322.310059  32185.381836 -26202.263184  211.000000 -26322.310059        0.0  120.046875      120.046631
5  -26202.263184  -26322.263428  32185.381836 -26202.263184  106.500000 -26322.263428        0.0  120.000244       20.046631
6  -26202.263184  -26216.325684  32265.335205 -26202.263184   54.250000 -26216.325684        0.0   14.062500        0.000000
7  -26188.200684  -26202.263184  32351.272705 -26188.200684   28.125000 -26202.263184        0.0   14.062500        0.000000
8  -26188.200684  -26188.200684  32351.272705 -26188.200684    1.500000 -26188.200684        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:04:00]  --------------------------------------------------------------------------------
[07/19 22:04:00]  Iteration: 53 (1 solution, 51 counterexamples)
[07/19 22:04:01]  Generator returned sat in 0.445801 secs.
[07/19 22:04:01]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:04:02]  Improved gap from 225/16 to 14.0625
[07/19 22:04:02]  Improved number of small numbers from 54 to 101 out of a max of 101
[07/19 22:04:02]  Verifer returned sat in 1.048679 secs.
[07/19 22:04:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26372.250000  -26372.296387  32896.514404 -26372.250000    0.093018 -26372.296387        0.0    0.046387        0.023193
1  -26372.250000  -26372.273193  32982.451904 -26372.250000    0.023193 -26372.273193        0.0    0.023193      -14.039307
2  -25922.296387  -26358.210693  32982.451904 -25922.296387  449.976807 -26358.210693        0.0  435.914307      335.914307
3  -25922.296387  -26158.210693  32982.451904 -25922.296387  405.000000 -26158.210693        0.0  235.914307      235.914307
4  -25922.296387  -26058.210693  32982.451904 -25922.296387  204.000000 -26058.210693        0.0  135.914307      135.914307
5  -25922.296387  -25975.546387  32982.451904 -25922.296387  103.500000 -25975.546387        0.0   53.250000       35.914307
6  -25922.296387  -25936.358887  33046.537598 -25922.296387   53.250000 -25936.358887        0.0   14.062500        0.000000
7  -25908.233887  -25922.296387  33132.475098 -25908.233887   28.125000 -25922.296387        0.0   14.062500        0.000000
8  -25908.233887  -25908.233887  33132.475098 -25908.233887    1.500000 -25908.233887        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:04:03]  --------------------------------------------------------------------------------
[07/19 22:04:03]  Iteration: 54 (1 solution, 52 counterexamples)
[07/19 22:04:04]  Generator returned sat in 0.493783 secs.
[07/19 22:04:04]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:04:05]  Improved gap from 225/16 to 14.0625
[07/19 22:04:06]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/19 22:04:06]  Verifer returned sat in 1.233155 secs.
[07/19 22:04:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28431.173584  -28431.220459  32982.451660 -28431.173584    0.093018 -28431.220459        0.0    0.046875        0.000000
1  -28331.173828  -28431.173584  32982.451904 -28331.173828  100.046631 -28431.173584        0.0   99.999756        0.000000
2  -28053.002197  -28307.111328  32982.451904 -28053.002197  378.171387 -28307.111328        0.0  254.109131      178.171631
3  -27917.111328  -28131.173828  32982.451904 -27917.111328  390.000000 -28131.173828        0.0  214.062500      214.062500
4  -27917.111328  -28053.002197  32982.451904 -27917.111328  197.000000 -28053.002197        0.0  135.890869      114.062500
5  -27917.111328  -27969.407959  32982.451904 -27917.111328  100.500000 -27969.407959        0.0   52.296631       14.062500
6  -27917.111328  -27931.173828  33068.389404 -27917.111328   52.250000 -27931.173828        0.0   14.062500        0.000000
7  -27903.048828  -27917.111328  33154.326904 -27903.048828   28.125000 -27917.111328        0.0   14.062500        0.000000
8  -27903.048828  -27903.048828  33154.326904 -27903.048828    1.500000 -27903.048828        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:04:06]  --------------------------------------------------------------------------------
[07/19 22:04:06]  Iteration: 55 (1 solution, 53 counterexamples)
[07/19 22:04:08]  Generator returned sat in 0.852436 secs.
[07/19 22:04:08]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:04:08]  Improved gap from 24195/16384 to 0
[07/19 22:04:08]  Improved number of small numbers from 75 to 101 out of a max of 101
[07/19 22:04:08]  Verifer returned sat in 0.303548 secs.
[07/19 22:04:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28030.173828  -28230.127197  32871.296143 -28030.173828    0.092773 -28230.127197        0.0  199.953369      199.953125
1  -28030.173828  -28130.126953  32871.296143 -28030.173828    0.046387 -28130.126953        0.0   99.953125       99.953125
2  -27830.219971  -28030.127197  32871.296143 -27830.219971  299.906982 -28030.127197        0.0  199.907227      199.906982
3  -27830.127197  -27930.126953  32871.296143 -27830.127197  200.000000 -27930.126953        0.0   99.999756       99.999756
4  -27830.127197  -27830.173828  32871.296143 -27830.127197    1.500000 -27830.173828        0.0    0.046631       -0.000244
5  -27828.673828  -27828.720215  32969.796387 -27828.673828    1.500000 -27828.720215        0.0    0.046387       -0.046631
6  -27827.220215  -27828.626953  33068.389404 -27827.220215    1.500000 -27828.626953        0.0    1.406738        0.000000
7  -27827.126953  -27827.173584  33168.296143 -27827.126953    1.500000 -27827.173584        0.0    0.046631        0.000000
8  -27825.673584  -27827.080566  33168.296143 -27825.673584    1.500000 -27827.080566        0.0    1.406982      -98.546631
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:04:09]  --------------------------------------------------------------------------------
[07/19 22:04:09]  Iteration: 56 (1 solution, 54 counterexamples)
[07/19 22:04:11]  Generator returned sat in 0.481062 secs.
[07/19 22:04:11]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:04:12]  Improved gap from 95/4096 to 14.0625
[07/19 22:04:12]  Improved number of small numbers from 57 to 89 out of a max of 101
[07/19 22:04:12]  Verifer returned sat in 1.539083 secs.
[07/19 22:04:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28806.778320  -29106.778564  32626.296631 -28806.778320    0.092529 -29106.778564        0.0  300.000244      200.000244
1  -28806.778320  -28906.778564  32626.296631 -28806.778320    0.046143 -28906.778564        0.0  100.000244      100.000244
2  -28806.778320  -28906.778564  32626.296631 -28806.778320   99.999756 -28906.778564        0.0  100.000244        0.000244
3  -28515.593018  -28806.778320  32626.296631 -28515.593018  391.185547 -28806.778320        0.0  291.185303      191.185547
4  -28515.593018  -28606.778564  32626.296631 -28515.593018  197.092773 -28606.778564        0.0   91.185547       91.185547
5  -28506.732178  -28606.778564  32626.296631 -28506.732178  100.046387 -28606.778564        0.0  100.046387        0.046387
6  -28506.732178  -28506.778555  32699.081543 -28506.732178   51.523193 -28506.778555        0.0    0.046377      -27.168701
7  -28479.516958  -28479.563345  32785.018799 -28479.516958   27.261597 -28479.563345        0.0    0.046387      -14.016226
8  -28464.432546  -28465.500732  32785.018799 -28464.432546   15.130798 -28465.500732        0.0    1.068186      -98.931814
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:04:13]  --------------------------------------------------------------------------------
[07/19 22:04:13]  Iteration: 57 (1 solution, 55 counterexamples)
[07/19 22:04:17]  Generator returned sat in 3.098220 secs.
[07/19 22:04:17]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:04:18]  Improved gap from 0 to 100
[07/19 22:04:18]  Improved number of small numbers from 99 to 101 out of a max of 101
[07/19 22:04:18]  Verifer returned sat in 1.426085 secs.
[07/19 22:04:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -29287.981445  -29387.889160  32626.296631 -29287.981445    0.092529 -29387.889160        0.0   99.907715       -0.092285
1  -29086.981689  -29287.888916  32626.296631 -29086.981689  300.907471 -29287.888916        0.0  200.907227      100.907471
2  -28787.981445  -29185.889160  32626.296631 -28787.981445  499.907471 -29185.889160        0.0  397.907715      299.907715
3  -28691.519043  -29086.889160  32626.296631 -28691.519043  494.370117 -29086.889160        0.0  395.370117      296.370117
4  -28687.704102  -28899.333740  32626.296631 -28687.704102  399.185059 -28899.333740        0.0  211.629639      200.185059
5  -28503.963623  -28787.889160  32626.296631 -28503.963623  395.370117 -28787.889160        0.0  283.925537      283.925537
6  -28389.704102  -28687.889160  32626.296631 -28389.704102  398.185059 -28687.889160        0.0  298.185059      298.185059
7  -28287.796631  -28687.889160  32626.296631 -28287.796631  400.092529 -28687.889160        0.0  400.092529      300.092529
8  -28287.796631  -28503.871338  32626.296631 -28287.796631  307.268555 -28503.871338        0.0  216.074707      200.092529
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:04:19]  --------------------------------------------------------------------------------
[07/19 22:04:19]  Iteration: 58 (1 solution, 56 counterexamples)
[07/19 22:04:23]  Generator returned sat in 3.261459 secs.
[07/19 22:04:23]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:04:24]  Improved number of small numbers from 51 to 100 out of a max of 100
[07/19 22:04:24]  Verifer returned sat in 0.241991 secs.
[07/19 22:04:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27887.770264  -28687.770264  32626.296631 -27887.770264    0.092285 -28687.770264        0.0  800.000000      700.000000
1  -27887.770264  -28487.770264  32626.296631 -27887.770264  800.000000 -28487.770264        0.0  600.000000      600.000000
2  -27787.770508  -28387.816650  32626.296631 -27787.770508  699.999756 -28387.816650        0.0  600.046143      599.999756
3  -27787.770264  -28387.770264  32626.296631 -27787.770264  600.046387 -28387.770264        0.0  600.000000      500.000000
4  -27787.723877  -28287.770264  32626.296631 -27787.723877  600.046387 -28287.770264        0.0  500.046387      400.046387
5  -27687.723877  -28087.770508  32626.296631 -27687.723877  600.046387 -28087.770508        0.0  400.046631      400.046387
6  -27487.724121  -28087.770264  32626.296631 -27487.724121  600.046387 -28087.770264        0.0  600.046143      500.046143
7  -27487.723877  -27887.770508  32626.296631 -27487.723877  600.046387 -27887.770508        0.0  400.046631      400.046387
8  -27287.724121  -27887.770264  32626.296631 -27287.724121  600.046387 -27887.770264        0.0  600.046143      500.046143
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:04:24]  --------------------------------------------------------------------------------
[07/19 22:04:24]  Iteration: 59 (1 solution, 57 counterexamples)
[07/19 22:04:26]  Generator returned sat in 0.782071 secs.
[07/19 22:04:26]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:04:26]  Improved gap from 189/4096 to 23.4375
[07/19 22:04:27]  Improved number of small numbers from 90 to 99 out of a max of 101
[07/19 22:04:27]  Verifer returned sat in 0.601754 secs.
[07/19 22:04:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28064.425537  -28487.863037  32972.921143 -28064.425537    0.092041 -28487.863037        0.0  423.437500        423.4375
1  -28064.425537  -28387.863037  32972.921143 -28064.425537  423.437256 -28387.863037        0.0  323.437500        323.4375
2  -28064.425537  -28387.816650  32972.921143 -28064.425537    0.045898 -28387.816650        0.0  323.391113        223.4375
3  -28064.425537  -28187.863037  32972.921143 -28064.425537   95.934570 -28187.863037        0.0  123.437500        123.4375
4  -28064.425537  -28089.955078  32972.921143 -28064.425537   48.967285 -28089.955078        0.0   25.529541         23.4375
5  -28064.425537  -28087.863037  33049.483643 -28064.425537   25.483643 -28087.863037        0.0   23.437500          0.0000
6  -28064.425537  -28064.425537  33126.046143 -28064.425537   13.741821 -28064.425537        0.0    0.000000        -23.4375
7  -27940.988037  -28040.987793  33126.046143 -27940.988037  123.437500 -28040.987793        0.0   99.999756          0.0000
8  -27940.988037  -27940.988037  33126.046143 -27940.988037   48.967285 -27940.988037        0.0    0.000000       -100.0000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:04:27]  --------------------------------------------------------------------------------
[07/19 22:04:27]  Iteration: 60 (1 solution, 58 counterexamples)
[07/19 22:04:29]  Generator returned sat in 0.361467 secs.
[07/19 22:04:29]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:04:29]  Improved gap from 0 to 23.4375
[07/19 22:04:29]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:04:29]  Verifer returned sat in 0.567502 secs.
[07/19 22:04:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28064.425537  -28587.863037  32972.921143 -28064.425537    0.092041 -28587.863037        0.0  523.437500      523.437500
1  -28064.425537  -28487.863037  32972.921143 -28064.425537    0.022949 -28487.863037        0.0  423.437500      423.437500
2  -28064.425537  -28424.058350  32972.921143 -28064.425537    0.045898 -28424.058350        0.0  359.632812      323.437500
3  -28064.425537  -28287.863037  32972.921143 -28064.425537  359.632812 -28287.863037        0.0  223.437500      223.437500
4  -28064.425537  -28190.965088  32972.921143 -28064.425537  180.316406 -28190.965088        0.0  126.539551      123.437500
5  -28064.425537  -28110.254639  32972.921143 -28064.425537   90.658203 -28110.254639        0.0   45.829102       23.437500
6  -28064.425537  -28087.863037  33049.483643 -28064.425537   45.829102 -28087.863037        0.0   23.437500        0.000000
7  -28064.425537  -28064.425537  33126.046143 -28064.425537   23.414551 -28064.425537        0.0    0.000000      -23.437500
8  -27937.885986  -28040.988037  33126.046143 -27937.885986  126.539551 -28040.988037        0.0  103.102051        3.102051
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:04:30]  --------------------------------------------------------------------------------
[07/19 22:04:30]  Iteration: 61 (1 solution, 59 counterexamples)
[07/19 22:04:32]  Generator returned sat in 0.462680 secs.
[07/19 22:04:32]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:04:32]  Improved gap from 375/16 to 23.4375
[07/19 22:04:33]  Improved number of small numbers from 76 to 101 out of a max of 101
[07/19 22:04:33]  Verifer returned sat in 0.834951 secs.
[07/19 22:04:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27283.400879  -27809.952148  32997.898193 -27283.400879    0.092041 -27809.952148        0.0  526.551270       526.55127
1  -27283.400879  -27709.952148  32997.898193 -27283.400879    0.022705 -27709.952148        0.0  426.551270       426.55127
2  -27283.400879  -27709.951904  32997.898193 -27283.400879    0.045898 -27709.951904        0.0  426.551025       326.55127
3  -27283.400879  -27609.951904  32997.898193 -27283.400879  379.636719 -27609.951904        0.0  326.551025       226.55127
4  -27283.400879  -27409.952148  32997.898193 -27283.400879  191.318359 -27409.952148        0.0  126.551270       126.55127
5  -27283.400879  -27335.662354  32997.898193 -27283.400879   97.159180 -27335.662354        0.0   52.261475        26.55127
6  -27283.400879  -27309.952148  33071.346924 -27283.400879   50.079590 -27309.952148        0.0   26.551270         0.00000
7  -27283.400879  -27283.400879  33147.909424 -27283.400879   26.539795 -27283.400879        0.0    0.000000       -23.43750
8  -27156.849609  -27259.963379  33147.909424 -27156.849609  126.551270 -27259.963379        0.0  103.113770         3.11377
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:04:33]  --------------------------------------------------------------------------------
[07/19 22:04:33]  Iteration: 62 (1 solution, 60 counterexamples)
[07/19 22:04:36]  Generator returned sat in 1.866645 secs.
[07/19 22:04:36]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:04:37]  Improved gap from 9/800 to 23.4375
[07/19 22:04:37]  Improved number of small numbers from 57 to 101 out of a max of 101
[07/19 22:04:37]  Verifer returned sat in 0.584046 secs.
[07/19 22:04:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27359.953369  -27883.390869  33321.341797 -27359.953369    0.091797 -27883.390869        0.0  523.437500      523.437500
1  -27359.953369  -27883.390869  33321.341797 -27359.953369    0.022705 -27883.390869        0.0  523.437500      423.437500
2  -27359.953369  -27683.390869  33321.341797 -27359.953369  523.437256 -27683.390869        0.0  323.437500      323.437500
3  -27359.953369  -27683.390869  33321.341797 -27359.953369  323.437256 -27683.390869        0.0  323.437500      223.437500
4  -27359.953369  -27483.390869  33321.341797 -27359.953369  200.000000 -27483.390869        0.0  123.437500      123.437500
5  -27359.953369  -27383.395996  33321.341797 -27359.953369    0.010000 -27383.395996        0.0   23.442627       23.437500
6  -27359.953369  -27383.390869  33397.904297 -27359.953369    0.010000 -27383.390869        0.0   23.437500        0.000000
7  -27359.953369  -27359.953369  33471.346924 -27359.953369    0.010000 -27359.953369        0.0    0.000000      -26.557373
8  -27236.515869  -27333.395752  33471.346924 -27236.515869  123.437500 -27333.395752        0.0   96.879883       -3.119873
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:04:37]  --------------------------------------------------------------------------------
[07/19 22:04:37]  Iteration: 63 (1 solution, 61 counterexamples)
[07/19 22:04:41]  Generator returned sat in 2.508678 secs.
[07/19 22:04:41]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:04:42]  Improved gap from 0 to 35.9375
[07/19 22:04:42]  Improved number of small numbers from 91 to 101 out of a max of 101
[07/19 22:04:42]  Verifer returned sat in 1.067978 secs.
[07/19 22:04:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -27129.328369  -27129.328369  33280.177734 -27129.328369    0.091553 -27129.328369        0.0   0.000000        0.000000
1  -27055.453613  -27092.390869  33306.302734 -27055.453613   73.874756 -27092.390869        0.0  36.937256       -0.000244
2  -27055.407471  -27055.453369  33369.365234 -27055.407471   36.983398 -27055.453369        0.0   0.045898      -36.891602
3  -26944.686768  -27018.515869  33395.490479 -26944.686768  110.766602 -27018.515869        0.0  73.829102       -0.045654
4  -26907.703369  -26944.640869  33458.552734 -26907.703369  110.812500 -26944.640869        0.0  36.937500        0.000000
5  -26870.765869  -26907.703369  33521.615234 -26870.765869   73.875000 -26907.703369        0.0  36.937500        0.000000
6  -26833.828369  -26870.765869  33584.677734 -26833.828369   73.875000 -26870.765869        0.0  36.937500        0.000000
7  -26796.890869  -26833.828369  33647.694580 -26796.890869   73.875000 -26833.828369        0.0  36.937500       -0.045654
8  -26723.015869  -26796.845215  33647.694580 -26723.015869  110.812500 -26796.845215        0.0  73.829346      -26.170654
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:04:43]  --------------------------------------------------------------------------------
[07/19 22:04:43]  Iteration: 64 (1 solution, 62 counterexamples)
[07/19 22:04:49]  Generator returned sat in 4.635458 secs.
[07/19 22:04:49]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:04:49]  Improved gap from 47/4096 to 0
[07/19 22:04:50]  Improved number of small numbers from 80 to 101 out of a max of 101
[07/19 22:04:50]  Verifer returned sat in 0.815145 secs.
[07/19 22:04:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -27670.795166  -27670.795166  33248.658936 -27670.795166    0.091309 -27670.795166        0.0   0.000000        0.000000
1  -27570.795166  -27570.795166  33248.658936 -27570.795166  100.000000 -27570.795166        0.0   0.000000        0.000000
2  -27470.795166  -27570.749023  33248.658936 -27470.795166  100.000000 -27570.749023        0.0  99.953857        0.000000
3  -27370.794922  -27470.749268  33248.658936 -27370.794922  199.954102 -27470.749268        0.0  99.954346        0.000244
4  -27370.794922  -27370.794922  33348.567383 -27370.794922    0.500000 -27370.794922        0.0   0.000000       -0.091309
5  -27370.294922  -27370.703613  33448.158691 -27370.294922    0.500000 -27370.703613        0.0   0.408691        0.000000
6  -27370.203613  -27370.249268  33547.658691 -27370.203613    0.500000 -27370.249268        0.0   0.045654       -0.408691
7  -27369.749268  -27369.794922  33647.612793 -27369.749268    0.500000 -27369.794922        0.0   0.045654       -0.000244
8  -27369.294922  -27369.703613  33647.612793 -27369.294922    0.500000 -27369.703613        0.0   0.408691      -99.545898
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:04:50]  --------------------------------------------------------------------------------
[07/19 22:04:50]  Iteration: 65 (1 solution, 63 counterexamples)
[07/19 22:04:52]  Generator returned sat in 0.730425 secs.
[07/19 22:04:52]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:04:52]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/19 22:04:52]  Verifer returned sat in 0.350551 secs.
[07/19 22:04:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28270.386230  -28370.431885  33348.521729 -28270.386230    0.091309 -28370.431885        0.0  100.045654      100.045654
1  -28270.386230  -28370.431885  33348.521729 -28270.386230    0.045654 -28370.431885        0.0  100.045654        0.045654
2  -28270.386230  -28270.431885  33348.567383 -28270.386230    0.045654 -28270.431885        0.0    0.045654      -99.908691
3  -27771.340576  -28170.068848  33348.567383 -27771.340576  499.091309 -28170.068848        0.0  398.728271      299.136963
4  -27670.477539  -28020.477539  33348.567383 -27670.477539  499.591309 -28020.477539        0.0  350.000000      300.000000
5  -27670.477539  -27970.477539  33348.567383 -27670.477539  349.954346 -27970.477539        0.0  300.000000      200.000000
6  -27670.477539  -27770.477539  33348.567383 -27670.477539  299.954346 -27770.477539        0.0  100.000000      100.000000
7  -27370.886230  -27670.477539  33348.567383 -27370.886230  399.591309 -27670.477539        0.0  299.591309      299.591309
8  -27270.386230  -27670.431885  33348.567383 -27270.386230  400.091309 -27670.431885        0.0  400.045654      300.091309
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:04:53]  --------------------------------------------------------------------------------
[07/19 22:04:53]  Iteration: 66 (1 solution, 64 counterexamples)
[07/19 22:04:55]  Generator returned sat in 0.850024 secs.
[07/19 22:04:55]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:04:56]  Improved gap from 373/8192 to 35.9375
[07/19 22:04:56]  Improved number of small numbers from 66 to 101 out of a max of 101
[07/19 22:04:56]  Verifer returned sat in 0.783759 secs.
[07/19 22:04:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -28270.386719  -28317.648193  33348.521240 -28270.386719   0.090820 -28317.648193        0.0  47.261475       47.261230
1  -28270.386719  -28270.431885  33348.521484 -28270.386719   0.045410 -28270.431885        0.0   0.045166      -52.738525
2  -28217.602539  -28217.648193  33412.583984 -28217.602539  52.829346 -28217.648193        0.0   0.045654      -35.891846
3  -28181.665283  -28181.710693  33476.646484 -28181.665283  35.982910 -28181.710693        0.0   0.045410      -35.892090
4  -28113.241943  -28119.773193  33514.708984 -28113.241943  68.468750 -28119.773193        0.0   6.531250      -29.406250
5  -28043.943848  -28083.835693  33574.771484 -28043.943848  75.829346 -28083.835693        0.0  39.891846       -0.045654
6  -28016.429443  -28043.898193  33638.833984 -28016.429443  67.406250 -28043.898193        0.0  27.468750       -8.468750
7  -27974.491943  -28007.960693  33700.692139 -27974.491943  69.406250 -28007.960693        0.0  33.468750       -4.673096
8  -27951.554443  -27969.818848  33700.692139 -27951.554443  56.406250 -27969.818848        0.0  18.264404      -81.735596
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:04:56]  --------------------------------------------------------------------------------
[07/19 22:04:56]  Iteration: 67 (1 solution, 65 counterexamples)
[07/19 22:05:01]  Generator returned sat in 2.747565 secs.
[07/19 22:05:01]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:05:01]  Improved gap from 185/8192 to 0
[07/19 22:05:01]  Improved number of small numbers from 90 to 101 out of a max of 101
[07/19 22:05:01]  Verifer returned sat in 0.530733 secs.
[07/19 22:05:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28283.858398  -28283.881104  33314.754150 -28283.858398    0.090576 -28283.881104        0.0    0.022705        0.022705
1  -28283.858398  -28283.881104  33414.731445 -28283.858398    0.011475 -28283.881104        0.0    0.022705        0.000000
2  -28283.835938  -28283.846924  33514.708740 -28283.835938    0.045166 -28283.846924        0.0    0.010986       -0.000244
3  -28083.835693  -28183.835693  33514.708740 -28083.835693  200.011230 -28183.835693        0.0  100.000000      100.000000
4  -28083.835693  -28083.858643  33514.708740 -28083.835693    1.000000 -28083.858643        0.0    0.022949        0.000000
5  -28082.858643  -28083.835693  33613.731445 -28082.858643    1.000000 -28083.835693        0.0    0.977051       -0.000244
6  -28082.835693  -28082.847168  33712.731689 -28082.835693    1.000000 -28082.847168        0.0    0.011475       -0.977051
7  -28081.847168  -28081.858643  33812.708740 -28081.847168    1.000000 -28081.858643        0.0    0.011475       -0.011475
8  -28080.858643  -28081.835693  33812.708740 -28080.858643    1.000000 -28081.835693        0.0    0.977051      -99.022949
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:05:02]  --------------------------------------------------------------------------------
[07/19 22:05:02]  Iteration: 68 (1 solution, 66 counterexamples)
[07/19 22:05:04]  Generator returned sat in 0.762482 secs.
[07/19 22:05:04]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:05:04]  Improved gap from 8145/8192 to 0
[07/19 22:05:04]  Improved number of small numbers from 70 to 101 out of a max of 101
[07/19 22:05:04]  Verifer returned sat in 0.422212 secs.
[07/19 22:05:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28383.790527  -28483.835693  33514.799316 -28383.790527    0.090332 -28483.835693        0.0  100.045166      100.045166
1  -28383.790283  -28383.835693  33514.799316 -28383.790283  100.045410 -28383.835693        0.0    0.045410        0.045410
2  -28083.881104  -28383.835693  33514.799316 -28083.881104  299.954590 -28383.835693        0.0  299.954590      199.954590
3  -27933.971680  -28183.835938  33514.799316 -27933.971680  449.864014 -28183.835938        0.0  249.864258      249.864014
4  -27933.971680  -28083.881104  33514.799316 -27933.971680    2.000000 -28083.881104        0.0  149.909424      149.864014
5  -27933.971680  -28083.835693  33514.799316 -27933.971680    2.000000 -28083.835693        0.0  149.864014       49.864014
6  -27933.971680  -27936.016846  33564.935303 -27933.971680    2.000000 -27936.016846        0.0    2.045166        0.000000
7  -27933.971680  -27933.971680  33664.935303 -27933.971680    2.000000 -27933.971680        0.0    0.000000        0.000000
8  -27932.971680  -27933.926270  33664.935303 -27932.971680    1.000000 -27933.926270        0.0    0.954590      -99.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:05:05]  --------------------------------------------------------------------------------
[07/19 22:05:05]  Iteration: 69 (1 solution, 67 counterexamples)
[07/19 22:05:07]  Generator returned sat in 0.721344 secs.
[07/19 22:05:07]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:05:07]  Improved gap from 185/4096 to 23.4375
[07/19 22:05:08]  Improved number of small numbers from 50 to 68 out of a max of 101
[07/19 22:05:08]  Verifer returned sat in 0.908001 secs.
[07/19 22:05:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27708.438477  -27808.438691  32839.402100 -27708.438477    0.090088 -27808.438691        0.0  100.000215      100.000000
1  -27708.438477  -27808.438477  32839.402100 -27708.438477   99.999756 -27808.438477        0.0  100.000000        0.000000
2  -27408.438477  -27704.325776  32839.402100 -27408.438477  400.000000 -27704.325776        0.0  295.887300      200.000000
3  -27408.438477  -27527.465303  32839.402100 -27408.438477    0.022461 -27527.465303        0.0  119.026826      100.000000
4  -27384.978608  -27408.438691  32839.402100 -27384.978608  142.486694 -27408.438691        0.0   23.460083       23.459868
5  -27384.978608  -27408.416108  32915.942231 -27384.978608    1.000000 -27408.416108        0.0   23.437500        0.000000
6  -27258.461274  -27384.978608  32915.942231 -27258.461274  149.954834 -27384.978608        0.0  126.517334       26.517334
7  -27258.461274  -27281.898774  32989.424897 -27258.461274    1.000000 -27281.898774        0.0   23.437500        0.000000
8  -27216.628816  -27258.461274  32989.425049 -27216.628816   65.269958 -27258.461274        0.0   41.832458      -58.167390
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:05:08]  --------------------------------------------------------------------------------
[07/19 22:05:08]  Iteration: 70 (1 solution, 68 counterexamples)
[07/19 22:05:11]  Generator returned sat in 1.028016 secs.
[07/19 22:05:11]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:05:12]  Improved gap from 369/8192 to 29.6875
[07/19 22:05:12]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/19 22:05:12]  Verifer returned sat in 1.403583 secs.
[07/19 22:05:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27458.654053  -27639.626465  32831.952393 -27458.654053    0.090088 -27639.626465        0.0  180.972412      178.319824
1  -27458.563965  -27636.973877  32831.952393 -27458.563965  181.062500 -27636.973877        0.0  178.409912       78.409912
2  -27237.063965  -27458.473877  32831.952393 -27237.063965  399.909912 -27458.473877        0.0  221.409912      199.909912
3  -27153.821533  -27336.974121  32831.952393 -27153.821533  304.652344 -27336.974121        0.0  183.152588      183.152344
4  -27153.821533  -27236.973877  32831.952393 -27153.821533  153.326172 -27236.973877        0.0   83.152344       83.152344
5  -27153.821533  -27236.973877  32848.800049 -27153.821533   77.663086 -27236.973877        0.0   83.152344        0.000000
6  -27124.223877  -27153.821533  32919.112549 -27124.223877  112.750000 -27153.821533        0.0   29.597656       -0.089844
7  -27096.446533  -27124.133789  32989.424805 -27096.446533   57.375000 -27124.133789        0.0   27.687256       -2.000244
8  -27094.446289  -27094.446289  32989.425049 -27094.446289   29.687500 -27094.446289        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:05:13]  --------------------------------------------------------------------------------
[07/19 22:05:13]  Iteration: 71 (1 solution, 69 counterexamples)
[07/19 22:05:17]  Generator returned sat in 2.680563 secs.
[07/19 22:05:17]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:17]  Verifer returned unsat in 0.261004 secs.
[07/19 22:05:17]  Proved solution: 
[1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:17]  --------------------------------------------------------------------------------
[07/19 22:05:17]  Iteration: 72 (2 solution, 69 counterexamples)
[07/19 22:05:20]  Generator returned sat in 0.652047 secs.
[07/19 22:05:20]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:20]  Verifer returned unsat in 0.257221 secs.
[07/19 22:05:20]  Proved solution: 
[1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:20]  --------------------------------------------------------------------------------
[07/19 22:05:20]  Iteration: 73 (3 solution, 69 counterexamples)
[07/19 22:05:22]  Generator returned sat in 0.936588 secs.
[07/19 22:05:22]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:23]  Verifer returned unsat in 0.191300 secs.
[07/19 22:05:23]  Proved solution: 
[1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:23]  --------------------------------------------------------------------------------
[07/19 22:05:23]  Iteration: 74 (4 solution, 69 counterexamples)
[07/19 22:05:25]  Generator returned sat in 1.268018 secs.
[07/19 22:05:26]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:26]  Improved gap from 0 to 15.625
[07/19 22:05:26]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/19 22:05:26]  Verifer returned sat in 0.929251 secs.
[07/19 22:05:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27273.643311  -27301.858398  32618.181396 -27273.643311    0.090088 -27301.858398        0.0   28.215088       -0.045166
1  -27273.553223  -27273.598145  32618.181396 -27273.553223   28.305176 -27273.598145        0.0    0.044922      -99.955078
2  -26801.813477  -27173.598145  32618.181396 -26801.813477  471.784668 -27173.598145        0.0  371.784668      271.784668
3  -26801.813477  -27051.858398  32618.181396 -26801.813477  371.739990 -27051.858398        0.0  250.044922      171.784668
4  -26801.813477  -26873.598145  32618.181396 -26801.813477  250.000000 -26873.598145        0.0   71.784668       71.784668
5  -26748.598145  -26801.768066  32618.181396 -26748.598145  125.000000 -26801.768066        0.0   53.169922       25.000000
6  -26739.268066  -26773.598145  32683.851318 -26739.268066   62.500000 -26773.598145        0.0   34.330078        0.000000
7  -26739.268066  -26739.268066  32768.226318 -26739.268066   31.250000 -26739.268066        0.0    0.000000      -15.625000
8  -26723.643066  -26723.643066  32768.226318 -26723.643066   15.625000 -26723.643066        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:05:27]  --------------------------------------------------------------------------------
[07/19 22:05:27]  Iteration: 75 (4 solution, 70 counterexamples)
[07/19 22:05:31]  Generator returned sat in 2.375097 secs.
[07/19 22:05:31]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:31]  Improved gap from 0 to 100
[07/19 22:05:32]  Improved number of small numbers from 62 to 64 out of a max of 101
[07/19 22:05:32]  Verifer returned sat in 1.147937 secs.
[07/19 22:05:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27273.643311  -27323.637418  32768.226318 -27273.643311    0.090088 -27323.637418        0.0   49.994107       -0.000357
1  -27173.643311  -27273.642953  32768.226318 -27173.643311  149.994107 -27273.642953        0.0   99.999643       -0.000357
2  -27073.642953  -27173.642953  32768.226318 -27073.642953  200.000000 -27173.642953        0.0  100.000000        0.000000
3  -26623.642418  -27073.635096  32768.226318 -26623.642418  550.000536 -27073.635096        0.0  449.992679      350.000536
4  -26623.642418  -26873.642953  32768.226318 -26623.642418  400.001429 -26873.642953        0.0  250.000536      250.000536
5  -26473.642239  -26873.642578  32768.226318 -26473.642239  400.000714 -26873.642578        0.0  400.000339      300.000714
6  -26473.642239  -26673.642953  32768.226318 -26473.642239    0.010000 -26673.642953        0.0  200.000714      200.000714
7  -26473.641882  -26573.642953  32768.226318 -26473.641882  200.001071 -26573.642953        0.0  100.001071      100.001071
8  -26323.642418  -26573.642953  32768.226318 -26323.642418  250.000536 -26573.642953        0.0  250.000536      150.000536
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:05:32]  --------------------------------------------------------------------------------
[07/19 22:05:32]  Iteration: 76 (4 solution, 71 counterexamples)
[07/19 22:05:39]  Generator returned sat in 4.831932 secs.
[07/19 22:05:39]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:05:39]  Improved gap from 369/8192 to 100
[07/19 22:05:39]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:05:39]  Verifer returned sat in 0.252698 secs.
[07/19 22:05:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27373.642822  -27373.642822  32768.226074 -27373.642822    0.090088 -27373.642822        0.0    0.000000     -100.000000
1  -27173.642822  -27273.642822  32768.226074 -27173.642822  200.000000 -27273.642822        0.0  100.000000        0.000000
2  -27073.733154  -27173.642822  32768.226074 -27073.733154  199.909668 -27173.642822        0.0   99.909668       -0.090332
3  -26775.552979  -27073.642822  32768.226074 -26775.552979  398.089844 -27073.642822        0.0  298.089844      198.089844
4  -26675.052979  -26873.642822  32768.226074 -26675.052979  398.589844 -26873.642822        0.0  198.589844      198.589844
5  -26474.552979  -26873.642822  32768.226074 -26474.552979  399.089844 -26873.642822        0.0  399.089844      299.089844
6  -26474.052979  -26673.642822  32768.226074 -26474.052979  399.589844 -26673.642822        0.0  199.589844      199.589844
7  -26273.552979  -26673.642822  32768.226074 -26273.552979  400.089844 -26673.642822        0.0  400.089844      300.089844
8  -26273.052979  -26473.643066  32768.226074 -26273.052979  400.589844 -26473.643066        0.0  200.590088      200.589844
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:05:40]  --------------------------------------------------------------------------------
[07/19 22:05:40]  Iteration: 77 (4 solution, 72 counterexamples)
[07/19 22:05:43]  Generator returned sat in 1.450099 secs.
[07/19 22:05:43]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:05:44]  Improved number of small numbers from 66 to 92 out of a max of 100
[07/19 22:05:44]  Verifer returned sat in 0.804439 secs.
[07/19 22:05:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27573.665527  -27673.642822  33365.351074 -27573.665527    0.089844 -27673.642822        0.0   99.977295       -0.022705
1  -27573.620117  -27573.642822  33365.351074 -27573.620117  100.022705 -27573.642822        0.0    0.022705      -99.977295
2  -27173.642822  -27473.642822  33365.351074 -27173.642822  400.000000 -27473.642822        0.0  300.000000      200.000000
3  -27173.642822  -27274.552734  33365.351074 -27173.642822    0.022705 -27274.552734        0.0  100.909912      100.000000
4  -26875.462646  -27173.642822  33365.351074 -26875.462646  399.090088 -27173.642822        0.0  298.180176      298.180176
5  -26773.597778  -27173.620361  33365.351074 -26773.597778  400.045044 -27173.620361        0.0  400.022583      300.045044
6  -26773.597778  -27024.086426  33365.351074 -26773.597778  300.022461 -27024.086426        0.0  250.488647      200.045044
7  -26773.597778  -26874.552734  33365.351074 -26773.597778  250.466309 -26874.552734        0.0  100.954956      100.045044
8  -26575.462646  -26873.642822  33365.351074 -26575.462646  299.090088 -26873.642822        0.0  298.180176      198.180176
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:05:44]  --------------------------------------------------------------------------------
[07/19 22:05:44]  Iteration: 78 (4 solution, 73 counterexamples)
[07/19 22:05:52]  Generator returned sat in 6.042435 secs.
[07/19 22:05:52]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:05:52]  Improved gap from 0 to 35.9375
[07/19 22:05:53]  Improved number of small numbers from 66 to 68 out of a max of 101
[07/19 22:05:53]  Verifer returned sat in 1.038250 secs.
[07/19 22:05:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26975.229248  -27086.176880  33365.351074 -26975.229248   0.089844 -27086.176880        0.0  110.947632       99.954956
1  -26975.229248  -26975.274292  33365.351074 -26975.229248   0.045166 -26975.274292        0.0    0.045044       -0.045044
2  -26975.139160  -26975.184204  33429.413574 -26975.139160   0.135132 -26975.184204        0.0    0.045044      -35.892456
3  -26939.201660  -26939.246704  33493.475830 -26939.201660  35.982544 -26939.246704        0.0    0.045044      -35.892700
4  -26864.781616  -26902.309204  33554.948486 -26864.781616  74.465088 -26902.309204        0.0   37.527588        0.000000
5  -26864.781616  -26864.781616  33619.010986 -26864.781616  37.482544 -26864.781616        0.0    0.000000      -35.937500
6  -26808.580322  -26828.844116  33683.073486 -26808.580322  56.201294 -26828.844116        0.0   20.263794      -15.673706
7  -26772.642822  -26792.906616  33747.135742 -26772.642822  56.201294 -26792.906616        0.0   20.263794      -15.673950
8  -26737.205322  -26752.354248  33747.135742 -26737.205322  55.701294 -26752.354248        0.0   15.148926      -80.236450
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:05:53]  --------------------------------------------------------------------------------
[07/19 22:05:53]  Iteration: 79 (4 solution, 74 counterexamples)
[07/19 22:05:56]  Generator returned sat in 0.891842 secs.
[07/19 22:05:56]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:56]  Verifer returned unsat in 0.184656 secs.
[07/19 22:05:56]  Proved solution: 
[1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:56]  --------------------------------------------------------------------------------
[07/19 22:05:56]  Iteration: 80 (5 solution, 74 counterexamples)
[07/19 22:05:59]  Generator returned sat in 0.959835 secs.
[07/19 22:05:59]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:05:59]  Improved gap from 0 to 23.4375
[07/19 22:05:59]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/19 22:05:59]  Verifer returned sat in 0.667995 secs.
[07/19 22:05:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27461.013916  -27461.015381  33576.275879 -27461.013916    0.089844 -27461.015381        0.0    0.001465        0.001465
1  -26961.015381  -27461.015381  33576.275879 -26961.015381  500.000000 -27461.015381        0.0  500.000000      400.000000
2  -26937.577881  -27361.015137  33576.275879 -26937.577881  523.437500 -27361.015137        0.0  423.437256      323.437500
3  -26937.577881  -27261.015381  33576.275879 -26937.577881    0.001250 -27261.015381        0.0  323.437500      223.437500
4  -26937.577881  -27064.139160  33576.275879 -26937.577881  200.000000 -27064.139160        0.0  126.561279      123.437500
5  -26937.577881  -26961.016846  33576.275879 -26937.577881    0.010000 -26961.016846        0.0   23.438965       23.437500
6  -26937.577881  -26961.015381  33652.838379 -26937.577881    0.010000 -26961.015381        0.0   23.437500        0.000000
7  -26937.577881  -26937.577881  33729.400879 -26937.577881    0.010000 -26937.577881        0.0    0.000000      -23.437500
8  -26811.016602  -26914.140137  33729.400879 -26811.016602  126.561279 -26914.140137        0.0  103.123535        3.123779
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:06:00]  --------------------------------------------------------------------------------
[07/19 22:06:00]  Iteration: 81 (5 solution, 75 counterexamples)
[07/19 22:06:02]  Generator returned sat in 0.764122 secs.
[07/19 22:06:02]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:06:03]  Verifer returned unsat in 0.360286 secs.
[07/19 22:06:03]  Proved solution: 
[1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:06:03]  --------------------------------------------------------------------------------
[07/19 22:06:03]  Iteration: 82 (6 solution, 75 counterexamples)
[07/19 22:06:10]  Generator returned sat in 5.818767 secs.
[07/19 22:06:10]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:06:11]  Improved gap from 0 to 29.6875
[07/19 22:06:11]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:06:11]  Verifer returned sat in 0.574679 secs.
[07/19 22:06:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27175.527100  -27175.527100  33515.742676 -27175.527100    0.089844 -27175.527100        0.0    0.000000        0.000000
1  -27075.572021  -27075.616943  33515.742676 -27075.572021   99.955078 -27075.616943        0.0    0.044922       -0.044922
2  -27037.667725  -27075.527100  33577.883301 -27037.667725   37.949219 -27075.527100        0.0   37.859375        0.000000
3  -26748.380615  -27037.667725  33577.883301 -26748.380615  327.146484 -27037.667725        0.0  289.287109      189.287109
4  -26748.380615  -26837.667725  33577.883301 -26748.380615  163.573242 -26837.667725        0.0   89.287109       89.287109
5  -26748.380615  -26837.667725  33588.596191 -26748.380615   81.786621 -26837.667725        0.0   89.287109        0.000000
6  -26718.738037  -26748.380615  33658.908691 -26718.738037  118.929688 -26748.380615        0.0   29.642578       -0.044922
7  -26688.915771  -26718.693115  33729.131348 -26688.915771   59.464844 -26718.693115        0.0   29.777344        0.000000
8  -26688.915771  -26688.915771  33729.131348 -26688.915771   29.732422 -26688.915771        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:06:11]  --------------------------------------------------------------------------------
[07/19 22:06:11]  Iteration: 83 (6 solution, 76 counterexamples)
[07/19 22:06:14]  Generator returned sat in 0.922641 secs.
[07/19 22:06:14]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:06:15]  Improved gap from 1/2000 to 23.4375
[07/19 22:06:15]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/19 22:06:15]  Verifer returned sat in 1.106302 secs.
[07/19 22:06:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -27188.864990  -27212.257324  33446.847168 -27188.864990   0.089600 -27212.257324        0.0  23.392334       23.392334
1  -27188.864746  -27212.257324  33523.409668 -27188.864746  23.392578 -27212.257324        0.0  23.392578       -0.044922
2  -27188.775146  -27188.819824  33588.253662 -27188.775146  23.482178 -27188.819824        0.0   0.044678      -35.111328
3  -27127.792725  -27153.663574  33662.382568 -27127.792725  61.027100 -27153.663574        0.0  25.870850        0.000000
4  -27095.069824  -27127.792725  33729.659668 -27095.069824  58.593750 -27127.792725        0.0  32.722900        0.000000
5  -27043.328125  -27095.069824  33777.917969 -27043.328125  84.464600 -27095.069824        0.0  51.741699        0.000000
6  -27001.319824  -27043.328125  33835.909668 -27001.319824  93.750000 -27043.328125        0.0  42.008301        0.000000
7  -26996.453125  -27001.275146  33912.427490 -26996.453125  46.875000 -27001.275146        0.0   4.822021      -18.615479
8  -26977.837646  -26977.837646  33912.427490 -26977.837646  23.437500 -26977.837646        0.0   0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:06:15]  --------------------------------------------------------------------------------
[07/19 22:06:15]  Iteration: 84 (6 solution, 77 counterexamples)
[07/19 22:06:18]  Generator returned sat in 1.180525 secs.
[07/19 22:06:18]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:06:19]  Improved gap from 367/8192 to 100
[07/19 22:06:19]  Improved number of small numbers from 60 to 97 out of a max of 101
[07/19 22:06:19]  Verifer returned sat in 0.773332 secs.
[07/19 22:06:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27188.865234  -27288.909912  33523.499756 -27188.865234    0.089355 -27288.909912        0.0  100.044678      100.044678
1  -27188.865234  -27188.909912  33523.499756 -27188.865234  100.044678 -27188.909912        0.0    0.044678        0.044678
2  -26988.954834  -27088.909912  33523.499756 -26988.954834  199.955078 -27088.909912        0.0   99.955078       99.955078
3  -26988.954834  -27038.775391  33523.499756 -26988.954834   99.910400 -27038.775391        0.0   49.820557       -0.044922
4  -26888.909790  -26988.909912  33523.499756 -26888.909790  149.865601 -26988.909912        0.0  100.000122        0.000122
5  -26788.909912  -26888.909912  33523.499756 -26788.909912  200.000000 -26888.909912        0.0  100.000000        0.000000
6  -26688.909912  -26788.909912  33523.499756 -26688.909912  200.000000 -26788.909912        0.0  100.000000        0.000000
7  -26488.909912  -26588.909912  33523.499756 -26488.909912  300.000000 -26588.909912        0.0  100.000000      100.000000
8  -26138.909912  -26588.909912  33523.499756 -26138.909912  450.000000 -26588.909912        0.0  450.000000      350.000000
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:06:20]  --------------------------------------------------------------------------------
[07/19 22:06:20]  Iteration: 85 (6 solution, 78 counterexamples)
[07/19 22:06:32]  Generator returned sat in 10.251786 secs.
[07/19 22:06:32]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:06:32]  Improved gap from 0 to 37.5
[07/19 22:06:33]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/19 22:06:33]  Verifer returned sat in 0.947497 secs.
[07/19 22:06:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26650.739502  -26750.783936  32985.329102 -26650.739502    0.089111 -26750.783936        0.0  100.044434      100.000000
1  -26650.739258  -26750.739258  32985.329102 -26650.739258  100.044678 -26750.739258        0.0  100.000000        0.000244
2  -26458.605469  -26550.739502  32985.329102 -26458.605469  292.133789 -26550.739502        0.0   92.134033       92.134033
3  -26458.605469  -26458.649902  32985.329102 -26458.605469   69.000000 -26458.649902        0.0    0.044434       -7.865967
4  -26388.149902  -26388.194824  32985.329102 -26388.149902   70.500000 -26388.194824        0.0    0.044922      -37.410400
5  -26316.194824  -26350.739258  33047.828857 -26316.194824   72.000000 -26350.739258        0.0   34.544434       -2.955566
6  -26277.239258  -26313.239258  33110.328857 -26277.239258   73.500000 -26313.239258        0.0   36.000000       -1.500000
7  -26238.239258  -26275.739258  33172.828857 -26238.239258   75.000000 -26275.739258        0.0   37.500000        0.000000
8  -26238.239258  -26238.239258  33235.328857 -26238.239258    0.500000 -26238.239258        0.0    0.000000      -37.500000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:06:33]  --------------------------------------------------------------------------------
[07/19 22:06:33]  Iteration: 86 (6 solution, 79 counterexamples)
[07/19 22:06:36]  Generator returned sat in 1.078489 secs.
[07/19 22:06:36]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:06:36]  Improved gap from 0 to 0
[07/19 22:06:36]  Improved number of small numbers from 61 to 101 out of a max of 101
[07/19 22:06:36]  Verifer returned sat in 0.457312 secs.
[07/19 22:06:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26951.284180  -27151.261963  33385.851562 -26951.284180    0.089111 -27151.261963        0.0  199.977783      199.977783
1  -26951.284180  -27151.261963  33385.851562 -26951.284180  199.977783 -27151.261963        0.0  199.977783       99.977783
2  -26651.239746  -26951.261963  33385.851562 -26651.239746  500.022217 -26951.261963        0.0  300.022217      300.022217
3  -26651.239746  -26951.261719  33385.851562 -26651.239746    0.022217 -26951.261719        0.0  300.021973      200.022217
4  -26651.239746  -26751.261963  33385.851562 -26651.239746    0.500000 -26751.261963        0.0  100.022217      100.022217
5  -26651.239746  -26751.239746  33385.851562 -26651.239746    0.500000 -26751.239746        0.0  100.000000        0.022217
6  -26651.239746  -26651.261719  33484.373779 -26651.239746    0.500000 -26651.261719        0.0    0.021973       -1.455566
7  -26649.761719  -26649.784180  33584.351318 -26649.761719    1.500000 -26649.784180        0.0    0.022461        0.000000
8  -26649.284180  -26649.761719  33584.351318 -26649.284180    0.500000 -26649.761719        0.0    0.477539      -99.522461
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:06:37]  --------------------------------------------------------------------------------
[07/19 22:06:37]  Iteration: 87 (6 solution, 80 counterexamples)
[07/19 22:06:42]  Generator returned sat in 3.106963 secs.
[07/19 22:06:42]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:06:42]  Improved gap from 23/1024 to 10.9375
[07/19 22:06:43]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/19 22:06:43]  Verifer returned sat in 0.888529 secs.
[07/19 22:06:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26156.388672  -26256.343994  33486.704102 -26156.388672    0.088867 -26256.343994        0.0   99.955322       99.955322
1  -26156.388672  -26256.343994  33486.704102 -26156.388672   99.955322 -26256.343994        0.0   99.955322       -0.044678
2  -25899.299561  -26156.343994  33486.704102 -25899.299561  357.044434 -26156.343994        0.0  257.044434      157.044434
3  -25899.299561  -26029.210449  33486.704102 -25899.299561  257.000000 -26029.210449        0.0  129.910889       57.044434
4  -25899.210449  -25899.254883  33518.677246 -25899.210449  130.000000 -25899.254883        0.0    0.044434      -10.893311
5  -25832.754883  -25851.879883  33563.114746 -25832.754883   66.500000 -25851.879883        0.0   19.125000       -0.000244
6  -25817.129883  -25832.710449  33647.489746 -25817.129883   34.750000 -25832.710449        0.0   15.580566       -0.000244
7  -25813.835449  -25817.085449  33736.508057 -25813.835449   18.875000 -25817.085449        0.0    3.250000       -7.687500
8  -25806.147949  -25806.147949  33736.508057 -25806.147949   10.937500 -25806.147949        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:06:43]  --------------------------------------------------------------------------------
[07/19 22:06:43]  Iteration: 88 (6 solution, 81 counterexamples)
[07/19 22:06:47]  Generator returned sat in 2.542346 secs.
[07/19 22:06:48]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:06:48]  Improved gap from 365/16384 to 100
[07/19 22:06:48]  Improved number of small numbers from 62 to 93 out of a max of 101
[07/19 22:06:48]  Verifer returned sat in 0.856225 secs.
[07/19 22:06:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25756.012207  -25856.012207  33437.866455 -25756.012207    0.088623 -25856.012207        0.0  100.000000      100.000000
1  -25643.145508  -25756.056396  33437.866455 -25643.145508  212.866699 -25756.056396        0.0  112.910889      112.866699
2  -25643.145508  -25756.012207  33437.866455 -25643.145508    0.044434 -25756.012207        0.0  112.866699       12.866699
3  -25643.145508  -25643.189819  33437.866455 -25643.145508   57.148148 -25643.189819        0.0    0.044312      -87.133301
4  -25555.967597  -25556.012031  33437.866455 -25555.967597   87.222222 -25556.012031        0.0    0.044434      -99.955390
5  -25423.678697  -25456.011963  33437.866455 -25423.678697  132.333333 -25456.011963        0.0   32.333266      -67.666490
6  -25256.011963  -25356.011963  33437.866455 -25256.011963  200.000000 -25356.011963        0.0  100.000000        0.000244
7  -25054.511963  -25156.012207  33437.866455 -25054.511963  301.500000 -25156.012207        0.0  101.500244      101.500244
8  -24702.262207  -25156.012207  33437.866455 -24702.262207  453.750000 -25156.012207        0.0  453.750000      353.750000
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:06:49]  --------------------------------------------------------------------------------
[07/19 22:06:49]  Iteration: 89 (6 solution, 82 counterexamples)
[07/19 22:06:52]  Generator returned sat in 1.542541 secs.
[07/19 22:06:52]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:06:53]  Improved gap from 363/8192 to 35.9375
[07/19 22:06:53]  Improved number of small numbers from 54 to 61 out of a max of 101
[07/19 22:06:53]  Verifer returned sat in 1.224344 secs.
[07/19 22:06:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25608.580566  -25805.179463  33319.767822 -25608.580566    0.088623 -25805.179463        0.0  196.598896      129.333008
1  -25608.580566  -25637.913594  33319.767822 -25608.580566  196.598877 -25637.913594        0.0   29.333027       29.333008
2  -25572.643086  -25608.491963  33354.408711 -25572.643086   65.270508 -25608.491963        0.0   35.848877       -0.088623
3  -25492.840840  -25572.554463  33374.695088 -25492.840840  115.651123 -25572.554463        0.0   79.713623        0.000000
4  -25455.741963  -25492.840840  33437.596211 -25455.741963  116.812500 -25492.840840        0.0   37.098877        0.000000
5  -25419.804463  -25455.741963  33501.658711 -25419.804463   73.036377 -25455.741963        0.0   35.937500        0.000000
6  -25378.866963  -25419.804463  33560.721211 -25378.866963   76.875000 -25419.804463        0.0   40.937500        0.000000
7  -25342.929463  -25378.866963  33624.783711 -25342.929463   76.875000 -25378.866963        0.0   35.937500        0.000000
8  -25321.380024  -25342.929463  33624.783936 -25321.380024   57.486938 -25342.929463        0.0   21.549438      -78.450337
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:06:54]  --------------------------------------------------------------------------------
[07/19 22:06:54]  Iteration: 90 (6 solution, 83 counterexamples)
[07/19 22:06:59]  Generator returned sat in 3.231728 secs.
[07/19 22:06:59]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:06:59]  Improved gap from 363/8192 to 100
[07/19 22:07:00]  Improved number of small numbers from 46 to 101 out of a max of 101
[07/19 22:07:00]  Verifer returned sat in 0.612559 secs.
[07/19 22:07:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25506.932373  -25697.021240  33188.742432 -25506.932373    0.088623 -25697.021240        0.0  190.088867       99.955811
1  -25506.843994  -25606.887939  33188.742432 -25506.843994  190.177246 -25606.887939        0.0  100.043945        0.044189
2  -25506.843994  -25506.887939  33188.742432 -25506.843994    0.044189 -25506.887939        0.0    0.043945      -99.955811
3  -25007.843750  -25404.888184  33188.742432 -25007.843750  499.044189 -25404.888184        0.0  397.044434      299.044434
4  -25007.799561  -25206.888184  33188.742432 -25007.799561  397.088623 -25206.888184        0.0  199.088623      199.088623
5  -24806.843994  -25206.888184  33188.742432 -24806.843994  400.044189 -25206.888184        0.0  400.044189      300.044189
6  -24806.843994  -25006.888184  33188.742432 -24806.843994  351.521973 -25006.888184        0.0  200.044189      200.044189
7  -24630.627197  -25006.888184  33188.742432 -24630.627197  376.260986 -25006.888184        0.0  376.260986      276.260986
8  -24630.627197  -24906.888184  33188.742432 -24630.627197    0.500000 -24906.888184        0.0  276.260986      176.260986
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:07:00]  --------------------------------------------------------------------------------
[07/19 22:07:00]  Iteration: 91 (6 solution, 84 counterexamples)
[07/19 22:07:03]  Generator returned sat in 1.108978 secs.
[07/19 22:07:03]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:07:04]  Improved gap from 0 to 48.4375
[07/19 22:07:04]  Improved number of small numbers from 61 to 101 out of a max of 101
[07/19 22:07:04]  Verifer returned sat in 0.552802 secs.
[07/19 22:07:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -24531.257324  -24731.185791  33188.742188 -24531.257324    0.088623 -24731.185791        0.0  199.928467      199.928223
1  -24531.248291  -24649.186035  33188.742188 -24531.248291  199.937500 -24649.186035        0.0  117.937744       99.937256
2  -24531.248291  -24531.248291  33188.742188 -24531.248291    0.009033 -24531.248291        0.0    0.000000       -0.062744
3  -24331.176758  -24431.185791  33188.742188 -24331.176758  200.071533 -24431.185791        0.0  100.009033      100.008789
4  -24279.685791  -24331.185791  33188.742188 -24279.685791  151.500000 -24331.185791        0.0   51.500000       51.499756
5  -24279.685791  -24331.177002  33237.242188 -24279.685791    0.500000 -24331.177002        0.0   51.491211       -0.000244
6  -24229.641357  -24278.069580  33287.188721 -24229.641357  101.535645 -24278.069580        0.0   48.428223       -0.009277
7  -24200.011475  -24229.632080  33338.751221 -24200.011475   78.058105 -24229.632080        0.0   29.620605      -18.816895
8  -24177.355225  -24181.194580  33338.751221 -24177.355225   52.276855 -24181.194580        0.0    3.839355      -96.160645
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:07:04]  --------------------------------------------------------------------------------
[07/19 22:07:04]  Iteration: 92 (6 solution, 85 counterexamples)
[07/19 22:07:07]  Generator returned sat in 1.053684 secs.
[07/19 22:07:07]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:07:08]  Improved gap from 0 to 35.9375
[07/19 22:07:09]  Improved number of small numbers from 65 to 89 out of a max of 101
[07/19 22:07:09]  Verifer returned sat in 1.375061 secs.
[07/19 22:07:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -24504.927734  -24504.927856  32954.583252 -24504.927734    0.088379 -24504.927856        0.0   0.000122       -7.901123
1  -24396.982422  -24397.026611  32954.583252 -24396.982422  107.945435 -24397.026611        0.0   0.044189        0.044189
2  -24355.810791  -24396.938232  33013.323242 -24355.810791   41.215820 -24396.938232        0.0  41.127441       -0.044189
3  -24319.873291  -24355.766479  33077.385498 -24319.873291   77.064941 -24355.766479        0.0  35.893188       -0.044434
4  -24279.685791  -24319.828857  33137.242432 -24279.685791   76.080688 -24319.828857        0.0  40.143066        0.000000
5  -24279.685791  -24279.685791  33201.304932 -24279.685791   40.098877 -24279.685791        0.0   0.000000      -35.937500
6  -24219.559570  -24243.748291  33265.367432 -24219.559570   60.126221 -24243.748291        0.0  24.188721      -11.748779
7  -24186.239197  -24207.810791  33329.429932 -24186.239197   57.509094 -24207.810791        0.0  21.571594      -14.365906
8  -24150.301758  -24169.873291  33329.429932 -24150.301758   57.509033 -24169.873291        0.0  19.571533      -78.428467
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:07:09]  --------------------------------------------------------------------------------
[07/19 22:07:09]  Iteration: 93 (6 solution, 86 counterexamples)
[07/19 22:07:20]  Generator returned sat in 9.405575 secs.
[07/19 22:07:20]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:07:21]  Verifer returned unsat in 0.327417 secs.
[07/19 22:07:21]  Proved solution: 
[1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:07:21]  --------------------------------------------------------------------------------
[07/19 22:07:21]  Iteration: 94 (7 solution, 86 counterexamples)
[07/19 22:07:24]  Generator returned sat in 0.960691 secs.
[07/19 22:07:24]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:07:24]  Verifer returned unsat in 0.304936 secs.
[07/19 22:07:24]  Proved solution: 
[1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:07:24]  --------------------------------------------------------------------------------
[07/19 22:07:24]  Iteration: 95 (8 solution, 86 counterexamples)
[07/19 22:07:27]  Generator returned sat in 0.955377 secs.
[07/19 22:07:27]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:07:27]  Verifer returned unsat in 0.241673 secs.
[07/19 22:07:27]  Proved solution: 
[1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:07:27]  --------------------------------------------------------------------------------
[07/19 22:07:27]  Iteration: 96 (9 solution, 86 counterexamples)
[07/19 22:07:33]  Generator returned sat in 3.451494 secs.
[07/19 22:07:33]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:07:33]  Improved gap from 1205/2048 to 14.0625
[07/19 22:07:34]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:07:34]  Verifer returned sat in 0.893476 secs.
[07/19 22:07:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -24778.683594  -25078.506836  33103.345947 -24778.683594    0.088379 -25078.506836        0.0  299.823242      299.823242
1  -24778.595215  -25078.506836  33103.345947 -24778.595215  299.911621 -25078.506836        0.0  299.911621      199.911621
2  -24678.595459  -24975.720459  33103.345947 -24678.595459  399.911377 -24975.720459        0.0  297.125000      199.911377
3  -24556.720459  -24778.506836  33103.345947 -24556.720459  419.000000 -24778.506836        0.0  221.786377      221.786377
4  -24556.720459  -24678.507080  33103.345947 -24556.720459  210.000000 -24678.507080        0.0  121.786621      121.786377
5  -24556.720459  -24609.970215  33103.345947 -24556.720459  105.500000 -24609.970215        0.0   53.249756       21.786377
6  -24556.720215  -24556.720459  33167.496826 -24556.720215   53.250000 -24556.720459        0.0    0.000244      -14.062500
7  -24529.595459  -24542.657715  33253.434326 -24529.595459   27.125000 -24542.657715        0.0   13.062256       -1.000244
8  -24528.595215  -24528.595215  33253.434326 -24528.595215   14.062500 -24528.595215        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:07:34]  --------------------------------------------------------------------------------
[07/19 22:07:34]  Iteration: 97 (9 solution, 87 counterexamples)
[07/19 22:07:44]  Generator returned sat in 7.900311 secs.
[07/19 22:07:44]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:07:45]  Improved gap from 181/4096 to 14.0625
[07/19 22:07:46]  Improved number of small numbers from 55 to 78 out of a max of 101
[07/19 22:07:46]  Verifer returned sat in 1.616878 secs.
[07/19 22:07:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25035.346924  -25135.391357  33103.345947 -25035.346924    0.088135 -25135.391357        0.0  100.044434      100.044210
1  -25035.346924  -25035.391357  33103.345947 -25035.346924  100.044189 -25035.391357        0.0    0.044434        0.044210
2  -24935.391357  -25035.391113  33103.345947 -24935.391357  100.000000 -25035.391113        0.0   99.999756       -0.000224
3  -24641.214355  -24839.347168  33103.345947 -24641.214355  394.176758 -24839.347168        0.0  198.132812      194.176778
4  -24641.214355  -24735.391134  33103.345947 -24641.214355  198.088379 -24735.391134        0.0   94.176778       94.176778
5  -24635.346944  -24735.391134  33103.345947 -24635.346944  100.044189 -24735.391134        0.0  100.044189        0.044189
6  -24635.346944  -24635.391134  33176.879150 -24635.346944   51.022095 -24635.391134        0.0    0.044189      -26.422607
7  -24608.880086  -24608.924276  33262.816406 -24608.880086   26.511047 -24608.924276        0.0    0.044189      -14.018494
8  -24594.668752  -24594.861572  33262.816406 -24594.668752   14.255524 -24594.861572        0.0    0.192820      -99.807159
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:07:46]  --------------------------------------------------------------------------------
[07/19 22:07:46]  Iteration: 98 (9 solution, 88 counterexamples)
[07/19 22:07:50]  Generator returned sat in 2.255959 secs.
[07/19 22:07:50]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:07:51]  Improved gap from 0 to 100
[07/19 22:07:51]  Improved number of small numbers from 44 to 101 out of a max of 101
[07/19 22:07:51]  Verifer returned sat in 0.564558 secs.
[07/19 22:07:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25504.615479  -25702.439209  33572.526123 -25504.615479    0.088135 -25702.439209        0.0  197.823730       99.956055
1  -25404.571289  -25602.747559  33572.526123 -25404.571289  297.867920 -25602.747559        0.0  198.176270      100.000244
2  -25404.571289  -25504.571533  33572.526123 -25404.571289    0.044189 -25504.571533        0.0  100.000244        0.000244
3  -25004.615479  -25404.571533  33572.526123 -25004.615479  499.956055 -25404.571533        0.0  399.956055      299.956055
4  -25004.615479  -25204.571533  33572.526123 -25004.615479  399.911865 -25204.571533        0.0  199.956055      199.956055
5  -24804.527588  -25204.571533  33572.526123 -24804.527588  400.043945 -25204.571533        0.0  400.043945      300.043945
6  -24804.527588  -25004.571533  33572.526123 -24804.527588  351.021973 -25004.571533        0.0  200.043945      200.043945
7  -24628.060547  -25004.571533  33572.526123 -24628.060547  376.510986 -25004.571533        0.0  376.510986      276.510986
8  -24628.060547  -24904.571533  33572.526123 -24628.060547    0.500000 -24904.571533        0.0  276.510986      176.510986
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:07:51]  --------------------------------------------------------------------------------
[07/19 22:07:51]  Iteration: 99 (9 solution, 89 counterexamples)
[07/19 22:07:55]  Generator returned sat in 1.565823 secs.
[07/19 22:07:55]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:07:55]  Improved gap from 0 to 23.4375
[07/19 22:07:55]  Improved number of small numbers from 58 to 101 out of a max of 101
[07/19 22:07:55]  Verifer returned sat in 0.492129 secs.
[07/19 22:07:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25267.222412  -25377.552979  33342.382568 -25267.222412    0.088135 -25377.552979        0.0  110.330566      107.205811
1  -24977.509033  -25274.428223  33342.382568 -24977.509033  400.043945 -25274.428223        0.0  296.919189      296.919189
2  -24977.509033  -25267.178223  33342.382568 -24977.509033    0.043945 -25267.178223        0.0  289.669189      196.919189
3  -24974.472412  -25093.511475  33342.382568 -24974.472412  292.705811 -25093.511475        0.0  119.039062       99.955811
4  -24950.990723  -24977.509277  33342.382568 -24950.990723  142.520752 -24977.509277        0.0   26.518555       23.437500
5  -24950.990723  -24974.428223  33418.945068 -24950.990723    1.000000 -24974.428223        0.0   23.437500        0.000000
6  -24827.553223  -24950.990723  33418.945068 -24827.553223  146.875000 -24950.990723        0.0  123.437500       23.437500
7  -24827.553223  -24850.990723  33495.507568 -24827.553223    1.000000 -24850.990723        0.0   23.437500        0.000000
8  -24787.231445  -24827.553223  33495.507812 -24787.231445   63.759277 -24827.553223        0.0   40.321777      -59.677979
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:07:56]  --------------------------------------------------------------------------------
[07/19 22:07:56]  Iteration: 100 (9 solution, 90 counterexamples)
[07/19 22:08:01]  Generator returned sat in 3.194875 secs.
[07/19 22:08:01]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:01]  Verifer returned unsat in 0.186647 secs.
[07/19 22:08:01]  Proved solution: 
[1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:01]  --------------------------------------------------------------------------------
[07/19 22:08:01]  Iteration: 101 (10 solution, 90 counterexamples)
[07/19 22:08:05]  Generator returned sat in 1.418264 secs.
[07/19 22:08:05]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:05]  Verifer returned unsat in 0.157407 secs.
[07/19 22:08:05]  Proved solution: 
[1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:05]  --------------------------------------------------------------------------------
[07/19 22:08:05]  Iteration: 102 (11 solution, 90 counterexamples)
[07/19 22:08:08]  Generator returned sat in 1.379153 secs.
[07/19 22:08:08]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:09]  Improved gap from 0 to 23.4375
[07/19 22:08:09]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/19 22:08:09]  Verifer returned sat in 0.787990 secs.
[07/19 22:08:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -25286.055420  -25809.492920  33395.507568 -25286.055420    0.087891 -25809.492920        0.0  523.437500      523.437500
1  -25286.055420  -25809.492920  33395.507568 -25286.055420    0.176270 -25809.492920        0.0  523.437500      423.437500
2  -25286.055420  -25709.492920  33395.507568 -25286.055420    0.044189 -25709.492920        0.0  423.437500      323.437500
3  -25286.055420  -25564.617920  33395.507568 -25286.055420  423.437256 -25564.617920        0.0  278.562500      223.437500
4  -25286.055420  -25409.492920  33395.507568 -25286.055420  244.875000 -25409.492920        0.0  123.437500      123.437500
5  -25286.055420  -25348.774170  33395.507568 -25286.055420  123.437500 -25348.774170        0.0   62.718750       23.437500
6  -25286.055420  -25309.492920  33472.070068 -25286.055420   62.718750 -25309.492920        0.0   23.437500        0.000000
7  -25277.133545  -25286.055420  33545.551514 -25277.133545   32.359375 -25286.055420        0.0    8.921875      -17.596680
8  -25162.617920  -25259.536865  33545.551758 -25162.617920  123.437500 -25259.536865        0.0   96.918945       -3.080811
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:08:10]  --------------------------------------------------------------------------------
[07/19 22:08:10]  Iteration: 103 (11 solution, 91 counterexamples)
[07/19 22:08:14]  Generator returned sat in 2.445749 secs.
[07/19 22:08:14]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:15]  Verifer returned unsat in 0.311968 secs.
[07/19 22:08:15]  Proved solution: 
[1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:15]  --------------------------------------------------------------------------------
[07/19 22:08:15]  Iteration: 104 (12 solution, 91 counterexamples)
[07/19 22:08:18]  Generator returned sat in 1.064055 secs.
[07/19 22:08:18]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:18]  Verifer returned unsat in 0.291826 secs.
[07/19 22:08:18]  Proved solution: 
[1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:18]  --------------------------------------------------------------------------------
[07/19 22:08:18]  Iteration: 105 (13 solution, 91 counterexamples)
[07/19 22:08:21]  Generator returned sat in 1.101746 secs.
[07/19 22:08:21]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:22]  Verifer returned unsat in 0.255266 secs.
[07/19 22:08:22]  Proved solution: 
[1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:22]  --------------------------------------------------------------------------------
[07/19 22:08:22]  Iteration: 106 (14 solution, 91 counterexamples)
[07/19 22:08:25]  Generator returned sat in 1.039283 secs.
[07/19 22:08:25]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:25]  Verifer returned unsat in 0.329755 secs.
[07/19 22:08:25]  Proved solution: 
[1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:25]  --------------------------------------------------------------------------------
[07/19 22:08:25]  Iteration: 107 (15 solution, 91 counterexamples)
[07/19 22:08:28]  Generator returned sat in 1.206391 secs.
[07/19 22:08:28]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:29]  Verifer returned unsat in 0.349923 secs.
[07/19 22:08:29]  Proved solution: 
[1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:29]  --------------------------------------------------------------------------------
[07/19 22:08:29]  Iteration: 108 (16 solution, 91 counterexamples)
[07/19 22:08:37]  Generator returned sat in 6.663082 secs.
[07/19 22:08:37]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:39]  Improved gap from 101995/12288 to 14.0625
[07/19 22:08:39]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:08:39]  Verifer returned sat in 1.420090 secs.
[07/19 22:08:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27686.275146  -27786.231201  33407.114014 -27686.275146    0.087891 -27786.231201        0.0   99.956055       99.956055
1  -27686.275146  -27786.231201  33407.114014 -27686.275146    0.043945 -27786.231201        0.0   99.956055       -0.043945
2  -27306.569092  -27686.231201  33407.114014 -27306.569092  479.662109 -27686.231201        0.0  379.662109      279.662109
3  -27251.231201  -27486.231201  33407.114014 -27251.231201  435.000000 -27486.231201        0.0  235.000000      235.000000
4  -27251.231201  -27387.124756  33407.114014 -27251.231201  218.000000 -27387.124756        0.0  135.893555      135.000000
5  -27251.231201  -27306.525146  33407.114014 -27251.231201  109.500000 -27306.525146        0.0   55.293945       35.000000
6  -27251.231201  -27279.400146  33472.114014 -27251.231201   55.250000 -27279.400146        0.0   28.168945        0.000000
7  -27251.231201  -27251.231201  33558.051514 -27251.231201   28.125000 -27251.231201        0.0    0.000000      -14.062500
8  -27237.168701  -27237.168701  33558.051514 -27237.168701   14.062500 -27237.168701        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:08:39]  --------------------------------------------------------------------------------
[07/19 22:08:39]  Iteration: 109 (16 solution, 92 counterexamples)
[07/19 22:08:46]  Generator returned sat in 4.678255 secs.
[07/19 22:08:46]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:08:46]  Improved gap from 0 to 100
[07/19 22:08:47]  Improved number of small numbers from 50 to 68 out of a max of 101
[07/19 22:08:47]  Verifer returned sat in 0.754696 secs.
[07/19 22:08:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28137.059326  -28237.015625  33407.114014 -28137.059326    0.087402 -28237.015625        0.0   99.956299       99.956238
1  -27937.059570  -28137.015625  33407.114014 -27937.059570  299.956055 -28137.015625        0.0  199.956055      199.955994
2  -27848.233643  -28037.015625  33407.114014 -27848.233643  288.781982 -28037.015625        0.0  188.781982      188.781921
3  -27848.233643  -27937.015564  33407.114014 -27848.233643   59.246275 -27937.015564        0.0   88.781921       88.781921
4  -27848.146152  -27848.189975  33407.114014 -27848.146152   88.869412 -27848.189975        0.0    0.043823      -11.130588
5  -27714.885857  -27737.015564  33407.114014 -27714.885857  133.304118 -27737.015564        0.0   22.129706       22.129706
6  -27537.059387  -27737.015564  33407.114014 -27537.059387  199.956177 -27737.015564        0.0  199.956177       99.956177
7  -27437.081299  -27537.015564  33407.114014 -27437.081299  299.934265 -27537.015564        0.0   99.934265       99.934265
8  -27087.114166  -27537.015564  33407.114014 -27087.114166  449.901398 -27537.015564        0.0  449.901398      349.901398
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:08:47]  --------------------------------------------------------------------------------
[07/19 22:08:47]  Iteration: 110 (16 solution, 93 counterexamples)
[07/19 22:08:56]  Generator returned sat in 6.478243 secs.
[07/19 22:08:56]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:08:57]  Improved gap from 0 to 35.9375
[07/19 22:08:58]  Improved number of small numbers from 51 to 60 out of a max of 101
[07/19 22:08:58]  Verifer returned sat in 1.568637 secs.
[07/19 22:08:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27813.395996  -27921.252351  33083.407227 -27813.395996    0.087158 -27921.252351        0.0  107.856355       99.912781
1  -27773.133455  -27813.352449  33083.407227 -27773.133455  148.118896 -27813.352449        0.0   40.218994       40.175322
2  -27773.133455  -27813.308748  33143.188232 -27773.133455   40.218750 -27813.308748        0.0   40.175293       -0.043672
3  -27737.152253  -27773.089753  33207.250703 -27737.152253   76.156494 -27773.089753        0.0   35.937500        0.000000
4  -27698.008455  -27737.152253  33268.106904 -27698.008455   75.081299 -27737.152253        0.0   39.143799        0.000000
5  -27698.008455  -27698.008455  33332.169404 -27698.008455   39.100098 -27698.008455        0.0    0.000000      -35.937500
6  -27638.358308  -27662.070955  33396.231904 -27638.358308   59.650146 -27662.070955        0.0   23.712646      -12.224854
7  -27604.561555  -27626.133455  33457.294434 -27604.561555   57.509399 -27626.133455        0.0   21.571899      -17.365571
8  -27568.624055  -27587.195801  33457.294434 -27568.624055   57.509399 -27587.195801        0.0   18.571746      -81.428071
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:08:58]  --------------------------------------------------------------------------------
[07/19 22:08:58]  Iteration: 111 (16 solution, 94 counterexamples)
[07/19 22:09:09]  Generator returned sat in 8.850063 secs.
[07/19 22:09:09]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:09:10]  Improved gap from 0 to 37.5
[07/19 22:09:10]  Improved number of small numbers from 47 to 101 out of a max of 101
[07/19 22:09:10]  Verifer returned sat in 1.318153 secs.
[07/19 22:09:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27425.156982  -27425.200684  33146.231934 -27425.156982    0.086914 -27425.200684        0.0    0.043701       -0.043457
1  -27387.657227  -27425.113525  33208.731934 -27387.657227   37.543457 -27425.113525        0.0   37.456299       -0.043701
2  -27387.570068  -27387.613525  33271.231934 -27387.570068   37.543457 -27387.613525        0.0    0.043457      -37.456543
3  -27150.157227  -27284.200684  33271.231934 -27150.157227  237.456299 -27284.200684        0.0  134.043457       99.956299
4  -27150.157227  -27187.569824  33271.231934 -27150.157227   72.000000 -27187.569824        0.0   37.412598       -0.043701
5  -27114.569824  -27150.113525  33333.731689 -27114.569824   73.000000 -27150.113525        0.0   35.543701       -1.956543
6  -27076.113525  -27112.613281  33396.231689 -27076.113525   74.000000 -27112.613281        0.0   36.499756       -1.000244
7  -27037.613281  -27075.113281  33458.731689 -27037.613281   75.000000 -27075.113281        0.0   37.500000        0.000000
8  -27017.385010  -27037.613281  33458.731934 -27017.385010   57.728271 -27037.613281        0.0   20.228271      -79.771484
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:09:11]  --------------------------------------------------------------------------------
[07/19 22:09:11]  Iteration: 112 (16 solution, 95 counterexamples)
[07/19 22:09:15]  Generator returned sat in 2.335332 secs.
[07/19 22:09:15]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:09:16]  Improved gap from 89/4096 to 23.4375
[07/19 22:09:16]  Improved number of small numbers from 95 to 101 out of a max of 101
[07/19 22:09:16]  Verifer returned sat in 0.653869 secs.
[07/19 22:09:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27181.475098  -27181.518311  32879.199219 -27181.475098    0.086670 -27181.518311        0.0    0.043213      -23.394043
1  -26884.645020  -27058.081055  32879.199219 -26884.645020  296.873291 -27058.081055        0.0  173.436035      173.436035
2  -26758.124512  -27054.907227  32879.199219 -26758.124512  299.956543 -27054.907227        0.0  296.782715      199.956543
3  -26758.124512  -26884.601807  32879.199219 -26758.124512   12.500000 -26884.601807        0.0  126.477295       99.956543
4  -26734.643555  -26758.124512  32879.199219 -26734.643555  149.958252 -26758.124512        0.0   23.480957       23.437500
5  -26734.643555  -26758.081055  32955.761719 -26734.643555    1.000000 -26758.081055        0.0   23.437500        0.000000
6  -26608.167969  -26734.643555  32955.761719 -26608.167969  149.913086 -26734.643555        0.0  126.475586       26.475586
7  -26608.167969  -26631.605469  33029.286133 -26608.167969    1.000000 -26631.605469        0.0   23.437500        0.000000
8  -26566.845947  -26608.167969  33029.286133 -26566.845947   64.759521 -26608.167969        0.0   41.322021      -58.677979
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:09:16]  --------------------------------------------------------------------------------
[07/19 22:09:16]  Iteration: 113 (16 solution, 96 counterexamples)
[07/19 22:09:21]  Generator returned sat in 2.005025 secs.
[07/19 22:09:21]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:09:22]  Improved gap from 0 to 35.9375
[07/19 22:09:22]  Improved number of small numbers from 97 to 97 out of a max of 101
[07/19 22:09:22]  Verifer returned sat in 1.156628 secs.
[07/19 22:09:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27538.205811  -27654.379150  33304.809814 -27538.205811    0.086670 -27654.379150        0.0  116.173340       45.485840
1  -27483.778320  -27538.119141  33304.809814 -27483.778320  170.600830 -27538.119141        0.0   54.340820       -0.086670
2  -27483.042480  -27483.691650  33368.872314 -27483.042480   55.076660 -27483.691650        0.0    0.649170      -35.288330
3  -27385.042480  -27447.754150  33406.160645 -27385.042480   98.649170 -27447.754150        0.0   62.711670        0.000000
4  -27342.941650  -27385.042480  33464.059814 -27342.941650  104.812500 -27385.042480        0.0   42.100830        0.000000
5  -27307.004150  -27342.941650  33528.122314 -27307.004150   78.038330 -27342.941650        0.0   35.937500        0.000000
6  -27271.066650  -27307.004150  33592.184814 -27271.066650   71.875000 -27307.004150        0.0   35.937500        0.000000
7  -27235.129150  -27271.066650  33656.247314 -27235.129150   71.875000 -27271.066650        0.0   35.937500        0.000000
8  -27212.578735  -27235.129150  33656.247314 -27212.578735   58.487915 -27235.129150        0.0   22.550415      -77.449585
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:09:22]  --------------------------------------------------------------------------------
[07/19 22:09:22]  Iteration: 114 (16 solution, 97 counterexamples)
[07/19 22:09:30]  Generator returned sat in 6.063833 secs.
[07/19 22:09:31]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:09:31]  Improved number of small numbers from 66 to 78 out of a max of 100
[07/19 22:09:31]  Verifer returned sat in 0.543680 secs.
[07/19 22:09:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27554.422852  -27654.379395  33656.246826 -27554.422852    0.086426 -27654.379395        0.0   99.956543       99.956299
1  -27471.589844  -27554.379395  33656.246826 -27471.589844  182.789551 -27554.379395        0.0   82.789551       82.789307
2  -27354.509521  -27471.546681  33656.246826 -27354.509521  199.869873 -27471.546681        0.0  117.037159       99.869629
3  -27354.422729  -27354.466064  33656.247070 -27354.422729  117.123951 -27354.466064        0.0    0.043335       -0.043335
4  -27177.780138  -27354.379395  33656.247070 -27177.780138  176.685927 -27354.379395        0.0  176.599257       76.599257
5  -27088.350505  -27154.379395  33656.247070 -27088.350505  266.028890 -27154.379395        0.0   66.028890       66.028890
6  -26754.336060  -27154.379395  33656.247070 -26754.336060  400.043335 -27154.379395        0.0  400.043335      300.043335
7  -26754.336060  -26954.379639  33656.247070 -26754.336060    2.000000 -26954.379639        0.0  200.043579      200.043335
8  -26754.336060  -26930.935547  33656.247070 -26754.336060    2.000000 -26930.935547        0.0  176.599487      100.043335
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:09:32]  --------------------------------------------------------------------------------
[07/19 22:09:32]  Iteration: 115 (16 solution, 98 counterexamples)
[07/19 22:09:35]  Generator returned sat in 1.759315 secs.
[07/19 22:09:36]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:09:36]  Improved gap from 0 to 37.5
[07/19 22:09:36]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:09:36]  Verifer returned sat in 0.780954 secs.
[07/19 22:09:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -27707.422607  -27807.379639  33656.24707 -27707.422607    0.086182 -27807.379639        0.0  99.957031       99.957031
1  -27607.422852  -27707.379639  33656.24707 -27607.422852  199.956787 -27707.379639        0.0  99.956787       99.956787
2  -27516.750000  -27607.379639  33656.24707 -27516.750000  190.629639 -27607.379639        0.0  90.629639       90.629639
3  -27516.750000  -27516.792969  33656.24707 -27516.750000   71.000000 -27516.792969        0.0   0.042969       -9.370361
4  -27444.792969  -27444.836182  33656.24707 -27444.792969   72.000000 -27444.836182        0.0   0.043213      -37.413330
5  -27371.836182  -27407.379639  33718.74707 -27371.836182   73.000000 -27407.379639        0.0  35.543457       -1.956543
6  -27333.379639  -27369.879639  33781.24707 -27333.379639   74.000000 -27369.879639        0.0  36.500000       -1.000000
7  -27294.879639  -27332.379639  33843.74707 -27294.879639   75.000000 -27332.379639        0.0  37.500000        0.000000
8  -27294.879639  -27294.879639  33843.74707 -27294.879639    2.000000 -27294.879639        0.0   0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:09:37]  --------------------------------------------------------------------------------
[07/19 22:09:37]  Iteration: 116 (16 solution, 99 counterexamples)
[07/19 22:09:45]  Generator returned sat in 5.904468 secs.
[07/19 22:09:45]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:09:46]  Improved gap from 353/8192 to 35.9375
[07/19 22:09:46]  Improved number of small numbers from 46 to 55 out of a max of 101
[07/19 22:09:46]  Verifer returned sat in 1.225946 secs.
[07/19 22:09:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26950.717041  -27058.572571  32899.455322 -26950.717041    0.086182 -27058.572571        0.0  107.855530       99.870850
1  -26950.630798  -26950.673889  32899.455322 -26950.630798  107.941772 -26950.673889        0.0    0.043091       -0.042908
2  -26906.451843  -26950.587708  32955.276367 -26906.451843   44.222046 -26950.587708        0.0   44.135864       -0.042908
3  -26870.514343  -26906.408752  33019.338684 -26870.514343   80.073364 -26906.408752        0.0   35.894409       -0.043091
4  -26828.326843  -26870.471252  33077.194275 -26828.326843   78.081909 -26870.471252        0.0   42.144409        0.000000
5  -26828.326843  -26828.326843  33141.256775 -26828.326843   42.101318 -26828.326843        0.0    0.000000      -35.937500
6  -26765.196411  -26792.389343  33205.319275 -26765.196411   63.130432 -26792.389343        0.0   27.192932       -8.744568
7  -26733.379639  -26756.451843  33269.381592 -26733.379639   59.009705 -26756.451843        0.0   23.072205      -12.865479
8  -26697.442139  -26720.514160  33269.381836 -26697.442139   59.009705 -26720.514160        0.0   23.072021      -76.927734
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:09:47]  --------------------------------------------------------------------------------
[07/19 22:09:47]  Iteration: 117 (16 solution, 100 counterexamples)
[07/19 22:09:54]  Generator returned sat in 4.863904 secs.
[07/19 22:09:54]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:09:55]  Improved gap from 0 to 12.5
[07/19 22:09:55]  Improved number of small numbers from 54 to 101 out of a max of 101
[07/19 22:09:55]  Verifer returned sat in 1.251807 secs.
[07/19 22:09:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27759.974121  -27959.887695  33708.755127 -27759.974121    0.085938 -27959.887695        0.0  199.913574       99.913818
1  -27559.930664  -27759.930664  33708.755127 -27559.930664  399.957031 -27759.930664        0.0  200.000000      199.957275
2  -27483.844727  -27759.887939  33708.755127 -27483.844727  276.085938 -27759.887939        0.0  276.043213      176.043213
3  -27483.844727  -27559.887939  33708.755127 -27483.844727  276.000000 -27559.887939        0.0   76.043213       76.043213
4  -27419.887939  -27459.887939  33708.755127 -27419.887939  140.000000 -27459.887939        0.0   40.000000       40.000000
5  -27387.887939  -27387.930664  33708.755127 -27387.887939   72.000000 -27387.930664        0.0    0.042725      -28.000000
6  -27349.930664  -27349.974121  33786.341309 -27349.930664   38.000000 -27349.974121        0.0    0.043457      -12.456543
7  -27328.974121  -27337.474121  33873.841309 -27328.974121   21.000000 -27337.474121        0.0    8.500000       -4.000000
8  -27324.974121  -27324.974121  33873.841309 -27324.974121   12.500000 -27324.974121        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:09:56]  --------------------------------------------------------------------------------
[07/19 22:09:56]  Iteration: 118 (16 solution, 101 counterexamples)
[07/19 22:10:01]  Generator returned sat in 2.674246 secs.
[07/19 22:10:01]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:10:01]  Improved gap from 1/1600 to 21.875
[07/19 22:10:02]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:10:02]  Verifer returned sat in 1.081845 secs.
[07/19 22:10:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -27457.994873  -27516.408691  33425.962158 -27457.994873   0.085693 -27516.408691        0.0  58.413818       58.413818
1  -27457.994873  -27479.869629  33467.548096 -27457.994873   0.042969 -27479.869629        0.0  21.874756       -0.000244
2  -27436.162842  -27457.994629  33545.673096 -27436.162842  43.706787 -27457.994629        0.0  21.831787       -0.043213
3  -27414.244629  -27436.119629  33623.798096 -27414.244629  43.750000 -27436.119629        0.0  21.875000        0.000000
4  -27355.830566  -27414.244629  33665.384033 -27355.830566  80.289062 -27414.244629        0.0  58.414062        0.000000
5  -27348.619629  -27355.830566  33743.509033 -27348.619629  65.625000 -27355.830566        0.0   7.210938      -14.664062
6  -27288.205566  -27333.955566  33795.716309 -27288.205566  67.625000 -27333.955566        0.0  45.750000       -2.042725
7  -27264.330566  -27286.162842  33873.841309 -27264.330566  69.625000 -27286.162842        0.0  21.832275       -0.042725
8  -27214.537842  -27264.287598  33873.841309 -27214.537842  71.625000 -27264.287598        0.0  49.749756      -50.250000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:10:02]  --------------------------------------------------------------------------------
[07/19 22:10:02]  Iteration: 119 (16 solution, 102 counterexamples)
[07/19 22:10:06]  Generator returned sat in 1.469119 secs.
[07/19 22:10:06]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:10:07]  Verifer returned unsat in 0.943801 secs.
[07/19 22:10:07]  Proved solution: 
[1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:10:07]  --------------------------------------------------------------------------------
[07/19 22:10:07]  Iteration: 120 (17 solution, 102 counterexamples)
[07/19 22:10:11]  Generator returned sat in 1.948253 secs.
[07/19 22:10:11]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:10:12]  Improved gap from 0 to 48.4375
[07/19 22:10:12]  Improved number of small numbers from 56 to 79 out of a max of 101
[07/19 22:10:12]  Verifer returned sat in 1.151376 secs.
[07/19 22:10:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28041.957031  -28180.144316  33999.947998 -28041.957031    0.085449 -28180.144316        0.0  138.187285       48.437500
1  -28041.957031  -28090.394531  34051.510498 -28041.957031    0.002686 -28090.394531        0.0   48.437500        0.000000
2  -27941.954346  -27941.957031  34051.510498 -27941.954346  148.440186 -27941.957031        0.0    0.002686        0.002686
3  -27841.957031  -27890.394316  34051.510498 -27841.957031  100.000000 -27890.394316        0.0   48.437285        0.000000
4  -27693.519316  -27743.071816  34051.510498 -27693.519316  196.875000 -27743.071816        0.0   49.552500       48.437715
5  -27693.519316  -27741.957031  34103.072783 -27693.519316    0.010000 -27741.957031        0.0   48.437715        0.000000
6  -27693.519316  -27693.519316  34154.635283 -27693.519316    0.010000 -27693.519316        0.0    0.000000      -48.437500
7  -27593.076816  -27645.081816  34202.630127 -27593.076816  100.442500 -27645.081816        0.0   52.005000       -0.000156
8  -27543.865566  -27593.074463  34202.630127 -27543.865566  101.216250 -27593.074463        0.0   49.208896      -50.788906
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:10:13]  --------------------------------------------------------------------------------
[07/19 22:10:13]  Iteration: 121 (17 solution, 103 counterexamples)
[07/19 22:10:21]  Generator returned sat in 5.801319 secs.
[07/19 22:10:21]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:10:23]  Improved gap from 0 to 35.9375
[07/19 22:10:23]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:10:23]  Verifer returned sat in 2.245798 secs.
[07/19 22:10:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -27572.374756  -27649.999756  33903.589600 -27572.374756    0.085449 -27649.999756        0.0  77.625000       -0.085449
1  -27517.858154  -27572.289307  33949.158447 -27517.858154  132.141602 -27572.289307        0.0  54.431152        0.000000
2  -27470.157471  -27517.858154  34001.372314 -27470.157471  102.131836 -27517.858154        0.0  47.700684       -0.085449
3  -27420.210205  -27470.072021  34051.510498 -27420.210205   97.647949 -27470.072021        0.0  49.861816        0.000000
4  -27378.108154  -27420.210205  34109.408447 -27378.108154   91.963867 -27420.210205        0.0  42.102051        0.000000
5  -27342.170654  -27378.108154  34173.470947 -27342.170654   78.039551 -27378.108154        0.0  35.937500        0.000000
6  -27306.233154  -27342.170654  34237.533447 -27306.233154   71.875000 -27342.170654        0.0  35.937500        0.000000
7  -27276.219971  -27306.233154  34301.595947 -27276.219971   65.950684 -27306.233154        0.0  30.013184       -5.924316
8  -27214.269287  -27270.295654  34301.595947 -27214.269287   91.963867 -27270.295654        0.0  56.026367      -43.973633
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:10:24]  --------------------------------------------------------------------------------
[07/19 22:10:24]  Iteration: 122 (17 solution, 104 counterexamples)
[07/19 22:10:28]  Generator returned sat in 2.274215 secs.
[07/19 22:10:28]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:10:29]  Improved gap from 0 to 48.4375
[07/19 22:10:29]  Improved number of small numbers from 87 to 101 out of a max of 101
[07/19 22:10:29]  Verifer returned sat in 0.851480 secs.
[07/19 22:10:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27403.488525  -27403.510010  34045.510498 -27403.488525    0.085205 -27403.510010        0.0    0.021484        0.021484
1  -27355.029785  -27403.467285  34097.030273 -27355.029785   48.480225 -27403.467285        0.0   48.437500        0.000000
2  -27155.008301  -27255.029785  34097.030273 -27155.008301  248.458984 -27255.029785        0.0  100.021484      100.021484
3  -27155.008301  -27155.029785  34097.030273 -27155.008301   44.394775 -27155.029785        0.0    0.021484        0.021484
4  -27006.592285  -27055.050781  34097.030273 -27006.592285  148.437500 -27055.050781        0.0   48.458496       48.437500
5  -27006.592285  -27055.029785  34148.592773 -27006.592285    2.000000 -27055.029785        0.0   48.437500        0.000000
6  -27006.592285  -27006.592285  34200.155029 -27006.592285    2.000000 -27006.592285        0.0    0.000000      -48.437744
7  -26929.373535  -26953.509766  34247.072754 -26929.373535   77.218750 -26953.509766        0.0   24.136230      -24.301270
8  -26862.129883  -26905.072266  34247.072754 -26862.129883   91.379883 -26905.072266        0.0   42.942383      -57.057617
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:10:30]  --------------------------------------------------------------------------------
[07/19 22:10:30]  Iteration: 123 (17 solution, 105 counterexamples)
[07/19 22:10:43]  Generator returned sat in 11.036676 secs.
[07/19 22:10:43]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:10:44]  Improved gap from 0 to 48.4375
[07/19 22:10:44]  Improved number of small numbers from 69 to 83 out of a max of 101
[07/19 22:10:44]  Verifer returned sat in 1.173531 secs.
[07/19 22:10:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27681.882080  -27793.139785  34375.442871 -27681.882080    0.085205 -27793.139785        0.0  111.257705       51.560303
1  -27633.444785  -27681.879639  34375.442871 -27633.444785  159.695000 -27681.879639        0.0   48.434854       -0.002402
2  -27533.442383  -27633.442285  34375.442871 -27533.442383  148.437256 -27633.442285        0.0   99.999902        0.000000
3  -27514.689785  -27514.692285  34405.030273 -27514.689785  118.752500 -27514.692285        0.0    0.002500      -51.660000
4  -27314.592285  -27363.032285  34405.030273 -27314.592285  200.100000 -27363.032285        0.0   48.440000       48.437500
5  -27314.592285  -27363.029785  34456.592773 -27314.592285    0.010000 -27363.029785        0.0   48.437500        0.000000
6  -27314.592285  -27314.592285  34503.472900 -27314.592285    0.010000 -27314.592285        0.0    0.000000      -53.119873
7  -27213.037285  -27261.472285  34555.035156 -27213.037285  101.555000 -27261.472285        0.0   48.435000       -0.002617
8  -27158.414785  -27213.034668  34555.035400 -27158.414785  103.057500 -27213.034668        0.0   54.619883      -45.379873
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:10:45]  --------------------------------------------------------------------------------
[07/19 22:10:45]  Iteration: 124 (17 solution, 106 counterexamples)
[07/19 22:10:50]  Generator returned sat in 2.462841 secs.
[07/19 22:10:50]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:10:50]  Improved gap from 349/16384 to 35.9375
[07/19 22:10:51]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:10:51]  Verifer returned sat in 0.837794 secs.
[07/19 22:10:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27347.410889  -27495.118164  34278.217529 -27347.410889    0.084961 -27495.118164        0.0  147.707275       99.957275
1  -27273.493408  -27347.368164  34278.217529 -27273.493408  221.624756 -27347.368164        0.0   73.874756       73.874756
2  -27273.493408  -27310.430664  34304.342529 -27273.493408    0.042725 -27310.430664        0.0   36.937256       -0.000244
3  -27199.618164  -27273.493164  34330.467529 -27199.618164  110.812500 -27273.493164        0.0   73.875000        0.000000
4  -27162.680664  -27199.618164  34393.530029 -27162.680664  110.812500 -27199.618164        0.0   36.937500        0.000000
5  -27125.743164  -27162.680664  34456.592529 -27125.743164   73.875000 -27162.680664        0.0   36.937500        0.000000
6  -27088.805664  -27125.743164  34519.655029 -27088.805664   73.875000 -27125.743164        0.0   36.937500        0.000000
7  -27051.868164  -27088.805664  34582.717529 -27051.868164   73.875000 -27088.805664        0.0   36.937500        0.000000
8  -27033.399414  -27051.868164  34582.717773 -27033.399414   55.406250 -27051.868164        0.0   18.468750      -81.531006
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:10:51]  --------------------------------------------------------------------------------
[07/19 22:10:51]  Iteration: 125 (17 solution, 107 counterexamples)
[07/19 22:10:55]  Generator returned sat in 1.764309 secs.
[07/19 22:10:55]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:10:56]  Improved gap from 87/2048 to 0
[07/19 22:10:57]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/19 22:10:57]  Verifer returned sat in 1.215281 secs.
[07/19 22:10:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t
0  -26101.908447  -26101.909424  34424.718994 -26101.908447  0.084717 -26101.909424        0.0  0.000977        0.000000
1  -26101.908447  -26101.908447  34524.718262 -26101.908447  0.000417 -26101.908447        0.0  0.000000       -0.000732
2  -26101.907715  -26101.907715  34624.717773 -26101.907715  0.000732 -26101.907715        0.0  0.000000       -0.000488
3  -26101.906494  -26101.907227  34724.716797 -26101.906494  0.001221 -26101.907227        0.0  0.000732       -0.000244
4  -26100.407227  -26101.906250  34823.217773 -26100.407227  1.500000 -26101.906250        0.0  1.499023        0.000000
5  -26100.407227  -26100.407227  34921.718018 -26100.407227  0.010000 -26100.407227        0.0  0.000000       -1.499756
6  -26098.907227  -26098.907471  35020.218506 -26098.907227  1.500000 -26098.907471        0.0  0.000244       -1.499268
7  -26097.407471  -26097.407715  35120.217773 -26097.407471  1.500000 -26097.407715        0.0  0.000244       -0.000244
8  -26095.907715  -26095.907715  35120.217773 -26095.907715  1.500000 -26095.907715        0.0  0.000000      -98.500488
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:10:57]  --------------------------------------------------------------------------------
[07/19 22:10:57]  Iteration: 126 (17 solution, 108 counterexamples)
[07/19 22:11:02]  Generator returned sat in 2.840836 secs.
[07/19 22:11:02]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:11:04]  Verifer returned unsat in 1.302509 secs.
[07/19 22:11:04]  Proved solution: 
[1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:11:04]  --------------------------------------------------------------------------------
[07/19 22:11:04]  Iteration: 127 (18 solution, 108 counterexamples)
[07/19 22:11:10]  Generator returned sat in 3.882079 secs.
[07/19 22:11:10]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:11:11]  Improved gap from 347/8192 to 48.4375
[07/19 22:11:11]  Improved number of small numbers from 52 to 101 out of a max of 101
[07/19 22:11:11]  Verifer returned sat in 1.143557 secs.
[07/19 22:11:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -26199.102539  -26399.060059  34621.870605 -26199.102539    0.084717 -26399.060059        0.0  199.957520       99.957520
1  -26099.102539  -26199.060059  34621.870605 -26099.102539  299.957520 -26199.060059        0.0   99.957520       99.957520
2  -26047.455322  -26099.060303  34621.870605 -26047.455322  151.604736 -26099.060303        0.0   51.604980       51.604736
3  -26047.455322  -26047.497559  34621.870605 -26047.455322   39.187500 -26047.497559        0.0    0.042236      -48.395264
4  -25850.622559  -25899.102539  34621.870605 -25850.622559  196.875000 -25899.102539        0.0   48.479980       48.437500
5  -25850.622559  -25899.060059  34673.433105 -25850.622559    2.000000 -25899.060059        0.0   48.437500        0.000000
6  -25850.622559  -25850.622559  34724.995605 -25850.622559    2.000000 -25850.622559        0.0    0.000000      -48.437500
7  -25749.685059  -25802.185059  34772.495605 -25749.685059  100.937500 -25802.185059        0.0   52.500000        0.000000
8  -25749.685059  -25749.685059  34772.495850 -25749.685059    2.000000 -25749.685059        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:11:12]  --------------------------------------------------------------------------------
[07/19 22:11:12]  Iteration: 128 (18 solution, 109 counterexamples)
[07/19 22:11:17]  Generator returned sat in 3.157132 secs.
[07/19 22:11:17]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:11:19]  Improved gap from 0 to 35.9375
[07/19 22:11:19]  Improved number of small numbers from 50 to 101 out of a max of 101
[07/19 22:11:19]  Verifer returned sat in 1.705590 secs.
[07/19 22:11:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -24204.544434  -24342.179199  34464.203125 -24204.544434    0.084473 -24342.179199        0.0  137.634766       99.957764
1  -24180.937744  -24204.502197  34464.203125 -24180.937744  161.241455 -24204.502197        0.0   23.564453       23.564453
2  -24180.937744  -24180.980225  34504.743408 -24180.937744    0.042236 -24180.980225        0.0    0.042480      -35.895264
3  -24144.915527  -24144.957764  34568.721191 -24144.915527   36.064697 -24144.957764        0.0    0.042236      -35.895264
4  -24026.814697  -24062.752197  34586.515625 -24026.814697  118.143066 -24062.752197        0.0   35.937500        0.000000
5  -23990.877197  -24026.814697  34650.578125 -23990.877197   71.875000 -24026.814697        0.0   35.937500        0.000000
6  -23948.731934  -23990.877197  34708.432861 -23948.731934   78.082764 -23990.877197        0.0   42.145264        0.000000
7  -23912.836914  -23948.731934  34772.495361 -23912.836914   78.040283 -23948.731934        0.0   35.895020       -0.042480
8  -23851.201660  -23912.794434  34772.495361 -23851.201660   97.530273 -23912.794434        0.0   61.592773      -38.407227
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:11:20]  --------------------------------------------------------------------------------
[07/19 22:11:20]  Iteration: 129 (18 solution, 110 counterexamples)
[07/19 22:11:25]  Generator returned sat in 2.913497 secs.
[07/19 22:11:25]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:11:27]  Improved gap from 294227/8192 to 35.9375
[07/19 22:11:28]  Improved number of small numbers from 47 to 56 out of a max of 101
[07/19 22:11:28]  Verifer returned sat in 3.036890 secs.
[07/19 22:11:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23612.044922  -23716.750051  34432.760254 -23612.044922    0.084229 -23716.750051        0.0  104.705129       62.582451
1  -23574.669680  -23612.002444  34432.760498 -23574.669680  142.080371 -23612.002444        0.0   37.332764       -0.042063
2  -23537.252444  -23574.627444  34495.385324 -23537.252444   74.750000 -23574.627444        0.0   37.375000        0.000000
3  -23537.210207  -23537.252444  34522.302979 -23537.210207   37.417236 -23537.252444        0.0    0.042236      -73.040110
4  -23426.795022  -23464.170022  34584.927903 -23426.795022  110.457422 -23464.170022        0.0   37.375000        0.000000
5  -23389.253811  -23426.795022  34647.386692 -23389.253811   74.916211 -23426.795022        0.0   37.541211        0.000000
6  -23351.878811  -23389.253811  34710.011692 -23351.878811   74.916211 -23389.253811        0.0   37.375000        0.000000
7  -23314.254495  -23351.878811  34772.387207 -23314.254495   74.999316 -23351.878811        0.0   37.624316       -0.000168
8  -23256.233547  -23314.212402  34772.387207 -23256.233547   95.645264 -23314.212402        0.0   57.978855      -41.979221
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:11:28]  --------------------------------------------------------------------------------
[07/19 22:11:28]  Iteration: 130 (18 solution, 111 counterexamples)
[07/19 22:11:35]  Generator returned sat in 4.085904 secs.
[07/19 22:11:35]  Candidate solution: 
[1m[94mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:36]  Improved number of small numbers from 44 to 100 out of a max of 100
[07/19 22:11:36]  Verifer returned sat in 0.720748 secs.
[07/19 22:11:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23490.117432  -24089.286133  34572.481445 -23490.117432    0.083984 -24089.286133        0.0  599.168701      599.168457
1  -23490.117432  -24010.286133  34572.481445 -23490.117432    0.041992 -24010.286133        0.0  520.168701      499.168457
2  -23490.117432  -23889.328125  34572.481445 -23490.117432    0.042236 -23889.328125        0.0  399.210693      399.168457
3  -23389.243896  -23889.285889  34572.481445 -23389.243896  500.084229 -23889.285889        0.0  500.041992      400.041992
4  -23389.243896  -23789.285889  34572.481445 -23389.243896  350.542236 -23789.285889        0.0  400.041992      300.041992
5  -23389.243896  -23651.723877  34572.481445 -23389.243896  286.271240 -23651.723877        0.0  262.479980      200.041992
6  -23389.243896  -23490.117432  34572.481445 -23389.243896  262.437744 -23490.117432        0.0  100.873535      100.041992
7  -23090.948975  -23389.285889  34572.481445 -23090.948975  399.168457 -23389.285889        0.0  298.336914      298.336914
8  -22989.201660  -23389.243896  34572.481445 -22989.201660  400.084229 -23389.243896        0.0  400.042236      300.084229
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:11:36]  --------------------------------------------------------------------------------
[07/19 22:11:36]  Iteration: 131 (18 solution, 112 counterexamples)
[07/19 22:11:41]  Generator returned sat in 2.489957 secs.
[07/19 22:11:41]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:42]  Verifer returned unsat in 0.255341 secs.
[07/19 22:11:42]  Proved solution: 
[1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:42]  --------------------------------------------------------------------------------
[07/19 22:11:42]  Iteration: 132 (19 solution, 112 counterexamples)
[07/19 22:11:46]  Generator returned sat in 1.647244 secs.
[07/19 22:11:46]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:46]  Verifer returned unsat in 0.312421 secs.
[07/19 22:11:46]  Proved solution: 
[1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:46]  --------------------------------------------------------------------------------
[07/19 22:11:46]  Iteration: 133 (20 solution, 112 counterexamples)
[07/19 22:11:50]  Generator returned sat in 1.653500 secs.
[07/19 22:11:51]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:51]  Verifer returned unsat in 0.479740 secs.
[07/19 22:11:51]  Proved solution: 
[1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:51]  --------------------------------------------------------------------------------
[07/19 22:11:51]  Iteration: 134 (21 solution, 112 counterexamples)
[07/19 22:11:55]  Generator returned sat in 1.637308 secs.
[07/19 22:11:55]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:56]  Verifer returned unsat in 0.297165 secs.
[07/19 22:11:56]  Proved solution: 
[1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:11:56]  --------------------------------------------------------------------------------
[07/19 22:11:56]  Iteration: 135 (22 solution, 112 counterexamples)
[07/19 22:12:02]  Generator returned sat in 3.988872 secs.
[07/19 22:12:02]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:03]  Verifer returned unsat in 0.353863 secs.
[07/19 22:12:03]  Proved solution: 
[1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:03]  --------------------------------------------------------------------------------
[07/19 22:12:03]  Iteration: 136 (23 solution, 112 counterexamples)
[07/19 22:12:07]  Generator returned sat in 2.047689 secs.
[07/19 22:12:07]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:08]  Verifer returned unsat in 0.323215 secs.
[07/19 22:12:08]  Proved solution: 
[1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:08]  --------------------------------------------------------------------------------
[07/19 22:12:08]  Iteration: 137 (24 solution, 112 counterexamples)
[07/19 22:12:12]  Generator returned sat in 1.771511 secs.
[07/19 22:12:12]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:12]  Verifer returned unsat in 0.302050 secs.
[07/19 22:12:12]  Proved solution: 
[1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:12]  --------------------------------------------------------------------------------
[07/19 22:12:12]  Iteration: 138 (25 solution, 112 counterexamples)
[07/19 22:12:17]  Generator returned sat in 1.826977 secs.
[07/19 22:12:17]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:17]  Verifer returned unsat in 0.250249 secs.
[07/19 22:12:17]  Proved solution: 
[1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:17]  --------------------------------------------------------------------------------
[07/19 22:12:17]  Iteration: 139 (26 solution, 112 counterexamples)
[07/19 22:12:21]  Generator returned sat in 1.706548 secs.
[07/19 22:12:21]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:22]  Verifer returned unsat in 0.278939 secs.
[07/19 22:12:22]  Proved solution: 
[1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:22]  --------------------------------------------------------------------------------
[07/19 22:12:22]  Iteration: 140 (27 solution, 112 counterexamples)
[07/19 22:12:26]  Generator returned sat in 1.671514 secs.
[07/19 22:12:26]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:26]  Verifer returned unsat in 0.280698 secs.
[07/19 22:12:26]  Proved solution: 
[1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:26]  --------------------------------------------------------------------------------
[07/19 22:12:26]  Iteration: 141 (28 solution, 112 counterexamples)
[07/19 22:12:30]  Generator returned sat in 1.659372 secs.
[07/19 22:12:31]  Candidate solution: 
[1m[94mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:31]  Verifer returned unsat in 0.279740 secs.
[07/19 22:12:31]  Proved solution: 
[1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:31]  --------------------------------------------------------------------------------
[07/19 22:12:31]  Iteration: 142 (29 solution, 112 counterexamples)
[07/19 22:12:38]  Generator returned sat in 4.437534 secs.
[07/19 22:12:38]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:38]  Verifer returned unsat in 0.390002 secs.
[07/19 22:12:38]  Proved solution: 
[1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:38]  --------------------------------------------------------------------------------
[07/19 22:12:38]  Iteration: 143 (30 solution, 112 counterexamples)
[07/19 22:12:44]  Generator returned sat in 2.896850 secs.
[07/19 22:12:44]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:44]  Verifer returned unsat in 0.353309 secs.
[07/19 22:12:44]  Proved solution: 
[1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:44]  --------------------------------------------------------------------------------
[07/19 22:12:44]  Iteration: 144 (31 solution, 112 counterexamples)
[07/19 22:12:48]  Generator returned sat in 1.677204 secs.
[07/19 22:12:49]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:49]  Verifer returned unsat in 0.341643 secs.
[07/19 22:12:49]  Proved solution: 
[1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:49]  --------------------------------------------------------------------------------
[07/19 22:12:49]  Iteration: 145 (32 solution, 112 counterexamples)
[07/19 22:12:53]  Generator returned sat in 1.670243 secs.
[07/19 22:12:53]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:54]  Verifer returned unsat in 0.308621 secs.
[07/19 22:12:54]  Proved solution: 
[1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:54]  --------------------------------------------------------------------------------
[07/19 22:12:54]  Iteration: 146 (33 solution, 112 counterexamples)
[07/19 22:12:58]  Generator returned sat in 1.630100 secs.
[07/19 22:12:58]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:58]  Verifer returned unsat in 0.357451 secs.
[07/19 22:12:58]  Proved solution: 
[1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:12:58]  --------------------------------------------------------------------------------
[07/19 22:12:58]  Iteration: 147 (34 solution, 112 counterexamples)
[07/19 22:13:04]  Generator returned sat in 2.865896 secs.
[07/19 22:13:04]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:04]  Verifer returned unsat in 0.334025 secs.
[07/19 22:13:04]  Proved solution: 
[1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:04]  --------------------------------------------------------------------------------
[07/19 22:13:04]  Iteration: 148 (35 solution, 112 counterexamples)
[07/19 22:13:11]  Generator returned sat in 4.627985 secs.
[07/19 22:13:11]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:12]  Improved gap from 0 to 46.875
[07/19 22:13:12]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:13:12]  Verifer returned sat in 0.982435 secs.
[07/19 22:13:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -21473.401367  -21473.422119  34366.168213 -21473.401367    0.083740 -21473.422119        0.0    0.020752        0.020508
1  -21426.505127  -21473.380127  34419.251465 -21426.505127   46.916992 -21473.380127        0.0   46.875000        0.000000
2  -21126.526367  -21326.505127  34419.251465 -21126.526367  346.853760 -21326.505127        0.0  199.978760      199.978760
3  -21126.526367  -21262.002197  34419.251465 -21126.526367    0.020996 -21262.002197        0.0  135.475830       99.978760
4  -21126.526367  -21127.609131  34419.251465 -21126.526367  107.709961 -21127.609131        0.0    1.082764       -0.021240
5  -21073.754150  -21126.505127  34466.500488 -21073.754150   53.854980 -21126.505127        0.0   52.750977        0.000000
6  -21024.505127  -21073.754150  34517.251465 -21024.505127  102.000000 -21073.754150        0.0   49.249023        0.000000
7  -20977.630127  -21024.505127  34570.376465 -20977.630127   96.124023 -21024.505127        0.0   46.875000        0.000000
8  -20970.953125  -20977.630127  34570.376465 -20970.953125   53.552002 -20977.630127        0.0    6.677002      -93.322998
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:13:13]  --------------------------------------------------------------------------------
[07/19 22:13:13]  Iteration: 149 (35 solution, 113 counterexamples)
[07/19 22:13:19]  Generator returned sat in 3.527255 secs.
[07/19 22:13:19]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:20]  Improved gap from 16341/16384 to 48.4375
[07/19 22:13:20]  Improved number of small numbers from 62 to 101 out of a max of 101
[07/19 22:13:20]  Verifer returned sat in 0.953558 secs.
[07/19 22:13:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20737.248047  -20937.164307  34360.250488 -20737.248047    0.083740 -20937.164307        0.0  199.916260       99.916260
1  -20688.810547  -20737.164307  34360.250488 -20688.810547  248.353760 -20737.164307        0.0   48.353760       48.353760
2  -20640.373047  -20688.726807  34363.375488 -20640.373047   96.791260 -20688.726807        0.0   48.353760       -0.083740
3  -20594.019287  -20640.289307  34414.937988 -20594.019287   94.707520 -20640.289307        0.0   46.270020       -2.167480
4  -20444.498047  -20491.935303  34414.937988 -20444.498047  195.791260 -20491.935303        0.0   47.437256       47.353760
5  -20444.498047  -20491.851807  34466.500244 -20444.498047    2.000000 -20491.851807        0.0   47.353760       -1.083984
6  -20392.414307  -20443.414062  34515.500488 -20392.414307   99.437500 -20443.414062        0.0   50.999756        0.000000
7  -20392.414307  -20392.414307  34567.062988 -20392.414307    2.000000 -20392.414307        0.0    0.000000      -48.437500
8  -20341.653809  -20342.892822  34567.062988 -20341.653809   50.760498 -20342.892822        0.0    1.239014      -97.677002
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:13:20]  --------------------------------------------------------------------------------
[07/19 22:13:20]  Iteration: 150 (35 solution, 114 counterexamples)
[07/19 22:13:26]  Generator returned sat in 2.993649 secs.
[07/19 22:13:26]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:27]  Improved gap from 0 to 23.4375
[07/19 22:13:27]  Improved number of small numbers from 66 to 101 out of a max of 101
[07/19 22:13:27]  Verifer returned sat in 0.736271 secs.
[07/19 22:13:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20640.331055  -21163.768799  34363.375244 -20640.331055    0.083496 -21163.768799        0.0  523.437744        523.4375
1  -20640.331055  -21163.768555  34363.375244 -20640.331055  523.437256 -21163.768555        0.0  523.437500        423.4375
2  -20640.331055  -20963.768799  34363.375244 -20640.331055  523.437256 -20963.768799        0.0  323.437744        323.4375
3  -20640.331055  -20863.768799  34363.375244 -20640.331055  242.875000 -20863.768799        0.0  223.437744        223.4375
4  -20640.331055  -20763.768555  34363.375244 -20640.331055  123.437500 -20763.768555        0.0  123.437500        123.4375
5  -20640.331055  -20674.232666  34363.375244 -20640.331055   63.718750 -20674.232666        0.0   33.901611         23.4375
6  -20640.331055  -20663.768555  34439.937744 -20640.331055   33.859375 -20663.768555        0.0   23.437500          0.0000
7  -20640.331055  -20640.331055  34516.500244 -20640.331055   18.929688 -20640.331055        0.0    0.000000        -23.4375
8  -20516.893555  -20616.893555  34516.500244 -20516.893555  123.437500 -20616.893555        0.0  100.000000          0.0000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:13:27]  --------------------------------------------------------------------------------
[07/19 22:13:27]  Iteration: 151 (35 solution, 115 counterexamples)
[07/19 22:13:31]  Generator returned sat in 1.742922 secs.
[07/19 22:13:32]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:32]  Improved gap from 375/16 to 23.4375
[07/19 22:13:32]  Improved number of small numbers from 100 to 101 out of a max of 101
[07/19 22:13:32]  Verifer returned sat in 0.701838 secs.
[07/19 22:13:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20089.195557  -20512.633138  34266.3750 -20089.195557    0.083252 -20512.633138        0.0  423.437581        423.4375
1  -20089.195557  -20512.612549  34266.3750 -20089.195557  423.437256 -20512.612549        0.0  423.416992        323.4375
2  -20089.195557  -20312.633057  34266.3750 -20089.195557  423.416504 -20312.633057        0.0  223.437500        223.4375
3  -20089.195557  -20312.633057  34266.3750 -20089.195557   97.083333 -20312.633057        0.0  223.437500        123.4375
4  -20089.195557  -20115.737305  34266.3750 -20089.195557   50.041667 -20115.737305        0.0   26.541748         23.4375
5  -20089.195557  -20112.633057  34342.9375 -20089.195557   26.520833 -20112.633057        0.0   23.437500          0.0000
6  -20089.195557  -20089.195557  34419.5000 -20089.195557   14.760417 -20089.195557        0.0    0.000000        -23.4375
7  -19865.758057  -20065.758057  34419.5000 -19865.758057  223.437500 -20065.758057        0.0  200.000000        100.0000
8  -19865.758057  -19965.758057  34419.5000 -19865.758057   49.979248 -19965.758057        0.0  100.000000          0.0000
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:13:33]  --------------------------------------------------------------------------------
[07/19 22:13:33]  Iteration: 152 (35 solution, 116 counterexamples)
[07/19 22:13:39]  Generator returned sat in 3.224820 secs.
[07/19 22:13:39]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:39]  Improved number of small numbers from 57 to 100 out of a max of 100
[07/19 22:13:39]  Verifer returned sat in 0.491483 secs.
[07/19 22:13:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20295.070801  -20892.174805  34266.375 -20295.070801    0.083008 -20892.174805        0.0  597.104004      597.104004
1  -20192.174805  -20872.174561  34266.375 -20192.174805  700.000000 -20872.174561        0.0  679.999756      600.000000
2  -20192.153809  -20692.195557  34266.375 -20192.153809  680.020752 -20692.195557        0.0  500.041748      500.020996
3  -20192.153809  -20692.174805  34266.375 -20192.153809  500.020752 -20692.174805        0.0  500.020996      400.020996
4  -20192.153809  -20592.174561  34266.375 -20192.153809  200.000000 -20592.174561        0.0  400.020752      300.020996
5  -20192.153809  -20440.348389  34266.375 -20192.153809  241.500000 -20440.348389        0.0  248.194580      200.020996
6  -20192.153809  -20295.070801  34266.375 -20192.153809  248.173584 -20295.070801        0.0  102.916992      100.020996
7  -19897.966797  -20192.195557  34266.375 -19897.966797  397.104004 -20192.195557        0.0  294.228760      294.208008
8  -19792.154053  -20192.174805  34266.375 -19792.154053  400.041504 -20192.174805        0.0  400.020752      300.020752
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:13:40]  --------------------------------------------------------------------------------
[07/19 22:13:40]  Iteration: 153 (35 solution, 117 counterexamples)
[07/19 22:13:44]  Generator returned sat in 2.260470 secs.
[07/19 22:13:45]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:45]  Improved number of small numbers from 84 to 100 out of a max of 100
[07/19 22:13:45]  Verifer returned sat in 0.217894 secs.
[07/19 22:13:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20292.205811  -20892.206055  34266.395752 -20292.205811    0.083008 -20892.206055        0.0  600.000244      599.989746
1  -20192.195557  -20892.195557  34266.395752 -20192.195557  700.010498 -20892.195557        0.0  700.000000      600.000000
2  -20192.195557  -20792.195557  34266.395752 -20192.195557  700.000000 -20792.195557        0.0  600.000000      500.000000
3  -20192.195557  -20692.195557  34266.395752 -20192.195557  599.989746 -20692.195557        0.0  500.000000      400.000000
4  -20192.195557  -20589.195801  34266.395752 -20192.195557  200.010498 -20589.195801        0.0  397.000244      300.000000
5  -20192.195557  -20395.154053  34266.395752 -20192.195557  253.005127 -20395.154053        0.0  202.958496      200.000000
6  -19998.112549  -20292.195557  34266.395752 -19998.112549  397.041504 -20292.195557        0.0  294.083008      294.083008
7  -19892.174805  -20192.195557  34266.395752 -19892.174805  400.020752 -20192.195557        0.0  300.020752      300.020752
8  -19792.185059  -20192.195557  34266.395752 -19792.185059  400.010498 -20192.195557        0.0  400.010498      300.010498
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:13:45]  --------------------------------------------------------------------------------
[07/19 22:13:45]  Iteration: 154 (35 solution, 118 counterexamples)
[07/19 22:13:51]  Generator returned sat in 3.137779 secs.
[07/19 22:13:51]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:51]  Improved gap from 0 to 23.4375
[07/19 22:13:52]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:13:52]  Verifer returned sat in 0.388441 secs.
[07/19 22:13:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20692.195557  -20715.674561  34266.395752 -20692.195557    0.083008 -20715.674561        0.0   23.479004       23.437500
1  -20692.195557  -20715.633057  34342.958252 -20692.195557   23.479004 -20715.633057        0.0   23.437500        0.000000
2  -20692.195557  -20692.195557  34342.958252 -20692.195557    0.041504 -20692.195557        0.0    0.000000     -100.000000
3  -20365.674561  -20592.195557  34342.958252 -20365.674561  326.520996 -20592.195557        0.0  226.520996      126.520996
4  -20365.674561  -20392.195557  34342.958252 -20365.674561  123.479004 -20392.195557        0.0   26.520996       26.520996
5  -20365.674561  -20392.154053  34416.437256 -20365.674561    1.500000 -20392.154053        0.0   26.479492        0.000000
6  -20365.674561  -20365.674561  34492.999756 -20365.674561    1.500000 -20365.674561        0.0    0.000000      -23.437500
7  -20139.153564  -20342.237061  34492.999756 -20139.153564  226.520996 -20342.237061        0.0  203.083496      103.083496
8  -20139.153564  -20242.237061  34492.999756 -20139.153564   49.958496 -20242.237061        0.0  103.083496        3.083496
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:13:52]  --------------------------------------------------------------------------------
[07/19 22:13:52]  Iteration: 155 (35 solution, 119 counterexamples)
[07/19 22:13:57]  Generator returned sat in 2.573723 secs.
[07/19 22:13:57]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:58]  Verifer returned unsat in 0.366972 secs.
[07/19 22:13:58]  Proved solution: 
[1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:13:58]  --------------------------------------------------------------------------------
[07/19 22:13:58]  Iteration: 156 (36 solution, 119 counterexamples)
[07/19 22:14:03]  Generator returned sat in 2.333759 secs.
[07/19 22:14:03]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:14:04]  Improved gap from 1/1200 to 29.6875
[07/19 22:14:05]  Improved number of small numbers from 56 to 71 out of a max of 101
[07/19 22:14:05]  Verifer returned sat in 1.577793 secs.
[07/19 22:14:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20908.463623  -21108.380615  34394.603516 -20908.463623    0.083008 -21108.380615        0.0  199.916992      199.916790
1  -20908.463623  -21008.380615  34394.603516 -20908.463623  199.916748 -21008.380615        0.0   99.916992       99.916790
2  -20908.380615  -20942.880576  34394.603678 -20908.380615  100.000000 -20942.880576        0.0   34.499961       -0.000039
3  -20630.213910  -20908.380371  34394.603678 -20630.213910  312.666667 -20908.380371        0.0  278.166462      178.166667
4  -20630.213910  -20708.380576  34394.603678 -20630.213910  156.333333 -20708.380576        0.0   78.166667       78.166667
5  -20630.213910  -20708.380576  34416.437012 -20630.213910   78.166667 -20708.380576        0.0   78.166667        0.000000
6  -20589.630576  -20630.213910  34475.853678 -20589.630576  118.750000 -20630.213910        0.0   40.583333        0.000000
7  -20570.838910  -20589.630576  34546.166178 -20570.838910   59.375000 -20589.630576        0.0   18.791667      -10.895833
8  -20559.943076  -20559.943076  34616.478516 -20559.943076   29.687500 -20559.943076        0.0    0.000000      -29.687663
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:14:05]  --------------------------------------------------------------------------------
[07/19 22:14:05]  Iteration: 157 (36 solution, 120 counterexamples)
[07/19 22:14:11]  Generator returned sat in 3.691089 secs.
[07/19 22:14:11]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:14:13]  Improved gap from 0 to 48.4375
[07/19 22:14:14]  Improved number of small numbers from 50 to 71 out of a max of 101
[07/19 22:14:14]  Verifer returned sat in 2.093195 secs.
[07/19 22:14:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20872.034424  -20872.055238  34158.278320 -20872.034424    0.083008 -20872.055238        0.0    0.020814        0.020752
1  -20823.596986  -20872.013916  34209.799561 -20823.596986   48.458252 -20872.013916        0.0   48.416930       -0.020570
2  -20775.138916  -20823.576416  34261.362061 -20775.138916   96.875000 -20823.576416        0.0   48.437500        0.000000
3  -20575.138916  -20724.631735  34261.362061 -20575.138916  248.437500 -20724.631735        0.0  149.492819      100.000000
4  -20526.701234  -20575.159486  34261.362061 -20526.701234  197.930501 -20575.159486        0.0   48.458252       48.437682
5  -20526.701234  -20575.138916  34312.924378 -20526.701234    1.500000 -20575.138916        0.0   48.437682        0.000000
6  -20526.701234  -20526.701234  34364.486878 -20526.701234    1.500000 -20526.701234        0.0    0.000000      -48.437500
7  -20426.985983  -20478.263734  34413.208984 -20426.985983   99.715251 -20478.263734        0.0   51.277751       -0.000143
8  -20379.958232  -20425.180420  34413.208984 -20379.958232   98.305501 -20425.180420        0.0   45.222187      -52.972393
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:14:14]  --------------------------------------------------------------------------------
[07/19 22:14:14]  Iteration: 158 (36 solution, 121 counterexamples)
[07/19 22:14:26]  Generator returned sat in 9.427218 secs.
[07/19 22:14:26]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:14:28]  Improved gap from 0 to 48.4375
[07/19 22:14:28]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:14:28]  Verifer returned sat in 1.446038 secs.
[07/19 22:14:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20923.597168  -20923.617920  34209.840820 -20923.597168    0.083008 -20923.617920        0.0    0.020752        0.020752
1  -20875.138916  -20923.576416  34261.361816 -20875.138916   48.479004 -20923.576416        0.0   48.437500        0.000000
2  -20727.701904  -20775.138916  34261.361816 -20727.701904  195.874512 -20775.138916        0.0   47.437012       47.437012
3  -20569.053955  -20727.701904  34261.361816 -20569.053955  206.084961 -20727.701904        0.0  158.647949      106.084961
4  -20526.701416  -20575.159668  34261.361816 -20526.701416  201.000488 -20575.159668        0.0   48.458252       48.437500
5  -20526.701416  -20575.138916  34312.924316 -20526.701416    2.000000 -20575.138916        0.0   48.437500        0.000000
6  -20526.701416  -20526.701416  34364.486816 -20526.701416    2.000000 -20526.701416        0.0    0.000000      -48.437500
7  -20425.201172  -20478.263916  34411.403320 -20425.201172  101.500244 -20478.263916        0.0   53.062744       -0.020752
8  -20379.065918  -20425.180420  34411.403320 -20379.065918   99.197998 -20425.180420        0.0   46.114502      -53.885498
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:14:28]  --------------------------------------------------------------------------------
[07/19 22:14:28]  Iteration: 159 (36 solution, 122 counterexamples)
[07/19 22:14:37]  Generator returned sat in 5.664917 secs.
[07/19 22:14:37]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:14:40]  Improved gap from 0 to 1.5625
[07/19 22:14:40]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/19 22:14:40]  Verifer returned sat in 3.422919 secs.
[07/19 22:14:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -20804.823486  -21003.219238  34713.049072 -20804.823486    0.082764 -21003.219238        0.0  198.395752       98.395752
1  -20803.219482  -20804.781982  34713.049316 -20803.219482  199.999756 -20804.781982        0.0    1.562500        0.000000
2  -20800.135742  -20801.656738  34809.924072 -20800.135742    4.646240 -20801.656738        0.0    1.520996       -0.041504
3  -20798.531738  -20800.094238  34908.361572 -20798.531738    3.125000 -20800.094238        0.0    1.562500        0.000000
4  -20696.969238  -20767.309326  34908.361572 -20696.969238  103.125000 -20767.309326        0.0   70.340088        1.562500
5  -20696.969238  -20698.531738  35006.799072 -20696.969238   70.298828 -20698.531738        0.0    1.562500        0.000000
6  -20645.469238  -20696.969238  35048.982910 -20645.469238   53.062500 -20696.969238        0.0   51.500000       -6.316162
7  -20618.875488  -20639.153076  35128.664062 -20618.875488   78.093750 -20639.153076        0.0   20.277588       -0.041260
8  -20536.028076  -20618.834229  35128.664062 -20536.028076  103.125000 -20618.834229        0.0   82.806152      -17.193848
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:14:41]  --------------------------------------------------------------------------------
[07/19 22:14:41]  Iteration: 160 (36 solution, 123 counterexamples)
[07/19 22:14:47]  Generator returned sat in 3.399197 secs.
[07/19 22:14:47]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:14:48]  Improved gap from 339/8192 to 35.9375
[07/19 22:14:49]  Improved number of small numbers from 43 to 48 out of a max of 101
[07/19 22:14:49]  Verifer returned sat in 1.658691 secs.
[07/19 22:14:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -21462.641113  -21462.641348  34665.643799 -21462.641113    0.082764 -21462.641348        0.0   0.000234        0.000195
1  -21387.448428  -21423.303164  34690.368154 -21387.448428   75.192920 -21423.303164        0.0  35.854736       -0.082764
2  -21351.510928  -21387.365664  34754.430654 -21351.510928   71.792236 -21387.365664        0.0  35.854736       -0.082764
3  -21278.702139  -21351.428164  34781.704590 -21278.702139  108.663525 -21351.428164        0.0  72.726025       -0.000039
4  -21240.214980  -21278.619375  34843.217471 -21240.214980  111.213184 -21278.619375        0.0  38.404395        0.000000
5  -21204.277480  -21240.214980  34907.279971 -21204.277480   74.341895 -21240.214980        0.0  35.937500        0.000000
6  -21164.639639  -21204.277480  34967.642129 -21164.639639   75.575342 -21204.277480        0.0  39.637842        0.000000
7  -21128.702139  -21164.639639  35031.704629 -21128.702139   75.575342 -21164.639639        0.0  35.937500        0.000000
8  -21105.649771  -21128.702139  35031.704834 -21105.649771   58.989868 -21128.702139        0.0  23.052368      -76.947427
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:14:49]  --------------------------------------------------------------------------------
[07/19 22:14:49]  Iteration: 161 (36 solution, 124 counterexamples)
[07/19 22:14:55]  Generator returned sat in 2.943522 secs.
[07/19 22:14:55]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:14:55]  Verifer returned unsat in 0.436033 secs.
[07/19 22:14:55]  Proved solution: 
[1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:14:55]  --------------------------------------------------------------------------------
[07/19 22:14:55]  Iteration: 162 (37 solution, 124 counterexamples)
[07/19 22:15:01]  Generator returned sat in 2.951130 secs.
[07/19 22:15:01]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:15:02]  Improved gap from 0 to 29.6875
[07/19 22:15:02]  Improved number of small numbers from 43 to 99 out of a max of 101
[07/19 22:15:02]  Verifer returned sat in 1.188829 secs.
[07/19 22:15:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -21674.652832  -21940.780273  35043.782959 -21674.652832    0.082764 -21940.780273        0.0  266.127441      166.127441
1  -21540.821533  -21740.780518  35043.782959 -21540.821533  399.958740 -21740.780518        0.0  199.958984      199.958740
2  -21540.821533  -21674.611328  35043.782959 -21540.821533    0.041504 -21674.611328        0.0  133.789795       99.958740
3  -21351.510742  -21540.780518  35043.782959 -21351.510742  323.100586 -21540.780518        0.0  189.269775      189.269531
4  -21351.510742  -21440.780273  35043.782959 -21351.510742  161.550293 -21440.780273        0.0   89.269531       89.269531
5  -21351.510742  -21440.780273  35054.513428 -21351.510742   80.775146 -21440.780273        0.0   89.269531        0.000000
6  -21321.864746  -21351.510742  35124.825928 -21321.864746  118.915527 -21351.510742        0.0   29.645996       -0.041504
7  -21292.052979  -21321.823242  35195.055664 -21292.052979   59.457764 -21321.823242        0.0   29.770264        0.000000
8  -21292.052979  -21292.052979  35195.055664 -21292.052979   29.728882 -21292.052979        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:15:03]  --------------------------------------------------------------------------------
[07/19 22:15:03]  Iteration: 163 (37 solution, 125 counterexamples)
[07/19 22:15:10]  Generator returned sat in 4.129637 secs.
[07/19 22:15:10]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:15:11]  Improved number of small numbers from 42 to 100 out of a max of 100
[07/19 22:15:11]  Verifer returned sat in 0.837430 secs.
[07/19 22:15:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -21740.760986  -22440.781494  35543.784424 -21740.760986    0.082764 -22440.781494        0.0  700.020508      600.020752
1  -21740.740234  -22240.802490  35543.784424 -21740.740234  700.041260 -22240.802490        0.0  500.062256      500.041504
2  -21740.740234  -22240.781494  35543.784424 -21740.740234    0.020508 -22240.781494        0.0  500.041260      400.041504
3  -21740.740234  -22140.781494  35543.784424 -21740.740234    0.020752 -22140.781494        0.0  400.041260      300.041504
4  -21740.740234  -22040.781494  35543.784424 -21740.740234  300.000000 -22040.781494        0.0  300.041260      200.041504
5  -21740.740234  -21842.698730  35543.784424 -21740.740234  251.010498 -21842.698730        0.0  101.958496      100.041504
6  -21444.615967  -21740.781738  35543.784424 -21444.615967  398.082764 -21740.781738        0.0  296.165771      296.165771
7  -21340.740479  -21740.760986  35543.784424 -21340.740479  400.041260 -21740.760986        0.0  400.020508      300.041260
8  -21340.740479  -21640.781738  35543.784424 -21340.740479  300.020508 -21640.781738        0.0  300.041260      200.041260
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:15:11]  --------------------------------------------------------------------------------
[07/19 22:15:11]  Iteration: 164 (37 solution, 126 counterexamples)
[07/19 22:15:16]  Generator returned sat in 2.251859 secs.
[07/19 22:15:16]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:15:17]  Improved number of small numbers from 67 to 100 out of a max of 100
[07/19 22:15:17]  Verifer returned sat in 0.570252 secs.
[07/19 22:15:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22234.926514  -22534.926270  35543.78418 -22234.926514    0.082764 -22534.926270        0.0  299.999756      199.999756
1  -21834.905762  -22334.926270  35543.78418 -21834.905762  700.020508 -22334.926270        0.0  500.020508      500.020508
2  -21834.905762  -22333.009033  35543.78418 -21834.905762    0.020508 -22333.009033        0.0  498.103271      400.020508
3  -21834.905762  -22234.926270  35543.78418 -21834.905762    0.020752 -22234.926270        0.0  400.020508      300.020508
4  -21834.905762  -22084.926514  35543.78418 -21834.905762  300.000000 -22084.926514        0.0  250.020752      200.020508
5  -21834.905762  -21934.926270  35543.78418 -21834.905762  249.999756 -21934.926270        0.0  100.020508      100.020508
6  -21536.843506  -21834.926514  35543.78418 -21536.843506  398.082764 -21834.926514        0.0  298.083008      298.082764
7  -21434.885254  -21834.906006  35543.78418 -21434.885254  400.041260 -21834.906006        0.0  400.020752      300.041016
8  -21434.885254  -21684.906006  35543.78418 -21434.885254  250.020508 -21684.906006        0.0  250.020752      200.041016
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:15:17]  --------------------------------------------------------------------------------
[07/19 22:15:17]  Iteration: 165 (37 solution, 127 counterexamples)
[07/19 22:15:23]  Generator returned sat in 3.147222 secs.
[07/19 22:15:23]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:15:24]  Verifer returned unsat in 0.433779 secs.
[07/19 22:15:24]  Proved solution: 
[1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:15:24]  --------------------------------------------------------------------------------
[07/19 22:15:24]  Iteration: 166 (38 solution, 127 counterexamples)
[07/19 22:15:30]  Generator returned sat in 3.372661 secs.
[07/19 22:15:30]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:15:31]  Improved gap from 0 to 29.6875
[07/19 22:15:31]  Improved number of small numbers from 50 to 99 out of a max of 101
[07/19 22:15:31]  Verifer returned sat in 1.034626 secs.
[07/19 22:15:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22249.265869  -22449.307373  35543.784180 -22249.265869    0.082520 -22449.307373        0.0  200.041504      100.041504
1  -22249.265869  -22249.307373  35543.784180 -22249.265869    0.041504 -22249.307373        0.0    0.041504        0.041504
2  -22213.393555  -22249.224609  35607.870361 -22213.393555   35.913818 -22249.224609        0.0   35.831055        0.000000
3  -21922.892578  -22113.393555  35607.870361 -21922.892578  326.332031 -22113.393555        0.0  190.500977      190.500977
4  -21922.892578  -22013.393555  35607.870361 -21922.892578  163.166016 -22013.393555        0.0   90.500977       90.500977
5  -21922.892578  -22013.393555  35617.369385 -21922.892578   81.583008 -22013.393555        0.0   90.500977        0.000000
6  -21894.478027  -21922.892578  35687.681885 -21894.478027  118.915527 -21922.892578        0.0   28.414551       -1.272949
7  -21863.434814  -21893.205078  35757.911621 -21863.434814   59.457764 -21893.205078        0.0   29.770264        0.000000
8  -21863.434814  -21863.434814  35757.911621 -21863.434814   29.728882 -21863.434814        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:15:32]  --------------------------------------------------------------------------------
[07/19 22:15:32]  Iteration: 167 (38 solution, 128 counterexamples)
[07/19 22:15:43]  Generator returned sat in 8.664105 secs.
[07/19 22:15:43]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:15:44]  Verifer returned unsat in 0.140577 secs.
[07/19 22:15:44]  Proved solution: 
[1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:15:44]  --------------------------------------------------------------------------------
[07/19 22:15:44]  Iteration: 168 (39 solution, 128 counterexamples)
[07/19 22:15:56]  Generator returned sat in 9.841014 secs.
[07/19 22:15:57]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:15:57]  Improved gap from 828913/32768 to 29.6875
[07/19 22:15:58]  Improved number of small numbers from 54 to 72 out of a max of 101
[07/19 22:15:58]  Verifer returned sat in 1.246922 secs.
[07/19 22:15:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -21750.976318  -21751.017578  35542.525635 -21750.976318    0.082275 -21751.017578        0.0    0.041260        0.041079
1  -21651.058838  -21751.017334  35542.525716 -21651.058838   99.958740 -21751.017334        0.0   99.958496       -0.041359
2  -21616.362061  -21651.017479  35607.870117 -21616.362061  134.655273 -21651.017479        0.0   34.655418       -0.000181
3  -21326.618797  -21516.362061  35607.870117 -21326.618797  324.398682 -21516.362061        0.0  189.743263      189.743083
4  -21326.618797  -21416.362305  35607.870117 -21326.618797  162.699341 -21416.362305        0.0   89.743507       89.743083
5  -21326.618797  -21416.320864  35618.127035 -21326.618797   81.849670 -21416.320864        0.0   89.702067        0.000000
6  -21296.972557  -21326.618797  35688.439535 -21296.972557  119.348307 -21326.618797        0.0   29.646240       -0.041260
7  -21266.444644  -21296.931297  35757.911621 -21266.444644   60.174154 -21296.931297        0.0   30.486654       -0.041260
8  -21266.344220  -21266.403320  35757.911621 -21266.344220   30.587077 -21266.403320        0.0    0.059100      -99.940837
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:15:58]  --------------------------------------------------------------------------------
[07/19 22:15:58]  Iteration: 169 (39 solution, 129 counterexamples)
[07/19 22:16:09]  Generator returned sat in 7.757701 secs.
[07/19 22:16:09]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:16:10]  Improved gap from 0 to 17.1875
[07/19 22:16:10]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/19 22:16:10]  Verifer returned sat in 1.086505 secs.
[07/19 22:16:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -21796.641113  -21949.661377  35568.034424 -21796.641113    0.082275 -21949.661377        0.0  153.020264       99.917725
1  -21429.620117  -21796.599854  35568.034424 -21429.620117  520.041260 -21796.599854        0.0  366.979736      366.938721
2  -21429.620117  -21796.558594  35568.034424 -21429.620117    0.041016 -21796.558594        0.0  366.938477      266.938721
3  -21429.620117  -21689.661377  35568.034424 -21429.620117  366.897461 -21689.661377        0.0  260.041260      166.938721
4  -21429.620117  -21496.558838  35568.034424 -21429.620117  260.000000 -21496.558838        0.0   66.938721       66.938721
5  -21366.058838  -21429.578857  35568.034424 -21366.058838  130.500000 -21429.578857        0.0   63.520020       30.500000
6  -21363.828857  -21396.558838  35635.304443 -21363.828857   65.750000 -21396.558838        0.0   32.729980        0.000000
7  -21363.183838  -21363.787598  35718.075684 -21363.183838   33.375000 -21363.787598        0.0    0.603760      -16.583740
8  -21346.600098  -21346.600098  35718.075684 -21346.600098   17.187500 -21346.600098        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:16:11]  --------------------------------------------------------------------------------
[07/19 22:16:11]  Iteration: 170 (39 solution, 130 counterexamples)
[07/19 22:16:20]  Generator returned sat in 6.346457 secs.
[07/19 22:16:20]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:16:20]  Improved gap from 0 to 0
[07/19 22:16:21]  Improved number of small numbers from 66 to 101 out of a max of 101
[07/19 22:16:21]  Verifer returned sat in 0.738122 secs.
[07/19 22:16:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t
0  -21497.737549  -21498.130371  35468.070068 -21497.737549  0.082031 -21498.130371        0.0  0.392822       -0.017822
1  -21497.683838  -21497.719482  35568.034180 -21497.683838  0.446533 -21497.719482        0.0  0.035645        0.000000
2  -21497.683838  -21497.683838  35668.034180 -21497.683838  0.017857 -21497.683838        0.0  0.000000        0.000000
3  -21497.112549  -21497.630371  35767.462891 -21497.112549  0.571289 -21497.630371        0.0  0.517822        0.000000
4  -21497.112549  -21497.112549  35866.980713 -21497.112549  0.500000 -21497.112549        0.0  0.000000       -0.482178
5  -21496.612549  -21496.630371  35966.962891 -21496.612549  0.500000 -21496.630371        0.0  0.017822        0.000000
6  -21495.576904  -21496.612549  36065.927246 -21495.576904  1.053467 -21496.612549        0.0  1.035645        0.000000
7  -21495.576904  -21495.576904  36165.927246 -21495.576904  1.017822 -21495.576904        0.0  0.000000        0.000000
8  -21495.076904  -21495.558838  36165.927490 -21495.076904  0.500000 -21495.558838        0.0  0.481934      -99.499756
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:16:21]  --------------------------------------------------------------------------------
[07/19 22:16:21]  Iteration: 171 (39 solution, 131 counterexamples)
[07/19 22:16:31]  Generator returned sat in 7.032146 secs.
[07/19 22:16:31]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:16:32]  Improved gap from 0 to 100
[07/19 22:16:32]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:16:32]  Verifer returned sat in 0.450421 secs.
[07/19 22:16:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22246.174072  -22442.543213  36065.927246 -22246.174072    0.082031 -22442.543213        0.0  196.369141      100.000000
1  -22246.174072  -22346.174072  36065.927246 -22246.174072  196.369141 -22346.174072        0.0  100.000000        0.000000
2  -22246.133057  -22246.174072  36065.927246 -22246.133057  100.041016 -22246.174072        0.0    0.041016      -99.958984
3  -21746.215088  -22145.338135  36065.927246 -21746.215088  499.958984 -22145.338135        0.0  399.123047      299.958984
4  -21746.215088  -21946.174072  36065.927246 -21746.215088  399.082031 -21946.174072        0.0  199.958984      199.958984
5  -21546.133057  -21946.174072  36065.927246 -21546.133057  400.041016 -21946.174072        0.0  400.041016      300.041016
6  -21546.133057  -21746.174072  36065.927246 -21546.133057  350.520508 -21746.174072        0.0  200.041016      200.041016
7  -21370.831787  -21746.174072  36065.927246 -21370.831787  375.342285 -21746.174072        0.0  375.342285      275.342285
8  -21370.831787  -21570.790771  36065.927246 -21370.831787    0.500000 -21570.790771        0.0  199.958984      175.342285
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:16:32]  --------------------------------------------------------------------------------
[07/19 22:16:32]  Iteration: 172 (39 solution, 132 counterexamples)
[07/19 22:16:40]  Generator returned sat in 4.727287 secs.
[07/19 22:16:40]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:16:40]  Improved number of small numbers from 70 to 94 out of a max of 100
[07/19 22:16:40]  Verifer returned sat in 0.494126 secs.
[07/19 22:16:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22246.174072  -22446.174072  36065.927002 -22246.174072    0.081543 -22446.174072        0.0  200.000000      100.000000
1  -22246.174072  -22346.174072  36065.927002 -22246.174072    0.041016 -22346.174072        0.0  100.000000        0.000000
2  -22146.194336  -22246.174072  36065.927002 -22146.194336  199.979736 -22246.174072        0.0   99.979736       -0.020264
3  -21746.031006  -22146.153564  36065.927002 -21746.031006  500.143066 -22146.153564        0.0  400.122559      300.143066
4  -21746.031006  -21946.174072  36065.927002 -21746.031006  400.081787 -21946.174072        0.0  200.143066      200.143066
5  -21546.133179  -21946.174072  36065.927002 -21546.133179  400.040894 -21946.174072        0.0  400.040894      300.040894
6  -21546.133179  -21746.174072  36065.927002 -21546.133179  300.000000 -21746.174072        0.0  200.040894      200.040894
7  -21346.194580  -21745.989990  36065.927002 -21346.194580  399.979492 -21745.989990        0.0  399.795410      299.979492
8  -21346.194580  -21546.337646  36065.927002 -21346.194580  200.184082 -21546.337646        0.0  200.143066      199.979492
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:16:41]  --------------------------------------------------------------------------------
[07/19 22:16:41]  Iteration: 173 (39 solution, 133 counterexamples)
[07/19 22:16:52]  Generator returned sat in 8.186536 secs.
[07/19 22:16:52]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:16:54]  Improved gap from 167/8192 to 35.9375
[07/19 22:16:54]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:16:54]  Verifer returned sat in 2.117249 secs.
[07/19 22:16:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -22145.989990  -22209.533691  36002.301758 -22145.989990    0.081299 -22209.533691        0.0  63.543701       63.543457
1  -22109.615234  -22145.908691  36002.302002 -22109.615234   99.918457 -22145.908691        0.0  36.293457       -0.081543
2  -22073.240234  -22109.533691  36065.927002 -22073.240234   72.668457 -22109.533691        0.0  36.293457       -0.081543
3  -22033.658691  -22073.158691  36095.177002 -22033.658691   75.875000 -22073.158691        0.0  39.500000      -31.250000
4  -21966.033691  -22002.408691  36158.802002 -21966.033691  107.125000 -22002.408691        0.0  36.375000        0.000000
5  -21929.658691  -21966.033691  36222.427002 -21929.658691   72.750000 -21966.033691        0.0  36.375000        0.000000
6  -21893.283691  -21929.658691  36286.052002 -21893.283691   72.750000 -21929.658691        0.0  36.375000        0.000000
7  -21856.908691  -21893.283691  36349.676758 -21856.908691   72.750000 -21893.283691        0.0  36.375000       -0.000244
8  -21801.346191  -21852.490234  36349.676758 -21801.346191   91.937500 -21852.490234        0.0  51.144043      -44.437744
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:16:55]  --------------------------------------------------------------------------------
[07/19 22:16:55]  Iteration: 174 (39 solution, 134 counterexamples)
[07/19 22:17:01]  Generator returned sat in 3.703464 secs.
[07/19 22:17:02]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:17:02]  Improved gap from 333/8192 to 23.4375
[07/19 22:17:02]  Improved number of small numbers from 87 to 101 out of a max of 101
[07/19 22:17:02]  Verifer returned sat in 0.545311 secs.
[07/19 22:17:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22262.559082  -22362.558838  36015.225586 -22262.559082    0.081055 -22362.558838        0.0   99.999756       99.999756
1  -22262.559082  -22362.558838  36015.225586 -22262.559082   99.999756 -22362.558838        0.0   99.999756       -0.000244
2  -21962.558838  -22260.152344  36015.225586 -21962.558838  400.000000 -22260.152344        0.0  297.593506      200.000000
3  -21962.558838  -22080.879639  36015.225586 -21962.558838  297.593262 -22080.879639        0.0  118.320801      100.000000
4  -21939.040039  -21962.559082  36015.225586 -21939.040039  141.839600 -21962.559082        0.0   23.519043       23.518799
5  -21939.040039  -21962.477539  36091.706787 -21939.040039    1.000000 -21962.477539        0.0   23.437500        0.000000
6  -21812.640137  -21939.040039  36091.706787 -21812.640137  149.837402 -21939.040039        0.0  126.399902       26.399902
7  -21812.640137  -21839.040039  36165.306885 -21812.640137    1.000000 -21839.040039        0.0   26.399902        0.000000
8  -21776.280518  -21812.640137  36165.306885 -21776.280518   62.759521 -21812.640137        0.0   36.359619      -63.640381
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:17:03]  --------------------------------------------------------------------------------
[07/19 22:17:03]  Iteration: 175 (39 solution, 135 counterexamples)
[07/19 22:17:09]  Generator returned sat in 3.316523 secs.
[07/19 22:17:09]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:17:10]  Improved gap from 83/4096 to 35.9375
[07/19 22:17:10]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:17:10]  Verifer returned sat in 1.181196 secs.
[07/19 22:17:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -22642.472168  -22732.953613  36657.556641 -22642.472168    0.081055 -22732.953613        0.0  90.481445       26.359863
1  -22539.266113  -22568.832031  36657.556641 -22539.266113  193.687500 -22568.832031        0.0  29.565918       29.565918
2  -22539.266113  -22539.266113  36692.053223 -22539.266113    0.040283 -22539.266113        0.0   0.000000      -35.937500
3  -22424.663086  -22503.328613  36713.387695 -22424.663086  114.603027 -22503.328613        0.0  78.665527        0.000000
4  -22387.516113  -22424.663086  36776.240723 -22387.516113  115.812500 -22424.663086        0.0  37.146973        0.000000
5  -22351.578613  -22387.516113  36840.303223 -22351.578613   73.084473 -22387.516113        0.0  35.937500        0.000000
6  -22310.641113  -22351.578613  36899.365723 -22310.641113   76.875000 -22351.578613        0.0  40.937500        0.000000
7  -22274.703613  -22310.641113  36963.428223 -22274.703613   76.875000 -22310.641113        0.0  35.937500        0.000000
8  -22252.630127  -22274.703613  36963.428223 -22252.630127   58.010986 -22274.703613        0.0  22.073486      -77.926514
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:17:11]  --------------------------------------------------------------------------------
[07/19 22:17:11]  Iteration: 176 (39 solution, 136 counterexamples)
[07/19 22:17:17]  Generator returned sat in 3.173235 secs.
[07/19 22:17:17]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:17:18]  Improved gap from 575/16 to 35.9375
[07/19 22:17:18]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/19 22:17:18]  Verifer returned sat in 1.007464 secs.
[07/19 22:17:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23220.104004  -23356.185059  36646.865723 -23220.104004    0.081055 -23356.185059        0.0  136.081055       61.206055
1  -23181.310059  -23220.063477  36646.865723 -23181.310059  174.875000 -23220.063477        0.0   38.753418        0.000000
2  -23181.310059  -23181.310059  36709.490723 -23181.310059   38.712891 -23181.310059        0.0    0.000000      -37.375000
3  -23073.644531  -23143.935059  36739.200195 -23073.644531  107.665527 -23143.935059        0.0   70.290527        0.000000
4  -23035.810059  -23073.644531  36801.365723 -23035.810059  108.125000 -23073.644531        0.0   37.834473        0.000000
5  -22998.435059  -23035.810059  36863.990723 -22998.435059   75.209473 -23035.810059        0.0   37.375000        0.000000
6  -22961.060059  -22998.435059  36926.615723 -22961.060059   74.750000 -22998.435059        0.0   37.375000        0.000000
7  -22923.685059  -22961.060059  36989.240723 -22923.685059   74.750000 -22961.060059        0.0   37.375000        0.000000
8  -22902.767822  -22923.685059  36989.240723 -22902.767822   58.292236 -22923.685059        0.0   20.917236      -79.082764
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:17:19]  --------------------------------------------------------------------------------
[07/19 22:17:19]  Iteration: 177 (39 solution, 137 counterexamples)
[07/19 22:17:25]  Generator returned sat in 3.440990 secs.
[07/19 22:17:25]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:17:26]  Improved gap from 0 to 0
[07/19 22:17:26]  Improved number of small numbers from 52 to 101 out of a max of 101
[07/19 22:17:26]  Verifer returned sat in 0.917875 secs.
[07/19 22:17:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23909.694824  -24009.675049  36409.551025 -23909.694824    0.080566 -24009.675049        0.0   99.980225       99.979980
1  -23909.675049  -23909.675049  36409.551025 -23909.675049  100.000000 -23909.675049        0.0    0.000000       -0.000244
2  -23909.634521  -23909.654785  36509.510742 -23909.634521    0.040527 -23909.654785        0.0    0.020264        0.000000
3  -23809.614258  -23810.634277  36509.510742 -23809.614258  100.040527 -23810.634277        0.0    1.020020        0.020264
4  -23809.614258  -23809.634521  36609.490479 -23809.614258    1.000000 -23809.634521        0.0    0.020264        0.000000
5  -23709.593994  -23809.614258  36609.490479 -23709.593994  100.040527 -23809.614258        0.0  100.020264        0.020264
6  -23709.593994  -23709.614258  36709.470215 -23709.593994    1.000000 -23709.614258        0.0    0.020264        0.000000
7  -23708.614258  -23708.634521  36808.490479 -23708.614258    1.000000 -23708.634521        0.0    0.020264        0.000000
8  -23707.634521  -23708.593994  36808.490479 -23707.634521    1.000000 -23708.593994        0.0    0.959473      -99.020264
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:17:27]  --------------------------------------------------------------------------------
[07/19 22:17:27]  Iteration: 178 (39 solution, 138 counterexamples)
[07/19 22:17:33]  Generator returned sat in 3.084785 secs.
[07/19 22:17:33]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:17:34]  Improved gap from 165/8192 to 0
[07/19 22:17:34]  Improved number of small numbers from 51 to 101 out of a max of 101
[07/19 22:17:34]  Verifer returned sat in 0.969931 secs.
[07/19 22:17:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23510.664795  -23510.675049  36309.571045 -23510.664795    0.080566 -23510.675049        0.0    0.010254        0.010254
1  -23510.644775  -23510.654785  36409.540771 -23510.644775    0.030273 -23510.654785        0.0    0.010010        0.000000
2  -23510.614746  -23510.624512  36509.510498 -23510.614746    0.040039 -23510.624512        0.0    0.009766       -0.000244
3  -23410.604492  -23509.675049  36509.510498 -23410.604492  100.020020 -23509.675049        0.0   99.070557        0.010010
4  -23410.604492  -23410.614502  36609.500488 -23410.604492    1.000000 -23410.614502        0.0    0.010010        0.000000
5  -23310.574219  -23410.604492  36609.500488 -23310.574219  100.040283 -23410.604492        0.0  100.030273        0.030273
6  -23310.574219  -23310.584473  36709.470215 -23310.574219  100.020020 -23310.584473        0.0    0.010254        0.000000
7  -23309.584473  -23310.564209  36808.480469 -23309.584473    1.000000 -23310.564209        0.0    0.979736        0.000000
8  -23309.564209  -23309.574463  36808.480469 -23309.564209    1.000000 -23309.574463        0.0    0.010254      -99.979736
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:17:34]  --------------------------------------------------------------------------------
[07/19 22:17:34]  Iteration: 179 (39 solution, 139 counterexamples)
[07/19 22:17:41]  Generator returned sat in 3.208099 secs.
[07/19 22:17:41]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:17:42]  Verifer returned unsat in 1.358064 secs.
[07/19 22:17:42]  Proved solution: 
[1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:17:42]  --------------------------------------------------------------------------------
[07/19 22:17:42]  Iteration: 180 (40 solution, 139 counterexamples)
[07/19 22:17:53]  Generator returned sat in 7.595210 secs.
[07/19 22:17:53]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:17:53]  Improved gap from 1/800 to 0
[07/19 22:17:54]  Improved number of small numbers from 64 to 87 out of a max of 101
[07/19 22:17:54]  Verifer returned sat in 0.732044 secs.
[07/19 22:17:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23335.583496  -23535.581299  36334.477295 -23335.583496    0.080322 -23535.581299        0.0  199.997803      199.997803
1  -23335.583496  -23535.581055  36334.477295 -23335.583496  199.997500 -23535.581055        0.0  199.997559       99.997803
2  -23236.581299  -23335.581299  36334.477295 -23236.581299  298.999756 -23335.581299        0.0   99.000000       99.000000
3  -23236.576172  -23236.578613  36334.477295 -23236.576172   99.005127 -23236.578613        0.0    0.002441       -0.994873
4  -23235.578613  -23235.581094  36433.479736 -23235.578613    1.000000 -23235.581094        0.0    0.002480       -0.994873
5  -23234.581094  -23234.583594  36533.477090 -23234.581094    1.000000 -23234.583594        0.0    0.002500        0.000000
6  -23234.573594  -23234.581094  36633.469590 -23234.573594    0.010000 -23234.581094        0.0    0.007500        0.000000
7  -23234.571094  -23234.573594  36732.469727 -23234.571094    0.010000 -23234.573594        0.0    0.002500       -0.997363
8  -23233.573594  -23233.573730  36732.469727 -23233.573594    1.000000 -23233.573730        0.0    0.000137      -99.999863
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:17:54]  --------------------------------------------------------------------------------
[07/19 22:17:54]  Iteration: 181 (40 solution, 140 counterexamples)
[07/19 22:18:08]  Generator returned sat in 10.809547 secs.
[07/19 22:18:08]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:18:10]  Improved gap from 0 to 29.6875
[07/19 22:18:10]  Improved number of small numbers from 54 to 80 out of a max of 101
[07/19 22:18:10]  Verifer returned sat in 1.974191 secs.
[07/19 22:18:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23425.564697  -23597.024658  36296.416504 -23425.564697    0.080566 -23597.024658        0.0  171.459961      171.459961
1  -23425.564697  -23497.024658  36296.416504 -23425.564697    0.040283 -23497.024658        0.0   71.459961       71.459961
2  -23297.064941  -23425.524629  36296.416504 -23297.064941  199.959717 -23425.524629        0.0  128.459688       99.959717
3  -23125.780163  -23297.024658  36296.416504 -23125.780163  299.744466 -23297.024658        0.0  171.244495      171.244495
4  -23125.780163  -23201.506348  36296.416504 -23125.780163  150.372233 -23201.506348        0.0   75.726185       71.244495
5  -23125.780163  -23197.024629  36325.172008 -23125.780163   75.686117 -23197.024629        0.0   71.244466        0.000000
6  -23081.274629  -23125.780163  36380.666260 -23081.274629  115.750000 -23125.780163        0.0   44.505534       -0.000215
7  -23067.405163  -23081.234131  36450.938477 -23067.405163   58.375000 -23081.234131        0.0   13.828968      -15.858532
8  -23051.546631  -23051.546631  36450.938477 -23051.546631   29.687500 -23051.546631        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:18:11]  --------------------------------------------------------------------------------
[07/19 22:18:11]  Iteration: 182 (40 solution, 141 counterexamples)
[07/19 22:18:22]  Generator returned sat in 8.551365 secs.
[07/19 22:18:23]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:18:23]  Improved gap from 0 to 0
[07/19 22:18:23]  Improved number of small numbers from 49 to 101 out of a max of 101
[07/19 22:18:23]  Verifer returned sat in 0.515734 secs.
[07/19 22:18:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23467.945312  -23567.925293  35925.231934 -23467.945312    0.080322 -23567.925293        0.0   99.979980       99.979980
1  -23367.945557  -23467.925293  35925.231934 -23367.945557  199.979736 -23467.925293        0.0   99.979736       99.979736
2  -23267.945557  -23367.925537  35925.231934 -23267.945557  199.979736 -23367.925537        0.0   99.979980       99.979736
3  -23067.405273  -23267.925537  35925.231934 -23067.405273  300.520264 -23267.925537        0.0  200.520264      200.520020
4  -23067.405273  -23167.925537  35925.231934 -23067.405273    0.500000 -23167.925537        0.0  100.520264      100.520020
5  -23067.405273  -23067.945557  35925.231934 -23067.405273    0.500000 -23067.945557        0.0    0.540283        0.520020
6  -23067.405273  -23067.925293  36024.711914 -23067.405273    0.500000 -23067.925293        0.0    0.520020        0.000000
7  -23067.405273  -23067.405273  36124.711914 -23067.405273    0.500000 -23067.405273        0.0    0.000000        0.000000
8  -23066.905273  -23067.405273  36124.711914 -23066.905273    0.500000 -23067.405273        0.0    0.500000      -99.500000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:18:24]  --------------------------------------------------------------------------------
[07/19 22:18:24]  Iteration: 183 (40 solution, 142 counterexamples)
[07/19 22:18:32]  Generator returned sat in 4.857219 secs.
[07/19 22:18:32]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:18:33]  Improved gap from 0 to 14.0625
[07/19 22:18:33]  Improved number of small numbers from 58 to 101 out of a max of 101
[07/19 22:18:33]  Verifer returned sat in 1.344534 secs.
[07/19 22:18:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23651.433594  -23651.473633  35874.671631 -23651.433594    0.080078 -23651.473633        0.0    0.040039       -0.040283
1  -23637.331055  -23651.393311  35960.609131 -23637.331055   14.142578 -23651.393311        0.0   14.062256       -0.000244
2  -23201.473877  -23636.513916  35960.609131 -23201.473877  449.919434 -23636.513916        0.0  435.040039      335.856934
3  -23201.473877  -23537.330811  35960.609131 -23201.473877  435.000000 -23537.330811        0.0  335.856934      235.856934
4  -23201.473877  -23337.331055  35960.609131 -23201.473877  218.000000 -23337.331055        0.0  135.857178      135.856934
5  -23201.473877  -23256.683350  35960.609131 -23201.473877  109.500000 -23256.683350        0.0   55.209473       35.856934
6  -23201.433350  -23215.495850  36024.711670 -23201.433350   55.250000 -23215.495850        0.0   14.062500        0.000000
7  -23187.370850  -23201.433350  36110.649170 -23187.370850   28.125000 -23201.433350        0.0   14.062500        0.000000
8  -23186.870850  -23187.370850  36110.649414 -23186.870850   14.562500 -23187.370850        0.0    0.500000      -99.499756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:18:34]  --------------------------------------------------------------------------------
[07/19 22:18:34]  Iteration: 184 (40 solution, 143 counterexamples)
[07/19 22:18:41]  Generator returned sat in 4.272700 secs.
[07/19 22:18:41]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:18:42]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/19 22:18:42]  Verifer returned sat in 0.420117 secs.
[07/19 22:18:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23701.593994  -23901.513916  36110.64917 -23701.593994    0.080078 -23901.513916        0.0  199.919922       99.919922
1  -23201.473877  -23701.553955  36110.64917 -23201.473877  700.040039 -23701.553955        0.0  500.080078      500.040039
2  -23201.473877  -23701.513916  36110.64917 -23201.473877    0.040039 -23701.513916        0.0  500.040039      400.040039
3  -23201.473877  -23601.513916  36110.64917 -23201.473877  399.000000 -23601.513916        0.0  400.040039      300.040039
4  -23201.473877  -23501.513916  36110.64917 -23201.473877  300.000000 -23501.513916        0.0  300.040039      200.040039
5  -23201.473877  -23302.353760  36110.64917 -23201.473877  200.040039 -23302.353760        0.0  100.879883      100.040039
6  -22903.193604  -23201.513916  36110.64917 -22903.193604  399.160156 -23201.513916        0.0  298.320312      298.320312
7  -22801.433838  -23201.473877  36110.64917 -22801.433838  400.080078 -23201.473877        0.0  400.040039      300.080078
8  -22801.433838  -23101.473877  36110.64917 -22801.433838  300.040039 -23101.473877        0.0  300.040039      200.080078
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:18:42]  --------------------------------------------------------------------------------
[07/19 22:18:42]  Iteration: 185 (40 solution, 144 counterexamples)
[07/19 22:18:48]  Generator returned sat in 2.945763 secs.
[07/19 22:18:48]  Candidate solution: 
[1m[94mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:18:50]  Improved number of small numbers from 53 to 85 out of a max of 100
[07/19 22:18:50]  Verifer returned sat in 1.376945 secs.
[07/19 22:18:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22902.441650  -23502.481631  36110.648926 -22902.441650    0.079590 -23502.481631        0.0  600.039981      600.020023
1  -22902.441650  -23502.461670  36110.648926 -22902.441650    0.020020 -23502.461670        0.0  600.020020      500.020023
2  -22902.441650  -23401.541748  36110.648926 -22902.441650    0.020020 -23401.541748        0.0  499.100098      400.020023
3  -22902.441650  -23302.461673  36110.648926 -22902.441650  499.079590 -23302.461673        0.0  400.020023      300.020023
4  -22902.441650  -23202.461670  36110.648926 -22902.441650  200.019958 -23202.461670        0.0  300.020020      200.020023
5  -22902.441650  -23002.461914  36110.648926 -22902.441650  300.000000 -23002.461914        0.0  100.020264      100.020023
6  -22603.382080  -22902.461673  36110.648926 -22603.382080  399.079834 -22902.461673        0.0  299.079593      299.079593
7  -22502.421756  -22902.441650  36110.648926 -22502.421756  400.039917 -22902.441650        0.0  400.019894      300.039917
8  -22502.421756  -22802.441895  36110.648926 -22502.421756  300.020020 -22802.441895        0.0  300.020139      200.039917
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:18:50]  --------------------------------------------------------------------------------
[07/19 22:18:50]  Iteration: 186 (40 solution, 145 counterexamples)
[07/19 22:18:58]  Generator returned sat in 5.019630 secs.
[07/19 22:18:59]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:19:00]  Improved gap from 0 to 29.6875
[07/19 22:19:01]  Improved number of small numbers from 47 to 99 out of a max of 101
[07/19 22:19:01]  Verifer returned sat in 1.812628 secs.
[07/19 22:19:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -23074.822998  -23074.822998  35682.990479 -23074.822998    0.079346 -23074.822998        0.0    0.000000       -0.019775
1  -23074.783203  -23074.802979  35682.990479 -23074.783203    0.039795 -23074.802979        0.0    0.019775      -99.979980
2  -22874.802979  -22911.462402  35682.990479 -22874.802979  200.000000 -22911.462402        0.0   36.659424        0.000244
3  -22584.237793  -22774.803223  35682.990479 -22584.237793  327.224609 -22774.803223        0.0  190.565430      190.565430
4  -22584.237793  -22674.803223  35682.990479 -22584.237793  163.612305 -22674.803223        0.0   90.565430       90.565430
5  -22584.237793  -22674.803223  35692.425049 -22584.237793   81.806152 -22674.803223        0.0   90.565430        0.000000
6  -22555.973633  -22584.237793  35762.737549 -22555.973633  118.829590 -22584.237793        0.0   28.264160       -1.423340
7  -22524.822998  -22554.550293  35833.010254 -22524.822998   59.414795 -22554.550293        0.0   29.727295        0.000000
8  -22524.822998  -22524.822998  35833.010498 -22524.822998   29.707397 -22524.822998        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:19:01]  --------------------------------------------------------------------------------
[07/19 22:19:01]  Iteration: 187 (40 solution, 146 counterexamples)
[07/19 22:19:12]  Generator returned sat in 8.186567 secs.
[07/19 22:19:13]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:19:14]  Improved gap from 0 to 29.6875
[07/19 22:19:14]  Improved number of small numbers from 52 to 99 out of a max of 101
[07/19 22:19:14]  Verifer returned sat in 1.481376 secs.
[07/19 22:19:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -21914.397949  -22114.397949  34622.584961 -21914.397949    0.079346 -22114.397949        0.0  200.000000      100.000244
1  -21914.397949  -22014.397949  34622.584961 -21914.397949    0.039795 -22014.397949        0.0  100.000000        0.000244
2  -21814.397949  -21841.898193  34622.584961 -21814.397949  200.000000 -21841.898193        0.0   27.500244        0.000244
3  -21537.511963  -21814.397949  34622.584961 -21537.511963  304.386230 -21814.397949        0.0  276.885986      176.886230
4  -21537.511963  -21614.398193  34622.584961 -21537.511963  152.693115 -21614.398193        0.0   76.886230       76.886230
5  -21537.511963  -21614.398193  34645.698730 -21537.511963   76.846558 -21614.398193        0.0   76.886230        0.000000
6  -21498.648193  -21537.511963  34706.795410 -21498.648193  115.750000 -21537.511963        0.0   38.863770       -0.039551
7  -21479.136963  -21498.608398  34777.107666 -21479.136963   58.375000 -21498.608398        0.0   19.471436      -10.216064
8  -21468.920898  -21468.920898  34777.107910 -21468.920898   29.687500 -21468.920898        0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:19:15]  --------------------------------------------------------------------------------
[07/19 22:19:15]  Iteration: 188 (40 solution, 147 counterexamples)
[07/19 22:19:24]  Generator returned sat in 6.305044 secs.
[07/19 22:19:24]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:19:25]  Improved gap from 325/8192 to 37.5
[07/19 22:19:25]  Improved number of small numbers from 91 to 101 out of a max of 101
[07/19 22:19:25]  Verifer returned sat in 0.547922 secs.
[07/19 22:19:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22014.437744  -22114.398438  34589.60791 -22014.437744    0.079346 -22114.398438        0.0   99.960693       99.960693
1  -21914.437988  -22014.398438  34589.60791 -21914.437988  199.960449 -22014.398438        0.0   99.960449       99.960449
2  -21814.398438  -21914.398438  34589.60791 -21814.398438  200.000000 -21914.398438        0.0  100.000000      100.000000
3  -21814.398438  -21825.319092  34589.60791 -21814.398438   73.000000 -21825.319092        0.0   10.920654        0.000000
4  -21751.819092  -21751.858643  34589.60791 -21751.819092   73.500000 -21751.858643        0.0    0.039551      -37.420654
5  -21677.858643  -21714.398438  34652.10791 -21677.858643   74.000000 -21714.398438        0.0   36.539795       -0.960205
6  -21639.898438  -21676.898438  34714.60791 -21639.898438   74.500000 -21676.898438        0.0   37.000000       -0.500000
7  -21601.898438  -21639.398438  34777.10791 -21601.898438   75.000000 -21639.398438        0.0   37.500000        0.000000
8  -21601.898438  -21601.898438  34777.10791 -21601.898438    2.000000 -21601.898438        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:19:25]  --------------------------------------------------------------------------------
[07/19 22:19:25]  Iteration: 189 (40 solution, 148 counterexamples)
[07/19 22:19:33]  Generator returned sat in 4.230224 secs.
[07/19 22:19:33]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:19:33]  Improved gap from 24251/16384 to 100
[07/19 22:19:34]  Improved number of small numbers from 60 to 70 out of a max of 101
[07/19 22:19:34]  Verifer returned sat in 0.667023 secs.
[07/19 22:19:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22014.557129  -22114.517578  34652.10791 -22014.557129    0.079102 -22114.517578        0.0   99.960449       99.960327
1  -21914.557373  -22014.517578  34652.10791 -21914.557373  199.960205 -22014.517578        0.0   99.960205       99.960083
2  -21814.557129  -21914.517578  34652.10791 -21814.557129  199.960449 -21914.517578        0.0   99.960449       99.960327
3  -21814.557129  -21892.695496  34652.10791 -21814.557129   51.811809 -21892.695496        0.0   78.138367       -0.039673
4  -21814.477783  -21814.517456  34652.10791 -21814.477783   78.217713 -21814.517456        0.0    0.039673      -99.960327
5  -21696.690886  -21714.517456  34652.10791 -21696.690886  117.826570 -21714.517456        0.0   17.826570      -82.173430
6  -21537.277601  -21537.277601  34652.10791 -21537.277601  177.239855 -21537.277601        0.0    0.000000      -22.760145
7  -21270.917820  -21414.517456  34652.10791 -21270.917820  266.359782 -21414.517456        0.0  143.599637      143.599637
8  -21014.477783  -21414.517456  34652.10791 -21014.477783  400.039673 -21414.517456        0.0  400.039673      300.039673
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/19 22:19:34]  --------------------------------------------------------------------------------
[07/19 22:19:34]  Iteration: 190 (40 solution, 149 counterexamples)
[07/19 22:19:45]  Generator returned sat in 7.998560 secs.
[07/19 22:19:46]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:19:48]  Improved gap from 81/2048 to 1.5625
[07/19 22:19:48]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:19:48]  Verifer returned sat in 2.208530 secs.
[07/19 22:19:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22237.426270  -22440.736084  34457.013916 -22237.426270    0.078857 -22440.736084        0.0  203.309814      103.309814
1  -22237.426270  -22240.736328  34457.013916 -22237.426270    0.033691 -22240.736328        0.0    3.310059        3.309814
2  -22237.426270  -22240.736084  34553.670166 -22237.426270    3.309814 -22240.736084        0.0    3.309814       -0.033936
3  -22235.829834  -22237.392334  34652.107666 -22235.829834    4.906250 -22237.392334        0.0    1.562500        0.000000
4  -22133.267334  -22203.911133  34652.107666 -22133.267334  104.125000 -22203.911133        0.0   70.643799        2.562500
5  -22133.267334  -22135.829834  34749.545166 -22133.267334   70.475098 -22135.829834        0.0    2.562500        0.000000
6  -22081.376709  -22133.267334  34797.654297 -22081.376709   54.453125 -22133.267334        0.0   51.890625       -0.000244
7  -22053.978271  -22081.343262  34870.256104 -22053.978271   79.289062 -22081.343262        0.0   27.364990        0.000000
8  -21980.414795  -22053.944824  34870.256104 -21980.414795  100.928467 -22053.944824        0.0   73.530029      -26.436523
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:19:48]  --------------------------------------------------------------------------------
[07/19 22:19:48]  Iteration: 191 (40 solution, 150 counterexamples)
[07/19 22:19:56]  Generator returned sat in 3.891094 secs.
[07/19 22:19:56]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:19:56]  Verifer returned unsat in 0.308199 secs.
[07/19 22:19:56]  Proved solution: 
[1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:19:56]  --------------------------------------------------------------------------------
[07/19 22:19:56]  Iteration: 192 (41 solution, 150 counterexamples)
[07/19 22:20:03]  Generator returned sat in 3.208103 secs.
[07/19 22:20:03]  Candidate solution: 
[1m[94mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:03]  Verifer returned unsat in 0.223001 secs.
[07/19 22:20:03]  Proved solution: 
[1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:03]  --------------------------------------------------------------------------------
[07/19 22:20:03]  Iteration: 193 (42 solution, 150 counterexamples)
[07/19 22:20:10]  Generator returned sat in 3.197462 secs.
[07/19 22:20:10]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:10]  Verifer returned unsat in 0.193361 secs.
[07/19 22:20:10]  Proved solution: 
[1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:10]  --------------------------------------------------------------------------------
[07/19 22:20:10]  Iteration: 194 (43 solution, 150 counterexamples)
[07/19 22:20:17]  Generator returned sat in 3.493823 secs.
[07/19 22:20:17]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:18]  Verifer returned unsat in 0.445006 secs.
[07/19 22:20:18]  Proved solution: 
[1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:18]  --------------------------------------------------------------------------------
[07/19 22:20:18]  Iteration: 195 (44 solution, 150 counterexamples)
[07/19 22:20:25]  Generator returned sat in 4.137322 secs.
[07/19 22:20:25]  Candidate solution: 
[1m[94mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:26]  Improved number of small numbers from 42 to 100 out of a max of 100
[07/19 22:20:26]  Verifer returned sat in 0.367602 secs.
[07/19 22:20:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -21735.461914  -22535.501221  34502.040039 -21735.461914    0.078857 -22535.501221        0.0  800.039307      700.039307
1  -21735.461914  -22406.796875  34502.040039 -21735.461914  800.039307 -22406.796875        0.0  671.334961      600.039307
2  -21735.461914  -22335.501221  34502.040039 -21735.461914    0.019775 -22335.501221        0.0  600.039307      500.039307
3  -21735.461914  -22229.500977  34502.040039 -21735.461914  600.039307 -22229.500977        0.0  494.039062      400.039307
4  -21735.461914  -22035.501221  34502.040039 -21735.461914  453.019775 -22035.501221        0.0  300.039307      300.039307
5  -21623.343506  -21935.501221  34502.040039 -21623.343506  412.157715 -21935.501221        0.0  312.157715      312.157715
6  -21529.422363  -21835.501221  34502.040039 -21529.422363  406.078857 -21835.501221        0.0  306.078857      306.078857
7  -21435.461914  -21835.481445  34502.040039 -21435.461914  400.039307 -21835.481445        0.0  400.019531      300.039307
8  -21435.461914  -21735.501221  34502.040039 -21435.461914  300.029541 -21735.501221        0.0  300.039307      200.039307
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/19 22:20:26]  --------------------------------------------------------------------------------
[07/19 22:20:26]  Iteration: 196 (44 solution, 151 counterexamples)
[07/19 22:20:33]  Generator returned sat in 3.594047 secs.
[07/19 22:20:33]  Candidate solution: 
[1m[94mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:34]  Verifer returned unsat in 0.255208 secs.
[07/19 22:20:34]  Proved solution: 
[1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:20:34]  --------------------------------------------------------------------------------
[07/19 22:20:34]  Iteration: 197 (45 solution, 151 counterexamples)
[07/19 22:20:46]  Generator returned sat in 8.650687 secs.
[07/19 22:20:46]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:20:47]  Improved gap from 323/16384 to 12.5
[07/19 22:20:47]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/19 22:20:47]  Verifer returned sat in 1.004425 secs.
[07/19 22:20:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -21997.604980  -22010.065430  34414.540039 -21997.604980    0.078613 -22010.065430        0.0   12.460449       12.460205
1  -21997.565430  -22010.065186  34502.040039 -21997.565430   12.500000 -22010.065186        0.0   12.499756       -0.000244
2  -21897.565186  -21997.565186  34502.040039 -21897.565186  112.500000 -21997.565186        0.0  100.000000        0.000000
3  -21597.565186  -21897.565186  34502.040039 -21597.565186  400.000000 -21897.565186        0.0  300.000000      200.000000
4  -21597.565186  -21697.604980  34502.040039 -21597.565186  200.000000 -21697.604980        0.0  100.039795      100.000000
5  -21597.565186  -21635.065186  34502.040039 -21597.565186  100.000000 -21635.065186        0.0   37.500000        0.000000
6  -21585.065186  -21597.565186  34589.540039 -21585.065186   50.000000 -21597.565186        0.0   12.500000        0.000000
7  -21572.565186  -21585.065186  34677.040039 -21572.565186   25.000000 -21585.065186        0.0   12.500000        0.000000
8  -21572.565186  -21572.565186  34677.040039 -21572.565186   12.500000 -21572.565186        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:20:47]  --------------------------------------------------------------------------------
[07/19 22:20:47]  Iteration: 198 (45 solution, 152 counterexamples)
[07/19 22:20:57]  Generator returned sat in 6.333388 secs.
[07/19 22:20:57]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:20:58]  Improved gap from 1/16384 to 23.4375
[07/19 22:20:58]  Improved number of small numbers from 67 to 101 out of a max of 101
[07/19 22:20:58]  Verifer returned sat in 0.697176 secs.
[07/19 22:20:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22053.736572  -22153.815430  34502.040039 -22053.736572    0.078613 -22153.815430        0.0  100.078857       89.141113
1  -21862.181396  -22053.736572  34502.040039 -21862.181396  291.634033 -22053.736572        0.0  191.555176      180.696289
2  -21742.877686  -22042.779297  34502.040039 -21742.877686  310.858887 -22042.779297        0.0  299.901611      200.000000
3  -21742.877686  -21862.161621  34502.040039 -21742.877686    0.019775 -21862.161621        0.0  119.283936      100.000000
4  -21716.334717  -21742.877686  34502.040039 -21716.334717  145.826904 -21742.877686        0.0   26.542969       26.542969
5  -21716.334717  -21742.857910  34575.497070 -21716.334717    1.000000 -21742.857910        0.0   26.523193        0.000000
6  -21592.897217  -21716.334717  34575.497070 -21592.897217  149.960693 -21716.334717        0.0  123.437500       23.437500
7  -21592.897217  -21616.334717  34652.059570 -21592.897217    1.000000 -21616.334717        0.0   23.437500        0.000000
8  -21553.063232  -21592.897217  34652.059570 -21553.063232   63.271484 -21592.897217        0.0   39.833984      -60.166016
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/19 22:20:58]  --------------------------------------------------------------------------------
[07/19 22:20:58]  Iteration: 199 (45 solution, 153 counterexamples)
[07/19 22:21:08]  Generator returned sat in 6.732512 secs.
[07/19 22:21:09]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:09]  Verifer returned unsat in 0.170750 secs.
[07/19 22:21:09]  Proved solution: 
[1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:09]  --------------------------------------------------------------------------------
[07/19 22:21:09]  Iteration: 200 (46 solution, 153 counterexamples)
[07/19 22:21:15]  Generator returned sat in 3.225814 secs.
[07/19 22:21:16]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:17]  Verifer returned unsat in 1.324660 secs.
[07/19 22:21:17]  Proved solution: 
[1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:17]  --------------------------------------------------------------------------------
[07/19 22:21:17]  Iteration: 201 (47 solution, 153 counterexamples)
[07/19 22:21:24]  Generator returned sat in 3.239490 secs.
[07/19 22:21:24]  Candidate solution: 
[1m[94mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:21:26]  Verifer returned unsat in 1.573069 secs.
[07/19 22:21:26]  Proved solution: 
[1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:21:26]  --------------------------------------------------------------------------------
[07/19 22:21:26]  Iteration: 202 (48 solution, 153 counterexamples)
[07/19 22:21:37]  Generator returned sat in 7.598313 secs.
[07/19 22:21:37]  Candidate solution: 
[1m[94mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:21:38]  Improved gap from 161/4096 to 29.6875
[07/19 22:21:38]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/19 22:21:38]  Verifer returned sat in 1.058395 secs.
[07/19 22:21:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -22795.376221  -22995.337158  35254.499512 -22795.376221    0.078369 -22995.337158        0.0  199.960938       99.960938
1  -22695.337158  -22795.337158  35254.499512 -22695.337158  300.000000 -22795.337158        0.0  100.000000      100.000000
2  -22695.337158  -22723.837158  35254.499512 -22695.337158    0.039307 -22723.837158        0.0   28.500000        0.000000
3  -22409.274658  -22695.336914  35254.499512 -22409.274658  314.562500 -22695.336914        0.0  286.062256      186.062500
4  -22409.274658  -22495.337158  35254.499512 -22409.274658  157.781250 -22495.337158        0.0   86.062500       86.062500
5  -22409.274658  -22495.337158  35268.437012 -22409.274658   79.390625 -22495.337158        0.0   86.062500        0.000000
6  -22379.587158  -22409.274658  35338.749268 -22379.587158  115.750000 -22409.274658        0.0   29.687500       -0.000244
7  -22350.899658  -22379.547852  35409.022705 -22350.899658   58.375000 -22379.547852        0.0   28.648193       -1.039307
8  -22349.860352  -22349.860352  35409.022705 -22349.860352   29.687500 -22349.860352        0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/19 22:21:38]  --------------------------------------------------------------------------------
[07/19 22:21:38]  Iteration: 203 (48 solution, 154 counterexamples)
[07/19 22:21:43]  Generator returned unsat in 0.878962 secs.
[07/19 22:21:43]  [96mNo more solutions found[0m
[07/19 22:21:43]  Final solutions:
[07/19 22:21:43]  0: [1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  1: [1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  2: [1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/19 22:21:43]  3: [1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  4: [1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  5: [1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  6: [1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  7: [1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  8: [1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  9: [1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  10: [1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  11: [1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  12: [1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  13: [1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  14: [1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  15: [1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  16: [1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/19 22:21:43]  17: [1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  18: [1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  19: [1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  20: [1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  21: [1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  22: [1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  23: [1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  24: [1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  25: [1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/19 22:21:43]  26: [1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  27: [1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  28: [1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  29: [1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  30: [1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  31: [1m[92mif(qbound[t][7]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  32: [1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  33: [1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  34: [1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  35: [1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  36: [1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  37: [1m[92mif(qbound[t][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  38: [1m[92mif(qbound[t][4]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  39: [1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  40: [1m[92mif(qbound[t][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  41: [1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  42: [1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  43: [1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  44: [1m[92mif(qbound[t][8]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  45: [1m[92mif(qbound[t][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/19 22:21:43]  46: [1m[92mif(qbound[t][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  47: [1m[92mif(qbound[t][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/19 22:21:43]  Took 1182.596180 secs.
