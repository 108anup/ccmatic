[08/17 16:11:25]  --------------------------------------------------------------------------------
[08/17 16:11:25]  Iteration: 1 (0 solution, 0 counterexamples)
[08/17 16:11:25]  Generator returned sat in 0.005504 secs.
[08/17 16:11:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:11:25]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:25]  Verifer returned sat in 0.314923 secs.
[08/17 16:11:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0           0.00       -4082.45   4082.45         0.00      0.05     -4082.45       0.00  4082.45         4082.45     9.0         -4082.45            -1             -1
1           0.00       -3982.45   4082.45         0.00      0.05     -3982.45       0.00  3982.45         3982.45     8.0         -4082.45         False           True
2           0.00       -3916.45   4082.45         0.00      0.05     -3916.45       0.00  3916.45         3882.45     8.0         -4082.45         False          False
3           0.00       -3782.45   4082.45         0.00      0.05     -3782.45       0.00  3782.45         3782.45     9.0         -4082.45         False          False
4           0.00       -3782.45   4082.45         0.00    602.10     -3782.45       0.00  3782.45         3682.45     9.0             0.00          True           True
5           0.00       -3682.45   4082.45         0.00   1606.20     -3682.45       0.00  3682.45         3582.45     7.0             0.00         False           True
6           0.00       -3522.45   4082.45         0.00   3682.40     -3522.45       0.00  3522.45         3482.45     7.0             0.00         False          False
7        4364.35       -3382.45   4082.45      4364.35   7886.80     -3382.45    3664.35  4082.45         4082.45     8.0             0.00         False          False
8       16857.50       -3282.45   4082.45     16857.50  16575.60     -3282.45   16057.50  4082.45         4082.45     9.0             0.00         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=2, buffer=81649/20.[0m
[08/17 16:11:26]  --------------------------------------------------------------------------------
[08/17 16:11:26]  Iteration: 2 (0 solution, 1 counterexamples)
[08/17 16:11:26]  Generator returned sat in 0.111322 secs.
[08/17 16:11:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:11:26]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:26]  Verifer returned sat in 0.246735 secs.
[08/17 16:11:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -3982.45000   -4206.700625   4082.45  -3982.45000    0.00125 -4206.700625    0.00000  224.250625       199.99875     9.0     -4206.700625            -1             -1
1    -3982.45000   -4082.450000   4082.45  -3982.45000    0.00125 -4082.450000    0.00000  100.000000        99.99875     3.0     -4206.700625         False           True
2    -3982.45000   -4082.448750   4082.45  -3982.45000    0.00125 -4082.448750    0.00000   99.998750        -0.00125     4.0     -4206.700625         False          False
3    -3782.45125   -3982.448750   4082.45  -3782.45125  299.99750 -3982.448750    0.00000  199.997500        99.99750     1.0     -4206.700625         False          False
4    -3382.44625   -3782.450000   4082.45  -3382.44625  600.00250 -3782.450000    0.00125  400.002500       400.00125     1.0     -4206.700625         False          False
5    -3382.44625   -3782.448750   4082.45  -3382.44625    0.01000 -3782.448750    0.00125  400.001250       300.00125     2.0     -4206.700625         False          False
6    -3180.94250   -3582.448750   4082.45  -3180.94250  601.50500 -3582.448750    1.50500  400.001250       400.00125     3.0     -4206.700625         False          False
7    -3180.94250   -3482.448750   4082.45  -3180.94250    0.01000 -3482.448750    1.50500  300.001250       300.00125     4.0     -4206.700625         False          False
8    -2879.43625   -3382.448750   4082.45  -2879.43625  601.50750 -3382.448750  103.01125  400.001250       400.00125     5.0     -4206.700625         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=320001/800.[0m
[08/17 16:11:27]  --------------------------------------------------------------------------------
[08/17 16:11:27]  Iteration: 3 (0 solution, 2 counterexamples)
[08/17 16:11:27]  Generator returned sat in 0.184120 secs.
[08/17 16:11:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:11:27]  Improved gap from 0.05 to 100
[08/17 16:11:28]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:11:28]  Verifer returned sat in 0.397249 secs.
[08/17 16:11:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3604.149375   -3804.149375   4082.45 -3604.149375     0.025 -3804.149375      0.000  200.000         200.000     9.0     -3804.149375            -1             -1
1   -3604.149375   -3704.149375   4082.45 -3604.149375     0.025 -3704.149375      0.000  100.000         100.000     2.0     -3804.149375         False           True
2   -3604.149375   -3703.849375   4082.45 -3604.149375     0.025 -3703.849375      0.000   99.700           0.000     3.0     -3804.149375          True           True
3   -3106.349375   -3604.124375   4082.45 -3106.349375   597.500 -3604.124375      0.025  497.750         397.775     1.0     -3804.149375          True           True
4   -3106.349375   -3504.149375   4082.45 -3106.349375   297.750 -3504.149375      0.025  397.775         297.775     2.0     -3804.149375         False          False
5   -3106.349375   -3304.149375   4082.45 -3106.349375   397.750 -3304.149375      0.025  197.775         197.775     3.0     -3106.374375          True           True
6   -2706.524375   -3304.149375   4082.45 -2706.524375   597.600 -3304.149375     99.850  497.775         397.775     3.0     -3106.374375         False           True
7   -2706.524375   -3104.149375   4082.45 -2706.524375   297.800 -3104.149375     99.850  297.775         297.775     2.0     -3106.374375         False           True
8   -2506.499375   -3104.149375   4082.45 -2506.499375   497.800 -3104.149375     99.875  497.775         397.775     2.0     -3106.374375         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=2, buffer=15911/40.[0m
[08/17 16:11:28]  --------------------------------------------------------------------------------
[08/17 16:11:28]  Iteration: 4 (0 solution, 3 counterexamples)
[08/17 16:11:28]  Generator returned sat in 0.151482 secs.
[08/17 16:11:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:11:29]  Improved gap from 0.0 to 100
[08/17 16:11:29]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:11:29]  Verifer returned sat in 0.600503 secs.
[08/17 16:11:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3106.149375   -3306.099375    3484.4 -3106.149375    199.95 -3306.099375       0.00   199.95           99.95     9.0     -3306.099375            -1             -1
1   -3106.149375   -3206.099375    3484.4 -3106.149375    199.90 -3206.099375       0.00    99.95           -0.05     2.0     -3106.149375         False           True
2   -3006.099375   -3106.099375    3484.4 -3006.099375    200.00 -3106.099375       0.00   100.00            0.00     1.0     -3106.149375         False           True
3   -2706.499375   -3006.099375    3484.4 -2706.499375    399.60 -3006.099375       0.00   299.60          199.60     2.0     -3106.149375         False          False
4   -2706.499375   -2806.099375    3484.4 -2706.499375      0.50 -2806.099375       0.00    99.60           99.60     2.0     -2706.499375          True           True
5   -2706.499375   -2706.549375    3484.4 -2706.499375      0.50 -2706.549375       0.00     0.05           -0.40     3.0     -2706.499375         False           True
6   -2706.049375   -2706.099375    3484.4 -2706.049375      0.50 -2706.099375       0.00     0.05          -99.95     1.0     -2706.499375         False           True
7   -2253.599375   -2606.099375    3484.4 -2253.599375    452.50 -2606.099375       0.00   352.50          252.50     1.0     -2706.499375         False          False
8   -1851.599375   -2406.099375    3484.4 -1851.599375    754.50 -2406.099375     154.45   400.05          400.05     2.0     -2706.499375         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=8001/20.[0m
[08/17 16:11:30]  --------------------------------------------------------------------------------
[08/17 16:11:30]  Iteration: 5 (0 solution, 4 counterexamples)
[08/17 16:11:30]  Generator returned sat in 0.183501 secs.
[08/17 16:11:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:30]  Improved gap from 0.05 to 100
[08/17 16:11:31]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 16:11:31]  Verifer returned sat in 0.517218 secs.
[08/17 16:11:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2654.809814   -2654.859375  3484.399902 -2654.809814    0.049805 -2654.859375   0.000000    0.049561        0.049561     1.0     -2654.859375            -1             -1
1   -2455.009521   -2654.859375  3484.399902 -2455.009521  199.849854 -2654.859375   0.000000  199.849854       99.849854     1.0     -2654.859375         False          False
2   -2454.909424   -2454.959717  3484.399902 -2454.909424  199.949951 -2454.959717   0.000000    0.050293       -0.050049     1.0     -2654.859375         False          False
3   -2253.809570   -2454.859375  3484.399902 -2253.809570  201.150146 -2454.859375   0.000000  201.049805      101.049805     1.0     -2654.859375         False          False
4   -2253.809570   -2354.009521  3484.399902 -2253.809570  201.000000 -2354.009521   0.000000  100.199951        1.049805     2.0     -2654.859375         False          False
5   -2052.159668   -2253.759766  3484.399902 -2052.159668  301.849854 -2253.759766   0.000000  201.600098      102.699707     1.0     -2654.859375         False          False
6   -2051.559814   -2154.859375  3484.399902 -2051.559814  202.199951 -2154.859375   0.000000  103.299561        3.299561     2.0     -2654.859375         False          False
7   -1853.859375   -1954.859619  3484.399902 -1853.859375  301.000000 -1954.859619   0.000000  101.000244      101.000000     1.0     -2654.859375         False          False
8   -1554.709717   -1954.809814  3484.399902 -1554.709717  400.149902 -1954.809814   0.049805  400.050293      300.099854     2.0     -2654.859375         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=1229209/4096.[0m
[08/17 16:11:31]  --------------------------------------------------------------------------------
[08/17 16:11:31]  Iteration: 6 (0 solution, 5 counterexamples)
[08/17 16:11:31]  Generator returned sat in 0.093469 secs.
[08/17 16:11:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:11:32]  Improved gap from 51.50375 to 100
[08/17 16:11:33]  Improved number of small numbers from 68 to 83 out of a max of 114
[08/17 16:11:33]  Verifer returned sat in 1.256522 secs.
[08/17 16:11:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2814.517822   -2814.519531  3484.399902 -2814.517822    0.001709 -2814.519531        0.0    0.001709      -99.998215     1.0     -2814.519531            -1             -1
1   -2714.518066   -2714.519607  3484.399902 -2714.518066  100.001465 -2714.519607        0.0    0.001541      -99.998459     1.0     -2814.519531         False          False
2   -2414.521274   -2566.768774  3484.399902 -2414.521274  299.998333 -2566.768774        0.0  152.247500       99.998333     1.0     -2814.519531         False          False
3   -2414.521274   -2414.522940  3484.399902 -2414.521274    0.001709 -2414.522940        0.0    0.001667       -0.001667     2.0     -2414.521274         False          False
4   -2414.512940   -2414.519607  3484.399902 -2414.512940    0.010000 -2414.519607        0.0    0.006667      -99.993333     1.0     -2414.521274         False           True
5   -2116.014607   -2214.519607  3484.399902 -2116.014607  298.505000 -2214.519607        0.0   98.505000       98.505000     1.0     -2414.521274         False          False
6   -1714.517940   -2116.014648  3484.399902 -1714.517940  500.001667 -2116.014648        0.0  401.496708      400.001667     2.0     -2414.521274         False          False
7   -1714.517940   -2114.519531  3484.399902 -1714.517940    0.010000 -2114.519531        0.0  400.001591      300.001667     2.0     -1714.517940          True           True
8   -1714.517940   -1914.519775  3484.399902 -1714.517940    0.010000 -1914.519775        0.0  200.001835      200.001667     3.0     -1714.517940         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1638413/4096.[0m
[08/17 16:11:33]  --------------------------------------------------------------------------------
[08/17 16:11:33]  Iteration: 7 (0 solution, 6 counterexamples)
[08/17 16:11:34]  Generator returned sat in 0.397200 secs.
[08/17 16:11:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:11:34]  Improved gap from 0.0025 to 100
[08/17 16:11:34]  Improved number of small numbers from 57 to 114 out of a max of 114
[08/17 16:11:34]  Verifer returned sat in 0.379675 secs.
[08/17 16:11:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2649.265625   -2649.268066  3321.140869 -2649.265625    0.002686 -2649.268066        0.0    0.002441      -99.997559     2.0     -2649.268066            -1             -1
1   -2549.265625   -2549.267822  3321.140869 -2549.265625  100.002441 -2549.267822        0.0    0.002197      -99.997559     1.0     -2649.268066         False           True
2   -2249.270264   -2349.268066  3321.140869 -2249.270264  299.997559 -2349.268066        0.0   99.997803       99.997803     1.0     -2649.268066         False          False
3   -2249.270264   -2349.268066  3321.140869 -2249.270264   51.500000 -2349.268066        0.0   99.997803       -0.002197     1.0     -2249.270264         False          False
4   -2248.268066   -2249.268066  3321.140869 -2248.268066  101.000000 -2249.268066        0.0    1.000000      -99.000000     1.0     -2249.270264         False          False
5   -2049.268066   -2149.267822  3321.140869 -2049.268066  200.000000 -2149.267822        0.0   99.999756        0.000000     1.0     -2249.270264         False          False
6   -1751.267822   -2049.265381  3321.140869 -1751.267822  398.000000 -2049.265381        0.0  297.997559      198.000244     1.0     -2249.270264         False          False
7   -1255.265381   -1849.268066  3321.140869 -1255.265381  794.000000 -1849.268066        0.0  594.002686      594.002686     2.0     -2249.270264         False          False
8   -1255.265381   -1751.268066  3321.140869 -1255.265381    0.010000 -1751.268066        0.0  496.002686      494.002686     3.0     -1255.265381          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=608261/1024.[0m
[08/17 16:11:35]  --------------------------------------------------------------------------------
[08/17 16:11:35]  Iteration: 8 (0 solution, 7 counterexamples)
[08/17 16:11:35]  Generator returned sat in 0.169972 secs.
[08/17 16:11:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:11:35]  Improved gap from 0.0016666666666666668 to 100
[08/17 16:11:36]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/17 16:11:36]  Verifer returned sat in 0.622056 secs.
[08/17 16:11:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2649.265625   -2949.365479  3321.140625 -2649.265625     0.100098 -2949.365479     0.000000  300.099854      300.099854     3.0     -2949.365479            -1             -1
1   -2549.165527   -2949.365479  3321.140625 -2549.165527   400.199951 -2949.365479     0.100098  400.099854      300.099854     3.0     -2949.365479         False          False
2   -2449.265625   -2849.365479  3321.140625 -2449.265625   499.999756 -2849.365479     0.100098  399.999756      299.999756     4.0     -2949.365479         False          False
3     918.534424   -2734.365479  3321.140625   918.534424  3767.799805 -2734.365479  3267.800049  385.099854      300.099854     5.0     -2949.365479         False          False
4    2522.834473   -2649.165771  3321.140625  2522.834473  1989.399902 -2649.165771  4772.100098  399.900146      300.099854     4.0     -2249.265625          True           True
5    3265.734131   -2549.365479  3321.140625  3265.734131  1142.799805 -2549.365479  5414.999756  400.099854      300.099854     5.0     -2249.265625         False          False
6    3585.034180   -2449.365479  3321.140625  3585.034180   719.399902 -2449.365479  5634.299805  400.099854      300.099854     4.0     -2249.265625         False           True
7    3685.134277   -2249.365723  3321.140625  3685.134277   500.199951 -2249.365723  5634.399902  300.100098      300.099854     4.0     -2249.265625         False          False
8    3833.034180   -2249.365479  3321.140625  3833.034180   448.000000 -2249.365479  5682.299805  400.099854      300.099854     5.0     -2249.265625         False          False
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=1229209/4096.[0m
[08/17 16:11:37]  --------------------------------------------------------------------------------
[08/17 16:11:37]  Iteration: 9 (0 solution, 8 counterexamples)
[08/17 16:11:37]  Generator returned sat in 0.502277 secs.
[08/17 16:11:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:38]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:38]  Verifer returned sat in 0.223459 secs.
[08/17 16:11:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t   losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2649.265625   -2949.290625  3321.140625  -2649.265625      0.100098 -2949.290625      0.0000  300.0250        300.0250     3.0     -2949.290625            -1             -1
1   -2549.253125   -2949.290625  3321.140625  -2549.253125    400.037500 -2949.290625      0.0125  400.0250        300.0250     3.0     -2949.290625         False          False
2   -2449.265625   -2849.290625  3321.140625  -2449.265625    500.012500 -2849.290625      0.0125  400.0125        300.0125     4.0     -2949.290625         False          False
3    9952.321875   -2749.290625  3321.140625   9952.321875  12801.600000 -2749.290625  12301.5875  400.0250        300.0250     5.0     -2949.290625          True           True
4   15953.096875   -2549.290625  3321.140625  15953.096875   6400.800000 -2549.290625  18202.3625  300.0250        300.0250     4.0     -2249.265625          True           True
5   18853.471875   -2549.278125  3321.140625  18853.471875   3200.400000 -2549.278125  21002.7375  400.0125        300.0250     5.0     -2249.265625         False           True
6   20053.659375   -2349.290625  3321.140625  20053.659375   1600.200000 -2349.290625  22102.9250  300.0250        300.0250     4.0     -2249.265625         False           True
7   20553.734375   -2249.303125  3321.140625  20553.734375    800.100000 -2249.303125  22503.0000  300.0375        300.0250     4.0     -2249.265625         False           True
8   20653.746875   -2249.290625  3321.140625  20653.746875    400.050000 -2249.290625  22503.0125  400.0250        300.0250     5.0     -2249.265625         False           True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=12001/40.[0m
[08/17 16:11:38]  --------------------------------------------------------------------------------
[08/17 16:11:38]  Iteration: 10 (0 solution, 9 counterexamples)
[08/17 16:11:38]  Generator returned sat in 0.075087 secs.
[08/17 16:11:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:39]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:39]  Verifer returned sat in 0.241403 secs.
[08/17 16:11:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t    losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2649.265625   -2949.271875  3321.140625  -2649.265625      0.100098 -2949.271875      0.00000  300.00625       300.00625     4.0     -2949.271875            -1             -1
1   -2549.253125   -2949.271875  3321.140625  -2549.253125    400.018750 -2949.271875      0.01250  400.00625       300.00625     4.0     -2949.271875         False           True
2   -2449.265625   -2849.271875  3321.140625  -2449.265625    499.993750 -2849.271875      0.01250  399.99375       299.99375     3.0     -2949.271875         False           True
3    9982.140625   -2749.271875  3321.140625   9982.140625  12831.400000 -2749.271875  12331.40625  400.00625       300.00625     4.0     -2949.271875         False          False
4   15997.334375   -2549.290625  3321.140625  15997.334375   6415.200000 -2549.290625  18246.60000  300.02500       300.00625     4.0     -2249.265625          True           True
5   18904.409375   -2549.271875  3321.140625  18904.409375   3207.100000 -2549.271875  21053.67500  400.00625       300.00625     5.0     -2249.265625         False           True
6   20107.453125   -2349.290625  3321.140625  20107.453125   1603.050000 -2349.290625  22156.71875  300.02500       300.00625     4.0     -2249.265625         False           True
7   20608.453125   -2249.271875  3321.140625  20608.453125    801.025000 -2249.271875  22557.71875  300.00625       300.00625     4.0     -2249.265625         False           True
8   20708.459375   -2249.265625  3321.140625  20708.459375    400.012500 -2249.265625  22557.72500  400.00000       300.00625     5.0     -2249.265625         False           True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=48001/160.[0m
[08/17 16:11:39]  --------------------------------------------------------------------------------
[08/17 16:11:39]  Iteration: 11 (0 solution, 10 counterexamples)
[08/17 16:11:40]  Generator returned sat in 0.072886 secs.
[08/17 16:11:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:40]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:40]  Verifer returned sat in 0.225585 secs.
[08/17 16:11:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2711.104688   -3011.110938  3321.140625  -2711.104688      0.100098 -3011.110938      0.000000  300.006250      300.006250     4.0     -3011.110938            -1             -1
1   -2611.103125   -3011.110938  3321.140625  -2611.103125    400.007812 -3011.110938      0.001563  400.006250      300.006250     4.0     -3011.110938         False           True
2   -2511.104688   -2911.110938  3321.140625  -2511.104688    500.004687 -2911.110938      0.001563  400.004687      300.004687     3.0     -3011.110938         False           True
3    9982.140625   -2811.110938  3321.140625   9982.140625  12893.250000 -2811.110938  12393.245312  400.006250      300.006250     4.0     -3011.110938         False          False
4   16027.259375   -2611.110938  3321.140625  16027.259375   6445.125000 -2611.110938  18338.364063  300.006250      300.006250     4.0     -2311.104688          True           True
5   18948.315625   -2611.104688  3321.140625  18948.315625   3221.062500 -2611.104688  21159.420312  400.000000      300.006250     5.0     -2311.104688         False           True
6   20157.346875   -2411.110938  3321.140625  20157.346875   1609.031250 -2411.110938  22268.451562  300.006250      300.006250     4.0     -2311.104688         False           True
7   20660.356250   -2311.110938  3321.140625  20660.356250    803.015625 -2311.110938  22671.460938  300.006250      300.006250     4.0     -2311.104688         False           True
8   20760.357812   -2311.104688  3321.140625  20760.357812    400.007812 -2311.104688  22671.462500  400.000000      300.006250     5.0     -2311.104688         False           True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=48001/160.[0m
[08/17 16:11:41]  --------------------------------------------------------------------------------
[08/17 16:11:41]  Iteration: 12 (0 solution, 11 counterexamples)
[08/17 16:11:41]  Generator returned sat in 0.078981 secs.
[08/17 16:11:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:41]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:41]  Verifer returned sat in 0.207083 secs.
[08/17 16:11:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2711.104736   -3011.110938  3321.140625  -2711.104736      0.100098 -3011.110938      0.000000  300.006201      300.006201     4.0     -3011.110938            -1             -1
1   -2611.103125   -3011.110938  3321.140625  -2611.103125    400.007812 -3011.110938      0.001563  400.006250      300.006250     4.0     -3011.110938         False           True
2   -2511.104688   -2911.110938  3321.140625  -2511.104688    500.004687 -2911.110938      0.001563  400.004687      300.004687     3.0     -3011.110938         False           True
3   10013.115625   -2811.110938  3321.140625  10013.115625  12924.225000 -2811.110938  12424.220312  400.006250      300.006250     4.0     -3011.110938         False          False
4   16073.221875   -2611.110938  3321.140625  16073.221875   6460.112500 -2611.110938  18384.326562  300.006250      300.006250     4.0     -2311.104688          True           True
5   19001.271875   -2611.104688  3321.140625  19001.271875   3228.056250 -2611.104688  21212.376563  400.000000      300.006250     5.0     -2311.104688         False           True
6   20213.300000   -2411.110938  3321.140625  20213.300000   1612.028125 -2411.110938  22324.404687  300.006250      300.006250     4.0     -2311.104688         False           True
7   20717.307812   -2311.110938  3321.140625  20717.307812    804.014063 -2311.110938  22728.412500  300.006250      300.006250     4.0     -2311.104688         False           True
8   20817.308594   -2311.110156  3321.140625  20817.308594    400.007031 -2311.110156  22728.413281  400.005469      300.006250     5.0     -2311.104688         False           True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=48001/160.[0m
[08/17 16:11:42]  --------------------------------------------------------------------------------
[08/17 16:11:42]  Iteration: 13 (0 solution, 12 counterexamples)
[08/17 16:11:44]  Generator returned sat in 1.218489 secs.
[08/17 16:11:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:11:44]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:44]  Verifer returned sat in 0.219566 secs.
[08/17 16:11:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2711.004687   -3063.104688  3321.140625  -2711.004687      0.100098 -3063.104688      0.000000  352.100000           352.1     3.0     -3063.104688            -1             -1
1   -2610.904687   -2963.304688  3321.140625  -2610.904687    452.200000 -2963.304688      0.100000  352.300000           352.1     3.0     -3063.104688         False          False
2   -2511.004687   -2943.071354  3321.140625  -2511.004687    452.200000 -2943.071354      0.100000  431.966667           352.0     4.0     -3063.104688         False          False
3   18781.338542   -2763.104688  3321.140625  18781.338542  21724.309896 -2763.104688  21192.343229  352.100000           352.1     5.0     -3063.104688         False          False
4   18881.238542   -2763.104688  3321.140625  18881.238542    452.000000 -2763.104688  21192.343229  452.000000           352.0     5.0     -2311.104688          True           True
5   19307.438542   -2611.004687  3321.140625  19307.438542    878.200000 -2611.004687  21518.443229  400.000000           352.1     5.0     -2311.104688         False           True
6   19407.538542   -2499.104688  3321.140625  19407.538542    500.100000 -2499.104688  21518.543229  388.100000           352.1     4.0     -2311.104688         False           True
7   19417.438542   -2411.004687  3321.140625  19417.438542    398.000000 -2411.004687  21518.543229  309.900000           262.0     5.0     -2311.104688         False          False
8   20056.638542   -2311.104688  3321.140625  20056.638542    949.100000 -2311.104688  21967.643229  400.100000           352.1     5.0     -2311.104688         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=3521/10.[0m
[08/17 16:11:44]  --------------------------------------------------------------------------------
[08/17 16:11:44]  Iteration: 14 (0 solution, 13 counterexamples)
[08/17 16:11:45]  Generator returned sat in 0.081323 secs.
[08/17 16:11:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:11:46]  Improved number of small numbers from 73 to 73 out of a max of 113
[08/17 16:11:46]  Verifer returned sat in 1.028908 secs.
[08/17 16:11:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2711.004883   -3063.771354  3321.140625  -2711.004883      0.100098 -3063.771354      0.000146  352.766325      352.099658     3.0     -3063.771354            -1             -1
1   -2610.904687   -2963.971061  3321.140625  -2610.904687    452.866520 -2963.971061      0.100000  352.966374      352.100000     3.0     -3063.771354         False          False
2   -2511.004541   -2943.737923  3321.140625  -2511.004541    452.866520 -2943.737923      0.100000  432.633382      352.000146     4.0     -3063.771354         False          False
3   18781.338542   -2763.104688  3321.140625  18781.338542  21724.976465 -2763.104688  21192.343229  352.100000      352.100000     5.0     -3063.771354         False          False
4   18881.238542   -2763.104688  3321.140625  18881.238542    452.000000 -2763.104688  21192.343229  452.000000      352.000000     5.0     -2311.104688          True           True
5   19308.104915   -2611.004687  3321.140625  19308.104915    878.866374 -2611.004687  21519.109603  400.000000      352.100000     5.0     -2311.104688         False           True
6   19408.204769   -2498.971178  3321.140625  19408.204769    500.099854 -2498.971178  21519.209456  387.966491      352.100000     4.0     -2311.104688         False           True
7   19417.438542   -2411.004687  3321.140625  19417.438542    397.200264 -2411.004687  21519.209456  309.233773      261.333773     5.0     -2311.104688         False          False
8   20056.105164   -2311.104736  3321.140625  20056.105164    947.900396 -2311.104736  21967.109852  400.100049      352.100000     5.0     -2311.104688         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=3521/10.[0m
[08/17 16:11:47]  --------------------------------------------------------------------------------
[08/17 16:11:47]  Iteration: 15 (0 solution, 14 counterexamples)
[08/17 16:11:48]  Generator returned sat in 0.637203 secs.
[08/17 16:11:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:11:48]  Improved gap from 0.05 to 35.9375
[08/17 16:11:48]  Improved number of small numbers from 90 to 114 out of a max of 114
[08/17 16:11:48]  Verifer returned sat in 0.808700 secs.
[08/17 16:11:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18081.405029   -3211.071289  3321.140625  18081.405029    0.066895 -3211.071289  21192.276367  100.199951        0.199951     8.0     -3211.071289            -1             -1
1   18181.338379   -3110.871582  3321.140625  18181.338379  200.133301 -3110.871582  21192.276367   99.933594        0.133301     7.0     -3211.071289         False           True
2   18281.471680   -2911.071289  3321.140625  18281.471680  200.066895 -2911.071289  21192.343018    0.199951        0.199951     1.0     -2910.871338          True           True
3   18355.146729   -2884.379639  3321.140625  18355.146729   73.875000 -2884.379639  21192.343018   47.183350      -26.125000     1.0     -2837.196289         False          False
4   18381.338379   -2811.071289  3385.203125  18381.338379   73.375000 -2811.071289  21192.343018    0.066650      -35.870850     1.0     -2837.196289         False          False
5   18454.146729   -2775.133789  3443.082520  18454.146729   72.875000 -2775.133789  21192.343018   36.937500       -5.183105     1.0     -2837.196289         False          False
6   18489.584229   -2733.012939  3507.144775  18489.584229   72.375000 -2733.012939  21192.343018   30.254150       -5.683350     1.0     -2837.196289         False          False
7   18531.205078   -2697.075439  3571.207275  18531.205078   71.875000 -2697.075439  21192.343018   35.937500        0.000000     1.0     -2837.196289         False          False
8   18566.642578   -2661.137939  3571.207292  18566.642578   71.375000 -2661.137939  21192.343018   35.437500      -64.562484     2.0     -2837.196289         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819/4096.[0m
[08/17 16:11:49]  --------------------------------------------------------------------------------
[08/17 16:11:49]  Iteration: 16 (0 solution, 15 counterexamples)
[08/17 16:11:50]  Generator returned sat in 0.096552 secs.
[08/17 16:11:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:11:51]  Improved gap from 32.9375 to 35.9375
[08/17 16:11:51]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/17 16:11:51]  Verifer returned sat in 1.303842 secs.
[08/17 16:11:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18011.064941   -3280.778076  3267.957275  18011.064941  180.649902 -3280.778076  21192.343018  99.500000       99.499756     1.0     -3280.778076            -1             -1
1   18092.214844   -3181.177979  3267.957275  18092.214844  180.649902 -3181.177979  21192.343018  81.049805       80.649658     1.0     -3280.778076         False          False
2   18092.214844   -3180.777832  3287.207275  18092.214844   80.950000 -3180.777832  21192.343018  80.649658       -0.100342     2.0     -3100.128174         False          False
3   18092.415283   -3100.027832  3351.269531  18092.415283   80.850098 -3100.027832  21192.343018   0.100098      -35.837646     1.0     -3099.927734         False           True
4   18171.165283   -3021.277832  3369.544922  18171.165283   78.850098 -3021.277832  21192.343018   0.100098      -38.812256     1.0     -3099.927734         False          False
5   18247.915283   -2982.365479  3431.607178  18247.915283   76.850098 -2982.365479  21192.343018  37.937744        0.000000     1.0     -3099.927734         False          False
6   18284.827637   -2944.327881  3494.694580  18284.827637   74.850098 -2944.327881  21192.343018  36.812500       -0.000244     1.0     -3099.927734         False          False
7   18320.865234   -2907.415527  3558.657227  18320.865234   72.850098 -2907.415527  21192.343018  35.937744        0.000000     1.0     -3099.927734         False          False
8   18355.777588   -2871.377930  3558.657471  18355.777588   70.850098 -2871.377930  21192.343018  34.812500      -65.087402     1.0     -3099.927734         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=407551/4096.[0m
[08/17 16:11:52]  --------------------------------------------------------------------------------
[08/17 16:11:52]  Iteration: 17 (0 solution, 16 counterexamples)
[08/17 16:11:56]  Generator returned sat in 3.893482 secs.
[08/17 16:11:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:11:56]  Improved gap from 0.00015625 to 100
[08/17 16:11:57]  Improved number of small numbers from 51 to 59 out of a max of 114
[08/17 16:11:57]  Verifer returned sat in 1.201141 secs.
[08/17 16:11:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17819.317627   -3522.769082  3512.241025  17819.317627   200.000000 -3522.769082  21192.343018  149.743691      149.743691     1.0     -3522.769082            -1             -1
1   17869.573936   -3522.769082  3512.241025  17869.573936   200.000000 -3522.769082  21192.343018  200.000000      100.000000     1.0     -3522.769082         False          False
2   17869.573936   -3373.022832  3512.241025  17869.573936   199.997559 -3373.022832  21192.343018   50.253750        0.000000     2.0     -3322.769082         False          False
3   17869.573936   -3322.769082  3512.241025  17869.573936    50.251250 -3322.769082  21192.343018    0.000000     -100.000000     3.0     -3322.769082         False          False
4   17969.576436   -3222.769082  3512.241025  17969.576436   100.002500 -3222.769082  21192.343018    0.002500      -99.997500     1.0     -3322.769082         False           True
5   18621.075186   -3022.769082  3512.241025  18621.075186   651.501250 -3022.769082  21192.343018  451.501250      451.501250     1.0     -3322.769082         False          False
6   19197.332061   -3022.766602  3512.241025  19197.332061  1027.758125 -3022.766602  21620.098643  600.000020      500.002500     2.0     -3322.769082         False          False
7   19197.332061   -2822.769287  3512.241025  19197.332061     0.010000 -2822.769287  21620.098643  400.002705      400.002500     3.0     -3322.769082         False          False
8   19197.332061   -2822.769043  3512.241025  19197.332061     0.010000 -2822.769043  21620.098643  400.002461      300.002500     4.0     -2422.766582          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=200001/400.[0m
[08/17 16:11:58]  --------------------------------------------------------------------------------
[08/17 16:11:58]  Iteration: 18 (0 solution, 17 counterexamples)
[08/17 16:11:59]  Generator returned sat in 0.490283 secs.
[08/17 16:11:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:11:59]  Improved gap from 0.0 to 100
[08/17 16:12:00]  Improved number of small numbers from 48 to 77 out of a max of 114
[08/17 16:12:00]  Verifer returned sat in 1.277373 secs.
[08/17 16:12:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18897.313721   -2695.029297  3512.241025  18897.313721    0.000732 -2695.029297  21192.343018  400.000000      399.999993     4.0     -2695.029297            -1             -1
1   18897.313721   -2695.027207  3512.241025  18897.313721    0.000977 -2695.027207  21192.343018  399.997910      299.999993     4.0     -2695.029297         False          False
2   18897.313721   -2544.778874  3512.241025  18897.313721  399.997803 -2544.778874  21192.343018  249.749577      199.999993     5.0     -2695.029297         False          False
3   18897.313721   -2395.030273  3512.241025  18897.313721    0.000977 -2395.030273  21192.343018  100.000977       99.999993     6.0     -2295.029297         False          False
4   18897.313721   -2395.029290  3512.241025  18897.313721    0.010000 -2395.029290  21192.343018   99.999993       -0.000007     7.0     -2295.029297         False          False
5   19397.314561   -2295.029290  3512.241025  19397.314561  600.000833 -2295.029290  21192.343851  500.000000      400.000000     1.0     -2295.029297         False           True
6   19397.314561   -2195.029053  3512.241025  19397.314561  499.999167 -2195.029053  21192.343851  399.999762      300.000000     2.0     -2295.029297         False          False
7   19397.314561   -1995.029297  3512.241025  19397.314561    0.010000 -1995.029297  21192.343851  200.000007      200.000000     3.0     -2295.029297         False          False
8   19397.314561   -1895.029297  3512.241025  19397.314561    0.010000 -1895.029297  21192.343851  100.000007      100.000000     4.0     -2295.029297         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=400.[0m
[08/17 16:12:01]  --------------------------------------------------------------------------------
[08/17 16:12:01]  Iteration: 19 (0 solution, 18 counterexamples)
[08/17 16:12:05]  Generator returned sat in 3.703078 secs.
[08/17 16:12:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:12:05]  Improved number of small numbers from 64 to 113 out of a max of 113
[08/17 16:12:05]  Verifer returned sat in 0.289911 secs.
[08/17 16:12:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18895.813477   -2695.029541  3512.240967  18895.813477    0.000244 -2695.029541  21192.343018  398.500000      398.499512     9.0     -2695.029541            -1             -1
1   18895.813477   -2695.029053  3512.240967  18895.813477    0.000244 -2695.029053  21192.343018  398.499512      298.499512     3.0     -2695.029541         False           True
2   18895.813477   -2544.528809  3512.240967  18895.813477  398.499268 -2544.528809  21192.343018  247.999268      198.499512     4.0     -2695.029541         False          False
3   18895.813477   -2495.029053  3512.240967  18895.813477    0.000244 -2495.029053  21192.343018  198.499512       98.499512     5.0     -2296.529541         False          False
4   18895.813477   -2395.029053  3512.240967  18895.813477    0.010000 -2395.029053  21192.343018   98.499512       -1.500488     6.0     -2296.529541         False          False
5   19395.813965   -2295.029053  3512.240967  19395.813965  598.500000 -2295.029053  21192.343262  498.499756      398.499756     1.0     -2296.529541         False           True
6   19395.813965   -2195.029053  3512.240967  19395.813965  498.499512 -2195.029053  21192.343262  398.499756      298.499756     2.0     -2296.529541         False          False
7   19395.813965   -1995.029297  3512.240967  19395.813965    0.010000 -1995.029297  21192.343262  198.500000      198.499756     3.0     -2296.529541         False          False
8   19395.813965   -1895.029297  3512.240967  19395.813965    0.010000 -1895.029297  21192.343262   98.500000       98.499756     4.0     -2296.529541         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1632255/4096.[0m
[08/17 16:12:06]  --------------------------------------------------------------------------------
[08/17 16:12:06]  Iteration: 20 (0 solution, 19 counterexamples)
[08/17 16:12:09]  Generator returned sat in 2.349137 secs.
[08/17 16:12:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:12:09]  Improved number of small numbers from 47 to 113 out of a max of 113
[08/17 16:12:09]  Verifer returned sat in 0.513605 secs.
[08/17 16:12:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17080.773926   -4311.668945  3512.240723  17080.773926  200.399902 -4311.668945  21192.343018  200.099854      100.099854     9.0     -4311.668945            -1             -1
1   17080.974121   -4111.669189  3512.240723  17080.974121  200.300049 -4111.669189  21192.343018    0.300293        0.300049     2.0     -4111.368896         False           True
2   17280.874023   -4111.568848  3512.240723  17280.874023  200.200195 -4111.568848  21192.443115  199.999756      100.099854     2.0     -3911.569092         False          False
3   17380.774170   -3911.668945  3512.240723  17380.774170  299.899902 -3911.668945  21192.443115  100.000000      100.000000     2.0     -3911.569092         False          False
4   18229.224121   -3854.469238  3512.240723  18229.224121  948.449951 -3854.469238  21940.793213  142.900146      100.099854     2.0     -3911.569092         False          False
5   18599.223877   -3811.668945  3512.240723  18599.223877  512.899902 -3811.668945  22210.792969  200.099854      100.099854     3.0     -3911.569092         False          False
6   18997.423828   -3611.668945  3512.240723  18997.423828  598.299805 -3611.668945  22508.992920  100.099854      100.099854     2.0     -3511.569092          True           True
7   19495.823975   -3611.469238  3512.240723  19495.823975  598.500000 -3611.469238  22907.393066  199.900146      100.099854     2.0     -3511.569092         False          False
8   19780.423828   -3511.469238  3512.240723  19780.423828  484.500000 -3511.469238  23091.992920  199.900146      100.099854     2.0     -3511.569092         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=410009/4096.[0m
[08/17 16:12:10]  --------------------------------------------------------------------------------
[08/17 16:12:10]  Iteration: 21 (0 solution, 20 counterexamples)
[08/17 16:12:14]  Generator returned sat in 3.454613 secs.
[08/17 16:12:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:12:15]  Improved number of small numbers from 52 to 56 out of a max of 113
[08/17 16:12:15]  Verifer returned sat in 1.096403 secs.
[08/17 16:12:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t  cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16880.823975   -4211.469092  3512.240723  16880.823975   299.950 -4211.469092  20992.343115   99.949951       -0.050049     9.0     -4211.469092            -1             -1
1   17080.774023   -4111.469092  3512.240723  17080.774023   299.900 -4111.469092  20992.343115  199.900000       99.900000     1.0     -3911.569092         False           True
2   17280.874023   -4011.469092  3512.240723  17280.874023   400.000 -4011.469092  21092.393115  199.950000       99.950000     2.0     -3911.569092         False          False
3   17380.924023   -3811.469092  3512.240723  17380.924023   300.000 -3811.469092  21092.443115   99.950000       99.950000     1.0     -3711.519092         False          False
4   17880.474023   -3711.469092  3512.240723  17880.474023   599.500 -3711.469092  21491.993115   99.950000       99.950000     1.0     -3711.519092         False          False
5   18380.024023   -3711.419092  3512.240723  18380.024023   599.500 -3711.419092  21891.543115  199.900000       99.950000     2.0     -3711.519092         False          False
6   18629.699023   -3511.469092  3512.240723  18629.699023   449.575 -3511.469092  22041.218115   99.950000       99.950000     1.0     -3711.519092         False          False
7   18979.249023   -3411.469092  3512.240723  18979.249023   449.500 -3411.469092  22290.768115   99.950000       99.950000     1.0     -3711.519092         False          False
8   19328.799023   -3411.468994  3512.240723  19328.799023   449.500 -3411.468994  22540.318115  199.949902       99.950000     2.0     -3711.519092         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=1999/20.[0m
[08/17 16:12:16]  --------------------------------------------------------------------------------
[08/17 16:12:16]  Iteration: 22 (0 solution, 21 counterexamples)
[08/17 16:12:17]  Generator returned sat in 0.084519 secs.
[08/17 16:12:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:12:17]  Improved gap from 0.0008333333333333334 to 48.4375
[08/17 16:12:17]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/17 16:12:17]  Verifer returned sat in 0.643981 secs.
[08/17 16:12:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18677.691406   -2863.091553  3512.240723  18677.691406    0.002500 -2863.091553  20992.343018  548.439941      448.439941     8.0     -2863.091553            -1             -1
1   18677.691406   -2663.091553  3512.240723  18677.691406  548.439941 -2663.091553  20992.343018  348.439941      348.439941     8.0     -2863.091553         False          False
2   18677.691406   -2566.198975  3512.240723  18677.691406  348.439941 -2566.198975  20992.343018  251.547363      248.439941     6.0     -2314.651611         False          False
3   18677.691406   -2517.766357  3512.240723  18677.691406  251.547363 -2517.766357  20992.343018  203.114746      148.439941     7.0     -2314.651611         False          False
4   18677.691406   -2363.091553  3512.240723  18677.691406    0.010000 -2363.091553  20992.343018   48.439941       48.439941     8.0     -2314.651611         False          False
5   18677.691406   -2363.089111  3563.800781  18677.691406    0.010000 -2363.089111  20992.343018   48.437500        0.000000     9.0     -2314.651611         False          False
6   18730.808838   -2314.651611  3610.680908  18730.808838  101.554932 -2314.651611  20992.343018   53.117432       -0.002441     9.0     -2314.651611         False           True
7   18779.248779   -2261.531738  3662.243408  18779.248779  101.557373 -2261.531738  20992.343018   48.437500        0.000000     1.0     -2314.651611         False           True
8   18779.248779   -2213.094238  3713.805908  18779.248779    0.010000 -2213.094238  20992.343018    0.000000      -48.437500     2.0     -2314.651611         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1836811/4096.[0m
[08/17 16:12:18]  --------------------------------------------------------------------------------
[08/17 16:12:18]  Iteration: 23 (0 solution, 22 counterexamples)
[08/17 16:12:21]  Generator returned sat in 2.631187 secs.
[08/17 16:12:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:12:21]  Improved gap from 0.00875 to 100
[08/17 16:12:22]  Improved number of small numbers from 65 to 78 out of a max of 114
[08/17 16:12:22]  Verifer returned sat in 1.113404 secs.
[08/17 16:12:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18029.256592   -3163.084053  3512.240723  18029.256592    0.002441 -3163.084053  20992.341797  199.998848       99.998848     8.0     -3163.084053            -1             -1
1   18429.258965   -2963.084229  3512.240723  18429.258965  600.001221 -2963.084229  20992.343018  400.000176      400.000000     1.0     -3163.084053         False           True
2   18429.258965   -2863.085205  3512.240723  18429.258965  400.000000 -2863.085205  20992.343018  300.001152      300.000000     2.0     -2563.084053         False          False
3   18429.258965   -2863.084053  3512.240723  18429.258965    1.670556 -2863.084053  20992.343018  300.000000      200.000000     3.0     -2563.084053         False          False
4   18429.258965   -2663.084229  3512.240723  18429.258965    1.005833 -2663.084229  20992.343018  100.000176      100.000000     4.0     -2563.084053         False          False
5   18429.258965   -2563.092803  3512.240723  18429.258965    0.010000 -2563.092803  20992.343018    0.008750        0.000000     5.0     -2563.084053         False          False
6   18429.260215   -2563.084053  3512.240723  18429.260215    0.010000 -2563.084053  20992.343018    0.001250      -99.998750     6.0     -2563.084053         False          False
7   18729.768965   -2363.084053  3512.240723  18729.768965  300.510000 -2363.084053  20992.343018  100.510000      100.510000     1.0     -2563.084053         False           True
8   19078.523965   -2363.082764  3512.240723  19078.523965  449.265000 -2363.082764  20992.343018  449.263711      349.265000     2.0     -2563.084053         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=400.[0m
[08/17 16:12:23]  --------------------------------------------------------------------------------
[08/17 16:12:23]  Iteration: 24 (0 solution, 23 counterexamples)
[08/17 16:12:26]  Generator returned sat in 2.674222 secs.
[08/17 16:12:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:12:28]  Improved number of small numbers from 34 to 40 out of a max of 113
[08/17 16:12:28]  Verifer returned sat in 1.338059 secs.
[08/17 16:12:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16879.035215   -4961.312803  5410.469473  16879.035215   699.999756 -4961.312803  21140.348018  700.000000      700.000000     8.0     -4961.312803            -1             -1
1   16879.035215   -4861.315303  5410.469473  16879.035215   699.997314 -4861.315303  21140.348018  600.002500      600.000000     8.0     -4261.312803         False          False
2   16979.030029   -4861.312803  5410.469473  16979.030029   699.997314 -4861.312803  21140.348018  699.994814      599.994814     8.0     -4261.312803         False          False
3   16979.032715   -4661.315303  5410.469473  16979.032715   699.997500 -4661.315303  21140.348018  500.000000      499.997500     9.0     -4261.312803         False          False
4   18479.522715   -4661.312803  5410.469473  18479.522715  2000.490000 -4661.312803  22340.318018  800.517500      700.517500     8.0     -4261.312803         False           True
5   18479.522715   -4461.312803  5410.469473  18479.522715     0.010000 -4461.312803  22340.318018  600.517500      600.517500     9.0     -4261.312803         False          False
6   18679.525215   -4461.312744  5410.469473  18679.525215   800.520000 -4461.312744  22340.320518  800.517441      700.517500     9.0     -4261.312803         False           True
7   18679.525215   -4261.312803  5410.469473  18679.525215     0.010000 -4261.312803  22340.320518  600.517500      600.517500     9.0     -4261.312803         False           True
8   18879.527715   -4161.312988  5410.469473  18879.527715   800.520000 -4161.312988  22340.323018  700.517686      700.517500     5.0     -4261.312803         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=280207/400.[0m
[08/17 16:12:28]  --------------------------------------------------------------------------------
[08/17 16:12:28]  Iteration: 25 (0 solution, 24 counterexamples)
[08/17 16:12:30]  Generator returned sat in 1.071692 secs.
[08/17 16:12:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:12:30]  Improved gap from 0.01125 to 100
[08/17 16:12:30]  Improved number of small numbers from 90 to 114 out of a max of 114
[08/17 16:12:30]  Verifer returned sat in 0.384941 secs.
[08/17 16:12:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18629.397705   -4410.920166  4810.352051  18629.397705    0.050000 -4410.920166  22340.317871  700.000000      600.000000     4.0     -4410.920166            -1             -1
1   18629.397705   -4310.370361  4810.352051  18629.397705    0.050000 -4310.370361  22340.317871  599.450195      500.000000     4.0     -4410.920166         False          False
2   18629.397705   -4110.920410  4810.352051  18629.397705  399.950000 -4110.920410  22340.317871  400.000244      400.000000     5.0     -4410.920166         False          False
3   18629.397705   -4110.870117  4810.352051  18629.397705  399.950000 -4110.870117  22340.317871  399.949951      300.000000     6.0     -4410.920166         False          False
4   18629.397705   -3910.920166  4810.352051  18629.397705  300.550049 -3910.920166  22340.317871  200.000000      200.000000     7.0     -3710.920166          True           True
5   18829.347900   -3811.220215  4810.352051  18829.347900  399.950195 -3811.220215  22340.317871  300.250244      299.950195     7.0     -3710.920166         False           True
6   18829.347900   -3710.920166  4810.352051  18829.347900  300.200195 -3710.920166  22340.317871  199.950195      199.950195     7.0     -3710.920166         False           True
7   19029.847656   -3710.920166  4810.352051  19029.847656  400.449951 -3710.920166  22340.317871  400.449951      300.449951     7.0     -3710.920166         False           True
8   19029.847656   -3510.920166  4810.352051  19029.847656  200.500000 -3510.920166  22340.317871  200.449951      200.449951     2.0     -3710.920166         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=600.[0m
[08/17 16:12:31]  --------------------------------------------------------------------------------
[08/17 16:12:31]  Iteration: 26 (0 solution, 25 counterexamples)
[08/17 16:12:33]  Generator returned sat in 1.329710 secs.
[08/17 16:12:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:12:33]  Improved number of small numbers from 66 to 113 out of a max of 113
[08/17 16:12:33]  Verifer returned sat in 0.245563 secs.
[08/17 16:12:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18629.397461   -4410.920410  4810.352051  18629.397461    0.049805 -4410.920410  22340.267822  700.050049      600.050049     8.0     -4410.920410            -1             -1
1   18629.397461   -4310.920166  4810.352051  18629.397461    0.050000 -4310.920166  22340.267822  600.049805      500.050049     8.0     -4410.920410         False          False
2   18629.397461   -4110.970215  4810.352051  18629.397461  270.866455 -4110.970215  22340.267822  400.099854      400.050049     8.0     -4410.920410         False          False
3   18629.397461   -4110.920410  4810.352051  18629.397461  270.866699 -4110.920410  22340.267822  400.050049      300.050049     9.0     -4410.920410         False          False
4   18629.397461   -3912.370361  4810.352051  18629.397461  269.366699 -3912.370361  22340.267822  201.500000      200.050049     8.0     -3710.870361          True           True
5   18830.947510   -3910.920410  4810.352051  18830.947510  403.050049 -3910.920410  22340.267822  401.600098      301.600098     9.0     -3710.870361         False          False
6   18830.947510   -3710.920410  4810.352051  18830.947510  401.550049 -3710.920410  22340.267822  201.600098      201.600098     9.0     -3710.870361         False           True
7   19029.397461   -3710.920410  4810.352051  19029.397461  400.050049 -3710.920410  22340.267822  400.050049      300.050049     9.0     -3710.870361         False           True
8   19029.397461   -3510.920410  4810.352051  19029.397461  398.550049 -3510.920410  22340.267822  200.050049      200.050049     4.0     -3710.870361         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=2457805/4096.[0m
[08/17 16:12:34]  --------------------------------------------------------------------------------
[08/17 16:12:34]  Iteration: 27 (0 solution, 26 counterexamples)
[08/17 16:12:35]  Generator returned sat in 0.307038 secs.
[08/17 16:12:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:12:35]  Improved number of small numbers from 109 to 109 out of a max of 113
[08/17 16:12:35]  Verifer returned sat in 0.176077 secs.
[08/17 16:12:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18629.397461   -4410.920410  4810.352051  18629.397461    0.049805 -4410.920410  22340.267822  700.050049      600.050049     8.0     -4410.920410            -1             -1
1   18629.397461   -4310.920166  4810.352051  18629.397461    0.050000 -4310.920166  22340.267822  600.049805      500.050049     8.0     -4410.920410         False          False
2   18629.397461   -4110.970215  4810.352051  18629.397461  270.866455 -4110.970215  22340.267822  400.099854      400.050049     8.0     -4410.920410         False          False
3   18629.397461   -4110.920410  4810.352051  18629.397461  271.200033 -4110.920410  22340.267822  400.050049      300.050049     9.0     -4410.920410         False          False
4   18629.397461   -3912.370361  4810.352051  18629.397461  269.700033 -3912.370361  22340.267822  201.500000      200.050049     8.0     -3710.870361          True           True
5   18830.947510   -3910.920410  4810.352051  18830.947510  403.050049 -3910.920410  22340.267822  401.600098      301.600098     9.0     -3710.870361         False          False
6   18830.947510   -3710.920410  4810.352051  18830.947510  401.550049 -3710.920410  22340.267822  201.600098      201.600098     9.0     -3710.870361         False           True
7   19029.397461   -3710.920410  4810.352051  19029.397461  400.050049 -3710.920410  22340.267822  400.050049      300.050049     9.0     -3710.870361         False           True
8   19029.397461   -3510.920410  4810.352051  19029.397461  398.550049 -3510.920410  22340.267822  200.050049      200.050049     4.0     -3710.870361         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=2457805/4096.[0m
[08/17 16:12:36]  --------------------------------------------------------------------------------
[08/17 16:12:36]  Iteration: 28 (0 solution, 27 counterexamples)
[08/17 16:12:39]  Generator returned sat in 1.828112 secs.
[08/17 16:12:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:12:40]  Improved number of small numbers from 41 to 61 out of a max of 113
[08/17 16:12:40]  Verifer returned sat in 1.374867 secs.
[08/17 16:12:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17980.156982   -5160.100342  4810.351807  17980.156982     0.099854 -5160.100342  22340.357578   799.899746      699.899766     6.0     -5160.100342            -1             -1
1   17980.156982   -5060.100342  4810.351807  17980.156982     0.100098 -5060.100342  22340.357578   699.899746      599.899766     7.0     -5160.100342         False          False
2   17980.156982   -4960.100342  4810.351807  17980.156982     0.100098 -4960.100342  22340.357578   599.899746      499.899766     8.0     -5160.100342         False          False
3   17980.156982   -4760.100361  4810.351807  17980.156982   334.600000 -4760.100361  22340.357578   399.899766      399.899766     9.0     -5160.100342         False          False
4   18080.157217   -4660.300361  4810.351807  18080.157217   499.900000 -4660.300361  22340.357578   400.100000      399.900000     9.0     -4260.200361          True           True
5   18427.907217   -4560.100361  4810.351807  18427.907217   747.850000 -4560.100361  22340.357578   647.650000      647.650000     9.0     -4260.200361         False           True
6   18900.032217   -4560.100361  4810.351807  18900.032217  1119.775000 -4560.100361  22340.357578  1119.775000     1019.775000     9.0     -4260.200361         False           True
7   19457.919717   -4360.100361  4810.351807  19457.919717  1677.662500 -4360.100361  22798.245078  1019.775000     1019.775000     4.0     -4260.200361         False           True
8   19457.919717   -4260.100586  4810.351807  19457.919717   150.100000 -4260.100586  22798.245078   919.775225      919.775000     4.0     -4260.200361         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=40791/40.[0m
[08/17 16:12:41]  --------------------------------------------------------------------------------
[08/17 16:12:41]  Iteration: 29 (0 solution, 28 counterexamples)
[08/17 16:12:45]  Generator returned sat in 3.055999 secs.
[08/17 16:12:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:12:46]  Improved number of small numbers from 41 to 54 out of a max of 113
[08/17 16:12:46]  Verifer returned sat in 1.171186 secs.
[08/17 16:12:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16980.062217   -5020.886475  4810.351807  16980.062217  400.000000 -5020.886475  21600.948578  400.000113        399.9975     6.0     -5020.886475            -1             -1
1   16980.062217   -5020.883861  4810.351807  16980.062217  399.997559 -5020.883861  21600.948578  399.997500        299.9975     6.0     -4620.886361         False          False
2   16980.062217   -4820.883861  4810.351807  16980.062217  399.995117 -4820.883861  21600.948578  199.997500        199.9975     6.0     -4620.886361         False          False
3   16980.064717   -4720.884033  4810.351807  16980.064717  200.000000 -4720.884033  21600.948578  100.000172        100.0000     7.0     -4620.883861         False          False
4   16980.064717   -4660.287861  4810.351807  16980.064717    0.010000 -4660.287861  21600.948578   39.404000          0.0000     8.0     -4620.883861         False          False
5   17480.069717   -4620.881348  4810.351807  17480.069717  539.409000 -4620.881348  21600.951078  499.999986        400.0025     1.0     -4620.883861         False           True
6   17480.069717   -4520.883789  4810.351807  17480.069717    0.010000 -4520.883789  21600.951078  400.002428        300.0025     2.0     -4620.883861         False          False
7   17480.069717   -4320.884033  4810.351807  17480.069717    0.010000 -4320.884033  21600.951078  200.002672        200.0025     3.0     -4620.883861         False          False
8   17480.069717   -4320.881592  4810.351807  17480.069717    0.010000 -4320.881592  21600.951078  200.000230        100.0025     4.0     -4620.883861         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=160001/400.[0m
[08/17 16:12:46]  --------------------------------------------------------------------------------
[08/17 16:12:46]  Iteration: 30 (0 solution, 29 counterexamples)
[08/17 16:12:50]  Generator returned sat in 2.931460 secs.
[08/17 16:12:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:12:51]  Improved gap from 0.0 to 48.4375
[08/17 16:12:51]  Improved number of small numbers from 38 to 114 out of a max of 114
[08/17 16:12:51]  Verifer returned sat in 0.630525 secs.
[08/17 16:12:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16980.064697   -5020.884033  4810.351807  16980.064697   0.099854 -5020.884033  21548.023438  452.925293      452.925049     5.0     -5020.884033            -1             -1
1   16980.064697   -4920.884033  4810.351807  16980.064697   0.099854 -4920.884033  21548.023438  352.925293      352.925049     5.0     -5020.884033         False          False
2   16980.064697   -4820.883789  4810.351807  16980.064697   0.100000 -4820.883789  21548.023438  252.925049      252.925049     6.0     -5020.884033         False          False
3   16980.064697   -4764.708740  4810.351807  16980.064697   0.100000 -4764.708740  21548.023438  196.750000      152.925049     7.0     -5020.884033         False          False
4   16980.064697   -4620.983887  4810.351807  16980.064697   1.500000 -4620.983887  21548.023438   53.025146       52.925049     8.0     -5020.884033         False          False
5   16980.064697   -4620.883789  4857.426758  16980.064697   1.500000 -4620.883789  21548.023438   52.925049        0.000000     9.0     -5020.884033         False          False
6   17025.639648   -4567.958740  4908.989258  17025.639648  98.500000 -4567.958740  21548.023438   45.574951       -2.862549     9.0     -4522.383789          True           True
7   17076.939697   -4519.521240  4960.551758  17076.939697  96.875000 -4519.521240  21548.023438   48.437500        0.000000     1.0     -4522.383789         False           True
8   17076.939697   -4471.083740  4960.551758  17076.939697   1.500000 -4471.083740  21548.023438    0.000000     -100.000000     2.0     -4522.383789         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1855181/4096.[0m
[08/17 16:12:52]  --------------------------------------------------------------------------------
[08/17 16:12:52]  Iteration: 31 (0 solution, 30 counterexamples)
[08/17 16:12:53]  Generator returned sat in 0.400870 secs.
[08/17 16:12:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:12:53]  Improved gap from 48.4375 to 48.4375
[08/17 16:12:54]  Improved number of small numbers from 97 to 114 out of a max of 114
[08/17 16:12:54]  Verifer returned sat in 0.750131 secs.
[08/17 16:12:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16980.064453   -5016.396240  4805.864258  16980.064453    0.049805 -5016.396240  21548.023193  448.437500      448.437500     7.0      -5016.39624            -1             -1
1   16980.064453   -5016.346436  4805.864258  16980.064453    0.050049 -5016.346436  21548.023193  448.387695      348.437500     7.0      -5016.39624         False          False
2   16980.064453   -4816.396240  4805.864258  16980.064453    0.050049 -4816.396240  21548.023193  248.437500      248.437500     8.0      -5016.39624         False          False
3   16980.064453   -4768.058838  4805.864258  16980.064453    0.050049 -4768.058838  21548.023193  200.100098      148.437500     9.0      -5016.39624         False          False
4   16980.064453   -4618.358643  4805.864258  16980.064453  123.668701 -4618.358643  21548.023193   50.399902       48.437500     8.0      -4567.95874          True           True
5   16980.064453   -4616.396240  4857.426758  16980.064453    1.000000 -4616.396240  21548.023193   48.437500        0.000000     9.0      -4567.95874         False          False
6   17031.126953   -4567.958740  4906.314453  17031.126953   99.500000 -4567.958740  21548.023193   51.062500       -0.049805     9.0      -4567.95874         False           True
7   17079.614502   -4516.846191  4957.876709  17079.614502   99.550049 -4516.846191  21548.023193   48.437500        0.000000     1.0      -4567.95874         False           True
8   17079.614502   -4468.408691  4957.876709  17079.614502    1.000000 -4468.408691  21548.023193    0.000000     -100.000000     2.0      -4567.95874         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=7175/16.[0m
[08/17 16:12:54]  --------------------------------------------------------------------------------
[08/17 16:12:54]  Iteration: 32 (0 solution, 31 counterexamples)
[08/17 16:12:57]  Generator returned sat in 1.566983 secs.
[08/17 16:12:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:12:58]  Improved gap from 0.0 to 48.4375
[08/17 16:12:58]  Improved number of small numbers from 45 to 114 out of a max of 114
[08/17 16:12:58]  Verifer returned sat in 0.951700 secs.
[08/17 16:12:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16626.229492   -4969.805908  4637.298584  16626.229492  148.009766 -4969.805908  21548.023193  48.012207        0.002441     3.0     -4969.805908            -1             -1
1   16726.227295   -4921.792236  4637.298584  16726.227295  148.010010 -4921.792236  21548.023193  99.996338        0.000244     1.0     -4969.805908         False           True
2   16826.227295   -4721.796143  4637.298584  16826.227295  199.996338 -4721.796143  21548.023193   0.000244        0.000244     1.0     -4969.805908         False          False
3   16871.100830   -4676.923584  4643.988525  16871.100830   44.873779 -4676.923584  21548.023193   0.001221      -48.436279     1.0     -4676.922363         False          False
4   17019.540771   -4528.495117  4643.988525  17019.540771  148.441162 -4528.495117  21548.024414   0.011475        0.002441     1.0     -4676.922363         False          False
5   17019.540771   -4528.486084  4694.807861  17019.540771    0.010000 -4528.486084  21548.024414   0.002441      -49.178223     2.0     -4676.922363         False          False
6   17118.193359   -4479.305420  4745.333496  17118.193359   98.655029 -4479.305420  21548.024414  49.474365        0.000000     1.0     -4676.922363         False          False
7   17169.528076   -4429.830078  4793.998779  17169.528076  100.809082 -4429.830078  21548.024414  51.333740        0.000000     1.0     -4676.922363         False          False
8   17169.528076   -4378.496338  4793.998779  17169.528076   51.332520 -4378.496338  21548.024414   0.000000     -100.000000     2.0     -4676.922363         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=5/2048.[0m
[08/17 16:12:58]  --------------------------------------------------------------------------------
[08/17 16:12:58]  Iteration: 33 (0 solution, 32 counterexamples)
[08/17 16:13:02]  Generator returned sat in 2.992136 secs.
[08/17 16:13:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:13:03]  Improved gap from 0.00125 to 100
[08/17 16:13:04]  Improved number of small numbers from 52 to 110 out of a max of 114
[08/17 16:13:04]  Verifer returned sat in 1.213000 secs.
[08/17 16:13:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16570.951904   -5553.122314  4637.29834  16570.951904  676.149902 -5553.122314  21547.924316  576.149902      550.399902     8.0     -5553.122314            -1             -1
1   16670.901855   -5452.972363  4637.29834  16670.901855  676.099854 -5452.972363  21547.924316  575.949902      550.349854     6.0     -4877.022461         False          False
2   16771.001953   -5427.372314  4637.29834  16771.001953  676.050000 -5427.372314  21547.974365  650.399902      550.399902     7.0     -4776.972412         False          False
3   16871.052002   -5327.372314  4637.29834  16871.052002  750.449951 -5327.372314  21548.024414  650.399902      550.399902     8.0     -4776.972412         False          False
4   16871.052002   -5127.372363  4637.29834  16871.052002    0.500000 -5127.372363  21548.024414  450.399951      450.399902     9.0     -4776.972412         False          False
5   17071.102051   -5027.372314  4637.29834  17071.102051  650.450000 -5027.372314  21548.074463  550.399902      550.399902     8.0     -4776.972412         False           True
6   17071.102051   -4976.972412  4637.29834  17071.102051    0.500000 -4976.972412  21548.074463  500.000000      450.399902     9.0     -4776.972412         False          False
7   17271.151855   -4827.372559  4637.29834  17271.151855  700.049805 -4827.372559  21548.124268  550.400146      550.399902     6.0     -4776.972412         False           True
8   17271.151855   -4727.372559  4637.29834  17271.151855    0.500000 -4727.372559  21548.124268  450.400146      450.399902     6.0     -4776.972412         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=2, buffer=1127219/2048.[0m
[08/17 16:13:04]  --------------------------------------------------------------------------------
[08/17 16:13:04]  Iteration: 34 (0 solution, 33 counterexamples)
[08/17 16:13:11]  Generator returned sat in 5.635196 secs.
[08/17 16:13:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:13:11]  Improved gap from 0.05 to 100
[08/17 16:13:11]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/17 16:13:11]  Verifer returned sat in 0.340732 secs.
[08/17 16:13:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16571.001953   -4977.022217  4637.298584  16571.001953    0.050049 -4977.022217  21547.924316    0.099854        0.099854     1.0     -4977.022217            -1             -1
1   16670.952148   -4977.022217  4637.298584  16670.952148  100.050049 -4977.022217  21547.924316  100.050049        0.050049     1.0     -4977.022217         False          False
2   16670.952148   -4877.022217  4637.298584  16670.952148   99.999756 -4877.022217  21547.924316    0.050049      -99.949951     2.0     -4876.972168         False          False
3   16871.052002   -4776.697266  4637.298584  16871.052002  200.149902 -4776.697266  21547.974365   99.774902        0.099854     1.0     -4876.972168         False          False
4   16971.102051   -4577.472412  4637.298584  16971.102051  199.824951 -4577.472412  21548.024414    0.550049        0.099854     1.0     -4876.972168         False          False
5   17369.601807   -4477.022217  4637.298584  17369.601807  399.049805 -4477.022217  21846.524170    0.099854        0.099854     1.0     -4876.972168         False          False
6   17769.001953   -4476.872314  4637.298584  17769.001953  399.500000 -4476.872314  22145.924316   99.949951        0.099854     1.0     -4876.972168         False          False
7   17968.376953   -4376.922363  4637.298584  17968.376953  299.324951 -4376.922363  22245.299316  100.000000        0.099854     2.0     -4876.972168         False          False
8   18068.427002   -4276.872314  4637.298584  18068.427002  200.050049 -4276.872314  22245.349365   99.949951        0.099854     1.0     -4876.972168         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=5, buffer=409/4096.[0m
[08/17 16:13:12]  --------------------------------------------------------------------------------
[08/17 16:13:12]  Iteration: 35 (0 solution, 34 counterexamples)
[08/17 16:13:14]  Generator returned sat in 0.886733 secs.
[08/17 16:13:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:13:14]  Improved number of small numbers from 85 to 113 out of a max of 113
[08/17 16:13:14]  Verifer returned sat in 0.246199 secs.
[08/17 16:13:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16571.001709   -4977.022461  4637.29834  16571.001709    0.049805 -4977.022461  21547.924316    0.099854        0.099609     2.0     -4977.022461            -1             -1
1   16670.951904   -4977.022217  4637.29834  16670.951904  100.050049 -4977.022217  21547.924316  100.049805        0.049805     2.0     -4977.022461         False          False
2   16670.951904   -4877.022217  4637.29834  16670.951904   99.999756 -4877.022217  21547.924316    0.049805      -99.950195     2.0     -4876.972412         False          False
3   16873.764160   -4776.459961  4637.29834  16873.764160  202.862061 -4776.459961  21550.686523   99.537598        0.099854     1.0     -4876.972412         False          False
4   16973.789062   -4577.947266  4637.29834  16973.789062  199.562500 -4577.947266  21550.711426    1.024902        0.099854     1.0     -4876.972412         False          False
5   17370.839111   -4477.022217  4637.29834  17370.839111  398.074951 -4477.022217  21847.761475    0.099854        0.099854     1.0     -4876.972412         False          False
6   17769.739258   -4476.872314  4637.29834  17769.739258  399.000000 -4476.872314  22146.661621   99.949951        0.099854     1.0     -4876.972412         False          False
7   17968.376953   -4376.922363  4637.29834  17968.376953  298.587646 -4376.922363  22245.299316  100.000000        0.099854     2.0     -4876.972412         False          False
8   18068.401855   -4276.872559  4637.29834  18068.401855  200.024902 -4276.872559  22245.324219   99.950195        0.099854     1.0     -4876.972412         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=5, buffer=409/4096.[0m
[08/17 16:13:15]  --------------------------------------------------------------------------------
[08/17 16:13:15]  Iteration: 36 (0 solution, 35 counterexamples)
[08/17 16:13:18]  Generator returned sat in 1.762815 secs.
[08/17 16:13:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:13:18]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:13:18]  Verifer returned sat in 0.232211 secs.
[08/17 16:13:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16571.001953   -4977.510010  4637.29834  16571.001953    0.049805 -4977.510010  21547.924316    0.587646        0.099854     1.0     -4977.510010            -1             -1
1   16670.989502   -4977.022217  4637.29834  16670.989502  100.575195 -4977.022217  21547.924316  100.087402        0.087402     2.0     -4977.510010         False          False
2   16670.989502   -4877.022217  4637.29834  16670.989502  100.074951 -4877.022217  21547.924316    0.087402      -99.912598     2.0     -4876.934814          True           True
3   16875.276611   -4776.459961  4637.29834  16875.276611  204.374512 -4776.459961  21552.198975   99.537598        0.099854     1.0     -4876.934814         False           True
4   16975.289062   -4577.947266  4637.29834  16975.289062  199.550049 -4577.947266  21552.211426    1.024902        0.099854     1.0     -4876.934814         False          False
5   17371.839111   -4477.022217  4637.29834  17371.839111  397.574951 -4477.022217  21848.761475    0.099854        0.099854     1.0     -4876.934814         False          False
6   17770.239258   -4476.872314  4637.29834  17770.239258  398.500000 -4476.872314  22147.161621   99.949951        0.099854     1.0     -4876.934814         False          False
7   17968.376953   -4376.422363  4637.29834  17968.376953  298.087646 -4376.422363  22245.299316   99.500000        0.099854     1.0     -4876.934814         False          False
8   18068.901855   -4276.872559  4637.29834  18068.901855  200.024902 -4276.872559  22245.824219   99.950195        0.099854     1.0     -4876.934814         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=5, buffer=409/4096.[0m
[08/17 16:13:18]  --------------------------------------------------------------------------------
[08/17 16:13:18]  Iteration: 37 (0 solution, 36 counterexamples)
[08/17 16:13:26]  Generator returned sat in 6.919448 secs.
[08/17 16:13:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:13:27]  Improved gap from 0.0 to 100
[08/17 16:13:27]  Improved number of small numbers from 99 to 114 out of a max of 114
[08/17 16:13:27]  Verifer returned sat in 0.410421 secs.
[08/17 16:13:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16938.202148   -5077.022461  4637.298096  16938.202148     0.100098 -5077.022461  21615.224365  400.000244         400.000     6.0     -5077.022461            -1             -1
1   16938.202148   -4977.022217  4637.298096  16938.202148   399.800049 -4977.022217  21615.224365  300.000000         300.000     7.0     -5077.022461         False          False
2   17517.927002   -4877.022217  4637.298096  17517.927002   879.724854 -4877.022217  21615.324219  779.625000         779.625     8.0     -5077.022461         False          False
3   17618.027100   -4777.022461  4637.298096  17618.027100   879.725098 -4777.022461  21615.424316  779.625244         779.625     9.0     -5077.022461         False          False
4   17618.027100   -4677.022217  4637.298096  17618.027100     1.500000 -4677.022217  21615.424316  679.625000         679.625     9.0     -3997.397217          True           True
5   17618.027100   -4677.022217  4637.298096  17618.027100   452.750000 -4677.022217  21615.424316  679.625000         579.625     9.0     -3997.397217         False           True
6   17918.027100   -4477.022217  4637.298096  17918.027100   979.625000 -4477.022217  21615.424316  779.625000         779.625     5.0     -3997.397217         False           True
7   18608.339600   -4377.022217  4637.298096  18608.339600  1469.937500 -4377.022217  22205.736816  779.625000         779.625     6.0     -3997.397217         False          False
8   18608.339600   -4377.022217  4637.298096  18608.339600     1.500000 -4377.022217  22205.736816  779.625000         679.625     6.0     -3997.397217         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=6237/8.[0m
[08/17 16:13:28]  --------------------------------------------------------------------------------
[08/17 16:13:28]  Iteration: 38 (0 solution, 37 counterexamples)
[08/17 16:13:29]  Generator returned sat in 0.758038 secs.
[08/17 16:13:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:13:30]  Improved number of small numbers from 98 to 113 out of a max of 113
[08/17 16:13:30]  Verifer returned sat in 0.182721 secs.
[08/17 16:13:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16938.201904   -5077.022461  4637.298096  16938.201904     0.099854 -5077.022461  21614.099609  401.124756      401.124512     7.0     -5077.022461            -1             -1
1   16938.201904   -4977.022217  4637.298096  16938.201904   399.799805 -4977.022217  21614.099609  301.124512      301.124512     7.0     -5077.022461         False          False
2   17517.927246   -4877.022217  4637.298096  17517.927246   880.849854 -4877.022217  21614.199463  780.750000      780.750000     8.0     -5077.022461         False          False
3   17618.027100   -4777.022705  4637.298096  17618.027100   880.849854 -4777.022705  21614.299316  780.750488      780.750000     9.0     -5077.022461         False          False
4   17618.027100   -4677.022217  4637.298096  17618.027100     2.000000 -4677.022217  21614.299316  680.750000      680.750000     9.0     -3996.272217          True           True
5   17618.027100   -4677.022217  4637.298096  17618.027100   453.500000 -4677.022217  21614.299316  680.750000      580.750000     9.0     -3996.272217         False           True
6   17918.027100   -4477.022461  4637.298096  17918.027100   980.750000 -4477.022461  21614.299316  780.750244      780.750000     5.0     -3996.272217         False           True
7   18608.901855   -4377.022217  4637.298096  18608.901855  1471.625000 -4377.022217  22205.174072  780.750000      780.750000     6.0     -3996.272217         False          False
8   18608.901855   -4377.022217  4637.298096  18608.901855     2.000000 -4377.022217  22205.174072  780.750000      680.750000     6.0     -3996.272217         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=3123/4.[0m
[08/17 16:13:30]  --------------------------------------------------------------------------------
[08/17 16:13:30]  Iteration: 39 (0 solution, 38 counterexamples)
[08/17 16:13:36]  Generator returned sat in 5.007618 secs.
[08/17 16:13:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:13:37]  Improved number of small numbers from 70 to 113 out of a max of 113
[08/17 16:13:37]  Verifer returned sat in 0.381609 secs.
[08/17 16:13:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17317.627197   -4777.722412  4237.998047  17317.627197    0.100098 -4777.722412  21995.049805  100.299805        0.299805     6.0     -4777.722412            -1             -1
1   17417.527344   -4677.422607  4237.998047  17417.527344  200.199951 -4677.422607  21995.049805   99.900146        0.199951     7.0     -4777.722412         False           True
2   17517.727295   -4477.722412  4237.998047  17517.727295  200.100098 -4477.722412  21995.149658    0.300049        0.300049     1.0     -4477.422363          True           True
3   17617.827148   -4444.122314  4237.998047  17617.827148  100.399902 -4444.122314  21995.249512   66.699951        0.300049     1.0     -4377.422363         False          False
4   17717.927246   -4277.722412  4237.998047  17717.927246  166.800049 -4277.722412  21995.349609    0.300049        0.300049     1.0     -4377.422363         False          False
5   17917.477295   -4277.322510  4237.998047  17917.477295  199.850098 -4277.322510  22094.899658   99.900146        0.300049     1.0     -4377.422363         False          False
6   17917.777100   -4177.322266  4237.998047  17917.777100  100.199951 -4177.322266  22094.899658    0.199707      -99.400146     1.0     -4377.422363         False          False
7   18184.877441   -3977.722412  4237.998047  18184.877441  267.300049 -3977.722412  22162.299805    0.300049        0.300049     1.0     -4377.422363         False          False
8   18334.577393   -3977.722412  4237.998047  18334.577393  150.000000 -3977.722412  22211.999756  100.300049        0.300049     1.0     -4377.422363         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=4, buffer=1229/4096.[0m
[08/17 16:13:37]  --------------------------------------------------------------------------------
[08/17 16:13:37]  Iteration: 40 (0 solution, 39 counterexamples)
[08/17 16:13:39]  Generator returned sat in 0.438959 secs.
[08/17 16:13:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:13:40]  Improved number of small numbers from 64 to 113 out of a max of 113
[08/17 16:13:40]  Verifer returned sat in 0.350373 secs.
[08/17 16:13:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17317.626953   -4777.722412  4237.997803  17317.626953    0.099854 -4777.722412  21995.049805  100.299561        0.299561     6.0     -4777.722412            -1             -1
1   17417.527344   -4677.422607  4237.997803  17417.527344  200.199951 -4677.422607  21995.049805   99.900146        0.199951     1.0     -4777.722412         False           True
2   17517.727295   -4477.722656  4237.997803  17517.727295  200.100098 -4477.722656  21995.149658    0.300293        0.300049     1.0     -4477.422363         False          False
3   17617.827148   -4443.122314  4237.997803  17617.827148  100.400146 -4443.122314  21995.249512   65.699951        0.300049     1.0     -4377.422363         False          False
4   17717.927246   -4277.722412  4237.997803  17717.927246  165.800049 -4277.722412  21995.349609    0.300049        0.300049     1.0     -4377.422363         False          False
5   17915.977295   -4276.389160  4237.997803  17915.977295  198.350098 -4276.389160  22093.399658   98.966797        0.300049     1.0     -4377.422363         False          False
6   17916.177246   -4177.322266  4237.997803  17916.177246   99.166748 -4177.322266  22093.399658    0.099854      -99.500000     1.0     -4377.422363         False          False
7   18182.377441   -3977.722412  4237.997803  18182.377441  266.300049 -3977.722412  22159.799805    0.300049        0.300049     1.0     -4377.422363         False          False
8   18330.577393   -3977.722412  4237.997803  18330.577393  148.500000 -3977.722412  22207.999756  100.300049        0.300049     1.0     -4377.422363         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=4, buffer=1229/4096.[0m
[08/17 16:13:40]  --------------------------------------------------------------------------------
[08/17 16:13:40]  Iteration: 41 (0 solution, 40 counterexamples)
[08/17 16:13:46]  Generator returned sat in 4.715156 secs.
[08/17 16:13:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:13:46]  Improved gap from 50.825 to 100
[08/17 16:13:47]  Improved number of small numbers from 68 to 87 out of a max of 114
[08/17 16:13:47]  Verifer returned sat in 0.899250 secs.
[08/17 16:13:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16614.447021   -5480.602783  4237.997803  16614.447021    0.050049 -5480.602783  21995.049805  100.000000       99.999775     3.0     -5480.602783            -1             -1
1   16614.447021   -5480.602539  4237.997803  16614.447021   99.999756 -5480.602539  21995.049805   99.999756       -0.000225     3.0     -5480.602783         False           True
2   16714.397217   -5282.152559  4237.997803  16714.397217  199.949951 -5282.152559  21995.049805    1.499971       -0.050029     1.0     -5480.602783          True           True
3   16814.447246   -5280.602559  4237.997803  16814.447246  101.550000 -5280.602559  21995.049805  100.000000        0.000000     1.0     -5180.602559         False          False
4   16916.047246   -5080.602559  4237.997803  16916.047246  201.600000 -5080.602559  21995.049805    1.600000        1.600000     1.0     -5180.602559         False          False
5   17316.147246   -5078.952559  4237.997803  17316.147246  401.700000 -5078.952559  21995.049805  400.050000      301.700000     1.0     -5180.602559         False          False
6   17717.997246   -4880.602783  4237.997803  17717.997246  801.900000 -4880.602783  21995.049805  603.550225      603.550000     2.0     -5180.602559         False          False
7   17717.997246   -4780.602783  4237.997803  17717.997246    0.500000 -4780.602783  21995.049805  503.550225      503.550000     3.0     -4277.052559          True           True
8   17717.997246   -4780.602539  4237.997803  17717.997246    0.500000 -4780.602539  21995.049805  503.549980      403.550000     4.0     -4277.052559         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=2472141/4096.[0m
[08/17 16:13:48]  --------------------------------------------------------------------------------
[08/17 16:13:48]  Iteration: 42 (0 solution, 41 counterexamples)
[08/17 16:13:51]  Generator returned sat in 2.308313 secs.
[08/17 16:13:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:13:52]  Improved gap from 0.0 to 0
[08/17 16:13:52]  Improved number of small numbers from 39 to 114 out of a max of 114
[08/17 16:13:52]  Verifer returned sat in 0.745608 secs.
[08/17 16:13:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16214.952148   -5880.096436  4437.990479  16214.952148  200.002441 -5880.096436  21995.048584  100.000000      100.000000     1.0     -5880.096436            -1             -1
1   16314.953369   -5880.096191  4437.990479  16314.953369  200.001221 -5880.096191  21995.049805  199.999756      100.000000     2.0     -5680.096436         False          False
2   16314.953369   -5680.097412  4437.990479  16314.953369  199.998535 -5680.097412  21995.049805    0.000977        0.000000     2.0     -5680.096436         False           True
3   16514.954834   -5580.096436  4437.990479  16514.954834  200.002441 -5580.096436  21995.051270  100.000000      100.000000     1.0     -5680.096436         False           True
4   16514.954834   -5480.597412  4437.990479  16514.954834    0.500000 -5480.597412  21995.051270    0.500977        0.000000     2.0     -5680.096436         False          False
5   16514.954834   -5480.096436  4537.990234  16514.954834    0.500000 -5480.096436  21995.051270    0.000000       -0.000244     3.0     -5480.096436          True           True
6   16515.454834   -5480.095215  4637.490479  16515.454834    0.500000 -5480.095215  21995.051270    0.498779        0.000000     1.0     -5480.096436         False           True
7   16515.454834   -5479.596436  4737.490479  16515.454834    0.010000 -5479.596436  21995.051270    0.000000        0.000000     2.0     -5480.096436         False          False
8   16515.954834   -5479.596436  4836.990479  16515.954834    0.500000 -5479.596436  21995.051270    0.500000        0.000000     2.0     -5479.096436          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=100.[0m
[08/17 16:13:53]  --------------------------------------------------------------------------------
[08/17 16:13:53]  Iteration: 43 (0 solution, 42 counterexamples)
[08/17 16:14:07]  Generator returned sat in 12.964659 secs.
[08/17 16:14:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:14:07]  Improved gap from 0.0007142857142857143 to 48.4375
[08/17 16:14:09]  Improved number of small numbers from 32 to 38 out of a max of 114
[08/17 16:14:09]  Verifer returned sat in 1.797699 secs.
[08/17 16:14:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   16068.465088   -6326.574762  4539.042979  16068.465088  399.998750 -6326.574762  21995.04918  399.990671      399.990671     4.0     -6326.574762            -1             -1
1   16068.472542   -6226.574951  4539.042979  16068.472542  399.998125 -6226.574951  21995.04918  299.998314      299.998125     4.0     -5926.576637         False          False
2   16068.472542   -6130.678512  4539.042979  16068.472542  204.103271 -6130.678512  21995.04918  204.101875      199.998125     5.0     -5926.576637         False          False
3   16068.473167   -6059.575179  4539.042979  16068.473167  204.102500 -6059.575179  21995.04918  132.999167       99.998750     6.0     -5926.576012         False          False
4   16068.473792   -5926.584137  4539.042979  16068.473792  132.999792 -5926.584137  21995.04918    0.008750       -0.000625     7.0     -5926.576012         False          False
5   16068.475042   -5926.574762  4590.605479  16068.475042    0.010000 -5926.574762  21995.04918    0.000625      -48.436875     1.0     -5926.576012         False           True
6   16170.026292   -5878.137262  4637.490479  16170.026292  101.551875 -5878.137262  21995.04918   53.114375       -0.000625     1.0     -5926.576012         False          False
7   16207.130876   -5825.022262  4689.052979  16207.130876   90.218958 -5825.022262  21995.04918   37.103958      -11.333542     1.0     -5926.576012         False          False
8   16220.307855   -5776.584717  4689.052979  16220.307855   50.280938 -5776.584717  21995.04918    1.843392      -98.156563     1.0     -5926.576012         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819181/2048.[0m
[08/17 16:14:09]  --------------------------------------------------------------------------------
[08/17 16:14:09]  Iteration: 44 (0 solution, 43 counterexamples)
[08/17 16:14:11]  Generator returned sat in 0.453739 secs.
[08/17 16:14:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:14:12]  Improved gap from 0.0008333333333333334 to 48.4375
[08/17 16:14:12]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/17 16:14:12]  Verifer returned sat in 0.610949 secs.
[08/17 16:14:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15757.120361   -6675.020508  4539.043213  15757.120361    0.003662 -6675.020508  21983.703369  448.437500      448.437500     4.0     -6675.020508            -1             -1
1   15757.120361   -6575.020508  4539.043213  15757.120361    0.002500 -6575.020508  21983.703369  348.437500      348.437500     4.0     -6226.583008         False          False
2   15757.120361   -6475.020508  4539.043213  15757.120361    0.001221 -6475.020508  21983.703369  248.437500      248.437500     5.0     -6226.583008         False          False
3   15757.120361   -6475.019043  4539.043213  15757.120361  248.436250 -6475.019043  21983.703369  248.436035      148.437500     6.0     -6226.583008         False          False
4   15757.120361   -6275.021484  4539.043213  15757.120361  100.000732 -6275.021484  21983.703369   48.438477       48.437500     7.0     -6226.583008         False          False
5   15757.120361   -6275.020508  4590.605713  15757.120361    0.010000 -6275.020508  21983.703369   48.437500        0.000000     6.0     -6226.583008         False           True
6   15808.682861   -6226.583008  4639.043213  15808.682861  100.000000 -6226.583008  21983.703369   51.562500        0.000000     7.0     -6226.583008         False          False
7   15808.682861   -6175.020508  4690.605713  15808.682861    0.010000 -6175.020508  21983.703369    0.000000      -48.437500     2.0     -6226.583008         False           True
8   15858.683350   -6126.582764  4690.605713  15858.683350   50.000488 -6126.582764  21983.703369    1.562744      -98.437012     1.0     -6226.583008         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=7175/16.[0m
[08/17 16:14:12]  --------------------------------------------------------------------------------
[08/17 16:14:12]  Iteration: 45 (0 solution, 44 counterexamples)
[08/17 16:14:18]  Generator returned sat in 4.241050 secs.
[08/17 16:14:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:14:18]  Improved gap from 0.95 to 100
[08/17 16:14:18]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/17 16:14:18]  Verifer returned sat in 0.359792 secs.
[08/17 16:14:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15556.970459   -6626.833008  4690.605469  15556.970459     0.049805 -6626.833008  21983.703125  200.100342      199.950195     2.0     -6626.833008            -1             -1
1   15556.970459   -6526.682861  4690.605469  15556.970459   200.049805 -6526.682861  21983.703125   99.950195       99.950195     2.0     -6626.833008         False          False
2   15657.020264   -6526.682861  4690.605469  15657.020264   200.000000 -6526.682861  21983.703125  200.000000      100.000000     2.0     -6326.682861         False          False
3   15657.020264   -6426.682861  4690.605469  15657.020264    97.649902 -6426.682861  21983.703125  100.000000        0.000000     2.0     -6326.682861         False          False
4   16056.970459   -6326.682861  4690.605469  16056.970459   499.950195 -6326.682861  21983.703125  399.950195      299.950195     3.0     -6326.682861         False          False
5   16056.970459   -6126.682861  4690.605469  16056.970459     1.000000 -6126.682861  21983.703125  199.950195      199.950195     2.0     -6326.682861         False           True
6   16660.020264   -6126.682861  4690.605469  16660.020264   803.000000 -6126.682861  21983.703125  803.000000      703.000000     2.0     -6326.682861         False          False
7   17262.020264   -5926.682861  4690.605469  17262.020264  1405.000000 -5926.682861  22485.703125  703.000000      703.000000     2.0     -6326.682861         False          False
8   17262.020264   -5926.682861  4690.605469  17262.020264     0.500000 -5926.682861  22485.703125  703.000000      603.000000     2.0     -6326.682861         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=703.[0m
[08/17 16:14:19]  --------------------------------------------------------------------------------
[08/17 16:14:19]  Iteration: 46 (0 solution, 45 counterexamples)
[08/17 16:14:22]  Generator returned sat in 1.346797 secs.
[08/17 16:14:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:14:22]  Improved gap from 0.0008333333333333334 to 100
[08/17 16:14:23]  Improved number of small numbers from 77 to 81 out of a max of 114
[08/17 16:14:23]  Verifer returned sat in 0.805127 secs.
[08/17 16:14:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15556.970459   -6626.682861  4690.605469  15556.970459     0.002500 -6626.682861  21883.65332  300.000000        300.0000     6.0     -6626.682861            -1             -1
1   15556.970459   -6626.680361  4690.605469  15556.970459   299.997314 -6626.680361  21883.65332  299.997500        200.0000     7.0     -6626.682861         False          False
2   15556.970459   -6426.685361  4690.605469  15556.970459   299.994873 -6426.685361  21883.65332  100.002500        100.0000     8.0     -6326.682861         False          False
3   15556.972959   -6426.682861  4690.605469  15556.972959   100.005000 -6426.682861  21883.65332  100.002500          0.0025     9.0     -6326.680361         False          False
4   16054.980459   -6326.682861  4690.605469  16054.980459   598.010000 -6326.682861  21883.65332  498.010000        398.0100     9.0     -6326.680361         False           True
5   17350.985459   -6126.683105  4690.605469  17350.985459  1794.015000 -6126.683105  22779.65832  698.010244        698.0100     2.0     -6326.680361         False           True
6   17350.985459   -6126.680176  4690.605469  17350.985459     0.010000 -6126.680176  22779.65832  698.007314        598.0100     3.0     -6326.680361         False          False
7   17350.985459   -6026.682861  4690.605469  17350.985459     0.010000 -6026.682861  22779.65832  598.010000        498.0100     4.0     -6326.680361         False          False
8   17350.985459   -5828.670410  4690.605469  17350.985459     0.010000 -5828.670410  22779.65832  399.997549        398.0100     4.0     -6326.680361         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=69801/100.[0m
[08/17 16:14:23]  --------------------------------------------------------------------------------
[08/17 16:14:23]  Iteration: 47 (0 solution, 46 counterexamples)
[08/17 16:14:25]  Generator returned sat in 0.457851 secs.
[08/17 16:14:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:14:25]  Improved number of small numbers from 69 to 113 out of a max of 113
[08/17 16:14:25]  Verifer returned sat in 0.284193 secs.
[08/17 16:14:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15556.970459   -6626.683105  4690.605469  15556.970459     0.002441 -6626.683105  21883.653564  300.000000      300.000000     6.0     -6626.683105            -1             -1
1   15556.970459   -6626.180664  4690.605469  15556.970459   299.997559 -6626.180664  21883.653564  299.497559      200.000000     7.0     -6626.683105         False          False
2   15556.970459   -6426.685547  4690.605469  15556.970459   299.495117 -6426.685547  21883.653564  100.002441      100.000000     8.0     -6326.683105         False          False
3   15556.972900   -6426.683105  4690.605469  15556.972900   100.004883 -6426.683105  21883.653564  100.002441        0.002441     9.0     -6326.680664         False          False
4   16055.480225   -6326.683105  4690.605469  16055.480225   598.509766 -6326.683105  21883.653564  498.509766      398.509766     9.0     -6326.680664         False           True
5   17351.485107   -6126.683105  4690.605469  17351.485107  1794.514648 -6126.683105  22779.658203  698.510010      698.510010     2.0     -6326.680664         False           True
6   17351.485107   -6126.680176  4690.605469  17351.485107     0.010000 -6126.680176  22779.658203  698.507080      598.510010     3.0     -6326.680664         False          False
7   17351.485107   -6026.682861  4690.605469  17351.485107     0.010000 -6026.682861  22779.658203  598.509766      498.510010     4.0     -6326.680664         False          False
8   17351.485107   -5828.170654  4690.605469  17351.485107     0.010000 -5828.170654  22779.658203  399.997559      398.510010     4.0     -6326.680664         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=2861097/4096.[0m
[08/17 16:14:26]  --------------------------------------------------------------------------------
[08/17 16:14:26]  Iteration: 48 (0 solution, 47 counterexamples)
[08/17 16:14:35]  Generator returned sat in 7.079653 secs.
[08/17 16:14:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:14:35]  Improved gap from 0.001220703125 to 48.4375
[08/17 16:14:36]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 16:14:36]  Verifer returned sat in 0.916337 secs.
[08/17 16:14:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15012.436523   -7468.228516  4690.605469  15012.436523    0.002441 -7468.228516  22480.664795   0.000244      -99.999756     5.0     -7468.228516            -1             -1
1   15212.436279   -7316.666016  4690.605469  15212.436279  200.000000 -7316.666016  22480.664795  48.437500        0.000000     1.0     -7468.228516         False           True
2   15363.997559   -7168.228516  4690.605469  15363.997559  199.998779 -7168.228516  22480.666016  51.560059       51.560059     1.0     -7116.668457         False          False
3   15463.996338   -7068.228516  4690.605469  15463.996338  151.558838 -7068.228516  22480.666016  51.558838       51.558838     1.0     -7016.669678         False          False
4   15612.937500   -6968.229492  4690.605469  15612.937500  200.500000 -6968.229492  22529.605957  51.561035       51.560059     1.0     -7016.669678         False          False
5   15612.937500   -6968.228516  4739.045410  15612.937500    0.010000 -6968.228516  22529.605957  51.560059        0.000000     2.0     -7016.669678         False          False
6   15661.877441   -6916.668457  4790.105469  15661.877441  100.500000 -6916.668457  22529.605957  48.939941        0.000000     3.0     -7016.669678         False          False
7   15689.217529   -6866.668457  4840.607910  15689.217529   76.280029 -6866.668457  22529.605957  26.280029      -22.157471     1.0     -7016.669678         False          False
8   15714.218018   -6818.230957  4840.607910  15714.218018   51.280518 -6818.230957  22529.605957   2.843018      -97.156982     1.0     -7016.669678         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=105595/2048.[0m
[08/17 16:14:36]  --------------------------------------------------------------------------------
[08/17 16:14:36]  Iteration: 49 (0 solution, 48 counterexamples)
[08/17 16:14:43]  Generator returned sat in 5.180861 secs.
[08/17 16:14:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:14:44]  Improved gap from 48.4375 to 48.4375
[08/17 16:14:44]  Improved number of small numbers from 39 to 114 out of a max of 114
[08/17 16:14:44]  Verifer returned sat in 1.286247 secs.
[08/17 16:14:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15041.415771   -7738.412842  4690.605469  15041.415771  200.001250 -7738.412842  22679.818848  100.009766        0.009766     2.0     -7738.412842            -1             -1
1   15141.406006   -7638.411621  4690.605469  15141.406006  200.000000 -7638.411621  22679.818848   99.998779        0.000000     2.0     -7538.412842         False          False
2   15241.406006   -7491.093018  4690.605469  15241.406006  199.998779 -7491.093018  22679.818848   52.680176        0.000000     1.0     -7438.412842         False          False
3   15241.406006   -7438.412842  4742.167969  15241.406006    0.001221 -7438.412842  22679.818848    0.000000      -48.437500     2.0     -7438.412842         False          False
4   15392.406006   -7289.976562  4742.167969  15392.406006  151.000000 -7289.976562  22682.371338    0.011230        0.010010     1.0     -7438.412842         False          False
5   15392.406006   -7289.975342  4793.730469  15392.406006    0.010000 -7289.975342  22682.371338    0.010010      -48.427490     2.0     -7438.412842         False          False
6   15493.954834   -7241.537842  4840.608154  15493.954834  101.558838 -7241.537842  22682.371338   53.121338       -0.000977     1.0     -7438.412842         False          False
7   15540.270996   -7188.415527  4892.170654  15540.270996   99.437500 -7188.415527  22682.371338   46.315186       -2.122314     1.0     -7438.412842         False          False
8   15545.736328   -7139.978027  4892.170654  15545.736328   51.780518 -7139.978027  22682.371338    3.343018      -96.656982     1.0     -7438.412842         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=41/4096.[0m
[08/17 16:14:45]  --------------------------------------------------------------------------------
[08/17 16:14:45]  Iteration: 50 (0 solution, 49 counterexamples)
[08/17 16:14:48]  Generator returned sat in 1.484193 secs.
[08/17 16:14:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:14:48]  Improved gap from 0.0 to 100
[08/17 16:14:48]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/17 16:14:48]  Verifer returned sat in 0.432302 secs.
[08/17 16:14:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14932.781006   -7750.851562  4703.044189  14932.781006  199.999756 -7750.851562  22583.732666  99.899902       -0.099854     2.0     -7750.851562            -1             -1
1   15032.781006   -7650.851807  4703.044189  15032.781006  199.899902 -7650.851807  22583.732666  99.900146       -0.099854     1.0     -7550.951660         False          False
2   15032.880859   -7550.851807  4703.044189  15032.880859  100.000000 -7550.851807  22583.732666   0.000000     -100.000000     1.0     -7550.851807         False          False
3   15292.055908   -7378.601562  4703.044189  15292.055908  259.175049 -7378.601562  22583.732666  86.924805       59.175049     1.0     -7550.851807         False          False
4   15392.256104   -7280.601807  4703.044189  15392.256104  187.125000 -7280.601807  22583.832764  89.025146       59.275146     1.0     -7550.851807         False          False
5   15486.855957   -7178.601807  4703.044189  15486.855957  183.625000 -7178.601807  22583.832764  81.625000       53.875000     1.0     -7550.851807         False          False
6   15592.355957   -7052.851562  4703.044189  15592.355957  187.125000 -7052.851562  22583.932617  61.274902       59.275146     1.0     -7550.851807         False          False
7   15692.456055   -6950.851807  4703.044189  15692.456055  161.375000 -6950.851807  22584.032715  59.275146       59.275146     1.0     -7550.851807         False          False
8   15796.555908   -6891.476807  4703.044189  15796.555908  163.375000 -6891.476807  22588.132568  99.900146       59.275146     1.0     -7550.851807         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=4, buffer=242791/4096.[0m
[08/17 16:14:49]  --------------------------------------------------------------------------------
[08/17 16:14:49]  Iteration: 51 (0 solution, 50 counterexamples)
[08/17 16:14:51]  Generator returned sat in 0.598080 secs.
[08/17 16:14:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:14:51]  Improved number of small numbers from 100 to 113 out of a max of 113
[08/17 16:14:51]  Verifer returned sat in 0.251473 secs.
[08/17 16:14:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14932.781006   -7750.851807  4703.044189  14932.781006  199.999512 -7750.851807  22583.732666  99.900146       -0.099854     3.0     -7750.851807            -1             -1
1   15032.780762   -7650.851807  4703.044189  15032.780762  199.899902 -7650.851807  22583.732666  99.899902       -0.100098     1.0     -7550.951904         False          False
2   15032.880859   -7550.851807  4703.044189  15032.880859  100.000000 -7550.851807  22583.732666   0.000000     -100.000000     1.0     -7550.851807         False          False
3   15292.055908   -7378.601807  4703.044189  15292.055908  259.175049 -7378.601807  22583.732666  86.925049       59.175049     1.0     -7550.851807         False          False
4   15392.255859   -7280.601807  4703.044189  15392.255859  187.125000 -7280.601807  22583.832520  89.025146       59.275146     1.0     -7550.851807         False          False
5   15486.355713   -7178.601807  4703.044189  15486.355713  183.125000 -7178.601807  22583.832520  81.125000       53.375000     1.0     -7550.851807         False          False
6   15592.355713   -7052.551514  4703.044189  15592.355713  187.125000 -7052.551514  22583.932373  60.974854       59.275146     1.0     -7550.851807         False          False
7   15692.406006   -6950.851807  4703.044189  15692.406006  161.025146 -6950.851807  22583.982666  59.275146       59.275146     1.0     -7550.851807         False          False
8   15796.005859   -6891.476807  4703.044189  15796.005859  162.875000 -6891.476807  22587.582520  99.900146       59.275146     1.0     -7550.851807         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=4, buffer=242791/4096.[0m
[08/17 16:14:52]  --------------------------------------------------------------------------------
[08/17 16:14:52]  Iteration: 52 (0 solution, 51 counterexamples)
[08/17 16:14:58]  Generator returned sat in 4.568634 secs.
[08/17 16:14:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:14:58]  Improved gap from 0.0008333333333333334 to 100
[08/17 16:14:59]  Improved number of small numbers from 64 to 64 out of a max of 114
[08/17 16:14:59]  Verifer returned sat in 0.943797 secs.
[08/17 16:14:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15032.780762   -7650.851807  4703.044189  15032.780762  299.998333 -7650.851807  22383.634235  299.998333      299.998333     3.0     -7650.851807            -1             -1
1   15032.780762   -7600.093473  4703.044189  15032.780762  299.996667 -7600.093473  22383.634235  249.240000      199.998333     2.0     -7350.853473         False           True
2   15032.780762   -7450.851807  4703.044189  15032.780762  249.238333 -7450.851807  22383.634235   99.998333       99.998333     3.0     -7350.853473         False          False
3   15032.780762   -7350.860140  4703.044189  15032.780762    0.001667 -7350.860140  22383.634235    0.006667       -0.001667     4.0     -7350.853473         False           True
4   15032.784095   -7350.851807  4703.044189  15032.784095    0.010000 -7350.851807  22383.634235    0.001667      -99.998333     1.0     -7350.853473         False           True
5   15532.785762   -7250.851807  4703.044189  15532.785762  500.003333 -7250.851807  22383.635902  400.001667      300.001667     1.0     -7350.853473         False          False
6   15532.785762   -7118.356251  4703.044189  15532.785762    0.500000 -7118.356251  22383.635902  267.506111      200.001667     2.0     -7350.853473         False          False
7   15732.787428   -7050.851807  4703.044189  15732.787428  467.507778 -7050.851807  22383.637568  400.001667      300.001667     3.0     -7350.853473         False          False
8   15732.787428   -6950.851807  4703.044189  15732.787428    0.500000 -6950.851807  22383.637568  300.001667      200.001667     4.0     -6650.850140          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=2, buffer=180001/600.[0m
[08/17 16:15:00]  --------------------------------------------------------------------------------
[08/17 16:15:00]  Iteration: 53 (0 solution, 52 counterexamples)
[08/17 16:15:08]  Generator returned sat in 6.623474 secs.
[08/17 16:15:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:15:08]  Improved gap from 0.0 to 100
[08/17 16:15:09]  Improved number of small numbers from 73 to 77 out of a max of 114
[08/17 16:15:09]  Verifer returned sat in 0.529821 secs.
[08/17 16:15:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15032.780762   -7650.851807  4703.043945  15032.780762    0.001221 -7650.851807  22283.141943  400.490625      400.490625     5.0     -7650.851807            -1             -1
1   15032.780762   -7550.853271  4703.043945  15032.780762    0.001465 -7550.853271  22283.141943  300.492090      300.490625     5.0     -7650.851807         False          False
2   15032.780762   -7550.851807  4703.043945  15032.780762    0.001465 -7550.851807  22283.141943  300.490625      200.490625     6.0     -7650.851807         False          False
3   15032.780762   -7350.853027  4703.043945  15032.780762    0.001465 -7350.853027  22283.141943  100.491846      100.490625     7.0     -7650.851807         False          False
4   15032.780762   -7350.851807  4703.043945  15032.780762    0.010000 -7350.851807  22283.141943  100.490625        0.490625     8.0     -7650.851807         False          False
5   15032.780762   -7250.361182  4703.043945  15032.780762    0.010000 -7250.361182  22283.141943    0.000000      -99.509375     9.0     -7650.851807         False          False
6   15632.782012   -7150.851807  4703.043945  15632.782012  600.001250 -7150.851807  22283.143193  500.490625      400.490625     1.0     -6650.361182          True           True
7   15632.782012   -7050.851807  4703.043945  15632.782012    0.010000 -7050.851807  22283.143193  400.490625      300.490625     2.0     -6650.361182         False          False
8   15632.782012   -6850.852051  4703.043945  15632.782012    0.010000 -6850.852051  22283.143193  200.490869      200.490625     3.0     -6650.361182         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=128157/320.[0m
[08/17 16:15:09]  --------------------------------------------------------------------------------
[08/17 16:15:09]  Iteration: 54 (0 solution, 53 counterexamples)
[08/17 16:15:14]  Generator returned sat in 3.132483 secs.
[08/17 16:15:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:15:14]  Improved gap from 0.0 to 100
[08/17 16:15:15]  Improved number of small numbers from 38 to 114 out of a max of 114
[08/17 16:15:15]  Verifer returned sat in 0.410297 secs.
[08/17 16:15:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15530.290283   -7251.851562  4703.043701  15530.290283     0.001221 -7251.851562  22283.141846  499.000000      499.000000     7.0     -7251.851562            -1             -1
1   15530.290283   -7151.851807  4703.043701  15530.290283     0.001465 -7151.851807  22283.141846  399.000244      399.000000     3.0     -7251.851562         False           True
2   15530.290283   -7051.851807  4703.043701  15530.290283     0.001465 -7051.851807  22283.141846  299.000244      299.000000     3.0     -7251.851562          True           True
3   15530.290283   -6951.851562  4703.043701  15530.290283     0.001221 -6951.851562  22283.141846  199.000000      199.000000     4.0     -6752.851562          True           True
4   15530.290283   -6891.851562  4703.043701  15530.290283     1.000000 -6891.851562  22283.141846  139.000000       99.000000     5.0     -6752.851562         False           True
5   15530.290283   -6752.851562  4703.043701  15530.290283     1.000000 -6752.851562  22283.141846    0.000000       -1.000000     6.0     -6752.851562         False           True
6   15531.290283   -6751.851562  4703.043701  15531.290283     1.000000 -6751.851562  22283.141846    0.000000     -100.000000     1.0     -6752.851562         False           True
7   15932.790283   -6651.851562  4703.043701  15932.790283   401.500000 -6651.851562  22283.141846  301.500000      201.500000     1.0     -6752.851562         False          False
8   16713.540283   -6451.851807  4703.043701  16713.540283  1082.250000 -6451.851807  22666.391602  499.000488      499.000244     2.0     -6752.851562         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=2043905/4096.[0m
[08/17 16:15:15]  --------------------------------------------------------------------------------
[08/17 16:15:15]  Iteration: 55 (0 solution, 54 counterexamples)
[08/17 16:15:21]  Generator returned sat in 4.267761 secs.
[08/17 16:15:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:15:21]  Improved gap from 0.4 to 100
[08/17 16:15:22]  Improved number of small numbers from 58 to 114 out of a max of 114
[08/17 16:15:22]  Verifer returned sat in 0.565983 secs.
[08/17 16:15:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14630.030518   -7253.070068  4704.178467  14630.030518    0.041667 -7253.070068  21883.058594    0.041992       -0.041748     6.0     -7253.070068            -1             -1
1   14730.197021   -7252.986328  4704.178467  14730.197021  100.208496 -7252.986328  21883.100098  100.083252        0.083252     1.0     -7253.070068         False           True
2   14830.072021   -7152.611572  4704.178467  14830.072021  199.958252 -7152.611572  21883.100098   99.583496       -0.041748     1.0     -7253.070068         False          False
3   14930.113525   -7052.986328  4704.178467  14930.113525  199.625000 -7052.986328  21883.100098   99.999756       -0.000244     1.0     -6952.986572         False          False
4   15030.238770   -6920.319824  4704.178467  15030.238770  200.125000 -6920.319824  21883.141846   67.416748        0.083252     1.0     -6952.986572         False          False
5   15130.155273   -6820.694824  4704.178467  15130.155273  167.333252 -6820.694824  21883.141846   67.708252       -0.000244     1.0     -6952.986572         False          False
6   15230.280273   -6720.236328  4704.178467  15230.280273  167.833252 -6720.236328  21883.183350   67.333252        0.083252     1.0     -6952.986572         False          False
7   15330.322021   -6609.347656  4704.178467  15330.322021  167.375000 -6609.347656  21883.225098   56.444580        0.083252     1.0     -6952.986572         False          False
8   15430.363525   -6552.861328  4704.178467  15430.363525  156.486084 -6552.861328  21883.266602   99.958252        0.083252     1.0     -6952.986572         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=4, buffer=341/4096.[0m
[08/17 16:15:22]  --------------------------------------------------------------------------------
[08/17 16:15:22]  Iteration: 56 (0 solution, 55 counterexamples)
[08/17 16:15:30]  Generator returned sat in 5.921924 secs.
[08/17 16:15:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:15:30]  Improved gap from 0.005 to 100
[08/17 16:15:30]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/17 16:15:30]  Verifer returned sat in 0.492868 secs.
[08/17 16:15:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14611.955322   -7271.244873  4704.178223  14611.955322    0.100000 -7271.244873  21883.099854    0.100342       -0.099854     5.0     -7271.244873            -1             -1
1   14712.155029   -7271.044678  4704.178223  14712.155029  100.300049 -7271.044678  21883.099854  100.099854        0.099854     1.0     -7271.244873         False          False
2   14712.155029   -7171.044678  4704.178223  14712.155029    0.100098 -7171.044678  21883.099854    0.099854      -99.900146     2.0     -7170.944824         False          False
3   14930.055176   -6971.044678  4704.178223  14930.055176  218.000000 -6971.044678  21883.199951   17.899902       17.899902     1.0     -7170.944824         False          False
4   15060.255371   -6924.378174  4704.178223  15060.255371  148.100098 -6924.378174  21913.400146   71.233398       17.899902     1.0     -7170.944824         False          False
5   15160.355225   -6824.378174  4704.178223  15160.355225  171.333252 -6824.378174  21913.500000   71.233398       17.899902     1.0     -7170.944824         False          False
6   15260.455078   -6691.044678  4704.178223  15260.455078  171.333252 -6691.044678  21913.599854   37.899902       17.899902     1.0     -7170.944824         False          False
7   15360.555176   -6571.044678  4704.178223  15360.555176  138.000000 -6571.044678  21913.699951   17.899902       17.899902     1.0     -7170.944824         False          False
8   15517.322021   -6471.044678  4704.178223  15517.322021  174.666748 -6471.044678  21970.466797   17.899902       17.899902     1.0     -7170.944824         False          False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=5, buffer=36659/2048.[0m
[08/17 16:15:31]  --------------------------------------------------------------------------------
[08/17 16:15:31]  Iteration: 57 (0 solution, 56 counterexamples)
[08/17 16:15:36]  Generator returned sat in 3.379982 secs.
[08/17 16:15:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:15:37]  Improved gap from 0.0075 to 48.4375
[08/17 16:15:38]  Improved number of small numbers from 45 to 56 out of a max of 114
[08/17 16:15:38]  Verifer returned sat in 2.084534 secs.
[08/17 16:15:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15578.690430   -6398.620511  4647.360723  15578.690430    0.001465 -6398.620511  21883.099854  94.211087        0.002337     3.0     -6398.620511            -1             -1
1   15678.689342   -6298.621826  4647.360723  15678.689342  194.210000 -6298.621826  21883.099854  94.211315        0.001250     1.0     -6398.620511         False          False
2   15778.688232   -6104.411761  4647.360723  15778.688232  194.210205 -6104.411761  21883.099854   0.000140        0.000140     1.0     -6398.620511         False          False
3   15878.689342   -6056.083011  4647.360723  15878.689342  100.001250 -6056.083011  21883.099854  51.672500        0.001250     1.0     -6004.410511         False          False
4   15999.785592   -5904.411761  4647.360723  15999.785592  172.768750 -5904.411761  21904.194854   0.002500        0.002500     1.0     -6004.410511         False          False
5   15999.793092   -5904.408011  4698.919473  15999.793092    0.010000 -5904.408011  21904.194854   0.006250      -48.431250     1.0     -6004.410511         False          False
6   16101.288717   -5855.970511  4745.799561  16101.288717  101.501875 -5855.970511  21904.194854  53.064375       -0.055537     1.0     -6004.410511         False          False
7   16149.780592   -5802.850511  4797.361816  16149.780592  101.556250 -5802.850511  21904.194854  48.436250       -0.001406     1.0     -6004.410511         False          False
8   16153.624967   -5754.412842  4797.361816  16153.624967   52.280625 -5754.412842  21904.194854   3.842956      -96.157031     1.0     -6004.410511         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/400.[0m
[08/17 16:15:39]  --------------------------------------------------------------------------------
[08/17 16:15:39]  Iteration: 58 (0 solution, 57 counterexamples)
[08/17 16:15:53]  Generator returned sat in 12.555344 secs.
[08/17 16:15:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:15:54]  Improved gap from 1.5515283203125 to 100
[08/17 16:15:55]  Improved number of small numbers from 59 to 63 out of a max of 114
[08/17 16:15:55]  Verifer returned sat in 1.866763 secs.
[08/17 16:15:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15122.157715   -6860.892178  5047.349473  15122.157715  199.999756 -6860.892178  21883.099854   99.950039       -0.049961     2.0     -6860.892178            -1             -1
1   15222.157676   -6760.892178  5047.349473  15222.157676  199.950000 -6760.892178  21883.099854   99.950000       -0.050000     1.0     -6660.942178         False          False
2   15322.207676   -6660.892178  5047.349473  15322.207676  200.000000 -6660.892178  21883.099854  100.000000        0.000000     1.0     -6660.942178         False          False
3   15738.007676   -6560.892178  5047.349473  15738.007676  515.800000 -6560.892178  21883.099854  415.800000      315.800000     2.0     -6660.942178         False          False
4   15738.007676   -6364.892178  5047.349473  15738.007676  407.400000 -6364.892178  21883.099854  219.800000      215.800000     2.0     -6660.942178         False          False
5   15919.407676   -6260.892178  5047.349473  15919.407676  401.200000 -6260.892178  21883.099854  297.200000      297.200000     3.0     -6660.942178         False          False
6   16022.307676   -6260.842178  5047.349473  16022.307676  400.100000 -6260.842178  21883.099854  400.050000      300.100000     4.0     -6660.942178         False          False
7   16022.307676   -6060.892178  5047.349473  16022.307676  349.575000 -6060.892178  21883.099854  200.100000      200.100000     3.0     -6660.942178         False          False
8   16148.495176   -6060.892090  5047.349473  16148.495176  326.287500 -6060.892090  21883.099854  326.287412      226.287500     4.0     -6660.942178         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=646861/2048.[0m
[08/17 16:15:56]  --------------------------------------------------------------------------------
[08/17 16:15:56]  Iteration: 59 (0 solution, 58 counterexamples)
[08/17 16:16:05]  Generator returned sat in 7.340649 secs.
[08/17 16:16:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:16:06]  Improved gap from 0.0 to 25.0
[08/17 16:16:06]  Improved number of small numbers from 39 to 114 out of a max of 114
[08/17 16:16:06]  Verifer returned sat in 0.751850 secs.
[08/17 16:16:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15222.252441   -6685.852295  4972.302002  15222.252441  125.007568 -6685.852295  21883.097412  25.007324       24.999512     2.0     -6685.852295            -1             -1
1   15322.250000   -6585.844727  4972.302002  15322.250000  125.004883 -6585.844727  21883.097412  24.997314       24.997070     1.0     -6560.847412         False          False
2   15422.255127   -6485.844727  4972.302002  15422.255127  125.002441 -6485.844727  21883.099609  25.000244       25.000000     1.0     -6460.844482         False          False
3   15424.250000   -6483.849609  5045.307129  15424.250000   26.995117 -6483.849609  21883.099609  25.000000        0.000000     2.0     -6458.849609         False          False
4   15599.252686   -6358.852051  5045.307129  15599.252686  200.002686 -6358.852051  21933.102295  25.002441       25.000000     1.0     -6458.849609         False          False
5   15599.252686   -6358.849609  5120.307129  15599.252686    0.500000 -6358.849609  21933.102295  25.000000        0.000000     2.0     -6458.849609         False          False
6   15699.247803   -6333.849609  5120.312012  15699.247803  124.995117 -6333.849609  21933.102295  99.995117        0.000000     3.0     -6458.849609         False          False
7   15699.247803   -6233.854492  5195.312012  15699.247803    0.010000 -6233.854492  21933.102295   0.000000      -25.000000     2.0     -6233.854492          True           True
8   15822.245361   -6208.854492  5195.312012  15822.245361  122.997559 -6208.854492  21933.102295  97.997559       -2.002441     1.0     -6233.854492         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=25.[0m
[08/17 16:16:06]  --------------------------------------------------------------------------------
[08/17 16:16:06]  Iteration: 60 (0 solution, 59 counterexamples)
[08/17 16:16:14]  Generator returned sat in 5.932694 secs.
[08/17 16:16:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:16:15]  Improved gap from 0.0008333333333333334 to 100
[08/17 16:16:15]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:16:15]  Verifer returned sat in 0.519784 secs.
[08/17 16:16:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t     losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0       15449.35   -7010.249609  5195.312012     15449.35    601.70 -7010.249609  21857.949609   601.65          600.00     3.0     -7010.249609            -1             -1
1       15449.35   -7008.599609  5195.312012     15449.35    601.65 -7008.599609  21857.949609   600.00          500.00     3.0     -6408.599609         False          False
2       15450.95   -6908.599609  5195.312012     15450.95    601.60 -6908.599609  21857.949609   501.60          401.60     4.0     -6406.999609         False          False
3       15450.95   -6808.599609  5195.312012     15450.95    403.05 -6808.599609  21857.949609   401.60          301.60     5.0     -6406.999609         False          False
4       15450.95   -6608.599609  5195.312012     15450.95    401.55 -6608.599609  21857.949609   201.60          201.60     6.0     -6406.999609         False          False
5       15649.40   -6608.599609  5195.312012     15649.40    400.05 -6608.599609  21857.949609   400.05          300.05     6.0     -6406.999609         False          False
6       15649.40   -6408.599609  5195.312012     15649.40    398.55 -6408.599609  21857.949609   200.05          200.05     7.0     -6406.999609         False          False
7       15848.35   -6308.599609  5195.312012     15848.35    399.00 -6308.599609  21857.949609   299.00          299.00     3.0     -6406.999609         False           True
8       15946.85   -6308.599609  5195.312012     15946.85    397.50 -6308.599609  21857.949609   397.50          297.50     3.0     -6406.999609         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=600.[0m
[08/17 16:16:15]  --------------------------------------------------------------------------------
[08/17 16:16:15]  Iteration: 61 (0 solution, 60 counterexamples)
[08/17 16:16:22]  Generator returned sat in 4.716992 secs.
[08/17 16:16:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:16:22]  Improved gap from 0.0016666666666666668 to 1.5625
[08/17 16:16:23]  Improved number of small numbers from 43 to 114 out of a max of 114
[08/17 16:16:23]  Verifer returned sat in 0.595186 secs.
[08/17 16:16:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15345.840088   -6408.602295  4704.434326  15345.840088  601.699951 -6408.602295  21754.439697    0.002686        0.002686     1.0     -6408.602295            -1             -1
1   15345.840088   -6408.602295  4802.871582  15345.840088    0.001221 -6408.602295  21754.439697    0.002686       -1.560059     1.0     -6408.599609         False          False
2   15647.401123   -6307.040771  4802.871582  15647.401123  301.563721 -6307.040771  21754.440674  200.001221      200.000000     1.0     -6408.599609         False          False
3   15649.398438   -6307.039551  4802.871582  15649.398438  201.998535 -6307.039551  21754.440674  201.997314      101.997314     2.0     -6105.042236         False          False
4   15649.398438   -6107.041016  4802.871582  15649.398438    2.000000 -6107.041016  21754.440674    1.998779        1.997314     3.0     -6105.042236         False          False
5   15649.399658   -6107.039551  4900.873047  15649.399658    2.000000 -6107.039551  21754.440674    1.998535        0.000000     4.0     -6105.042236         False          False
6   15649.399658   -6105.041016  4999.310547  15649.399658    0.010000 -6105.041016  21754.440674    0.000000       -1.562500     2.0     -6105.042236         False           True
7   15651.399658   -6103.042236  5097.311768  15651.399658    2.000000 -6103.042236  21754.440674    0.001221       -1.561279     1.0     -6105.042236         False          False
8   15653.398438   -6101.042236  5195.311523  15653.398438    2.000000 -6101.042236  21754.440674    0.000000       -1.562744     1.0     -6105.042236         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=200.[0m
[08/17 16:16:23]  --------------------------------------------------------------------------------
[08/17 16:16:23]  Iteration: 62 (0 solution, 61 counterexamples)
[08/17 16:16:31]  Generator returned sat in 5.797418 secs.
[08/17 16:16:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:16:32]  Improved number of small numbers from 60 to 62 out of a max of 113
[08/17 16:16:32]  Verifer returned sat in 1.002824 secs.
[08/17 16:16:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15396.413818   -6607.039551  4802.871338  15396.413818    0.001250 -6607.039551  21854.430674  149.022695       49.022695     1.0     -6607.039551            -1             -1
1   15647.399873   -6458.015801  4802.871338  15647.399873  400.008750 -6458.015801  21854.430674  250.985000      200.008750     1.0     -6607.039551         False          False
2   15647.399873   -6307.039795  4802.871338  15647.399873    0.001465 -6307.039795  21854.430674  100.008994      100.008750     2.0     -6207.030801         False          False
3   15647.400879   -6207.039551  4802.871338  15647.400879  100.010000 -6207.039551  21854.430674    0.009756        0.009756     3.0     -6207.030801         False          False
4   15647.401123   -6207.029551  4802.871338  15647.401123    0.010000 -6207.029551  21854.430674    0.000000      -99.990000     1.0     -6207.030801         False           True
5   16147.393623   -6107.039551  4802.871338  16147.393623  499.992500 -6107.039551  21854.431924  400.001250      300.001250     1.0     -6207.030801         False          False
6   16147.393623   -5973.372051  4802.871338  16147.393623    0.500000 -5973.372051  21854.431924  266.333750      200.001250     2.0     -6207.030801         False          False
7   16347.394873   -5907.039551  4802.871338  16347.394873  466.335000 -5907.039551  21854.433174  400.001250      300.001250     3.0     -6207.030801         False          False
8   16347.394873   -5807.039551  4802.871338  16347.394873    0.500000 -5807.039551  21854.433174  300.001250      200.001250     4.0     -5507.038301          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=2, buffer=240001/800.[0m
[08/17 16:16:33]  --------------------------------------------------------------------------------
[08/17 16:16:33]  Iteration: 63 (0 solution, 62 counterexamples)
[08/17 16:16:47]  Generator returned sat in 12.255553 secs.
[08/17 16:16:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:16:48]  Improved number of small numbers from 30 to 113 out of a max of 113
[08/17 16:16:48]  Verifer returned sat in 0.621419 secs.
[08/17 16:16:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15345.391846   -6709.039795  4802.871338  15345.391846    0.001465 -6709.039795  21854.432129  199.999512       99.999512     8.0     -6709.039795            -1             -1
1   15345.392090   -6509.040039  4802.871338  15345.392090  199.999756 -6509.040039  21854.432129    0.000000       -0.000244     1.0     -6709.039795         False           True
2   15545.391602   -6509.039795  4802.871338  15545.391602  199.999512 -6509.039795  21854.432129  199.999268       99.999268     1.0     -6309.040527         False          False
3   15745.392578   -6309.040283  4802.871338  15745.392578  400.000244 -6309.040283  21854.432129  200.000732      200.000244     1.0     -6309.040527         False          False
4   15945.392090   -6309.039795  4802.871338  15945.392090  400.000244 -6309.039795  21854.432129  399.999756      299.999756     2.0     -6309.040527         False          False
5   15945.392578   -6109.040039  4802.871338  15945.392578  400.000244 -6109.040039  21854.432129  200.000488      200.000244     3.0     -6309.040527         False          False
6   16145.392334   -6109.039307  4802.871338  16145.392334  400.000244 -6109.039307  21854.432129  399.999512      300.000000     3.0     -6309.040527         False          False
7   16145.393066   -5909.039795  4802.871338  16145.393066  400.000244 -5909.039795  21854.432129  200.000732      200.000732     3.0     -6309.040527         False          False
8   16345.392578   -5909.039795  4802.871338  16345.392578  400.000244 -5909.039795  21854.432129  400.000244      300.000244     3.0     -6309.040527         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=614401/2048.[0m
[08/17 16:16:48]  --------------------------------------------------------------------------------
[08/17 16:16:48]  Iteration: 64 (0 solution, 63 counterexamples)
[08/17 16:16:54]  Generator returned sat in 3.775505 secs.
[08/17 16:16:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:16:55]  Improved gap from 0.1 to 23.4375
[08/17 16:16:55]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/17 16:16:55]  Verifer returned sat in 0.885148 secs.
[08/17 16:16:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15322.354736   -6537.214844  4726.308838  15322.354736    0.050000 -6537.214844  21854.432129   5.137451        0.399902     8.0     -6537.214844            -1             -1
1   15422.304932   -6437.165039  4726.308838  15422.304932  105.087646 -6437.165039  21854.432129   5.037842        0.350098     1.0     -6537.214844         False           True
2   15522.304688   -6332.527344  4726.308838  15522.304688  105.037598 -6332.527344  21854.432129   0.399902        0.349854     1.0     -6332.127441         False          False
3   15545.392090   -6332.477295  4802.871094  15545.392090   23.487305 -6332.477295  21854.432129  23.437256       -0.000488     2.0     -6309.040039         False          False
4   15726.692383   -6209.039795  4802.871094  15726.692383  204.737549 -6209.039795  21935.332031   0.400146        0.399902     1.0     -6309.040039         False          False
5   15726.792236   -6208.589844  4878.983643  15726.792236    0.500000 -6208.589844  21935.332031   0.050049      -23.387695     1.0     -6309.040039         False          False
6   15850.679688   -6085.302246  4878.983643  15850.679688  123.937500 -6085.302246  21935.431885   0.550049        0.399902     1.0     -6309.040039         False          False
7   15850.679688   -6085.152100  4952.921143  15850.679688    0.500000 -6085.152100  21935.431885   0.399902      -25.662598     2.0     -6309.040039         False          False
8   15974.167480   -6059.089600  4952.921143  15974.167480  123.887695 -6059.089600  21935.431885  97.825195       -2.174805     1.0     -6309.040039         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=819/2048.[0m
[08/17 16:16:55]  --------------------------------------------------------------------------------
[08/17 16:16:55]  Iteration: 65 (0 solution, 64 counterexamples)
[08/17 16:17:02]  Generator returned sat in 4.990270 secs.
[08/17 16:17:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:17:03]  Improved gap from 0.00125 to 100
[08/17 16:17:05]  Improved number of small numbers from 44 to 50 out of a max of 114
[08/17 16:17:05]  Verifer returned sat in 2.206047 secs.
[08/17 16:17:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15330.334717   -6802.187295  4878.983643  15330.334717    0.100000 -6802.187295  21932.62208  199.899932       99.899932     9.0     -6802.187295            -1             -1
1   15330.334717   -6702.187295  4878.983643  15330.334717  199.800049 -6702.187295  21932.62208   99.899932       -0.100068     3.0     -6802.187295         False           True
2   15430.134785   -6602.187295  4878.983643  15430.134785  199.700000 -6602.187295  21932.62208   99.700000       -0.300000     1.0     -6502.487295         False          False
3   15801.774785   -6472.527295  4878.983643  15801.774785  471.340000 -6472.527295  21932.62208  341.680000      271.340000     1.0     -6502.487295         False          False
4   15860.594785   -6302.287295  4878.983643  15860.594785  400.500000 -6302.287295  21932.62208  230.260000      230.160000     2.0     -6502.487295         False          False
5   16030.534785   -6302.187295  4878.983643  16030.534785  400.200000 -6302.187295  21932.62208  400.100000      300.100000     3.0     -6502.487295         False          False
6   16030.534785   -6102.187295  4878.983643  16030.534785  350.100000 -6102.187295  21932.62208  200.100000      200.100000     3.0     -6502.487295         False          False
7   16190.654785   -6002.187295  4878.983643  16190.654785  360.220000 -6002.187295  21932.62208  260.220000      260.220000     3.0     -6502.487295         False          False
8   16260.594785   -6002.187256  4878.983643  16260.594785  330.160000 -6002.187256  21932.62208  330.159961      230.160000     4.0     -6502.487295         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=3001/10.[0m
[08/17 16:17:05]  --------------------------------------------------------------------------------
[08/17 16:17:05]  Iteration: 66 (0 solution, 65 counterexamples)
[08/17 16:17:11]  Generator returned sat in 3.801838 secs.
[08/17 16:17:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:17:13]  Improved gap from 0.0 to 48.4375
[08/17 16:17:14]  Improved number of small numbers from 40 to 43 out of a max of 114
[08/17 16:17:14]  Verifer returned sat in 2.675346 secs.
[08/17 16:17:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15478.467285   -6753.199795  4878.983643  15478.467285    0.001465 -6753.199795  21932.72333  298.943750      199.997500     8.0     -6753.199795            -1             -1
1   15478.468535   -6554.253545  4878.983643  15478.468535  298.945000 -6554.253545  21932.72333   99.998750       99.998750     2.0     -6753.199795         False           True
2   15677.413535   -6454.253545  4878.983643  15677.413535  298.943750 -6454.253545  21932.72333  198.943750      198.943750     1.0     -6255.309795         False          False
3   15677.413535   -6386.191045  4878.983643  15677.413535    0.001250 -6386.191045  21932.72333  130.881250       98.943750     2.0     -6255.309795         False          False
4   15730.537285   -6255.309795  4878.983643  15730.537285  184.005000 -6255.309795  21932.72333   53.123750       52.067500     3.0     -6255.309795         False          False
5   15730.537285   -6254.253545  4926.916143  15730.537285    0.010000 -6254.253545  21932.72333   52.067500        0.000000     2.0     -6255.309795         False           True
6   15778.974785   -6202.186045  4978.478643  15778.974785  100.505000 -6202.186045  21932.72333   48.437500        0.000000     3.0     -6255.309795         False          False
7   15778.974785   -6153.748545  5030.041143  15778.974785    0.010000 -6153.748545  21932.72333    0.000000      -48.437500     2.0     -6153.748545          True           True
8   15830.260410   -6105.311035  5081.603516  15830.260410   51.285625 -6105.311035  21932.72333    2.848115      -45.589502     1.0     -6153.748545         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=409595/2048.[0m
[08/17 16:17:15]  --------------------------------------------------------------------------------
[08/17 16:17:15]  Iteration: 67 (0 solution, 66 counterexamples)
[08/17 16:17:24]  Generator returned sat in 7.320427 secs.
[08/17 16:17:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:17:24]  Improved gap from 0.0 to 0
[08/17 16:17:24]  Improved number of small numbers from 94 to 114 out of a max of 114
[08/17 16:17:24]  Verifer returned sat in 0.334644 secs.
[08/17 16:17:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   15478.369629   -6554.253418  4878.983398  15478.369629    0.100000 -6554.253418  21932.723145   99.899902       99.899902     1.0     -6554.253418            -1             -1
1   15778.469727   -6554.253418  4878.983398  15778.469727  400.000000 -6554.253418  21932.723145  400.000000      300.000000     1.0     -6554.253418         False          False
2   15778.569580   -6454.253418  4878.983398  15778.569580  400.099854 -6454.253418  21932.723145  300.099854      200.099854     2.0     -6554.253418         False          False
3   15878.569580   -6254.253662  4878.983398  15878.569580  400.099854 -6254.253662  21932.723145  200.100098      200.099854     3.0     -6554.253418         False          False
4   15878.569580   -6202.653564  4878.983398  15878.569580    1.500000 -6202.653564  21932.723145  148.500000      100.099854     4.0     -6554.253418         False          False
5   15878.569580   -6154.253418  4878.983398  15878.569580    1.500000 -6154.253418  21932.723145  100.099854        0.099854     5.0     -6554.253418         False          False
6   15878.569580   -6054.253418  4978.883545  15878.569580    0.500000 -6054.253418  21932.723145    0.099854        0.000000     4.0     -6054.153564          True           True
7   15879.969727   -6054.153564  5077.483398  15879.969727    1.500000 -6054.153564  21932.723145    1.400146        0.000000     5.0     -6054.153564         False          False
8   15879.969727   -6052.753418  5077.483398  15879.969727    0.500000 -6052.753418  21932.723145    0.000000     -100.000000     2.0     -6054.153564         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=3001/10.[0m
[08/17 16:17:25]  --------------------------------------------------------------------------------
[08/17 16:17:25]  Iteration: 68 (0 solution, 67 counterexamples)
[08/17 16:17:34]  Generator returned sat in 6.739219 secs.
[08/17 16:17:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:17:34]  Improved gap from 0.0016666666666666668 to 100
[08/17 16:17:34]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 16:17:34]  Verifer returned sat in 0.642012 secs.
[08/17 16:17:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14187.549805   -7845.123291  6069.853271  14187.549805    0.050000 -7845.123291  21932.723145   99.949951       -0.050049     2.0     -7845.123291            -1             -1
1   14387.549805   -7745.123291  6069.853271  14387.549805  299.949951 -7745.123291  21932.723145  199.949951       99.949951     1.0     -7845.123291         False          False
2   14687.549805   -7545.123535  6069.853271  14687.549805  499.949951 -7545.123535  21932.723145  299.950195      299.949951     1.0     -7845.123291         False          False
3   14887.499512   -7544.173584  6069.853271  14887.499512  499.899902 -7544.173584  21932.723145  498.949951      399.899658     2.0     -7045.223633         False          False
4   14887.499512   -7345.123535  6069.853271  14887.499512  498.899902 -7345.123535  21932.723145  299.899902      299.899658     3.0     -7045.223633         False          False
5   15085.499512   -7245.123535  6069.853271  15085.499512  497.899902 -7245.123535  21932.723145  397.899902      397.899658     3.0     -7045.223633         False          False
6   15184.499512   -7245.073242  6069.853271  15184.499512  496.899902 -7245.073242  21932.723145  496.849609      396.899658     4.0     -7045.223633         False          False
7   15184.499512   -7045.223389  6069.853271  15184.499512  495.899902 -7045.223389  21932.723145  296.999756      296.899658     3.0     -7045.223633         False          False
8   15382.399658   -7045.123291  6069.853271  15382.399658  494.899902 -7045.123291  21932.723145  494.799805      394.799805     4.0     -7045.223633         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=7999/20.[0m
[08/17 16:17:35]  --------------------------------------------------------------------------------
[08/17 16:17:35]  Iteration: 69 (0 solution, 68 counterexamples)
[08/17 16:17:43]  Generator returned sat in 5.981249 secs.
[08/17 16:17:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:17:44]  Improved gap from 0.0 to 100
[08/17 16:17:44]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/17 16:17:44]  Verifer returned sat in 0.697605 secs.
[08/17 16:17:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14091.799805   -8040.923096  6069.853271  14091.799805    0.099854 -8040.923096  21932.723145  199.999756      100.000000     3.0     -8040.923096            -1             -1
1   14091.799805   -7940.923096  6069.853271  14091.799805    0.100000 -7940.923096  21932.723145   99.999756        0.000000     3.0     -8040.923096         False          False
2   14191.800049   -7840.923340  6069.853271  14191.800049  200.000000 -7840.923340  21932.723145  100.000244        0.000244     3.0     -8040.923096         False          False
3   14486.000000   -7736.823486  6069.853271  14486.000000  394.200195 -7736.823486  21932.723145  290.100342      194.200195     1.0     -8040.923096         False          False
4   14591.599854   -7540.923340  6069.853271  14591.599854  395.700195 -7540.923340  21932.723145  199.800049      199.800049     2.0     -8040.923096         False          False
5   14789.000000   -7446.623291  6069.853271  14789.000000  397.200195 -7446.623291  21932.723145  302.900146      297.200195     2.0     -8040.923096         False          False
6   14884.800049   -7341.023438  6069.853271  14884.800049  398.700195 -7341.023438  21932.723145  293.100342      293.000244     2.0     -8040.923096         False          False
7   14991.899902   -7340.923340  6069.853271  14991.899902  400.200195 -7340.923340  21932.723145  400.100098      300.100098     3.0     -8040.923096         False          False
8   14993.500000   -7140.923340  6069.853271  14993.500000  401.700195 -7140.923340  21932.723145  201.700195      201.700195     3.0     -8040.923096         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=614605/2048.[0m
[08/17 16:17:45]  --------------------------------------------------------------------------------
[08/17 16:17:45]  Iteration: 70 (0 solution, 69 counterexamples)
[08/17 16:17:48]  Generator returned sat in 1.261789 secs.
[08/17 16:17:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:17:48]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:17:48]  Verifer returned sat in 0.147760 secs.
[08/17 16:17:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14091.799805   -8040.923096  6069.853271  14091.799805    0.099854 -8040.923096  21932.723145  199.999756      100.000000     3.0     -8040.923096            -1             -1
1   14091.799805   -7940.923096  6069.853271  14091.799805    0.100000 -7940.923096  21932.723145   99.999756        0.000000     3.0     -8040.923096         False          False
2   14191.800049   -7840.923340  6069.853271  14191.800049  200.000000 -7840.923340  21932.723145  100.000244        0.000244     3.0     -8040.923096         False          False
3   14484.000000   -7735.323486  6069.853271  14484.000000  392.200195 -7735.323486  21932.723145  286.600342      192.200195     1.0     -8040.923096         False          False
4   14591.599854   -7540.923340  6069.853271  14591.599854  394.200195 -7540.923340  21932.723145  199.800049      199.800049     2.0     -8040.923096         False          False
5   14788.000000   -7446.123291  6069.853271  14788.000000  396.200195 -7446.123291  21932.723145  301.400146      296.200195     2.0     -8040.923096         False          False
6   14884.800049   -7341.023438  6069.853271  14884.800049  398.200195 -7341.023438  21932.723145  293.100342      293.000244     2.0     -8040.923096         False          False
7   14991.899902   -7340.923340  6069.853271  14991.899902  400.200195 -7340.923340  21932.723145  400.100098      300.100098     3.0     -8040.923096         False          False
8   14994.000000   -7140.923340  6069.853271  14994.000000  402.200195 -7140.923340  21932.723145  202.200195      202.200195     3.0     -8040.923096         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=614605/2048.[0m
[08/17 16:17:49]  --------------------------------------------------------------------------------
[08/17 16:17:49]  Iteration: 71 (0 solution, 70 counterexamples)
[08/17 16:17:56]  Generator returned sat in 5.377861 secs.
[08/17 16:17:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:17:57]  Improved gap from 0.000625 to 100
[08/17 16:17:58]  Improved number of small numbers from 57 to 65 out of a max of 114
[08/17 16:17:58]  Verifer returned sat in 1.195985 secs.
[08/17 16:17:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12597.803711   -9534.917090  6069.853271  12597.803711     0.001465 -9534.917090  21932.723145  199.997656      199.997656     2.0     -9534.917090            -1             -1
1   12597.804805   -9534.915840  6069.853271  12597.804805   199.998750 -9534.915840  21932.723145  199.997500       99.998750     2.0     -9534.917090         False          False
2   12597.804805   -9334.919590  6069.853271  12597.804805     0.001465 -9334.919590  21932.723145    0.001250       -0.001250     3.0     -9334.918340         False          False
3   12597.807305   -9334.917090  6069.853271  12597.807305     0.003750 -9334.917090  21932.723145    0.001250      -99.998750     1.0     -9334.918340         False           True
4   12995.811680   -9134.917090  6069.853271  12995.811680   398.005625 -9134.917090  21932.723145  198.005625      198.005625     1.0     -9334.918340         False          False
5   14192.811992   -9034.917236  6069.853271  14192.811992  1395.005938 -9034.917236  22335.692207  892.037021      892.036875     2.0     -9334.918340         False          False
6   14192.811992   -8936.910215  6069.853271  14192.811992     0.010000 -8936.910215  22335.692207  794.030000      792.036875     2.0     -9334.918340         False          False
7   14192.811992   -8834.917236  6069.853271  14192.811992   794.028750 -8834.917236  22335.692207  692.037021      692.036875     3.0     -9334.918340         False          False
8   14192.811992   -8834.916992  6069.853271  14192.811992     0.010000 -8834.916992  22335.692207  692.036777      592.036875     4.0     -8142.880215          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1427259/1600.[0m
[08/17 16:17:58]  --------------------------------------------------------------------------------
[08/17 16:17:58]  Iteration: 72 (0 solution, 71 counterexamples)
[08/17 16:18:09]  Generator returned sat in 8.588748 secs.
[08/17 16:18:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:18:10]  Improved gap from 0.0 to 0
[08/17 16:18:10]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/17 16:18:10]  Verifer returned sat in 0.643822 secs.
[08/17 16:18:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12595.363037   -9337.385254  6069.853271  12595.363037    0.024902 -9337.385254  21932.723145    0.025146        0.025146     1.0     -9337.385254            -1             -1
1   12995.337891   -9337.335449  6069.853271  12995.337891  400.000000 -9337.335449  21932.723145  399.950195      300.000000     1.0     -9337.385254         False          False
2   12995.387695   -9137.385254  6069.853271  12995.387695  400.000000 -9137.385254  21932.723145  200.049805      200.049805     2.0     -9337.385254         False          False
3   12995.387695   -9037.385254  6069.853271  12995.387695  200.049805 -9037.385254  21932.723145  100.049805      100.049805     3.0     -8937.335449         False          False
4   12995.387695   -8937.935059  6069.853271  12995.387695    1.000000 -8937.935059  21932.723145    0.599609        0.049805     4.0     -8937.335449         False          False
5   12995.788086   -8937.385254  6169.378418  12995.788086    1.000000 -8937.385254  21932.723145    0.450195       -0.024658     5.0     -8937.335449         False          False
6   12995.837891   -8936.910156  6269.353027  12995.837891    0.500000 -8936.910156  21932.723145    0.024902       -0.000244     1.0     -8937.335449         False           True
7   12996.812988   -8936.860352  6368.378174  12996.812988    1.000000 -8936.860352  21932.723145    0.950195        0.000000     1.0     -8937.335449         False          False
8   12996.862793   -8935.885010  6368.378418  12996.862793    1.000000 -8935.885010  21932.723145    0.024658      -99.949951     1.0     -8937.335449         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=12001/40.[0m
[08/17 16:18:10]  --------------------------------------------------------------------------------
[08/17 16:18:10]  Iteration: 73 (0 solution, 72 counterexamples)
[08/17 16:18:15]  Generator returned sat in 2.616929 secs.
[08/17 16:18:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:18:16]  Improved gap from 0.00616455078125 to 1.5625
[08/17 16:18:16]  Improved number of small numbers from 52 to 114 out of a max of 114
[08/17 16:18:16]  Verifer returned sat in 0.857549 secs.
[08/17 16:18:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12469.125000   -9337.385254  6069.853271  12469.125000  446.874756 -9337.385254  21359.635498  446.874756      346.874756     8.0     -9337.385254            -1             -1
1   12469.125244   -9137.385254  6069.853271  12469.125244  446.875000 -9137.385254  21359.635498  246.875000      246.875000     8.0     -9337.385254         False           True
2   12669.025146   -9137.285156  6069.853271  12669.025146  446.774902 -9137.285156  21359.635498  446.674805      346.774902     4.0     -8690.610352          True           True
3   12670.587891   -9037.385254  6069.853271  12670.587891  448.237549 -9037.385254  21359.635498  348.337646      248.337646     5.0     -8690.610352         False          False
4   12670.587891   -8837.385498  6069.853271  12670.587891    2.000000 -8837.385498  21359.635498  148.337891      148.337646     3.0     -8690.610352         False           True
5   12670.587891   -8738.947754  6069.853271  12670.587891    1.000000 -8738.947754  21359.635498   49.900146       48.337646     4.0     -8690.610352         False          False
6   12670.587891   -8690.610352  6121.515625  12670.587891    1.000000 -8690.610352  21359.635498    1.562744        0.000000     5.0     -8690.610352         False          False
7   12671.025146   -8689.047607  6219.953125  12671.025146    2.000000 -8689.047607  21359.635498    0.437256       -1.125244     5.0     -8690.610352         False           True
8   12672.587891   -8687.485107  6318.390625  12672.587891    2.000000 -8687.485107  21359.635498    0.437500       -1.125000     1.0     -8687.047607          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1420799/4096.[0m
[08/17 16:18:17]  --------------------------------------------------------------------------------
[08/17 16:18:17]  Iteration: 74 (0 solution, 73 counterexamples)
[08/17 16:18:24]  Generator returned sat in 4.511975 secs.
[08/17 16:18:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:18:24]  Improved gap from 0.0 to 17.1875
[08/17 16:18:25]  Improved number of small numbers from 98 to 114 out of a max of 114
[08/17 16:18:25]  Verifer returned sat in 0.976233 secs.
[08/17 16:18:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12670.587646   -9219.472656  6051.940674  12670.587646  530.374756 -9219.472656  21359.635254  530.425049      530.425049     9.0     -9219.472656            -1             -1
1   12670.587646   -9219.472656  6051.940674  12670.587646  530.375000 -9219.472656  21359.635254  530.425049      430.425049     9.0     -9219.472656         False           True
2   12670.587646   -9115.097656  6051.940674  12670.587646  530.324951 -9115.097656  21359.635254  426.050049      330.425049     7.0     -8689.047607         False           True
3   12670.587646   -8919.472656  6051.940674  12670.587646  426.000000 -8919.472656  21359.635254  230.425049      230.425049     8.0     -8689.047607         False          False
4   12670.587646   -8821.810303  6051.940674  12670.587646  215.000000 -8821.810303  21359.635254  132.762695      130.425049     9.0     -8689.047607         False           True
5   12670.587646   -8745.847656  6051.940674  12670.587646  109.500000 -8745.847656  21359.635254   56.800049       30.425049     9.0     -8689.047607         False           True
6   12670.587646   -8719.472656  6121.515625  12670.587646   56.750000 -8719.472656  21359.635254   30.425049        0.000000     9.0     -8689.047607         False           True
7   12670.587646   -8689.047607  6204.328125  12670.587646   30.375000 -8689.047607  21359.635254    0.000000      -17.187500     9.0     -8689.047607         False           True
8   12687.775146   -8671.860107  6204.328125  12687.775146   17.187500 -8671.860107  21359.635254    0.000000     -100.000000     1.0     -8689.047607         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=2172621/4096.[0m
[08/17 16:18:25]  --------------------------------------------------------------------------------
[08/17 16:18:25]  Iteration: 75 (0 solution, 74 counterexamples)
[08/17 16:18:36]  Generator returned sat in 8.327342 secs.
[08/17 16:18:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:18:36]  Improved gap from 0.0 to 0
[08/17 16:18:37]  Improved number of small numbers from 50 to 72 out of a max of 114
[08/17 16:18:37]  Verifer returned sat in 0.960930 secs.
[08/17 16:18:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12796.577646   -9519.484131  6251.952148  12796.577646  300.011250 -9519.484131  21716.050303  600.011475      500.011475     8.0     -9519.484131            -1             -1
1   12796.577646   -9419.483887  6251.952148  12796.577646  300.011250 -9419.483887  21716.050303  500.011230      400.011475     8.0     -9519.484131         False          False
2   12796.577646   -9219.484131  6251.952148  12796.577646  300.011475 -9219.484131  21716.050303  300.011475      300.011475     6.0     -9519.484131         False          False
3   12796.577646   -9119.484131  6251.952148  12796.577646  300.010010 -9119.484131  21716.050303  200.011475      200.011475     7.0     -8919.472656         False          False
4   12796.577646   -9019.484131  6251.952148  12796.577646    1.000000 -9019.484131  21716.050303  100.011475      100.011475     8.0     -8919.472656         False          False
5   12796.577646   -8919.485352  6251.952148  12796.577646    1.000000 -8919.485352  21716.050303    0.012695        0.011475     9.0     -8919.472656         False          False
6   12796.577646   -8919.483887  6351.940674  12796.577646    0.010000 -8919.483887  21716.050303    0.011230        0.000000     9.0     -8919.472656         False           True
7   12796.577646   -8919.472656  6451.940674  12796.577646    0.010000 -8919.472656  21716.050303    0.000000        0.000000     9.0     -8919.472656         False           True
8   12796.587646   -8919.472656  6551.930664  12796.587646    0.010000 -8919.472656  21716.050303    0.010000       -0.000010     9.0     -8919.472656         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=2048047/4096.[0m
[08/17 16:18:37]  --------------------------------------------------------------------------------
[08/17 16:18:37]  Iteration: 76 (0 solution, 75 counterexamples)
[08/17 16:18:56]  Generator returned sat in 15.881069 secs.
[08/17 16:18:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:18:56]  Improved number of small numbers from 69 to 113 out of a max of 113
[08/17 16:18:56]  Verifer returned sat in 0.407672 secs.
[08/17 16:18:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12096.477783  -10119.472656  6951.94043  12096.477783    0.100098 -10119.472656  21715.950439  500.000000      500.000000     9.0    -10119.472656            -1             -1
1   12296.577881  -10019.472900  6951.94043  12296.577881  700.100098 -10019.472900  21716.050537  600.000244      600.000000     6.0    -10119.472656         False           True
2   12296.577881  -10019.472656  6951.94043  12296.577881  599.900146 -10019.472656  21716.050537  600.000000      500.000000     7.0     -9419.472656         False          False
3   12399.177734   -9821.572510  6951.94043  12399.177734  702.599854  -9821.572510  21716.050537  504.699707      502.599854     8.0     -9419.472656         False           True
4   12596.577881   -9819.472656  6951.94043  12596.577881  702.099854  -9819.472656  21716.050537  700.000000      600.000000     9.0     -9419.472656         False           True
5   12598.177734   -9620.572754  6951.94043  12598.177734  701.599854  -9620.572754  21716.050537  502.699951      501.599854     8.0     -9419.472656         False           True
6   12796.577637   -9619.472656  6951.94043  12796.577637  701.099854  -9619.472656  21716.050537  699.999756      599.999756     9.0     -9419.472656         False           True
7   12797.177734   -9419.472900  6951.94043  12797.177734  700.599854  -9419.472900  21716.050537  500.600098      500.599854     7.0     -9419.472656         False           True
8   12996.677490   -9319.472900  6951.94043  12996.677490  700.099854  -9319.472900  21716.150146  600.000244      600.000000     6.0     -9419.472656         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=600.[0m
[08/17 16:18:57]  --------------------------------------------------------------------------------
[08/17 16:18:57]  Iteration: 77 (0 solution, 76 counterexamples)
[08/17 16:19:02]  Generator returned sat in 2.394940 secs.
[08/17 16:19:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:19:02]  Improved number of small numbers from 59 to 113 out of a max of 113
[08/17 16:19:02]  Verifer returned sat in 0.318706 secs.
[08/17 16:19:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12496.567627   -9919.282715  6951.94043  12496.567627    0.100098 -9919.282715  21715.950439  699.899902      599.899902     9.0     -9919.282715            -1             -1
1   12596.467773   -9719.282715  6951.94043  12596.467773  799.800049 -9719.282715  21715.950439  599.800049      599.800049     6.0     -9919.282715         False           True
2   12696.667725   -9624.682861  6951.94043  12696.667725  700.000000 -9624.682861  21716.050537  605.300049      599.899902     7.0     -9019.382812         False          False
3   12796.567627   -9523.582764  6951.94043  12796.567627  705.199951 -9523.582764  21716.050537  604.099854      599.799805     8.0     -9019.382812         False           True
4   12896.667725   -9422.682861  6951.94043  12896.667725  704.199951 -9422.682861  21716.050537  603.300049      599.899902     9.0     -9019.382812         False           True
5   12996.567627   -9419.282715  6951.94043  12996.567627  703.199951 -9419.282715  21716.050537  699.799805      599.799805     8.0     -9019.382812         False           True
6   12998.967773   -9220.682861  6951.94043  12998.967773  702.199951 -9220.682861  21716.050537  503.600098      502.199951     9.0     -9019.382812         False           True
7   13196.567627   -9119.482910  6951.94043  13196.567627  701.199951 -9119.482910  21716.050537  600.000000      599.799805     7.0     -9019.382812         False           True
8   13296.767578   -9019.282715  6951.94043  13296.767578  700.199951 -9019.282715  21716.150391  599.899902      599.899902     6.0     -9019.382812         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1228595/2048.[0m
[08/17 16:19:03]  --------------------------------------------------------------------------------
[08/17 16:19:03]  Iteration: 78 (0 solution, 77 counterexamples)
[08/17 16:19:07]  Generator returned sat in 2.482742 secs.
[08/17 16:19:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:19:08]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:19:08]  Verifer returned sat in 0.172260 secs.
[08/17 16:19:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12496.567627   -9919.282715  6951.94043  12496.567627    0.100098 -9919.282715  21715.950439  699.899902      599.899902     9.0     -9919.282715            -1             -1
1   12596.467773   -9719.282715  6951.94043  12596.467773  799.800049 -9719.282715  21715.950439  599.800049      599.800049     6.0     -9919.282715         False           True
2   12696.667725   -9629.682617  6951.94043  12696.667725  700.000000 -9629.682617  21716.050537  610.299805      599.899902     7.0     -9019.382812         False          False
3   12796.567627   -9527.582520  6951.94043  12796.567627  710.199707 -9527.582520  21716.050537  608.099609      599.799805     8.0     -9019.382812         False           True
4   12896.667725   -9425.682617  6951.94043  12896.667725  708.199707 -9425.682617  21716.050537  606.299805      599.899902     9.0     -9019.382812         False           True
5   12996.567627   -9419.282715  6951.94043  12996.567627  706.199707 -9419.282715  21716.050537  699.799805      599.799805     8.0     -9019.382812         False           True
6   13000.967529   -9221.682373  6951.94043  13000.967529  704.199707 -9221.682373  21716.050537  506.599365      504.199707     9.0     -9019.382812         False           True
7   13196.567871   -9119.482666  6951.94043  13196.567871  702.199707 -9119.482666  21716.050537  600.000000      599.800049     7.0     -9019.382812         False           True
8   13296.767578   -9019.282715  6951.94043  13296.767578  700.199707 -9019.282715  21716.150391  599.899902      599.899902     6.0     -9019.382812         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1228595/2048.[0m
[08/17 16:19:08]  --------------------------------------------------------------------------------
[08/17 16:19:08]  Iteration: 79 (0 solution, 78 counterexamples)
[08/17 16:19:25]  Generator returned sat in 14.321745 secs.
[08/17 16:19:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:19:26]  Improved gap from 0.05 to 100
[08/17 16:19:27]  Improved number of small numbers from 48 to 50 out of a max of 114
[08/17 16:19:27]  Verifer returned sat in 1.960582 secs.
[08/17 16:19:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12376.607725  -10139.242715  6951.94043  12376.607725    0.100000 -10139.242715  22315.800439  200.050000          100.05     2.0    -10139.242715            -1             -1
1   12376.607725  -10039.242715  6951.94043  12376.607725    0.050049 -10039.242715  22315.800439  100.050000            0.05     2.0     -9939.192715         False          False
2   12376.607725   -9939.242715  6951.94043  12376.607725  100.000000  -9939.242715  22315.800439    0.050000          -99.95     3.0     -9939.192715         False          False
3   12887.647725   -9828.532715  6951.94043  12887.647725  511.090000  -9828.532715  22315.800439  400.380000          311.09     1.0     -9939.192715         False          False
4   12896.667725   -9639.242715  6951.94043  12896.667725  409.400000  -9639.242715  22315.800439  220.110000          220.11     2.0     -9939.192715         False          False
5   13079.757725   -9539.242715  6951.94043  13079.757725  403.200000  -9539.242715  22315.800439  303.200000          303.20     3.0     -9939.192715         False          False
6   13176.657725   -9539.192715  6951.94043  13176.657725  400.100000  -9539.192715  22315.800439  400.050000          300.10     4.0     -9939.192715         False          False
7   13176.657725   -9339.242715  6951.94043  13176.657725  343.220000  -9339.242715  22315.800439  200.100000          200.10     3.0     -9939.192715         False          False
8   13296.667725   -9339.242676  6951.94043  13296.667725  320.110000  -9339.242676  22315.800439  320.109961          220.11     4.0     -9939.192715         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1274429/4096.[0m
[08/17 16:19:28]  --------------------------------------------------------------------------------
[08/17 16:19:28]  Iteration: 80 (0 solution, 79 counterexamples)
[08/17 16:19:37]  Generator returned sat in 6.665775 secs.
[08/17 16:19:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:19:37]  Improved gap from 87.12222222222222 to 100
[08/17 16:19:38]  Improved number of small numbers from 42 to 48 out of a max of 114
[08/17 16:19:38]  Verifer returned sat in 1.240430 secs.
[08/17 16:19:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12476.457764   -9939.242715  6851.94043  12476.457764    0.100098 -9939.242715  22315.800439   99.900039       99.900039     5.0     -9939.242715            -1             -1
1   12589.335502   -9839.242715  6851.94043  12589.335502  212.777778 -9839.242715  22315.800439  112.777778      112.777778     1.0     -9939.242715         False           True
2   12589.535502   -9783.512939  6851.94043  12589.535502  112.977778 -9783.512939  22315.800439   57.248002       12.977778     2.0     -9726.264937         False          False
3   12589.535502   -9726.364937  6851.94043  12589.535502   57.148148 -9726.364937  22315.800439    0.100000      -87.022222     2.0     -9726.264937         False          False
4   12676.657725   -9639.242715  6851.94043  12676.657725   87.222222 -9639.242715  22315.800439    0.100000      -99.900000     1.0     -9726.264937         False          False
5   12808.891058   -9539.242715  6851.94043  12808.891058  132.333333 -9539.242715  22315.800439   32.333333      -67.666667     1.0     -9726.264937         False          False
6   12976.557725   -9439.242715  6851.94043  12976.557725  200.000000 -9439.242715  22315.800439  100.000000        0.000000     1.0     -9726.264937         False          False
7   13178.057725   -9239.242715  6851.94043  13178.057725  301.500000 -9239.242715  22315.800439  101.500000      101.500000     1.0     -9726.264937         False          False
8   13530.307725   -9185.592773  6851.94043  13530.307725  453.750000 -9185.592773  22315.800439  400.100059      353.750000     2.0     -9726.264937         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=1449369/4096.[0m
[08/17 16:19:39]  --------------------------------------------------------------------------------
[08/17 16:19:39]  Iteration: 81 (0 solution, 80 counterexamples)
[08/17 16:19:52]  Generator returned sat in 11.004616 secs.
[08/17 16:19:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:19:53]  Improved gap from 0.0 to 25.0
[08/17 16:19:53]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/17 16:19:53]  Verifer returned sat in 0.767917 secs.
[08/17 16:19:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   13026.562500   -9389.235352  6301.932861  13026.562500  425.002441 -9389.235352  22315.800537   99.997314       99.997314     5.0     -9389.235352            -1             -1
1   13351.565186   -9289.235352  6301.932861  13351.565186  425.000000 -9289.235352  22315.800537  325.000000      325.000000     1.0     -8964.235352         False          False
2   13351.565186   -9189.235352  6301.932861  13351.565186  324.997314 -9189.235352  22315.800537  225.000000      225.000000     2.0     -8964.235352         False          False
3   13351.565186   -9089.235352  6301.932861  13351.565186  224.997500 -9089.235352  22315.800537  125.000000      125.000000     3.0     -8964.235352         False          False
4   13351.565186   -8989.237793  6301.932861  13351.565186    0.010000 -8989.237793  22315.800537   25.002441       25.000000     4.0     -8964.235352         False          False
5   13351.565186   -8989.235352  6376.932861  13351.565186    0.010000 -8989.235352  22315.800537   25.000000        0.000000     5.0     -8964.235352         False          False
6   13351.565186   -8964.235352  6451.932861  13351.565186    0.010000 -8964.235352  22315.800537    0.000000      -25.000000     6.0     -8964.235352         False          False
7   13476.065186   -8939.235107  6452.432861  13476.065186  124.500000 -8939.235107  22315.800537   99.499756        0.000000     1.0     -8964.235352         False           True
8   13476.065186   -8839.735352  6452.432861  13476.065186    0.010000 -8839.735352  22315.800537    0.000000     -100.000000     2.0     -8964.235352         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=130001/400.[0m
[08/17 16:19:54]  --------------------------------------------------------------------------------
[08/17 16:19:54]  Iteration: 82 (0 solution, 81 counterexamples)
[08/17 16:20:02]  Generator returned sat in 5.333534 secs.
[08/17 16:20:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:20:03]  Improved gap from 0.011220703125 to 14.0625
[08/17 16:20:04]  Improved number of small numbers from 39 to 51 out of a max of 114
[08/17 16:20:04]  Verifer returned sat in 2.345429 secs.
[08/17 16:20:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   12372.497686   -9932.220459  6376.932861  12372.497686    0.005127 -9932.220459  21768.790537  535.927607      535.927500     8.0     -9932.220459            -1             -1
1   12372.497686   -9832.222900  6376.932861  12372.497686    0.002686 -9832.222900  21768.790537  435.930049      435.927500     9.0     -9396.292852         False           True
2   12372.497686   -9832.220352  6376.932861  12372.497686  435.929932 -9832.220352  21768.790537  435.927500      335.927500     8.0     -9396.292852         False           True
3   12372.500186   -9632.220459  6376.932861  12372.500186  435.930000 -9632.220459  21768.790537  235.930107      235.930000     8.0     -9396.292852         False           True
4   12372.500186   -9532.220459  6376.932861  12372.500186  218.465000 -9532.220459  21768.790537  135.930107      135.930000     9.0     -9396.292852         False           True
5   12372.500186   -9451.659180  6376.932861  12372.500186  109.732500 -9451.659180  21768.790537   55.368828       35.930000     8.0     -9396.292852         False           True
6   12372.500186   -9410.410977  6441.002861  12372.500186   55.366250 -9410.410977  21768.790537   14.120625        0.000000     8.0     -9396.292852         False           True
7   12386.562686   -9396.290352  6526.940361  12386.562686   28.183125 -9396.290352  21768.790537   14.062500        0.000000     5.0     -9396.292852         False           True
8   12386.562686   -9382.227852  6612.877686  12386.562686    0.010000 -9382.227852  21768.790537    0.000000      -14.062676     2.0     -9396.292852         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=274395/512.[0m
[08/17 16:20:05]  --------------------------------------------------------------------------------
[08/17 16:20:05]  Iteration: 83 (0 solution, 82 counterexamples)
[08/17 16:20:14]  Generator returned sat in 6.449255 secs.
[08/17 16:20:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:20:15]  Improved gap from 0.011220703125 to 12.5
[08/17 16:20:16]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/17 16:20:16]  Verifer returned sat in 1.708364 secs.
[08/17 16:20:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14298.600098   -8007.680420  4486.837646  14298.600098    0.005000 -8007.680420  21768.790527  537.489990      537.489746     9.0      -8007.68042            -1             -1
1   14298.600098   -7907.680176  4486.837646  14298.600098  400.005127 -7907.680176  21768.790527  437.489746      437.489746     7.0      -8007.68042         False           True
2   14298.600098   -7907.680176  4486.837646  14298.600098  400.005127 -7907.680176  21768.790527  437.489746      337.489746     7.0      -8007.68042          True           True
3   14298.600098   -7707.680420  4486.837646  14298.600098  400.000000 -7707.680420  21768.790527  237.489990      237.489746     8.0      -7470.19043         False           True
4   14298.600098   -7607.680176  4486.837646  14298.600098  200.000000 -7607.680176  21768.790527  137.489746      137.489746     9.0      -7470.19043         False           True
5   14298.600098   -7520.190186  4486.837646  14298.600098  100.000000 -7520.190186  21768.790527   49.999756       37.489746     8.0      -7470.19043         False           True
6   14298.600342   -7482.685547  4549.343018  14298.600342   50.000000 -7482.685547  21768.790527   12.495361       -0.004639     8.0      -7470.19043         False           True
7   14311.104980   -7470.185547  4636.843018  14311.104980   25.000000 -7470.185547  21768.790527   12.500000        0.000000     1.0      -7470.19043         False           True
8   14311.104980   -7457.685547  4636.843018  14311.104980    0.010000 -7457.685547  21768.790527    0.000000     -100.000000     2.0      -7470.19043         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=275195/512.[0m
[08/17 16:20:16]  --------------------------------------------------------------------------------
[08/17 16:20:16]  Iteration: 84 (0 solution, 83 counterexamples)
[08/17 16:20:22]  Generator returned sat in 3.249186 secs.
[08/17 16:20:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:20:23]  Improved gap from 12.0 to 12.5
[08/17 16:20:24]  Improved number of small numbers from 39 to 114 out of a max of 114
[08/17 16:20:24]  Verifer returned sat in 1.660038 secs.
[08/17 16:20:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   14084.017822   -9939.962158  4486.837402  14084.017822    0.099854 -9939.962158  23508.880127  515.099854      515.099854     7.0     -9939.962158            -1             -1
1   14084.017822   -9840.062256  4486.837402  14084.017822  415.099854 -9840.062256  23508.880127  415.199951      415.099854     8.0     -9939.962158         False           True
2   14084.017822   -9839.962158  4486.837402  14084.017822  415.100098 -9839.962158  23508.880127  415.099854      315.099854     6.0     -9939.962158          True           True
3   14084.017822   -9639.962402  4486.837402  14084.017822  415.000000 -9639.962402  23508.880127  215.100098      215.099854     7.0     -9424.862305         False          False
4   14084.017822   -9539.962158  4486.837402  14084.017822  207.000000 -9539.962158  23508.880127  115.099854      115.099854     8.0     -9424.862305         False           True
5   14084.017822   -9475.962402  4486.837402  14084.017822  103.000000 -9475.962402  23508.880127   51.100098       15.099854     9.0     -9424.862305         False           True
6   14084.017822   -9437.362305  4571.737549  14084.017822   51.000000 -9437.362305  23508.880127   12.500000        0.000000     8.0     -9424.862305         False           True
7   14096.517822   -9424.862305  4659.237549  14096.517822   25.000000 -9424.862305  23508.880127   12.500000        0.000000     8.0     -9424.862305         False           True
8   14096.517822   -9412.362305  4659.237793  14096.517822   12.000000 -9412.362305  23508.880127    0.000000      -99.999756     2.0     -9424.862305         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=5151/10.[0m
[08/17 16:20:24]  --------------------------------------------------------------------------------
[08/17 16:20:24]  Iteration: 85 (0 solution, 84 counterexamples)
[08/17 16:20:30]  Generator returned sat in 3.217807 secs.
[08/17 16:20:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:20:32]  Improved gap from 10.863569779829545 to 10.9375
[08/17 16:20:32]  Improved number of small numbers from 34 to 114 out of a max of 114
[08/17 16:20:32]  Verifer returned sat in 1.613594 secs.
[08/17 16:20:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    19952.72876   -3595.213867 -1857.910889  19952.72876    0.100000 -3595.213867  23008.930176  539.012451      539.012451     9.0     -3595.213867            -1             -1
1    19952.72876   -3495.213867 -1857.910889  19952.72876    0.050049 -3495.213867  23008.930176  439.012451      439.012451     9.0     -3056.201416         False           True
2    19952.72876   -3451.251465 -1857.910889  19952.72876    0.050000 -3451.251465  23008.930176  395.050049      339.012451     8.0     -3056.201416         False           True
3    19952.72876   -3395.213867 -1857.910889  19952.72876  395.000000 -3395.213867  23008.930176  339.012451      239.012451     8.0     -3056.201416         False           True
4    19952.72876   -3195.213867 -1857.910889  19952.72876  196.000000 -3195.213867  23008.930176  139.012451      139.012451     9.0     -3056.201416         False           True
5    19952.72876   -3103.001465 -1857.910889  19952.72876   96.500000 -3103.001465  23008.930176   46.800049       39.012451     8.0     -3056.201416         False           True
6    19952.72876   -3067.138916 -1796.923340  19952.72876   46.750000 -3067.138916  23008.930176   10.937500        0.000000     9.0     -3056.201416         False           True
7    19963.66626   -3056.201416 -1707.860840  19963.66626   21.875000 -3056.201416  23008.930176   10.937500        0.000000     9.0     -3056.201416         False           True
8    19963.66626   -3045.263916 -1707.860596  19963.66626    9.437500 -3045.263916  23008.930176    0.000000      -99.999756     2.0     -3056.201416         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=2207795/4096.[0m
[08/17 16:20:33]  --------------------------------------------------------------------------------
[08/17 16:20:33]  Iteration: 86 (0 solution, 85 counterexamples)
[08/17 16:20:38]  Generator returned sat in 3.261639 secs.
[08/17 16:20:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:20:40]  Improved gap from 10.9375 to 10.9375
[08/17 16:20:40]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 16:20:40]  Verifer returned sat in 1.453752 secs.
[08/17 16:20:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21646.388916   -1872.541260 -3580.583496  21646.388916    0.005127 -1872.541260  23008.930176  510.000000      510.000000     6.0      -1872.54126            -1             -1
1   21646.388916   -1872.536621 -3580.583496  21646.388916  509.995000 -1872.536621  23008.930176  509.995361      410.000000     6.0      -1872.54126         False          False
2   21646.388916   -1772.541260 -3580.583496  21646.388916  509.995000 -1772.541260  23008.930176  410.000000      310.000000     7.0      -1872.54126         False          False
3   21646.388916   -1672.541260 -3580.583496  21646.388916  410.000000 -1672.541260  23008.930176  310.000000      210.000000     8.0      -1362.54126          True           True
4   21646.388916   -1472.541260 -3580.583496  21646.388916  203.000000 -1472.541260  23008.930176  110.000000      110.000000     7.0      -1362.54126         False           True
5   21646.388916   -1472.541260 -3580.583496  21646.388916   99.500000 -1472.541260  23008.930176  110.000000       10.000000     7.0      -1362.54126         False           True
6   21646.388916   -1362.541504 -3501.520752  21646.388916   47.750000 -1362.541504  23008.930176    0.000244      -10.937256     8.0      -1362.54126         False           True
7   21668.263672   -1351.604004 -3412.458252  21668.263672   21.875000 -1351.604004  23008.930176   10.937500        0.000000     1.0      -1362.54126         False           True
8   21668.263672   -1340.666504 -3412.458252  21668.263672    0.010000 -1340.666504  23008.930176    0.000000     -100.000000     2.0      -1362.54126         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=510.[0m
[08/17 16:20:41]  --------------------------------------------------------------------------------
[08/17 16:20:41]  Iteration: 87 (0 solution, 86 counterexamples)
[08/17 16:21:13]  Generator returned sat in 29.688566 secs.
[08/17 16:21:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:21:13]  Improved gap from 0.0025 to 100
[08/17 16:21:14]  Improved number of small numbers from 44 to 114 out of a max of 114
[08/17 16:21:14]  Verifer returned sat in 0.535296 secs.
[08/17 16:21:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21353.489014   -1974.751465 -3478.373535  21353.489014    0.100000 -1974.751465  22921.640381  406.600098      406.600098     6.0     -1974.751465            -1             -1
1   21446.388672   -1974.351074 -3478.373535  21446.388672  499.499756 -1974.351074  22921.640381  499.099365      399.499756     7.0     -1974.751465         False          False
2   21446.789062   -1774.751465 -3478.373535  21446.789062  499.499756 -1774.751465  22921.640381  299.900146      299.900146     8.0     -1974.751465         False          False
3   21646.388672   -1774.751465 -3478.373535  21646.388672  499.499756 -1774.751465  22921.640381  499.499756      399.499756     8.0     -1974.751465          True           True
4   21646.388672   -1674.751221 -3478.373535  21646.388672  497.499756 -1674.751221  22921.640381  399.499512      299.499756     9.0     -1974.751465         False           True
5   21742.388916   -1568.151367 -3478.373535  21742.388916  495.499756 -1568.151367  22921.640381  388.899902      295.500000     9.0     -1179.251465          True           True
6   21846.988770   -1474.751465 -3478.373535  21846.988770  493.499756 -1474.751465  22921.640381  400.099854      300.099854     4.0     -1179.251465         False           True
7   21846.988770   -1274.751465 -3478.373535  21846.988770  299.500000 -1274.751465  22921.640381  200.099854      200.099854     3.0     -1179.251465         False          False
8   22046.388672   -1174.751465 -3478.373535  22046.388672  399.499756 -1174.751465  22921.640381  299.499756      299.499756     3.0     -1179.251465         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=832717/2048.[0m
[08/17 16:21:14]  --------------------------------------------------------------------------------
[08/17 16:21:14]  Iteration: 88 (0 solution, 87 counterexamples)
[08/17 16:21:24]  Generator returned sat in 6.920569 secs.
[08/17 16:21:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:21:26]  Improved gap from 0.0 to 100
[08/17 16:21:27]  Improved number of small numbers from 40 to 114 out of a max of 114
[08/17 16:21:27]  Verifer returned sat in 2.483790 secs.
[08/17 16:21:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20257.278809   -2753.751221 -2788.663818  20257.278809   89.290039 -2753.751221  22921.640381   89.389648        0.099609     4.0     -2753.751221            -1             -1
1   20257.278809   -2664.461182 -2788.663818  20257.278809   89.290039 -2664.461182  22921.640381    0.099609      -99.900391     2.0     -2753.751221         False          False
2   20857.179199   -2564.461182 -2788.663818  20857.179199  600.000000 -2564.461182  22921.740479  499.899902      399.899902     1.0     -2753.751221         False          False
3   20857.179199   -2440.751465 -2788.663818  20857.179199  499.800049 -2440.751465  22921.740479  376.190186      299.899902     2.0     -2064.561279         False          False
4   20885.388916   -2264.461182 -2788.663818  20885.388916  404.399902 -2264.461182  22921.740479  228.109619      228.109619     3.0     -2064.561279         False          False
5   21057.479248   -2264.361328 -2788.663818  21057.479248  400.199951 -2264.361328  22921.740479  400.100098      300.199951     4.0     -2064.561279         False          False
6   21057.479248   -2064.461426 -2788.663818  21057.479248  348.149902 -2064.461426  22921.740479  200.200195      200.199951     3.0     -2064.561279         False          False
7   21217.499023   -1964.461426 -2788.663818  21217.499023  360.219971 -1964.461426  22921.740479  260.219971      260.219727     3.0     -2064.561279         False          False
8   21285.388916   -1964.361328 -2788.663818  21285.388916  328.109863 -1964.361328  22921.740479  328.009766      228.109619     4.0     -2064.561279         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=818995/2048.[0m
[08/17 16:21:27]  --------------------------------------------------------------------------------
[08/17 16:21:27]  Iteration: 89 (0 solution, 88 counterexamples)
[08/17 16:21:41]  Generator returned sat in 11.058670 secs.
[08/17 16:21:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:21:42]  Improved gap from 0.0 to 23.4375
[08/17 16:21:43]  Improved number of small numbers from 35 to 114 out of a max of 114
[08/17 16:21:43]  Verifer returned sat in 1.723178 secs.
[08/17 16:21:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20756.709717   -2068.948242 -2788.663818  20756.709717    0.002500 -2068.948242  22725.645508  100.012451        0.012451     3.0     -2068.948242            -1             -1
1   20780.152344   -1968.930664 -2712.118896  20780.152344  123.455078 -1968.930664  22725.645508   23.437500        0.000000     1.0     -2068.948242         False          False
2   20880.167236   -1868.933105 -2712.118896  20880.167236  123.452393 -1868.933105  22725.647949   23.452393        0.012451     1.0     -1845.480713         False          False
3   20980.167236   -1745.493164 -2712.118896  20980.167236  123.452393 -1745.493164  22725.647949    0.012451        0.012451     1.0     -1845.480713         False          False
4   21301.609863   -1645.493164 -2712.118896  21301.609863  321.455078 -1645.493164  22947.090576    0.012451        0.012451     1.0     -1845.480713         False          False
5   21301.609863   -1645.493164 -2635.556396  21301.609863    0.010000 -1645.493164  22947.090576    0.012451      -23.425049     1.0     -1845.480713         False          False
6   21523.037354   -1622.055420 -2635.556396  21523.037354  221.439941 -1622.055420  23045.080566  100.012207        0.012451     1.0     -1845.480713         False          False
7   21523.037354   -1522.045654 -2559.003906  21523.037354    0.010000 -1522.045654  23045.080566    0.002441      -23.435059     2.0     -1845.480713         False          False
8   21644.482422   -1498.607910 -2559.003906  21644.482422  121.447510 -1498.607910  23045.080566   98.009766       -1.989990     1.0     -1845.480713         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=51/4096.[0m
[08/17 16:21:43]  --------------------------------------------------------------------------------
[08/17 16:21:43]  Iteration: 90 (0 solution, 89 counterexamples)
[08/17 16:21:58]  Generator returned sat in 11.930900 secs.
[08/17 16:21:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:21:59]  Improved gap from 0.0025 to 12.5
[08/17 16:21:59]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:21:59]  Verifer returned sat in 1.198476 secs.
[08/17 16:21:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20794.020264   -2131.827881 -2712.118896  20794.020264  430.500000 -2131.827881  22725.547852  200.300293      200.000244     3.0     -2131.827881            -1             -1
1   21024.120117   -2031.527832 -2712.118896  21024.120117  430.400146 -2031.527832  22725.547852  330.100098      330.100098     2.0     -1701.427734         False          False
2   21124.319824   -2031.427734 -2712.118896  21124.319824  430.299805 -2031.427734  22725.647705  430.099854      330.199951     3.0     -1601.327881         False          False
3   21124.319824   -1931.527832 -2712.118896  21124.319824  430.000000 -1931.527832  22725.647705  330.199951      230.199951     4.0     -1601.327881         False          False
4   21124.319824   -1731.528076 -2712.118896  21124.319824  214.000000 -1731.528076  22725.647705  130.200195      130.199951     4.0     -1601.327881         False           True
5   21124.319824   -1653.427734 -2712.118896  21124.319824  106.000000 -1653.427734  22725.647705   52.099854       30.199951     4.0     -1601.327881         False           True
6   21124.319824   -1606.627686 -2649.519043  21124.319824   52.000000 -1606.627686  22725.647705    5.299805       -7.200195     5.0     -1601.327881         False           True
7   21144.020020   -1594.127686 -2562.019043  21144.020020   25.000000 -1594.127686  22725.647705   12.500000        0.000000     1.0     -1601.327881         False           True
8   21144.020020   -1581.627686 -2562.018799  21144.020020    0.500000 -1581.627686  22725.647705    0.000000      -99.999756     2.0     -1601.327881         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1352499/4096.[0m
[08/17 16:22:00]  --------------------------------------------------------------------------------
[08/17 16:22:00]  Iteration: 91 (0 solution, 90 counterexamples)
[08/17 16:22:23]  Generator returned sat in 20.350263 secs.
[08/17 16:22:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:22:24]  Improved gap from 0.005 to 0
[08/17 16:22:25]  Improved number of small numbers from 58 to 74 out of a max of 114
[08/17 16:22:25]  Verifer returned sat in 1.228474 secs.
[08/17 16:22:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21348.709961   -1376.940430 -3466.706543  21348.709961    0.001465 -1376.940430  22725.647705    0.002686        0.002441     8.0     -1376.940430            -1             -1
1   21348.709961   -1376.939453 -3366.708994  21348.709961    0.000625 -1376.939453  22725.647705    0.001709       -0.000010     9.0     -1376.937744         False           True
2   21648.709961   -1276.937734 -3366.708994  21648.709961  300.001709 -1276.937734  22725.647705  199.999990      199.999990     1.0     -1376.937744         False           True
3   21748.711221   -1276.937012 -3366.708994  21748.711221  300.001250 -1276.937012  22725.648330  299.999902      200.000625     2.0      -976.937109         False          False
4   21748.711221   -1076.937744 -3366.708994  21748.711221    0.010000 -1076.937744  22725.648330  100.000635      100.000625     3.0      -976.937109         False          False
5   21748.711221   -1076.937500 -3366.708994  21748.711221    0.010000 -1076.937500  22725.648330  100.000391        0.000625     3.0      -976.937109         False          False
6   21748.711221    -976.937109 -3266.709619  21748.711221    0.010000  -976.937109  22725.648330    0.000000        0.000000     4.0      -976.937109         False          False
7   21748.721221    -976.937109 -3166.719619  21748.721221    0.010000  -976.937109  22725.648330    0.010000        0.000000     4.0      -976.937109         False          False
8   21748.721221    -976.927109 -3166.719482  21748.721221    0.010000  -976.927109  22725.648330    0.000000      -99.999863     2.0      -976.937109         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=320001/1600.[0m
[08/17 16:22:25]  --------------------------------------------------------------------------------
[08/17 16:22:25]  Iteration: 92 (0 solution, 91 counterexamples)
[08/17 16:22:42]  Generator returned sat in 14.363339 secs.
[08/17 16:22:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:22:43]  Improved gap from 0.0 to 25.0
[08/17 16:22:44]  Improved number of small numbers from 42 to 114 out of a max of 114
[08/17 16:22:44]  Verifer returned sat in 0.970979 secs.
[08/17 16:22:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21301.292969   -1549.354736 -3317.219727  21301.292969    0.002500 -1549.354736  22725.647705  125.000000      125.000000     8.0     -1549.354736            -1             -1
1   21401.290283   -1474.354736 -3317.219727  21401.290283  224.997314 -1474.354736  22725.647705  149.997314      124.997314     3.0     -1549.354736         False           True
2   21476.290283   -1424.354492 -3317.219727  21476.290283  224.997314 -1424.354492  22725.647705  174.997070       99.997314     2.0     -1549.354736         False          False
3   21601.295654   -1249.354736 -3317.219727  21601.295654  300.002441 -1249.354736  22725.650391  125.000000      125.000000     1.0     -1549.354736         False          False
4   21601.295654   -1149.357422 -3317.219727  21601.295654    0.010000 -1149.357422  22725.650391   25.002686       25.000000     2.0     -1549.354736         False          False
5   21601.295654   -1149.354736 -3242.219727  21601.295654    0.010000 -1149.354736  22725.650391   25.000000        0.000000     3.0     -1549.354736         False          False
6   21601.295654   -1124.354736 -3167.219727  21601.295654    0.010000 -1124.354736  22725.650391    0.000000      -25.000000     4.0     -1549.354736         False          False
7   21725.795654   -1099.354492 -3166.719727  21725.795654  124.500000 -1099.354492  22725.650391   99.499756        0.000000     1.0      -999.854736          True           True
8   21725.795654    -999.854736 -3166.719727  21725.795654    0.010000  -999.854736  22725.650391    0.000000     -100.000000     2.0      -999.854736         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=125.[0m
[08/17 16:22:44]  --------------------------------------------------------------------------------
[08/17 16:22:44]  Iteration: 93 (0 solution, 92 counterexamples)
[08/17 16:23:12]  Generator returned sat in 25.052453 secs.
[08/17 16:23:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:23:13]  Improved gap from 0.0 to 35.9375
[08/17 16:23:14]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/17 16:23:14]  Verifer returned sat in 1.445432 secs.
[08/17 16:23:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21559.298340   -1167.349365 -3473.732422  21559.298340  198.899902 -1167.349365  22725.647705    1.000000        1.000000     6.0     -1167.349365            -1             -1
1   21757.098389   -1166.249512 -3473.732422  21757.098389  198.800049 -1166.249512  22725.647705  197.700195       98.800049     1.0      -968.549316         False           True
2   21758.198242    -968.549561 -3473.732422  21758.198242  198.800049  -968.549561  22725.647705    1.100098       -0.100098     2.0      -968.549316         False          False
3   21801.285645    -967.349365 -3416.819580  21801.285645   44.187500  -967.349365  22725.647705   42.987305       -0.099854     1.0      -924.362061         False           True
4   21801.485840    -924.262207 -3358.907227  21801.485840   43.187500  -924.262207  22725.647705    0.100342      -41.987305     1.0      -924.362061         False          False
5   21843.572998    -882.174561 -3294.844727  21843.572998   42.187500  -882.174561  22725.647705    0.099854      -35.837646     1.0      -924.362061         False          False
6   21884.660645    -846.237061 -3230.782471  21884.660645   41.187500  -846.237061  22725.647705    5.250000      -30.687744     1.0      -924.362061         False          False
7   21919.598145    -810.299316 -3166.719971  21919.598145   40.187500  -810.299316  22725.647705    4.249756      -31.687744     1.0      -924.362061         False          False
8   21954.535889    -774.361816 -3166.719971  21954.535889   39.187500  -774.361816  22725.647705    3.250000      -96.750000     1.0      -924.362061         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=405095/4096.[0m
[08/17 16:23:14]  --------------------------------------------------------------------------------
[08/17 16:23:14]  Iteration: 94 (0 solution, 93 counterexamples)
[08/17 16:23:24]  Generator returned sat in 6.909039 secs.
[08/17 16:23:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:23:25]  Improved gap from 0.02496337890625 to 25.0
[08/17 16:23:26]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:23:26]  Verifer returned sat in 1.258726 secs.
[08/17 16:23:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21566.023193   -1684.624512 -3056.407227  21566.023193    0.050000 -1684.624512  22725.647705  525.000000           425.0     9.0     -1684.624512            -1             -1
1   21566.023193   -1584.624512 -3056.407227  21566.023193    0.050049 -1584.624512  22725.647705  425.000000           325.0     2.0     -1684.624512         False           True
2   21566.023193   -1484.624512 -3056.407227  21566.023193  424.999756 -1484.624512  22725.647705  325.000000           225.0     3.0     -1684.624512         False          False
3   21566.023193   -1284.624512 -3056.407227  21566.023193    0.050000 -1284.624512  22725.647705  125.000000           125.0     4.0     -1159.624512         False          False
4   21566.023193   -1184.674561 -3056.407227  21566.023193    1.000000 -1184.674561  22725.647705   25.050049            25.0     5.0     -1159.624512         False          False
5   21566.023193   -1184.624512 -2981.407227  21566.023193    1.000000 -1184.624512  22725.647705   25.000000             0.0     6.0     -1159.624512         False          False
6   21566.023193   -1159.624512 -2906.407227  21566.023193    1.000000 -1159.624512  22725.647705    0.000000           -25.0     7.0     -1159.624512         False          False
7   21689.523193   -1134.624512 -2904.907227  21689.523193  123.500000 -1134.624512  22725.647705   98.500000             0.0     1.0     -1159.624512         False           True
8   21689.523193   -1036.124512 -2904.907227  21689.523193    1.000000 -1036.124512  22725.647705    0.000000          -100.0     2.0     -1159.624512         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=425.[0m
[08/17 16:23:26]  --------------------------------------------------------------------------------
[08/17 16:23:26]  Iteration: 95 (0 solution, 94 counterexamples)
[08/17 16:23:35]  Generator returned sat in 5.947063 secs.
[08/17 16:23:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:23:37]  Improved gap from 0.05 to 23.4375
[08/17 16:23:38]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 16:23:38]  Verifer returned sat in 2.490764 secs.
[08/17 16:23:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21417.558105   -1556.464600 -3056.407227  21417.558105    0.100098 -1556.464600  22725.647705  248.375000      148.375000     2.0     -1556.464600            -1             -1
1   21417.558105   -1456.464355 -3056.407227  21417.558105  248.375000 -1456.464355  22725.647705  148.374756       48.375000     2.0     -1556.464600         False          False
2   21417.558105   -1331.527100 -3004.782227  21417.558105  148.275146 -1331.527100  22725.647705   23.437500        0.000000     3.0     -1308.089600         False          False
3   21417.658203   -1308.089600 -2928.219727  21417.658203   23.537598 -1308.089600  22725.647705    0.100098      -23.337402     4.0     -1307.989502         False          False
4   21664.433105   -1187.677246 -2928.219727  21664.433105  246.875000 -1187.677246  22725.647705  126.462646      123.437500     1.0     -1307.989502         False           True
5   21664.433105   -1123.783447 -2928.219727  21664.433105  123.937500 -1123.783447  22725.647705   62.568848       23.437500     2.0     -1307.989502         False          False
6   21664.433105   -1084.652100 -2851.657227  21664.433105   62.468750 -1084.652100  22725.647705   23.437500        0.000000     3.0     -1307.989502         False          False
7   21672.729980   -1061.214600 -2775.094727  21672.729980   31.734375 -1061.214600  22725.647705    8.296875      -15.140625     4.0     -1307.989502         False          False
8   21789.395752   -1037.776855 -2775.094727  21789.395752  124.962646 -1037.776855  22725.647705  101.524902        1.525146     1.0      -936.251953          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1187/8.[0m
[08/17 16:23:38]  --------------------------------------------------------------------------------
[08/17 16:23:38]  Iteration: 96 (0 solution, 95 counterexamples)
[08/17 16:23:57]  Generator returned sat in 15.500845 secs.
[08/17 16:23:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:23:57]  Improved gap from 0.0 to 0
[08/17 16:23:58]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/17 16:23:58]  Verifer returned sat in 0.798066 secs.
[08/17 16:23:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21388.420898   -1237.727051 -3275.195068  21388.420898    0.025000 -1237.727051  22626.122803    0.025146       -0.025146     2.0     -1237.727051            -1             -1
1   21488.445801   -1237.676758 -3275.195068  21488.445801  100.050049 -1237.676758  22626.122803   99.999756       -0.000244     1.0     -1237.727051         False          False
2   21689.495850   -1037.677002 -3275.195068  21689.495850  301.049805 -1037.677002  22626.122803  101.050049      101.049805     1.0     -1237.727051         False          False
3   21889.470947    -937.677002 -3275.195068  21889.470947  301.025146  -937.677002  22626.122803  201.025146      201.024902     2.0      -736.651855         False          False
4   21889.470947    -837.677002 -3275.195068  21889.470947    1.000000  -837.677002  22626.122803  101.025146      101.024902     2.0      -736.651855         False          False
5   21889.470947    -737.701953 -3275.195068  21889.470947    1.000000  -737.701953  22626.122803    1.050098        1.024902     3.0      -736.651855         False          False
6   21889.470947    -737.676758 -3176.219971  21889.470947    1.000000  -737.676758  22626.122803    1.024902        0.000000     4.0      -736.651855         False          False
7   21889.470947    -736.651855 -3077.219727  21889.470947    1.000000  -736.651855  22626.122803    0.000000       -0.999756     5.0      -736.651855         False          False
8   21890.470947    -735.652100 -3077.219727  21890.470947    1.000000  -735.652100  22626.122803    0.000244      -99.999756     1.0      -736.651855         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=205875/1024.[0m
[08/17 16:23:58]  --------------------------------------------------------------------------------
[08/17 16:23:58]  Iteration: 97 (0 solution, 96 counterexamples)
[08/17 16:24:19]  Generator returned sat in 18.220159 secs.
[08/17 16:24:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:24:22]  Improved gap from 0.0 to 43.75
[08/17 16:24:22]  Improved number of small numbers from 82 to 90 out of a max of 114
[08/17 16:24:22]  Verifer returned sat in 2.734819 secs.
[08/17 16:24:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21734.695801   -1091.426758 -3275.619971  21734.695801    0.100098 -1091.426758  22626.122803  199.999756       99.999756     9.0     -1091.426758            -1             -1
1   21734.695801    -935.176758 -3275.619971  21734.695801  199.999756  -935.176758  22626.122803   43.749756       -0.000244     2.0     -1091.426758         False           True
2   21890.846191    -791.426758 -3275.619971  21890.846191  199.900146  -791.426758  22626.122803   56.150146       56.150146     1.0      -735.276611         False          False
3   22091.546045    -708.576758 -3275.619971  22091.546045  256.850000  -708.576758  22626.122803  174.000000      156.850000     1.0      -735.276611         False          False
4   22091.546045    -596.976807 -3275.619971  22091.546045  126.925000  -596.976807  22626.122803   62.400049       56.850000     2.0      -735.276611         False          False
5   22091.546045    -591.426758 -3232.469971  22091.546045   61.962500  -591.426758  22626.122803   56.850000        0.000000     3.0      -735.276611         False          False
6   22135.196045    -534.576758 -3176.219971  22135.196045  100.500000  -534.576758  22626.122803   43.650000       -0.100000     4.0      -490.926758          True           True
7   22179.046045    -490.826758 -3119.969971  22179.046045   87.500000  -490.826758  22626.122803   43.750000        0.000000     1.0      -490.926758         False           True
8   22179.046045    -447.076758 -3119.969971  22179.046045   42.250000  -447.076758  22626.122803    0.000000     -100.000000     2.0      -490.926758         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=642867/4096.[0m
[08/17 16:24:23]  --------------------------------------------------------------------------------
[08/17 16:24:23]  Iteration: 98 (0 solution, 97 counterexamples)
[08/17 16:24:31]  Generator returned sat in 5.091011 secs.
[08/17 16:24:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:24:31]  Improved gap from 0.0 to 100
[08/17 16:24:32]  Improved number of small numbers from 66 to 100 out of a max of 114
[08/17 16:24:32]  Verifer returned sat in 1.020862 secs.
[08/17 16:24:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21235.055664   -1591.066895 -3232.469971  21235.055664    0.050000 -1591.066895  22626.122559  200.000000      100.000000     9.0     -1591.066895            -1             -1
1   21235.055664   -1491.066895 -3232.469971  21235.055664  199.950000 -1491.066895  22626.122559  100.000000        0.000000     2.0     -1591.066895         False           True
2   21244.600342   -1381.572313 -3232.469971  21244.600342  109.544678 -1381.572313  22626.122559    0.050097      -90.455322     1.0     -1381.522217          True           True
3   21335.105801   -1291.066758 -3232.469971  21335.105801   90.555556 -1291.066758  22626.122559    0.050000      -99.949863     1.0     -1291.016758         False          False
4   21469.389134   -1191.066895 -3232.469971  21469.389134  134.333333 -1191.066895  22626.122559   34.333470      -65.666530     1.0     -1291.016758         False          False
5   21635.055664   -1091.066895 -3232.469971  21635.055664  200.000000 -1091.066895  22626.122559  100.000000        0.000000     1.0     -1291.016758         False          False
6   21833.555664    -937.266846 -3232.469971  21833.555664  298.500000  -937.266846  22626.122559  144.699951       98.500000     1.0     -1291.016758         False          False
7   22135.105713    -791.116943 -3232.469971  22135.105713  446.250000  -791.116943  22626.122559  300.100098      300.050049     1.0     -1291.016758         False          False
8   22502.880615    -791.066895 -3232.469971  22502.880615  667.875000  -791.066895  22893.897461  400.050049      300.050049     2.0     -1291.016758         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=1229005/4096.[0m
[08/17 16:24:33]  --------------------------------------------------------------------------------
[08/17 16:24:33]  Iteration: 99 (0 solution, 98 counterexamples)
[08/17 16:24:55]  Generator returned sat in 18.741264 secs.
[08/17 16:24:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:24:56]  Improved gap from 0.0 to 23.4375
[08/17 16:24:56]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/17 16:24:56]  Verifer returned sat in 1.463920 secs.
[08/17 16:24:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21388.380371   -1485.616943 -3285.744873  21388.380371  271.362305 -1485.616943  22626.122314  247.875000      200.050049     9.0     -1485.616943            -1             -1
1   21411.817871   -1337.791992 -3285.744873  21411.817871  271.312500 -1337.791992  22626.122314  123.487549      123.487549     2.0     -1214.304443         False           True
2   21411.817871   -1237.791992 -3285.744873  21411.817871    0.100000 -1237.791992  22626.122314   23.487549       23.487549     3.0     -1214.304443         False          False
3   21411.817871   -1237.741943 -3209.232422  21411.817871    0.050000 -1237.741943  22626.122314   23.437500        0.000000     4.0     -1214.304443         False          False
4   21635.255371   -1114.354492 -3209.232422  21635.255371  246.875000 -1114.354492  22626.122314  123.487549      123.437500     1.0     -1214.304443         False           True
5   21635.255371   -1052.635498 -3209.232422  21635.255371  123.437500 -1052.635498  22626.122314   61.768555       23.437500     2.0     -1214.304443         False          False
6   21635.255371   -1014.304443 -3132.669922  21635.255371   61.718750 -1014.304443  22626.122314   23.437500        0.000000     3.0     -1214.304443         False          False
7   21642.677246    -990.866943 -3056.107422  21642.677246   30.859375  -990.866943  22626.122314    7.421875      -16.015625     4.0     -1214.304443         False          False
8   21757.742920    -967.429199 -3056.107422  21757.742920  122.487549  -967.429199  22626.122314   99.049805       -0.949951     1.0      -868.379395          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819405/4096.[0m
[08/17 16:24:57]  --------------------------------------------------------------------------------
[08/17 16:24:57]  Iteration: 100 (0 solution, 99 counterexamples)
[08/17 16:25:04]  Generator returned sat in 3.832363 secs.
[08/17 16:25:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:25:05]  Improved gap from 23.4375 to 23.4375
[08/17 16:25:06]  Improved number of small numbers from 42 to 114 out of a max of 114
[08/17 16:25:06]  Verifer returned sat in 1.691156 secs.
[08/17 16:25:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21467.242920   -1309.244385 -3420.132324  21467.242920    0.099854 -1309.244385  22527.612305  248.875000      200.000000     3.0     -1309.244385            -1             -1
1   21467.242920   -1160.369629 -3420.132324  21467.242920    0.100098 -1160.369629  22527.612305  100.000244      100.000000     3.0     -1309.244385         False          False
2   21467.342773   -1060.369629 -3420.132324  21467.342773  100.100098 -1060.369629  22527.612305    0.100098        0.099854     4.0     -1309.244385         False          False
3   21490.680176   -1060.369385 -3343.569824  21490.680176   23.437500 -1060.369385  22527.612305   23.437256       -0.000244     4.0     -1036.932129          True           True
4   21714.117920    -938.931885 -3343.569824  21714.117920  246.875000  -938.931885  22527.612305  125.437500      123.437500     1.0     -1036.932129         False           True
5   21714.117920    -936.931885 -3343.569824  21714.117920  123.437500  -936.931885  22527.612305  123.437500       23.437500     2.0     -1036.932129         False          False
6   21714.117920    -836.931885 -3267.007324  21714.117920   61.718750  -836.931885  22527.612305   23.437500        0.000000     3.0     -1036.932129         False          False
7   21721.539795    -813.494385 -3190.444824  21721.539795   30.859375  -813.494385  22527.612305    7.421875      -16.015625     4.0     -1036.932129         False          False
8   21837.555420    -790.056885 -3190.444824  21837.555420  123.437500  -790.056885  22527.612305  100.000000        0.000000     1.0      -690.056885          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=200.[0m
[08/17 16:25:06]  --------------------------------------------------------------------------------
[08/17 16:25:06]  Iteration: 101 (0 solution, 100 counterexamples)
[08/17 16:25:19]  Generator returned sat in 9.808390 secs.
[08/17 16:25:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:25:20]  Improved gap from 0.0025 to 23.4375
[08/17 16:25:20]  Improved number of small numbers from 46 to 114 out of a max of 114
[08/17 16:25:20]  Verifer returned sat in 0.925629 secs.
[08/17 16:25:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21070.387695   -1504.102051 -3199.839844  21070.387695  146.879883 -1504.102051  22527.612305   46.877441       23.437256     9.0     -1504.102051            -1             -1
1   21170.387939   -1457.221680 -3199.839844  21170.387939  146.877686 -1457.221680  22527.612305   99.997314       23.437500     1.0     -1357.224365         False           True
2   21170.387939   -1380.661865 -3123.277344  21170.387939   99.997314 -1380.661865  22527.612305   23.437500        0.000000     2.0     -1357.224365         False          False
3   21170.390381   -1357.224365 -3046.714844  21170.390381   23.439941 -1357.224365  22527.612305    0.002441      -23.435059     3.0     -1357.221924         False          False
4   21317.265625   -1233.789551 -3046.714844  21317.265625  146.877686 -1233.789551  22527.614990   23.440186       23.437500     1.0     -1357.221924         False           True
5   21317.265625   -1233.786865 -2970.152344  21317.265625    0.010000 -1233.786865  22527.614990   23.437500        0.000000     2.0     -1357.221924         False          False
6   21317.265625   -1210.349365 -2896.709961  21317.265625    0.010000 -1210.349365  22527.614990    0.000000      -26.557617     3.0     -1357.221924         False          False
7   21464.140625   -1183.791748 -2896.709961  21464.140625  146.875000 -1183.791748  22527.614990  120.317383       20.317383     1.0     -1063.474365          True           True
8   21464.140625   -1083.791748 -2896.709961  21464.140625    0.010000 -1083.791748  22527.614990   20.317383      -79.682617     2.0     -1063.474365         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=375/16.[0m
[08/17 16:25:21]  --------------------------------------------------------------------------------
[08/17 16:25:21]  Iteration: 102 (0 solution, 101 counterexamples)
[08/17 16:25:35]  Generator returned sat in 11.221444 secs.
[08/17 16:25:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:25:36]  Improved number of small numbers from 46 to 113 out of a max of 113
[08/17 16:25:36]  Verifer returned sat in 0.803995 secs.
[08/17 16:25:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21169.732178   -1658.707764 -3121.793945  21169.732178    0.025146 -1658.707764  22628.464844  199.975098       99.975098     2.0     -1658.707764            -1             -1
1   21170.340576   -1458.707764 -3121.793945  21170.340576  200.583496 -1458.707764  22628.464844    0.583496        0.583496     1.0     -1658.707764         False          False
2   21668.290527   -1458.099365 -3121.793945  21668.290527  498.533447 -1458.099365  22726.506592  399.883301      300.491699     1.0     -1658.707764         False          False
3   21766.915527   -1357.224365 -3121.793945  21766.915527  498.508301 -1357.224365  22726.506592  397.633301      299.116699     2.0      -959.591064         False          False
4   21868.290527   -1258.241211 -3121.793945  21868.290527  499.008301 -1258.241211  22726.506592  400.025146      300.491699     3.0      -959.591064         False          False
5   21967.773682   -1158.707764 -3121.793945  21967.773682  499.508301 -1158.707764  22726.506592  399.974854      299.974854     4.0      -959.591064         False          False
6   21967.773682    -958.707764 -3121.793945  21967.773682  399.949951  -958.707764  22726.506592  199.974854      199.974854     3.0      -959.591064         False           True
7   22168.248779    -858.707764 -3121.793945  22168.248779  400.449951  -858.707764  22726.506592  300.449951      300.449951     4.0      -959.591064         False          False
8   22268.290527    -758.707764 -3121.793945  22268.290527  400.491699  -758.707764  22726.506592  300.491699      300.491699     2.0      -458.216064          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=615407/2048.[0m
[08/17 16:25:37]  --------------------------------------------------------------------------------
[08/17 16:25:37]  Iteration: 103 (0 solution, 102 counterexamples)
[08/17 16:25:59]  Generator returned sat in 19.035590 secs.
[08/17 16:25:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:26:00]  Improved number of small numbers from 71 to 113 out of a max of 113
[08/17 16:26:00]  Verifer returned sat in 0.521306 secs.
[08/17 16:26:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21169.732178   -1658.707764 -3121.794189  21169.732178    0.025146 -1658.707764  22628.464844  199.975098       99.975098     8.0     -1658.707764            -1             -1
1   21170.340576   -1458.707764 -3121.794189  21170.340576  200.583496 -1458.707764  22628.464844    0.583496        0.583496     1.0     -1658.707764         False           True
2   21668.290527   -1457.164062 -3121.794189  21668.290527  498.533447 -1457.164062  22726.467285  398.987305      300.531006     1.0     -1658.707764         False          False
3   21767.746826   -1357.120361 -3121.794189  21767.746826  498.443604 -1357.120361  22726.467285  398.399902      299.987305     2.0      -958.720459         False          False
4   21868.290527   -1258.189209 -3121.794189  21868.290527  498.943604 -1258.189209  22726.467285  400.012451      300.531006     3.0      -958.720459         False          False
5   21967.721680   -1158.707764 -3121.794189  21967.721680  499.443604 -1158.707764  22726.467285  399.962158      299.962158     4.0      -958.720459         False          False
6   21967.721680    -958.707764 -3121.794189  21967.721680  399.949951  -958.707764  22726.467285  199.962158      199.962158     3.0      -958.720459         False           True
7   22168.209473    -858.997559 -3121.794189  22168.209473  400.449951  -858.997559  22726.467285  300.739746      300.449951     4.0      -958.720459         False          False
8   22268.290527    -758.708008 -3121.794189  22268.290527  400.820801  -758.708008  22726.467285  300.531250      300.531006     2.0      -458.176758          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1230975/4096.[0m
[08/17 16:26:00]  --------------------------------------------------------------------------------
[08/17 16:26:00]  Iteration: 104 (0 solution, 103 counterexamples)
[08/17 16:26:13]  Generator returned sat in 9.104903 secs.
[08/17 16:26:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:26:13]  Improved number of small numbers from 61 to 113 out of a max of 113
[08/17 16:26:13]  Verifer returned sat in 0.426634 secs.
[08/17 16:26:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21170.315186   -1558.136963 -3121.794189  21170.315186   99.987305 -1558.136963  22628.464844   99.987305       99.987305     2.0     -1558.136963            -1             -1
1   21170.340576   -1458.136963 -3121.794189  21170.340576  100.012695 -1458.136963  22628.464844    0.012695        0.012695     1.0     -1558.136963         False          False
2   21571.340576   -1358.149414 -3121.794189  21571.340576  401.012695 -1358.149414  22628.477539  301.012451      301.000000     1.0     -1558.136963         False          False
3   21670.328125   -1358.136963 -3121.794189  21670.328125  400.000000 -1358.136963  22628.477539  399.987549      299.987549     2.0      -958.149414         False          False
4   21671.340576   -1158.143311 -3121.794189  21671.340576  401.000000 -1158.143311  22628.477539  201.006348      201.000000     3.0      -958.149414         False          False
5   21770.327881   -1107.655762 -3121.794189  21770.327881  299.993652 -1107.655762  22628.477539  249.506104      199.987305     4.0      -958.149414         False           True
6   21771.315430    -958.136963 -3121.794189  21771.315430  250.493652  -958.136963  22628.477539  100.974854      100.974854     3.0      -958.149414         False           True
7   22070.340576    -858.136963 -3121.794189  22070.340576  400.000000  -858.136963  22628.477539  300.000000      300.000000     2.0      -958.149414         False           True
8   22171.340576    -857.149658 -3121.794189  22171.340576  401.000000  -857.149658  22628.477539  400.012695      301.000000     2.0      -958.149414         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=301.[0m
[08/17 16:26:14]  --------------------------------------------------------------------------------
[08/17 16:26:14]  Iteration: 105 (0 solution, 104 counterexamples)
[08/17 16:26:40]  Generator returned sat in 22.674809 secs.
[08/17 16:26:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:26:40]  Improved gap from 0.0 to 1.5625
[08/17 16:26:41]  Improved number of small numbers from 36 to 114 out of a max of 114
[08/17 16:26:41]  Verifer returned sat in 0.641053 secs.
[08/17 16:26:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   21667.040771   -1604.374512 -3175.556641  21667.040771   99.987061 -1604.374512  22625.277588  646.137695      546.137695     8.0     -1604.374512            -1             -1
1   21669.240479   -1504.374268 -3175.556641  21669.240479  648.337402 -1504.374268  22625.277588  548.337158      448.337402     8.0     -1604.374512         False           True
2   21669.240479   -1304.474365 -3175.556641  21669.240479    0.199951 -1304.474365  22625.277588  348.437256      348.337402     5.0      -956.037109          True           True
3   21669.240479   -1304.374268 -3175.556641  21669.240479    0.099854 -1304.374268  22625.277588  348.337158      248.337402     6.0      -956.037109         False          False
4   21669.240479   -1104.374512 -3175.556641  21669.240479    2.000000 -1104.374512  22625.277588  148.337402      148.337402     5.0      -956.037109         False           True
5   21669.240479   -1004.374512 -3175.556641  21669.240479    0.500000 -1004.374512  22625.277588   48.337402       48.337402     6.0      -956.037109         False          False
6   21669.240479    -958.136963 -3123.894043  21669.240479    2.000000  -958.136963  22625.277588    2.099854        0.000000     6.0      -956.037109         False           True
7   21669.240479    -956.037109 -3025.456543  21669.240479    2.000000  -956.037109  22625.277588    0.000000       -1.562500     7.0      -956.037109         False           True
8   21671.240479    -954.474609 -2927.019043  21671.240479    2.000000  -954.474609  22625.277588    0.437500       -1.125000     1.0      -956.037109         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=559245/1024.[0m
[08/17 16:26:41]  --------------------------------------------------------------------------------
[08/17 16:26:41]  Iteration: 106 (0 solution, 105 counterexamples)
[08/17 16:27:01]  Generator returned sat in 16.015105 secs.
[08/17 16:27:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:27:03]  Improved gap from 0.01 to 14.0625
[08/17 16:27:03]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/17 16:27:03]  Verifer returned sat in 2.260585 secs.
[08/17 16:27:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23206.505615     581.227783 -5784.394043  23206.505615    0.100098   581.227783  22625.277588    0.000244        0.000244     6.0       581.227783            -1             -1
1   23506.405518     681.227783 -5784.394043  23506.405518  299.900146   681.227783  22625.277588  199.900146      199.900146     1.0       581.227783         False           True
2   23742.343018     681.227783 -5784.394043  23742.343018  435.837646   681.227783  22625.277588  435.837646      335.837646     1.0       581.227783         False          False
3   23742.343018     881.227783 -5784.394043  23742.343018  435.000000   881.227783  22625.277588  235.837646      235.837646     2.0      1117.065430         False          False
4   23742.343018     981.227783 -5784.394043  23742.343018  218.000000   981.227783  22625.277588  135.837646      135.837646     3.0      1117.065430         False          False
5   23742.343018     981.328125 -5784.394043  23742.343018  109.500000   981.328125  22625.277588  135.737305       35.837646     4.0      1117.065430         False          False
6   23742.343018    1103.002930 -5720.231689  23742.343018   55.250000  1103.002930  22625.277588   14.062500        0.000000     5.0      1117.065430         False          False
7   23756.405518    1117.065430 -5634.294189  23756.405518   28.125000  1117.065430  22625.277588   14.062500        0.000000     6.0      1117.065430         False          False
8   23756.405518    1131.127930 -5634.293945  23756.405518   13.062500  1131.127930  22625.277588    0.000000      -99.999756     2.0      1117.065430         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1375999/4096.[0m
[08/17 16:27:04]  --------------------------------------------------------------------------------
[08/17 16:27:04]  Iteration: 107 (0 solution, 106 counterexamples)
[08/17 16:27:22]  Generator returned sat in 15.116928 secs.
[08/17 16:27:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:27:23]  Improved gap from 0.0 to 25.0
[08/17 16:27:23]  Improved number of small numbers from 92 to 114 out of a max of 114
[08/17 16:27:23]  Verifer returned sat in 0.845838 secs.
[08/17 16:27:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23506.405518     456.127686 -5534.819336  23506.405518    0.024902   456.127686  22625.277588  425.000244      425.000000     2.0       456.127686            -1             -1
1   23506.405518     556.127686 -5534.819336  23506.405518    0.075000   556.127686  22625.277588  325.000244      325.000000     2.0       456.127686         False          False
2   23506.405518     656.127686 -5534.819336  23506.405518    0.049805   656.127686  22625.277588  225.000244      225.000000     3.0       881.127930         False          False
3   23506.405518     755.677979 -5534.819336  23506.405518    0.024902   755.677979  22625.277588  125.449951      125.000000     4.0       881.127930         False          False
4   23506.405518     856.103027 -5534.819336  23506.405518    0.500000   856.103027  22625.277588   25.024902       25.000000     5.0       881.127930         False          False
5   23506.405518     856.127930 -5459.819336  23506.405518    0.500000   856.127930  22625.277588   25.000000        0.000000     6.0       881.127930         False          False
6   23506.405518     881.127930 -5459.769043  23506.405518    0.500000   881.127930  22625.277588    0.000000      -99.949707     7.0       881.127930         False          False
7   23631.355469     981.077881 -5384.769287  23631.355469  124.949951   981.077881  22625.277588   25.000000        0.000000     1.0       881.127930         False           True
8   23631.355469    1006.077881 -5309.769287  23631.355469    0.500000  1006.077881  22625.277588    0.000000      -25.000000     2.0       881.127930         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=425.[0m
[08/17 16:27:24]  --------------------------------------------------------------------------------
[08/17 16:27:24]  Iteration: 108 (0 solution, 107 counterexamples)
[08/17 16:27:30]  Generator returned sat in 3.328191 secs.
[08/17 16:27:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:27:31]  Improved gap from 24.500244140625 to 23.4375
[08/17 16:27:32]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/17 16:27:32]  Verifer returned sat in 1.176873 secs.
[08/17 16:27:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23401.118164     464.903076 -5459.819336  23401.118164    0.100098   464.903076  22625.277588  310.937500      212.500244     6.0       464.903076            -1             -1
1   23712.155518     563.340576 -5459.819336  23712.155518  621.974854   563.340576  22625.377686  523.437256      423.437500     6.0       464.903076         False          False
2   23712.155518     663.340576 -5459.819336  23712.155518  523.337402   663.340576  22625.377686  423.437256      323.437500     7.0      1086.777832         False          False
3   23712.155518     775.840332 -5459.819336  23712.155518  423.437256   775.840332  22625.377686  310.937500      223.437500     8.0      1086.777832         False           True
4   23712.155518     963.340332 -5459.819336  23712.155518  310.937256   963.340332  22625.377686  123.437500      123.437500     4.0      1086.777832         False           True
5   23712.155518    1063.240234 -5459.819336  23712.155518    0.500000  1063.240234  22625.377686   23.537598       23.437500     5.0      1086.777832         False          False
6   23712.155518    1063.340332 -5383.256836  23712.155518    0.500000  1063.340332  22625.377686   23.437500        0.000000     6.0      1086.777832         False          False
7   23712.155518    1086.777832 -5306.694580  23712.155518    0.500000  1086.777832  22625.377686    0.000000      -23.437744     7.0      1086.777832         False          False
8   23835.593018    1110.215576 -5306.694336  23835.593018  123.437500  1110.215576  22625.377686   99.999756        0.000000     1.0      1086.777832         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=6775/16.[0m
[08/17 16:27:32]  --------------------------------------------------------------------------------
[08/17 16:27:32]  Iteration: 109 (0 solution, 108 counterexamples)
[08/17 16:27:50]  Generator returned sat in 14.274949 secs.
[08/17 16:27:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:27:50]  Improved gap from 0.0025 to 100
[08/17 16:27:51]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/17 16:27:51]  Verifer returned sat in 0.440202 secs.
[08/17 16:27:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22811.955322     486.677979 -5383.256836  22811.955322    0.100098   486.677979  21725.077637  600.199707      600.099854     6.0       486.677979            -1             -1
1   22911.855713     486.777832 -5383.256836  22911.855713  700.100098   486.777832  21725.077637  700.000244      600.000244     6.0       486.677979         False          False
2   22911.955566     686.777832 -5383.256836  22911.955566  700.100098   686.777832  21725.077637  500.100098      500.100098     7.0       486.677979         False          False
3   23111.855469     688.177734 -5383.256836  23111.855469  700.000000   688.177734  21725.077637  698.600098      600.000000     8.0      1386.777832          True           True
4   23111.855469     885.377686 -5383.256836  23111.855469  698.500000   885.377686  21725.077637  501.400146      500.000000     8.0      1386.777832         False           True
5   23307.455322     886.777832 -5383.256836  23307.455322  697.000000   886.777832  21725.077637  695.599854      595.599854     8.0      1386.777832         False           True
6   23307.455322    1086.777832 -5383.256836  23307.455322  695.500000  1086.777832  21725.077637  495.599854      495.599854     8.0      1386.777832         False           True
7   23505.855469    1186.777832 -5383.256836  23505.855469  694.000000  1186.777832  21725.077637  594.000000      594.000000     7.0      1386.777832         False           True
8   23604.355469    1186.777832 -5383.256836  23604.355469  692.500000  1186.777832  21725.077637  692.500000      592.500000     7.0      1386.777832         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1229005/2048.[0m
[08/17 16:27:51]  --------------------------------------------------------------------------------
[08/17 16:27:51]  Iteration: 110 (0 solution, 109 counterexamples)
[08/17 16:28:09]  Generator returned sat in 14.300847 secs.
[08/17 16:28:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:28:10]  Improved gap from 0.0 to 0
[08/17 16:28:10]  Improved number of small numbers from 54 to 114 out of a max of 114
[08/17 16:28:10]  Verifer returned sat in 0.798721 secs.
[08/17 16:28:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22611.330469    1186.877930 -5482.707031  22611.330469  199.975098  1186.877930  21424.377686    0.074854        0.074854     2.0      1186.877930            -1             -1
1   22811.180420    1187.002930 -5482.707031  22811.180420  199.924805  1187.002930  21424.377686  199.799805       99.924805     1.0      1386.802734         False          False
2   22811.305664    1386.877686 -5482.707031  22811.305664  199.925049  1386.877686  21424.377686    0.050293        0.050049     1.0      1386.802734         False          False
3   23111.855225    1386.977783 -5482.707031  23111.855225  300.599854  1386.977783  21424.427490  300.449951      200.549805     1.0      1386.802734         False          False
4   23111.855225    1586.877686 -5482.707031  23111.855225    1.000000  1586.877686  21424.427490  100.550049      100.549805     2.0      1386.802734         False          False
5   23111.855225    1586.927734 -5482.707031  23111.855225    0.500000  1586.927734  21424.427490  100.500000        0.549805     3.0      1386.802734         False          False
6   23111.855225    1686.877930 -5383.256836  23111.855225    0.500000  1686.877930  21424.427490    0.549805        0.000000     4.0      1386.802734         False          False
7   23111.855225    1687.427734 -5283.756836  23111.855225    0.500000  1687.427734  21424.427490    0.000000       -0.500000     5.0      1386.802734         False          False
8   23112.355225    1687.927734 -5283.756836  23112.355225    0.500000  1687.927734  21424.427490    0.000000     -100.000000     1.0      1386.802734         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=205363/1024.[0m
[08/17 16:28:10]  --------------------------------------------------------------------------------
[08/17 16:28:10]  Iteration: 111 (0 solution, 110 counterexamples)
[08/17 16:28:22]  Generator returned sat in 8.027233 secs.
[08/17 16:28:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:28:22]  Improved gap from 0.1 to 0
[08/17 16:28:23]  Improved number of small numbers from 106 to 114 out of a max of 114
[08/17 16:28:23]  Verifer returned sat in 0.468540 secs.
[08/17 16:28:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22811.180176     986.802490 -5482.707031  22811.180176    0.199951   986.802490  21424.377686  400.000000      399.999756     6.0        986.80249            -1             -1
1   22811.180176    1086.802734 -5482.707031  22811.180176    0.100000  1086.802734  21424.377686  299.999756      299.999756     6.0       1386.80249         False          False
2   22811.180420    1086.802734 -5482.707031  22811.180420  300.000000  1086.802734  21424.377686  300.000000      200.000000     6.0       1386.80249         False          False
3   22811.180420    1186.802734 -5482.707031  22811.180420  300.000000  1186.802734  21424.377686  200.000000      100.000000     7.0       1386.80249         False          False
4   22811.180420    1386.702881 -5482.707031  22811.180420    0.500000  1386.702881  21424.377686    0.099854        0.000000     8.0       1386.80249         False          False
5   22812.080566    1387.602783 -5383.907031  22812.080566    1.000000  1387.602783  21424.377686    0.100098       -0.299854     1.0       1386.80249         False           True
6   22812.480469    1388.002930 -5284.007080  22812.480469    0.500000  1388.002930  21424.377686    0.099854        0.000000     1.0       1386.80249         False          False
7   22812.880615    1388.202881 -5184.606934  22812.880615    0.500000  1388.202881  21424.377686    0.300049       -0.199707     1.0       1386.80249         False          False
8   22813.080566    1388.702734 -5184.606934  22813.080566    0.500000  1388.702734  21424.377686    0.000146      -99.999756     1.0       1386.80249         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=400.[0m
[08/17 16:28:23]  --------------------------------------------------------------------------------
[08/17 16:28:23]  Iteration: 112 (0 solution, 111 counterexamples)
[08/17 16:28:51]  Generator returned sat in 24.621965 secs.
[08/17 16:28:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:28:52]  Improved gap from 0.0 to 48.4375
[08/17 16:28:53]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/17 16:28:53]  Verifer returned sat in 0.988588 secs.
[08/17 16:28:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22638.437500    1238.364990 -5435.769287  22638.437500  148.440186  1238.364990  21351.635010  48.437500       48.437500     2.0       1238.36499            -1             -1
1   22738.440186    1338.364990 -5435.769287  22738.440186  148.440186  1338.364990  21351.637695  48.437500       48.437500     1.0       1238.36499         False          False
2   22738.440186    1338.364990 -5435.769287  22738.440186   48.434814  1338.364990  21351.637695  48.437500      -51.562500     1.0       1386.80249         False          False
3   22888.380371    1489.927490 -5435.769287  22888.380371  198.377686  1489.927490  21351.637695  46.815186       -1.622314     1.0       1386.80249         False          False
4   23038.442871    1638.362549 -5435.769287  23038.442871  196.877686  1638.362549  21351.640381  48.439941       48.437500     1.0       1386.80249         False          False
5   23038.442871    1638.364990 -5384.206787  23038.442871    1.500000  1638.364990  21351.640381  48.437500        0.000000     2.0       1386.80249         False          False
6   23038.442871    1686.802490 -5332.644287  23038.442871    0.010000  1686.802490  21351.640381   0.000000      -48.437500     3.0       1386.80249         False          False
7   23136.380371    1735.239990 -5282.144287  23136.380371   97.937500  1735.239990  21351.640381  49.500000        0.000000     1.0       1784.73999          True           True
8   23183.317871    1784.742676 -5282.144287  23183.317871   96.437500  1784.742676  21351.640381  46.934814      -53.062500     1.0       1784.73999         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=775/16.[0m
[08/17 16:28:53]  --------------------------------------------------------------------------------
[08/17 16:28:53]  Iteration: 113 (0 solution, 112 counterexamples)
[08/17 16:29:10]  Generator returned sat in 13.163233 secs.
[08/17 16:29:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:29:12]  Improved gap from 0.0 to 39.0625
[08/17 16:29:12]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:29:12]  Verifer returned sat in 2.179403 secs.
[08/17 16:29:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23138.975586    1787.287598 -5234.704346  23138.975586  200.000000  1787.287598  21351.637695    0.050293        0.050293     2.0      1787.287598            -1             -1
1   23338.875488    1887.287598 -5234.704346  23338.875488  199.950195  1887.287598  21351.637695   99.950195       99.950195     1.0      1987.237793         False          False
2   23506.112793    1987.287598 -5234.704346  23506.112793  267.187500  1987.287598  21351.637695  167.187500      167.187500     1.0      1987.237793         False          False
3   23506.112793    2081.300049 -5234.704346  23506.112793   74.775146  2081.300049  21351.637695   73.175049       67.187500     2.0      2154.475098         False          False
4   23506.212891    2154.525146 -5234.704346  23506.212891   73.275146  2154.525146  21351.637695    0.050049      -32.712402     1.0      2154.475098         False          False
5   23577.937988    2187.287598 -5173.766846  23577.937988   71.775146  2187.287598  21351.637695   39.012695       -0.049805     1.0      2154.475098         False          False
6   23609.200439    2226.350098 -5112.829346  23609.200439   70.275146  2226.350098  21351.637695   31.212646       -7.849854     1.0      2154.475098         False          False
7   23646.762939    2265.412598 -5051.891846  23646.762939   68.775146  2265.412598  21351.637695   29.712646       -9.349854     1.0      2154.475098         False          False
8   23684.325439    2304.475342 -5051.891602  23684.325439   67.275146  2304.475342  21351.637695   28.212402      -71.787109     1.0      2154.475098         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=13379/80.[0m
[08/17 16:29:13]  --------------------------------------------------------------------------------
[08/17 16:29:13]  Iteration: 114 (0 solution, 113 counterexamples)
[08/17 16:29:24]  Generator returned sat in 7.731469 secs.
[08/17 16:29:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:29:25]  Improved gap from 0.0025 to 23.4375
[08/17 16:29:26]  Improved number of small numbers from 52 to 61 out of a max of 114
[08/17 16:29:26]  Verifer returned sat in 1.473140 secs.
[08/17 16:29:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23191.917969    1840.278848 -5287.697998  23191.917969    0.001250  1840.278848  21351.637695   0.001426       -0.000977     1.0      1840.278848            -1             -1
1   23215.356543    1840.281250 -5211.135596  23215.356543   23.440000  1840.281250  21351.637695  23.437598        0.000000     1.0      1840.278848         False          False
2   23215.356543    1863.718848 -5134.573096  23215.356543    0.001465  1863.718848  21351.637695   0.000000      -23.437500     2.0      1863.718848         False          False
3   23338.795293    1987.156348 -5134.573096  23338.795293  123.438750  1987.156348  21351.637695   0.001250        0.001250     1.0      1863.718848         False           True
4   23484.171543    2087.151348 -5134.573096  23484.171543  145.377500  2087.151348  21397.012695   0.007500        0.002500     1.0      1863.718848         False          False
5   23484.174043    2087.160098 -5059.501846  23484.174043    0.010000  2087.160098  21397.012695   0.001250      -24.923750     1.0      1863.718848         False          False
6   23706.114043    2212.080098 -5059.501846  23706.114043  221.941250  2212.080098  21494.026445   0.007500        0.002500     1.0      1863.718848         False          False
7   23706.116543    2212.088848 -4982.943115  23706.116543    0.010000  2212.088848  21494.026445   0.001250      -23.436270     1.0      1863.718848         False          False
8   23829.552793    2235.526367 -4982.943115  23829.552793  123.437500  2235.526367  21494.026445  99.999980       -0.000020     1.0      1863.718848         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=1/400.[0m
[08/17 16:29:26]  --------------------------------------------------------------------------------
[08/17 16:29:26]  Iteration: 115 (0 solution, 114 counterexamples)
[08/17 16:29:50]  Generator returned sat in 20.187836 secs.
[08/17 16:29:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:29:51]  Improved gap from 0.0 to 100
[08/17 16:29:51]  Improved number of small numbers from 40 to 114 out of a max of 114
[08/17 16:29:51]  Verifer returned sat in 0.869877 secs.
[08/17 16:29:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23107.114014    1053.376465 -4600.793213  23107.114014    0.100098  1053.376465  21351.637451  702.100098      602.100098     7.0      1053.376465            -1             -1
1   23107.114014    1253.376465 -4600.793213  23107.114014  701.999756  1253.376465  21351.637451  502.100098      502.100098     7.0      1053.376465         False          False
2   23307.214111    1352.976318 -4600.793213  23307.214111  702.200195  1352.976318  21351.737549  602.500244      602.100098     7.0      1053.376465         False          False
3   23407.213867    1353.376465 -4600.793213  23407.213867  702.500000  1353.376465  21351.737549  702.099854      602.099854     8.0      1053.376465         False          False
4   23407.213867    1553.376465 -4600.793213  23407.213867  702.000000  1553.376465  21351.737549  502.099854      502.099854     9.0      2055.476318          True           True
5   23606.614014    1653.376465 -4600.793213  23606.614014  701.500000  1653.376465  21351.737549  601.500000      601.500000     9.0      2055.476318         False           True
6   23706.114014    1653.776367 -4600.793213  23706.114014  701.000000  1653.776367  21351.737549  700.600098      601.000000     9.0      2055.476318         False           True
7   23706.114014    1755.476318 -4600.793213  23706.114014  700.500000  1755.476318  21351.737549  598.900146      501.000000     9.0      2055.476318         False           True
8   23807.213867    1953.376465 -4600.793213  23807.213867  700.000000  1953.376465  21351.737549  502.099854      502.099854     7.0      2055.476318         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1233101/2048.[0m
[08/17 16:29:52]  --------------------------------------------------------------------------------
[08/17 16:29:52]  Iteration: 116 (0 solution, 115 counterexamples)
[08/17 16:29:59]  Generator returned sat in 3.690589 secs.
[08/17 16:29:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:29:59]  Improved number of small numbers from 60 to 113 out of a max of 113
[08/17 16:29:59]  Verifer returned sat in 0.335354 secs.
[08/17 16:30:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23109.513672    1053.776367 -4601.193359  23109.513672    0.100098  1053.776367  21351.637451  704.099854      604.099854     7.0      1053.776367            -1             -1
1   23109.513672    1253.776123 -4601.193359  23109.513672  703.999756  1253.776123  21351.637451  504.100098      504.099854     6.0      1053.776367         False          False
2   23309.614014    1352.876221 -4601.193359  23309.614014  704.200439  1352.876221  21351.737793  605.000000      604.099854     7.0      1053.776367         False          False
3   23409.514160    1353.776367 -4601.193359  23409.514160  704.900146  1353.776367  21351.737793  704.000000      604.000000     8.0      1053.776367         False          False
4   23409.514160    1553.776367 -4601.193359  23409.514160  703.900146  1553.776367  21351.737793  504.000000      504.000000     9.0      2057.776367          True           True
5   23608.414307    1653.676514 -4601.193359  23608.414307  702.900146  1653.676514  21351.737793  603.000000      602.900146     9.0      2057.776367         False           True
6   23707.314453    1653.776367 -4601.193359  23707.314453  701.900146  1653.776367  21351.737793  701.800293      601.800293     9.0      2057.776367         False           True
7   23707.314453    1757.876221 -4601.193359  23707.314453  700.900146  1757.876221  21351.737793  597.700439      501.800293     9.0      2057.776367         False           True
8   23809.514160    1953.776123 -4601.193359  23809.514160  699.900146  1953.776123  21351.737793  504.000244      504.000000     7.0      2057.776367         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=2474393/4096.[0m
[08/17 16:30:00]  --------------------------------------------------------------------------------
[08/17 16:30:00]  Iteration: 117 (0 solution, 116 counterexamples)
[08/17 16:30:30]  Generator returned sat in 26.612169 secs.
[08/17 16:30:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:30:33]  Improved gap from 0.0025 to 12.5
[08/17 16:30:34]  Improved number of small numbers from 60 to 87 out of a max of 114
[08/17 16:30:34]  Verifer returned sat in 3.549025 secs.
[08/17 16:30:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24265.643311   24165.743164 -6302.093262  24265.643311  100.000000  24165.743164        0.0   99.900146       99.900081     3.0     24165.743164            -1             -1
1   24265.743164   24165.743408 -6302.093213  24265.743164  100.000000  24165.743408        0.0   99.999756       -0.000016     2.0     24165.743164         False          False
2   24465.643311   24265.743180 -6302.093213  24465.643311  299.899902  24265.743180        0.0  199.900130       99.900130     1.0     24165.743164         False          False
3   24668.943180   24465.743164 -6302.093213  24668.943180  403.200000  24465.743164        0.0  203.200016      203.200000     1.0     24165.743164         False          False
4   24668.943180   24565.743164 -6302.093213  24668.943180  201.600000  24565.743164        0.0  103.200016      103.200000     2.0     24165.743164         False          False
5   24668.943180   24652.443180 -6302.093213  24668.943180  100.800000  24652.443180        0.0   16.500000        3.200000     3.0     24165.743164         False          False
6   24702.843180   24690.443180 -6239.293213  24702.843180   50.400000  24690.443180        0.0   12.400000       -0.100000     1.0     24165.743164         False          False
7   24715.643180   24702.943359 -6151.993213  24715.643180   25.200000  24702.943359        0.0   12.699821        0.000000     1.0     24165.743164         False          False
8   24715.643180   24715.643180 -6064.493408  24715.643180   12.600000  24715.643180        0.0    0.000000      -12.500195     2.0     24165.743164         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=208179/1024.[0m
[08/17 16:30:35]  --------------------------------------------------------------------------------
[08/17 16:30:35]  Iteration: 118 (0 solution, 117 counterexamples)
[08/17 16:31:11]  Generator returned sat in 32.452164 secs.
[08/17 16:31:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:31:12]  Improved gap from 0.0 to 17.1875
[08/17 16:31:12]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:31:12]  Verifer returned sat in 1.409903 secs.
[08/17 16:31:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24154.920898   24154.870850 -6421.945557  24154.920898    0.050049  24154.870850        0.0    0.050049       -0.049805     7.0     24154.870850            -1             -1
1   24172.108154   24154.970703 -6339.133057  24172.108154   17.237305  24154.970703        0.0   17.137451       -0.050049     1.0     24154.870850         False          False
2   24602.483398   24172.158203 -6339.133057  24602.483398  447.512695  24172.158203        0.0  430.325195      330.325195     1.0     24154.870850         False          False
3   24602.483398   24372.157959 -6339.133057  24602.483398  426.000000  24372.157959        0.0  230.325439      230.325195     2.0     24602.483398         False          False
4   24602.483398   24469.770752 -6339.133057  24602.483398  215.000000  24469.770752        0.0  132.712646      130.325195     3.0     24602.483398         False          False
5   24602.483398   24545.782959 -6339.133057  24602.483398  109.500000  24545.782959        0.0   56.700439       30.325195     4.0     24602.483398         False          False
6   24602.532959   24572.158203 -6269.508057  24602.532959   56.750000  24572.158203        0.0   30.374756       -0.000244     5.0     24602.483398         False          False
7   24602.533203   24602.533203 -6186.695557  24602.533203   30.375000  24602.533203        0.0    0.000000      -17.187500     1.0     24602.483398         False          False
8   24619.720703   24619.720703 -6186.695557  24619.720703   17.187500  24619.720703        0.0    0.000000     -100.000000     1.0     24602.483398         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1353215/4096.[0m
[08/17 16:31:13]  --------------------------------------------------------------------------------
[08/17 16:31:13]  Iteration: 119 (0 solution, 118 counterexamples)
[08/17 16:31:24]  Generator returned sat in 7.108366 secs.
[08/17 16:31:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:31:25]  Improved gap from 0.0008333333333333334 to 48.4375
[08/17 16:31:25]  Improved number of small numbers from 96 to 114 out of a max of 114
[08/17 16:31:25]  Verifer returned sat in 0.890408 secs.
[08/17 16:31:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24105.655518   24005.658203 -6372.633057  24105.655518  199.999756  24005.658203   0.000000   99.997314       -0.002441     8.0     24005.658203            -1             -1
1   24205.657959   24105.658203 -6372.633057  24205.657959  199.999756  24105.658203   0.000000   99.999756        0.000000     1.0     24005.658203         False           True
2   24354.100830   24305.657959 -6372.633057  24354.100830  248.442627  24305.657959   0.000000   48.442871       48.442871     1.0     24005.658203         False          False
3   24554.098145   24364.345459 -6372.633057  24554.098145  248.440186  24364.345459   0.002686  189.750000      148.437500     1.0     24554.095459         False          False
4   24554.098145   24505.655518 -6372.633057  24554.098145    0.010000  24505.655518   0.002686   48.439941       48.437500     2.0     24554.095459         False          False
5   24554.098145   24505.657959 -6321.070557  24554.098145    0.010000  24505.657959   0.002686   48.437500        0.000000     3.0     24554.095459         False          False
6   24554.098145   24554.095459 -6269.508057  24554.098145    0.010000  24554.095459   0.002686    0.000000      -48.437500     4.0     24554.095459         False          False
7   24650.973145   24602.532959 -6217.945557  24650.973145   96.875000  24602.532959   0.002686   48.437500        0.000000     1.0     24554.095459         False           True
8   24650.973145   24650.970459 -6166.383057  24650.973145    0.010000  24650.970459   0.002686    0.000000      -48.437500     2.0     24554.095459         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=2375/16.[0m
[08/17 16:31:26]  --------------------------------------------------------------------------------
[08/17 16:31:26]  Iteration: 120 (0 solution, 119 counterexamples)
[08/17 16:31:34]  Generator returned sat in 4.755920 secs.
[08/17 16:31:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:31:35]  Improved gap from 48.4375 to 100
[08/17 16:31:36]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/17 16:31:36]  Verifer returned sat in 1.667562 secs.
[08/17 16:31:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24949.156006   24549.049327 -6166.383057  24949.156006    0.406494  24549.049327        0.0  400.106679      300.106679     7.0     24549.049327            -1             -1
1   24949.156006   24649.049327 -6166.383057  24949.156006    0.306885  24649.049327        0.0  300.106679      200.106679     5.0     24949.156006         False           True
2   25349.255994   24749.049327 -6166.383057  25349.255994  700.206667  24749.049327        0.0  600.206667      500.206667     3.0     24949.156006         False           True
3   25349.255994   24849.049327 -6166.383057  25349.255994  600.106667  24849.049327        0.0  500.206667      400.206667     4.0     25349.255994         False          False
4   25349.255994   24949.155994 -6166.383057  25349.255994  452.053333  24949.155994        0.0  400.100000      300.206667     5.0     25349.255994         False           True
5   25349.255994   25149.049327 -6166.383057  25349.255994  378.080000  25149.049327        0.0  200.206667      200.206667     4.0     25349.255994         False           True
6   25540.089327   25247.049327 -6166.383057  25540.089327  391.040000  25247.049327        0.0  293.040000      291.040000     5.0     25349.255994         False           True
7   25643.569327   25349.049327 -6166.383057  25643.569327  396.520000  25349.049327        0.0  294.520000      294.520000     6.0     25349.255994         False           True
8   25749.255994   25349.355957 -6166.383057  25749.255994  400.206667  25349.355957        0.0  399.900037      300.206667     3.0     25349.255994         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=256157/512.[0m
[08/17 16:31:37]  --------------------------------------------------------------------------------
[08/17 16:31:37]  Iteration: 121 (0 solution, 120 counterexamples)
[08/17 16:32:04]  Generator returned sat in 23.973707 secs.
[08/17 16:32:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:32:05]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/17 16:32:05]  Verifer returned sat in 0.355398 secs.
[08/17 16:32:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24749.149170   24649.049561 -6266.383301  24749.149170    0.200195  24649.049561        0.0  100.099609        0.099609     8.0     24649.049561            -1             -1
1   24749.149170   24749.049561 -6266.383301  24749.149170    0.099854  24749.049561        0.0    0.099609      -99.900391     3.0     24749.149170         False           True
2   25244.249512   24849.049561 -6266.383301  25244.249512  495.199951  24849.049561        0.0  395.199951      295.199951     1.0     24749.149170         False          False
3   25344.149414   24953.049561 -6266.383301  25344.149414  495.099854  24953.049561        0.0  391.099854      295.099854     2.0     25344.149414         False          False
4   25449.149414   25049.049561 -6266.383301  25449.149414  496.099854  25049.049561        0.0  400.099854      300.099854     3.0     25344.149414         False          False
5   25546.149414   25249.049316 -6266.383301  25546.149414  497.099854  25249.049316        0.0  297.100098      297.099854     3.0     25344.149414         False          False
6   25747.149170   25349.049561 -6266.383301  25747.149170  498.099854  25349.049561        0.0  398.099609      398.099609     3.0     25344.149414         False          False
7   25848.149414   25349.049561 -6266.383301  25848.149414  499.099854  25349.049561        0.0  499.099854      399.099854     3.0     25344.149414         False          False
8   25849.149414   25449.249512 -6266.383301  25849.149414  500.099854  25449.249512        0.0  399.899902      300.099854     4.0     25344.149414         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=408781/1024.[0m
[08/17 16:32:06]  --------------------------------------------------------------------------------
[08/17 16:32:06]  Iteration: 122 (0 solution, 121 counterexamples)
[08/17 16:32:21]  Generator returned sat in 11.717649 secs.
[08/17 16:32:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:32:22]  Improved gap from 0.00125 to 23.4375
[08/17 16:32:22]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/17 16:32:22]  Verifer returned sat in 0.623061 secs.
[08/17 16:32:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24924.152832   24749.149170 -6341.384766  24924.152832    0.002441  24749.149170   0.000000  175.003662       75.003662     8.0     24749.149170            -1             -1
1   24924.152832   24924.150635 -6341.384766  24924.152832    0.002500  24924.150635   0.000000    0.002197      -24.996338     3.0     24749.149170         False           True
2   25274.147949   25049.149170 -6341.384766  25274.147949  349.997314  25049.149170   0.002686  224.996094      224.996094     1.0     24749.149170         False          False
3   25274.150391   25149.148926 -6341.384766  25274.150391  224.998535  25149.148926   0.002686  124.998779      124.998535     2.0     25274.147705         False          False
4   25274.150391   25249.149170 -6341.384766  25274.150391    0.010000  25249.149170   0.002686   24.998535       24.998535     3.0     25274.147705         False          False
5   25274.150391   25249.149170 -6266.383301  25274.150391    0.010000  25249.149170   0.002686   24.998535        0.000000     3.0     25274.147705         False          False
6   25274.150391   25274.147705 -6266.383301  25274.150391    0.010000  25274.147705   0.002686    0.000000     -100.000000     4.0     25274.147705         False          False
7   25399.149170   25374.147949 -6191.382080  25399.149170  124.998779  25374.147949   0.002686   24.998535        0.000000     1.0     25274.147705         False           True
8   25399.149170   25399.146484 -6191.382080  25399.149170    0.010000  25399.146484   0.002686    0.000000     -100.000000     2.0     25274.147705         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=57599/256.[0m
[08/17 16:32:22]  --------------------------------------------------------------------------------
[08/17 16:32:22]  Iteration: 123 (0 solution, 122 counterexamples)
[08/17 16:32:38]  Generator returned sat in 11.392877 secs.
[08/17 16:32:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:32:38]  Improved gap from 0.00125 to 0
[08/17 16:32:38]  Improved number of small numbers from 106 to 114 out of a max of 114
[08/17 16:32:38]  Verifer returned sat in 0.519341 secs.
[08/17 16:32:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24849.146729   24749.149170 -6366.383545  24849.146729    0.002441  24749.149170        0.0   99.997559       99.997559     1.0      24749.14917            -1             -1
1   25049.146484   24749.149170 -6366.383545  25049.146484  299.997314  24749.149170        0.0  299.997314      199.997314     1.0      24749.14917         False          False
2   25149.149170   24849.149170 -6366.383545  25149.149170  400.000000  24849.149170        0.0  300.000000      200.000000     2.0      24749.14917         False          False
3   25249.149170   25049.149170 -6366.383545  25249.149170  400.000000  25049.149170        0.0  200.000000      200.000000     2.0      24749.14917         False          False
4   25249.149170   25149.146484 -6366.383545  25249.149170    0.010000  25149.146484        0.0  100.002686      100.000000     3.0      24749.14917         False          False
5   25249.149170   25149.149170 -6366.383545  25249.149170    0.010000  25149.149170        0.0  100.000000        0.000000     4.0      24749.14917         False          False
6   25249.149170   25249.149170 -6266.383545  25249.149170    1.000000  25249.149170        0.0    0.000000        0.000000     4.0      25249.14917          True           True
7   25250.149170   25250.136719 -6167.383545  25250.149170    1.000000  25250.136719        0.0    0.012451        0.000000     1.0      25249.14917         False           True
8   25250.149170   25250.149170 -6167.383545  25250.149170    0.010000  25250.149170        0.0    0.000000     -100.000000     2.0      25249.14917         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819211/4096.[0m
[08/17 16:32:39]  --------------------------------------------------------------------------------
[08/17 16:32:39]  Iteration: 124 (0 solution, 123 counterexamples)
[08/17 16:33:33]  Generator returned sat in 50.635936 secs.
[08/17 16:33:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:33:34]  Improved gap from 0.0 to 0
[08/17 16:33:35]  Improved number of small numbers from 70 to 94 out of a max of 114
[08/17 16:33:35]  Verifer returned sat in 1.503228 secs.
[08/17 16:33:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24879.898926   24879.897461 -6766.370361  24879.898926    0.001465  24879.897461   0.000000    0.001465        0.001221     6.0     24879.897461            -1             -1
1   24879.898926   24879.897705 -6666.371826  24879.898926    0.001465  24879.897705   0.000000    0.001221       -0.000244     7.0     24879.897461         False           True
2   24879.899170   24879.899170 -6566.371826  24879.899170    0.001465  24879.899170   0.000000    0.000000        0.000000     1.0     24879.897461          True           True
3   24979.904170   24879.899170 -6566.371826  24979.904170  100.005000  24879.899170   0.001667  100.003333        0.003333     1.0     24879.897461         False          False
4   24979.904170   24979.900837 -6466.375244  24979.904170    0.010000  24979.900837   0.001667    0.001667       -0.000085     2.0     24879.897461         False          False
5   24979.912503   24979.904170 -6366.383789  24979.912503    0.010000  24979.904170   0.001667    0.006667       -0.000296     1.0     24879.897461         False          False
6   24979.915837   24979.912503 -6266.386963  24979.915837    0.010000  24979.912503   0.001667    0.001667       -0.000137     1.0     24879.897461         False          False
7   24979.924170   24979.920837 -6166.395264  24979.924170    0.010000  24979.920837   0.001667    0.001667       -0.000104     1.0     24879.897461         False          False
8   24979.932503   24979.924072 -6166.395020  24979.932503    0.010000  24979.924072   0.001667    0.006764      -99.991527     1.0     24879.897461         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1/300.[0m
[08/17 16:33:36]  --------------------------------------------------------------------------------
[08/17 16:33:36]  Iteration: 125 (0 solution, 124 counterexamples)
[08/17 16:34:20]  Generator returned sat in 40.693945 secs.
[08/17 16:34:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:34:21]  Improved gap from 0.0 to 0
[08/17 16:34:21]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/17 16:34:21]  Verifer returned sat in 0.628434 secs.
[08/17 16:34:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24680.082520   24329.432617 -6365.845459  24680.082520    0.050000  24329.432617        0.0  350.649902      350.649902     6.0     24329.432617            -1             -1
1   24680.082520   24379.432617 -6365.845459  24680.082520  300.650146  24379.432617        0.0  300.649902      250.649902     7.0     24329.432617         False           True
2   24680.082520   24529.432373 -6365.845459  24680.082520  300.600098  24529.432373        0.0  150.650146      150.649902     4.0     24680.082520          True           True
3   24829.982422   24629.432373 -6365.845459  24829.982422  300.550049  24629.432373        0.0  200.550049      200.549805     4.0     24829.982422         False          False
4   24829.982422   24680.082520 -6365.845459  24829.982422    0.500000  24680.082520        0.0  149.899902      100.549805     5.0     24829.982422         False          False
5   24829.982422   24829.382812 -6365.845459  24829.982422    0.500000  24829.382812        0.0    0.599609        0.549805     3.0     24829.982422         False           True
6   24829.982422   24829.432617 -6266.395264  24829.982422    0.500000  24829.432617        0.0    0.549805        0.000000     4.0     24829.982422         False          False
7   24829.982422   24829.982422 -6166.395508  24829.982422    0.500000  24829.982422        0.0    0.000000       -0.000244     5.0     24829.982422         False          False
8   24830.482422   24830.032471 -6166.395508  24830.482422    0.500000  24830.032471        0.0    0.449951      -99.500244     1.0     24829.982422         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1436263/4096.[0m
[08/17 16:34:22]  --------------------------------------------------------------------------------
[08/17 16:34:22]  Iteration: 126 (0 solution, 125 counterexamples)
[08/17 16:34:38]  Generator returned sat in 12.133965 secs.
[08/17 16:34:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:34:38]  Improved gap from 0.049853515625 to 100
[08/17 16:34:39]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/17 16:34:39]  Verifer returned sat in 0.467159 secs.
[08/17 16:34:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24680.032471   23975.532471 -6166.395508  24680.032471  704.549805  23975.532471        0.0  704.500000      704.499756     6.0     23975.532471            -1             -1
1   24680.082520   24075.532715 -6166.395508  24680.082520  704.550049  24075.532715        0.0  604.549805      604.549805     7.0     23975.532471         False          False
2   24680.132568   24174.032471 -6166.395508  24680.132568  604.599854  24174.032471        0.0  506.100098      504.599854     7.0     24680.132568         False          False
3   24680.132568   24175.532715 -6166.395508  24680.132568  506.050049  24175.532715        0.0  504.599854      404.599854     8.0     24680.132568         False          False
4   24680.132568   24375.482666 -6166.395508  24680.132568  504.550049  24375.482666        0.0  304.649902      304.599854     9.0     24680.132568         False           True
5   24878.532715   24375.532715 -6166.395508  24878.532715  503.050049  24375.532715        0.0  503.000000      403.000000     9.0     24680.132568         False           True
6   24878.532715   24478.482422 -6166.395508  24878.532715  501.550049  24478.482422        0.0  400.050293      303.000000     9.0     24680.132568         False           True
7   24978.532471   24675.532471 -6166.395508  24978.532471  500.050049  24675.532471        0.0  303.000000      302.999756     9.0     24680.132568         False           True
8   25174.082520   24675.532715 -6166.395508  25174.082520  498.550049  24675.532715        0.0  498.549805      398.549805     9.0     24680.132568         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1409/2.[0m
[08/17 16:34:39]  --------------------------------------------------------------------------------
[08/17 16:34:39]  Iteration: 127 (0 solution, 126 counterexamples)
[08/17 16:35:03]  Generator returned sat in 19.662221 secs.
[08/17 16:35:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:35:04]  Improved gap from 0.0 to 12.5
[08/17 16:35:04]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/17 16:35:04]  Verifer returned sat in 0.873658 secs.
[08/17 16:35:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24573.482666   23943.432861 -6166.395508  24573.482666    0.050000  23943.432861        0.0  630.049805      530.050049     4.0     23943.432861            -1             -1
1   24573.482666   24043.432861 -6166.395508  24573.482666  430.050049  24043.432861        0.0  530.049805      430.050049     4.0     23943.432861         False          False
2   24573.482666   24143.432861 -6166.395508  24573.482666  430.000000  24143.432861        0.0  430.049805      330.050049     4.0     24573.482666         False          False
3   24573.482666   24243.432617 -6166.395508  24573.482666  430.000000  24243.432617        0.0  330.050049      230.050049     5.0     24573.482666         False          False
4   24573.482666   24443.432617 -6166.395508  24573.482666  214.000000  24443.432617        0.0  130.050049      130.050049     6.0     24573.482666         False           True
5   24573.482666   24521.532715 -6166.395508  24573.482666  106.000000  24521.532715        0.0   51.949951       30.050049     6.0     24573.482666         False           True
6   24573.532715   24568.382568 -6103.845459  24573.532715   52.000000  24568.382568        0.0    5.150146       -7.349854     7.0     24573.482666         False           True
7   24593.382568   24580.882568 -6016.345459  24593.382568   25.000000  24580.882568        0.0   12.500000        0.000000     1.0     24573.482666         False           True
8   24593.382568   24593.382568 -6016.345459  24593.382568    0.500000  24593.382568        0.0    0.000000     -100.000000     2.0     24573.482666         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=2171085/4096.[0m
[08/17 16:35:04]  --------------------------------------------------------------------------------
[08/17 16:35:04]  Iteration: 128 (0 solution, 127 counterexamples)
[08/17 16:35:42]  Generator returned sat in 33.387137 secs.
[08/17 16:35:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:35:43]  Improved gap from 0.0 to 48.4375
[08/17 16:35:43]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/17 16:35:43]  Verifer returned sat in 1.090985 secs.
[08/17 16:35:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24573.482422   24225.086914 -6166.395752  24573.482422  348.604248  24225.086914        0.0  348.395508      248.603760     4.0     24225.086914            -1             -1
1   24573.649170   24424.878662 -6166.395752  24573.649170  348.562256  24424.878662        0.0  148.770508      148.770508     3.0     24573.649170         False           True
2   24773.441162   24524.878662 -6166.395752  24773.441162  348.562500  24524.878662        0.0  248.562500      248.562500     3.0     24573.649170         False          False
3   24773.441162   24573.691162 -6166.395752  24773.441162  211.000000  24573.691162        0.0  199.750000      148.562500     2.0     24773.441162         False          False
4   24773.441162   24721.399170 -6166.395752  24773.441162  105.000000  24721.399170        0.0   52.041992       48.562500     3.0     24773.441162         False          False
5   24773.441162   24724.878662 -6114.958252  24773.441162   52.000000  24724.878662        0.0   48.562500        0.000000     4.0     24773.441162         False          False
6   24822.878662   24773.441162 -6064.437174  24822.878662   98.000000  24773.441162        0.0   49.437500       -0.041423     5.0     24773.441162         False           True
7   24871.316162   24822.920166 -6012.874756  24871.316162   97.875000  24822.920166        0.0   48.395996       -0.041504     1.0     24773.441162         False           True
8   24871.357666   24871.357666 -6012.874512  24871.357666   48.437500  24871.357666        0.0    0.000000      -99.999756     1.0     24773.441162         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=11933/48.[0m
[08/17 16:35:44]  --------------------------------------------------------------------------------
[08/17 16:35:44]  Iteration: 129 (0 solution, 128 counterexamples)
[08/17 16:36:10]  Generator returned sat in 22.463564 secs.
[08/17 16:36:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:36:17]  Improved gap from 13.243917410714285 to 43.75
[08/17 16:36:18]  Improved number of small numbers from 62 to 78 out of a max of 114
[08/17 16:36:18]  Verifer returned sat in 7.836746 secs.
[08/17 16:36:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24223.067139   24123.041995 -6222.458252  24223.067139  143.799805  24123.041995        0.0  100.025143        0.025143     2.0     24123.041995            -1             -1
1   24266.841995   24223.091797 -6166.258252  24266.841995  143.800000  24223.091797        0.0   43.750199        0.000000     1.0     24123.041995         False          False
2   24366.866943   24366.841995 -6166.258252  24366.866943  143.775146  24366.841995        0.0    0.024948        0.024948     1.0     24366.866943         False          False
3   24615.541995   24464.754495 -6166.258252  24615.541995  248.700000  24464.754495        0.0  150.787500      148.700000     1.0     24366.866943         False          False
4   24615.541995   24554.092041 -6166.258252  24615.541995  123.850000  24554.092041        0.0   61.449954       48.700000     2.0     24366.866943         False          False
5   24615.541995   24566.842041 -6114.958252  24615.541995   61.425000  24566.842041        0.0   48.699954        0.000000     3.0     24366.866943         False          False
6   24615.541995   24615.541995 -6058.708496  24615.541995   30.212500  24615.541995        0.0    0.000000      -43.750244     4.0     24366.866943         False          False
7   24704.041995   24660.316995 -6003.483252  24704.041995   88.500000  24660.316995        0.0   43.725000       -0.025000     1.0     24704.041995          True           True
8   24704.066995   24704.066995 -6003.483154  24704.066995   43.750000  24704.066995        0.0    0.000000      -99.999902     1.0     24704.041995         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=304589/2048.[0m
[08/17 16:36:19]  --------------------------------------------------------------------------------
[08/17 16:36:19]  Iteration: 130 (0 solution, 129 counterexamples)
[08/17 16:37:11]  Generator returned sat in 48.307659 secs.
[08/17 16:37:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:37:14]  Improved gap from 0.1 to 15.625
[08/17 16:37:14]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:37:14]  Verifer returned sat in 2.437884 secs.
[08/17 16:37:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24164.474365   24043.324463 -6159.558350  24164.474365  121.249756  24043.324463        0.0  121.149902      121.149902     1.0     24043.324463            -1             -1
1   24164.524414   24043.324463 -6159.558350  24164.524414  121.199951  24043.324463        0.0  121.199951       21.199951     1.0     24164.524414         False          False
2   24571.624268   24164.574463 -6159.558350  24571.624268  528.299805  24164.574463        0.0  407.049805      328.299805     1.0     24164.524414         False          False
3   24571.624268   24343.324463 -6159.558350  24571.624268  407.000000  24343.324463        0.0  228.299805      228.299805     2.0     24571.624268         False          False
4   24571.624268   24443.324463 -6159.558350  24571.624268  205.000000  24443.324463        0.0  128.299805      128.299805     3.0     24571.624268         False          False
5   24571.624268   24443.374268 -6159.558350  24571.624268  104.000000  24443.374268        0.0  128.250000       28.299805     4.0     24571.624268         False          False
6   24571.624268   24543.324707 -6087.858154  24571.624268   53.500000  24543.324707        0.0   28.299561        0.000000     5.0     24571.624268         False          False
7   24571.624268   24571.624268 -6003.483154  24571.624268   28.250000  24571.624268        0.0    0.000000      -15.625000     6.0     24571.624268         False          False
8   24587.249268   24587.249268 -5919.108154  24587.249268   15.625000  24587.249268        0.0    0.000000      -15.625000     1.0     24571.624268         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=6567/20.[0m
[08/17 16:37:15]  --------------------------------------------------------------------------------
[08/17 16:37:15]  Iteration: 131 (0 solution, 130 counterexamples)
[08/17 16:37:35]  Generator returned sat in 16.623971 secs.
[08/17 16:37:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:37:36]  Improved gap from 7.0 to 100
[08/17 16:37:37]  Improved number of small numbers from 89 to 98 out of a max of 114
[08/17 16:37:37]  Verifer returned sat in 0.999320 secs.
[08/17 16:37:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24043.324219   24043.324219 -6159.558594  24043.324219    0.100098  24043.324219       0.00    0.000000       -0.000244     6.0     24043.324219            -1             -1
1   24244.391113   24043.324463 -6159.558594  24244.391113  201.066895  24043.324463       0.00  201.066650      101.066650     1.0     24043.324219         False           True
2   24244.391113   24143.324463 -6159.558594  24244.391113    0.100098  24143.324463       0.00  101.066650        1.066650     2.0     24244.391113         False          False
3   24407.813352   24244.491130 -6159.558594  24407.813352  264.488889  24244.491130       0.00  163.322222       64.488889     1.0     24244.391113         False           True
4   24643.224463   24443.324463 -6159.558594  24643.224463  398.733333  24443.324463       0.00  199.900000      199.900000     1.0     24244.391113         False          False
5   25043.424463   24443.324463 -6159.558594  25043.424463  600.100000  24443.324463       0.00  600.100000      500.100000     1.0     24244.391113         False          False
6   25345.474463   24643.324219 -6159.558594  25345.474463  902.150000  24643.324219     202.05  500.100244      500.100000     2.0     24244.391113         False          False
7   25345.474463   24743.324463 -6159.558594  25345.474463    2.000000  24743.324463     202.05  400.100000      400.100000     3.0     25143.424463          True           True
8   25345.474463   24743.324463 -6159.558594  25345.474463    2.000000  24743.324463     202.05  400.100000      300.100000     3.0     25143.424463         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=5001/10.[0m
[08/17 16:37:37]  --------------------------------------------------------------------------------
[08/17 16:37:37]  Iteration: 132 (0 solution, 131 counterexamples)
[08/17 16:38:01]  Generator returned sat in 20.017806 secs.
[08/17 16:38:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:38:02]  Improved gap from 0.0 to 0
[08/17 16:38:02]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/17 16:38:02]  Verifer returned sat in 0.594806 secs.
[08/17 16:38:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25244.074463   24845.524658 -6359.488770  25244.074463    0.100098  24845.524658        0.0  398.549805      398.549805     6.0     24845.524658            -1             -1
1   25245.524658   24845.524658 -6359.488770  25245.524658  400.000000  24845.524658        0.0  400.000000      300.000000     6.0     24845.524658         False           True
2   25245.524658   25045.524414 -6359.488770  25245.524658    0.099854  25045.524414        0.0  200.000244      200.000000     3.0     25245.524658         False           True
3   25245.524658   25145.524414 -6359.488770  25245.524658    0.049805  25145.524414        0.0  100.000244      100.000000     4.0     25245.524658         False          False
4   25245.524658   25244.074463 -6359.488770  25245.524658    0.500000  25244.074463        0.0    1.450195        0.000000     5.0     25245.524658         False          False
5   25245.574463   25245.524658 -6260.438721  25245.574463    1.500000  25245.524658        0.0    0.049805       -0.900146     5.0     25245.524658         False           True
6   25247.024658   25246.474609 -6160.988770  25247.024658    1.500000  25246.474609        0.0    0.550049        0.000000     1.0     25245.524658         False           True
7   25247.024658   25247.024658 -6061.488525  25247.024658    0.500000  25247.024658        0.0    0.000000       -0.499756     2.0     25245.524658         False          False
8   25247.524658   25247.524414 -6061.488525  25247.524658    0.500000  25247.524414        0.0    0.000244      -99.999756     1.0     25245.524658         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1632461/4096.[0m
[08/17 16:38:03]  --------------------------------------------------------------------------------
[08/17 16:38:03]  Iteration: 133 (0 solution, 132 counterexamples)
[08/17 16:38:19]  Generator returned sat in 11.751902 secs.
[08/17 16:38:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:38:20]  Improved gap from 0.0 to 14.0625
[08/17 16:38:21]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 16:38:21]  Verifer returned sat in 1.813724 secs.
[08/17 16:38:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23898.699707   23798.749512 -5312.713623  23898.699707    0.049805  23798.749512        0.0   99.950195       99.950195     5.0     23798.749512            -1             -1
1   24318.749512   23798.749756 -5312.713623  24318.749512  520.000000  23798.749756        0.0  519.999756      420.000000     3.0     23798.749512         False          False
2   24318.749512   23898.749512 -5312.713623  24318.749512    0.050049  23898.749512        0.0  420.000000      320.000000     2.0     24318.749512         False          False
3   24318.749512   23998.749756 -5312.713623  24318.749512  420.000000  23998.749756        0.0  319.999756      220.000000     3.0     24318.749512         False          False
4   24318.749512   24182.862061 -5312.713623  24318.749512  211.000000  24182.862061        0.0  135.887451      120.000000     4.0     24318.749512         False          False
5   24318.749512   24264.449463 -5312.713623  24318.749512  106.500000  24264.449463        0.0   54.300049       20.000000     5.0     24318.749512         False          False
6   24318.749512   24304.687012 -5232.713623  24318.749512   54.250000  24304.687012        0.0   14.062500        0.000000     6.0     24318.749512         False          False
7   24332.812012   24318.749512 -5146.776123  24332.812012   28.125000  24318.749512        0.0   14.062500        0.000000     7.0     24318.749512         False          False
8   24332.812012   24332.812012 -5060.838867  24332.812012    0.500000  24332.812012        0.0    0.000000      -14.062744     2.0     24318.749512         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=430131/1024.[0m
[08/17 16:38:21]  --------------------------------------------------------------------------------
[08/17 16:38:21]  Iteration: 134 (0 solution, 133 counterexamples)
[08/17 16:38:44]  Generator returned sat in 18.433624 secs.
[08/17 16:38:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:38:47]  Improved gap from 0.0 to 48.4375
[08/17 16:38:48]  Improved number of small numbers from 60 to 86 out of a max of 114
[08/17 16:38:48]  Verifer returned sat in 3.387559 secs.
[08/17 16:38:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23931.842041   23731.892090 -5345.856201  23931.842041    0.050049  23731.892090        0.0  199.949951       99.949951     6.0     23731.892090            -1             -1
1   24083.454346   23931.892061 -5345.856201  24083.454346  351.562256  23931.892061        0.0  151.562285      151.562256     1.0     23731.892090         False           True
2   24283.404561   24031.892090 -5345.856201  24283.404561  351.512500  24031.892090        0.0  251.512471      251.512471     2.0     24283.404561         False          False
3   24283.404561   24089.454561 -5345.856201  24283.404561   97.975000  24089.454561        0.0  193.950000      151.512471     2.0     24283.404561         False          False
4   24283.404561   24231.842285 -5345.856201  24283.404561   48.487500  24231.842285        0.0   51.562275       51.512471     3.0     24283.404561         False          False
5   24283.404561   24231.892090 -5297.368672  24283.404561   23.743750  24231.892090        0.0   51.512471        0.000000     4.0     24283.404561         False          False
6   24332.892090   24283.404561 -5246.906006  24332.892090  101.000000  24283.404561        0.0   49.487529       -0.049805     5.0     24283.404561         False           True
7   24381.379561   24332.942061 -5195.343750  24381.379561   97.975000  24332.942061        0.0   48.437500       -0.000078     1.0     24283.404561         False           True
8   24381.429561   24381.379639 -5195.343750  24381.429561   48.487500  24381.379639        0.0    0.049922      -99.950078     1.0     24283.404561         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1030399/4096.[0m
[08/17 16:38:48]  --------------------------------------------------------------------------------
[08/17 16:38:48]  Iteration: 135 (0 solution, 134 counterexamples)
[08/17 16:39:26]  Generator returned sat in 33.710411 secs.
[08/17 16:39:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:39:28]  Improved gap from 0.0 to 25.0
[08/17 16:39:28]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 16:39:28]  Verifer returned sat in 1.590339 secs.
[08/17 16:39:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23479.162109   23479.137207 -4794.651367  23479.162109  225.124756  23479.137207        0.0    0.024902       -0.025146     2.0     23479.137207            -1             -1
1   23704.237061   23479.187256 -4794.651367  23704.237061  225.099854  23479.187256        0.0  225.049805      125.049805     1.0     23704.237061         False          False
2   23704.237061   23679.187256 -4794.651367  23704.237061  225.024902  23679.187256        0.0   25.049805       25.049805     2.0     23704.237061         False          False
3   23904.187256   23779.187256 -4794.651367  23904.187256  225.000000  23779.187256        0.0  125.000000      125.000000     1.0     23904.187256         False          False
4   23904.187256   23878.712158 -4794.651367  23904.187256    1.000000  23878.712158        0.0   25.475098       25.000000     2.0     23904.187256         False          False
5   23904.187256   23879.187256 -4719.651367  23904.187256    1.000000  23879.187256        0.0   25.000000        0.000000     3.0     23904.187256         False          False
6   23904.187256   23904.187256 -4644.651367  23904.187256    1.000000  23904.187256        0.0    0.000000      -25.000000     4.0     23904.187256         False          False
7   24028.687256   23929.187256 -4644.151367  24028.687256  124.500000  23929.187256        0.0   99.500000        0.000000     1.0     23904.187256         False           True
8   24028.687256   24028.687256 -4569.151367  24028.687256    1.000000  24028.687256        0.0    0.000000      -25.000000     2.0     23904.187256         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=128077/1024.[0m
[08/17 16:39:29]  --------------------------------------------------------------------------------
[08/17 16:39:29]  Iteration: 136 (0 solution, 135 counterexamples)
[08/17 16:39:54]  Generator returned sat in 21.557249 secs.
[08/17 16:39:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:39:56]  Improved gap from 0.0 to 23.4375
[08/17 16:39:57]  Improved number of small numbers from 65 to 80 out of a max of 114
[08/17 16:39:57]  Verifer returned sat in 2.259167 secs.
[08/17 16:39:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24055.387061   23806.837061 -4847.551367  24055.387061    0.099854  23806.837061        0.0  248.550000      148.550000     2.0     23806.837061            -1             -1
1   24055.387061   24006.736816 -4847.551367  24055.387061    0.099854  24006.736816        0.0   48.650244       48.550000     2.0     23806.837061         False          False
2   24055.387061   24031.511963 -4796.101367  24055.387061   48.649902  24031.511963        0.0   23.875098        0.000000     3.0     23806.837061         False          False
3   24080.062012   24055.387061 -4720.776367  24080.062012   48.550049  24055.387061        0.0   24.674951       -0.000049     4.0     24080.062012         False          False
4   24303.937061   24180.062061 -4720.776367  24303.937061  248.550000  24180.062061        0.0  123.875000      123.875000     1.0     24080.062012         False           True
5   24303.937061   24180.162109 -4720.776367  24303.937061  123.775000  24180.162109        0.0  123.774951       23.875000     2.0     24080.062012         False          False
6   24303.937061   24280.062061 -4644.651367  24303.937061   61.387500  24280.062061        0.0   23.875000        0.000000     3.0     24080.062012         False          False
7   24310.255811   24303.937061 -4570.676270  24310.255811   30.193750  24303.937061        0.0    6.318750      -19.706152     4.0     24080.062012         False          False
8   24427.812061   24329.962158 -4570.676270  24427.812061  123.875000  24329.962158        0.0   97.849902       -2.149902     1.0     24427.812061          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=608461/4096.[0m
[08/17 16:39:57]  --------------------------------------------------------------------------------
[08/17 16:39:57]  Iteration: 137 (0 solution, 136 counterexamples)
[08/17 16:40:49]  Generator returned sat in 47.722002 secs.
[08/17 16:40:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:40:50]  Improved gap from 0.0 to 100
[08/17 16:40:50]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 16:40:50]  Verifer returned sat in 0.526543 secs.
[08/17 16:40:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23379.681885   23179.782227 -4220.496582  23379.681885  199.900000  23179.782227        0.0  199.899658       99.899658     2.0     23179.782227            -1             -1
1   23379.681885   23379.582031 -4220.496582  23379.681885  199.800000  23379.582031        0.0    0.099854       -0.100342     2.0     23379.681885         False          False
2   23481.682129   23379.782227 -4220.496582  23481.682129  102.100098  23379.782227        0.0  101.899902        1.899902     1.0     23481.682129         False          False
3   23878.682129   23481.781982 -4220.496582  23878.682129  498.899902  23481.781982        0.0  396.900146      298.899902     1.0     23481.682129         False          False
4   23981.181885   23579.782227 -4220.496582  23981.181885  499.399902  23579.782227        0.0  401.399658      301.399658     2.0     23481.682129         False          False
5   24079.682129   23679.782227 -4220.496582  24079.682129  499.899902  23679.782227        0.0  399.899902      299.899902     3.0     23481.682129         False          False
6   24180.182129   23879.782227 -4220.496582  24180.182129  500.399902  23879.782227        0.0  300.399902      300.399902     3.0     23481.682129         False          False
7   24380.682129   23879.782227 -4220.496582  24380.682129  500.899902  23879.782227        0.0  500.899902      400.899902     3.0     23481.682129         False          False
8   24381.182129   24079.781982 -4220.496582  24381.182129  501.399902  24079.781982        0.0  301.400146      301.399902     3.0     23481.682129         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=821043/2048.[0m
[08/17 16:40:51]  --------------------------------------------------------------------------------
[08/17 16:40:51]  Iteration: 138 (0 solution, 137 counterexamples)
[08/17 16:41:06]  Generator returned sat in 11.159484 secs.
[08/17 16:41:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:41:07]  Improved gap from 0.05 to 100
[08/17 16:41:08]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/17 16:41:08]  Verifer returned sat in 1.145967 secs.
[08/17 16:41:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23181.057129   22979.707275 -4220.496582  23181.057129    0.050049  22979.707275   0.000000  201.349854      201.299805     2.0     22979.707275            -1             -1
1   23181.057129   22979.757324 -4220.496582  23181.057129  201.249756  22979.757324   0.000000  201.299805      101.299805     2.0     22979.707275         False          False
2   23181.057129   23079.757324 -4220.496582  23181.057129  201.249756  23079.757324   0.000000  101.299805        1.299805     3.0     22979.707275         False          False
3   23477.857422   23181.107178 -4220.496582  23477.857422  398.100098  23181.107178   0.000000  296.750244      198.100098     1.0     22979.707275          True           True
4   23579.707275   23279.757324 -4220.496582  23579.707275  398.600098  23279.757324   0.000000  299.949951      199.949951     2.0     22979.707275         False          False
5   23678.857422   23477.907227 -4220.496582  23678.857422  399.100098  23477.907227   0.000000  200.950195      199.100098     2.0     22979.707275         False          False
6   23877.507324   23579.757324 -4220.496582  23877.507324  399.600098  23579.757324   0.000000  297.750000      297.750000     2.0     22979.707275         False          False
7   23979.857422   23579.757324 -4220.496582  23979.857422  400.100098  23579.757324   0.050049  400.050049      300.050049     2.0     22979.707275         False          False
8   23979.857422   23779.757324 -4220.496582  23979.857422    1.500000  23779.757324   0.050049  200.050049      200.050049     3.0     22979.707275         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1229005/4096.[0m
[08/17 16:41:08]  --------------------------------------------------------------------------------
[08/17 16:41:08]  Iteration: 139 (0 solution, 138 counterexamples)
[08/17 16:41:42]  Generator returned sat in 29.108057 secs.
[08/17 16:41:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:41:43]  Improved gap from 0.0 to 35.9375
[08/17 16:41:43]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/17 16:41:43]  Verifer returned sat in 1.490753 secs.
[08/17 16:41:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22879.957520   22843.520020 -4220.496826  22879.957520    0.100098  22843.520020   0.000000  36.437500        0.199951     1.0     22843.520020            -1             -1
1   22979.757324   22943.819824 -4220.496582  22979.757324  136.237305  22943.819824   0.000000  35.937500        0.000000     1.0     22843.520020         False          False
2   23080.057373   23079.757080 -4220.496582  23080.057373  136.237549  23079.757080   0.100098   0.200195        0.199951     1.0     22843.520020         False          False
3   23159.207275   23081.457275 -4199.946533  23159.207275   79.350098  23081.457275   0.100098  77.649902       -0.100098     1.0     23159.107178         False          False
4   23159.407471   23159.207275 -4138.858887  23159.407471   77.850098  23159.207275   0.100098   0.100098      -38.812256     1.0     23159.107178         False          False
5   23235.657471   23198.119629 -4076.296631  23235.657471   76.350098  23198.119629   0.100098  37.437744        0.000000     1.0     23159.107178         False          False
6   23273.069824   23235.657227 -4013.709229  23273.069824   74.850098  23235.657227   0.100098  37.312500       -0.000244     1.0     23159.107178         False          False
7   23309.107422   23273.069580 -3949.746826  23309.107422   73.350098  23273.069580   0.100098  35.937744       -0.000244     1.0     23159.107178         False          False
8   23345.019775   23309.107422 -3949.746582  23345.019775   71.850098  23309.107422   0.100098  35.812256      -64.087646     1.0     23159.107178         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819/4096.[0m
[08/17 16:41:44]  --------------------------------------------------------------------------------
[08/17 16:41:44]  Iteration: 140 (0 solution, 139 counterexamples)
[08/17 16:42:05]  Generator returned sat in 16.863138 secs.
[08/17 16:42:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:42:06]  Improved gap from 0.000625 to 29.6875
[08/17 16:42:07]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/17 16:42:07]  Verifer returned sat in 1.125249 secs.
[08/17 16:42:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22709.410156   22709.409912 -4051.704346  22709.410156  129.684814  22709.409912        0.0   0.000244        0.000244     1.0     22709.409912            -1             -1
1   22839.094971   22809.407471 -4051.704346  22839.094971  129.685059  22809.407471        0.0  29.687500       29.685059     1.0     22709.409912         False          False
2   22839.094971   22809.409912 -3981.391846  22839.094971    0.002500  22809.409912        0.0  29.685059       -0.002441     2.0     22839.094971         False          False
3   22868.784912   22839.097412 -3911.079346  22868.784912   59.375000  22839.097412        0.0  29.687500        0.000000     1.0     22839.094971         False           True
4   22868.784912   22868.784912 -3840.769043  22868.784912    0.010000  22868.784912        0.0   0.000000      -29.689697     2.0     22839.094971         False          False
5   22928.162354   22898.474854 -3770.456787  22928.162354   59.377441  22898.474854        0.0  29.687500        0.000000     1.0     22928.162354          True           True
6   22928.162354   22928.162354 -3700.144287  22928.162354    0.010000  22928.162354        0.0   0.000000      -29.687500     2.0     22928.162354         False          False
7   23017.227295   22957.849854 -3659.521729  23017.227295   89.064941  22957.849854        0.0  59.377441        0.000000     1.0     22928.162354         False           True
8   23017.227295   23017.227295 -3659.521729  23017.227295    0.010000  23017.227295        0.0   0.000000     -100.000000     2.0     22928.162354         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=475/16.[0m
[08/17 16:42:07]  --------------------------------------------------------------------------------
[08/17 16:42:07]  Iteration: 141 (0 solution, 140 counterexamples)
[08/17 16:43:04]  Generator returned sat in 52.398415 secs.
[08/17 16:43:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:43:05]  Improved gap from 0.0 to 23.4375
[08/17 16:43:05]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/17 16:43:05]  Verifer returned sat in 0.979836 secs.
[08/17 16:43:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22679.784668   22631.402588 -3998.639404  22679.784668    0.002500  22631.402588   0.000000  48.382080       23.439697     6.0     22631.402588            -1             -1
1   22779.782471   22679.787109 -3998.639404  22779.782471  148.379883  22679.787109   0.000000  99.995361       23.437500     1.0     22631.402588         False           True
2   22779.782471   22756.344971 -3922.076904  22779.782471   23.439941  22756.344971   0.000000  23.437500        0.000000     2.0     22779.782471         False          False
3   22779.784912   22779.782471 -3845.514404  22779.784912   23.439941  22779.782471   0.000000   0.002441      -23.435059     3.0     22779.782471         False          False
4   22926.662354   22903.219971 -3845.514404  22926.662354  146.879883  22903.219971   0.002441  23.439941       23.439941     1.0     22779.782471         False           True
5   22926.662354   22903.222168 -3768.954346  22926.662354    0.010000  22903.222168   0.002441  23.437744        0.000000     2.0     22779.782471         False          False
6   22926.662354   22926.659912 -3692.391846  22926.662354    1.500000  22926.659912   0.002441   0.000000      -23.437500     3.0     22779.782471         False          False
7   23072.039795   23026.659668 -3692.391846  23072.039795  145.377441  23026.659668   0.002441  45.377686       21.939941     1.0     23072.037354          True           True
8   23072.039795   23050.097412 -3692.391846  23072.039795    1.500000  23050.097412   0.002441  21.939941      -78.060059     2.0     23072.037354         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=48005/2048.[0m
[08/17 16:43:06]  --------------------------------------------------------------------------------
[08/17 16:43:06]  Iteration: 142 (0 solution, 141 counterexamples)
[08/17 16:43:21]  Generator returned sat in 10.844160 secs.
[08/17 16:43:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:43:21]  Improved gap from 0.0 to 100
[08/17 16:43:22]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 16:43:22]  Verifer returned sat in 0.481353 secs.
[08/17 16:43:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22626.459961   22526.559814 -3968.854492  22626.459961  299.949951  22526.559814   0.000000   99.900146       99.899902     6.0     22526.559814            -1             -1
1   22826.510010   22626.510010 -3968.854492  22826.510010  299.950195  22626.510010   0.000000  200.000000      199.949951     1.0     22526.559814         False           True
2   22826.510010   22626.560059 -3968.854492  22826.510010    0.050000  22626.560059   0.000000  199.949951       99.949951     2.0     22826.510010         False          False
3   23023.610107   22826.559814 -3968.854492  23023.610107  397.050049  22826.559814   0.000000  197.050293      197.050049     1.0     22826.510010         False          False
4   23224.609863   22827.459717 -3968.854492  23224.609863  398.050049  22827.459717   0.000000  397.150146      298.049805     2.0     22826.510010         False          False
5   23226.509766   23026.560059 -3968.854492  23226.509766  399.050049  23026.560059   0.000000  199.949707      199.949707     2.0     22826.510010         False          False
6   23426.610107   23026.560059 -3968.854492  23426.610107  400.050049  23026.560059   0.000000  400.050049      300.050049     2.0     22826.510010         False          False
7   23427.610107   23226.560059 -3968.854492  23427.610107  401.050049  23226.560059   0.000000  201.050049      201.050049     2.0     22826.510010         False          False
8   23628.610107   23326.559814 -3968.854492  23628.610107  402.050049  23326.559814   0.050049  302.000244      302.000000     3.0     22826.510010         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=302.[0m
[08/17 16:43:22]  --------------------------------------------------------------------------------
[08/17 16:43:22]  Iteration: 143 (0 solution, 142 counterexamples)
[08/17 16:43:41]  Generator returned sat in 13.814835 secs.
[08/17 16:43:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:43:42]  Improved gap from 0.0 to 23.4375
[08/17 16:43:43]  Improved number of small numbers from 84 to 95 out of a max of 114
[08/17 16:43:43]  Verifer returned sat in 1.836321 secs.
[08/17 16:43:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22803.122559   22555.222559 -4020.954346  22803.122559  248.000000  22555.222559        0.0  247.900000      224.462646     6.0     22555.222559            -1             -1
1   22803.122559   22578.659912 -4020.954346  22803.122559  247.899902  22578.659912        0.0  224.462646      124.462646     6.0     22803.122559         False           True
2   22826.559814   22778.659912 -4020.954346  22826.559814  247.899902  22778.659912        0.0   47.899902       47.899902     6.0     22803.122559         False           True
3   22826.559814   22803.122559 -3968.854492  22826.559814    0.100098  22803.122559        0.0   23.437256       -0.000244     7.0     22826.559814         False           True
4   23051.022559   22926.072559 -3968.854492  23051.022559  247.900000  22926.072559        0.0  124.950000      124.462500     1.0     22826.559814         False           True
5   23051.022559   22926.560059 -3968.854492  23051.022559  124.950000  22926.560059        0.0  124.462500       24.462500     2.0     22826.559814         False          False
6   23051.022559   23026.560059 -3893.316992  23051.022559   63.475000  23026.560059        0.0   24.462500        0.000000     3.0     22826.559814         False          False
7   23059.297559   23051.022559 -3818.266846  23059.297559   32.737500  23051.022559        0.0    8.275000      -16.674854     4.0     22826.559814         False          False
8   23175.972559   23075.972656 -3818.266846  23175.972559  124.950000  23075.972656        0.0   99.999902        0.000146     1.0     23175.972559          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=919399/4096.[0m
[08/17 16:43:43]  --------------------------------------------------------------------------------
[08/17 16:43:43]  Iteration: 144 (0 solution, 143 counterexamples)
[08/17 16:44:17]  Generator returned sat in 29.051479 secs.
[08/17 16:44:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:44:18]  Improved gap from 0.0 to 25.0
[08/17 16:44:18]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 16:44:18]  Verifer returned sat in 1.351139 secs.
[08/17 16:44:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22626.072510   22601.073975 -4043.368408  22626.072510    0.001465  22601.073975   0.000000   24.998535       24.998535     1.0     22601.073975            -1             -1
1   22726.073975   22626.072510 -4043.368408  22726.073975  125.000000  22626.072510   0.001221  100.000244       24.998779     2.0     22601.073975         False          False
2   22826.075195   22801.072754 -4043.368408  22826.075195  200.001465  22801.072754   0.002441   25.000000       24.998779     1.0     22601.073975          True           True
3   22826.076416   22801.073975 -3968.368408  22826.076416   25.001221  22801.073975   0.002441   25.000000        0.000000     2.0     22826.073975         False          False
4   22999.576416   22926.072754 -3968.368408  22999.576416  198.500000  22926.072754  48.503662   25.000000       24.998779     1.0     22826.073975         False           True
5   22999.576416   22926.073975 -3893.368408  22999.576416    0.010000  22926.073975  48.503662   24.998779       -0.001221     2.0     22826.073975         False          False
6   23098.078857   22951.073975 -3891.869629  23098.078857  123.501221  22951.073975  48.503662   98.501221        0.000000     1.0     23049.575195          True           True
7   23124.078857   23049.575195 -3817.869629  23124.078857  124.501221  23049.575195  48.503662   26.000000        0.000000     2.0     23049.575195         False          False
8   23220.081299   23076.071289 -3813.872070  23220.081299  122.002441  23076.071289  48.503662   95.506348        0.000000     1.0     23049.575195         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=102395/4096.[0m
[08/17 16:44:19]  --------------------------------------------------------------------------------
[08/17 16:44:19]  Iteration: 145 (0 solution, 144 counterexamples)
[08/17 16:44:30]  Generator returned sat in 6.596428 secs.
[08/17 16:44:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:44:31]  Improved gap from 24.4981689453125 to 100
[08/17 16:44:31]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 16:44:31]  Verifer returned sat in 0.700320 secs.
[08/17 16:44:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22772.615234   22572.615234 -4043.368652  22772.615234  199.999756  22572.615234   0.000000  200.000000      100.000000     6.0     22572.615234            -1             -1
1   22772.615234   22672.615234 -4043.368652  22772.615234  199.975098  22672.615234   0.000000  100.000000        0.000000     3.0     22772.615234         False           True
2   22872.565186   22822.677734 -4043.368652  22872.565186  199.949951  22822.677734   0.000000   49.887451       -0.050049     1.0     22872.565186         False           True
3   23022.602783   22872.615234 -4043.368652  23022.602783  199.925049  22872.615234   0.000000  149.987549       49.987549     1.0     23022.602783         False          False
4   23073.540283   23022.602783 -4043.368652  23073.540283  200.925049  23022.602783   0.000000   50.937500        0.925049     2.0     23022.602783         False          False
5   23372.590332   23072.615234 -4043.368652  23372.590332  349.987549  23072.615234   0.000000  299.975098      199.975098     2.0     23022.602783         False           True
6   23372.590332   23271.690186 -4043.368652  23372.590332  249.937500  23271.690186   0.000000  100.900146       99.975098     2.0     23372.590332          True           True
7   23670.765137   23372.615234 -4043.368652  23670.765137  399.074951  23372.615234   0.000000  298.149902      298.149902     1.0     23372.590332         False           True
8   23772.690186   23372.640381 -4043.368652  23772.690186  400.074951  23372.640381   0.024902  400.024902      300.050049     2.0     23372.590332         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=1229005/4096.[0m
[08/17 16:44:32]  --------------------------------------------------------------------------------
[08/17 16:44:32]  Iteration: 146 (0 solution, 145 counterexamples)
[08/17 16:45:01]  Generator returned sat in 25.137733 secs.
[08/17 16:45:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:45:02]  Improved gap from 0.00125 to 29.6875
[08/17 16:45:02]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/17 16:45:02]  Verifer returned sat in 0.840213 secs.
[08/17 16:45:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22913.245117   22913.242676 -4283.996094  22913.245117  100.000000  22913.242676        0.0   0.002441        0.002441     7.0     22913.242676            -1             -1
1   23013.241455   23011.711914 -4283.996094  23013.241455   99.998779  23011.711914        0.0   1.529541       -0.001221     1.0     23013.241455         False           True
2   23042.928955   23013.242676 -4213.683594  23042.928955   31.217041  23013.242676        0.0  29.686279       -0.001221     1.0     23042.928955         False          False
3   23072.617676   23042.930176 -4143.371094  23072.617676   59.375000  23042.930176        0.0  29.687500        0.000000     1.0     23042.928955         False          False
4   23072.617676   23072.617676 -4073.058838  23072.617676    0.010000  23072.617676        0.0   0.000000      -29.687744     2.0     23042.928955         False          False
5   23133.023438   23102.305420 -4003.776855  23133.023438   60.405762  23102.305420        0.0  30.718018        0.000000     1.0     23133.023438          True           True
6   23133.023438   23133.023438 -3933.464355  23133.023438    0.010000  23133.023438        0.0   0.000000      -29.687500     2.0     23133.023438         False          False
7   23222.616699   23192.928955 -3893.370117  23222.616699   89.593262  23192.928955        0.0  29.687744        0.000000     1.0     23133.023438         False           True
8   23222.616699   23222.616699 -3823.057617  23222.616699    0.010000  23222.616699        0.0   0.000000      -29.687500     2.0     23133.023438         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=1/400.[0m
[08/17 16:45:03]  --------------------------------------------------------------------------------
[08/17 16:45:03]  Iteration: 147 (0 solution, 146 counterexamples)
[08/17 16:45:38]  Generator returned sat in 30.420109 secs.
[08/17 16:45:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:45:39]  Improved gap from 0.1 to 0
[08/17 16:45:39]  Improved number of small numbers from 112 to 114 out of a max of 114
[08/17 16:45:39]  Verifer returned sat in 0.501773 secs.
[08/17 16:45:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22733.073437   22633.023438 -4103.776855  22733.073437  200.050000  22633.023438        0.0  100.050000        0.050000     9.0     22633.023438            -1             -1
1   22833.023438   22733.123291 -4103.776855  22833.023438  200.000000  22733.123291        0.0   99.900146        0.000000     1.0     22833.023438         False           True
2   22933.073486   22933.023438 -4103.776855  22933.073486  199.950195  22933.023438        0.0    0.050049        0.050049     1.0     22933.073486         False          False
3   23132.923438   22933.123291 -4103.776855  23132.923438  199.900000  22933.123291        0.0  199.800146       99.900000     1.0     23132.923438         False          False
4   23132.923438   23131.523438 -4103.776855  23132.923438    1.500000  23131.523438        0.0    1.400000       -0.100000     2.0     23132.923438         False          False
5   23133.023438   23133.023438 -4003.776855  23133.023438    1.500000  23133.023438        0.0    0.000000        0.000000     1.0     23132.923438         False          False
6   23134.523438   23133.023438 -3905.276855  23134.523438    1.500000  23133.023438        0.0    1.500000        0.000000     1.0     23132.923438         False          False
7   23134.523438   23134.523438 -3805.326904  23134.523438    1.500000  23134.523438        0.0    0.000000       -0.050049     2.0     23132.923438         False          False
8   23136.023438   23134.573486 -3805.326660  23136.023438    1.500000  23134.573486        0.0    1.449951      -98.549805     1.0     23132.923438         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=999/10.[0m
[08/17 16:45:39]  --------------------------------------------------------------------------------
[08/17 16:45:39]  Iteration: 148 (0 solution, 147 counterexamples)
[08/17 16:46:13]  Generator returned sat in 29.071937 secs.
[08/17 16:46:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:46:17]  Improved gap from 0.0 to 42.1875
[08/17 16:46:17]  Improved number of small numbers from 105 to 107 out of a max of 114
[08/17 16:46:17]  Verifer returned sat in 3.645562 secs.
[08/17 16:46:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22650.153320   22450.153320 -3820.906855  22650.153320  293.162354  22450.153320        0.0  200.000000      199.999883     2.0     22450.153320            -1             -1
1   22743.215820   22450.253418 -3820.906855  22743.215820  293.062500  22450.253418        0.0  292.962402      193.062383     2.0     22743.215820         False          False
2   22743.315918   22650.153438 -3820.906855  22743.315918  293.062500  22650.153438        0.0   93.162480       93.162480     2.0     22743.215820         False          False
3   22909.565937   22743.415938 -3820.906855  22909.565937  259.412500  22743.415938        0.0  166.150000      159.412500     1.0     22909.565937         False          False
4   22909.565937   22844.240723 -3820.906855  22909.565937  129.706250  22844.240723        0.0   65.325215       59.412500     2.0     22909.565937         False          False
5   22909.565937   22850.153438 -3780.319355  22909.565937   64.853125  22850.153438        0.0   59.412500        0.000000     3.0     22909.565937         False          False
6   22951.653438   22909.565937 -3722.507080  22951.653438  101.500000  22909.565937        0.0   42.087500       -0.100225     4.0     22909.565937         False           True
7   22994.140938   22951.753662 -3664.894355  22994.140938   84.575000  22951.753662        0.0   42.387275        0.000000     1.0     22909.565937         False           True
8   22994.140938   22994.140938 -3664.894287  22994.140938   42.287500  22994.140938        0.0    0.000000      -99.999932     2.0     22909.565937         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=200.[0m
[08/17 16:46:18]  --------------------------------------------------------------------------------
[08/17 16:46:18]  Iteration: 149 (0 solution, 148 counterexamples)
[08/17 16:46:36]  Generator returned sat in 13.364507 secs.
[08/17 16:46:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:46:38]  Improved gap from 0.0 to 15.625
[08/17 16:46:38]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 16:46:38]  Verifer returned sat in 2.300650 secs.
[08/17 16:46:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22951.703613   22551.703857 -3922.457275  22951.703613    0.024902  22551.703857        0.0  399.999756      399.999756     5.0     22551.703857            -1             -1
1   22951.703613   22551.728760 -3922.457275  22951.703613  399.949951  22551.728760        0.0  399.974854      299.999756     5.0     22551.703857         False           True
2   22951.703613   22672.978760 -3922.457275  22951.703613  399.950195  22672.978760        0.0  278.724854      199.999756     6.0     22551.703857          True           True
3   23079.978760   22851.703613 -3922.457275  23079.978760  407.000000  22851.703613        0.0  228.275146      228.274902     7.0     22551.703857          True           True
4   23079.978760   22951.703613 -3922.457275  23079.978760  205.000000  22951.703613        0.0  128.275146      128.274902     6.0     23079.978760          True           True
5   23079.978760   23026.453613 -3922.457275  23079.978760  104.000000  23026.453613        0.0   53.525146       28.274902     3.0     23079.978760         False           True
6   23079.978760   23051.703857 -3850.732178  23079.978760   53.500000  23051.703857        0.0   28.274902        0.000000     4.0     23079.978760         False           True
7   23079.978760   23079.978760 -3766.357178  23079.978760   28.250000  23079.978760        0.0    0.000000      -15.625000     5.0     23079.978760         False           True
8   23095.603760   23095.603760 -3681.982178  23095.603760   15.625000  23095.603760        0.0    0.000000      -15.625000     1.0     23079.978760         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1638399/4096.[0m
[08/17 16:46:39]  --------------------------------------------------------------------------------
[08/17 16:46:39]  Iteration: 150 (0 solution, 149 counterexamples)
[08/17 16:46:58]  Generator returned sat in 14.722246 secs.
[08/17 16:46:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:47:00]  Improved gap from 0.00125 to 15.625
[08/17 16:47:00]  Improved number of small numbers from 79 to 114 out of a max of 114
[08/17 16:47:00]  Verifer returned sat in 1.687407 secs.
[08/17 16:47:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22951.703369   22936.128662 -3922.457520  22951.703369    0.049805  22936.128662        0.0   15.574707       15.574707     1.0     22936.128662            -1             -1
1   22951.703369   22936.128662 -3838.082520  22951.703369    0.050000  22936.128662        0.0   15.574707       -0.050293     1.0     22936.128662         False          False
2   23358.803467   22951.753662 -3838.082520  23358.803467  422.674805  22951.753662        0.0  407.049805      307.049805     1.0     22936.128662         False          False
3   23358.803467   23151.753662 -3838.082520  23358.803467  407.000000  23151.753662        0.0  207.049805      207.049805     2.0     23358.803467         False          False
4   23358.803467   23251.753418 -3838.082520  23358.803467  205.000000  23251.753418        0.0  107.050049      107.049805     3.0     23358.803467         False          False
5   23358.803467   23332.528809 -3838.082520  23358.803467  104.000000  23332.528809        0.0   26.274658        7.049805     4.0     23358.803467         False          False
6   23386.028809   23370.453613 -3772.407471  23386.028809   53.500000  23370.453613        0.0   15.575195       -0.049805     1.0     23358.803467         False          False
7   23398.703613   23386.078613 -3688.032471  23398.703613   28.250000  23386.078613        0.0   12.625000       -3.000000     1.0     23358.803467         False          False
8   23401.703613   23401.703613 -3603.657471  23401.703613   15.625000  23401.703613        0.0    0.000000      -15.625000     1.0     23358.803467         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1257881/4096.[0m
[08/17 16:47:01]  --------------------------------------------------------------------------------
[08/17 16:47:01]  Iteration: 151 (0 solution, 150 counterexamples)
[08/17 16:47:42]  Generator returned sat in 36.814562 secs.
[08/17 16:47:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:47:44]  Improved gap from 0.05 to 35.9375
[08/17 16:47:44]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/17 16:47:44]  Verifer returned sat in 1.381971 secs.
[08/17 16:47:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23358.193604   23257.993652 -4024.220215  23358.193604   0.100098  23257.993652        0.0  100.199951      100.199951     3.0     23257.993652            -1             -1
1   23358.193604   23357.993652 -4024.220215  23358.193604   0.199951  23357.993652        0.0    0.199951        0.199951     2.0     23257.993652         False           True
2   23358.193604   23357.993652 -3960.157715  23358.193604   0.100000  23357.993652        0.0    0.199951      -35.737549     2.0     23358.193604          True           True
3   23433.343506   23393.931152 -3899.570068  23433.343506  75.349854  23393.931152        0.0   39.412354        0.000000     1.0     23358.193604         False           True
4   23469.781006   23433.343506 -3838.082520  23469.781006  75.849854  23433.343506        0.0   36.437500       -2.074951     2.0     23358.193604         False          False
5   23507.693359   23471.855957 -3774.020020  23507.693359  74.349854  23471.855957        0.0   35.837402       -0.100098     1.0     23507.693359          True           True
6   23546.705811   23507.793701 -3712.932617  23546.705811  74.849854  23507.793701        0.0   38.912109       -0.000244     1.0     23507.693359         False          False
7   23583.143555   23547.206055 -3649.370117  23583.143555  75.349854  23547.206055        0.0   35.937500        0.000000     1.0     23507.693359         False          False
8   23623.055908   23583.243408 -3649.370117  23623.055908  75.849854  23583.243408        0.0   39.812500      -60.087646     1.0     23507.693359         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=102605/1024.[0m
[08/17 16:47:45]  --------------------------------------------------------------------------------
[08/17 16:47:45]  Iteration: 152 (0 solution, 151 counterexamples)
[08/17 16:48:15]  Generator returned sat in 25.399586 secs.
[08/17 16:48:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:48:15]  Improved gap from 0.0 to 100
[08/17 16:48:15]  Improved number of small numbers from 82 to 114 out of a max of 114
[08/17 16:48:15]  Verifer returned sat in 0.502098 secs.
[08/17 16:48:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23306.683350   23006.678467 -4024.220459  23306.683350  199.999756  23006.678467   0.000000  300.004883      300.002441     5.0     23006.678467            -1             -1
1   23306.683350   23007.173584 -4024.220459  23306.683350  199.999756  23007.173584   0.000000  299.509766      200.002441     5.0     23006.678467         False           True
2   23306.683350   23206.680908 -4024.220459  23306.683350  199.999756  23206.680908   0.000000  100.002441      100.002441     6.0     23006.678467          True           True
3   23406.680908   23206.680908 -4024.220459  23406.680908  200.000000  23206.680908   0.000000  200.000000      100.000000     6.0     23006.678467          True           True
4   23406.683350   23406.680908 -4024.220459  23406.683350  200.002441  23406.680908   0.000000    0.002441        0.002441     2.0     23006.678467         False           True
5   23806.188232   23506.678467 -4024.220459  23806.188232  399.507324  23506.678467   0.000000  299.509766      299.507324     1.0     23806.188232          True           True
6   23906.685791   23506.680908 -4024.220459  23906.685791  400.007324  23506.680908   0.002441  400.002441      300.002441     2.0     23806.188232         False          False
7   23906.685791   23656.680664 -4024.220459  23906.685791    0.010000  23656.680664   0.002441  250.002686      200.002441     3.0     23806.188232         False           True
8   23906.685791   23806.680664 -4024.220459  23906.685791  249.999756  23806.680664   0.002441  100.002686      100.002441     3.0     23806.188232         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=614405/2048.[0m
[08/17 16:48:16]  --------------------------------------------------------------------------------
[08/17 16:48:16]  Iteration: 153 (0 solution, 152 counterexamples)
[08/17 16:48:38]  Generator returned sat in 17.232103 secs.
[08/17 16:48:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:48:39]  Improved gap from 0.0 to 23.4375
[08/17 16:48:39]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/17 16:48:39]  Verifer returned sat in 1.127539 secs.
[08/17 16:48:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23311.625977   23062.250977 -4225.920410  23311.625977    0.049805  23062.250977        0.0  249.375000      224.987549     9.0     23062.250977            -1             -1
1   23311.676025   23086.638428 -4225.920410  23311.676025  249.425049  23086.638428        0.0  225.037598      125.037598     9.0     23062.250977         False           True
2   23336.063477   23286.638428 -4225.920410  23336.063477  249.425049  23286.638428        0.0   49.425049       49.425049     6.0     23062.250977          True           True
3   23336.063477   23311.625977 -4175.345459  23336.063477   49.375000  23311.625977        0.0   24.437500        0.000000     7.0     23336.063477          True           True
4   23560.500977   23436.063477 -4175.345459  23560.500977  248.875000  23436.063477        0.0  124.437500      124.437500     1.0     23336.063477         False           True
5   23560.500977   23498.982178 -4175.345459  23560.500977  123.937500  23498.982178        0.0   61.518799       24.437500     2.0     23336.063477         False          False
6   23560.500977   23536.063477 -4099.782959  23560.500977   61.468750  23536.063477        0.0   24.437500        0.000000     3.0     23336.063477         False          False
7   23566.297852   23560.500977 -4024.220459  23566.297852   30.234375  23560.500977        0.0    5.796875      -18.640625     4.0     23336.063477         False          False
8   23684.438477   23584.938477 -4024.220459  23684.438477  123.937500  23584.938477        0.0   99.500000       -0.500000     1.0     23684.438477          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=921549/4096.[0m
[08/17 16:48:40]  --------------------------------------------------------------------------------
[08/17 16:48:40]  Iteration: 154 (0 solution, 153 counterexamples)
[08/17 16:49:06]  Generator returned sat in 20.899119 secs.
[08/17 16:49:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 16:49:08]  Improved gap from 0.0 to 42.1875
[08/17 16:49:09]  Improved number of small numbers from 57 to 114 out of a max of 114
[08/17 16:49:09]  Verifer returned sat in 2.674429 secs.
[08/17 16:49:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23294.837402   23194.837646 -4334.119629  23294.837402    0.024902  23194.837646        0.0   99.999756       99.999756     2.0     23194.837646            -1             -1
1   23294.837402   23194.837646 -4334.119629  23294.837402    0.024902  23194.837646        0.0   99.999756       -0.000244     2.0     23194.837646         False          False
2   23456.089844   23394.837646 -4334.119629  23456.089844  261.252197  23394.837646        0.0   61.252197       61.252197     1.0     23194.837646         False          False
3   23656.065186   23490.778076 -4334.119629  23656.065186  261.227539  23490.778076        0.0  165.287109      161.227539     1.0     23656.065186         False          False
4   23656.065186   23590.733643 -4334.119629  23656.065186  130.613770  23590.733643        0.0   65.331543       61.227539     2.0     23656.065186         False          False
5   23656.065186   23595.837646 -4295.347168  23656.065186   65.306885  23595.837646        0.0   60.227539        0.000000     3.0     23656.065186         False          False
6   23698.337646   23656.065186 -4237.619629  23698.337646  102.500000  23656.065186        0.0   42.272461        0.000000     4.0     23656.065186         False           True
7   23740.708740   23698.362305 -4179.990723  23740.708740   84.643555  23698.362305        0.0   42.346436        0.000000     1.0     23656.065186         False           True
8   23740.708740   23740.708740 -4122.178223  23740.708740   42.321777  23740.708740        0.0    0.000000      -42.187500     2.0     23656.065186         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=660489/4096.[0m
[08/17 16:49:09]  --------------------------------------------------------------------------------
[08/17 16:49:09]  Iteration: 155 (0 solution, 154 counterexamples)
[08/17 16:49:28]  Generator returned sat in 14.126468 secs.
[08/17 16:49:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:49:29]  Improved gap from 0.00125 to 29.6875
[08/17 16:49:29]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/17 16:49:29]  Verifer returned sat in 0.686854 secs.
[08/17 16:49:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23244.846191   23115.160156 -4586.141357  23244.846191   0.003662  23115.160156        0.0  129.686035      129.686035     3.0     23115.160156            -1             -1
1   23244.846191   23215.159912 -4586.141357  23244.846191   0.002686  23215.159912        0.0   29.686279       29.686035     3.0     23244.846191         False           True
2   23244.846191   23215.160156 -4515.828857  23244.846191   0.001465  23215.160156        0.0   29.686035       -0.001465     3.0     23244.846191         False           True
3   23277.055420   23244.847656 -4448.036621  23277.055420  61.895264  23244.847656        0.0   32.207764        0.000000     1.0     23244.846191         False           True
4   23277.055420   23277.055420 -4378.244629  23277.055420   0.010000  23277.055420        0.0    0.000000      -30.208008     2.0     23244.846191         False          False
5   23336.950928   23307.263428 -4307.932129  23336.950928  59.895508  23307.263428        0.0   29.687500        0.000000     1.0     23336.950928          True           True
6   23336.950928   23336.950928 -4237.619629  23336.950928   0.010000  23336.950928        0.0    0.000000      -29.687500     2.0     23336.950928         False          False
7   23427.054199   23397.366699 -4198.035400  23427.054199  90.103271  23397.366699        0.0   29.687500        0.000000     1.0     23336.950928         False           True
8   23427.054199   23427.054199 -4198.035400  23427.054199   0.010000  23427.054199        0.0    0.000000     -100.000000     2.0     23336.950928         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=103749/800.[0m
[08/17 16:49:30]  --------------------------------------------------------------------------------
[08/17 16:49:30]  Iteration: 156 (0 solution, 155 counterexamples)
[08/17 16:50:25]  Generator returned sat in 50.030171 secs.
[08/17 16:50:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:50:26]  Improved gap from 0.0 to 48.4375
[08/17 16:50:26]  Improved number of small numbers from 94 to 97 out of a max of 114
[08/17 16:50:26]  Verifer returned sat in 1.419385 secs.
[08/17 16:50:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23336.950928   22788.513428 -4507.902129  23336.950928    0.100098  22788.513428        0.0  548.437500      448.437500     6.0     22788.513428            -1             -1
1   23336.950928   22988.513428 -4507.902129  23336.950928  348.537598  22988.513428        0.0  348.437500      348.437500     2.0     22788.513428         False          False
2   23336.950928   23088.513428 -4507.902129  23336.950928  348.437256  23088.513428        0.0  248.437500      248.437500     3.0     23336.950928         False          False
3   23336.950928   23139.800928 -4507.902129  23336.950928  196.900000  23139.800928        0.0  197.150000      148.437500     4.0     23336.950928         False          False
4   23336.950928   23286.125732 -4507.902129  23336.950928   99.450000  23286.125732        0.0   50.825195       48.437500     5.0     23336.950928         False          False
5   23336.950928   23288.513428 -4456.339629  23336.950928   50.725000  23288.513428        0.0   48.437500        0.000000     6.0     23336.950928         False          False
6   23336.950928   23336.950928 -4404.777129  23336.950928   26.362500  23336.950928        0.0    0.000000      -48.437500     7.0     23336.950928         False          False
7   23436.025928   23385.388428 -4355.414629  23436.025928   99.075000  23385.388428        0.0   50.637500        0.000000     1.0     23336.950928         False           True
8   23436.025928   23436.025928 -4355.414551  23436.025928   50.537500  23436.025928        0.0    0.000000      -99.999922     2.0     23336.950928         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=7175/16.[0m
[08/17 16:50:27]  --------------------------------------------------------------------------------
[08/17 16:50:27]  Iteration: 157 (0 solution, 156 counterexamples)
[08/17 16:51:01]  Generator returned sat in 29.237293 secs.
[08/17 16:51:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:51:03]  Improved gap from 0.0 to 25.0
[08/17 16:51:04]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/17 16:51:04]  Verifer returned sat in 2.192299 secs.
[08/17 16:51:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22434.464600   22245.469727 -3964.858154  22434.464600    0.001465  22245.469727   0.000000  188.994873       88.995117     9.0     22245.469727            -1             -1
1   22434.464600   22434.463379 -3964.858154  22434.464600    0.001465  22434.463379   0.000000    0.001221      -11.004883     2.0     22245.469727         False           True
2   22545.470703   22545.468506 -3964.858154  22545.470703  111.007324  22545.468506   0.000000    0.002197        0.001221     1.0     22245.469727          True           True
3   22545.470703   22545.469727 -3889.858398  22545.470703    0.001250  22545.469727   0.000000    0.000977      -24.999023     2.0     22545.470703         False          False
4   22843.469727   22670.469727 -3889.858398  22843.469727  298.000000  22670.469727  84.004883   88.995117       88.995117     1.0     22545.470703         False           True
5   22843.469727   22670.470947 -3878.854492  22843.469727    0.010000  22670.470947  84.004883   88.993896       -0.000977     2.0     22545.470703         False          False
6   22877.478271   22759.466064 -3812.862061  22877.478271  123.002441  22759.466064  84.004883   34.007324        0.000000     1.0     22793.473389          True           True
7   22904.472168   22793.473389 -3739.856934  22904.472168   61.001221  22793.473389  84.004883   26.993896       -0.000977     2.0     22793.473389         False          False
8   22998.481934   22820.468506 -3733.865967  22998.481934  121.003662  22820.468506  84.004883   94.008545       -0.000244     1.0     22793.473389         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=91131/1024.[0m
[08/17 16:51:04]  --------------------------------------------------------------------------------
[08/17 16:51:04]  Iteration: 158 (0 solution, 157 counterexamples)
[08/17 16:51:28]  Generator returned sat in 18.869636 secs.
[08/17 16:51:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:51:29]  Improved gap from 0.0 to 23.4375
[08/17 16:51:29]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:51:29]  Verifer returned sat in 1.200287 secs.
[08/17 16:51:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22895.670703   22645.795703 -4040.559375  22895.670703  100.200000  22645.795703        0.0  249.875000      200.000000     9.0     22645.795703            -1             -1
1   22895.670703   22795.670703 -4040.559375  22895.670703  100.100000  22795.670703        0.0  100.000000      100.000000     2.0     22895.670703         False           True
2   22895.770703   22895.570703 -4040.559375  22895.770703  100.100000  22895.570703        0.0    0.200000        0.100000     3.0     22895.670703         False          False
3   22995.670703   22895.670703 -4040.559375  22995.670703  100.100000  22895.670703        0.0  100.000000        0.000000     4.0     22895.670703         False           True
4   23143.545703   23095.670703 -4040.559375  23143.545703  247.875000  23095.670703        0.0   47.875000       47.875000     1.0     22895.670703         False           True
5   23219.108203   23157.789453 -4040.559375  23219.108203  123.437500  23157.789453        0.0   61.318750       23.437500     1.0     22895.670703         False          False
6   23219.108203   23195.670703 -3963.996875  23219.108203   61.218750  23195.670703        0.0   23.437500        0.000000     2.0     22895.670703         False          False
7   23225.780078   23219.108203 -3890.459375  23225.780078   30.109375  23219.108203        0.0    6.671875      -19.790625     3.0     22895.670703         False          False
8   23340.545703   23245.570703 -3890.459375  23340.545703  121.437500  23245.570703        0.0   94.975000       -5.025000     1.0     23340.545703          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=200.[0m
[08/17 16:51:30]  --------------------------------------------------------------------------------
[08/17 16:51:30]  Iteration: 159 (0 solution, 158 counterexamples)
[08/17 16:52:00]  Generator returned sat in 24.634212 secs.
[08/17 16:52:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:52:02]  Improved gap from 0.0 to 15.625
[08/17 16:52:03]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/17 16:52:03]  Verifer returned sat in 2.610472 secs.
[08/17 16:52:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19954.745850   19754.745605 -493.109375  19954.745850  400.200195  19754.745605   0.000000  200.000244      200.000000     6.0     19754.745605            -1             -1
1   20154.845703   19854.545654 -493.109375  20154.845703  400.100098  19854.545654   0.099854  300.200195      300.000000     2.0     20154.745850         False           True
2   20254.745605   19863.370850 -493.109375  20254.745605  400.100098  19863.370850   0.099854  391.274902      299.899902     3.0     20154.745850         False          False
3   20270.470703   19954.745850 -493.109375  20270.470703  407.000000  19954.745850   0.099854  315.625000      215.625000     4.0     20154.745850         False          False
4   20270.470703   20154.745850 -493.109375  20270.470703  205.000000  20154.745850   0.099854  115.625000      115.625000     4.0     20154.745850         False           True
5   20270.470703   20216.770752 -493.109375  20270.470703  104.000000  20216.770752   0.099854   53.600098       15.625000     4.0     20154.745850         False           True
6   20270.470703   20254.745850 -408.734375  20270.470703   53.500000  20254.745850   0.099854   15.625000        0.000000     4.0     20270.370850          True           True
7   20283.095703   20270.370850 -324.359375  20283.095703   28.250000  20270.370850   0.099854   12.625000       -3.000000     5.0     20270.370850         False           True
8   20286.095703   20285.995850 -239.984375  20286.095703   15.625000  20285.995850   0.099854    0.000000      -15.625000     1.0     20270.370850         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=300.[0m
[08/17 16:52:03]  --------------------------------------------------------------------------------
[08/17 16:52:03]  Iteration: 160 (0 solution, 159 counterexamples)
[08/17 16:52:35]  Generator returned sat in 27.223009 secs.
[08/17 16:52:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:52:36]  Improved gap from 0.55 to 48.4375
[08/17 16:52:36]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:52:36]  Verifer returned sat in 0.639246 secs.
[08/17 16:52:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20702.120703   20249.395703 -493.109375  20702.120703   453.025  20249.395703        0.0  452.7250        399.8000     3.0     20249.395703            -1             -1
1   20702.320703   20302.320703 -493.109375  20702.320703   452.925  20302.320703        0.0  400.0000        300.0000     3.0     20702.320703         False          False
2   20755.245703   20502.320703 -493.109375  20755.245703   452.925  20502.320703        0.0  252.9250        252.9250     4.0     20702.320703         False          False
3   20755.245703   20562.495703 -493.109375  20755.245703     0.100  20562.495703        0.0  192.7500        152.9250     5.0     20755.245703         False          False
4   20755.245703   20702.220703 -493.109375  20755.245703   157.050  20702.220703        0.0   53.0250         52.9250     4.0     20755.245703         False           True
5   20755.245703   20702.320703 -446.034375  20755.245703     0.500  20702.320703        0.0   52.9250          0.0000     5.0     20755.245703         False          False
6   20802.820703   20755.245703 -394.471875  20802.820703   100.500  20755.245703        0.0   47.5750         -0.8625     5.0     20755.245703         False           True
7   20852.120703   20803.683203 -342.909375  20852.120703    96.875  20803.683203        0.0   48.4375          0.0000     1.0     20755.245703         False           True
8   20852.120703   20852.120703 -342.909375  20852.120703     0.500  20852.120703        0.0    0.0000       -100.0000     2.0     20755.245703         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1999/5.[0m
[08/17 16:52:37]  --------------------------------------------------------------------------------
[08/17 16:52:37]  Iteration: 161 (0 solution, 160 counterexamples)
[08/17 16:53:08]  Generator returned sat in 26.288477 secs.
[08/17 16:53:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:53:09]  Improved gap from 0.0 to 48.4375
[08/17 16:53:10]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:53:10]  Verifer returned sat in 1.176761 secs.
[08/17 16:53:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20402.420703   20402.370703 -442.084375  20402.420703     0.050  20402.370703        0.0    0.0500        -99.9500     2.0     20402.370703            -1             -1
1   20702.320703   20510.570703 -442.084375  20702.320703   299.950  20510.570703        0.0  191.7500         99.9500     1.0     20402.370703         False          False
2   20763.595703   20702.370703 -442.084375  20763.595703   253.025  20702.370703        0.0   61.2250         61.2250     1.0     20763.595703         False          False
3   20955.395703   20763.645703 -442.084375  20955.395703   253.025  20763.645703        0.0  191.7500        153.0250     1.0     20763.595703         False          False
4   20955.395703   20902.320703 -442.084375  20955.395703     2.000  20902.320703        0.0   53.0750         53.0250     2.0     20763.595703         False          False
5   20955.395703   20902.370703 -395.109375  20955.395703     2.000  20902.370703        0.0   53.0250          0.0000     3.0     20763.595703         False          False
6   21003.370703   20955.395703 -343.546875  21003.370703   101.000  20955.395703        0.0   47.9750         -0.4625     4.0     21003.370703          True           True
7   21052.270703   21003.833203 -291.984375  21052.270703    96.875  21003.833203        0.0   48.4375          0.0000     1.0     21003.370703         False           True
8   21052.270703   21052.270703 -291.984375  21052.270703     2.000  21052.270703        0.0    0.0000       -100.0000     2.0     21003.370703         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=6123/40.[0m
[08/17 16:53:10]  --------------------------------------------------------------------------------
[08/17 16:53:10]  Iteration: 162 (0 solution, 161 counterexamples)
[08/17 16:53:54]  Generator returned sat in 38.876070 secs.
[08/17 16:53:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:53:55]  Improved gap from 0.52490234375 to 48.4375
[08/17 16:53:55]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:53:55]  Verifer returned sat in 0.882647 secs.
[08/17 16:53:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20516.770703   20479.370703 -442.084375  20516.770703    0.0500  20479.370703     0.0000   37.4000         37.4000     3.0     20479.370703            -1             -1
1   20890.358203   20516.820703 -442.084375  20890.358203  410.9875  20516.820703    10.9875  362.5500        300.0000     1.0     20479.370703         False          False
2   20938.795703   20679.370703 -442.084375  20938.795703  410.9875  20679.370703    10.9875  248.4375        248.4375     2.0     20479.370703         False          False
3   20938.795703   20727.708203 -442.084375  20938.795703  248.3875  20727.708203    10.9875  200.1000        148.4375     3.0     20927.808203         False          False
4   20938.795703   20877.908203 -442.084375  20938.795703    0.5000  20877.908203    10.9875   49.9000         48.4375     4.0     20927.808203         False          False
5   20938.795703   20879.370703 -390.521875  20938.795703    0.5000  20879.370703    10.9875   48.4375          0.0000     5.0     20927.808203         False          False
6   20990.358203   20927.808203 -342.084375  20990.358203  100.0000  20927.808203    10.9875   51.5625          0.0000     5.0     20927.808203         False           True
7   21038.845703   20979.420703 -290.571875  21038.845703  100.0500  20979.420703    10.9875   48.4375          0.0000     1.0     20927.808203         False           True
8   21038.845703   21027.858203 -290.571875  21038.845703    0.5000  21027.858203    10.9875    0.0000       -100.0000     2.0     20927.808203         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=300.[0m
[08/17 16:53:56]  --------------------------------------------------------------------------------
[08/17 16:53:56]  Iteration: 163 (0 solution, 162 counterexamples)
[08/17 16:54:14]  Generator returned sat in 13.220823 secs.
[08/17 16:54:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:54:16]  Improved gap from 0.0025 to 48.4375
[08/17 16:54:16]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:54:16]  Verifer returned sat in 1.589321 secs.
[08/17 16:54:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20622.693115   20422.743164 -416.784668  20622.693115  199.950000  20422.743164   0.000000  199.949951      199.949951     1.0     20422.743164            -1             -1
1   20622.693115   20422.743164 -416.784668  20622.693115  199.900146  20422.743164   0.000000  199.949951       99.949951     1.0     20622.693115         False          False
2   20871.230713   20622.743164 -416.784668  20871.230713  448.487549  20622.743164   0.050049  248.437500      248.437500     1.0     20622.693115         False          False
3   20871.230713   20672.430664 -416.784668  20871.230713   97.875000  20672.430664   0.050049  198.750000      148.437500     2.0     20871.180664         False          False
4   20871.230713   20822.693115 -416.784668  20871.230713   48.437500  20822.693115   0.050049   48.487549       48.437500     3.0     20871.180664         False          False
5   20871.230713   20822.743164 -365.222168  20871.230713   23.718750  20822.743164   0.050049   48.437500        0.000000     4.0     20871.180664         False          False
6   20921.293213   20871.180664 -318.247070  20921.293213   98.500000  20871.180664   0.050049   50.062500       -2.962402     5.0     20871.180664         False           True
7   20969.105713   20924.205566 -266.684570  20969.105713   97.875000  20924.205566   0.050049   44.850098       -3.587402     1.0     20871.180664         False           True
8   20972.693115   20972.643066 -266.684570  20972.693115   48.437500  20972.643066   0.050049    0.000000     -100.000000     1.0     20871.180664         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=3975/16.[0m
[08/17 16:54:17]  --------------------------------------------------------------------------------
[08/17 16:54:17]  Iteration: 164 (0 solution, 163 counterexamples)
[08/17 16:54:42]  Generator returned sat in 20.562697 secs.
[08/17 16:54:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:54:44]  Improved gap from 0.0 to 23.4375
[08/17 16:54:44]  Improved number of small numbers from 62 to 72 out of a max of 114
[08/17 16:54:44]  Verifer returned sat in 1.687286 secs.
[08/17 16:54:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20549.230469   20449.222331 -344.781982  20549.230469  100.008333  20449.222331   0.000000  100.008138        0.008324     4.0     20449.222331            -1             -1
1   20549.230469   20549.228997 -268.226562  20549.230469  100.006836  20549.228997   0.000000    0.001471      -23.436257     4.0     20549.230469         False           True
2   20649.732331   20626.294831 -245.292168  20649.732331  100.503333  20626.294831   0.000000   23.437500        0.000000     1.0     20549.230469         False           True
3   20649.733997   20649.732331 -245.292168  20649.733997   23.439167  20649.732331   0.000000    0.001667      -99.998333     2.0     20649.733997         False          False
4   20849.742331   20849.728997 -245.292168  20849.742331  200.010000  20849.728997   0.001667    0.011667        0.008333     1.0     20649.733997         False           True
5   20849.742331   20849.738997 -171.848001  20849.742331    0.010000  20849.738997   0.001667    0.001667      -26.547500     2.0     20649.733997         False          False
6   21072.684831   20976.288164 -171.848001  21072.684831  222.944167  20976.288164  96.388333    0.008333        0.008333     1.0     20976.296497          True           True
7   21072.686497   20976.289831  -95.287168  21072.686497    0.010000  20976.289831  96.388333    0.008333      -23.429167     2.0     20976.296497         False          False
8   21198.738997   20999.727539  -95.287168  21198.738997  126.060833  20999.727539  99.003333  100.008125        0.008333     1.0     20976.296497         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=1/120.[0m
[08/17 16:54:45]  --------------------------------------------------------------------------------
[08/17 16:54:45]  Iteration: 165 (0 solution, 164 counterexamples)
[08/17 16:55:22]  Generator returned sat in 32.389465 secs.
[08/17 16:55:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:55:24]  Improved gap from 0.0 to 25.0
[08/17 16:55:24]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:55:24]  Verifer returned sat in 1.132897 secs.
[08/17 16:55:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20563.395264   20463.445068 -246.847900  20563.395264  325.099854  20463.445068   0.000000   99.950195       99.950195     8.0     20463.445068            -1             -1
1   20788.495117   20563.445068 -246.847900  20788.495117  325.050049  20563.445068   0.050049  225.000000      225.000000     1.0     20788.445068         False           True
2   20888.545166   20663.444824 -246.847900  20888.545166  325.050049  20663.444824   0.100098  225.000244      225.000000     2.0     20788.445068         False          False
3   20888.545166   20762.045166 -246.847900  20888.545166  224.950000  20762.045166   0.100098  126.399902      125.000000     3.0     20888.445068         False          False
4   20888.545166   20863.395020 -246.847900  20888.545166    0.500000  20863.395020   0.100098   25.050049       25.000000     3.0     20888.445068         False          False
5   20888.545166   20863.445068 -171.847900  20888.545166    0.500000  20863.445068   0.100098   25.000000        0.000000     4.0     20888.445068         False          False
6   20888.545166   20888.445068  -96.847900  20888.545166    0.500000  20888.445068   0.100098    0.000000      -25.000000     5.0     20888.445068         False          False
7   21013.445068   20988.344971  -96.747803  21013.445068  124.899902  20988.344971   0.100098   25.000000        0.000000     1.0     20888.445068         False           True
8   21013.445068   21013.344971  -96.697998  21013.445068    0.500000  21013.344971   0.100098    0.000000      -99.950195     2.0     20888.445068         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=225.[0m
[08/17 16:55:25]  --------------------------------------------------------------------------------
[08/17 16:55:25]  Iteration: 166 (0 solution, 165 counterexamples)
[08/17 16:55:54]  Generator returned sat in 24.079026 secs.
[08/17 16:55:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:55:55]  Improved gap from 0.0 to 48.4375
[08/17 16:55:55]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:55:55]  Verifer returned sat in 0.737591 secs.
[08/17 16:55:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20287.745361   20287.745117 -98.305420  20287.745361  399.999756  20287.745117        0.0    0.000244        0.000244     7.0     20287.745117            -1             -1
1   20687.745117   20287.745117 -98.305420  20687.745117  400.000000  20287.745117        0.0  400.000000      300.000000     7.0     20287.745117         False           True
2   20740.770020   20487.745117 -98.305420  20740.770020  453.024902  20487.745117        0.0  253.024902      253.024902     2.0     20287.745117         False           True
3   20740.770020   20544.020020 -98.305420  20740.770020    0.050049  20544.020020        0.0  196.750000      153.024902     3.0     20740.770020         False          False
4   20740.770020   20687.695068 -98.305420  20740.770020    0.500000  20687.695068        0.0   53.074951       53.024902     4.0     20740.770020         False          False
5   20740.770020   20687.745117 -51.330322  20740.770020    0.500000  20687.745117        0.0   53.024902        0.000000     5.0     20740.770020         False          False
6   20786.245117   20740.770020   0.232178  20786.245117   98.500000  20740.770020        0.0   45.475098       -2.962402     5.0     20740.770020         False           True
7   20837.645020   20789.207520  51.794678  20837.645020   96.875000  20789.207520        0.0   48.437500        0.000000     1.0     20740.770020         False           True
8   20837.645020   20837.645020  51.794678  20837.645020    0.500000  20837.645020        0.0    0.000000     -100.000000     2.0     20740.770020         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=307251/1024.[0m
[08/17 16:55:55]  --------------------------------------------------------------------------------
[08/17 16:55:55]  Iteration: 167 (0 solution, 166 counterexamples)
[08/17 16:56:10]  Generator returned sat in 9.777227 secs.
[08/17 16:56:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:56:12]  Improved gap from 0.48748779296875 to 25.0
[08/17 16:56:12]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 16:56:12]  Verifer returned sat in 1.474961 secs.
[08/17 16:56:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20490.705322   20465.754883 -155.855469  20490.705322      0.05  20465.754883        0.0   24.950439       24.950195     2.0     20465.754883            -1             -1
1   20865.754883   20490.755127 -155.855469  20865.754883    400.00  20490.755127        0.0  374.999756      299.999756     1.0     20465.754883         False          False
2   20890.755127   20665.755127 -155.855469  20890.755127    400.00  20665.755127        0.0  225.000000      225.000000     2.0     20465.754883         False          False
3   20890.755127   20765.755127 -155.855469  20890.755127    225.00  20765.755127        0.0  125.000000      125.000000     3.0     20890.755127         False          False
4   20890.755127   20865.754883 -155.855469  20890.755127      0.50  20865.754883        0.0   25.000244       25.000000     4.0     20890.755127         False          False
5   20890.755127   20865.755127  -80.855469  20890.755127      0.50  20865.755127        0.0   25.000000        0.000000     4.0     20890.755127         False          False
6   20890.755127   20890.755127   -5.855469  20890.755127      0.50  20890.755127        0.0    0.000000      -25.000000     5.0     20890.755127         False          False
7   21013.755127   20988.754883   -3.855469  21013.755127    123.00  20988.754883        0.0   25.000244        0.000000     1.0     20890.755127         False           True
8   21013.755127   21013.755127   71.144531  21013.755127      0.50  21013.755127        0.0    0.000000      -25.000000     2.0     20890.755127         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=6001/20.[0m
[08/17 16:56:13]  --------------------------------------------------------------------------------
[08/17 16:56:13]  Iteration: 168 (0 solution, 167 counterexamples)
[08/17 16:56:30]  Generator returned sat in 11.647652 secs.
[08/17 16:56:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:56:31]  Improved gap from 25.0 to 25.0
[08/17 16:56:31]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 16:56:31]  Verifer returned sat in 1.227368 secs.
[08/17 16:56:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19576.644775   19476.744629 -155.855469  19576.644775  325.099854  19476.744629   0.000000   99.900146       99.900146     4.0     19476.744629            -1             -1
1   19801.844482   19576.744629 -155.855469  19801.844482  325.099854  19576.744629   0.099854  225.000000      225.000000     1.0     19476.744629         False          False
2   19901.944580   19676.744629 -155.855469  19901.944580  325.100098  19676.744629   0.199951  225.000000      225.000000     2.0     19476.744629         False          False
3   19901.944580   19776.744629 -155.855469  19901.944580    0.100098  19776.744629   0.199951  125.000000      125.000000     3.0     19901.744629         False          False
4   19901.944580   19876.644531 -155.855469  19901.944580    0.500000  19876.644531   0.199951   25.100098       25.000000     3.0     19901.744629         False          False
5   19901.944580   19876.744629  -80.855469  19901.944580    0.500000  19876.744629   0.199951   25.000000        0.000000     4.0     19901.744629         False          False
6   19901.944580   19901.744629   -5.855713  19901.944580    0.500000  19901.744629   0.199951    0.000000      -25.000244     5.0     19901.744629         False          False
7   20025.944580   20000.744629   -4.855469  20025.944580  124.000000  20000.744629   0.199951   25.000000        0.000000     1.0     19901.744629         False           True
8   20025.944580   20025.744629   -4.855469  20025.944580    0.500000  20025.744629   0.199951    0.000000     -100.000000     2.0     19901.744629         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=225.[0m
[08/17 16:56:32]  --------------------------------------------------------------------------------
[08/17 16:56:32]  Iteration: 169 (0 solution, 168 counterexamples)
[08/17 16:56:59]  Generator returned sat in 21.748543 secs.
[08/17 16:56:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:57:00]  Improved gap from 15.0 to 48.4375
[08/17 16:57:00]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 16:57:00]  Verifer returned sat in 0.772907 secs.
[08/17 16:57:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19944.532227   19744.632324 -155.855469  19944.532227  357.687500  19744.632324        0.0  199.899902       99.900146     4.0     19744.632324            -1             -1
1   20102.219727   19944.632080 -155.855469  20102.219727  357.587402  19944.632080        0.0  157.587646      157.587646     1.0     20102.219727         False          False
2   20293.069580   19944.632080 -155.855469  20293.069580  348.437500  19944.632080        0.0  348.437500      248.437500     1.0     20293.069580         False          False
3   20293.069580   20102.319580 -155.855469  20293.069580  348.437500  20102.319580        0.0  190.750000      148.437500     2.0     20293.069580         False          False
4   20293.069580   20240.044434 -155.855469  20293.069580    0.500000  20240.044434        0.0   53.025146       48.437500     3.0     20293.069580         False          False
5   20293.069580   20244.632080 -104.292969  20293.069580    0.500000  20244.632080        0.0   48.437500        0.000000     4.0     20293.069580         False          False
6   20293.069580   20293.069580  -52.730469  20293.069580    0.500000  20293.069580        0.0    0.000000      -48.437500     5.0     20293.069580         False          False
7   20389.944580   20341.507080   -1.167969  20389.944580   96.875000  20341.507080        0.0   48.437500        0.000000     1.0     20293.069580         False           True
8   20389.944580   20389.944580   -1.167969  20389.944580    0.500000  20389.944580        0.0    0.000000     -100.000000     2.0     20293.069580         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1018009/4096.[0m
[08/17 16:57:00]  --------------------------------------------------------------------------------
[08/17 16:57:00]  Iteration: 170 (0 solution, 169 counterexamples)
[08/17 16:57:24]  Generator returned sat in 17.959309 secs.
[08/17 16:57:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 16:57:24]  Improved gap from 47.9375 to 48.4375
[08/17 16:57:25]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/17 16:57:25]  Verifer returned sat in 0.736430 secs.
[08/17 16:57:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20797.307129   20497.207031 -306.092773  20797.307129    0.100098  20497.207031        0.0  300.100098      300.100098     9.0     20497.207031            -1             -1
1   20897.207031   20545.644531 -306.092773  20897.207031  400.000000  20545.644531        0.0  351.562500      300.000000     4.0     20497.207031         False           True
2   20945.644531   20697.207031 -306.092773  20945.644531  400.000000  20697.207031        0.0  248.437500      248.437500     4.0     20497.207031         False          False
3   20945.644531   20745.444336 -306.092773  20945.644531    0.099854  20745.444336        0.0  200.200195      148.437500     5.0     20945.644531         False          False
4   20945.644531   20896.844727 -306.092773  20945.644531  125.118652  20896.844727        0.0   48.799805       48.437500     4.0     20945.644531         False           True
5   20945.644531   20897.207031 -254.530273  20945.644531    0.500000  20897.207031        0.0   48.437500        0.000000     5.0     20945.644531         False          False
6   20998.207031   20945.644531 -207.092969  20998.207031  101.000000  20945.644531        0.0   52.562500       -0.000195     5.0     20945.644531         False           True
7   21046.744629   20998.307129 -155.630371  21046.744629  101.100098  20998.307129        0.0   48.437500        0.000000     1.0     20945.644531         False           True
8   21046.744629   21046.744629 -104.068115  21046.744629    0.500000  21046.744629        0.0    0.000000      -48.437744     2.0     20945.644531         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=614605/2048.[0m
[08/17 16:57:25]  --------------------------------------------------------------------------------
[08/17 16:57:25]  Iteration: 171 (0 solution, 170 counterexamples)
[08/17 16:58:15]  Generator returned sat in 43.897734 secs.
[08/17 16:58:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:58:16]  Improved gap from 0.0 to 23.4375
[08/17 16:58:17]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 16:58:17]  Verifer returned sat in 1.745139 secs.
[08/17 16:58:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20242.766357   20185.641357  -25.091064  20242.766357    0.001250  20185.641357   0.000000   57.125000       26.561279     6.0     20185.641357            -1             -1
1   20339.642578   20216.205078  -25.091064  20339.642578  154.001221  20216.205078   0.000000  123.437500       23.437500     3.0     20185.641357         False           True
2   20339.642578   20316.205078   51.471436  20339.642578  123.437256  20316.205078   0.000000   23.437500        0.000000     2.0     20339.642578          True           True
3   20339.643799   20339.642578  126.032715  20339.643799   23.438721  20339.642578   0.000000    0.001221      -25.437500     3.0     20339.643799         False          False
4   20491.643799   20465.081299  126.032715  20491.643799  152.001221  20465.081299   0.001221   26.561279       26.561279     1.0     20339.643799         False           True
5   20491.643799   20468.205078  199.471436  20491.643799    0.010000  20468.205078   0.001221   23.437500        0.000000     2.0     20339.643799         False          False
6   20491.643799   20491.642578  276.033936  20491.643799    2.005000  20491.642578   0.001221    0.000000      -23.437500     3.0     20339.643799         False          False
7   20641.643799   20515.080322  276.033936  20641.643799  150.000000  20515.080322   0.002441  126.561035       26.561279     1.0     20641.641357          True           True
8   20641.643799   20615.080322  276.033936  20641.643799    0.010000  20615.080322   0.002441   26.561035      -73.438721     2.0     20641.641357         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=108795/4096.[0m
[08/17 16:58:17]  --------------------------------------------------------------------------------
[08/17 16:58:17]  Iteration: 172 (0 solution, 171 counterexamples)
[08/17 16:59:34]  Generator returned sat in 71.555881 secs.
[08/17 16:59:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:59:35]  Improved gap from 0.0 to 48.4375
[08/17 16:59:36]  Improved number of small numbers from 62 to 71 out of a max of 114
[08/17 16:59:36]  Verifer returned sat in 1.445088 secs.
[08/17 16:59:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20139.641113   20139.640049  -48.526035  20139.641113    0.001465  20139.640049    0.00000   0.001064      -99.998936     9.0     20139.640049            -1             -1
1   20339.643799   20333.402549  -48.526035  20339.643799  200.003750  20333.402549    0.00125   6.240000        0.002500     1.0     20139.640049         False           True
2   20432.523799   20381.840049  -41.408535  20432.523799   99.120000  20381.840049    0.00125  50.682500        0.000000     1.0     20432.522549         False          False
3   20480.961299   20432.522549   10.153965  20480.961299   99.120000  20432.522549    0.00125  48.437500        0.000000     2.0     20432.522549         False          False
4   20580.965049   20580.958799   10.153965  20580.965049  148.441250  20580.958799    0.00250   0.003750        0.002500     1.0     20432.522549         False           True
5   20580.971299   20580.960049   61.716309  20580.971299    0.010000  20580.960049    0.00250   0.008750      -48.428906     2.0     20432.522549         False          False
6   20682.522549   20629.397705  108.593965  20682.522549  101.560000  20629.397705    0.00250  53.122344        0.000000     1.0     20682.520049          True           True
7   20682.522549   20682.520049  160.156250  20682.522549    2.000000  20682.520049    0.00250   0.000000      -48.437715     2.0     20682.520049         False          False
8   20735.303174   20730.957764  211.718750  20735.303174   52.780625  20730.957764    0.00250   4.342910      -44.094590     1.0     20682.520049         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/400.[0m
[08/17 16:59:37]  --------------------------------------------------------------------------------
[08/17 16:59:37]  Iteration: 173 (0 solution, 172 counterexamples)
[08/17 17:00:46]  Generator returned sat in 63.875738 secs.
[08/17 17:00:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:00:47]  Improved gap from 0.0 to 48.4375
[08/17 17:00:47]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:00:47]  Verifer returned sat in 0.581081 secs.
[08/17 17:00:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19886.507324   19586.457520  604.656494  19886.507324    0.049805  19586.457520        0.0  300.049805      300.049805     9.0      19586.45752            -1             -1
1   19986.457520   19686.457520  604.656494  19986.457520  400.000000  19686.457520        0.0  300.000000      300.000000     2.0      19586.45752         False           True
2   20034.895020   19786.457520  604.656494  20034.895020  348.437500  19786.457520        0.0  248.437500      248.437500     3.0      20034.89502         False          False
3   20034.895020   19835.870117  604.656494  20034.895020  248.387451  19835.870117        0.0  199.024902      148.437500     4.0      20034.89502         False          False
4   20034.895020   19986.457520  604.656494  20034.895020    0.500000  19986.457520        0.0   48.437500       48.437500     4.0      20034.89502         False          False
5   20034.895020   19986.457520  656.218994  20034.895020    0.500000  19986.457520        0.0   48.437500        0.000000     4.0      20034.89502         False          False
6   20034.895020   20034.895020  707.781494  20034.895020    0.500000  20034.895020        0.0    0.000000      -48.437500     5.0      20034.89502         False          False
7   20136.407471   20083.332520  754.706543  20136.407471  101.512451  20083.332520        0.0   53.074951        0.000000     1.0      20034.89502         False           True
8   20136.407471   20136.407471  754.706543  20136.407471    0.500000  20136.407471        0.0    0.000000     -100.000000     2.0      20034.89502         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=307251/1024.[0m
[08/17 17:00:47]  --------------------------------------------------------------------------------
[08/17 17:00:47]  Iteration: 174 (0 solution, 173 counterexamples)
[08/17 17:01:38]  Generator returned sat in 45.693135 secs.
[08/17 17:01:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:01:40]  Improved gap from 0.512451171875 to 25.0
[08/17 17:01:40]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/17 17:01:40]  Verifer returned sat in 1.280663 secs.
[08/17 17:01:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20019.820068   19819.870117  277.503906  20019.820068  425.049805  19819.870117   0.000000  199.949951      199.949951     1.0     19819.870117            -1             -1
1   20244.920166   19819.870117  277.503906  20244.920166  425.050049  19819.870117  25.149902  399.900146      299.900146     1.0     19819.870117         False          False
2   20270.020020   20019.869873  277.503906  20270.020020  425.000000  20019.869873  25.149902  225.000244      225.000000     2.0     20244.870117         False          False
3   20270.020020   20119.870117  277.503906  20270.020020    0.050049  20119.870117  25.149902  125.000000      125.000000     3.0     20244.870117         False          False
4   20270.020020   20219.820068  277.503906  20270.020020    0.500000  20219.820068  25.149902   25.050049       25.000000     3.0     20244.870117         False          False
5   20270.020020   20219.870117  352.503906  20270.020020    0.500000  20219.870117  25.149902   25.000000        0.000000     4.0     20244.870117         False          False
6   20270.020020   20244.870117  353.004150  20270.020020    0.500000  20244.870117  25.149902    0.000000      -99.499756     5.0     20244.870117         False          False
7   20394.520020   20344.370117  428.003906  20394.520020  124.500000  20344.370117  25.149902   25.000000        0.000000     1.0     20244.870117         False           True
8   20394.520020   20369.370117  428.004150  20394.520020    0.500000  20369.370117  25.149902    0.000000      -99.999756     2.0     20244.870117         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1228391/4096.[0m
[08/17 17:01:41]  --------------------------------------------------------------------------------
[08/17 17:01:41]  Iteration: 175 (0 solution, 174 counterexamples)
[08/17 17:02:33]  Generator returned sat in 46.791544 secs.
[08/17 17:02:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 17:02:35]  Improved gap from 0.05 to 14.0625
[08/17 17:02:36]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 17:02:36]  Verifer returned sat in 2.302022 secs.
[08/17 17:02:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19940.535889   19840.535645  477.204102  19940.535889    0.099854  19840.535645   0.000000  100.000244      100.000244     2.0     19840.535645            -1             -1
1   19940.535889   19940.435791  477.204102  19940.535889    0.100098  19940.435791   0.000000    0.100098        0.000244     2.0     19840.535645         False          False
2   20360.735840   19940.535645  477.204102  20360.735840  420.300049  19940.535645   0.100098  420.100098      320.100098     3.0     19840.535645         False          False
3   20360.735840   20140.535645  477.204102  20360.735840  420.000000  20140.535645   0.100098  220.100098      220.100098     2.0     20360.635742         False          False
4   20360.735840   20240.535645  477.204102  20360.735840  211.000000  20240.535645   0.100098  120.100098      120.100098     3.0     20360.635742         False          False
5   20360.735840   20306.285645  477.204102  20360.735840  106.500000  20306.285645   0.100098   54.350098       20.100098     4.0     20360.635742         False          False
6   20360.735840   20346.573242  557.104004  20360.735840   54.250000  20346.573242   0.100098   14.062500        0.000000     5.0     20360.635742         False          False
7   20374.798340   20360.635742  643.041504  20374.798340   28.125000  20360.635742   0.100098   14.062500        0.000000     6.0     20360.635742         False          False
8   20374.798340   20374.698242  643.041504  20374.798340    0.500000  20374.698242   0.100098    0.000000     -100.000000     2.0     20360.635742         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=655565/2048.[0m
[08/17 17:02:36]  --------------------------------------------------------------------------------
[08/17 17:02:36]  Iteration: 176 (0 solution, 175 counterexamples)
[08/17 17:03:18]  Generator returned sat in 36.118042 secs.
[08/17 17:03:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 17:03:20]  Improved gap from 0.000625 to 15.625
[08/17 17:03:20]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/17 17:03:20]  Verifer returned sat in 1.506453 secs.
[08/17 17:03:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19466.135742   19259.035645  1058.703857  19466.135742  207.100098  19259.035645        0.0  207.100098      207.100098     3.0     19259.035645            -1             -1
1   19466.135742   19259.035889  1058.703857  19466.135742  206.999756  19259.035889        0.0  207.099854      107.100098     2.0     19466.135742         False          False
2   19658.936035   19359.035645  1058.703857  19658.936035  399.900146  19359.035645        0.0  299.900391      199.900391     3.0     19466.135742         False          False
3   19766.035645   19466.235596  1058.703857  19766.035645  407.000000  19466.235596        0.0  299.800049      207.000000     2.0     19466.135742         False          False
4   19766.035645   19659.035645  1058.703857  19766.035645  205.000000  19659.035645        0.0  107.000000      107.000000     2.0     19466.135742         False          False
5   19766.035645   19739.710693  1058.703857  19766.035645  104.000000  19739.710693        0.0   26.324951        7.000000     3.0     19466.135742         False          False
6   19793.210693   19766.135742  1124.528809  19793.210693   53.500000  19766.135742        0.0   27.074951        0.000000     1.0     19466.135742         False          False
7   19794.385742   19793.310791  1208.803711  19794.385742   28.250000  19793.310791        0.0    1.074951      -14.550049     1.0     19466.135742         False          False
8   19808.935791   19808.935791  1208.803711  19808.935791   15.625000  19808.935791        0.0    0.000000     -100.000000     1.0     19466.135742         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=424141/2048.[0m
[08/17 17:03:20]  --------------------------------------------------------------------------------
[08/17 17:03:20]  Iteration: 177 (0 solution, 176 counterexamples)
[08/17 17:04:11]  Generator returned sat in 45.248273 secs.
[08/17 17:04:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:04:13]  Improved gap from 0.0499267578125 to 100
[08/17 17:04:13]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/17 17:04:13]  Verifer returned sat in 1.254455 secs.
[08/17 17:04:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19566.085449   19066.085449  1151.653809  19566.085449    0.099854  19066.085449        0.0  500.000000      400.000000     9.0     19066.085449            -1             -1
1   19566.085449   19166.085449  1151.653809  19566.085449    0.099854  19166.085449        0.0  400.000000      300.000000     2.0     19066.085449         False           True
2   19566.085449   19266.085449  1151.653809  19566.085449    0.050049  19266.085449        0.0  300.000000      200.000000     3.0     19566.085449         False          False
3   19766.035645   19378.535645  1151.653809  19766.035645  499.950195  19378.535645        0.0  387.500000      299.950195     4.0     19566.085449         False           True
4   19782.735840   19566.085449  1151.653809  19782.735840  404.200195  19566.085449        0.0  216.650391      216.650391     5.0     19566.085449         False           True
5   19966.185547   19566.135742  1151.653809  19966.185547  400.100098  19566.135742        0.0  400.049805      300.100098     3.0     19566.085449         False           True
6   19966.185547   19766.085449  1151.653809  19966.185547  348.075195  19766.085449        0.0  200.100098      200.100098     3.0     19966.185547          True           True
7   20131.897949   19866.085449  1151.653809  20131.897949  365.812500  19866.085449        0.0  265.812500      265.812500     3.0     19966.185547         False           True
8   20196.991699   19966.085449  1151.653809  20196.991699  330.906250  19966.085449        0.0  230.906250      230.906250     4.0     19966.185547         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=400.[0m
[08/17 17:04:14]  --------------------------------------------------------------------------------
[08/17 17:04:14]  Iteration: 178 (0 solution, 177 counterexamples)
[08/17 17:04:58]  Generator returned sat in 39.328851 secs.
[08/17 17:04:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 17:04:59]  Improved gap from 0.0 to 48.4375
[08/17 17:05:00]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 17:05:00]  Verifer returned sat in 0.852460 secs.
[08/17 17:05:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19315.603027   19215.681152  1053.122314  19315.603027   99.921875  19215.681152   0.000000   99.921875       99.921631     1.0     19215.681152            -1             -1
1   19315.603027   19215.689209  1053.200684  19315.603027   99.913818  19215.689209   0.000000   99.913818        0.000000     2.0     19315.603027         False          False
2   19515.595215   19409.509277  1053.200684  19515.595215  299.906006  19409.509277   0.007812  106.078125       99.984375     1.0     19315.603027         False           True
3   19615.595215   19515.587402  1053.200684  19615.595215  206.078125  19515.587402   0.007812  100.000000       99.984375     2.0     19615.587402         False          False
4   19664.048340   19615.595215  1053.200684  19664.048340  148.453125  19615.595215   0.007812   48.445312       48.437500     1.0     19615.587402         False           True
5   19664.048340   19615.603027  1104.763184  19664.048340    2.000000  19615.603027   0.007812   48.437500        0.000000     2.0     19615.587402         False          False
6   19717.157715   19664.040527  1151.653809  19717.157715  101.546875  19664.040527   0.007812   53.109375        0.000000     3.0     19717.149902          True           True
7   19736.774902   19717.149902  1203.216309  19736.774902   72.726562  19717.149902   0.007812   19.617188      -28.820312     2.0     19717.149902         False           True
8   19766.435059   19765.587646  1254.778564  19766.435059   49.277344  19765.587646   0.007812    0.839600      -47.597900     1.0     19717.149902         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=6399/64.[0m
[08/17 17:05:00]  --------------------------------------------------------------------------------
[08/17 17:05:00]  Iteration: 179 (0 solution, 178 counterexamples)
[08/17 17:06:23]  Generator returned sat in 76.817921 secs.
[08/17 17:06:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 17:06:25]  Improved gap from 0.0 to 17.1875
[08/17 17:06:25]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 17:06:25]  Verifer returned sat in 2.094954 secs.
[08/17 17:06:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18812.354004   18812.353760  1054.181152  18812.354004   17.187256  18812.353760        0.0    0.000244        0.000244     4.0     18812.353760            -1             -1
1   18829.441406   18812.353760  1136.993652  18829.441406   17.087646  18812.353760        0.0   17.087646       -0.099854     4.0     18829.441406         False          False
2   18829.641357   18829.541260  1136.993652  18829.641357   17.287598  18829.541260        0.0    0.100098      -99.899902     1.0     18829.441406         False          False
3   19255.541260   18929.541504  1136.993652  19255.541260  426.000000  18929.541504        0.0  325.999756      226.000000     1.0     18829.441406         False          False
4   19255.541260   19129.541260  1136.993652  19255.541260  215.000000  19129.541260        0.0  126.000000      126.000000     2.0     18829.441406         False          False
5   19255.541260   19198.691162  1136.993652  19255.541260  109.500000  19198.691162        0.0   56.850098       26.000000     3.0     18829.441406         False          False
6   19255.541260   19245.066162  1204.281250  19255.541260   56.750000  19245.066162        0.0   10.475098       -6.712402     4.0     18829.441406         False          False
7   19275.441162   19262.253906  1287.093506  19275.441162   30.375000  19262.253906        0.0   13.187256       -4.000244     1.0     18829.441406         False          False
8   19279.441406   19279.441406  1287.093750  19279.441406   17.187500  19279.441406        0.0    0.000000      -99.999756     1.0     18829.441406         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=926105/4096.[0m
[08/17 17:06:26]  --------------------------------------------------------------------------------
[08/17 17:06:26]  Iteration: 180 (0 solution, 179 counterexamples)
[08/17 17:06:55]  Generator returned sat in 23.973433 secs.
[08/17 17:06:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 17:06:57]  Improved gap from 0.0005 to 23.4375
[08/17 17:06:57]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/17 17:06:57]  Verifer returned sat in 0.867630 secs.
[08/17 17:06:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18882.668701   18782.658691   983.875977  18882.668701    0.002500  18782.658691        0.0  100.010010        0.010010     7.0     18782.658691            -1             -1
1   18906.106201   18882.668701  1060.428467  18906.106201  123.447510  18882.668701        0.0   23.437500        0.000000     7.0     18782.658691         False           True
2   19006.113770   19004.547607  1060.428467  19006.113770  123.445068  19004.547607        0.0    1.566162        0.007568     1.0     19006.113770          True           True
3   19006.113770   19006.106201  1136.990967  19006.113770    1.563965  19006.106201        0.0    0.007568      -23.429932     2.0     19006.113770         False          False
4   19227.553711   19129.541016  1136.990967  19227.553711  221.447510  19129.541016       98.0    0.012695        0.010010     1.0     19006.113770         False           True
5   19227.553711   19129.543701  1213.553467  19227.553711    0.010000  19129.543701       98.0    0.010010      -23.427490     2.0     19006.113770         False          False
6   19350.539795   19152.981201  1213.994873  19350.539795  122.996094  19152.981201       98.0   99.558594        0.000000     1.0     19252.539795          True           True
7   19375.977295   19252.542480  1286.996094  19375.977295  124.996094  19252.542480       98.0   25.434814       -1.561279     1.0     19252.539795         False          False
8   19477.538574   19279.538818  1286.996094  19477.538574  126.996094  19279.538818       98.0   99.999756        0.000000     1.0     19252.539795         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=41/4096.[0m
[08/17 17:06:57]  --------------------------------------------------------------------------------
[08/17 17:06:57]  Iteration: 181 (0 solution, 180 counterexamples)
[08/17 17:07:28]  Generator returned sat in 24.685611 secs.
[08/17 17:07:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 17:07:30]  Improved gap from 0.0003125 to 26.5625
[08/17 17:07:30]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/17 17:07:30]  Verifer returned sat in 2.064073 secs.
[08/17 17:07:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19311.167725   19311.167236   983.875977  19311.167725  41.125000  19311.167236        0.0   0.000488        0.000244     9.0     19311.167236            -1             -1
1   19352.290283   19311.167480  1042.752197  19352.290283  41.123047  19311.167480        0.0  41.122803       -0.000977     2.0     19352.290283         False           True
2   19380.854248   19352.291260  1114.189209  19380.854248  69.686768  19352.291260        0.0  28.562988        0.000000     1.0     19352.290283         False           True
3   19421.978027   19380.854248  1173.064941  19421.978027  69.686768  19380.854248        0.0  41.123779       -0.000488     2.0     19352.290283         False          False
4   19448.541260   19421.978516  1246.502197  19448.541260  67.687012  19421.978516        0.0  26.562744        0.000000     1.0     19448.541260          True           True
5   19457.822021   19448.541260  1301.375977  19457.822021  35.843506  19448.541260        0.0   9.280762      -35.845459     2.0     19448.541260         False          False
6   19542.791260   19493.667480  1352.252197  19542.791260  94.250000  19493.667480        0.0  49.123779        0.000000     1.0     19448.541260         False           True
7   19542.792480   19542.791748  1425.689209  19542.792480  49.125000  19542.791748        0.0   0.000732      -26.561768     1.0     19448.541260         False          False
8   19569.354248   19569.354248  1425.689209  19569.354248  26.562500  19569.354248        0.0   0.000000     -100.000000     1.0     19448.541260         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=3/2048.[0m
[08/17 17:07:31]  --------------------------------------------------------------------------------
[08/17 17:07:31]  Iteration: 182 (0 solution, 181 counterexamples)
[08/17 17:07:53]  Generator returned sat in 16.693973 secs.
[08/17 17:07:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 17:07:54]  Improved gap from 0.0 to 23.4375
[08/17 17:07:55]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:07:55]  Verifer returned sat in 0.997196 secs.
[08/17 17:07:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19034.986084   18908.431152  1286.612305  19034.986084    0.001465  18908.431152    0.000000  126.554932       26.554932     1.0     18908.431152            -1             -1
1   19134.987549   19034.987549  1286.612305  19134.987549  226.556396  19034.987549    0.001465   99.998535       26.554932     1.0     18908.431152         False          False
2   19208.435059   19208.431152  1286.612305  19208.435059  173.446045  19208.431152    0.001465    0.002441        0.002441     1.0     19208.433594         False          False
3   19208.435059   19208.433594  1363.172119  19208.435059    0.001221  19208.433594    0.001465    0.000000      -23.437744     2.0     19208.433594         False          False
4   19507.437500   19331.871094  1363.172119  19507.437500  299.002441  19331.871094  149.011230   26.555176       26.554932     1.0     19208.433594         False           True
5   19507.437500   19331.872559  1436.617188  19507.437500    0.010000  19331.872559  149.011230   26.553711        0.000000     2.0     19208.433594         False          False
6   19603.325195   19358.427490  1437.614746  19603.325195  122.441406  19358.427490  149.011230   95.886475       -3.114746     1.0     19454.313965          True           True
7   19630.880127   19457.428711  1513.173340  19630.880127  123.441406  19457.428711  149.011230   24.440186       -0.001221     1.0     19454.313965         False          False
8   19730.881348   19481.870117  1513.173340  19730.881348  124.441406  19481.870117  149.011230  100.000000        0.000000     1.0     19454.313965         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=108769/4096.[0m
[08/17 17:07:55]  --------------------------------------------------------------------------------
[08/17 17:07:55]  Iteration: 183 (0 solution, 182 counterexamples)
[08/17 17:08:37]  Generator returned sat in 36.283976 secs.
[08/17 17:08:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:08:39]  Improved gap from 0.0 to 48.4375
[08/17 17:08:40]  Improved number of small numbers from 61 to 76 out of a max of 114
[08/17 17:08:40]  Verifer returned sat in 2.185908 secs.
[08/17 17:08:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19238.331055   19038.381104  1335.902246  19238.331055    0.050049  19038.381104        0.0  199.949951      199.949902     2.0     19038.381104            -1             -1
1   19238.331055   19038.381152  1335.902246  19238.331055  199.900000  19038.381152        0.0  199.949902       99.949902     2.0     19038.381104         False          False
2   19486.818652   19238.381152  1335.902246  19486.818652  448.437500  19238.381152        0.0  248.437500      248.437500     1.0     19038.381104         False          False
3   19486.818652   19285.218652  1335.902246  19486.818652  100.900000  19285.218652        0.0  201.600000      148.437500     2.0     19486.818652         False          False
4   19486.818652   19438.331055  1335.902246  19486.818652   49.950000  19438.331055        0.0   48.487598       48.437500     3.0     19486.818652         False          False
5   19486.818652   19438.381152  1387.464746  19486.818652   24.475000  19438.381152        0.0   48.437500        0.000000     4.0     19486.818652         False          False
6   19538.381152   19486.818652  1435.902246  19538.381152  100.000000  19486.818652        0.0   51.562500        0.000000     5.0     19486.818652         False           True
7   19587.618652   19538.381152  1486.664551  19587.618652  100.800000  19538.381152        0.0   49.237500       -0.000195     2.0     19486.818652         False           True
8   19588.281152   19588.281006  1486.664551  19588.281152   49.900000  19588.281006        0.0    0.000146      -99.337695     1.0     19486.818652         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=254451/1024.[0m
[08/17 17:08:41]  --------------------------------------------------------------------------------
[08/17 17:08:41]  Iteration: 184 (0 solution, 183 counterexamples)
[08/17 17:09:06]  Generator returned sat in 19.767212 secs.
[08/17 17:09:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:09:08]  Improved gap from 0.00125 to 42.1875
[08/17 17:09:08]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 17:09:08]  Verifer returned sat in 1.870276 secs.
[08/17 17:09:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18276.433594   18076.433838  1332.439697  18276.433594    0.100098  18076.433838        0.0  199.999756       99.999756     2.0     18076.433838            -1             -1
1   18276.433594   18234.246338  1332.439697  18276.433594  199.900000  18234.246338        0.0   42.187256       -0.000244     2.0     18076.433838         False          False
2   18434.046143   18376.433838  1332.439697  18434.046143  199.799805  18376.433838        0.0   57.612305       57.612305     1.0     18434.046143         False          False
3   18636.733643   18465.983643  1332.439697  18636.733643  260.299805  18465.983643        0.0  170.750000      160.299805     1.0     18434.046143         False          False
4   18636.733643   18572.308838  1332.439697  18636.733643  129.649902  18572.308838        0.0   64.424805       60.299805     2.0     18434.046143         False          False
5   18636.733643   18576.433838  1372.139893  18636.733643   64.324951  18576.433838        0.0   60.299805        0.000000     3.0     18434.046143         False          False
6   18676.433838   18636.733643  1428.852295  18676.433838  100.000000  18636.733643        0.0   39.700195       -3.587402     4.0     18676.433838          True           True
7   18722.108643   18680.021240  1486.664795  18722.108643   85.375000  18680.021240        0.0   42.087402       -0.100098     1.0     18676.433838         False           True
8   18722.208740   18722.208740  1486.664795  18722.208740   42.187500  18722.208740        0.0    0.000000     -100.000000     1.0     18676.433838         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=656999/4096.[0m
[08/17 17:09:09]  --------------------------------------------------------------------------------
[08/17 17:09:09]  Iteration: 185 (0 solution, 184 counterexamples)
[08/17 17:09:40]  Generator returned sat in 25.188493 secs.
[08/17 17:09:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:09:41]  Improved gap from 0.0 to 48.4375
[08/17 17:09:41]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/17 17:09:41]  Verifer returned sat in 1.076809 secs.
[08/17 17:09:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18474.333740   18425.896240  1180.999756  18474.333740    0.012500  18425.896240        0.0   48.437500       48.437500     1.0     18425.896240            -1             -1
1   18474.333740   18425.896240  1232.562012  18474.333740   48.424805  18425.896240        0.0   48.437500       -0.000244     1.0     18425.896240         False          False
2   18824.408691   18574.333984  1232.562012  18824.408691  398.512451  18574.333984        0.0  250.074707      250.074707     1.0     18425.896240         False          False
3   18824.408691   18625.608887  1232.562012  18824.408691  203.299805  18625.608887        0.0  198.799805      150.074707     2.0     18824.408691         False          False
4   18824.408691   18774.321289  1232.562012  18824.408691  101.149902  18774.321289        0.0   50.087402       50.074707     3.0     18824.408691         False          False
5   18824.408691   18774.333984  1282.487305  18824.408691   50.074951  18774.333984        0.0   50.074707        0.000000     4.0     18824.408691         False          False
6   18874.833984   18824.408691  1332.062012  18874.833984  100.500000  18824.408691        0.0   50.425293        0.000000     5.0     18824.408691         False           True
7   18924.308594   18874.846191  1382.587402  18924.308594   99.899902  18874.846191        0.0   49.462402        0.000000     1.0     18824.408691         False           True
8   18924.308594   18924.308594  1434.149902  18924.308594   49.449951  18924.308594        0.0    0.000000      -48.437500     2.0     18824.408691         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1024359/4096.[0m
[08/17 17:09:42]  --------------------------------------------------------------------------------
[08/17 17:09:42]  Iteration: 186 (0 solution, 185 counterexamples)
[08/17 17:10:08]  Generator returned sat in 19.766454 secs.
[08/17 17:10:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:10:09]  Improved gap from 48.437744140625 to 48.4375
[08/17 17:10:09]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/17 17:10:09]  Verifer returned sat in 1.372094 secs.
[08/17 17:10:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18921.604818   18721.604980  1232.562012  18921.604818  200.049805  18721.604980   0.000000  199.999837      199.949788     2.0     18721.604980            -1             -1
1   18921.604980   18721.655029  1232.562012  18921.604980  200.000000  18721.655029   0.000000  199.949951       99.949951     2.0     18921.604980         False          False
2   19170.142334   18921.655029  1232.562012  19170.142334  448.487305  18921.655029   0.049805  248.437500      248.437500     1.0     18921.604980         False          False
3   19170.142334   18972.342529  1232.562012  19170.142334   97.875000  18972.342529   0.049805  197.750000      148.437500     2.0     19170.092529         False          False
4   19170.142334   19119.192139  1232.562012  19170.142334   48.437500  19119.192139   0.049805   50.900391       48.437500     3.0     19170.092529         False          False
5   19170.142334   19121.655029  1284.124512  19170.142334   23.718750  19121.655029   0.049805   48.437500        0.000000     4.0     19170.092529         False          False
6   19220.704834   19170.092529  1333.512207  19220.704834   99.000000  19170.092529   0.049805   50.562500       -0.049805     5.0     19170.092529         False           True
7   19268.017334   19220.704834  1385.074707  19268.017334   97.875000  19220.704834   0.049805   47.262695       -1.174805     1.0     19170.092529         False           True
8   19269.192139   19269.142334  1436.636963  19269.192139   48.437500  19269.142334   0.049805    0.000000      -48.437744     1.0     19170.092529         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=3975/16.[0m
[08/17 17:10:10]  --------------------------------------------------------------------------------
[08/17 17:10:10]  Iteration: 187 (0 solution, 186 counterexamples)
[08/17 17:10:53]  Generator returned sat in 37.453383 secs.
[08/17 17:10:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:10:55]  Improved gap from 0.0 to 42.1875
[08/17 17:10:56]  Improved number of small numbers from 74 to 92 out of a max of 114
[08/17 17:10:56]  Verifer returned sat in 2.112968 secs.
[08/17 17:10:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18809.192383   18741.942627  1212.274414  18809.192383   67.349854  18741.942627        0.0   67.249756       67.249756     2.0     18741.942627            -1             -1
1   18809.192383   18741.942627  1245.024512  18809.192383   67.249756  18741.942627        0.0   67.249756       -0.000146     2.0     18809.192383         False          False
2   19002.842529   18909.192529  1245.024512  19002.842529  260.899902  18909.192529        0.0   93.650000       93.650000     1.0     18809.192383         False          False
3   19170.092529   19002.942529  1245.024512  19170.092529  260.900000  19002.942529        0.0  167.150000      160.900000     1.0     18809.192383         False          False
4   19170.092529   19104.767334  1245.024512  19170.092529  130.450000  19104.767334        0.0   65.325195       60.900000     2.0     18809.192383         False          False
5   19170.092529   19109.192529  1284.124512  19170.092529   65.225000  19109.192529        0.0   60.900000        0.000000     3.0     18809.192383         False          False
6   19210.192529   19170.092529  1341.937012  19210.192529  101.000000  19170.092529        0.0   40.100000       -2.087500     4.0     19210.192529          True           True
7   19254.667529   19212.280029  1399.549512  19254.667529   84.575000  19212.280029        0.0   42.387500        0.000000     1.0     19210.192529         False           True
8   19254.667529   19254.667529  1457.361816  19254.667529   42.287500  19254.667529        0.0    0.000000      -42.187695     2.0     19210.192529         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=161.[0m
[08/17 17:10:57]  --------------------------------------------------------------------------------
[08/17 17:10:57]  Iteration: 188 (0 solution, 187 counterexamples)
[08/17 17:11:16]  Generator returned sat in 13.570526 secs.
[08/17 17:11:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:11:20]  Improved gap from 42.0373779296875 to 42.1875
[08/17 17:11:21]  Improved number of small numbers from 59 to 75 out of a max of 114
[08/17 17:11:21]  Verifer returned sat in 4.133915 secs.
[08/17 17:11:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17906.384277   17864.146729  1972.918701  17906.384277   42.287598  17864.146729       0.00   42.237549       42.187366     2.0     17864.146729            -1             -1
1   17906.384277   17864.196934  2030.731178  17906.384277   42.237500  17864.196934       0.00   42.187343       -0.000157     2.0     17906.384277         False          False
2   18164.370148   18006.384434  2030.731178  18164.370148  300.173214  18006.384434       0.05  157.935714      157.935714     1.0     17906.384277         False          False
3   18264.320148   18094.413005  2030.731178  18264.320148  257.885714  18094.413005       0.05  169.857143      157.885714     2.0     18264.270148         False          False
4   18264.320148   18199.748535  2030.731178  18264.320148  128.942857  18199.748535       0.05   64.521613       57.885714     2.0     18264.270148         False          False
5   18264.320148   18206.384434  2072.845464  18264.320148   64.471429  18206.384434       0.05   57.885714        0.000000     3.0     18264.270148         False          False
6   18306.934434   18264.270148  2130.230957  18306.934434  100.500000  18264.270148       0.05   42.614286       -0.000221     4.0     18264.270148         False           True
7   18349.748720   18306.934326  2187.416893  18349.748720   85.428571  18306.934326       0.05   42.764394        0.000000     1.0     18264.270148         False           True
8   18349.748720   18349.698720  2245.229248  18349.748720   42.714286  18349.698720       0.05    0.000000      -42.187645     2.0     18264.270148         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=22111/140.[0m
[08/17 17:11:22]  --------------------------------------------------------------------------------
[08/17 17:11:22]  Iteration: 189 (0 solution, 188 counterexamples)
[08/17 17:12:11]  Generator returned sat in 43.250658 secs.
[08/17 17:12:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:12:12]  Improved gap from 0.0 to 48.4375
[08/17 17:12:12]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/17 17:12:12]  Verifer returned sat in 0.717718 secs.
[08/17 17:12:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18141.271729   18092.934326  1936.063721  18141.271729  400.100000  18092.934326        0.0   48.337402       48.337402     2.0     18092.934326            -1             -1
1   18492.934326   18141.371826  1936.063721  18492.934326  400.000000  18141.371826        0.0  351.562500      300.000000     1.0     18492.934326         False          False
2   18541.371826   18286.409424  1936.063721  18541.371826  400.000000  18286.409424        0.0  254.962402      248.437500     2.0     18492.934326         False          False
3   18541.371826   18334.646729  1936.063721  18541.371826  254.962402  18334.646729        0.0  206.725098      148.437500     3.0     18541.371826         False          False
4   18541.371826   18492.834229  1936.063721  18541.371826    0.500000  18492.834229        0.0   48.537598       48.437500     4.0     18541.371826         False          False
5   18541.371826   18492.934326  1987.626221  18541.371826    0.500000  18492.934326        0.0   48.437500        0.000000     5.0     18541.371826         False          False
6   18594.196777   18541.371826  2034.801270  18594.196777  101.262451  18541.371826        0.0   52.824951        0.000000     5.0     18541.371826         False           True
7   18642.734375   18594.296631  2086.263672  18642.734375  101.362549  18594.296631        0.0   48.437744        0.000000     1.0     18541.371826         False           True
8   18642.734375   18642.734375  2137.826172  18642.734375    0.500000  18642.734375        0.0    0.000000      -48.437500     2.0     18541.371826         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=3001/10.[0m
[08/17 17:12:13]  --------------------------------------------------------------------------------
[08/17 17:12:13]  Iteration: 190 (0 solution, 189 counterexamples)
[08/17 17:12:39]  Generator returned sat in 20.958714 secs.
[08/17 17:12:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:12:41]  Improved gap from 0.0 to 23.4375
[08/17 17:12:41]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/17 17:12:41]  Verifer returned sat in 1.225105 secs.
[08/17 17:12:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18638.712402   18390.837402  1538.160645  18638.712402    0.049805  18390.837402        0.0  247.875000      147.875000     2.0     18390.837402            -1             -1
1   18638.712402   18490.837402  1538.160645  18638.712402    0.050049  18490.837402        0.0  147.875000       47.875000     2.0     18390.837402         False          False
2   18638.712402   18615.274658  1590.285645  18638.712402  147.874756  18615.274658        0.0   23.437744        0.000000     3.0     18390.837402         False          False
3   18638.712402   18638.712402  1666.848145  18638.712402    0.050000  18638.712402        0.0    0.000000      -23.437500     4.0     18638.712402         False          False
4   18885.587402   18761.599854  1666.848145  18885.587402  246.875000  18761.599854        0.0  123.987549      123.437500     1.0     18638.712402         False           True
5   18885.587402   18823.068604  1666.848145  18885.587402  123.937500  18823.068604        0.0   62.518799       23.437500     2.0     18638.712402         False          False
6   18885.587402   18862.149902  1743.410645  18885.587402   62.468750  18862.149902        0.0   23.437500        0.000000     3.0     18638.712402         False          False
7   18893.884277   18885.587402  1819.973145  18893.884277   31.734375  18885.587402        0.0    8.296875      -15.140625     4.0     18638.712402         False          False
8   19008.574951   18909.024902  1819.973145  19008.574951  122.987549  18909.024902        0.0   99.550049       -0.449951     1.0     19008.574951          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1183/8.[0m
[08/17 17:12:42]  --------------------------------------------------------------------------------
[08/17 17:12:42]  Iteration: 191 (0 solution, 190 counterexamples)
[08/17 17:14:00]  Generator returned sat in 72.498604 secs.
[08/17 17:14:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:14:01]  Improved gap from 0.0 to 29.6875
[08/17 17:14:02]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/17 17:14:02]  Verifer returned sat in 0.947258 secs.
[08/17 17:14:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18608.975098   18509.024658  1429.298096  18608.975098    0.049805  18509.024658        0.0  99.950439       99.950195     1.0     18509.024658            -1             -1
1   18638.662354   18606.768555  1429.298096  18638.662354  129.637695  18606.768555        0.0  31.893799       29.637451     2.0     18509.024658         False          False
2   18638.662354   18609.024902  1499.610596  18638.662354   31.843506  18609.024902        0.0  29.637451       -0.050049     2.0     18638.662354          True           True
3   18668.399902   18638.712402  1569.923096  18668.399902   59.375000  18638.712402        0.0  29.687500        0.000000     1.0     18638.662354         False           True
4   18668.399902   18668.399902  1640.235596  18668.399902    0.500000  18668.399902        0.0   0.000000      -29.687500     2.0     18638.662354         False          False
5   18729.031250   18699.343750  1709.291748  18729.031250   60.631348  18699.343750        0.0  29.687500        0.000000     1.0     18729.031250          True           True
6   18729.031250   18729.031250  1779.604248  18729.031250    0.500000  18729.031250        0.0   0.000000      -29.687500     2.0     18729.031250         False          False
7   18818.350098   18758.718750  1819.972900  18818.350098   89.318848  18758.718750        0.0  59.631348        0.000000     1.0     18729.031250         False           True
8   18818.350098   18818.350098  1819.973145  18818.350098    0.500000  18818.350098        0.0   0.000000      -99.999756     2.0     18729.031250         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=102349/1024.[0m
[08/17 17:14:02]  --------------------------------------------------------------------------------
[08/17 17:14:02]  Iteration: 192 (0 solution, 191 counterexamples)
[08/17 17:14:55]  Generator returned sat in 46.928826 secs.
[08/17 17:14:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 17:14:57]  Improved gap from 0.0 to 23.4375
[08/17 17:14:57]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:14:57]  Verifer returned sat in 1.514692 secs.
[08/17 17:14:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19231.012451   18983.637451   854.685547  19231.012451    0.100000  18983.637451        0.0  247.375000      147.375000     2.0     18983.637451            -1             -1
1   19231.012451   19183.537354   854.685547  19231.012451    0.200195  19183.537354        0.0   47.475098       47.375000     2.0     18983.637451         False          False
2   19231.012451   19183.637451   907.310547  19231.012451    0.100098  19183.637451        0.0   47.375000        0.000000     3.0     19231.012451         False          False
3   19254.449707   19231.012451   983.873047  19254.449707   70.812256  19231.012451        0.0   23.437256       -0.000244     4.0     19231.012451         False          False
4   19477.887451   19352.350098   983.873047  19477.887451  246.875000  19352.350098        0.0  125.537354      123.437500     1.0     19231.012451         False           True
5   19477.887451   19354.449951   983.873047  19477.887451  125.437500  19354.449951        0.0  123.437500       23.437500     2.0     19231.012451         False          False
6   19477.887451   19454.449951  1060.435547  19477.887451   64.718750  19454.449951        0.0   23.437500        0.000000     3.0     19231.012451         False          False
7   19488.809326   19477.887451  1136.072998  19488.809326   34.359375  19477.887451        0.0   10.921875      -13.440674     4.0     19231.012451         False          False
8   19602.924805   19502.250000  1136.072998  19602.924805  125.037354  19502.250000        0.0  100.674805        0.674805     1.0     19602.924805          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1179/8.[0m
[08/17 17:14:58]  --------------------------------------------------------------------------------
[08/17 17:14:58]  Iteration: 193 (0 solution, 192 counterexamples)
[08/17 17:15:33]  Generator returned sat in 29.316667 secs.
[08/17 17:15:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:15:36]  Improved gap from 0.0 to 42.1875
[08/17 17:15:37]  Improved number of small numbers from 85 to 87 out of a max of 114
[08/17 17:15:37]  Verifer returned sat in 3.257488 secs.
[08/17 17:15:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19493.900146   19465.799951  472.523047  19493.900146  265.200195  19465.799951       0.00   28.100195       28.100195     8.0     19465.799951            -1             -1
1   19730.949951   19493.949951  472.523047  19730.949951  265.150000  19493.949951       0.05  236.950000      165.100000     1.0     19730.899951         False           True
2   19759.149951   19665.799951  472.523047  19759.149951  265.150000  19665.799951       0.05   93.300000       93.300000     2.0     19730.899951         False          False
3   19930.949951   19759.149951  472.523047  19930.949951  265.100000  19759.149951       0.05  171.750000      165.100000     1.0     19930.899951         False          False
4   19930.949951   19865.324951  472.523047  19930.949951  132.050000  19865.324951       0.05   65.575000       65.100000     2.0     19930.899951         False          False
5   19930.949951   19865.799951  507.423047  19930.949951   65.525000  19865.799951       0.05   65.100000        0.000000     3.0     19930.899951         False          False
6   19964.349951   19930.899951  565.235547  19964.349951   98.500000  19930.899951       0.05   33.400000       -8.787500     4.0     19930.899951         False           True
7   20015.324951   19973.087451  623.048047  20015.324951   84.375000  19973.087451       0.05   42.187500        0.000000     1.0     19930.899951         False           True
8   20015.324951   20015.274951  623.048096  20015.324951   41.687500  20015.274951       0.05    0.000000      -99.999951     2.0     19930.899951         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1651/10.[0m
[08/17 17:15:38]  --------------------------------------------------------------------------------
[08/17 17:15:38]  Iteration: 194 (0 solution, 193 counterexamples)
[08/17 17:16:30]  Generator returned sat in 46.085125 secs.
[08/17 17:16:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:16:33]  Improved gap from 0.4583333333333333 to 42.1875
[08/17 17:16:34]  Improved number of small numbers from 60 to 92 out of a max of 114
[08/17 17:16:34]  Verifer returned sat in 3.970710 secs.
[08/17 17:16:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   19009.467285   18967.280029   970.993164  19009.467285   42.287354  18967.280029        0.0   42.187256       42.137451     6.0     18967.280029            -1             -1
1   19009.517578   18967.329834  1028.805420  19009.517578   42.237549  18967.329834        0.0   42.187744        0.000000     6.0     19009.517578         False           True
2   19201.817383   19109.517451  1028.805420  19201.817383  234.487549  19109.517451        0.0   92.299932       92.299805     1.0     19009.517578         False           True
3   19371.617451   19201.867451  1028.805420  19371.617451  262.100000  19201.867451        0.0  169.750000      162.099873     1.0     19009.517578         False          False
4   19371.617451   19306.092285  1028.805420  19371.617451  131.050000  19306.092285        0.0   65.525166       62.099873     2.0     19009.517578         False          False
5   19371.617451   19312.742451  1066.705547  19371.617451   65.525000  19312.742451        0.0   58.875000        0.000000     3.0     19009.517578         False          False
6   19413.854951   19371.617451  1124.468018  19413.854951  101.112500  19371.617451        0.0   42.237500       -0.000029     4.0     19413.854951          True           True
7   19455.992451   19413.854980  1182.280518  19455.992451   84.375000  19413.854980        0.0   42.137471       -0.050029     1.0     19413.854951         False           True
8   19456.042480   19456.042480  1182.280518  19456.042480   42.187500  19456.042480        0.0    0.000000     -100.000000     1.0     19413.854951         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=332083/2048.[0m
[08/17 17:16:35]  --------------------------------------------------------------------------------
[08/17 17:16:35]  Iteration: 195 (0 solution, 194 counterexamples)
[08/17 17:16:53]  Generator returned sat in 11.853293 secs.
[08/17 17:16:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:16:55]  Improved gap from 0.0 to 42.1875
[08/17 17:16:56]  Improved number of small numbers from 80 to 87 out of a max of 114
[08/17 17:16:56]  Verifer returned sat in 2.528228 secs.
[08/17 17:16:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18912.692627   18812.742432  1025.580322  18912.692627  200.050000  18812.742432        0.0   99.950195       -0.049805     7.0     18812.742432            -1             -1
1   19012.742188   18912.742432  1025.580322  19012.742188  199.999756  18912.742432        0.0   99.999756       -0.000244     1.0     19012.742188         False           True
2   19177.892334   19112.742432  1025.580322  19177.892334  265.149902  19112.742432        0.0   65.149902       65.149902     1.0     19012.742188         False          False
3   19377.842432   19208.092432  1025.580322  19377.842432  265.100000  19208.092432        0.0  169.750000      165.100000     1.0     19377.842432         False          False
4   19377.842432   19312.267334  1025.580322  19377.842432  132.050000  19312.267334        0.0   65.575098       65.100000     2.0     19377.842432         False          False
5   19377.842432   19312.742432  1060.480322  19377.842432   65.525000  19312.742432        0.0   65.100000        0.000000     3.0     19377.842432         False          False
6   19412.242432   19377.842432  1118.292822  19412.242432   99.500000  19377.842432        0.0   34.400000       -7.787500     4.0     19377.842432         False           True
7   19462.217432   19420.029932  1176.105322  19462.217432   84.375000  19420.029932        0.0   42.187500        0.000000     1.0     19377.842432         False           True
8   19462.217432   19462.217432  1233.917725  19462.217432   41.687500  19462.217432        0.0    0.000000      -42.187598     2.0     19377.842432         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=676455/4096.[0m
[08/17 17:16:57]  --------------------------------------------------------------------------------
[08/17 17:16:57]  Iteration: 196 (0 solution, 195 counterexamples)
[08/17 17:17:25]  Generator returned sat in 22.350490 secs.
[08/17 17:17:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:17:30]  Improved gap from 0.0 to 43.75
[08/17 17:17:31]  Improved number of small numbers from 92 to 110 out of a max of 114
[08/17 17:17:31]  Verifer returned sat in 5.458014 secs.
[08/17 17:17:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20179.792480   20133.992432  1217.920166  20179.792480    0.050000  20133.992432        0.0   45.800049       45.800049     2.0     20133.992432            -1             -1
1   20179.792480   20179.742432  1217.920166  20179.792480    0.050049  20179.742432        0.0    0.050049      -54.199951     2.0     20133.992432         False          False
2   20432.392578   20325.142432  1217.920166  20432.392578  252.650146  20325.142432        0.0  107.250146       98.400146     1.0     20133.992432         False          False
3   20577.742432   20432.442432  1217.920166  20577.742432  252.600000  20432.442432        0.0  145.300000      143.750000     1.0     20577.742432         False          False
4   20577.742432   20515.292236  1217.920166  20577.742432  125.800000  20515.292236        0.0   62.450195       43.750000     2.0     20577.742432         False          False
5   20577.742432   20533.992432  1274.170166  20577.742432   62.400000  20533.992432        0.0   43.750000        0.000000     3.0     20577.742432         False          False
6   20577.742432   20577.742432  1330.420166  20577.742432   30.700000  20577.742432        0.0    0.000000      -43.750000     4.0     20577.742432         False          False
7   20665.242432   20621.492432  1386.670166  20665.242432   87.500000  20621.492432        0.0   43.750000        0.000000     1.0     20577.742432         False           True
8   20665.242432   20665.242432  1386.670410  20665.242432   43.250000  20665.242432        0.0    0.000000      -99.999756     2.0     20577.742432         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=589005/4096.[0m
[08/17 17:17:32]  --------------------------------------------------------------------------------
[08/17 17:17:32]  Iteration: 197 (0 solution, 196 counterexamples)
[08/17 17:17:58]  Generator returned sat in 19.963356 secs.
[08/17 17:17:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:18:01]  Improved gap from 0.00125 to 100
[08/17 17:18:01]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:18:01]  Verifer returned sat in 3.057191 secs.
[08/17 17:18:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20479.608887   20083.725586  1172.353271  20479.608887  495.883301  20083.725586   0.000000  395.883301      300.049805     2.0     20083.725586            -1             -1
1   20579.559082   20181.442627  1172.353271  20579.559082  495.833496  20181.442627   0.000000  398.116455      300.000000     2.0     20579.559082         False          False
2   20679.659180   20279.559082  1172.353271  20679.659180  498.216553  20279.559082   0.050049  400.050049      300.050049     3.0     20579.559082         False          False
3   20778.342529   20379.559082  1172.353271  20778.342529  498.733398  20379.559082   0.050049  398.733398      298.733398     4.0     20579.559082         False          False
4   20778.392578   20579.559082  1172.353271  20778.392578  398.783447  20579.559082   0.050049  198.783447      198.783447     4.0     20579.559082         False           True
5   20979.559082   20678.609131  1172.353271  20979.559082  399.949951  20678.609131   0.050049  300.899902      299.949951     4.0     20579.559082         False           True
6   21079.659180   20778.292480  1172.353271  21079.659180  401.000000  20778.292480   0.050049  301.316650      300.050049     4.0     21079.609131          True           True
7   21179.709229   20779.559082  1172.353271  21179.709229  401.366699  20779.559082   0.100098  400.050049      300.050049     3.0     21079.609131         False           True
8   21179.709229   20979.559082  1172.353271  21179.709229    2.000000  20979.559082   0.100098  200.050049      200.050049     3.0     21079.609131         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1229005/4096.[0m
[08/17 17:18:02]  --------------------------------------------------------------------------------
[08/17 17:18:02]  Iteration: 198 (0 solution, 197 counterexamples)
[08/17 17:18:19]  Generator returned sat in 11.066036 secs.
[08/17 17:18:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:18:20]  Improved number of small numbers from 92 to 109 out of a max of 113
[08/17 17:18:20]  Verifer returned sat in 0.753771 secs.
[08/17 17:18:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20479.608887   20080.690186  1172.353271  20479.608887  498.881348  20080.690186   0.000000  398.918701      300.049805     2.0     20080.690186            -1             -1
1   20579.558838   20180.452637  1172.353271  20579.558838  498.868652  20180.452637   0.000000  399.106201      299.999756     2.0     20579.558838         False          False
2   20679.621582   20279.559082  1172.353271  20679.621582  499.168945  20279.559082   0.012451  400.050049      300.050049     3.0     20579.558838         False          False
3   20779.440430   20379.559082  1172.353271  20779.440430  499.868896  20379.559082   0.012451  399.868896      299.868896     4.0     20579.558838         False          False
4   20779.440430   20579.558838  1172.353271  20779.440430  399.868896  20579.558838   0.012451  199.869141      199.868896     4.0     20579.558838         False           True
5   20979.558838   20677.609131  1172.353271  20979.558838  399.987549  20677.609131   0.012451  301.937256      299.987305     4.0     20579.558838         False           True
6   21077.140381   20779.427816  1172.353271  21077.140381  399.518799  20779.427816   0.012451  297.700114      297.568848     4.0     21077.127930          True           True
7   21179.634033   20779.596680  1172.353271  21179.634033  400.193766  20779.596680   0.024902  400.012451      300.050049     3.0     21077.127930         False           True
8   21179.634033   20979.559082  1172.353271  21179.634033    2.000000  20979.559082   0.024902  200.050049      200.050049     3.0     21077.127930         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1229005/4096.[0m
[08/17 17:18:21]  --------------------------------------------------------------------------------
[08/17 17:18:21]  Iteration: 199 (0 solution, 198 counterexamples)
[08/17 17:18:41]  Generator returned sat in 13.371758 secs.
[08/17 17:18:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:18:45]  Improved gap from 0.0 to 100
[08/17 17:18:45]  Improved number of small numbers from 93 to 114 out of a max of 114
[08/17 17:18:45]  Verifer returned sat in 3.889657 secs.
[08/17 17:18:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20479.658936   20081.284180  1172.353271  20479.658936  498.375000  20081.284180   0.000000  398.374756      300.100098     7.0     20081.284180            -1             -1
1   20579.559082   20181.483887  1172.353271  20579.559082  498.274902  20181.483887   0.000000  398.075195      300.000244     3.0     20579.559082         False           True
2   20679.759033   20281.183838  1172.353271  20679.759033  498.275146  20281.183838   0.100098  398.475098      300.100098     3.0     20579.559082         False          False
3   20779.559082   20379.558838  1172.353271  20779.559082  498.275146  20379.558838   0.100098  399.900146      299.900146     4.0     20579.559082         False          False
4   20779.559082   20579.458984  1172.353271  20779.559082  399.274902  20579.458984   0.100098  200.000000      199.900146     4.0     20579.559082         False           True
5   20979.184082   20679.558838  1172.353271  20979.184082  399.625000  20679.558838   0.100098  299.525146      299.525146     4.0     20579.559082         False           True
6   21079.658936   20779.025635  1172.353271  21079.658936  400.000000  20779.025635   0.100098  300.533203      300.000000     4.0     20579.559082         False           True
7   21179.859131   20779.558838  1172.353271  21179.859131  400.733398  20779.558838   0.200195  400.100098      300.100098     3.0     21179.658936          True           True
8   21179.859131   20979.183838  1172.353271  21179.859131    2.000000  20979.183838   0.200195  200.475098      200.100098     3.0     21179.658936         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=614605/2048.[0m
[08/17 17:18:46]  --------------------------------------------------------------------------------
[08/17 17:18:46]  Iteration: 200 (0 solution, 199 counterexamples)
[08/17 17:20:11]  Generator returned sat in 78.719977 secs.
[08/17 17:20:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 17:20:13]  Improved gap from 0.0 to 15.625
[08/17 17:20:13]  Improved number of small numbers from 98 to 106 out of a max of 114
[08/17 17:20:13]  Verifer returned sat in 1.963978 secs.
[08/17 17:20:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20279.075439   20279.025635  1172.353271  20279.075439    0.050049  20279.025635        0.0    0.049805        0.049805     2.0     20279.025635            -1             -1
1   20279.125732   20279.025635  1172.353271  20279.125732    0.100098  20279.025635        0.0    0.100098      -99.899902     2.0     20279.025635         False          False
2   20379.075684   20379.025635  1172.353271  20379.075684  100.050049  20379.025635        0.0    0.050049      -99.949951     1.0     20279.025635         False          False
3   20778.975635   20577.050635  1172.353271  20778.975635  399.950000  20577.050635        0.0  201.925000      199.950000     1.0     20279.025635         False          False
4   20779.025635   20675.988037  1172.353271  20779.025635  201.975000  20675.988037        0.0  103.037598      100.000000     2.0     20279.025635         False          False
5   20779.025635   20679.025635  1172.353271  20779.025635  102.987500  20679.025635        0.0  100.000000        0.000000     3.0     20279.025635         False          False
6   20779.025635   20779.025635  1256.728271  20779.025635   53.493750  20779.025635        0.0    0.000000      -15.625000     3.0     20279.025635         False          False
7   20807.772510   20794.650635  1341.103271  20807.772510   28.746875  20794.650635        0.0   13.121875       -2.503125     1.0     20279.025635         False          False
8   20811.024072   20810.275635  1425.478027  20811.024072   16.373438  20810.275635        0.0    0.748437      -14.876807     1.0     20279.025635         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819199/4096.[0m
[08/17 17:20:14]  --------------------------------------------------------------------------------
[08/17 17:20:14]  Iteration: 201 (0 solution, 200 counterexamples)
[08/17 17:22:26]  Generator returned sat in 125.379210 secs.
[08/17 17:22:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 17:22:27]  Improved gap from 0.0 to 48.4375
[08/17 17:22:27]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/17 17:22:27]  Verifer returned sat in 0.886483 secs.
[08/17 17:22:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20368.045898   20368.044922  1134.855713  20368.045898    0.001465  20368.044922   0.000000   0.000977      -99.999023     1.0     20368.044922            -1             -1
1   20568.046143   20568.044922  1134.855713  20568.046143  200.001221  20568.044922   0.000000   0.001221        0.001221     1.0     20368.044922         False          False
2   20668.048584   20625.734863  1134.855713  20668.048584  100.003662  20625.734863   0.001221  42.312500        0.002441     1.0     20668.047363         False          False
3   20716.486084   20668.047363  1186.415771  20716.486084   90.750000  20668.047363   0.001221  48.437500        0.000000     2.0     20716.484863         False          False
4   20819.549805   20815.988770  1186.415771  20819.549805  151.501221  20815.988770   3.062500   0.498535        0.002441     1.0     20716.484863         False           True
5   20819.551270   20816.484863  1237.978271  20819.551270    0.500000  20816.484863   3.062500   0.003906      -48.433594     2.0     20716.484863         False          False
6   20916.422363   20864.922363  1289.540771  20916.422363   96.875000  20864.922363   3.062500  48.437500        0.000000     1.0     20913.359863          True           True
7   20916.422363   20913.359863  1341.103271  20916.422363    0.010000  20913.359863   3.062500   0.000000      -48.437500     2.0     20913.359863         False          False
8   20966.607910   20961.797363  1392.665771  20966.607910   50.185547  20961.797363   3.062500   1.748047      -46.689453     1.0     20913.359863         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=5/2048.[0m
[08/17 17:22:28]  --------------------------------------------------------------------------------
[08/17 17:22:28]  Iteration: 202 (0 solution, 201 counterexamples)
[08/17 17:23:02]  Generator returned sat in 28.108898 secs.
[08/17 17:23:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:23:04]  Improved gap from 0.0003662109375 to 48.4375
[08/17 17:23:04]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/17 17:23:04]  Verifer returned sat in 1.669433 secs.
[08/17 17:23:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20303.929199   20203.926758  1129.730713  20303.929199    0.001465  20203.926758        0.0  100.002441        0.002441     1.0     20203.926758            -1             -1
1   20403.927979   20401.927979  1129.730713  20403.927979  200.001221  20401.927979        0.0    2.000000        0.001221     1.0     20203.926758         False          False
2   20498.804199   20450.366699  1134.853271  20498.804199   96.876221  20450.366699        0.0   48.437500        0.000000     1.0     20498.804199         False          False
3   20547.241699   20498.804199  1186.415771  20547.241699   96.875000  20498.804199        0.0   48.437500        0.000000     2.0     20547.241699         False          False
4   20647.242920   20645.118164  1186.415771  20647.242920  148.438721  20645.118164        0.0    2.124756        0.001221     1.0     20547.241699         False           True
5   20647.242920   20647.241699  1237.978027  20647.242920    0.010000  20647.241699        0.0    0.001221      -48.436523     2.0     20547.241699         False          False
6   20746.679199   20698.241699  1286.978271  20746.679199   99.437500  20698.241699        0.0   48.437500        0.000000     1.0     20746.679199          True           True
7   20746.679199   20746.679199  1338.540771  20746.679199    0.010000  20746.679199        0.0    0.000000      -48.437500     2.0     20746.679199         False          False
8   20798.459717   20795.116943  1338.540771  20798.459717   51.780518  20795.116943        0.0    3.342773      -96.656982     1.0     20746.679199         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=11/4096.[0m
[08/17 17:23:05]  --------------------------------------------------------------------------------
[08/17 17:23:05]  Iteration: 203 (0 solution, 202 counterexamples)
[08/17 17:23:25]  Generator returned sat in 13.732666 secs.
[08/17 17:23:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 17:23:26]  Improved gap from 0.0 to 48.4375
[08/17 17:23:26]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/17 17:23:26]  Verifer returned sat in 0.955366 secs.
[08/17 17:23:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   20593.554199   20593.552734  740.104736  20593.554199    0.001221  20593.552734   0.000000   0.001465      -99.998535     5.0     20593.552734            -1             -1
1   20793.552734   20693.552979  740.104736  20793.552734  200.000000  20693.552979   0.000000  99.999756        0.000000     1.0     20593.552734         False           True
2   20898.671631   20849.353027  740.104736  20898.671631  205.118652  20849.353027   0.000000  49.318604        5.118896     1.0     20593.552734         False          False
3   20898.671631   20898.670410  786.549561  20898.671631    0.001465  20898.670410   0.000000   0.001221      -48.436279     2.0     20898.671631         False          False
4   21052.229248   21047.106934  786.549561  21052.229248  153.558838  21047.106934   0.001465   5.120850        5.119873     1.0     20898.671631         False           True
5   21052.229248   21047.107910  838.112061  21052.229248    0.010000  21047.107910   0.001465   5.119873      -43.317627     2.0     20898.671631         False          False
6   21146.986816   21098.547852  886.672119  21146.986816   99.877441  21098.547852   0.001465  48.437500        0.000000     1.0     21146.985352          True           True
7   21146.988037   21146.985352  938.234619  21146.988037   48.438721  21146.985352   0.001465   0.001221      -48.436279     2.0     21146.985352         False          False
8   21197.926025   21195.423096  989.796875  21197.926025   50.939209  21195.423096   0.001465   2.501465      -45.936035     1.0     21146.985352         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=20971/4096.[0m
[08/17 17:23:27]  --------------------------------------------------------------------------------
[08/17 17:23:27]  Iteration: 204 (0 solution, 203 counterexamples)
[08/17 17:24:14]  Generator returned sat in 40.467629 secs.
[08/17 17:24:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 17:24:17]  Improved gap from 0.00030517578125 to 25.0
[08/17 17:24:18]  Improved number of small numbers from 64 to 83 out of a max of 114
[08/17 17:24:18]  Verifer returned sat in 3.001619 secs.
[08/17 17:24:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22938.576416   22938.575352  711.549561  22938.576416    0.000732  22938.575352   0.000000   0.001064        0.001064     5.0     22938.575352            -1             -1
1   22938.576416   22938.575439  711.549561  22938.576416    0.000833  22938.575439   0.000000   0.000977      -99.998936     3.0     22938.575352         False           True
2   23138.583740   23136.578685  711.549561  23138.583740  200.008301  23136.578685   0.000000   2.005055        0.008389     1.0     22938.575352          True           True
3   23138.583740   23138.575352  786.549561  23138.583740    2.004395  23138.575352   0.000000   0.008389      -24.991611     2.0     23138.583740         False          False
4   23336.575352   23263.575352  786.549561  23336.575352  198.000000  23263.575352  72.990833   0.009167        0.009167     1.0     23138.583740         False           True
5   23336.576185   23263.576185  800.050049  23336.576185    0.010000  23263.576185  72.990833   0.009167      -86.489512     2.0     23138.583740         False          False
6   23461.564518   23350.074935  861.551025  23461.564518  124.997500  23350.074935  72.990833  38.498750       -0.000202     1.0     23388.573685          True           True
7   23486.564518   23388.574518  936.550293  23486.564518   63.498750  23388.574518  72.990833  24.999167       -0.000934     1.0     23388.573685         False          False
8   23494.314727   23413.574707  936.550293  23494.314727   32.749375  23413.574707  72.990833   7.749186      -92.250726     1.0     23388.573685         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=11/1200.[0m
[08/17 17:24:18]  --------------------------------------------------------------------------------
[08/17 17:24:18]  Iteration: 205 (0 solution, 204 counterexamples)
[08/17 17:24:37]  Generator returned sat in 12.497203 secs.
[08/17 17:24:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 17:24:39]  Improved gap from 0.000625 to 25.0
[08/17 17:24:40]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/17 17:24:40]  Verifer returned sat in 2.011776 secs.
[08/17 17:24:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23145.855225   23145.843018  711.549561  23145.855225  100.012451  23145.843018   0.000000   0.012207        0.009766     1.0     23145.843018            -1             -1
1   23245.852783   23245.845215  711.549561  23245.852783  100.009766  23245.845215   0.000000   0.007568        0.007324     1.0     23245.852783         False          False
2   23345.852783   23343.850342  711.549561  23345.852783  100.007568  23343.850342   0.000000   2.002441        0.007324     1.0     23345.852783         False          False
3   23370.845215   23345.845459  786.549561  23370.845215   26.994873  23345.845459   0.000000  24.999756       -0.000244     2.0     23370.845215         False          False
4   23543.847900   23470.843018  786.549561  23543.847900  198.002441  23470.843018  72.992432   0.012451        0.010010     1.0     23370.845215         False           True
5   23543.847900   23470.845459  861.549316  23543.847900    0.010000  23470.845459  72.992432   0.010010      -24.990234     2.0     23370.845215         False          False
6   23668.833008   23531.842773  861.554443  23668.833008  124.995117  23531.842773  72.992432  63.997803        0.000000     1.0     23595.840576          True           True
7   23668.833008   23595.840576  936.554443  23668.833008   63.997559  23595.840576  72.992432   0.000000      -25.000000     2.0     23595.840576         False          False
8   23791.830566   23620.840576  936.554688  23791.830566  122.997559  23620.840576  72.992432  97.997559       -2.002197     1.0     23595.840576         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=41/4096.[0m
[08/17 17:24:40]  --------------------------------------------------------------------------------
[08/17 17:24:40]  Iteration: 206 (0 solution, 205 counterexamples)
[08/17 17:25:05]  Generator returned sat in 18.274195 secs.
[08/17 17:25:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 17:25:08]  Improved gap from 0.05 to 25.0
[08/17 17:25:08]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/17 17:25:08]  Verifer returned sat in 2.385228 secs.
[08/17 17:25:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24705.181152   24643.781250  712.349365  24705.181152    0.049805  24643.781250   0.000000   61.399902       61.399902     1.0     24643.781250            -1             -1
1   24805.131104   24682.481201  712.349365  24805.131104  161.349854  24682.481201   0.000000  122.649902       61.349854     2.0     24643.781250         False          False
2   24843.831055   24843.731201  712.349365  24843.831055  161.349854  24843.731201   0.000000    0.099854        0.049805     1.0     24643.781250          True           True
3   24843.831055   24843.781250  786.549561  24843.831055    0.049805  24843.781250   0.000000    0.049805      -25.750000     2.0     24843.831055         False          False
4   25042.781250   24969.581055  786.549561  25042.781250  199.000000  24969.581055  11.800049   61.400146       61.400146     1.0     24843.831055         False           True
5   25042.781250   24969.631104  825.149414  25042.781250    0.500000  24969.631104  11.800049   61.350098        0.000000     2.0     24843.831055         False          False
6   25106.331055   25031.031006  861.599609  25106.331055  124.899902  25031.031006  11.800049   63.500000        0.000000     1.0     25094.531006          True           True
7   25106.331055   25094.531006  936.599365  25106.331055   63.449951  25094.531006  11.800049    0.000000      -25.000244     2.0     25094.531006         False          False
8   25230.281006   25119.531250  936.599609  25230.281006  123.949951  25119.531250  11.800049   98.949707       -1.050049     1.0     25094.531006         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=251495/4096.[0m
[08/17 17:25:09]  --------------------------------------------------------------------------------
[08/17 17:25:09]  Iteration: 207 (0 solution, 206 counterexamples)
[08/17 17:25:54]  Generator returned sat in 39.231967 secs.
[08/17 17:25:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:25:58]  Improved gap from 0.0 to 42.1875
[08/17 17:25:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 17:25:58]  Verifer returned sat in 2.977792 secs.
[08/17 17:25:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25059.978271   24805.478516   965.362061  25059.978271    0.050049  24805.478516        0.0  254.499756      154.500000     2.0     24805.478516            -1             -1
1   25059.978271   25005.478271   965.362061  25059.978271    0.050049  25005.478271        0.0   54.500000       54.500000     2.0     24805.478516         False          False
2   25105.528320   25105.478271   965.362061  25105.528320  100.050049  25105.478271        0.0    0.050049        0.050049     1.0     24805.478516         False          False
3   25359.928467   25188.178467   965.362061  25359.928467  254.450195  25188.178467        0.0  171.750000      154.450195     1.0     24805.478516         False          False
4   25359.928467   25296.265869   965.362061  25359.928467  127.225098  25296.265869        0.0   63.662598       54.450195     2.0     24805.478516         False          False
5   25359.928467   25305.478271  1010.911865  25359.928467   63.612549  25305.478271        0.0   54.450195        0.000000     3.0     24805.478516         False          False
6   25403.978271   25359.928467  1066.861816  25403.978271   98.500000  25359.928467        0.0   44.049805       -0.000244     4.0     25403.978271          True           True
7   25444.303467   25404.028564  1124.624268  25444.303467   84.375000  25404.028564        0.0   40.274902       -1.912598     1.0     25403.978271         False           True
8   25446.216064   25446.216064  1124.624512  25446.216064   42.187500  25446.216064        0.0    0.000000      -99.999756     1.0     25403.978271         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=309/2.[0m
[08/17 17:25:59]  --------------------------------------------------------------------------------
[08/17 17:25:59]  Iteration: 208 (0 solution, 207 counterexamples)
[08/17 17:26:37]  Generator returned sat in 32.387678 secs.
[08/17 17:26:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 17:26:39]  Improved gap from 0.0016666666666666668 to 48.4375
[08/17 17:26:39]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:26:39]  Verifer returned sat in 0.855170 secs.
[08/17 17:26:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25187.059570   25087.057373  683.782959  25187.059570  200.003662  25087.057373   0.000000  100.002197        0.002197     1.0     25087.057373            -1             -1
1   25287.061035   25287.057373  683.782959  25287.061035  200.003662  25287.057373   0.001221    0.002441        0.002441     1.0     25087.057373         False          False
2   25384.936035   25335.494873  685.905518  25384.936035   97.877441  25335.494873   0.001221   49.439941        0.000000     1.0     25384.934814         False          False
3   25433.373535   25384.934814  737.468018  25433.373535   97.877441  25384.934814   0.001221   48.437500        0.000000     2.0     25384.934814         False          False
4   25533.374756   25530.249512  737.468018  25533.374756  148.438721  25530.249512   0.001221    3.124023        0.001221     1.0     25384.934814         False           True
5   25533.374756   25533.372314  789.030518  25533.374756    0.010000  25533.372314   0.001221    0.001221      -48.436279     2.0     25384.934814         False          False
6   25631.812256   25581.809814  839.029297  25631.812256   98.438721  25581.809814   0.001221   50.001221        0.000000     1.0     25631.811035          True           True
7   25631.812256   25631.811035  890.591797  25631.812256    0.010000  25631.811035   0.001221    0.000000      -48.437500     2.0     25631.811035         False          False
8   25682.093018   25680.248535  890.591797  25682.093018   50.280762  25680.248535   0.001221    1.843262      -98.156738     1.0     25631.811035         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=5/2048.[0m
[08/17 17:26:40]  --------------------------------------------------------------------------------
[08/17 17:26:40]  Iteration: 209 (0 solution, 208 counterexamples)
[08/17 17:27:00]  Generator returned sat in 14.077859 secs.
[08/17 17:27:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 17:27:01]  Improved gap from 47.93841552734375 to 48.4375
[08/17 17:27:02]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 17:27:02]  Verifer returned sat in 1.176841 secs.
[08/17 17:27:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25732.713379   25438.965820   801.609375  25732.713379    0.002686  25438.965820        0.0  293.747559      199.997314     1.0      25438.96582            -1             -1
1   25828.465820   25584.278076   801.609375  25828.465820  389.500000  25584.278076        0.0  244.187744      195.749756     2.0      25438.96582         False          False
2   25828.465820   25732.715820   801.609375  25828.465820   95.747500  25732.715820        0.0   95.750000       95.749756     2.0      25828.46582          True           True
3   25828.465820   25765.965820   805.859619  25828.465820   95.747314  25765.965820        0.0   62.500000        0.000000     3.0      25828.46582         False           True
4   25928.465820   25926.465820   805.859619  25928.465820  162.500000  25926.465820        0.0    2.000000        0.000000     1.0      25828.46582         False           True
5   25928.465820   25928.465820   857.422119  25928.465820    0.010000  25928.465820        0.0    0.000000      -48.437500     2.0      25828.46582         False          False
6   26025.340820   25976.903320   908.984619  26025.340820   96.875000  25976.903320        0.0   48.437500        0.000000     1.0      26025.34082          True           True
7   26025.340820   26025.340820   960.547119  26025.340820    0.010000  26025.340820        0.0    0.000000      -48.437500     2.0      26025.34082         False          False
8   26073.778320   26073.778320  1012.109375  26073.778320   48.437500  26073.778320        0.0    0.000000      -48.437744     1.0      26025.34082         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=409595/2048.[0m
[08/17 17:27:02]  --------------------------------------------------------------------------------
[08/17 17:27:02]  Iteration: 210 (0 solution, 209 counterexamples)
[08/17 17:27:26]  Generator returned sat in 16.558079 secs.
[08/17 17:27:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 17:27:27]  Improved gap from 47.4375 to 48.4375
[08/17 17:27:28]  Improved number of small numbers from 60 to 76 out of a max of 114
[08/17 17:27:28]  Verifer returned sat in 1.663488 secs.
[08/17 17:27:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26096.175049   25896.176416  338.149170  26096.175049  353.418701  25896.176416        0.0  199.998633       99.998779     1.0     25896.176416            -1             -1
1   26249.593916   26096.176270  338.149170  26249.593916  353.417500  26096.176270        0.0  153.417646      153.417646     1.0     26249.593916         False          False
2   26249.593916   26189.056416  338.149170  26249.593916    0.001465  26189.056416        0.0   60.537500       53.417646     2.0     26249.593916         False          False
3   26249.593916   26230.843082  338.149170  26249.593916    0.001250  26230.843082        0.0   18.750833      -46.582354     3.0     26249.593916         False           True
4   26396.176416   26396.175166  338.149170  26396.176416  165.333333  26396.175166        0.0    0.001250        0.000146     1.0     26249.593916         False           True
5   26396.185166   26396.176416  389.711426  26396.185166    0.010000  26396.176416        0.0    0.008750      -48.428848     2.0     26249.593916         False          False
6   26497.736416   26449.298828  436.589024  26497.736416  101.560000  26449.298828        0.0   48.437587        0.000000     1.0     26497.736416          True           True
7   26497.736416   26497.736416  488.151367  26497.736416    0.010000  26497.736416        0.0    0.000000      -48.437657     2.0     26497.736416         False          False
8   26546.517041   26546.174072  488.151611  26546.517041   48.780625  26546.174072        0.0    0.342968      -99.656788     1.0     26497.736416         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=628403/4096.[0m
[08/17 17:27:28]  --------------------------------------------------------------------------------
[08/17 17:27:28]  Iteration: 211 (0 solution, 210 counterexamples)
[08/17 17:28:49]  Generator returned sat in 73.845623 secs.
[08/17 17:28:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:28:51]  Improved gap from 0.0 to 42.1875
[08/17 17:28:52]  Improved number of small numbers from 60 to 87 out of a max of 114
[08/17 17:28:52]  Verifer returned sat in 2.201134 secs.
[08/17 17:28:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25693.648926   25493.698975  740.626670  25693.648926    0.049805  25493.698975        0.0  199.949951       99.950156     5.0     25493.698975            -1             -1
1   25693.748779   25693.698730  740.626670  25693.748779  200.049805  25693.698730        0.0    0.050049        0.050010     1.0     25493.698975         False           True
2   25884.798828   25793.698770  740.626670  25884.798828  191.100098  25793.698770        0.0   91.100059       91.100059     1.0     25884.798828         False          False
3   26055.598770   25884.848770  740.626670  26055.598770  261.900000  25884.848770        0.0  170.750000      161.900000     1.0     25884.798828         False          False
4   26055.598770   25990.073975  740.626670  26055.598770  130.950000  25990.073975        0.0   65.524795       61.900000     2.0     25884.798828         False          False
5   26055.598770   25993.698770  778.726670  26055.598770   65.475000  25993.698770        0.0   61.900000        0.000000     3.0     25884.798828         False          False
6   26092.698770   26055.598770  836.489258  26092.698770   99.000000  26055.598770        0.0   37.100000       -5.137412     4.0     26092.698770          True           True
7   26139.973770   26097.836182  894.301758  26139.973770   84.375000  26097.836182        0.0   42.137588       -0.049912     1.0     26092.698770         False           True
8   26140.023682   26140.023682  894.301758  26140.023682   42.187500  26140.023682        0.0    0.000000     -100.000000     1.0     26092.698770         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=663347/4096.[0m
[08/17 17:28:52]  --------------------------------------------------------------------------------
[08/17 17:28:52]  Iteration: 212 (0 solution, 211 counterexamples)
[08/17 17:29:42]  Generator returned sat in 42.983303 secs.
[08/17 17:29:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:29:44]  Improved gap from 0.0 to 48.4375
[08/17 17:29:45]  Improved number of small numbers from 60 to 67 out of a max of 114
[08/17 17:29:45]  Verifer returned sat in 2.180560 secs.
[08/17 17:29:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25810.352295   25710.350020  523.975420  25810.352295    0.001465  25710.350020    0.00000  100.002275        0.002275     1.0      25710.35002            -1             -1
1   25910.353770   25810.352520  523.975420  25910.353770  200.003750  25810.352520    0.00125  100.000000        0.002500     1.0      25710.35002         False          False
2   26006.233770   25952.565020  528.092920  26006.233770  195.880000  25952.565020    0.00125   53.667500        0.000000     1.0      26006.23252         False          False
3   26006.233770   26006.232520  579.655420  26006.233770   53.666260  26006.232520    0.00125    0.000000      -48.437500     2.0      26006.23252         False          False
4   26154.675020   26154.661270  579.655420  26154.675020  148.441250  26154.661270    0.00250    0.011250        0.002500     1.0      26006.23252         False           True
5   26154.675020   26154.670020  631.217773  26154.675020    0.010000  26154.670020    0.00250    0.002500      -48.435146     2.0      26006.23252         False          False
6   26256.225020   26207.785020  678.102920  26256.225020  101.552500  26207.785020    0.00250   48.437500        0.000000     1.0      26256.22252          True           True
7   26259.063770   26256.222520  729.665283  26259.063770   51.276250  26256.222520    0.00250    2.838750      -45.598887     2.0      26256.22252         False          False
8   26307.505645   26304.660156  729.665283  26307.505645   51.280625  26304.660156    0.00250    2.842988      -97.157012     1.0      26256.22252         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/400.[0m
[08/17 17:29:45]  --------------------------------------------------------------------------------
[08/17 17:29:45]  Iteration: 213 (0 solution, 212 counterexamples)
[08/17 17:31:21]  Generator returned sat in 88.799670 secs.
[08/17 17:31:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:31:24]  Improved gap from 0.0 to 42.1875
[08/17 17:31:25]  Improved number of small numbers from 59 to 75 out of a max of 114
[08/17 17:31:25]  Verifer returned sat in 3.222549 secs.
[08/17 17:31:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25759.818359   25601.906006  570.952881  25759.818359    0.200000  25601.906006        0.0  157.912354       57.912467     2.0     25601.906006            -1             -1
1   25759.818359   25759.718353  570.952920  25759.818359    0.100098  25759.718353        0.0    0.100007      -42.087493     2.0     25759.818359         False          False
2   26056.422520   25901.905853  570.952920  26056.422520  296.704167  25901.905853        0.1  154.416667      154.416667     1.0     25759.818359         False          False
3   26156.322520   25980.480853  570.952920  26156.322520  254.316667  25980.480853        0.1  175.741667      154.316667     2.0     26156.222520         False          False
4   26156.322520   26093.293457  570.952920  26156.322520  126.658333  26093.293457        0.1   62.929063       54.316667     2.0     26156.222520         False          False
5   26156.322520   26101.905853  616.636253  26156.322520   62.829167  26101.905853        0.1   54.316667        0.000000     3.0     26156.222520         False          False
6   26201.005853   26156.222520  671.853027  26201.005853   99.000000  26156.222520        0.1   44.683333       -0.099893     4.0     26156.222520         False           True
7   26243.193353   26201.005853  729.665420  26243.193353   86.870833  26201.005853        0.1   42.087500       -0.100000     1.0     26156.222520         False           True
8   26244.041270   26243.193359  787.477783  26244.041270   42.935417  26243.193359        0.1    0.747910      -41.439720     1.0     26156.222520         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1853/12.[0m
[08/17 17:31:25]  --------------------------------------------------------------------------------
[08/17 17:31:25]  Iteration: 214 (0 solution, 213 counterexamples)
[08/17 17:32:10]  Generator returned sat in 37.951423 secs.
[08/17 17:32:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:32:17]  Improved gap from 0.0249755859375 to 43.75
[08/17 17:32:17]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 17:32:17]  Verifer returned sat in 6.768954 secs.
[08/17 17:32:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24675.688232   24431.638184  517.086426  24675.688232    0.100000  24431.638184        0.0  244.050049      144.050049     2.0     24431.638184            -1             -1
1   24675.688232   24531.638428  517.086426  24675.688232  243.950195  24531.638428        0.0  144.049805       44.050049     2.0     24431.638184         False          False
2   24775.488525   24731.638184  517.086426  24775.488525  243.850098  24731.638184        0.0   43.850342       43.850342     1.0     24775.488525         False          False
3   24975.388184   24829.981934  517.086426  24975.388184  243.750000  24829.981934        0.0  145.406250      143.750000     1.0     24975.388184         False          False
4   24975.388184   24912.988281  517.086426  24975.388184  121.375000  24912.988281        0.0   62.399902       43.750000     2.0     24975.388184         False          False
5   24975.388184   24931.638184  573.336426  24975.388184   60.187500  24931.638184        0.0   43.750000        0.000000     3.0     24975.388184         False          False
6   24975.388184   24975.388184  629.586426  24975.388184   29.593750  24975.388184        0.0    0.000000      -43.750000     4.0     24975.388184         False          False
7   25062.888184   25019.138184  685.836426  25062.888184   87.500000  25019.138184        0.0   43.750000        0.000000     1.0     24975.388184         False           True
8   25062.888184   25062.888184  685.836426  25062.888184   43.250000  25062.888184        0.0    0.000000     -100.000000     2.0     24975.388184         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=590029/4096.[0m
[08/17 17:32:18]  --------------------------------------------------------------------------------
[08/17 17:32:18]  Iteration: 215 (0 solution, 214 counterexamples)
[08/17 17:33:13]  Generator returned sat in 47.729523 secs.
[08/17 17:33:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:33:20]  Improved gap from 42.76794934953962 to 43.75
[08/17 17:33:20]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:33:20]  Verifer returned sat in 6.967768 secs.
[08/17 17:33:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25156.171387   25005.079102  -56.354492  25156.171387    0.100098  25005.079102        0.0  151.092285       51.092285     6.0     25005.079102            -1             -1
1   25253.977051   25156.180908  -56.354492  25253.977051  248.897949  25156.180908        0.0   97.796143       48.897949     1.0     25005.079102         False           True
2   25405.069580   25304.954102  -56.354492  25405.069580  248.888672  25304.954102        0.0  100.115479       99.990479     1.0     25405.069580         False          False
3   25553.842773   25405.078857  -56.354492  25553.842773  248.888672  25405.078857        0.0  148.763916      148.763672     1.0     25405.069580         False          False
4   25553.842773   25492.361084  -56.354492  25553.842773  123.944336  25492.361084        0.0   61.481689       48.763672     2.0     25405.069580         False          False
5   25553.842773   25505.079102   -5.118164  25553.842773   61.472168  25505.079102        0.0   48.763672        0.000000     3.0     25405.069580         False          False
6   25553.842773   25553.842773   50.122559  25553.842773   30.236084  25553.842773        0.0    0.000000      -44.759277     4.0     25405.069580         False          False
7   25642.342773   25598.602051  106.372559  25642.342773   88.500000  25598.602051        0.0   43.740723       -0.009277     1.0     25642.342773          True           True
8   25642.352051   25642.352051  106.372559  25642.352051   43.750000  25642.352051        0.0    0.000000     -100.000000     1.0     25642.342773         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=609375/4096.[0m
[08/17 17:33:21]  --------------------------------------------------------------------------------
[08/17 17:33:21]  Iteration: 216 (0 solution, 215 counterexamples)
[08/17 17:33:58]  Generator returned sat in 30.590099 secs.
[08/17 17:33:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:34:06]  Improved gap from 43.75 to 43.75
[08/17 17:34:06]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 17:34:06]  Verifer returned sat in 7.249352 secs.
[08/17 17:34:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25021.656006   24821.656006  -62.377441  25021.656006  200.050049  24821.656006        0.0  200.000000      100.000000     7.0     24821.656006            -1             -1
1   25021.656006   24973.149902  -62.377441  25021.656006  199.999756  24973.149902        0.0   48.506104        0.000000     3.0     25021.656006         False           True
2   25216.949951   25121.656006  -62.377441  25216.949951  243.800049  25121.656006        0.0   95.293945       95.293945     1.0     25021.656006         False          False
3   25365.406006   25216.999756  -62.377441  25365.406006  243.750000  25216.999756        0.0  148.406250      143.750000     1.0     25365.406006         False          False
4   25365.406006   25302.956299  -62.377441  25365.406006  121.375000  25302.956299        0.0   62.449707       43.750000     2.0     25365.406006         False          False
5   25365.406006   25321.656006   -6.127441  25365.406006   60.187500  25321.656006        0.0   43.750000        0.000000     3.0     25365.406006         False          False
6   25365.406006   25365.406006   50.122559  25365.406006   29.593750  25365.406006        0.0    0.000000      -43.750000     4.0     25365.406006         False          False
7   25452.906006   25409.156006  106.372559  25452.906006   87.500000  25409.156006        0.0   43.750000        0.000000     1.0     25365.406006         False           True
8   25452.906006   25452.906006  106.372559  25452.906006   43.250000  25452.906006        0.0    0.000000     -100.000000     2.0     25365.406006         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=589005/4096.[0m
[08/17 17:34:07]  --------------------------------------------------------------------------------
[08/17 17:34:07]  Iteration: 217 (0 solution, 216 counterexamples)
[08/17 17:34:57]  Generator returned sat in 43.784122 secs.
[08/17 17:34:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 17:34:58]  Improved gap from 0.00125 to 48.4375
[08/17 17:34:59]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/17 17:34:59]  Verifer returned sat in 0.827414 secs.
[08/17 17:34:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25468.522461   24968.523682 -62.377441  25468.522461    0.001465  24968.523682        0.0  499.998779      399.998779     9.0     24968.523682            -1             -1
1   25468.522461   25168.523438 -62.377441  25468.522461    0.002686  25168.523438        0.0  299.999023      299.998779     9.0     24968.523682         False           True
2   25468.522461   25265.404541 -62.377441  25468.522461    0.001221  25265.404541        0.0  203.117920      199.998779     4.0     25468.522461          True           True
3   25468.522461   25337.272705 -62.377441  25468.522461  203.117432  25337.272705        0.0  131.249756       99.998779     5.0     25468.522461         False           True
4   25521.647217   25468.523682 -62.377441  25521.647217  184.374512  25468.523682        0.0   53.123535       53.123535     1.0     25468.522461         False           True
5   25521.647217   25468.524658 -15.500977  25521.647217    0.010000  25468.524658        0.0   53.122559        0.000000     2.0     25468.522461         False          False
6   25570.084717   25521.647217  36.061523  25570.084717  101.560059  25521.647217        0.0   48.437500        0.000000     3.0     25570.084717          True           True
7   25613.834473   25570.084717  87.623779  25613.834473   92.187256  25570.084717        0.0   43.749756       -4.687988     2.0     25570.084717         False           True
8   25620.865234   25618.522461  87.623779  25620.865234   50.780518  25618.522461        0.0    2.342773      -97.657227     1.0     25570.084717         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1638395/4096.[0m
[08/17 17:34:59]  --------------------------------------------------------------------------------
[08/17 17:34:59]  Iteration: 218 (0 solution, 217 counterexamples)
[08/17 17:35:54]  Generator returned sat in 47.740243 secs.
[08/17 17:35:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:35:55]  Improved gap from 0.0 to 23.4375
[08/17 17:35:55]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/17 17:35:55]  Verifer returned sat in 0.826320 secs.
[08/17 17:35:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24544.279297   24220.741943   40.691650  24544.279297  323.487305  24220.741943        0.0  323.537354      299.949951     2.0     24220.741943            -1             -1
1   24544.279297   24344.329346   40.691650  24544.279297  323.487305  24344.329346        0.0  199.949951      199.949951     2.0     24220.741943         False          False
2   24667.766846   24444.329346   40.691650  24667.766846  323.437500  24444.329346        0.0  223.437500      223.437500     3.0     24667.766846         False          False
3   24667.766846   24544.329346   40.691650  24667.766846  223.387451  24544.329346        0.0  123.437500      123.437500     2.0     24667.766846         False          False
4   24667.766846   24644.279297   40.691650  24667.766846    0.500000  24644.279297        0.0   23.487549       23.437500     3.0     24667.766846         False          False
5   24667.766846   24644.329346  117.254150  24667.766846    0.500000  24644.329346        0.0   23.437500        0.000000     4.0     24667.766846         False          False
6   24667.766846   24667.766846  193.816650  24667.766846    0.500000  24667.766846        0.0    0.000000      -23.437500     5.0     24667.766846         False          False
7   24791.204346   24691.204346  193.816650  24791.204346  123.437500  24691.204346        0.0  100.000000        0.000000     1.0     24667.766846         False           True
8   24791.204346   24791.204346  193.816895  24791.204346    0.500000  24791.204346        0.0    0.000000      -99.999756     2.0     24667.766846         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1228595/4096.[0m
[08/17 17:35:56]  --------------------------------------------------------------------------------
[08/17 17:35:56]  Iteration: 219 (0 solution, 218 counterexamples)
[08/17 17:36:48]  Generator returned sat in 44.982454 secs.
[08/17 17:36:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 17:36:49]  Improved gap from 0.0 to 48.4375
[08/17 17:36:50]  Improved number of small numbers from 97 to 114 out of a max of 114
[08/17 17:36:50]  Verifer returned sat in 1.333825 secs.
[08/17 17:36:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24500.579346   24141.304443   70.279297  24500.579346    0.100098  24141.304443        0.0  359.274902      259.275146     5.0     24141.304443            -1             -1
1   24500.579346   24241.304199   70.279297  24500.579346  259.374756  24241.304199        0.0  259.275146      159.275146     5.0     24141.304443         False           True
2   24500.579346   24438.679199   70.279297  24500.579346  259.274902  24438.679199        0.0   61.900146       59.275146     4.0     24500.579346          True           True
3   24694.329346   24500.579346   70.279297  24694.329346  255.650146  24500.579346        0.0  193.750000      153.025146     4.0     24694.329346         False           True
4   24694.329346   24641.304199   70.279297  24694.329346  179.637451  24641.304199        0.0   53.025146       53.025146     2.0     24694.329346         False           True
5   24694.329346   24641.404297  117.254150  24694.329346    1.000000  24641.404297        0.0   52.925049        0.000000     3.0     24694.329346         False          False
6   24742.766846   24694.329346  168.816650  24742.766846  101.362549  24694.329346        0.0   48.437500        0.000000     4.0     24694.329346         False           True
7   24791.204346   24742.766846  220.379150  24791.204346   96.875000  24742.766846        0.0   48.437500        0.000000     2.0     24694.329346         False           True
8   24791.204346   24791.204346  271.941406  24791.204346    1.000000  24791.204346        0.0    0.000000      -48.437744     2.0     24694.329346         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1061991/4096.[0m
[08/17 17:36:50]  --------------------------------------------------------------------------------
[08/17 17:36:50]  Iteration: 220 (0 solution, 219 counterexamples)
[08/17 17:38:23]  Generator returned sat in 86.330416 secs.
[08/17 17:38:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:38:25]  Improved gap from 0.05 to 48.4375
[08/17 17:38:25]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/17 17:38:25]  Verifer returned sat in 1.108782 secs.
[08/17 17:38:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24793.404053   24344.966797 -133.383301  24793.404053    0.099854  24344.966797   0.000000  448.437256      348.437256     3.0     24344.966797            -1             -1
1   24893.504150   24544.966553 -133.383301  24893.504150  548.537354  24544.966553   0.099854  348.437744      348.437500     3.0     24344.966797         False          False
2   24893.504150   24644.966797 -133.383301  24893.504150    0.099854  24644.966797   0.099854  248.437500      248.437500     4.0     24893.404297         False          False
3   24893.504150   24693.204102 -133.383301  24893.504150    0.100098  24693.204102   0.099854  200.200195      148.437500     5.0     24893.404297         False          False
4   24893.504150   24844.866699 -133.383301  24893.504150  173.118652  24844.866699   0.099854   48.537598       48.437500     4.0     24893.404297         False           True
5   24893.504150   24844.966797  -81.820801  24893.504150    0.500000  24844.966797   0.099854   48.437500        0.000000     5.0     24893.404297         False          False
6   24944.066650   24893.404297  -32.483154  24944.066650   99.000000  24893.404297   0.099854   50.562500       -0.099854     6.0     24893.404297         False           True
7   24992.604248   24944.066650   19.079102  24992.604248   99.100098  24944.066650   0.099854   48.437744        0.000000     1.0     24893.404297         False           True
8   24992.604248   24992.504395   70.641602  24992.604248    0.500000  24992.504395   0.099854    0.000000      -48.437500     2.0     24893.404297         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=5575/16.[0m
[08/17 17:38:26]  --------------------------------------------------------------------------------
[08/17 17:38:26]  Iteration: 221 (0 solution, 220 counterexamples)
[08/17 17:38:49]  Generator returned sat in 16.280234 secs.
[08/17 17:38:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:38:52]  Improved gap from 0.0 to 48.4375
[08/17 17:38:52]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/17 17:38:52]  Verifer returned sat in 2.440569 secs.
[08/17 17:38:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25097.154297   24844.066650 -133.383301  25097.154297  395.612549  24844.066650   0.000000  253.087646      253.087646     5.0     24844.066650            -1             -1
1   25239.579346   24844.066650 -133.383301  25239.579346  395.512695  24844.066650   0.100098  395.412598      295.412598     5.0     25239.479248         False           True
2   25292.604248   24944.066797 -133.383301  25292.604248  448.437500  24944.066797   0.100098  348.437354      248.437500     3.0     25239.479248         False           True
3   25292.604248   25097.254150 -133.383301  25292.604248  348.337646  25097.254150   0.100098  195.250000      148.437500     3.0     25292.504150         False          False
4   25292.604248   25239.479248 -133.383301  25292.604248    0.500000  25239.479248   0.100098   53.024902       48.437500     4.0     25292.504150         False          False
5   25292.604248   25244.066650  -81.820801  25292.604248    0.500000  25244.066650   0.100098   48.437500        0.000000     4.0     25292.504150         False          False
6   25292.604248   25292.504150  -30.258301  25292.604248    0.500000  25292.504150   0.100098    0.000000      -48.437500     5.0     25292.504150         False          False
7   25389.479248   25340.941650   21.304199  25389.479248   96.875000  25340.941650   0.100098   48.437500        0.000000     1.0     25292.504150         False           True
8   25389.479248   25389.379150   21.304199  25389.479248    0.500000  25389.379150   0.100098    0.000000     -100.000000     2.0     25292.504150         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=605005/2048.[0m
[08/17 17:38:53]  --------------------------------------------------------------------------------
[08/17 17:38:53]  Iteration: 222 (0 solution, 221 counterexamples)
[08/17 17:40:57]  Generator returned sat in 117.382608 secs.
[08/17 17:40:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:40:59]  Improved gap from 0.000125 to 48.4375
[08/17 17:40:59]  Improved number of small numbers from 90 to 100 out of a max of 114
[08/17 17:40:59]  Verifer returned sat in 1.678490 secs.
[08/17 17:40:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25094.066650   24992.604248 -381.920898  25094.066650    0.100098  24992.604248        0.0  101.462402        1.462402     9.0     24992.604248            -1             -1
1   25193.966553   25094.066650 -381.920898  25193.966553  201.362305  25094.066650        0.0   99.899902        1.362305     5.0     24992.604248         False           True
2   25292.604248   25239.391748 -381.920898  25292.604248  198.537598  25239.391748        0.0   53.212500        0.000000     1.0     25292.604248          True           True
3   25292.604248   25292.604248 -330.358398  25292.604248    0.100098  25292.604248        0.0    0.000000      -48.437500     2.0     25292.604248         False          False
4   25442.604248   25440.404248 -330.358398  25442.604248  150.000000  25440.404248        0.1    2.100000        1.462500     1.0     25292.604248         False           True
5   25442.604248   25441.041748 -278.795898  25442.604248    2.000000  25441.041748        0.1    1.462500      -46.975000     2.0     25292.604248         False          False
6   25541.966748   25489.479248 -231.183398  25541.966748  100.825000  25489.479248        0.1   52.387500        0.000000     1.0     25541.866748          True           True
7   25541.966748   25541.866748 -179.621094  25541.966748   50.912500  25541.866748        0.1    0.000000      -48.437695     2.0     25541.866748         False          False
8   25592.697998   25590.304443 -179.620850  25592.697998   50.731250  25590.304443        0.1    2.293555      -97.706201     1.0     25541.866748         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=117/80.[0m
[08/17 17:41:00]  --------------------------------------------------------------------------------
[08/17 17:41:00]  Iteration: 223 (0 solution, 222 counterexamples)
[08/17 17:41:26]  Generator returned sat in 19.662280 secs.
[08/17 17:41:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:41:30]  Improved gap from 0.0 to 42.1875
[08/17 17:41:30]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:41:30]  Verifer returned sat in 2.954357 secs.
[08/17 17:41:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25151.848877   25151.799072 -502.865479  25151.848877    0.049805  25151.799072        0.0    0.049805      -61.699951     9.0     25151.799072            -1             -1
1   25413.549072   25218.382324 -502.865479  25413.549072  261.750000  25218.382324        0.0  195.166748      100.000244     1.0     25151.799072         False           True
2   25480.132324   25413.548828 -502.865479  25480.132324  261.750000  25413.548828        0.0   66.583496       66.583496     2.0     25151.799072         False          False
3   25675.249023   25506.298828 -502.865479  25675.249023  261.700195  25506.298828        0.0  168.950195      161.700195     1.0     25675.249023         False          False
4   25675.249023   25609.773926 -502.865479  25675.249023  130.850098  25609.773926        0.0   65.475098       61.700195     2.0     25675.249023         False          False
5   25675.249023   25613.548828 -464.565674  25675.249023   65.425049  25613.548828        0.0   61.700195        0.000000     3.0     25675.249023         False          False
6   25713.548828   25675.249023 -406.753174  25713.548828  100.000000  25675.249023        0.0   38.299805       -3.887695     4.0     25675.249023         False           True
7   25759.724121   25717.436523 -349.040771  25759.724121   84.475098  25717.436523        0.0   42.287598        0.000000     1.0     25675.249023         False           True
8   25759.724121   25759.724121 -291.228271  25759.724121   42.237549  25759.724121        0.0    0.000000      -42.187500     2.0     25675.249023         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=662527/4096.[0m
[08/17 17:41:31]  --------------------------------------------------------------------------------
[08/17 17:41:31]  Iteration: 224 (0 solution, 223 counterexamples)
[08/17 17:42:34]  Generator returned sat in 56.127856 secs.
[08/17 17:42:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 17:42:35]  Improved gap from 0.0 to 48.4375
[08/17 17:42:36]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/17 17:42:36]  Verifer returned sat in 1.275215 secs.
[08/17 17:42:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25277.199219   25277.148926 -566.565674  25277.199219    0.050049  25277.148926        0.0   0.050293       -0.049561     8.0     25277.148926            -1             -1
1   25325.686279   25277.248779 -515.003174  25325.686279   48.537354  25277.248779        0.0  48.437500        0.000000     1.0     25277.148926         False           True
2   25425.686279   25425.686279 -515.003174  25425.686279  148.437500  25425.686279        0.0   0.000000        0.000000     1.0     25277.148926         False          False
3   25622.686279   25525.686279 -515.003174  25622.686279  197.000000  25525.686279        0.0  97.000000       97.000000     1.0     25277.148926         False          False
4   25625.686279   25622.811279 -515.003174  25625.686279  100.000000  25622.811279        0.0   2.875000        0.000000     1.0     25277.148926         False          False
5   25674.311279   25625.686279 -464.565674  25674.311279   51.500000  25625.686279        0.0  48.625000       -0.937500     2.0     25277.148926         False          False
6   25723.686279   25675.248779 -413.003174  25723.686279   98.000000  25675.248779        0.0  48.437500        0.000000     1.0     25723.686279          True           True
7   25725.748779   25723.686279 -361.440674  25725.748779   50.500000  25723.686279        0.0   2.062500      -46.375000     2.0     25723.686279         False          False
8   25772.123779   25772.123779 -309.878418  25772.123779   48.437500  25772.123779        0.0   0.000000      -48.437744     1.0     25723.686279         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=397517/4096.[0m
[08/17 17:42:36]  --------------------------------------------------------------------------------
[08/17 17:42:36]  Iteration: 225 (0 solution, 224 counterexamples)
[08/17 17:43:16]  Generator returned sat in 32.420444 secs.
[08/17 17:43:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:43:18]  Improved gap from 9.049960049715908 to 42.1875
[08/17 17:43:19]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:43:19]  Verifer returned sat in 2.393022 secs.
[08/17 17:43:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26549.853760   26392.091309 -1781.407959  26549.853760    0.049805  26392.091309        0.0  157.762451       57.762695     2.0     26392.091309            -1             -1
1   26592.091064   26549.903809 -1781.407959  26592.091064  199.999756  26549.903809        0.0   42.187256        0.000000     1.0     26392.091309         False          False
2   26740.166504   26692.091064 -1781.407959  26740.166504  190.262695  26692.091064        0.0   48.075439       48.075439     1.0     26740.166504         False          False
3   26953.791260   26780.841064 -1781.407959  26953.791260  261.700195  26780.841064        0.0  172.950195      161.700195     1.0     26740.166504         False          False
4   26953.791260   26888.316162 -1781.407959  26953.791260  130.850098  26888.316162        0.0   65.475098       61.700195     2.0     26740.166504         False          False
5   26953.791260   26892.091064 -1743.108154  26953.791260   65.425049  26892.091064        0.0   61.700195        0.000000     3.0     26740.166504         False          False
6   26990.091064   26953.791260 -1685.295898  26990.091064   98.000000  26953.791260        0.0   36.299805       -5.887939     4.0     26990.091064          True           True
7   27038.266357   26995.979004 -1627.583252  27038.266357   84.475098  26995.979004        0.0   42.287354        0.000000     1.0     26990.091064         False           True
8   27038.266357   27038.266357 -1627.583008  27038.266357   42.237549  27038.266357        0.0    0.000000      -99.999756     2.0     26990.091064         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=697087/4096.[0m
[08/17 17:43:19]  --------------------------------------------------------------------------------
[08/17 17:43:19]  Iteration: 226 (0 solution, 225 counterexamples)
[08/17 17:44:45]  Generator returned sat in 78.663176 secs.
[08/17 17:44:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:44:47]  Improved gap from 0.0 to 48.4375
[08/17 17:44:47]  Improved number of small numbers from 84 to 114 out of a max of 114
[08/17 17:44:47]  Verifer returned sat in 1.663635 secs.
[08/17 17:44:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26645.115967   26492.090820 -1781.407959  26645.115967    0.100000  26492.090820   0.000000  153.025146      153.024902     2.0     26492.090820            -1             -1
1   26645.115967   26492.091064 -1781.407959  26645.115967    0.100000  26492.091064   0.000000  153.024902       53.024902     2.0     26492.090820         False          False
2   26749.265869   26688.140869 -1781.407959  26749.265869  257.174805  26688.140869   0.000000   61.125000       57.174805     1.0     26492.090820         False          False
3   26945.216064   26749.365967 -1781.407959  26945.216064  257.075195  26749.365967   0.100098  195.750000      153.024902     1.0     26945.115967         False          False
4   26945.216064   26892.091064 -1781.407959  26945.216064    1.000000  26892.091064   0.100098   53.024902       53.024902     2.0     26945.115967         False          False
5   26945.216064   26892.349365 -1734.432861  26945.216064    0.500000  26892.349365   0.100098   52.766602        0.000000     3.0     26945.115967         False          False
6   26993.553711   26945.115967 -1682.870361  26993.553711  101.104248  26945.115967   0.100098   48.337646       -0.099854     4.0     26945.115967         False           True
7   27042.091064   26993.553467 -1631.307861  27042.091064   96.875000  26993.553467   0.100098   48.437500        0.000000     1.0     26945.115967         False           True
8   27042.091064   27041.990967 -1579.745361  27042.091064    0.500000  27041.990967   0.100098    0.000000      -48.437500     2.0     26945.115967         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=313395/2048.[0m
[08/17 17:44:48]  --------------------------------------------------------------------------------
[08/17 17:44:48]  Iteration: 227 (0 solution, 226 counterexamples)
[08/17 17:45:37]  Generator returned sat in 41.959385 secs.
[08/17 17:45:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 17:45:39]  Improved gap from 48.4375 to 48.4375
[08/17 17:45:39]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 17:45:39]  Verifer returned sat in 1.373384 secs.
[08/17 17:45:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26719.611816   26419.711670 -1809.028564  26719.611816    0.200000  26419.711670        0.0  299.900146      199.900391     8.0     26419.711670            -1             -1
1   26819.611572   26519.711670 -1809.028564  26819.611572  399.899902  26519.711670        0.0  299.899902      199.900146     8.0     26419.711670         False           True
2   26919.611816   26719.711426 -1809.028564  26919.611816  399.900146  26719.711426        0.0  199.900391      199.900391     2.0     26419.711670          True           True
3   26972.736572   26776.986572 -1809.028564  26972.736572  253.025146  26776.986572        0.0  195.750000      153.025146     3.0     26972.736572         False          False
4   26972.736572   26919.711426 -1809.028564  26972.736572  177.637451  26919.711426        0.0   53.025146       53.025146     2.0     26972.736572         False           True
5   26972.736572   26921.286621 -1762.053711  26972.736572    2.000000  26921.286621        0.0   51.449951        0.000000     3.0     26972.736572         False          False
6   27021.074219   26972.736572 -1710.491211  27021.074219   99.787598  26972.736572        0.0   48.337646       -0.099854     4.0     26972.736572         False           True
7   27069.611572   27021.174072 -1658.928711  27069.611572   96.875000  27021.174072        0.0   48.437500        0.000000     1.0     26972.736572         False           True
8   27069.611572   27069.611572 -1658.928467  27069.611572    2.000000  27069.611572        0.0    0.000000      -99.999756     2.0     26972.736572         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819199/4096.[0m
[08/17 17:45:40]  --------------------------------------------------------------------------------
[08/17 17:45:40]  Iteration: 228 (0 solution, 227 counterexamples)
[08/17 17:46:16]  Generator returned sat in 29.094271 secs.
[08/17 17:46:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 17:46:18]  Improved gap from 0.00125 to 48.4375
[08/17 17:46:18]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/17 17:46:18]  Verifer returned sat in 1.586252 secs.
[08/17 17:46:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26528.888428   26428.878418 -1865.281250  26528.888428    0.001465  26428.878418   0.000000  100.010010        0.010010     1.0     26428.878418            -1             -1
1   26628.889893   26622.656006 -1865.281250  26628.889893  200.011475  26622.656006   0.001465    6.232422        0.010010     1.0     26428.878418         False          False
2   26728.777344   26671.093262 -1865.178711  26728.777344  106.119873  26671.093262   0.001465   57.682617        0.000000     1.0     26728.775879         False          False
3   26777.214844   26728.775879 -1813.616211  26777.214844  106.120117  26728.775879   0.001465   48.437500        0.000000     2.0     26728.775879         False          False
4   26877.226074   26877.212402 -1813.616211  26877.226074  148.448730  26877.212402   0.002686    0.010986        0.010010     1.0     26728.775879         False           True
5   26877.226074   26877.213379 -1762.053711  26877.226074    0.010000  26877.213379   0.002686    0.010010      -48.427490     2.0     26728.775879         False          False
6   26978.776123   26925.651123 -1715.176270  26978.776123  101.560059  26925.651123   0.002686   53.122314        0.000000     1.0     26978.773438          True           True
7   26978.776123   26978.773438 -1663.613770  26978.776123   49.280029  26978.773438   0.002686    0.000000      -48.437500     2.0     26978.773438         False          False
8   27028.056641   27027.211182 -1663.613770  27028.056641   49.280518  27027.211182   0.002686    0.842773      -99.156982     1.0     26978.773438         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=41/4096.[0m
[08/17 17:46:19]  --------------------------------------------------------------------------------
[08/17 17:46:19]  Iteration: 229 (0 solution, 228 counterexamples)
[08/17 17:47:30]  Generator returned sat in 63.672704 secs.
[08/17 17:47:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 17:47:31]  Improved gap from 48.4375 to 48.4375
[08/17 17:47:32]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 17:47:32]  Verifer returned sat in 1.545015 secs.
[08/17 17:47:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23850.859619   23748.744873   894.827637  23850.859619  202.114990  23748.744873   0.000000  102.114746        2.114990     4.0     23748.744873            -1             -1
1   23950.857178   23948.744629   894.827637  23950.857178  202.112305  23948.744629   0.000000    2.112549        2.112549     1.0     23950.857178         False           True
2   24050.857178   23995.177002   894.827637  24050.857178  102.112549  23995.177002   0.000000   55.680176        2.112549     1.0     24050.857178         False          False
3   24050.857178   24050.854736   944.280029  24050.857178   55.677734  24050.854736   0.000000    0.002441      -48.435059     2.0     24050.857178         False          False
4   24201.409668   24199.289795   944.280029  24201.409668  150.554932  24199.289795   0.002441    2.117432        2.114990     1.0     24050.857178         False           True
5   24201.409668   24199.292236   995.842285  24201.409668    0.010000  24199.292236   0.002441    2.114990      -46.322754     2.0     24050.857178         False          False
6   24300.852295   24250.568604  1042.722412  24300.852295  101.557617  24250.568604   0.002441   50.281250        0.000000     1.0     24300.849854          True           True
7   24300.852295   24300.849854  1094.284912  24300.852295   50.278809  24300.849854   0.002441    0.000000      -48.437500     2.0     24300.849854         False          False
8   24351.132324   24349.287354  1096.121338  24351.132324   50.280029  24349.287354   0.002441    1.842529      -96.321045     1.0     24300.849854         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=8663/4096.[0m
[08/17 17:47:32]  --------------------------------------------------------------------------------
[08/17 17:47:32]  Iteration: 230 (0 solution, 229 counterexamples)
[08/17 17:48:19]  Generator returned sat in 38.900467 secs.
[08/17 17:48:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:48:20]  Improved gap from 47.9432373046875 to 48.4375
[08/17 17:48:21]  Improved number of small numbers from 65 to 74 out of a max of 114
[08/17 17:48:21]  Verifer returned sat in 2.109604 secs.
[08/17 17:48:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23845.732910   23745.731344   897.840921  23845.732910  227.563965  23745.731344   0.000000  100.001566        0.001566     1.0     23745.731344            -1             -1
1   23973.294678   23918.170511   897.840921  23973.294678  227.563333  23918.170511  27.561667   27.562500        0.001667     1.0     23945.733011         False          False
2   24073.293011   23989.047178   897.840921  24073.293011  127.560833  23989.047178  27.561667   56.684167        0.000000     1.0     24045.731344         False          False
3   24073.293844   24045.731344   949.403421  24073.293844   56.685000  24045.731344  27.561667    0.000833      -48.436667     2.0     24045.732178         False          False
4   24222.293011   24194.168011   949.403421  24222.293011  149.000000  24194.168011  28.122500    0.002500        0.001667     1.0     24045.732178         False           True
5   24222.300511   24194.168844  1000.965820  24222.300511    0.010000  24194.168844  28.122500    0.009167      -48.428434     2.0     24045.732178         False          False
6   24323.852178   24244.948486  1047.842588  24323.852178  101.560833  24244.948486  28.122500   50.781191        0.000000     1.0     24295.729678          True           True
7   24323.852178   24295.729678  1099.405029  24323.852178   50.780417  24295.729678  28.122500    0.000000      -48.437559     2.0     24295.729678         False          False
8   24373.633011   24344.167236  1099.405273  24373.633011   49.780833  24344.167236  28.122500    1.343275      -98.656481     1.0     24295.729678         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/600.[0m
[08/17 17:48:22]  --------------------------------------------------------------------------------
[08/17 17:48:22]  Iteration: 231 (0 solution, 230 counterexamples)
[08/17 17:49:26]  Generator returned sat in 56.606679 secs.
[08/17 17:49:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:49:28]  Improved gap from 0.0 to 48.4375
[08/17 17:49:28]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 17:49:28]  Verifer returned sat in 1.701699 secs.
[08/17 17:49:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   24127.880371   23979.442871   897.840820  24127.880371    0.049805  23979.442871        0.0  148.437500      148.437500     2.0     23979.442871            -1             -1
1   24127.880371   23979.442871   897.840820  24127.880371    0.049805  23979.442871        0.0  148.437500       48.437500     2.0     23979.442871         False          False
2   24127.880371   24079.442871   949.403320  24127.880371    0.050049  24079.442871        0.0   48.437500        0.000000     3.0     23979.442871         False          False
3   24376.317871   24181.067871   949.403320  24376.317871  296.875000  24181.067871        0.0  195.250000      148.437500     1.0     23979.442871         False          False
4   24376.317871   24323.242920   949.403320  24376.317871    0.500000  24323.242920        0.0   53.074951       48.437500     2.0     23979.442871         False          False
5   24376.317871   24327.880371  1000.965820  24376.317871    0.500000  24327.880371        0.0   48.437500        0.000000     3.0     23979.442871         False          False
6   24376.317871   24376.317871  1052.528320  24376.317871    0.500000  24376.317871        0.0    0.000000      -48.437500     4.0     23979.442871         False          False
7   24473.192871   24424.755371  1104.090820  24473.192871   96.875000  24424.755371        0.0   48.437500        0.000000     1.0     24473.192871          True           True
8   24473.192871   24473.192871  1104.091064  24473.192871    0.500000  24473.192871        0.0    0.000000      -99.999756     2.0     24473.192871         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=11879/80.[0m
[08/17 17:49:29]  --------------------------------------------------------------------------------
[08/17 17:49:29]  Iteration: 232 (0 solution, 231 counterexamples)
[08/17 17:50:36]  Generator returned sat in 60.209653 secs.
[08/17 17:50:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/17 17:50:39]  Improved gap from 0.1 to 48.4375
[08/17 17:50:39]  Improved number of small numbers from 59 to 78 out of a max of 114
[08/17 17:50:39]  Verifer returned sat in 2.765928 secs.
[08/17 17:50:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23310.062744   23110.062988  1251.015820  23310.062744  200.000000  23110.062988        0.0  199.999756       99.999873     9.0     23110.062988            -1             -1
1   23310.062744   23261.625244  1251.015820  23310.062744  199.949951  23261.625244        0.0   48.437500       -0.000127     5.0     23310.062744         False           True
2   23403.187744   23403.137871  1251.015820  23403.187744  141.562500  23403.137871        0.0    0.049873       -6.875127     1.0     23403.187744         False           True
3   23603.137871   23510.062871  1251.015820  23603.137871  200.000000  23510.062871        0.0   93.075000       93.075000     1.0     23403.187744         False          False
4   23610.062871   23610.012871  1251.015820  23610.062871  100.000000  23610.012871        0.0    0.050000        0.000000     1.0     23403.187744         False          False
5   23660.012871   23610.062871  1301.065820  23660.012871   50.000000  23610.062871        0.0   49.950000        0.000000     2.0     23403.187744         False          False
6   23711.525371   23660.012871  1349.553320  23711.525371  101.462500  23660.012871        0.0   51.512500        0.000000     2.0     23711.525371          True           True
7   23732.987871   23711.525371  1401.115820  23732.987871   72.975000  23711.525371        0.0   21.462500      -26.975000     2.0     23711.525371         False           True
8   23760.281621   23759.962891  1401.115967  23760.281621   48.756250  23759.962891        0.0    0.318730      -99.681104     1.0     23711.525371         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=100.[0m
[08/17 17:50:40]  --------------------------------------------------------------------------------
[08/17 17:50:40]  Iteration: 233 (0 solution, 232 counterexamples)
[08/17 17:51:51]  Generator returned sat in 63.699929 secs.
[08/17 17:51:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:51:52]  Improved gap from 0.0 to 48.4375
[08/17 17:51:52]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 17:51:52]  Verifer returned sat in 0.640687 secs.
[08/17 17:51:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22863.445312   22763.495361  1251.015869  22863.445312  395.462646  22763.495361   0.000000   99.949951       99.949951     9.0     22763.495361            -1             -1
1   23158.907959   22863.495361  1251.015869  23158.907959  395.412598  22863.495361   0.050049  295.362549      295.362549     1.0     23158.857910         False           True
2   23211.982910   22963.495361  1251.015869  23211.982910  348.437500  22963.495361   0.050049  248.437500      248.437500     2.0     23211.932861         False          False
3   23211.982910   23017.182861  1251.015869  23211.982910    0.050049  23017.182861   0.050049  194.750000      148.437500     3.0     23211.932861         False          False
4   23211.982910   23158.857666  1251.015869  23211.982910    0.500000  23158.857666   0.050049   53.075195       48.437500     4.0     23211.932861         False          False
5   23211.982910   23163.495361  1302.578369  23211.982910    0.500000  23163.495361   0.050049   48.437500        0.000000     4.0     23211.932861         False          False
6   23211.982910   23211.932861  1354.140869  23211.982910    0.500000  23211.932861   0.050049    0.000000      -48.437500     5.0     23211.932861         False          False
7   23308.857910   23260.370361  1405.703369  23308.857910   96.875000  23260.370361   0.050049   48.437500        0.000000     1.0     23211.932861         False           True
8   23308.857910   23308.807861  1457.265869  23308.857910    0.500000  23308.807861   0.050049    0.000000      -48.437500     2.0     23211.932861         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1209805/4096.[0m
[08/17 17:51:53]  --------------------------------------------------------------------------------
[08/17 17:51:53]  Iteration: 234 (0 solution, 233 counterexamples)
[08/17 17:52:25]  Generator returned sat in 25.112695 secs.
[08/17 17:52:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:52:28]  Improved gap from 36.453125 to 48.4375
[08/17 17:52:29]  Improved number of small numbers from 72 to 88 out of a max of 114
[08/17 17:52:29]  Verifer returned sat in 2.485604 secs.
[08/17 17:52:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22796.320557   22652.320557  1251.015869  22796.320557    0.100000  22652.320557        0.0  144.000000       99.900195     9.0     22652.320557            -1             -1
1   22972.970459   22796.420361  1251.015869  22972.970459  320.649902  22796.420361        0.0  176.550098      176.550098     1.0     22652.320557         False           True
2   23144.857861   22796.420410  1251.015869  23144.857861  348.437500  22796.420410        0.0  348.437451      248.437500     2.0     22652.320557         False          False
3   23144.857861   22973.070361  1251.015869  23144.857861  203.900000  22973.070361        0.0  171.787500      148.437500     2.0     23144.857861         False          False
4   23144.857861   23093.032959  1251.015869  23144.857861  102.450000  23093.032959        0.0   51.824902       48.437500     3.0     23144.857861         False          False
5   23144.857861   23096.420361  1302.578369  23144.857861   51.725000  23096.420361        0.0   48.437500        0.000000     4.0     23144.857861         False          False
6   23144.857861   23144.857861  1354.140869  23144.857861   26.362500  23144.857861        0.0    0.000000      -48.437500     5.0     23144.857861         False          False
7   23242.932861   23193.295410  1404.503369  23242.932861   98.075000  23193.295410        0.0   49.637451        0.000000     1.0     23144.857861         False           True
8   23242.932861   23242.932861  1404.503418  23242.932861   49.537500  23242.932861        0.0    0.000000      -99.999951     2.0     23144.857861         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=509005/2048.[0m
[08/17 17:52:29]  --------------------------------------------------------------------------------
[08/17 17:52:29]  Iteration: 235 (0 solution, 234 counterexamples)
[08/17 17:53:54]  Generator returned sat in 77.128784 secs.
[08/17 17:53:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:53:55]  Improved gap from 48.4375 to 100
[08/17 17:53:55]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/17 17:53:55]  Verifer returned sat in 0.884676 secs.
[08/17 17:53:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   22944.883057   22245.907959  1602.553223  22944.883057    0.025146  22245.907959        0.0  698.975098      600.000000     3.0     22245.907959            -1             -1
1   22944.883057   22349.282715  1602.553223  22944.883057    0.025146  22349.282715        0.0  595.600342      500.000000     4.0     22245.907959         False          False
2   22944.883057   22444.883057  1602.553223  22944.883057  500.024902  22444.883057        0.0  500.000000      400.000000     5.0     22245.907959         False          False
3   22944.907959   22544.883057  1602.553223  22944.907959  500.024902  22544.883057        0.0  400.024902      300.024902     5.0     22245.907959          True           True
4   22944.907959   22744.882812  1602.553223  22944.907959  400.000000  22744.882812        0.0  200.025146      200.024902     6.0     22944.907959          True           True
5   23143.182861   22843.882812  1602.553223  23143.182861  398.300049  22843.882812        0.0  299.300049      298.299805     6.0     22944.907959         False           True
6   23243.032715   22944.883057  1602.553223  23243.032715  399.149902  22944.883057        0.0  298.149658      298.149658     7.0     22944.907959         False           True
7   23344.958008   22944.932617  1602.553223  23344.958008  400.074951  22944.932617        0.0  400.025391      300.074951     3.0     22944.907959         False           True
8   23344.958008   23144.882812  1602.553223  23344.958008    0.500000  23144.882812        0.0  200.075195      200.074951     3.0     22944.907959         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=600.[0m
[08/17 17:53:56]  --------------------------------------------------------------------------------
[08/17 17:53:56]  Iteration: 236 (0 solution, 235 counterexamples)
[08/17 17:55:20]  Generator returned sat in 76.444208 secs.
[08/17 17:55:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 17:55:24]  Improved gap from 0.00125 to 40.625
[08/17 17:55:24]  Improved number of small numbers from 109 to 111 out of a max of 114
[08/17 17:55:24]  Verifer returned sat in 4.187604 secs.
[08/17 17:55:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   23141.607178   23001.000488  1602.553223  23141.607178    0.018555  23001.000488        0.0  140.606689       59.356718     9.0     23001.000488            -1             -1
1   23141.643799   23141.625488  1602.553223  23141.643799  140.643311  23141.625488        0.0    0.018311      -40.606661     1.0     23001.000488         False           True
2   23282.269043   23282.250460  1602.553223  23282.269043  140.643555  23282.250460        0.0    0.018583        0.018583     1.0     23001.000488         False          False
3   23542.956342   23378.382812  1602.553223  23542.956342  260.705882  23378.382812        0.0  164.573529      160.705882     1.0     23001.000488         False          False
4   23542.956342   23476.261475  1602.553223  23542.956342  131.352941  23476.261475        0.0   66.694867       60.705882     2.0     23001.000488         False          False
5   23542.956342   23482.250460  1641.847340  23542.956342   66.676471  23482.250460        0.0   60.705882        0.000000     3.0     23001.000488         False          False
6   23583.250460   23542.956342  1701.222168  23583.250460  101.000000  23542.956342        0.0   40.294118       -0.331055     4.0     23583.250460          True           True
7   23626.243107   23583.581543  1758.560576  23626.243107   83.286765  23583.581543        0.0   42.661564        0.000000     1.0     23583.250460         False           True
8   23626.243107   23626.243107  1817.935547  23626.243107   42.643382  23626.243107        0.0    0.000000      -40.625029     2.0     23583.250460         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=658327/4096.[0m
[08/17 17:55:25]  --------------------------------------------------------------------------------
[08/17 17:55:25]  Iteration: 237 (0 solution, 236 counterexamples)
[08/17 17:56:07]  Generator returned sat in 34.977747 secs.
[08/17 17:56:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 17:56:10]  Improved gap from 0.004638671875 to 15.625
[08/17 17:56:10]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 17:56:10]  Verifer returned sat in 2.325687 secs.
[08/17 17:56:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25802.043701   25502.093750  1662.560547  25802.043701    0.049805  25502.093750   0.000000  299.949951      299.949951     2.0      25502.09375            -1             -1
1   25902.143555   25602.093750  1662.560547  25902.143555  400.049805  25602.093750   0.000000  300.049805      300.049805     2.0      25502.09375         False          False
2   26015.468506   25602.093750  1662.560547  26015.468506  413.374756  25602.093750   0.049805  413.324951      313.324951     2.0      25502.09375         False          False
3   26031.143555   25802.093506  1662.560547  26031.143555  429.000000  25802.093506   0.049805  229.000244      229.000000     3.0      25502.09375         False          False
4   26031.143555   25902.093506  1662.560547  26031.143555  215.000000  25902.093506   0.049805  129.000244      129.000000     4.0      25502.09375         False          False
5   26031.143555   25902.143555  1662.560547  26031.143555  108.000000  25902.143555   0.049805  128.950195       29.000000     5.0      25502.09375         False          False
6   26031.143555   26015.468750  1733.560547  26031.143555   55.500000  26015.468750   0.049805   15.625000        0.000000     4.0      26031.09375          True           True
7   26043.768555   26031.093750  1817.935547  26043.768555   28.250000  26031.093750   0.049805   12.625000       -3.000000     5.0      26031.09375         False          False
8   26046.768555   26046.718750  1817.935547  26046.768555   15.625000  26046.718750   0.049805    0.000000     -100.000000     1.0      26031.09375         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1283379/4096.[0m
[08/17 17:56:11]  --------------------------------------------------------------------------------
[08/17 17:56:11]  Iteration: 238 (0 solution, 237 counterexamples)
[08/17 17:57:28]  Generator returned sat in 69.128129 secs.
[08/17 17:57:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 17:57:29]  Improved gap from 0.0 to 48.4375
[08/17 17:57:30]  Improved number of small numbers from 70 to 81 out of a max of 114
[08/17 17:57:30]  Verifer returned sat in 1.793528 secs.
[08/17 17:57:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25787.281006   25635.718750  1662.560547  25787.281006  151.762451  25635.718750        0.0  151.562256       51.562451     5.0     25635.718750            -1             -1
1   25787.381104   25787.281055  1662.560547  25787.381104  151.662354  25787.281055        0.0    0.100049      -48.337451     1.0     25787.381104         False           True
2   26035.718555   25930.168555  1662.560547  26035.718555  248.437500  25930.168555        0.1  105.450000       99.900000     1.0     25787.381104         False          False
3   26134.268555   26035.718555  1662.560547  26134.268555  204.000000  26035.718555        0.1   98.450000       98.450000     1.0     26134.168555         False          False
4   26135.818555   26135.618555  1662.560547  26135.818555  100.000000  26135.618555        0.1    0.100000        0.000000     1.0     26134.168555         False          False
5   26183.718555   26135.718555  1714.123047  26183.718555   48.000000  26135.718555        0.1   47.900000       -0.537500     2.0     26134.168555         False          False
6   26236.593555   26184.156250  1761.785547  26236.593555  100.775000  26184.156250        0.1   52.337305        0.000000     1.0     26236.493555          True           True
7   26236.593555   26236.493555  1813.348047  26236.593555   48.387500  26236.493555        0.1    0.000000      -48.437500     2.0     26236.493555         False          False
8   26285.031055   26284.931055  1813.348047  26285.031055   48.437500  26284.931055        0.1    0.000000     -100.000000     1.0     26236.493555         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=999/10.[0m
[08/17 17:57:31]  --------------------------------------------------------------------------------
[08/17 17:57:31]  Iteration: 239 (0 solution, 238 counterexamples)
[08/17 17:58:27]  Generator returned sat in 48.635350 secs.
[08/17 17:58:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 17:58:29]  Improved gap from 0.0 to 23.4375
[08/17 17:58:29]  Improved number of small numbers from 90 to 98 out of a max of 114
[08/17 17:58:29]  Verifer returned sat in 1.771554 secs.
[08/17 17:58:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26134.267822   26034.268066  1662.560547  26134.267822    0.099854  26034.268066        0.0   99.999756       -0.000244     4.0     26034.268066            -1             -1
1   26310.730713   26134.268066  1662.560547  26310.730713  276.462646  26134.268066        0.0  176.462646       76.462646     1.0     26034.268066         False          False
2   26334.268066   26310.830566  1662.560547  26334.268066  200.000000  26310.830566        0.0   23.437500        0.000000     1.0     26334.268066         False          False
3   26657.937233   26434.267822  1662.560547  26657.937233  347.106667  26434.267822        0.0  223.669411      223.669167     1.0     26334.268066         False          False
4   26657.937233   26534.268066  1662.560547  26657.937233  174.553333  26534.268066        0.0  123.669167      123.669167     2.0     26334.268066         False          False
5   26657.937233   26612.698975  1662.560547  26657.937233   88.276667  26612.698975        0.0   45.238258       23.669167     3.0     26334.268066         False          False
6   26657.937233   26634.268066  1738.891380  26657.937233   45.138333  26634.268066        0.0   23.669167        0.000000     4.0     26334.268066         False          False
7   26657.937233   26657.937233  1815.453857  26657.937233   23.569167  26657.937233        0.0    0.000000      -23.437523     5.0     26334.268066         False          False
8   26779.606400   26681.374756  1815.454102  26779.606400  121.669167  26681.374756        0.0   98.231644       -1.768112     1.0     26779.606400          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=268523/1200.[0m
[08/17 17:58:30]  --------------------------------------------------------------------------------
[08/17 17:58:30]  Iteration: 240 (0 solution, 239 counterexamples)
[08/17 17:59:10]  Generator returned sat in 32.204451 secs.
[08/17 17:59:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 17:59:13]  Improved gap from 0.0 to 42.1875
[08/17 17:59:14]  Improved number of small numbers from 69 to 88 out of a max of 114
[08/17 17:59:14]  Verifer returned sat in 3.396732 secs.
[08/17 17:59:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26334.210693   26292.023193  1800.785400  26334.210693    0.099854  26292.023193   0.000000   42.187500       42.187480     6.0     26292.023193            -1             -1
1   26334.210693   26292.023275  1858.597839  26334.210693   42.187256  26292.023275   0.000000   42.187419       -0.000081     6.0     26292.023193         False           True
2   26589.937337   26434.210775  1858.597839  26589.937337  297.914062  26434.210775   0.028646  155.697917      155.697917     1.0     26292.023193          True           True
3   26689.937337   26516.929525  1858.597839  26689.937337  255.697917  26516.929525   0.028646  172.979167      155.697917     2.0     26689.908691         False          False
4   26689.937337   26624.455322  1858.597839  26689.937337  128.848958  26624.455322   0.028646   65.453369       55.697917     2.0     26689.908691         False          False
5   26689.937337   26634.210775  1902.899922  26689.937337   65.424479  26634.210775   0.028646   55.697917        0.000000     3.0     26689.908691         False          False
6   26732.239421   26689.908691  1960.597656  26732.239421   98.000000  26689.908691   0.028646   42.302083       -0.000182     4.0     26689.908691         False           True
7   26774.426921   26732.239258  2018.381836  26774.426921   84.489583  26732.239258   0.028646   42.159017       -0.028503     1.0     26689.908691         False           True
8   26775.512695   26774.427002  2076.194092  26775.512695   43.244792  26774.427002   0.028646    1.057048      -41.130472     1.0     26689.908691         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=14947/96.[0m
[08/17 17:59:14]  --------------------------------------------------------------------------------
[08/17 17:59:14]  Iteration: 241 (0 solution, 240 counterexamples)
[08/17 17:59:54]  Generator returned sat in 32.598385 secs.
[08/17 17:59:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 17:59:56]  Improved gap from 0.0 to 48.4375
[08/17 17:59:57]  Improved number of small numbers from 64 to 80 out of a max of 114
[08/17 17:59:57]  Verifer returned sat in 2.187420 secs.
[08/17 17:59:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26176.370605   26076.370605  1800.785400  26176.370605    0.200195  26076.370605        0.0  100.000000       99.999912     1.0     26076.370605            -1             -1
1   26176.370605   26076.370850  1800.785400  26176.370605    0.099854  26076.370850        0.0   99.999756       -0.000088     2.0     26176.370605         False          False
2   26282.995850   26269.745693  1800.785400  26282.995850  206.625000  26269.745693        0.0   13.250156        6.625156     1.0     26176.370605         False           True
3   26476.270693   26374.208193  1800.785400  26476.270693  206.525000  26374.208193        0.0  102.062500       99.900000     1.0     26476.270693         False          False
4   26476.470693   26476.370693  1800.785400  26476.470693  102.262500  26476.370693        0.0    0.100000        0.100000     1.0     26476.270693         False          False
5   26526.501943   26476.470693  1850.654150  26526.501943   50.131250  26476.470693        0.0   50.031250        0.000000     2.0     26476.270693         False          False
6   26577.833193   26526.501943  1899.322900  26577.833193  101.362500  26526.501943        0.0   51.331250        0.000000     2.0     26577.833193          True           True
7   26600.648818   26577.833193  1950.885400  26600.648818   74.146875  26577.833193        0.0   22.815625      -25.621875     2.0     26577.833193         False           True
8   26626.564443   26626.270752  1950.885498  26626.564443   48.731250  26626.270752        0.0    0.293691      -99.706152     1.0     26577.833193         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=100.[0m
[08/17 17:59:58]  --------------------------------------------------------------------------------
[08/17 17:59:58]  Iteration: 242 (0 solution, 241 counterexamples)
[08/17 18:00:59]  Generator returned sat in 53.117477 secs.
[08/17 18:00:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 18:01:01]  Improved gap from 0.00125 to 48.4375
[08/17 18:01:02]  Improved number of small numbers from 59 to 73 out of a max of 114
[08/17 18:01:02]  Verifer returned sat in 2.586286 secs.
[08/17 18:01:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25830.203857   25823.453857  2046.902155  25830.203857  201.149902  25823.453857        0.0    6.750000       -0.050081     8.0     25823.453857            -1             -1
1   26024.553711   25830.254150  2046.902155  26024.553711  201.099854  25830.254150        0.0  194.299561       94.299772     1.0     26024.553711         False           True
2   26031.303955   26024.603939  2046.902155  26031.303955  201.049805  26024.603939        0.0    6.700016        1.050016     1.0     26031.303955         False          False
3   26225.603939   26130.253939  2046.902155  26225.603939  201.000000  26130.253939        0.0   95.350000       95.350000     1.0     26225.603939         False          False
4   26230.253939   26230.203939  2046.902155  26230.253939  100.000000  26230.203939        0.0    0.050000        0.000000     1.0     26225.603939         False          False
5   26279.703939   26230.253939  2097.452155  26279.703939   49.500000  26230.253939        0.0   49.450000        0.000000     2.0     26225.603939         False          False
6   26331.078939   26279.703939  2146.077155  26331.078939  100.825000  26279.703939        0.0   51.375000        0.000000     2.0     26331.078939          True           True
7   26352.428939   26331.078939  2197.639655  26352.428939   72.725000  26331.078939        0.0   21.350000      -27.087500     2.0     26331.078939         False           True
8   26379.516439   26379.516439  2249.202148  26379.516439   48.437500  26379.516439        0.0    0.000000      -48.437507     1.0     26331.078939         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=195379/2048.[0m
[08/17 18:01:03]  --------------------------------------------------------------------------------
[08/17 18:01:03]  Iteration: 243 (0 solution, 242 counterexamples)
[08/17 18:01:46]  Generator returned sat in 36.166270 secs.
[08/17 18:01:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:01:48]  Improved gap from 0.0 to 23.4375
[08/17 18:01:48]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 18:01:48]  Verifer returned sat in 1.393701 secs.
[08/17 18:01:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26130.244141   26004.806641  1872.349609  26130.244141  125.237305  26004.806641        0.0  125.437500      125.437500     8.0     26004.806641            -1             -1
1   26130.244141   26004.906250  1872.349609  26130.244141  125.237305  26004.906250        0.0  125.337891       25.437500     3.0     26004.806641         False           True
2   26130.244141   26104.806641  1946.912109  26130.244141  125.237549  26104.806641        0.0   25.437500        0.000000     4.0     26004.806641         False          False
3   26455.194092   26130.244141  1946.912109  26455.194092  350.387451  26130.244141        0.0  324.949951      224.949951     5.0     26004.806641         False          False
4   26455.194092   26330.244141  1946.912109  26455.194092  125.437500  26330.244141        0.0  124.949951      124.949951     2.0     26455.194092          True           True
5   26455.194092   26422.984375  1946.912109  26455.194092   63.218750  26422.984375        0.0   32.209717       24.949951     3.0     26455.194092         False          False
6   26455.194092   26430.244141  2021.962158  26455.194092   32.109375  26430.244141        0.0   24.949951        0.000000     4.0     26455.194092         False          False
7   26455.194092   26455.194092  2097.012207  26455.194092   16.554688  26455.194092        0.0    0.000000      -24.949951     5.0     26455.194092         False          False
8   26580.144043   26480.144043  2097.012207  26580.144043  124.949951  26480.144043        0.0  100.000000        0.000000     1.0     26455.194092         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=4501/20.[0m
[08/17 18:01:49]  --------------------------------------------------------------------------------
[08/17 18:01:49]  Iteration: 244 (0 solution, 243 counterexamples)
[08/17 18:02:24]  Generator returned sat in 27.875663 secs.
[08/17 18:02:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 18:02:26]  Improved gap from 0.0 to 48.4375
[08/17 18:02:26]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 18:02:26]  Verifer returned sat in 1.365942 secs.
[08/17 18:02:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   25743.803467   25592.240967  1872.349609  25743.803467  200.015625  25592.240967   0.015625  151.546875       51.546875     8.0     25592.240967            -1             -1
1   25792.256592   25743.803467  1872.349609  25792.256592  200.000000  25743.803467   0.015625   48.437500        0.000000     1.0     25792.240967         False           True
2   25943.803467   25885.178467  1872.349609  25943.803467  199.984375  25885.178467   0.015625   58.609375       51.546875     1.0     25943.787842         False          False
3   26088.194092   25992.240967  1872.349609  26088.194092  203.000000  25992.240967   0.015625   95.937500       95.937500     1.0     25943.787842         False          False
4   26092.256592   26092.225342  1872.349609  26092.256592  100.000000  26092.225342   0.015625    0.015625        0.000000     1.0     25943.787842         False          False
5   26140.740967   26092.240967  1923.865234  26140.740967   48.500000  26092.240967   0.015625   48.484375        0.000000     2.0     25943.787842         False          False
6   26193.787842   26140.740967  1970.818359  26193.787842  101.531250  26140.740967   0.015625   53.031250        0.000000     1.0     26193.772217          True           True
7   26193.787842   26193.772217  2022.380859  26193.787842   49.265625  26193.772217   0.015625    0.000000      -48.437500     2.0     26193.772217         False          False
8   26242.561279   26242.209717  2022.380859  26242.561279   48.773438  26242.209717   0.015625    0.335938      -99.664062     1.0     26193.772217         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=6141/64.[0m
[08/17 18:02:27]  --------------------------------------------------------------------------------
[08/17 18:02:27]  Iteration: 245 (0 solution, 244 counterexamples)
[08/17 18:03:34]  Generator returned sat in 59.164846 secs.
[08/17 18:03:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 18:03:36]  Improved gap from 0.0 to 23.4375
[08/17 18:03:36]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 18:03:36]  Verifer returned sat in 1.977286 secs.
[08/17 18:03:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26896.657227   26648.582275  1699.862061  26896.657227    0.099854  26648.582275        0.0  248.074951      200.199951     8.0     26648.582275            -1             -1
1   26896.657227   26696.457275  1699.862061  26896.657227    0.200195  26696.457275        0.0  200.199951      100.199951     3.0     26648.582275         False           True
2   26896.657227   26896.457275  1699.862061  26896.657227    0.100098  26896.457275        0.0    0.199951        0.199951     4.0     26896.657227         False          False
3   26896.657227   26896.457275  1776.424561  26896.657227    0.100000  26896.457275        0.0    0.199951      -23.237549     4.0     26896.657227         False           True
4   27143.332275   27018.794922  1776.424561  27143.332275  246.875000  27018.794922        0.0  124.537354      123.437500     1.0     26896.657227         False           True
5   27143.332275   27080.013428  1776.424561  27143.332275  124.437500  27080.013428        0.0   63.318848       23.437500     2.0     26896.657227         False          False
6   27143.332275   27119.894775  1852.987061  27143.332275   63.218750  27119.894775        0.0   23.437500        0.000000     3.0     26896.657227         False          False
7   27152.504150   27143.332275  1929.449609  27152.504150   32.609375  27143.332275        0.0    9.171875      -14.365576     4.0     26896.657227         False          False
8   27266.869629   27166.869873  1929.449609  27266.869629  123.537354  27166.869873        0.0   99.999756       -0.000098     1.0     27266.869629          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=205005/1024.[0m
[08/17 18:03:37]  --------------------------------------------------------------------------------
[08/17 18:03:37]  Iteration: 246 (0 solution, 245 counterexamples)
[08/17 18:04:53]  Generator returned sat in 67.663899 secs.
[08/17 18:04:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 18:04:55]  Improved gap from 23.4375 to 23.4375
[08/17 18:04:56]  Improved number of small numbers from 62 to 83 out of a max of 114
[08/17 18:04:56]  Verifer returned sat in 2.844458 secs.
[08/17 18:04:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   26977.040758   26724.615758  1731.349561  26977.040758    0.050049  26724.615758        0.0  252.425000      200.000000     3.0     26724.615758            -1             -1
1   26977.040758   26777.040771  1731.349561  26977.040758  252.424805  26777.040771        0.0  199.999986      100.000000     4.0     26724.615758         False          False
2   26977.040771   26953.603027  1731.349561  26977.040771  200.000000  26953.603027        0.0   23.437744        0.000014     5.0     26977.040771          True           True
3   26977.040771   26977.040758  1806.937012  26977.040771    0.050049  26977.040758        0.0    0.000014      -24.412535     6.0     26977.040771         False           True
4   27227.965758   27101.453258  1806.937012  27227.965758  250.925000  27101.453258        0.0  126.512500      126.512451     1.0     26977.040771         False           True
5   27227.965758   27163.684326  1806.937012  27227.965758  126.462500  27163.684326        0.0   64.281431       26.512451     2.0     26977.040771         False          False
6   27227.965758   27204.528258  1880.424561  27227.965758   64.231250  27204.528258        0.0   23.437500        0.000000     3.0     26977.040771         False          False
7   27237.643883   27227.965758  1956.987061  27237.643883   33.115625  27227.965758        0.0    9.678125      -13.759375     4.0     26977.040771         False          False
8   27352.978258   27251.403320  1956.987061  27352.978258  125.012500  27251.403320        0.0  101.574937        1.575000     1.0     27352.978258          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=200.[0m
[08/17 18:04:57]  --------------------------------------------------------------------------------
[08/17 18:04:57]  Iteration: 247 (0 solution, 246 counterexamples)
[08/17 18:06:09]  Generator returned sat in 64.151836 secs.
[08/17 18:06:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 18:06:13]  Improved gap from 0.0 to 40.625
[08/17 18:06:14]  Improved number of small numbers from 60 to 83 out of a max of 114
[08/17 18:06:14]  Verifer returned sat in 4.614826 secs.
[08/17 18:06:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   27077.020752   26936.295654  1490.744385  27077.020752  140.925000  26936.295654        0.0  140.725098       59.374756     2.0     26936.295654            -1             -1
1   27077.120605   27077.020752  1490.744609  27077.120605  140.824951  27077.020752        0.0    0.099854      -40.525166     2.0     27077.120605         False          False
2   27217.745850   27217.645771  1490.744609  27217.745850  140.725098  27217.645771        0.0    0.100078        0.100078     1.0     27217.745850         False          False
3   27482.579105   27317.645771  1490.744609  27482.579105  264.933333  27317.645771        0.0  164.933333      164.933333     1.0     27217.745850         False          False
4   27482.579105   27414.745850  1490.744609  27482.579105  133.466667  27414.745850        0.0   67.833255       64.933333     2.0     27217.745850         False          False
5   27482.579105   27417.645771  1525.811276  27482.579105   67.733333  27417.645771        0.0   64.933333        0.000000     3.0     27217.745850         False          False
6   27517.145771   27482.579105  1585.186276  27517.145771   99.500000  27482.579105        0.0   34.566667       -6.058333     4.0     27517.145771          True           True
7   27564.545771   27523.204105  1643.744629  27564.545771   81.966667  27523.204105        0.0   41.341667       -0.099980     1.0     27517.145771         False           True
8   27565.187438   27564.645996  1643.744629  27565.187438   41.983333  27564.645996        0.0    0.541442      -99.458314     1.0     27517.145771         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=4951/30.[0m
[08/17 18:06:15]  --------------------------------------------------------------------------------
[08/17 18:06:15]  Iteration: 248 (0 solution, 247 counterexamples)
[08/17 18:07:25]  Generator returned sat in 62.618311 secs.
[08/17 18:07:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 18:07:32]  Improved gap from 36.00087890625 to 40.625
[08/17 18:07:33]  Improved number of small numbers from 63 to 82 out of a max of 114
[08/17 18:07:33]  Verifer returned sat in 6.906908 secs.
[08/17 18:07:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   28371.549805   28371.449707  144.903076  28371.549805    0.300049  28371.449707        0.0    0.100098        0.100000     2.0     28371.449707            -1             -1
1   28371.749756   28371.649902  144.903109  28371.749756    0.300049  28371.649902        0.0    0.099854      -99.700016     1.0     28371.449707         False          False
2   28632.683105   28571.449772  144.903109  28632.683105  261.033203  28571.449772        0.0   61.233333       61.233333     1.0     28371.449707         False          False
3   28832.383105   28671.449772  144.903109  28832.383105  260.933333  28671.449772        0.0  160.933333      160.933333     1.0     28832.383105         False          False
4   28832.383105   28764.049561  144.903109  28832.383105  132.466667  28764.049561        0.0   68.333545       60.933333     2.0     28832.383105         False          False
5   28832.383105   28771.449772  183.969775  28832.383105   68.233333  28771.449772        0.0   60.933333        0.000000     3.0     28832.383105         False          False
6   28872.449772   28832.383105  243.028320  28872.449772  101.000000  28832.383105        0.0   40.066667       -0.874788     4.0     28832.383105         False           True
7   28913.849772   28873.324772  302.403076  28913.849772   81.466667  28873.324772        0.0   40.525000       -0.100033     1.0     28832.383105         False           True
8   28916.058105   28913.949951  302.403320  28916.058105   42.733333  28913.949951        0.0    2.108154      -97.891455     1.0     28832.383105         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=659593/4096.[0m
[08/17 18:07:33]  --------------------------------------------------------------------------------
[08/17 18:07:33]  Iteration: 249 (0 solution, 248 counterexamples)
[08/17 18:08:40]  Generator returned sat in 59.211869 secs.
[08/17 18:08:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:08:42]  Improved gap from 0.1 to 48.4375
[08/17 18:08:43]  Improved number of small numbers from 60 to 77 out of a max of 114
[08/17 18:08:43]  Verifer returned sat in 2.247776 secs.
[08/17 18:08:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   28121.909912   28121.810059  294.543076  28121.909912  200.199951  28121.810059        0.0    0.099854      -99.900039     9.0     28121.810059            -1             -1
1   28321.909912   28321.809951  294.543076  28321.909912  200.099854  28321.809951        0.0    0.099961        0.099961     1.0     28321.909912         False           True
2   28521.809951   28415.084951  294.543076  28521.809951  200.000000  28415.084951        0.1  106.625000       99.900000     1.0     28521.709951         False          False
3   28614.184951   28521.809951  294.543076  28614.184951  199.000000  28521.809951        0.1   92.275000       92.275000     1.0     28614.084951         False          False
4   28621.909951   28621.709951  294.543076  28621.909951  100.000000  28621.709951        0.1    0.100000        0.000000     1.0     28614.084951         False          False
5   28672.309951   28621.809951  341.618164  28672.309951   50.500000  28621.809951        0.1   50.400000       -2.524912     2.0     28614.084951         False          False
6   28723.272451   28674.734863  393.180576  28723.272451  101.362500  28674.734863        0.1   48.437588        0.000000     1.0     28723.172451          True           True
7   28726.016113   28723.172451  444.742920  28726.016113   51.181250  28723.172451        0.1    2.743662      -45.693994     2.0     28723.172451         False          False
8   28772.003701   28771.610107  444.743164  28772.003701   48.731250  28771.610107        0.1    0.293594      -99.706162     1.0     28723.172451         False           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=999/10.[0m
[08/17 18:08:44]  --------------------------------------------------------------------------------
[08/17 18:08:44]  Iteration: 250 (0 solution, 249 counterexamples)
[08/17 18:10:20]  Generator returned sat in 87.655247 secs.
[08/17 18:10:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:10:22]  Improved gap from 0.0 to 40.625
[08/17 18:10:23]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 18:10:23]  Verifer returned sat in 2.388504 secs.
[08/17 18:10:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   28118.620361   27918.620361  497.732910  28118.620361  200.000000  27918.620361        0.0  200.000000      100.000244     9.0     27918.620361            -1             -1
1   28118.620361   28077.995117  497.732910  28118.620361  199.900146  28077.995117        0.0   40.625244        0.000244     9.0     28118.620361         False           True
2   28277.794922   28218.620117  497.732910  28277.794922  199.799805  28218.620117        0.0   59.174805       59.174805     1.0     28277.794922         False           True
3   28476.853516   28318.620117  497.732910  28476.853516  258.233398  28318.620117        0.0  158.233398      158.233398     1.0     28277.794922         False          False
4   28476.853516   28411.445312  497.732910  28476.853516  129.616699  28411.445312        0.0   65.408203       58.233398     2.0     28277.794922         False          False
5   28476.853516   28418.620117  539.499512  28476.853516   65.308350  28418.620117        0.0   58.233398        0.000000     3.0     28277.794922         False          False
6   28520.620117   28476.853516  595.732666  28520.620117  102.000000  28476.853516        0.0   43.766602       -0.000244     4.0     28520.620117          True           True
7   28557.970215   28520.719971  655.008057  28557.970215   81.116699  28520.719971        0.0   37.250244       -3.374756     1.0     28520.620117         False           True
8   28561.778320   28561.344971  655.008057  28561.778320   41.058350  28561.344971        0.0    0.433350      -99.566650     1.0     28520.620117         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=475/3.[0m
[08/17 18:10:23]  --------------------------------------------------------------------------------
[08/17 18:10:23]  Iteration: 251 (0 solution, 250 counterexamples)
[08/17 18:12:03]  Generator returned sat in 92.166255 secs.
[08/17 18:12:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 18:12:08]  Improved gap from 39.79399108886719 to 40.625
[08/17 18:12:09]  Improved number of small numbers from 60 to 81 out of a max of 114
[08/17 18:12:09]  Verifer returned sat in 4.507593 secs.
[08/17 18:12:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   30599.530762   30499.530762  -11.208984  30599.530762    0.031006  30499.530762        0.0  100.000000       99.999792     4.0     30499.530762            -1             -1
1   30599.530762   30499.531006  -11.208822  30599.530762    0.031250  30499.531006        0.0   99.999756       -0.000046     4.0     30499.530762         False           True
2   30759.853760   30699.530807  -11.208822  30759.853760  260.322754  30699.530807        0.0   60.322952       60.322952     1.0     30499.530762          True           True
3   30959.822474   30799.530807  -11.208822  30959.822474  260.291667  30799.530807        0.0  160.291667      160.291667     1.0     30959.822474         False          False
4   30959.822474   30891.718506  -11.208822  30959.822474  132.145833  30891.718506        0.0   68.103968       60.291667     2.0     30959.822474         False          False
5   30959.822474   30899.530807   28.499512  30959.822474   68.072917  30899.530807        0.0   60.291667        0.000000     3.0     30959.822474         False          False
6   31001.030807   30959.822474   87.260010  31001.030807  101.500000  30959.822474        0.0   41.208333       -0.031169     4.0     30959.822474         False           True
7   31041.468307   31001.062057  146.634766  31041.468307   81.645833  31001.062057        0.0   40.406250       -0.218913     1.0     30959.822474         False           True
8   31043.884974   31041.687256  146.635010  31043.884974   42.822917  31041.687256        0.0    2.197718      -97.802002     1.0     30959.822474         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=656683/4096.[0m
[08/17 18:12:09]  --------------------------------------------------------------------------------
[08/17 18:12:09]  Iteration: 252 (0 solution, 251 counterexamples)
[08/17 18:14:01]  Generator returned sat in 103.394919 secs.
[08/17 18:14:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 18:14:02]  Improved gap from 0.00125 to 23.4375
[08/17 18:14:03]  Improved number of small numbers from 60 to 94 out of a max of 114
[08/17 18:14:03]  Verifer returned sat in 2.115213 secs.
[08/17 18:14:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   31042.412109   30765.949707   10.928955  31042.412109    0.100098  30765.949707        0.0  276.462402      176.462412     4.0     30765.949707            -1             -1
1   31042.612061   30965.949463   10.928955  31042.612061  276.662354  30965.949463        0.0   76.662598       76.662363     3.0     30765.949707         False          False
2   31042.612061   31042.511976   10.928955  31042.612061   76.562500  31042.511976        0.0    0.100085      -23.337637     2.0     31042.612061         False          False
3   31389.618643   31165.949463   10.928955  31389.618643  347.106667  31165.949463        0.0  223.669180      223.668945     1.0     31042.612061         False          False
4   31389.618643   31265.949476   10.928955  31389.618643  174.553333  31265.949476        0.0  123.669167      123.668945     2.0     31042.612061         False          False
5   31389.618643   31342.512207   10.928955  31389.618643   88.276667  31342.512207        0.0   47.106436       23.668945     3.0     31042.612061         False          False
6   31389.618643   31365.949707   87.260010  31389.618643   45.138333  31365.949707        0.0   23.668936        0.000000     4.0     31042.612061         False          False
7   31389.618643   31389.618643  163.590820  31389.618643   23.569167  31389.618643        0.0    0.000000      -23.669189     5.0     31042.612061         False          False
8   31513.287809   31413.287842  163.590820  31513.287809  123.669167  31413.287842        0.0   99.999967       -0.000023     1.0     31513.287809          True           True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=268523/1200.[0m
[08/17 18:14:04]  --------------------------------------------------------------------------------
[08/17 18:14:04]  Iteration: 253 (0 solution, 252 counterexamples)
[08/17 18:16:55]  Generator returned sat in 163.418179 secs.
[08/17 18:16:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:16:58]  Improved gap from 0.0 to 42.1875
[08/17 18:16:59]  Improved number of small numbers from 59 to 79 out of a max of 114
[08/17 18:16:59]  Verifer returned sat in 3.110385 secs.
[08/17 18:16:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   30869.311768   30711.599609   10.929176  30869.311768  200.099854  30711.599609        0.0  157.712158       57.712292     6.0     30711.599609            -1             -1
1   30911.599609   30869.412109   10.929176  30911.599609  200.000000  30869.412109        0.0   42.187500        0.000133     1.0     30911.599609         False           True
2   31011.699707   31011.599476   10.929176  31011.699707  142.287598  31011.599476        0.0    0.100231        0.100231     1.0     31011.699707         False          False
3   31267.249476   31097.499476   10.929176  31267.249476  255.650000  31097.499476        0.0  169.750000      155.650000     1.0     31011.699707         False          False
4   31267.249476   31202.487061   10.929176  31267.249476  128.325000  31202.487061        0.0   64.762415       55.650000     2.0     31011.699707         False          False
5   31267.249476   31211.599476   55.279176  31267.249476   64.662500  31211.599476        0.0   55.650000        0.000000     3.0     31011.699707         False          False
6   31310.099476   31267.249476  112.428955  31310.099476   98.500000  31267.249476        0.0   42.850000       -0.000221     4.0     31310.099476          True           True
7   31350.624476   31310.199476  170.141676  31350.624476   83.375000  31310.199476        0.0   40.425000       -1.762500     1.0     31310.099476         False           True
8   31352.386976   31352.386976  227.954102  31352.386976   42.187500  31352.386976        0.0    0.000000      -42.187575     1.0     31310.099476         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=637951/4096.[0m
[08/17 18:17:00]  --------------------------------------------------------------------------------
[08/17 18:17:00]  Iteration: 254 (0 solution, 253 counterexamples)
[08/17 18:17:31]  Generator returned sat in 23.229016 secs.
[08/17 18:17:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:17:36]  Improved gap from 41.687744140625 to 42.1875
[08/17 18:17:37]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 18:17:37]  Verifer returned sat in 4.849291 secs.
[08/17 18:17:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   29787.980469   29645.792969 -119.612305  29787.980469    0.100000  29645.792969        0.0  142.187500       57.712646     2.0     29645.792969            -1             -1
1   29788.180420   29788.080566 -119.612305  29788.180420  142.387451  29788.080566        0.0    0.099854      -42.087402     1.0     29645.792969         False          False
2   29930.368164   29930.267822 -119.612305  29930.368164  142.287598  29930.267822        0.0    0.100342        0.100342     1.0     29930.368164         False          False
3   30188.968018   30020.218018 -119.612305  30188.968018  258.700195  30020.218018        0.0  168.750000      158.700195     1.0     29930.368164         False          False
4   30188.968018   30123.442871 -119.612305  30188.968018  129.850098  30123.442871        0.0   65.525146       58.700195     2.0     29930.368164         False          False
5   30188.968018   30130.267822  -78.312500  30188.968018   65.425049  30130.267822        0.0   58.700195        0.000000     3.0     29930.368164         False          False
6   30229.267822   30188.968018  -20.500000  30229.267822   99.000000  30188.968018        0.0   40.299805       -1.887695     4.0     30229.267822          True           True
7   30272.343018   30231.155518   37.312500  30272.343018   83.375000  30231.155518        0.0   41.187500       -1.000000     1.0     30229.267822         False           True
8   30273.343018   30273.343018   37.312500  30273.343018   42.187500  30273.343018        0.0    0.000000     -100.000000     1.0     30229.267822         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=794/5.[0m
[08/17 18:17:37]  --------------------------------------------------------------------------------
[08/17 18:17:37]  Iteration: 255 (0 solution, 254 counterexamples)
[08/17 18:18:23]  Generator returned sat in 37.365583 secs.
[08/17 18:18:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:18:25]  Improved gap from 0.1998046875 to 48.4375
[08/17 18:18:26]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 18:18:26]  Verifer returned sat in 2.210182 secs.
[08/17 18:18:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   29598.280518   29473.280273  137.375244  29598.280518    0.100098  29473.280273   0.000000  125.000244      125.000244     2.0     29473.280273            -1             -1
1   29598.280518   29473.280518  137.375244  29598.280518    0.100098  29473.280518   0.000000  125.000000       25.000244     2.0     29473.280273         False          False
2   29673.280273   29573.280273  137.375244  29673.280273  199.999756  29573.280273   0.000000  100.000000        0.000000     3.0     29473.280273         False          False
3   29921.817627   29724.467773  137.375244  29921.817627  348.537354  29724.467773   0.099854  197.250000      148.437500     1.0     29473.280273         False          False
4   29921.817627   29873.180176  137.375244  29921.817627    1.000000  29873.180176   0.099854   48.537598       48.437500     2.0     29473.280273         False          False
5   29921.817627   29873.280273  188.937744  29921.817627    0.500000  29873.280273   0.099854   48.437500        0.000000     3.0     29473.280273         False          False
6   29921.817627   29921.717773  240.500244  29921.817627    0.500000  29921.717773   0.099854    0.000000      -48.437500     4.0     29473.280273         False          False
7   30018.692627   29970.155273  292.062744  30018.692627   96.875000  29970.155273   0.099854   48.437500        0.000000     1.0     30018.592773          True           True
8   30018.692627   30018.592773  292.062744  30018.692627    0.500000  30018.592773   0.099854    0.000000     -100.000000     2.0     30018.592773         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=2375/16.[0m
[08/17 18:18:26]  --------------------------------------------------------------------------------
[08/17 18:18:26]  Iteration: 256 (0 solution, 255 counterexamples)
[08/17 18:20:43]  Generator returned sat in 128.690916 secs.
[08/17 18:20:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:20:45]  Improved gap from 0.0 to 48.4375
[08/17 18:20:45]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/17 18:20:45]  Verifer returned sat in 1.630545 secs.
[08/17 18:20:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   29576.405273   29576.355469  241.625244  29576.405273    0.050049  29576.355469        0.0    0.049805       -0.050049     2.0     29576.355469            -1             -1
1   29624.842773   29576.455322  293.187744  29624.842773   48.487305  29576.455322        0.0   48.387451       -0.050049     1.0     29576.355469         False          False
2   29673.330078   29624.892822  344.750244  29673.330078   96.874756  29624.892822        0.0   48.437256       -0.000244     1.0     29576.355469         False          False
3   29921.767822   29715.342529  344.750244  29921.767822  296.875000  29715.342529        0.0  206.425293      148.437500     1.0     29576.355469         False          False
4   29921.767822   29873.280273  344.750244  29921.767822    0.500000  29873.280273        0.0   48.487549       48.437500     2.0     29576.355469         False          False
5   29921.767822   29873.330322  396.312744  29921.767822    0.500000  29873.330322        0.0   48.437500        0.000000     3.0     29576.355469         False          False
6   29921.767822   29921.767822  443.287842  29921.767822    0.500000  29921.767822        0.0    0.000000      -53.024902     4.0     29576.355469         False          False
7   30023.230469   29974.792725  494.850098  30023.230469  101.462646  29974.792725        0.0   48.437744        0.000000     1.0     30023.230469          True           True
8   30023.230469   30023.230469  494.850342  30023.230469    0.500000  30023.230469        0.0    0.000000      -99.999756     2.0     30023.230469         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=608205/4096.[0m
[08/17 18:20:46]  --------------------------------------------------------------------------------
[08/17 18:20:46]  Iteration: 257 (0 solution, 256 counterexamples)
[08/17 18:21:28]  Generator returned sat in 33.830343 secs.
[08/17 18:21:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:21:30]  Improved gap from 48.4375 to 48.4375
[08/17 18:21:30]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 18:21:30]  Verifer returned sat in 1.550556 secs.
[08/17 18:21:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   31083.515137   31032.002930  291.724854  31083.515137   51.662500  31032.002930        0.0   51.512207       51.512207     2.0     31032.002930            -1             -1
1   31083.615234   31083.565186  291.725098  31083.615234   51.612305  31083.565186        0.0    0.050049      -48.387451     1.0     31083.615234         False          False
2   31180.440186   31132.002686  343.287598  31180.440186   96.875000  31132.002686        0.0   48.437500        0.000000     1.0     31083.615234         False          False
3   31428.877686   31234.627686  343.287598  31428.877686  296.875000  31234.627686        0.0  194.250000      148.437500     1.0     31083.615234         False          False
4   31428.877686   31375.802734  343.287598  31428.877686    0.500000  31375.802734        0.0   53.074951       48.437500     2.0     31083.615234         False          False
5   31428.877686   31380.440186  394.850098  31428.877686    0.500000  31380.440186        0.0   48.437500        0.000000     3.0     31083.615234         False          False
6   31428.877686   31428.877686  446.412598  31428.877686    0.500000  31428.877686        0.0    0.000000      -48.437500     4.0     31083.615234         False          False
7   31525.752686   31477.315186  497.975098  31525.752686   96.875000  31477.315186        0.0   48.437500        0.000000     1.0     31525.752686          True           True
8   31525.752686   31525.752686  497.975098  31525.752686    0.500000  31525.752686        0.0    0.000000     -100.000000     2.0     31525.752686         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=11879/80.[0m
[08/17 18:21:31]  --------------------------------------------------------------------------------
[08/17 18:21:31]  Iteration: 258 (0 solution, 257 counterexamples)
[08/17 18:23:03]  Generator returned sat in 84.178561 secs.
[08/17 18:23:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 18:23:07]  Improved gap from 0.025 to 39.0625
[08/17 18:23:08]  Improved number of small numbers from 60 to 84 out of a max of 114
[08/17 18:23:08]  Verifer returned sat in 3.843110 secs.
[08/17 18:23:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   31039.572510   30878.535400  345.192383  31039.572510  161.037500  30878.535400        0.0  161.037109       61.037109     2.0     30878.535400            -1             -1
1   31039.572510   31039.472656  345.192549  31039.572510  160.937500  31039.472656        0.0    0.099854      -38.962725     2.0     31039.572510         False          False
2   31200.310303   31178.535234  345.192549  31200.310303  160.837646  31178.535234        0.0   21.775068       21.775068     1.0     31200.310303         False          False
3   31437.685234   31278.535234  345.192549  31437.685234  259.150000  31278.535234        0.0  159.150000      159.150000     1.0     31200.310303         False          False
4   31437.685234   31369.797607  345.192549  31437.685234  131.575000  31369.797607        0.0   67.887627       59.150000     2.0     31200.310303         False          False
5   31437.685234   31378.535234  386.042549  31437.685234   67.787500  31378.535234        0.0   59.150000        0.000000     3.0     31200.310303         False          False
6   31480.535234   31437.685234  443.092773  31480.535234  102.000000  31437.685234        0.0   42.850000       -0.099775     4.0     31480.535234          True           True
7   31519.260234   31480.635234  504.030029  31519.260234   81.575000  31480.635234        0.0   38.625000       -0.437520     1.0     31480.535234         False           True
8   31523.422734   31519.697754  504.030273  31523.422734   42.787500  31519.697754        0.0    3.724980      -96.274775     1.0     31480.535234         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=652287/4096.[0m
[08/17 18:23:08]  --------------------------------------------------------------------------------
[08/17 18:23:08]  Iteration: 259 (0 solution, 258 counterexamples)
[08/17 18:24:44]  Generator returned sat in 87.399348 secs.
[08/17 18:24:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:24:46]  Improved gap from 0.02496337890625 to 48.4375
[08/17 18:24:46]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 18:24:46]  Verifer returned sat in 1.706013 secs.
[08/17 18:24:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   31327.722900   31279.335205   44.392334  31327.722900   48.387451  31279.335205        0.0   48.387695       48.387695     1.0     31279.335205            -1             -1
1   31327.722900   31279.335205   95.954834  31327.722900   48.337500  31279.335205        0.0   48.387695       -0.049805     1.0     31327.722900         False          False
2   31627.772705   31327.772705   95.954834  31627.772705  348.437500  31327.772705        0.0  300.000000      200.000000     1.0     31327.722900         False          False
3   31676.210205   31479.960205   95.954834  31676.210205  348.437500  31479.960205        0.0  196.250000      148.437500     2.0     31327.722900         False          False
4   31676.210205   31627.772705   95.954834  31676.210205    0.500000  31627.772705        0.0   48.437500       48.437500     3.0     31327.722900         False          False
5   31676.210205   31627.772705  147.517334  31676.210205    0.500000  31627.772705        0.0   48.437500        0.000000     3.0     31327.722900         False          False
6   31676.210205   31676.210205  199.079834  31676.210205    0.500000  31676.210205        0.0    0.000000      -48.437500     4.0     31327.722900         False          False
7   31773.085205   31724.647705  250.642334  31773.085205   96.875000  31724.647705        0.0   48.437500        0.000000     1.0     31773.085205          True           True
8   31773.085205   31773.085205  250.642334  31773.085205    0.500000  31773.085205        0.0    0.000000     -100.000000     2.0     31773.085205         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=204851/1024.[0m
[08/17 18:24:47]  --------------------------------------------------------------------------------
[08/17 18:24:47]  Iteration: 260 (0 solution, 259 counterexamples)
[08/17 18:25:34]  Generator returned sat in 39.243905 secs.
[08/17 18:25:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:25:39]  Improved gap from 0.025 to 43.75
[08/17 18:25:40]  Improved number of small numbers from 68 to 87 out of a max of 114
[08/17 18:25:40]  Verifer returned sat in 4.850196 secs.
[08/17 18:25:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   31571.432617   31371.482910 -1473.045166  31571.432617  200.049805  31371.482910        0.0  199.949707       99.949912     2.0     31371.482910            -1             -1
1   31571.482910   31527.732910 -1473.045166  31571.482910  200.000000  31527.732910        0.0   43.750000        0.000205     2.0     31571.482910         False          False
2   31727.682861   31668.632705 -1473.045166  31727.682861  199.949951  31668.632705        0.0   59.050156       56.200156     1.0     31727.682861         False          False
3   31915.232705   31769.932705 -1473.045166  31915.232705  246.600000  31769.932705        0.0  145.300000      143.750000     1.0     31727.682861         False          False
4   31915.232705   31852.782471 -1473.045166  31915.232705  123.800000  31852.782471        0.0   62.450234       43.750000     2.0     31727.682861         False          False
5   31915.232705   31871.482705 -1416.795166  31915.232705   62.400000  31871.482705        0.0   43.750000        0.000000     3.0     31727.682861         False          False
6   31915.232705   31915.232705 -1360.545166  31915.232705   31.700000  31915.232705        0.0    0.000000      -43.750000     4.0     31727.682861         False          False
7   32001.732705   31958.982705 -1304.295166  32001.732705   86.500000  31958.982705        0.0   42.750000       -1.000000     1.0     32001.732705          True           True
8   32002.732705   32002.732705 -1304.295166  32002.732705   43.750000  32002.732705        0.0    0.000000     -100.000000     1.0     32001.732705         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=589005/4096.[0m
[08/17 18:25:40]  --------------------------------------------------------------------------------
[08/17 18:25:40]  Iteration: 261 (0 solution, 260 counterexamples)
[08/17 18:27:25]  Generator returned sat in 96.810022 secs.
[08/17 18:27:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:27:28]  Improved gap from 1.25 to 14.0625
[08/17 18:27:28]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/17 18:27:28]  Verifer returned sat in 2.008726 secs.
[08/17 18:27:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   31296.409180   31196.309082 -1197.871582  31296.409180    0.200195  31196.309082        0.0  100.100098      100.100098     2.0     31196.309082            -1             -1
1   31296.409180   31296.209229 -1197.871582  31296.409180    0.100098  31296.209229        0.0    0.199951        0.100098     2.0     31296.409180         False          False
2   31296.409180   31296.309326 -1197.871582  31296.409180    0.100000  31296.309326        0.0    0.099854      -99.899902     3.0     31296.409180         False          False
3   31715.309326   31496.309082 -1197.871582  31715.309326  419.000000  31496.309082        0.0  219.000244      219.000244     1.0     31296.409180         False          False
4   31715.309326   31596.309082 -1197.871582  31715.309326  210.000000  31596.309082        0.0  119.000244      119.000244     2.0     31296.409180         False          False
5   31715.309326   31678.796387 -1197.871582  31715.309326  105.500000  31678.796387        0.0   36.512939       19.000244     3.0     31296.409180         False          False
6   31732.046387   31715.408936 -1133.708984  31732.046387   53.250000  31715.408936        0.0   16.637451       -0.100098     1.0     31296.409180         False          False
7   31742.533936   31732.146484 -1047.771484  31742.533936   27.125000  31732.146484        0.0   10.387451       -3.675049     1.0     31296.409180         False          False
8   31746.208984   31746.208984 -1047.771484  31746.208984   14.062500  31746.208984        0.0    0.000000     -100.000000     1.0     31296.409180         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=897433/4096.[0m
[08/17 18:27:29]  --------------------------------------------------------------------------------
[08/17 18:27:29]  Iteration: 262 (0 solution, 261 counterexamples)
[08/17 18:28:17]  Generator returned sat in 40.503565 secs.
[08/17 18:28:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/17 18:28:20]  Improved gap from 0.499951171875 to 48.4375
[08/17 18:28:20]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/17 18:28:20]  Verifer returned sat in 2.268123 secs.
[08/17 18:28:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   31071.124023   31016.957275 -893.936279  31071.124023    0.050000  31016.957275   0.000000   54.166748       54.166748     2.0     31016.957275            -1             -1
1   31376.332275   31071.124023 -893.936279  31376.332275  359.375000  31071.124023  59.324951  245.883301      200.050049     2.0     31016.957275         False          False
2   31483.523926   31116.957520 -893.936279  31483.523926  353.074951  31116.957520  66.516602  300.049805      200.050049     2.0     31417.007324         False          False
3   31536.549072   31276.782471 -893.936279  31536.549072  353.074951  31276.782471  66.516602  193.250000      153.075195     3.0     31417.007324         False          False
4   31536.549072   31416.957275 -893.936279  31536.549072    0.500000  31416.957275  66.516602   53.075195       53.075195     3.0     31417.007324         False          False
5   31536.549072   31416.957275 -847.011475  31536.549072    0.500000  31416.957275  66.516602   53.075195        0.000000     3.0     31417.007324         False          False
6   31536.549072   31470.032471 -795.448975  31536.549072    0.500000  31470.032471  66.516602    0.000000      -48.437500     4.0     31417.007324         False          False
7   31633.424072   31518.469971 -743.886475  31633.424072   96.875000  31518.469971  66.516602   48.437500        0.000000     1.0     31417.007324         False           True
8   31633.424072   31566.907471 -743.886475  31633.424072    0.500000  31566.907471  66.516602    0.000000     -100.000000     2.0     31417.007324         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819405/4096.[0m
[08/17 18:28:21]  --------------------------------------------------------------------------------
[08/17 18:28:21]  Iteration: 263 (0 solution, 262 counterexamples)
[08/17 18:31:09]  Generator returned sat in 160.196581 secs.
[08/17 18:31:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 18:31:11]  Improved gap from 0.0 to 14.0625
[08/17 18:31:12]  Improved number of small numbers from 70 to 106 out of a max of 114
[08/17 18:31:12]  Verifer returned sat in 2.208107 secs.
[08/17 18:31:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   30839.574219   30639.624268 -893.936523  30839.574219    0.050049  30639.624268   0.000000  199.949951       99.949951     2.0     30639.624268            -1             -1
1   31039.624023   30839.624023 -893.936523  31039.624023  399.999756  30839.624023   0.049805  199.950195      199.949951     1.0     30639.624268         False          False
2   31039.624023   30839.624268 -893.936523  31039.624023  199.950195  30839.624268   0.049805  199.949951       99.949951     2.0     31039.574219         False          False
3   31237.774072   31039.624072 -893.936523  31237.774072  398.100000  31039.624072   0.049805  198.100195      198.100000     1.0     31039.574219         False          False
4   31239.723877   31138.599121 -893.936523  31239.723877  200.050000  31138.599121   0.049805  101.074951      100.049805     2.0     31039.574219         False          False
5   31239.723877   31188.111328 -893.936523  31239.723877  101.025000  31188.111328   0.049805   51.562744        0.049805     3.0     31039.574219         False          False
6   31239.723877   31239.624268 -807.999023  31239.723877   51.512500  31239.624268   0.049805    0.049805      -14.012695     3.0     31039.574219         False          False
7   31266.430322   31253.686768 -722.376709  31266.430322   26.756250  31253.686768   0.049805   12.693750       -1.683936     1.0     31039.574219         False          False
8   31268.114697   31268.064697 -722.376709  31268.114697   14.378125  31268.064697   0.049805    0.000195      -99.999561     1.0     31039.574219         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=818995/4096.[0m
[08/17 18:31:13]  --------------------------------------------------------------------------------
[08/17 18:31:13]  Iteration: 264 (0 solution, 263 counterexamples)
[08/17 18:31:31]  Generator returned unsat in 9.404550 secs.
[08/17 18:31:31]  [96mNo more solutions found[0m
[08/17 18:31:31]  Final solutions:
[08/17 18:31:31]  Took 8406.333191 secs.
