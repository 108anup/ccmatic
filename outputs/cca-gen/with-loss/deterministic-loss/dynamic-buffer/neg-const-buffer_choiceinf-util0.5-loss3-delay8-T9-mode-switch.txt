[08/10 14:12:50]  --------------------------------------------------------------------------------
[08/10 14:12:50]  Iteration: 1 (0 solution, 0 counterexamples)
[08/10 14:12:50]  Generator returned sat in 0.005741 secs.
[08/10 14:12:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:12:50]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 14:12:50]  Verifer returned sat in 0.268145 secs.
[08/10 14:12:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0       -1600.10       -1930.05   1930.05     -1600.10    329.95     -1930.05       0.00   329.95          329.95     8.0         -1930.05            -1             -1   False
1       -1600.10       -1830.05   1930.05     -1600.10    329.90     -1830.05       0.00   229.95          229.95     9.0         -1600.10         False          False   False
2           0.05       -1730.10   1930.05         0.05   1830.10     -1730.10       0.05  1730.10         1730.05     8.0         -1600.10         False           True   False
3           0.05       -1730.05   1930.05         0.05      0.05     -1730.05       0.05  1730.05         1630.05     9.0             0.00         False          False    True
4           0.05       -1600.05   1930.05         0.05    402.10     -1600.05       0.05  1600.05         1530.05     3.0             0.00         False           True   False
5           0.05       -1430.05   1930.05         0.05   1266.20     -1430.05       0.05  1430.05         1430.05     4.0             0.00         False          False   False
6        1704.50       -1330.05   1930.05      1704.50   3134.50     -1330.05    1304.50  1730.05         1730.05     5.0             0.00         False          False   False
7        7045.45       -1230.05   1930.05      7045.45   7071.00     -1230.05    6545.45  1730.05         1730.05     6.0             0.00         False          False    True
8       20199.40       -1130.05   1930.05     20199.40  14884.00     -1130.05   19599.40  1730.05         1730.05     7.0             0.00         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=34601/20.[0m
[08/10 14:12:51]  --------------------------------------------------------------------------------
[08/10 14:12:51]  Iteration: 2 (0 solution, 1 counterexamples)
[08/10 14:12:51]  Generator returned sat in 0.053281 secs.
[08/10 14:12:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:12:51]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 14:12:51]  Verifer returned sat in 0.481452 secs.
[08/10 14:12:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0      -3488.700       -3688.60   1930.05    -3488.700   329.950195     -3688.60       0.00   199.900         199.900     3.0        -3688.600            -1             -1    True
1      -3488.700       -3588.60   1930.05    -3488.700     0.050000     -3588.60       0.00    99.900          99.900     3.0        -3488.700         False          False    True
2      -2565.125       -3488.65   1930.05    -2565.125  1023.475000     -3488.65       0.00   923.525         923.475     1.0        -3488.700         False          False    True
3      -2565.125       -3488.60   1930.05    -2565.125     0.050000     -3488.60       0.00   923.475         823.475     2.0        -2565.125         False          False    True
4      -2565.125       -3372.60   1930.05    -2565.125   101.100000     -3372.60       0.00   807.475         723.475     3.0        -2565.125         False          False    True
5      -2565.125       -3288.60   1930.05    -2565.125   311.200000     -3288.60       0.00   723.475         623.475     4.0        -2565.125         False          False    True
6      -2565.125       -3188.60   1930.05    -2565.125   723.425000     -3188.60       0.00   623.475         523.475     5.0        -2565.125         False          False    True
7      -1590.750       -2988.60   1930.05    -1590.750  1597.850000     -2988.60       0.00  1397.850        1397.850     6.0        -2565.125         False          False    True
8        400.100       -2888.60   1930.05      400.100  3388.700000     -2888.60    1688.65  1600.050        1600.050     7.0        -2565.125         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=32001/20.[0m
[08/10 14:12:52]  --------------------------------------------------------------------------------
[08/10 14:12:52]  Iteration: 3 (0 solution, 2 counterexamples)
[08/10 14:12:52]  Generator returned sat in 0.187888 secs.
[08/10 14:12:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:12:52]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 14:12:52]  Verifer returned sat in 0.245788 secs.
[08/10 14:12:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3488.699951       -3688.60   1930.05 -3488.699951   329.950195     -3688.60       0.00   199.900049      199.900049     3.0     -3688.600000            -1             -1    True
1   -3488.699951       -3588.60   1930.05 -3488.699951     0.049805     -3588.60       0.00    99.900049       99.900049     3.0     -3488.699951         False          False    True
2   -2565.125000       -3488.65   1930.05 -2565.125000  1023.475000     -3488.65       0.00   923.525000      923.475000     1.0     -3488.699951         False          False    True
3   -2565.125000       -3488.60   1930.05 -2565.125000    89.115625     -3488.60       0.00   923.475000      823.475000     2.0     -2565.125000         False          False    True
4   -2565.125000       -3372.60   1930.05 -2565.125000   179.731250     -3372.60       0.00   807.475000      723.475000     3.0     -2565.125000         False          False    True
5   -2565.125000       -3288.60   1930.05 -2565.125000   360.962500     -3288.60       0.00   723.475000      623.475000     4.0     -2565.125000         False          False    True
6   -2565.125000       -3188.60   1930.05 -2565.125000   723.425000     -3188.60       0.00   623.475000      523.475000     5.0     -2565.125000         False          False    True
7   -1740.250000       -2988.60   1930.05 -1740.250000  1448.350000     -2988.60       0.00  1248.350000     1248.350000     6.0     -2565.125000         False          False    True
8     -90.400000       -2888.60   1930.05   -90.400000  2898.200000     -2888.60    1198.15  1600.050000     1600.050000     7.0     -2565.125000         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=32001/20.[0m
[08/10 14:12:53]  --------------------------------------------------------------------------------
[08/10 14:12:53]  Iteration: 4 (0 solution, 3 counterexamples)
[08/10 14:12:53]  Generator returned sat in 0.058964 secs.
[08/10 14:12:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:12:53]  Improved gap from 1/600 to 0
[08/10 14:12:54]  Improved number of small numbers from 66 to 86 out of a max of 114
[08/10 14:12:54]  Verifer returned sat in 0.724576 secs.
[08/10 14:12:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3488.700439   -3688.698730  1930.148529 -3488.700439  329.950195 -3688.698730        0.0  199.998291      199.998089     2.0     -3688.698730            -1             -1    True
1   -3488.700439   -3588.698529  1930.148529 -3488.700439    0.049316 -3588.698529        0.0   99.998089       99.998089     2.0     -3488.700439         False          False    True
2   -3388.698529   -3488.698730  1930.148529 -3388.698529  200.000000 -3488.698730        0.0  100.000202      100.000000     1.0     -3488.700439         False          False    True
3   -3388.697021   -3389.190186  1930.148529 -3388.697021  100.001709 -3389.190186        0.0    0.493164        0.001507     2.0     -3388.697021         False          False    True
4   -3388.690186   -3388.698529  2030.138672 -3388.690186    0.500000 -3388.698529        0.0    0.008343       -0.001514     3.0     -3388.697021         False          False    True
5   -3388.688529   -3388.688529  2130.138529 -3388.688529    0.010000 -3388.688529        0.0    0.000000        0.000000     1.0     -3388.697021         False           True   False
6   -3388.678529   -3388.688529  2230.128529 -3388.678529    0.010000 -3388.688529        0.0    0.010000        0.000000     1.0     -3388.697021         False          False   False
7   -3388.678529   -3388.678529  2330.118652 -3388.678529    0.010000 -3388.678529        0.0    0.000000       -0.009876     2.0     -3388.697021         False          False   False
8   -3388.668529   -3388.668529  2430.118408 -3388.668529    0.010000 -3388.668529        0.0    0.000000       -0.000120     1.0     -3388.697021         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=60001/600.[0m
[08/10 14:12:55]  --------------------------------------------------------------------------------
[08/10 14:12:55]  Iteration: 5 (0 solution, 4 counterexamples)
[08/10 14:12:55]  Generator returned sat in 0.058625 secs.
[08/10 14:12:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:12:55]  Improved gap from 0 to 0
[08/10 14:12:56]  Improved number of small numbers from 64 to 97 out of a max of 114
[08/10 14:12:56]  Verifer returned sat in 1.445224 secs.
[08/10 14:12:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3986.651855   -4186.650391  2030.138672 -3986.651855  329.949951 -4186.650391        0.0  199.998535      199.998340     5.0     -4186.650391            -1             -1     -1
1   -3986.651855   -4086.650195  2030.138672 -3986.651855    0.001667 -4086.650195        0.0   99.998340       99.998340     5.0     -3986.651855         False           True  False
2   -3686.646862   -3986.651855  2030.138672 -3686.646862  400.003333 -3986.651855      200.0  100.004993      100.003333     6.0     -3986.651855         False           True  False
3   -3586.648682   -3886.650391  2030.138672 -3586.648682  200.003174 -3886.650391      200.0  100.001709      100.001514     2.0     -3786.648682         False           True   True
4   -3586.648682   -3886.645020  2030.138672 -3586.648682    1.000000 -3886.645020      200.0   99.996338        0.001514     2.0     -3786.648682         False          False   True
5   -3586.648682   -3786.650195  2130.136963 -3586.648682    1.000000 -3786.650195      200.0    0.001514       -0.000195     3.0     -3786.648682         False          False   True
6   -3586.640195   -3786.646862  2230.127197 -3586.640195    0.010000 -3786.646862      200.0    0.006667       -0.001475     1.0     -3786.648682         False           True  False
7   -3586.636862   -3786.638529  2330.125244 -3586.636862    0.010000 -3786.638529      200.0    0.001667       -0.000094     1.0     -3786.648682         False          False  False
8   -3586.628529   -3786.635254  2430.116943 -3586.628529    0.010000 -3786.635254      200.0    0.006725       -0.000062     1.0     -3786.648682         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=30001/300.[0m
[08/10 14:12:57]  --------------------------------------------------------------------------------
[08/10 14:12:57]  Iteration: 6 (0 solution, 5 counterexamples)
[08/10 14:12:57]  Generator returned sat in 0.210827 secs.
[08/10 14:12:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:00]  Improved gap from 1/2400 to 23.4375
[08/10 14:13:01]  Improved number of small numbers from 67 to 79 out of a max of 114
[08/10 14:13:01]  Verifer returned sat in 3.256759 secs.
[08/10 14:13:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -11365.961426  -11428.147973  1915.765339 -11365.961426   62.188965 -11428.147973     0.0000  62.186547       62.186547     2.0    -11428.147973            -1             -1   False
1  -11365.958806  -11428.147949  1953.576172 -11365.958806   62.189167 -11428.147949     0.0000  62.189143        0.000000     2.0    -11428.147973         False          False   False
2  -11342.523682  -11365.958806  2030.138672 -11342.523682   85.624268 -11365.958806     0.0000  23.435125       -0.002375     2.0    -11428.147973         False          False   False
3  -11305.083806  -11342.521306  2092.701172 -11305.083806   60.875000 -11342.521306     0.0000  37.437500        0.000000     1.0    -11305.083806         False          False   False
4  -11181.643806  -11205.086182  2092.701172 -11181.643806  160.877500 -11205.086182     0.0025  23.439875       23.437500     1.0    -11305.083806         False          False   False
5  -11181.643806  -11205.083806  2169.263672 -11181.643806    0.010000 -11205.083806     0.0025  23.437500        0.000000     2.0    -11305.083806         False          False    True
6  -11181.643806  -11181.646306  2245.826172 -11181.643806    0.010000 -11181.646306     0.0025   0.000000      -23.437500     3.0    -11305.083806         False          False    True
7  -10938.326306  -11058.208984  2245.826172 -10938.326306  243.317500 -11058.208984    96.4450  23.437678       23.437500     1.0    -11034.771306          True           True   False
8  -10938.326306  -11058.206299  2245.826172 -10938.326306    0.010000 -11058.206299    96.4450  23.434992      -76.562500     2.0    -11034.771306         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/10 14:13:01]  --------------------------------------------------------------------------------
[08/10 14:13:01]  Iteration: 7 (0 solution, 6 counterexamples)
[08/10 14:13:02]  Generator returned sat in 0.446907 secs.
[08/10 14:13:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:05]  Improved gap from 0 to 23.4375
[08/10 14:13:06]  Improved number of small numbers from 59 to 75 out of a max of 114
[08/10 14:13:06]  Verifer returned sat in 3.894971 secs.
[08/10 14:13:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -9072.912598   -9164.110056  1853.561279 -9072.912598   91.247314 -9164.110056     0.0000   91.197459       27.457566     2.0     -9164.110056            -1             -1   False
1   -9072.912598   -9100.370117  1926.103516 -9072.912598   91.197266 -9100.370117     0.0000   27.457520       -0.000197     2.0     -9072.912598         False          False   False
2   -9009.222656   -9009.272556  1926.103672 -9009.222656   91.147461 -9009.272556     0.0000    0.049900      -36.310100     1.0     -9009.222656         False          False   False
3   -8972.862556   -8972.912556  1926.103672 -8972.862556   36.410000 -8972.912556     0.0000    0.050000      -99.950000     1.0     -8972.862556         False          False   False
4   -8570.312556   -8772.912556  1926.103672 -8570.312556  402.600000 -8772.912556   179.1625   23.437500       23.437500     1.0     -8972.862556         False          False   False
5   -8392.950056   -8749.425293  1926.103672 -8392.950056  200.800000 -8749.425293   256.5250   99.950237       23.437500     1.0     -8972.862556         False          False    True
6   -8392.950056   -8672.912556  2002.666172 -8392.950056   99.900000 -8672.912556   256.5250   23.437500        0.000000     2.0     -8972.862556         False          False    True
7   -8392.950056   -8649.475056  2076.153672 -8392.950056    1.500000 -8649.475056   256.5250    0.000000      -26.512500     3.0     -8972.862556         False          False    True
8   -8143.325056   -8622.962402  2076.153672 -8143.325056  249.625000 -8622.962402   356.2000  123.437346       23.437500     1.0     -8499.525056          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=375/16.[0m
[08/10 14:13:06]  --------------------------------------------------------------------------------
[08/10 14:13:06]  Iteration: 8 (0 solution, 7 counterexamples)
[08/10 14:13:07]  Generator returned sat in 0.225615 secs.
[08/10 14:13:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:09]  Improved gap from 0 to 23.4375
[08/10 14:13:10]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 14:13:10]  Verifer returned sat in 3.468009 secs.
[08/10 14:13:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -9149.420410   -9249.419056  1772.978672 -9149.420410    0.001250 -9249.419056    0.00000   99.998646       99.998646     2.0     -9249.419056            -1             -1   False
1   -9149.412806   -9172.854004  1772.978672 -9149.412806  100.006250 -9172.854004    0.00000   23.441197        0.006250     3.0     -9249.419056         False          False   False
2   -9149.412806   -9149.419056  1849.541172 -9149.412806   23.440186 -9149.419056    0.00000    0.006250      -23.431250     2.0     -9149.412806          True           True   False
3   -9125.980306   -9125.981556  1926.103672 -9125.980306   23.438750 -9125.981556    0.00000    0.001250      -23.436250     1.0     -9125.980306         False          False   False
4   -8880.106556   -9002.547806  1926.103672 -8880.106556  245.875000 -9002.547806  122.43000    0.011250        0.007500     1.0     -9125.980306         False          False   False
5   -8880.106556   -9002.544056  2002.666172 -8880.106556    0.010000 -9002.544056  122.43000    0.007500      -23.430000     2.0     -9125.980306         False          False    True
6   -8661.796556   -8879.106689  2002.666172 -8661.796556  218.317500 -8879.106689  217.30250    0.007633        0.007500     1.0     -9125.980306         False          False    True
7   -8661.794189   -8879.097806  2076.108672 -8661.794189    0.010000 -8879.097806  217.30250    0.001117      -26.547633     1.0     -9125.980306         False          False    True
8   -8478.615306   -8852.548828  2076.108672 -8478.615306  183.180000 -8852.548828  273.92625  100.007272        0.007500     1.0     -9125.980306         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/400.[0m
[08/10 14:13:11]  --------------------------------------------------------------------------------
[08/10 14:13:11]  Iteration: 9 (0 solution, 8 counterexamples)
[08/10 14:13:12]  Generator returned sat in 0.914505 secs.
[08/10 14:13:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:13]  Improved gap from 0 to 3.125
[08/10 14:13:14]  Improved number of small numbers from 59 to 77 out of a max of 114
[08/10 14:13:14]  Verifer returned sat in 2.056726 secs.
[08/10 14:13:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -9479.306396   -9642.256592  2165.616172 -9479.306396    0.099854 -9642.256592        0.0  162.950195      162.750160     2.0     -9642.256592            -1             -1    True
1   -9479.206787   -9642.056396  2165.616172 -9479.206787  163.049805 -9642.056396        0.0  162.849609       62.849769     2.0     -9642.256592         False          False    True
2   -9479.106445   -9479.106556  2165.616172 -9479.106445  162.949951 -9479.106556        0.0    0.000111      -37.049889     1.0     -9479.106445         False          False    True
3   -9342.056556   -9345.181556  2165.616172 -9342.056556  137.050000 -9345.181556        0.0    3.125000        0.000000     1.0     -9342.056556         False          False    True
4   -9139.606556   -9242.056641  2165.616172 -9139.606556  205.575000 -9242.056641        0.1  102.350084      102.350000     1.0     -9342.056556         False          False    True
5   -9139.606556   -9142.056556  2165.616172 -9139.606556    1.500000 -9142.056556        0.1    2.350000        2.350000     2.0     -9342.056556         False          False    True
6   -9139.606556   -9142.056556  2262.491172 -9139.606556    2.250000 -9142.056556        0.1    2.350000       -0.775000     2.0     -9342.056556         False          False    True
7   -9138.581556   -9138.931556  2359.366172 -9138.581556    3.375000 -9138.931556        0.1    0.250000       -2.875000     1.0     -9342.056556         False          False    True
8   -9133.769056   -9135.806396  2359.366211 -9133.769056    5.062500 -9135.806396        0.1    1.937340      -98.062461     1.0     -9342.056556         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2047/20.[0m
[08/10 14:13:15]  --------------------------------------------------------------------------------
[08/10 14:13:15]  Iteration: 10 (0 solution, 9 counterexamples)
[08/10 14:13:15]  Generator returned sat in 0.160285 secs.
[08/10 14:13:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:17]  Improved number of small numbers from 58 to 62 out of a max of 113
[08/10 14:13:17]  Verifer returned sat in 1.808217 secs.
[08/10 14:13:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9442.056641   -9642.106556  2165.616172 -9442.056641   200.100 -9642.106556      0.050  199.999916      199.949916     9.0     -9642.106556            -1             -1     -1
1   -9441.956556   -9642.056556  2165.616172 -9441.956556   200.100 -9642.056556      0.050  200.050000      100.050000     2.0     -9642.106556         False           True   True
2   -9441.906556   -9442.056556  2165.616172 -9441.906556   200.100 -9442.056556      0.050    0.100000        0.100000     2.0     -9642.106556         False          False   True
3   -9441.906556   -9442.056556  2165.616172 -9441.906556     0.050 -9442.056556      0.050    0.100000      -99.900000     2.0     -9441.956556         False          False   True
4   -9141.856556   -9298.056556  2165.616172 -9141.856556   300.150 -9298.056556      0.100  156.100000      100.100000     1.0     -9441.956556         False          False   True
5   -8780.456556   -9171.056556  2165.616172 -8780.456556   517.500 -9171.056556    261.500  129.100000      100.100000     2.0     -9441.956556         False          False   True
6   -8501.556556   -9141.906556  2165.616172 -8501.556556   408.000 -9141.906556    440.400  199.950000      100.100000     2.0     -9441.956556         False          False   True
7   -8249.781556   -9042.056556  2165.616172 -8249.781556   451.725 -9042.056556    592.175  200.100000      100.100000     3.0     -9441.956556         False          False   True
8   -8064.381556   -8842.056641  2165.616172 -8064.381556   385.500 -8842.056641    677.575  100.100084      100.100000     2.0     -8741.956556          True           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=1001/10.[0m
[08/10 14:13:18]  --------------------------------------------------------------------------------
[08/10 14:13:18]  Iteration: 11 (0 solution, 10 counterexamples)
[08/10 14:13:19]  Generator returned sat in 0.758341 secs.
[08/10 14:13:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:19]  Improved gap from 0 to 100
[08/10 14:13:19]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 14:13:19]  Verifer returned sat in 0.697875 secs.
[08/10 14:13:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9140.981689   -9541.994141  2465.596191 -9140.981689     0.012451 -9541.994141   0.050049   400.962402      300.962402     9.0     -9541.994141            -1             -1     -1
1   -9140.981689   -9441.994141  2465.596191 -9140.981689     0.012451 -9441.994141   0.050049   300.962402      200.962402     7.0     -9541.994141         False           True   True
2   -7541.906738   -9241.994141  2465.596191 -7541.906738  1900.037354 -9241.994141   0.062500  1700.024902     1700.024902     7.0     -9541.994141          True           True  False
3   -7541.906738   -9141.994141  2465.596191 -7541.906738   797.531250 -9141.994141   0.062500  1600.024902     1600.024902     7.0     -7541.969238          True           True   True
4   -7541.906738   -9141.019043  2465.596191 -7541.906738   998.031250 -9141.019043   0.062500  1599.049805     1500.024902     3.0     -7541.969238         False           True  False
5   -7541.906738   -8942.006348  2465.596191 -7541.906738  1149.018799 -8942.006348   0.062500  1400.037109     1400.024902     4.0     -7541.969238         False          False  False
6   -7541.906738   -8941.994141  2465.596191 -7541.906738  1299.512695 -8941.994141   0.062500  1400.024902     1300.024902     5.0     -7541.969238         False          False  False
7   -7541.906738   -8741.994141  2465.596191 -7541.906738  1400.012695 -8741.994141   0.062500  1200.024902     1200.024902     6.0     -7541.969238         False          False  False
8   -7141.906494   -8741.981689  2465.596191 -7141.906494  1600.025146 -8741.981689   0.062500  1600.012695     1500.025146     7.0     -7541.969238         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3481651/2048.[0m
[08/10 14:13:20]  --------------------------------------------------------------------------------
[08/10 14:13:20]  Iteration: 12 (0 solution, 11 counterexamples)
[08/10 14:13:21]  Generator returned sat in 0.920800 secs.
[08/10 14:13:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:21]  Improved gap from 1/300 to 100
[08/10 14:13:22]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/10 14:13:22]  Verifer returned sat in 0.443131 secs.
[08/10 14:13:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9241.950439   -9541.994141  2465.596191 -9241.950439     0.006104 -9541.994141     0.050049   299.993652      199.993652     3.0     -9541.994141            -1             -1     -1
1   -9241.950439   -9341.994141  2465.596191 -9241.950439     0.006104 -9341.994141     0.050049    99.993652       99.993652     3.0     -9541.994141         False           True   True
2   -7441.937744   -9241.994141  2465.596191 -7441.937744  1900.006348 -9241.994141     0.050049  1800.006348     1800.006348     1.0     -9541.994141          True           True  False
3   -7441.937744   -9141.994141  2465.596191 -7441.937744   474.074074 -9141.994141     0.050049  1700.006348     1700.006348     2.0     -7441.987793         False          False  False
4   -7441.937744   -9042.000244  2465.596191 -7441.937744   711.111111 -9042.000244     0.050049  1600.012451     1600.006348     3.0     -7441.987793         False           True  False
5   -7441.937744   -9041.994141  2465.596191 -7441.937744  1066.666667 -9041.994141     0.050049  1600.006348     1500.006348     4.0     -7441.987793         False           True  False
6   -7441.937744   -8841.994385  2465.596191 -7441.937744  1600.000000 -8841.994385     0.050049  1400.006592     1400.006348     5.0     -7441.987793         False           True  False
7   -6441.944336   -8741.994385  2465.596191 -6441.944336  2400.000000 -8741.994385     0.050049  2300.000000     2299.999756     6.0     -7441.987793         False           True  False
8   -5141.944336   -8741.994141  2465.596191 -5141.944336  3600.000000 -8741.994141  1200.049805  2400.000000     2300.000000     7.0     -7441.987793         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2300.[0m
[08/10 14:13:22]  --------------------------------------------------------------------------------
[08/10 14:13:22]  Iteration: 13 (0 solution, 12 counterexamples)
[08/10 14:13:25]  Generator returned sat in 2.039692 secs.
[08/10 14:13:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:25]  Improved gap from 25/16384 to 23.4375
[08/10 14:13:26]  Improved number of small numbers from 85 to 90 out of a max of 114
[08/10 14:13:26]  Verifer returned sat in 0.943644 secs.
[08/10 14:13:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -9341.944336   -9365.481641  2389.083496 -9341.944336    0.049805 -9365.481641    0.050049   23.487256       23.487061     2.0     -9365.481641            -1             -1   False
1   -9341.944336   -9365.431641  2465.596191 -9341.944336    0.050049 -9365.431641    0.050049   23.437256       -0.000244     2.0     -9365.481641         False          False   False
2   -9218.556641   -9341.994141  2465.596191 -9218.556641  146.824951 -9341.994141    0.050049  123.387451       23.387451     1.0     -9365.481641         False          False   False
3   -9195.119141   -9218.556641  2465.596191 -9195.119141  146.824951 -9218.556641    0.050049   23.387451      -53.175049     1.0     -9365.481641         False          False   False
4   -9000.119092   -9045.069336  2465.596191 -9000.119092  218.387500 -9045.069336   18.437549   26.512695       23.437500     1.0     -9365.481641         False          False   False
5   -9000.119092   -9041.994141  2542.158691 -9000.119092    1.500000 -9041.994141   18.437549   23.437500        0.000000     2.0     -9365.481641         False          False    True
6   -9000.119092   -9018.556641  2618.721191 -9000.119092    1.000000 -9018.556641   18.437549    0.000000      -23.437500     3.0     -9365.481641         False          False    True
7   -8702.119092   -8895.119385  2618.721191 -8702.119092  298.000000 -8895.119385  169.562549   23.437744       23.437500     1.0     -8871.681641          True           True   False
8   -8702.119092   -8895.119141  2618.721191 -8702.119092    1.500000 -8895.119141  169.562549   23.437500      -76.562500     2.0     -8871.681641         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/10 14:13:26]  --------------------------------------------------------------------------------
[08/10 14:13:26]  Iteration: 14 (0 solution, 13 counterexamples)
[08/10 14:13:27]  Generator returned sat in 0.180886 secs.
[08/10 14:13:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:27]  Improved gap from 0 to 23.4375
[08/10 14:13:28]  Improved number of small numbers from 83 to 114 out of a max of 114
[08/10 14:13:28]  Verifer returned sat in 0.736642 secs.
[08/10 14:13:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9102.156738   -9328.869385  2465.596191 -9102.156738  226.662598 -9328.869385   0.050049  226.662598      226.412598     3.0     -9328.869385            -1             -1     -1
1   -9102.156738   -9328.619385  2465.596191 -9102.156738  226.612305 -9328.619385   0.050049  226.412598      126.412598     4.0     -9102.206787         False          False   True
2   -9102.007080   -9128.619629  2465.596191 -9102.007080  226.562256 -9128.619629   0.050049   26.562500       26.562256     3.0     -9102.057129         False           True  False
3   -8902.057129   -9070.123779  2465.596191 -8902.057129  226.512451 -9070.123779   0.099854  167.966797      126.462402     1.0     -8902.156982         False          False  False
4   -8902.057129   -8928.669189  2465.596191 -8902.057129    1.500000 -8928.669189   0.099854   26.512207       26.462402     2.0     -8902.156982         False          False   True
5   -8902.057129   -8928.619385  2539.133789 -8902.057129    1.000000 -8928.619385   0.099854   26.462402        0.000000     3.0     -8902.156982         False          False   True
6   -8902.057129   -8902.156982  2615.696045 -8902.057129    1.000000 -8902.156982   0.099854    0.000000      -23.437744     4.0     -8902.156982         False          False   True
7   -8652.106934   -8878.719238  2615.696045 -8652.106934  249.950195 -8878.719238   0.149902  226.462402      126.462402     1.0     -8902.156982         False           True  False
8   -8652.106934   -8778.719238  2615.696045 -8652.106934    1.500000 -8778.719238   0.149902  126.462402       26.462402     2.0     -8902.156982         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=258995/2048.[0m
[08/10 14:13:28]  --------------------------------------------------------------------------------
[08/10 14:13:28]  Iteration: 15 (0 solution, 14 counterexamples)
[08/10 14:13:29]  Generator returned sat in 0.463129 secs.
[08/10 14:13:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:30]  Improved gap from 1/1200 to 0
[08/10 14:13:30]  Improved number of small numbers from 79 to 114 out of a max of 114
[08/10 14:13:30]  Verifer returned sat in 0.866506 secs.
[08/10 14:13:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -9128.644287   -9428.619385  2465.596191 -9128.644287    0.025000 -9428.619385   0.000000  299.975098      199.975098     2.0     -9428.619385            -1             -1    True
1   -9128.619385   -9228.619629  2465.596191 -9128.619385  300.000000 -9228.619629   0.000000  100.000244      100.000000     2.0     -9428.619385         False          False    True
2   -9028.569580   -9228.619385  2465.596191 -9028.569580  200.050049 -9228.619385   0.024902  200.024902      100.024902     3.0     -9028.594482         False          False    True
3   -9027.594482   -9128.619385  2465.596191 -9027.594482  201.000000 -9128.619385   0.024902  101.000000        1.000000     3.0     -9028.594482         False           True    True
4   -9027.594482   -9028.569336  2564.596191 -9027.594482    1.000000 -9028.569336   0.024902    0.949951        0.000000     2.0     -9028.594482         False           True   False
5   -9027.544434   -9027.594238  2664.546143 -9027.544434    1.000000 -9027.594238   0.024902    0.024902        0.000000     1.0     -9028.594482         False          False   False
6   -9026.569336   -9026.619385  2763.571045 -9026.569336    1.000000 -9026.619385   0.024902    0.025146        0.000000     1.0     -9028.594482         False          False   False
7   -9025.594482   -9026.569336  2862.546143 -9025.594482    1.000000 -9026.569336   0.024902    0.949951       -0.050049     1.0     -9028.594482         False          False   False
8   -9025.544434   -9025.569336  2962.520996 -9025.544434    1.000000 -9025.569336   0.024902    0.000000       -0.025146     1.0     -9028.594482         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=204851/2048.[0m
[08/10 14:13:31]  --------------------------------------------------------------------------------
[08/10 14:13:31]  Iteration: 16 (0 solution, 15 counterexamples)
[08/10 14:13:32]  Generator returned sat in 1.088029 secs.
[08/10 14:13:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:34]  Improved gap from 11/1200 to 100
[08/10 14:13:35]  Improved number of small numbers from 60 to 66 out of a max of 114
[08/10 14:13:35]  Verifer returned sat in 2.607322 secs.
[08/10 14:13:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -12636.395508  -12636.495545  5673.472351 -12636.395508     0.050000 -12636.495545     0.05000     0.050037      -99.949963     1.0    -12636.495545            -1             -1     -1
1  -12436.395545  -12436.495545  5673.472351 -12436.395545   200.050000 -12436.495545     0.05000     0.050000        0.050000     1.0    -12636.495545         False          False   True
2  -12236.445545  -12430.495545  5673.472351 -12236.445545   200.000000 -12430.495545     0.05000   194.000000      100.000000     1.0    -12236.495545         False          False   True
3  -11630.745545  -12236.495545  5673.472351 -11630.745545   799.700000 -12236.495545     0.05000   605.700000      605.700000     2.0    -12236.495545         False          False   True
4  -10636.395545  -12236.495545  5673.472351 -10636.395545  1600.050000 -12236.495545     0.05000  1600.050000     1500.050000     2.0    -12236.495545         False          False   True
5   -9635.870545  -12136.495545  5673.472351  -9635.870545  2600.575000 -12136.495545     0.05000  2500.575000     2400.575000     3.0    -12236.495545         False          False   True
6   -7941.083045  -11936.495545  5673.472351  -7941.083045  4195.362500 -11936.495545     0.05000  3995.362500     3995.362500     4.0    -12236.495545         False          False   True
7   -5342.901795  -11836.495605  5673.472351  -5342.901795  6593.543750 -11836.495605  2498.18125  3995.412561     3995.412500     5.0    -12236.495545         False          False   True
8   -5342.901795  -11836.445312  5673.472351  -5342.901795  3297.771875 -11836.445312  2498.18125  3995.362268     3895.412500     6.0     -7841.083045          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=319633/80.[0m
[08/10 14:13:35]  --------------------------------------------------------------------------------
[08/10 14:13:35]  Iteration: 17 (0 solution, 16 counterexamples)
[08/10 14:13:37]  Generator returned sat in 0.819290 secs.
[08/10 14:13:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:37]  Improved gap from 0 to 100
[08/10 14:13:38]  Improved number of small numbers from 60 to 62 out of a max of 114
[08/10 14:13:38]  Verifer returned sat in 1.287703 secs.
[08/10 14:13:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4548.089111  -13936.395313  7073.372119 -4548.089111     0.050049 -13936.395313  9288.356018    99.950183       99.950183     3.0    -13936.395313            -1             -1   False
1   -4448.089295  -13836.395313  7073.372119 -4448.089295   199.950000 -13836.395313  9288.356018    99.950000       99.950000     1.0    -13936.395313         False          False   False
2   -2747.989295  -13736.395313  7073.372119 -2747.989295  1800.050000 -13736.395313  9288.356018  1700.050000     1700.050000     1.0    -13936.395313         False          False   False
3   -2747.989295  -13636.445557  7073.372119 -2747.989295   476.918519 -13636.445557  9288.356018  1600.100244     1600.050000     2.0    -12036.345312         False          False   False
4   -2747.989295  -13636.395313  7073.372119 -2747.989295   713.377778 -13636.395313  9288.356018  1600.050000     1500.050000     3.0    -12036.345312         False          False   False
5   -2747.989295  -13436.445312  7073.372119 -2747.989295  1068.066667 -13436.445312  9288.356018  1400.100000     1400.050000     4.0    -12036.345312         False          False   False
6   -2547.989295  -13436.395313  7073.372119 -2547.989295  1600.100000 -13436.395313  9288.356018  1600.050000     1500.050000     5.0    -12036.345312         False           True   False
7   -1749.889295  -13236.395313  7073.372119 -1749.889295  2398.150000 -13236.395313  9288.356018  2198.150000     2198.150000     6.0    -12036.345312         False           True   False
8    -352.814295  -13136.395508  7073.372119  -352.814295  3595.225000 -13136.395508  9288.406018  3495.175195     3495.175000     7.0    -12036.345312         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=139807/40.[0m
[08/10 14:13:39]  --------------------------------------------------------------------------------
[08/10 14:13:39]  Iteration: 18 (0 solution, 17 counterexamples)
[08/10 14:13:40]  Generator returned sat in 0.332571 secs.
[08/10 14:13:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:40]  Improved gap from 0 to 100
[08/10 14:13:40]  Improved number of small numbers from 45 to 114 out of a max of 114
[08/10 14:13:40]  Verifer returned sat in 0.565176 secs.
[08/10 14:13:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -4421.389648  -13882.845215  7073.37207 -4421.389648    0.100000 -13882.845215  9288.355713  173.099854      100.199951     8.0    -13882.845215            -1             -1     -1
1   -4421.389648  -13782.945312  7073.37207 -4421.389648  173.099854 -13782.945312  9288.355713   73.199951        0.199951     3.0    -13882.845215         False           True  False
2   -4321.589600  -13709.945312  7073.37207 -4321.589600  173.000000 -13709.945312  9288.355713  100.000000        0.000000     3.0    -13609.945312         False          False  False
3   -4221.289551  -13525.711914  7073.37207 -4221.289551  200.300049 -13525.711914  9288.455811   15.966553        0.199951     1.0    -13609.945312         False          False  False
4   -4059.189453  -13467.078613  7073.37207 -4059.189453  178.066650 -13467.078613  9350.555908   57.333252        0.199951     1.0    -13609.945312         False          False   True
5   -3959.089355  -13376.078613  7073.37207 -3959.089355  157.433350 -13376.078613  9350.656006   66.333252        0.199951     1.0    -13609.945312         False          False   True
6   -3858.989258  -13248.000977  7073.37207 -3858.989258  166.433350 -13248.000977  9350.756104   38.255615        0.199951     1.0    -13609.945312         False          False   True
7   -3758.889404  -13109.945312  7073.37207 -3758.889404  138.355469 -13109.945312  9350.855957    0.199951        0.199951     1.0    -13609.945312         False          False   True
8   -3581.022705  -13009.945557  7073.37207 -3581.022705  178.066650 -13009.945557  9428.722656    0.200195        0.199951     1.0    -13609.945312         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=819/4096.[0m
[08/10 14:13:41]  --------------------------------------------------------------------------------
[08/10 14:13:41]  Iteration: 19 (0 solution, 18 counterexamples)
[08/10 14:13:47]  Generator returned sat in 5.228558 secs.
[08/10 14:13:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:47]  Improved gap from 0 to 100
[08/10 14:13:48]  Improved number of small numbers from 52 to 70 out of a max of 114
[08/10 14:13:48]  Verifer returned sat in 1.346591 secs.
[08/10 14:13:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -4011.119141  -13637.810293  6862.901717 -4011.119141     0.001250 -13637.810293  9288.355713   338.335439      300.000106     4.0    -13637.810293            -1             -1     -1
1   -4011.119141  -13599.474959  6862.901717 -4011.119141     0.001250 -13599.474959  9288.355713   300.000106      200.000106     4.0    -13637.810293         False          False   True
2   -4011.119141  -13499.474959  6862.901717 -4011.119141   299.998750 -13499.474959  9288.355713   200.000106      100.000106     5.0    -13637.810293         False          False   True
3   -4011.119141  -13399.474959  6862.901717 -4011.119141     0.001465 -13399.474959  9288.355713   100.000106        0.000106     6.0    -13299.474854         False          False   True
4   -3755.116246  -13299.474959  6862.901717 -3755.116246   356.003000 -13299.474959  9288.355713   256.003000      156.003000     7.0    -13299.474854         False          False   True
5   -3175.114746  -13099.474959  6862.901717 -3175.114746   836.004500 -13099.474959  9288.355713   636.004500      636.004500     2.0    -13299.474854         False           True  False
6   -2155.112496  -13043.470947  6862.901717 -2155.112496  1656.006750 -13043.470947  9288.356963  1600.001488     1556.005500     2.0    -13299.474854         False          False  False
7   -2155.112496  -12999.474959  6862.901717 -2155.112496     0.010000 -12999.474959  9288.356963  1556.005500     1456.005500     3.0    -13299.474854         False          False   True
8   -2155.112496  -12899.474854  6862.901717 -2155.112496   448.500000 -12899.474854  9288.356963  1456.005394     1356.005500     4.0    -13299.474854         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3112011/2000.[0m
[08/10 14:13:49]  --------------------------------------------------------------------------------
[08/10 14:13:49]  Iteration: 20 (0 solution, 19 counterexamples)
[08/10 14:13:54]  Generator returned sat in 4.363727 secs.
[08/10 14:13:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:13:56]  Improved gap from 1/600 to 34.375
[08/10 14:13:57]  Improved number of small numbers from 33 to 42 out of a max of 114
[08/10 14:13:57]  Verifer returned sat in 3.507042 secs.
[08/10 14:13:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t   service_0,t     losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3640.300049  -12835.963459  6099.390137 -3640.300049     0.049805 -12835.963459   9195.563405     0.100005        0.099925     2.0    -12835.963459            -1             -1     -1
1   -3640.300049  -12835.913459  6164.965217 -3640.300049     0.049805 -12835.913459   9195.563405     0.050005      -34.324995     2.0    -12835.963459         False          False   True
2   -3571.600054  -12801.538459  6230.590217 -3571.600054    68.750000 -12801.538459   9195.563405    34.375000        0.000000     1.0    -12835.963459         False          False   True
3   -3571.600054  -12767.163459  6292.340088 -3571.600054     0.050000 -12767.163459   9195.563405     0.000000      -38.250129     2.0    -12767.163459         False          False   True
4   -3433.400054  -12725.896793  6292.340217 -3433.400054   138.200000 -12725.896793   9195.563405    96.933333       -0.050000     1.0    -12767.163459         False          False   True
5   -3033.400054  -12628.913459  6292.340217 -3033.400054   496.933333 -12628.913459   9195.563405   399.950000      299.950000     1.0    -12767.163459         False          False   True
6   -2093.733387  -12428.913459  6292.340217 -2093.733387  1339.616667 -12428.913459   9195.563405  1139.616667     1139.616667     2.0    -12767.163459         False          False   True
7     122.883279  -12428.913459  6292.340217   122.883279  3356.233333 -12428.913459   9195.563405  3356.233333     3256.233333     2.0    -12767.163459         False          False   True
8    4073.583279  -12228.913574  6292.340217  4073.583279  7306.933333 -12228.913574  13046.213405  3256.283448     3256.283333     3.0    -12767.163459         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=195377/60.[0m
[08/10 14:13:58]  --------------------------------------------------------------------------------
[08/10 14:13:58]  Iteration: 21 (0 solution, 20 counterexamples)
[08/10 14:14:01]  Generator returned sat in 2.823086 secs.
[08/10 14:14:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:02]  Improved gap from 1/20 to 100
[08/10 14:14:02]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/10 14:14:02]  Verifer returned sat in 0.993655 secs.
[08/10 14:14:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3434.324951  -13028.913330  6292.340332 -3434.324951    0.025000 -13028.913330  9295.988525  298.599854      198.600098     2.0    -13028.913330            -1             -1     -1
1   -3434.324951  -12928.913330  6292.340332 -3434.324951  298.575000 -12928.913330  9295.988525  198.599854       98.600098     2.0    -13028.913330         False          False   True
2   -3334.375000  -12730.288330  6292.340332 -3334.375000  298.549805 -12730.288330  9295.988525   99.924805       98.550049     1.0    -12630.363525         False          False   True
3   -3334.375000  -12630.363525  6292.340332 -3334.375000    0.824951 -12630.363525  9295.988525    0.000000       -1.449951     2.0    -12630.363525         False          False   True
4   -3134.275146  -12529.013428  6292.340332 -3134.275146  200.099854 -12529.013428  9296.013428   98.724854       98.625000     1.0    -12630.363525         False          False   True
5   -3033.400146  -12429.363525  6292.340332 -3033.400146  199.599854 -12429.363525  9296.888428   99.074951       98.625000     1.0    -12630.363525         False          False   True
6   -2933.375244  -12428.913330  6292.340332 -2933.375244  199.099854 -12428.913330  9296.913330  198.624756       98.625000     2.0    -12630.363525         False          False   True
7   -2933.375244  -12328.913330  6292.340332 -2933.375244  198.599854 -12328.913330  9296.913330   98.624756       -1.375000     2.0    -12630.363525         False          False   True
8   -2733.350098  -12228.913330  6292.340332 -2733.350098  298.649902 -12228.913330  9296.938477  198.624756       98.625000     1.0    -12630.363525         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=789/8.[0m
[08/10 14:14:03]  --------------------------------------------------------------------------------
[08/10 14:14:03]  Iteration: 22 (0 solution, 21 counterexamples)
[08/10 14:14:05]  Generator returned sat in 1.164718 secs.
[08/10 14:14:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:06]  Improved number of small numbers from 65 to 77 out of a max of 113
[08/10 14:14:06]  Verifer returned sat in 0.952275 secs.
[08/10 14:14:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3434.324951  -12938.483682  6292.340088 -3434.324951    0.025000 -12938.483682  9296.038574  208.120156      115.119912     2.0    -12938.483682            -1             -1     -1
1   -3434.324951  -12838.433594  6292.340088 -3434.324951  208.094971 -12838.433594  9296.038574  108.070068       15.119912     2.0    -12938.483682         False          False   True
2   -3334.324951  -12730.338379  6292.340088 -3334.324951  208.070068 -12730.338379  9296.038574   99.974854       15.119912     1.0    -12630.363525         False          False   True
3   -3334.324951  -12630.363525  6292.340332 -3334.324951    0.824707 -12630.363525  9296.038574    0.000000      -84.879844     2.0    -12630.363525         False          False   True
4   -2870.644717  -12545.483682  6292.340332 -2870.644717  463.680234 -12545.483682  9559.693857  115.145107       15.145107     1.0    -12630.363525         False          False   True
5   -2754.449707  -12345.483682  6292.340332 -2754.449707  231.340117 -12345.483682  9575.888867   15.145107       15.145107     1.0    -12630.363525         False          False   True
6   -2654.424756  -12345.458496  6292.340332 -2654.424756  115.170059 -12345.458496  9575.913818  115.119922       15.145107     2.0    -12630.363525         False          False   True
7   -2654.424756  -12237.363525  6292.340332 -2654.424756   57.085029 -12237.363525  9575.913818    7.024951      -84.854893     2.0    -12630.363525         False          False   True
8   -2197.769473  -12145.483643  6292.340332 -2197.769473  463.680234 -12145.483643  9832.569102  115.145068       15.145107     1.0    -12630.363525         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1550859/102400.[0m
[08/10 14:14:06]  --------------------------------------------------------------------------------
[08/10 14:14:06]  Iteration: 23 (0 solution, 22 counterexamples)
[08/10 14:14:11]  Generator returned sat in 4.554886 secs.
[08/10 14:14:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:12]  Improved number of small numbers from 90 to 102 out of a max of 113
[08/10 14:14:12]  Verifer returned sat in 0.575435 secs.
[08/10 14:14:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t      cwnd_0,t  service_0,t  losts_0,t       queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8955.170166   -9255.070068  6292.340332   -8955.170166      0.100098 -9255.070068        0.0    299.899902      199.899902     2.0     -9255.070068            -1             -1   False
1   -8955.170166   -9055.070068  6292.340332   -8955.170166    299.800000 -9055.070068        0.0     99.899902       99.899902     2.0     -9255.070068         False          False   False
2   -8755.370117   -8955.070068  6292.340332   -8755.370117    299.699951 -8955.070068        0.0    199.699951      199.699951     1.0     -8755.370117         False          False   False
3   64785.329932   -8855.070068  6292.340332   64785.329932  73740.400000 -8855.070068    36869.3  36771.100000    36771.100000     2.0     -8755.370117         False          False   False
4   64885.429932   -8855.070068  6292.340332   64885.429932  36871.200000 -8855.070068    36869.4  36871.100000    36771.100000     2.0     -8755.370117         False          False    True
5   64885.429932   -8655.270068  6292.340332   64885.429932  18436.600000 -8655.270068    36869.4  36671.300000    36671.100000     3.0     -8755.370117         False          False    True
6   65085.329932   -8655.070068  6292.340332   65085.329932  36871.200000 -8655.070068    36869.4  36871.000000    36771.000000     4.0     -8755.370117         False          False    True
7  101954.729932   -8455.070068  6292.340332  101954.729932  73740.400000 -8455.070068    73638.7  36771.100000    36771.100000     5.0     -8755.370117         False          False    True
8  102054.829932   -8355.070312  6292.340332  102054.829932  36871.200000 -8355.070312    73638.8  36771.100244    36771.100000     6.0     28416.029932          True           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=367711/10.[0m
[08/10 14:14:13]  --------------------------------------------------------------------------------
[08/10 14:14:13]  Iteration: 24 (0 solution, 23 counterexamples)
[08/10 14:14:15]  Generator returned sat in 1.213566 secs.
[08/10 14:14:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:18]  Improved gap from 1/4000 to 34.375
[08/10 14:14:20]  Improved number of small numbers from 60 to 75 out of a max of 114
[08/10 14:14:20]  Verifer returned sat in 5.057984 secs.
[08/10 14:14:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  102034.902832  101834.925021 -104797.654541  102034.902832  200.022461  101834.925021   0.000000  199.977811       99.978027     5.0    101834.925021            -1             -1    True
1  102034.925021  101934.925049 -104797.654541  102034.925021  200.000000  101934.925049   0.000000   99.999972        0.000216     5.0    102034.925021         False          False    True
2  102134.902588  102134.880378 -104797.654541  102134.902588  199.977539  102134.880378   0.000000    0.022210       -0.022217     1.0    102134.902588         False          False    True
3  102169.300021  102134.925021 -104732.029757  102169.300021   34.419643  102134.925021   0.000000   34.375000        0.000000     1.0    102169.300021         False          False    True
4  102300.134842  102269.199574 -104732.029757  102300.134842  165.209821  102269.199574  28.912946    2.022321        1.921875     1.0    102169.300021         False          False    True
5  102300.134842  102269.300021 -104666.404757  102300.134842    2.000000  102269.300021  28.912946    1.921875      -32.453125     2.0    102169.300021         False          False    True
6  102364.422789  102303.675021 -104600.779785  102364.422789   66.209821  102303.675021  28.912946   31.834821       -2.540206     1.0    102169.300021         False          False    True
7  102448.067878  102384.779932 -104581.884766  102448.067878  115.479911  102384.779932  28.912946   34.375000       -0.000098     1.0    102169.300021         False          False    True
8  102527.223012  102419.177246 -104581.884766  102527.223012  113.530134  102419.177246  28.912946   79.132819      -20.844964     1.0    102169.300021         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=123/64.[0m
[08/10 14:14:20]  --------------------------------------------------------------------------------
[08/10 14:14:20]  Iteration: 25 (0 solution, 24 counterexamples)
[08/10 14:14:23]  Generator returned sat in 1.573037 secs.
[08/10 14:14:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:23]  Improved gap from 1/800 to 100
[08/10 14:14:23]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 14:14:23]  Verifer returned sat in 0.483409 secs.
[08/10 14:14:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  100534.634766  100135.135010 -104581.884766  100534.634766     0.099854  100135.135010   0.000000   399.499756      299.700195     4.0    100135.135010            -1             -1   False
1  102035.234863  100234.934814 -104581.884766  102035.234863  1900.099854  100234.934814   0.100098  1800.199951     1700.200195     4.0    100135.135010         False          False   False
2  102135.134766  100334.934814 -104581.884766  102135.134766  1900.099854  100334.934814   0.100098  1800.099854     1700.100098     5.0    100135.135010         False          False    True
3  102135.134766  100534.734863 -104581.884766  102135.134766  1600.199951  100534.734863   0.100098  1600.299805     1600.100098     3.0    102135.034668          True           True   False
4  102135.134766  100534.934814 -104581.884766  102135.134766  1600.199951  100534.934814   0.100098  1600.099854     1500.100098     4.0    102135.034668         False          False   False
5  102135.234863  100734.934570 -104581.884766  102135.234863  1600.199951  100734.934570   0.100098  1400.200195     1400.200195     5.0    102135.034668         False          False   False
6  102335.234619  100735.034668 -104581.884766  102335.234619  1600.199951  100735.034668   0.100098  1600.099854     1500.199951     6.0    102135.034668         False           True   False
7  102335.334717  100934.934570 -104581.884766  102335.334717  1600.199951  100934.934570   0.100098  1400.300049     1400.300049     7.0    102135.034668         False           True   False
8  102535.234619  101034.934570 -104581.884766  102535.234619  1600.199951  101034.934570   0.100098  1500.199951     1500.199951     8.0    102135.034668         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=1741005/1024.[0m
[08/10 14:14:24]  --------------------------------------------------------------------------------
[08/10 14:14:24]  Iteration: 26 (0 solution, 25 counterexamples)
[08/10 14:14:25]  Generator returned sat in 0.282102 secs.
[08/10 14:14:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:25]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 14:14:25]  Verifer returned sat in 0.134715 secs.
[08/10 14:14:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  100934.934570  100135.135010 -104581.884766  100934.934570     0.099854  100135.135010   0.000000   799.799561      700.000000     6.0    100135.135010            -1             -1   False
1  102035.234863  100234.934814 -104581.884766  102035.234863  1900.099854  100234.934814   0.100098  1800.199951     1700.200195     6.0    100135.135010         False          False   False
2  102135.134766  100334.934814 -104581.884766  102135.134766  1900.099854  100334.934814   0.100098  1800.099854     1700.100098     7.0    100135.135010         False          False    True
3  102135.134766  100534.734863 -104581.884766  102135.134766  1600.199951  100534.734863   0.100098  1600.299805     1600.100098     8.0    102135.034668         False          False    True
4  102135.134766  100534.934814 -104581.884766  102135.134766  1600.199951  100534.934814   0.100098  1600.099854     1500.100098     7.0    102135.034668         False           True   False
5  102135.234863  100734.934570 -104581.884766  102135.234863  1600.199951  100734.934570   0.100098  1400.200195     1400.200195     8.0    102135.034668         False          False   False
6  102335.234619  100735.034668 -104581.884766  102335.234619  1600.199951  100735.034668   0.100098  1600.099854     1500.199951     9.0    102135.034668         False           True   False
7  102335.334717  100934.934570 -104581.884766  102335.334717  1600.199951  100934.934570   0.100098  1400.300049     1400.300049     9.0    102135.034668         False           True   False
8  102535.234619  101034.934570 -104581.884766  102535.234619  1600.199951  101034.934570   0.100098  1500.199951     1500.199951     8.0    102135.034668         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=1741005/1024.[0m
[08/10 14:14:26]  --------------------------------------------------------------------------------
[08/10 14:14:26]  Iteration: 27 (0 solution, 26 counterexamples)
[08/10 14:14:31]  Generator returned sat in 4.281700 secs.
[08/10 14:14:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:31]  Improved number of small numbers from 92 to 113 out of a max of 113
[08/10 14:14:31]  Verifer returned sat in 0.328028 secs.
[08/10 14:14:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  100583.784424  100135.034668 -104581.88501  100583.784424  448.749756  100135.034668    0.000000  448.749756      448.749756     5.0    100135.034668            -1             -1   False
1  100583.784424  100135.134766 -104581.88501  100583.784424  448.749756  100135.134766    0.000000  448.649658      348.749756     6.0    100135.034668         False          False   False
2  100583.884521  100334.234863 -104581.88501  100583.884521  448.749756  100334.234863    0.000000  249.649658      248.849854     6.0    100135.034668         False          False   False
3  100783.984863  100434.934570 -104581.88501  100783.984863  449.750000  100434.934570    0.100098  348.950195      348.850098     7.0    100135.034668         False          False   False
4  100884.284668  100435.034668 -104581.88501  100884.284668  449.250000  100435.034668    0.399902  448.850098      348.850098     8.0    100883.884766          True           True    True
5  100884.284668  100583.984863 -104581.88501  100884.284668  448.750000  100583.984863    0.399902  299.899902      248.850098     3.0    100883.884766         False           True    True
6  101084.384766  100735.034668 -104581.88501  101084.384766  500.000000  100735.034668    0.500000  348.850098      348.850098     4.0    100883.884766         False          False    True
7  101235.034668  100835.034668 -104581.88501  101235.034668  499.500000  100835.034668   51.149902  348.850098      348.850098     4.0    100883.884766         False          False    True
8  101385.184570  100835.034668 -104581.88501  101385.184570  499.000000  100835.034668  101.299805  448.850098      348.850098     4.0    100883.884766         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=714445/2048.[0m
[08/10 14:14:32]  --------------------------------------------------------------------------------
[08/10 14:14:32]  Iteration: 28 (0 solution, 27 counterexamples)
[08/10 14:14:36]  Generator returned sat in 3.635878 secs.
[08/10 14:14:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:37]  Improved gap from 1/1600 to 23.4375
[08/10 14:14:37]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/10 14:14:37]  Verifer returned sat in 1.014422 secs.
[08/10 14:14:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  100733.162842  100633.160889 -104811.57251  100733.162842    0.001250  100633.160889    0.000000  100.001953       48.879395     2.0    100633.160889            -1             -1   False
1  100733.162842  100684.283447 -104811.57251  100733.162842  100.001953  100684.283447    0.000000   48.879395      -51.120605     2.0    100633.160889         False          False   False
2  100784.285400  100784.284180 -104811.57251  100784.285400  100.001953  100784.284180    0.000000    0.001221      -99.998047     1.0    100633.160889         False          False   False
3  100884.284668  100884.283447 -104735.01001  100884.284668  100.000488  100884.283447    0.000000    0.001221      -23.436279     1.0    100884.284668         False          False   False
4  101133.906006  101005.597168 -104735.01001  101133.906006  249.622559  101005.597168  126.182617    2.126221        0.002441     1.0    100884.284668         False          False   False
5  101133.906006  101007.720947 -104658.44751  101133.906006    0.010000  101007.720947  126.182617    0.002441      -23.435059     2.0    100884.284668         False          False    True
6  101579.277100  101031.158447 -104658.44751  101579.277100  445.373535  101031.158447  448.116211  100.002441        0.002441     1.0    100884.284668         False          False    True
7  101579.277100  101131.158447 -104581.88501  101579.277100    0.010000  101131.158447  448.116211    0.002441      -23.435059     2.0    100884.284668         False          False    True
8  101828.897217  101154.595947 -104581.88501  101828.897217  249.622559  101154.595947  574.298828  100.002441        0.002441     1.0    100884.284668         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=5/2048.[0m
[08/10 14:14:38]  --------------------------------------------------------------------------------
[08/10 14:14:38]  Iteration: 29 (0 solution, 28 counterexamples)
[08/10 14:14:41]  Generator returned sat in 2.218002 secs.
[08/10 14:14:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:42]  Improved gap from 0 to 23.4375
[08/10 14:14:42]  Improved number of small numbers from 102 to 114 out of a max of 114
[08/10 14:14:42]  Verifer returned sat in 1.236863 secs.
[08/10 14:14:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  100856.939453    100856.8396 -104734.010254  100856.939453    0.049805  100856.8396   0.000000    0.099854        0.099854     1.0      100856.8396            -1             -1    True
1  100856.939453    100856.8396 -104734.010254  100856.939453    0.050000  100856.8396   0.000000    0.099854      -99.900146     1.0      100856.8396         False          False    True
2  101033.451904    101033.4021 -104734.010254  101033.451904  176.612305  101033.4021   0.000000    0.049805      -23.387695     1.0      100856.8396         False          False    True
3  101084.277100    101056.8396 -104734.010254  101084.277100   50.875000  101056.8396   0.000000   27.437500      -72.562500     1.0      101084.2771         False          False    True
4  101280.277100    101256.8396 -104734.010254  101280.277100  223.437500  101256.8396   0.050049   23.387451       23.387451     1.0      101084.2771         False          False    True
5  101280.277100    101256.8396 -104658.447754  101280.277100    2.000000  101256.8396   0.050049   23.387451       -1.050049     1.0      101084.2771         False          False    True
6  101479.327148    101381.2771 -104658.447754  101479.327148  222.437500  101381.2771  74.662598   23.387451       23.387451     1.0      101084.2771         False          False    True
7  101479.327148    101381.2771 -104581.885254  101479.327148    2.000000  101381.2771  74.662598   23.387451       -0.050049     1.0      101084.2771         False          False    True
8  101579.377197    101404.7146 -104581.885254  101579.377197  123.437500  101404.7146  74.662598  100.000000        0.000000     1.0      101084.2771         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=95795/4096.[0m
[08/10 14:14:43]  --------------------------------------------------------------------------------
[08/10 14:14:43]  Iteration: 30 (0 solution, 29 counterexamples)
[08/10 14:14:47]  Generator returned sat in 3.041663 secs.
[08/10 14:14:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:47]  Improved number of small numbers from 73 to 113 out of a max of 113
[08/10 14:14:47]  Verifer returned sat in 0.473243 secs.
[08/10 14:14:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  100769.939697  100769.839600 -104334.365234  100769.939697  102.600000  100769.839600    0.000000   0.100098        0.100098     8.0    100769.839600            -1             -1     -1
1  100872.339600  100867.539795 -104334.365234  100872.339600  102.500000  100867.539795    2.300049   2.499756        0.199951     1.0    100870.039551         False           True  False
2  100972.239746  100969.839600 -104334.365234  100972.239746  102.399902  100969.839600    2.300049   0.100098        0.100098     1.0    100969.939697         False          False   True
3  101072.439697  101056.839600 -104334.365234  101072.439697  100.300049  101056.839600    2.400146  13.199951        0.199951     1.0    101070.039551         False          False   True
4  101201.239746  101070.139404 -104334.365234  101201.239746  142.000000  101070.139404   31.200195  99.900146        0.199951     1.0    101070.039551         False          False   True
5  101201.239746  101169.939453 -104334.365234  101201.239746   99.799805  101169.939453   31.200195   0.100098      -99.800049     2.0    101070.039551         False          False   True
6  101451.639404  101369.839600 -104334.365234  101451.639404  250.499756  101369.839600   81.599854   0.199951        0.199951     1.0    101370.039551          True           True  False
7  101606.439453  101469.839600 -104334.365234  101606.439453  155.000000  101469.839600  136.399902   0.199951        0.199951     1.0    101370.039551         False          False   True
8  101804.589600  101470.139404 -104334.365234  101804.589600  198.350098  101470.139404  234.550049  99.900146        0.199951     1.0    101370.039551         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 14:14:48]  --------------------------------------------------------------------------------
[08/10 14:14:48]  Iteration: 31 (0 solution, 30 counterexamples)
[08/10 14:14:54]  Generator returned sat in 5.498513 secs.
[08/10 14:14:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:14:55]  Improved gap from 1/20 to 100
[08/10 14:14:55]  Improved number of small numbers from 88 to 114 out of a max of 114
[08/10 14:14:55]  Verifer returned sat in 0.916290 secs.
[08/10 14:14:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   99216.589600   99116.689697 -104334.365479   99216.589600  199.999756  99116.689697     0.000000   99.899902       -0.100098     8.0     99116.689697            -1             -1     -1
1   99316.589600   99216.689697 -104334.365479   99316.589600  199.899902  99216.689697     0.000000   99.899902       -0.100098     1.0     99316.589600         False           True  False
2   99416.489502   99316.689697 -104334.365479   99416.489502  199.799805  99316.689697     0.000000   99.799805       -0.200195     1.0     99416.489502         False          False  False
3  100109.689697   99416.689697 -104334.365479  100109.689697  793.000000  99416.689697   592.800049  100.199951        0.199951     1.0     99416.489502         False          False  False
4  100406.489746   99616.689453 -104334.365479  100406.489746  397.000000  99616.689453   789.600098    0.200195        0.199951     1.0     99416.489502         False          False   True
5  100605.289551   99716.689697 -104334.365479  100605.289551  199.000000  99716.689697   888.399902    0.199951        0.199951     1.0     99416.489502         False          False   True
6  100705.089600   99814.189697 -104334.365479  100705.089600  100.000000  99814.189697   888.399902    2.500000        0.000000     1.0     99416.489502         False          False   True
7  101549.589600   99816.689697 -104334.365479  101549.589600  847.000000  99816.689697  1632.699951  100.199951        0.199951     2.0     99416.489502         False          False   True
8  101873.389648   99916.989746 -104334.365479  101873.389648  424.000000  99916.989746  1856.500000   99.899902        0.199951     1.0    100016.889648          True           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 14:14:56]  --------------------------------------------------------------------------------
[08/10 14:14:56]  Iteration: 32 (0 solution, 31 counterexamples)
[08/10 14:15:01]  Generator returned sat in 4.151330 secs.
[08/10 14:15:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:15:02]  Improved gap from 1/40 to 46.875
[08/10 14:15:03]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 14:15:03]  Verifer returned sat in 1.590886 secs.
[08/10 14:15:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  107624.769775   99310.919678 -104528.595703  107624.769775    0.049805  99310.919678  7813.899902  499.950195      399.950195     8.0     99310.919678            -1             -1     -1
1  107624.769775   99510.919678 -104528.595703  107624.769775    0.049805  99510.919678  7813.899902  299.950195      299.950195     4.0     99310.919678         False           True   True
2  107668.419678   99610.919678 -104528.595703  107668.419678  343.600098  99610.919678  7813.899902  243.600098      243.600098     4.0     99310.919678         False          False   True
3  107668.419678   99710.919678 -104528.595703  107668.419678  110.750000  99710.919678  7813.899902  143.600098      143.600098     5.0     99854.519775         False          False   True
4  107668.419678   99801.594482 -104528.595703  107668.419678   54.875000  99801.594482  7813.899902   52.925293       43.600098     6.0     99854.519775         False          False   True
5  107668.419678   99810.919678 -104475.470703  107668.419678   52.875000  99810.919678  7813.899902   43.600098       -3.274902     4.0     99854.519775         False           True  False
6  107675.694580   99857.794678 -104422.345703  107675.694580   50.875000  99857.794678  7813.899902    4.000000      -42.875000     1.0     99854.519775         False          False  False
7  107720.569580   99904.669678 -104369.220703  107720.569580   48.875000  99904.669678  7813.899902    2.000000      -44.875000     1.0     99854.519775         False          False  False
8  107765.444580   99951.544678 -104369.220459  107765.444580   46.875000  99951.544678  7813.899902    0.000000      -99.999756     1.0     99854.519775         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/10 14:15:03]  --------------------------------------------------------------------------------
[08/10 14:15:03]  Iteration: 33 (0 solution, 32 counterexamples)
[08/10 14:15:07]  Generator returned sat in 3.054476 secs.
[08/10 14:15:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:15:08]  Improved number of small numbers from 77 to 113 out of a max of 113
[08/10 14:15:08]  Verifer returned sat in 0.374002 secs.
[08/10 14:15:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107165.244385   99151.444580 -104269.220703  107165.244385     0.200000  99151.444580  7813.799805   200.000000      199.899902     2.0     99151.444580            -1             -1   False
1  107165.244385   99151.544678 -104269.220703  107165.244385     0.100098  99151.544678  7813.799805   199.899902       99.899902     2.0     99351.444580         False          False   False
2  108872.794434   99351.544678 -104269.220703  108872.794434  1907.449951  99351.544678  7813.899902  1707.349854     1707.349854     1.0     99351.444580         False          False   False
3  108872.794434   99437.544678 -104269.220703  108872.794434  1257.199951  99437.544678  7813.899902  1621.349854     1607.349854     2.0    101058.894531         False          False    True
4  108872.794434   99551.444580 -104269.220703  108872.794434  1400.250000  99551.444580  7813.899902  1507.449951     1507.349854     3.0    101058.894531         False          False    True
5  108965.544434   99551.544678 -104269.220703  108965.544434  1600.199951  99551.544678  7813.899902  1600.099854     1500.099854     4.0    101058.894531         False          False    True
6  109065.644531   99651.544678 -104269.220703  109065.644531  1700.199951  99651.544678  7813.899902  1600.199951     1500.199951     5.0    101058.894531         False          False    True
7  109272.644531   99751.544678 -104269.220703  109272.644531  1807.199951  99751.544678  7813.899902  1707.199951     1607.199951     6.0    101058.894531         False          False    True
8  109472.694580   99951.544434 -104269.220703  109472.694580  1907.250000  99951.544434  7813.899902  1707.250244     1707.250000     7.0    101058.894531         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6993305/4096.[0m
[08/10 14:15:08]  --------------------------------------------------------------------------------
[08/10 14:15:08]  Iteration: 34 (0 solution, 33 counterexamples)
[08/10 14:15:13]  Generator returned sat in 4.034209 secs.
[08/10 14:15:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:15:14]  Improved gap from 0 to 100
[08/10 14:15:15]  Improved number of small numbers from 73 to 94 out of a max of 114
[08/10 14:15:15]  Verifer returned sat in 1.253430 secs.
[08/10 14:15:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  102268.044678   94354.194824 -99471.920703  102268.044678     0.050049  94354.194824  7813.799805   100.050049      100.000195     3.0     94354.194824            -1             -1     -1
1  102268.044678   94354.244873 -99471.920703  102268.044678    99.949951  94354.244873  7813.799805   100.000000        0.000195     2.0     94354.194824         False          False   True
2  102268.044678   94454.244678 -99471.920703  102268.044678    99.950195  94454.244678  7813.799805     0.000195      -99.999805     3.0     94354.194824         False          False   True
3  102468.931982   94653.419678 -99471.920703  102468.931982   200.887500  94653.419678  7813.799805     1.712500        0.887500     1.0     94354.194824         False          False   True
4  102867.994482   94655.132178 -99471.920703  102867.994482   400.775000  94655.132178  7813.799805   399.062500      299.950000     2.0     94354.194824         False          False   True
5  103269.481982   94854.244678 -99471.920703  103269.481982   800.550000  94854.244678  7813.799805   601.437500      601.437500     2.0     94354.194824         False          False   True
6  104268.144482   94854.294678 -99471.920703  104268.144482  1600.100000  94854.294678  7813.799805  1600.050000     1500.100000     3.0     94354.194824         False          False   True
7  105867.294482   95054.244678 -99471.920703  105867.294482  3199.200000  95054.244678  7813.799805  2999.250000     2999.250000     3.0     94354.194824         False          False   True
8  109265.444482   95154.244629 -99471.920703  109265.444482  6397.400000  95154.244629  7813.799805  6297.400049     6297.400000     4.0     94354.194824         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=25794355/4096.[0m
[08/10 14:15:15]  --------------------------------------------------------------------------------
[08/10 14:15:15]  Iteration: 35 (0 solution, 34 counterexamples)
[08/10 14:15:17]  Generator returned sat in 0.287421 secs.
[08/10 14:15:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:15:18]  Improved number of small numbers from 74 to 84 out of a max of 113
[08/10 14:15:18]  Verifer returned sat in 1.015362 secs.
[08/10 14:15:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  102268.732178   94354.194580 -99471.920898  102268.732178     0.050049  94354.194580  7813.799805   100.737793      100.687500     3.0      94354.19458            -1             -1     -1
1  102268.732178   94354.244873 -99471.920898  102268.732178    99.949707  94354.244873  7813.799805   100.687500        0.687500     2.0      94354.19458         False          False   True
2  102268.732178   94454.932178 -99471.920825  102268.732178    99.950195  94454.932178  7813.799805     0.000195      -99.312427     3.0      94354.19458         False          False   True
3  102469.181982   94653.794678 -99471.920825  102469.181982   200.450000  94653.794678  7813.799805     1.587500        1.137378     1.0      94354.19458         False          False   True
4  102867.994482   94655.382178 -99471.920825  102867.994482   400.400000  94655.382178  7813.799805   398.812500      299.949878     2.0      94354.19458         False          False   True
5  103269.481982   94854.244678 -99471.920825  103269.481982   800.300000  94854.244678  7813.799805   601.437500      601.437378     2.0      94354.19458         False          False   True
6  104268.144482   94854.244800 -99471.920825  104268.144482  1600.100000  94854.244800  7813.799805  1600.099878     1500.099878     3.0      94354.19458         False          False   True
7  105867.744604   95054.244678 -99471.920825  105867.744604  3199.700000  95054.244678  7813.799805  2999.700122     2999.700000     3.0      94354.19458         False          False   True
8  109266.944482   95154.244629 -99471.920825  109266.944482  6398.900000  95154.244629  7813.799805  6298.900049     6298.899878     4.0      94354.19458         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=12900147/2048.[0m
[08/10 14:15:18]  --------------------------------------------------------------------------------
[08/10 14:15:18]  Iteration: 36 (0 solution, 35 counterexamples)
[08/10 14:15:27]  Generator returned sat in 7.506960 secs.
[08/10 14:15:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:15:27]  Improved gap from 0 to 100
[08/10 14:15:28]  Improved number of small numbers from 77 to 96 out of a max of 114
[08/10 14:15:28]  Verifer returned sat in 0.923172 secs.
[08/10 14:15:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  102268.732178   94354.932251 -99472.608398  102268.732178     0.000244  94354.932251  7813.799805   100.000122      100.000000     5.0     94354.932251            -1             -1     -1
1  102268.732178   94354.932373 -99472.608398  102268.732178     0.000244  94354.932373  7813.799805   100.000000        0.000000     2.0     94354.932251         False           True   True
2  102668.731934   94454.932495 -99472.608398  102668.731934   499.999756  94454.932495  7813.799805   399.999634      299.999756     1.0     94354.932251         False          False   True
3  102668.731934   94654.932373 -99472.608398  102668.731934     0.000122  94654.932373  7813.799805   199.999756      199.999756     2.0     94854.932129         False          False   True
4  102668.731934   94654.932373 -99472.608398  102668.731934   148.500244  94654.932373  7813.799805   199.999756       99.999756     2.0     94854.932129         False          False   True
5  102839.982544   94854.932373 -99472.608398  102839.982544   371.250366  94854.932373  7813.799805   171.250366      171.250366     1.0     94854.932129         False          False   True
6  103424.107666   94854.932373 -99472.608398  103424.107666   755.375488  94854.932373  7813.799805   755.375488      655.375488     1.0     94854.932129         False          False   True
7  103900.295410   95054.932373 -99472.608398  103900.295410  1231.563232  95054.932373  7813.799805  1031.563232     1031.563232     2.0     94854.932129         False          False   True
8  104914.577026   95054.932373 -99472.608398  104914.577026  2045.844849  95054.932373  8259.644531  1600.000122     1500.000122     2.0     94854.932129         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=12288001/8192.[0m
[08/10 14:15:29]  --------------------------------------------------------------------------------
[08/10 14:15:29]  Iteration: 37 (0 solution, 36 counterexamples)
[08/10 14:15:37]  Generator returned sat in 7.086901 secs.
[08/10 14:15:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:15:37]  Improved gap from 1/100 to 100
[08/10 14:15:38]  Improved number of small numbers from 56 to 67 out of a max of 114
[08/10 14:15:38]  Verifer returned sat in 1.404282 secs.
[08/10 14:15:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  102271.182129   94457.281982 -99472.608398  102271.182129    0.100000  94457.281982  7813.799805    0.100342        0.100195     3.0     94457.281982            -1             -1     -1
1  102271.182129   94457.282227 -99472.608398  102271.182129    0.050049  94457.282227  7813.799805    0.100098      -99.899805     2.0     94457.382324         False           True  False
2  102668.731934   94557.282129 -99472.608398  102668.731934  397.649902  94557.282129  8011.349805  100.100000        0.100000     1.0     94457.382324         False           True  False
3  102966.231934   94658.132129 -99472.608398  102966.231934  397.600000  94658.132129  8208.849805   99.250000        0.100000     1.0     94757.382129         False          False   True
4  103066.281934   94857.282129 -99472.608398  103066.281934  199.300000  94857.282129  8208.899805    0.100000        0.100000     1.0     94757.382129         False          False   True
5  103166.331934   94957.282129 -99472.608398  103166.331934  100.150000  94957.282129  8208.949805    0.100000        0.100000     1.0     94757.382129         False          False   True
6  103216.806934   94957.282129 -99472.608398  103216.806934   50.575000  94957.282129  8208.949805   50.575000      -49.425000     1.0     94757.382129         False          False   True
7  103692.819434   95157.282129 -99472.608398  103692.819434  526.587500  95157.282129  8535.437305    0.100000        0.100000     1.0     94757.382129         False          False   True
8  103956.513184   95157.431885 -99472.608398  103956.513184  263.793750  95157.431885  8699.131055   99.950244        0.100000     1.0     94757.382129         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 14:15:39]  --------------------------------------------------------------------------------
[08/10 14:15:39]  Iteration: 38 (0 solution, 37 counterexamples)
[08/10 14:15:40]  Generator returned sat in 0.327279 secs.
[08/10 14:15:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:15:44]  Improved gap from 1/44 to 28.125
[08/10 14:15:45]  Improved number of small numbers from 33 to 52 out of a max of 114
[08/10 14:15:45]  Verifer returned sat in 4.457287 secs.
[08/10 14:15:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  115039.751953   94757.382080 -99772.708398  115039.751953    0.050000  94757.382080  20182.369805  100.000068      100.000020     1.0     94757.382080            -1             -1     -1
1  115039.751953   94757.382324 -99772.708398  115039.751953    0.050049  94757.382324  20182.369805   99.999824        0.000020     2.0     94757.382080         False          False   True
2  115039.751953   94857.382129 -99772.708398  115039.751953    0.050049  94857.382129  20182.369805    0.000020      -99.999980     3.0     94757.382080          True           True  False
3  115347.418600   95006.323796 -99772.708398  115347.418600  307.666667  95006.323796  20286.811471   54.283333        3.225000     1.0     94757.382080          True           True  False
4  115447.468600   95157.382129 -99772.708398  115447.468600  154.333333  95157.382129  20286.861471    3.225000        3.225000     1.0     94757.382080         False          False   True
5  115521.910267   95160.657129 -99750.375065  115521.910267   77.666667  95160.657129  20286.861471   74.391667        0.000000     1.0     94757.382080         False          False   True
6  115566.018600   95235.048796 -99694.483643  115566.018600  118.500000  95235.048796  20286.861471   44.108333       -0.000244     2.0     94757.382080         False          False   True
7  115580.160267   95279.207129 -99622.658398  115580.160267   58.250000  95279.207129  20286.861471   14.091667      -14.033333     1.0     95293.298796          True           True  False
8  115594.193600   95307.332129 -99622.658203  115594.193600   28.125000  95307.332129  20286.861471    0.000000      -99.999805     1.0     95293.298796         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=129/40.[0m
[08/10 14:15:45]  --------------------------------------------------------------------------------
[08/10 14:15:45]  Iteration: 39 (0 solution, 38 counterexamples)
[08/10 14:15:56]  Generator returned sat in 9.071559 secs.
[08/10 14:15:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:15:56]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 14:15:56]  Verifer returned sat in 0.674124 secs.
[08/10 14:15:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  115074.480469   94686.419189 -99801.745117  115074.480469   99.325000  94686.419189  20286.811279  101.250000        1.250244     8.0     94686.419189            -1             -1     -1
1  115074.480469   94787.644043 -99702.995361  115074.480469   99.299805  94787.644043  20286.811279    0.025146        0.000000     2.0     94787.669189         False           True   True
2  115173.730225   94886.894287 -99702.270264  115173.730225   99.274902  94886.894287  20286.811279    0.024658       -0.025146     1.0     94886.918945         False          False   True
3  115173.780518   94886.944092 -99602.295410  115173.780518    0.074951  94886.944092  20286.811279    0.025146        0.000000     1.0     94886.969238         False          False   True
4  115374.280273   94937.543945 -99602.295410  115374.280273  200.524902  94937.543945  20286.811279  149.925049      100.499756     1.0     94886.969238         False          False   True
5  115374.280273   94987.194092 -99602.295410  115374.280273  149.899902  94987.194092  20286.811279  100.274902        0.499756     2.0     94886.969238         False          False   True
6  115374.305176   95086.969238 -99502.820068  115374.305176  100.299805  95086.969238  20286.811279    0.524658        0.000000     3.0     94886.969238         False          False   True
7  115374.305176   95087.493896 -99402.820312  115374.305176    0.500000  95087.493896  20286.811279    0.000000       -0.000244     2.0     95087.493896          True           True  False
8  115374.805176   95087.519043 -99402.820068  115374.805176    0.500000  95087.519043  20286.811279    0.474854      -99.500000     1.0     95087.493896         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=201/2.[0m
[08/10 14:15:57]  --------------------------------------------------------------------------------
[08/10 14:15:57]  Iteration: 40 (0 solution, 39 counterexamples)
[08/10 14:16:05]  Generator returned sat in 6.807994 secs.
[08/10 14:16:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:16:06]  Improved gap from 0 to 48.4375
[08/10 14:16:06]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 14:16:06]  Verifer returned sat in 0.775423 secs.
[08/10 14:16:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  114975.587158   94496.432373 -99603.726807  114975.587158  192.437256  94496.432373  20286.811279  192.343506       99.968262     9.0     94496.432373            -1             -1     -1
1  114975.649658   94688.807373 -99603.726807  114975.649658  192.406006  94688.807373  20286.811279    0.031006        0.030762     1.0     94688.838379         False           True   True
2  115025.962402   94739.151123 -99603.726807  115025.962402   50.343750  94739.151123  20286.811279    0.000000      -49.656494     1.0     94739.151123         False          False   True
3  115076.306152   94789.494873 -99552.851807  115076.306152   50.343750  94789.494873  20286.811279    0.000000      -48.437744     1.0     94739.151123         False          False   True
4  115224.837402   94937.932373 -99552.851807  115224.837402  148.531250  94937.932373  20286.842285    0.062744        0.062500     1.0     94739.151123         False          False   True
5  115226.274658   94938.026123 -99501.382812  115226.274658    1.500000  94938.026123  20286.842285    1.406250      -47.031250     1.0     94739.151123         False          False   True
6  115326.305908   94986.463623 -99454.382812  115326.305908  101.437500  94986.463623  20286.842285   53.000000        0.000000     1.0     94739.151123         False          False   True
7  115373.790283   95039.463623 -99402.820312  115373.790283  100.484375  95039.463623  20286.842285   47.484375       -0.953125     2.0     94739.151123         False          False   True
8  115379.071533   95087.901123 -99402.820312  115379.071533   52.765625  95087.901123  20286.842285    4.328125      -95.671875     1.0     94739.151123         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/16.[0m
[08/10 14:16:06]  --------------------------------------------------------------------------------
[08/10 14:16:06]  Iteration: 41 (0 solution, 40 counterexamples)
[08/10 14:16:10]  Generator returned sat in 2.170068 secs.
[08/10 14:16:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:16:11]  Improved gap from 1/1600 to 100
[08/10 14:16:12]  Improved number of small numbers from 41 to 48 out of a max of 114
[08/10 14:16:12]  Verifer returned sat in 2.185433 secs.
[08/10 14:16:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t   service_0,t     losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  114601.469482   94546.803623 -99603.726807  114601.469482     0.100098  94546.803623  20011.066035    43.599824        0.099824     3.0     94546.803623            -1             -1     -1
1  114601.469482   94590.303623 -99603.726807  114601.469482    43.499756  94590.303623  20011.066035     0.099824      -99.900176     2.0     94546.803623         False          False   True
2  115001.369658   94790.203623 -99603.726807  115001.369658   400.000000  94790.203623  20011.066035   200.100000      200.000000     1.0     94546.803623         False          False   True
3  115001.369658   94790.303623 -99603.726807  115001.369658     0.100000  94790.303623  20011.066035   200.000000      100.000000     2.0     94990.303623         False          False   True
4  115001.369658   94890.303623 -99603.726807  115001.369658   123.950000  94890.303623  20011.066035   100.000000        0.000000     3.0     94990.303623         False          False   True
5  115301.269658   94990.403623 -99603.726807  115301.269658   399.900000  94990.403623  20011.066035   299.800000      199.900000     1.0     94990.303623         False          False   True
6  115903.369658   95190.303623 -99603.726807  115903.369658   901.900000  95190.303623  20011.066035   702.000000      702.000000     2.0     94990.303623         False          False   True
7  117207.169658   95290.303623 -99603.726807  117207.169658  2005.800000  95290.303623  20011.066035  1905.800000     1905.800000     2.0     94990.303623         False          False   True
8  119514.969658   95290.303711 -99603.726807  119514.969658  4213.600000  95290.303711  20011.066035  4213.599912     4113.600000     3.0     94990.303623         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=41137/10.[0m
[08/10 14:16:13]  --------------------------------------------------------------------------------
[08/10 14:16:13]  Iteration: 42 (0 solution, 41 counterexamples)
[08/10 14:16:24]  Generator returned sat in 10.136137 secs.
[08/10 14:16:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:16:25]  Improved gap from 0 to 100
[08/10 14:16:26]  Improved number of small numbers from 41 to 114 out of a max of 114
[08/10 14:16:26]  Verifer returned sat in 1.731575 secs.
[08/10 14:16:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t   service_0,t     losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  114781.769775   94490.303711 -99603.727051  114781.769775     0.050000  94490.303711  19791.565918   499.900146      399.900146     7.0     94490.303711            -1             -1     -1
1  114781.819580   94590.303711 -99603.727051  114781.819580   499.949951  94590.303711  19791.565918   399.949951      299.949951     7.0     94490.303711         False          False   True
2  114781.819580   94690.303711 -99603.727051  114781.819580     0.049805  94690.303711  19791.565918   299.949951      199.949951     8.0     94990.253662         False          False   True
3  116790.069824   94790.303711 -99603.727051  116790.069824  2308.200195  94790.303711  20297.666016  1702.100098     1602.100098     9.0     94990.253662         False          False   True
4  116790.069824   94990.203613 -99603.727051  116790.069824  1156.100098  94990.203613  20297.666016  1502.200195     1502.100098     9.0     94990.253662         False           True   True
5  116790.069824   94990.303711 -99603.727051  116790.069824  1354.050049  94990.303711  20297.666016  1502.100098     1402.100098     3.0     94990.253662         False           True  False
6  116790.069824   95190.303711 -99603.727051  116790.069824  1502.050049  95190.303711  20297.666016  1302.100098     1302.100098     4.0     94990.253662         False          False  False
7  117188.019775   95290.303711 -99603.727051  117188.019775  1700.050049  95290.303711  20297.666016  1600.050049     1600.050049     5.0     94990.253662         False          False  False
8  117436.069824   95390.303711 -99603.727051  117436.069824  1848.100098  95390.303711  20443.666016  1602.100098     1602.100098     6.0     94990.253662         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3281101/2048.[0m
[08/10 14:16:27]  --------------------------------------------------------------------------------
[08/10 14:16:27]  Iteration: 43 (0 solution, 42 counterexamples)
[08/10 14:16:35]  Generator returned sat in 7.203439 secs.
[08/10 14:16:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:16:35]  Improved gap from 0 to 48.4375
[08/10 14:16:36]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 14:16:36]  Verifer returned sat in 0.570747 secs.
[08/10 14:16:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  116641.667480   96650.101318 -99603.727051  116641.667480  199.975098  96650.101318  19791.565918  200.000244      100.000244     8.0     96650.101318            -1             -1     -1
1  116641.667480   96801.664062 -99603.727051  116641.667480  199.975098  96801.664062  19791.565918   48.437500        0.000244     9.0     96650.101318         False          False   True
2  116991.129639   96950.101318 -99603.727051  116991.129639  397.899658  96950.101318  19791.565918  249.462402      249.462402     1.0     96650.101318          True           True  False
3  116991.129639   97050.101318 -99603.727051  116991.129639   50.937500  97050.101318  19791.565918  149.462402      149.462402     2.0     97199.563721         False          False  False
4  116991.129639   97149.601562 -99603.727051  116991.129639   50.437500  97149.601562  19791.565918   49.962158       49.462402     3.0     97199.563721         False          False  False
5  116991.129639   97150.101562 -99553.189453  116991.129639   49.937500  97150.101562  19791.565918   49.462158        0.000000     4.0     97199.563721         False          False  False
6  116991.129639   97199.563721 -99501.627197  116991.129639   49.437500  97199.563721  19791.565918    0.000000      -48.437744     5.0     97199.563721         False          False  False
7  117040.067139   97248.001465 -99450.064697  117040.067139   48.937500  97248.001465  19791.565918    0.499756      -47.937744     1.0     97199.563721         False          False  False
8  117088.004883   97296.438965 -99450.064453  117088.004883   48.437500  97296.438965  19791.565918    0.000000      -99.999756     1.0     97199.563721         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=255475/1024.[0m
[08/10 14:16:36]  --------------------------------------------------------------------------------
[08/10 14:16:36]  Iteration: 44 (0 solution, 43 counterexamples)
[08/10 14:16:41]  Generator returned sat in 3.191947 secs.
[08/10 14:16:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:16:42]  Improved gap from 0 to 100
[08/10 14:16:44]  Improved number of small numbers from 41 to 48 out of a max of 114
[08/10 14:16:44]  Verifer returned sat in 2.803937 secs.
[08/10 14:16:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  116492.584473   96996.873965 -99450.064453  116492.584473    0.024902  96996.873965  19195.735674  299.974834      199.974834     6.0     96996.873965            -1             -1     -1
1  116692.159639   97196.873965 -99450.064453  116692.159639  499.550000  97196.873965  19195.735674  299.550000      299.550000     5.0     96996.873965         False           True   True
2  116892.159639   97296.873965 -99450.064453  116892.159639  499.550000  97296.873965  19295.710674  299.575000      299.575000     2.0     96996.873965          True           True  False
3  116993.634639   97396.873965 -99450.064453  116993.634639  401.050000  97396.873965  19297.185674  299.575000      299.575000     3.0     97696.448965         False          False   True
4  117094.609639   97496.423965 -99450.064453  117094.609639  400.550000  97496.423965  19298.160674  300.025000      299.575000     4.0     97696.448965         False          False   True
5  117194.634639   97496.874023 -99450.064453  117194.634639  400.050000  97496.874023  19298.185674  399.574941      299.575000     4.0     97696.448965         False           True   True
6  117194.634639   97696.448965 -99450.064453  117194.634639  399.550000  97696.448965  19298.185674  200.000000      199.575000     4.0     97696.448965         False           True   True
7  117793.059639   97796.873965 -99450.064453  117793.059639  798.425000  97796.873965  19696.610674  299.575000      299.575000     3.0     97696.448965         False           True  False
8  118291.409639   97896.473877 -99450.064453  118291.409639  797.925000  97896.473877  20094.960674  299.975088      299.575000     2.0     97696.448965         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=11983/40.[0m
[08/10 14:16:44]  --------------------------------------------------------------------------------
[08/10 14:16:44]  Iteration: 45 (0 solution, 44 counterexamples)
[08/10 14:16:47]  Generator returned sat in 1.214490 secs.
[08/10 14:16:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:16:48]  Improved number of small numbers from 54 to 57 out of a max of 113
[08/10 14:16:48]  Verifer returned sat in 1.420268 secs.
[08/10 14:16:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  117391.149658   97761.688965 -99450.064697  117391.149658  400.100098  97761.688965  19295.610674  333.850020       333.85002     9.0     97761.688965            -1             -1     -1
1  117457.299639   97761.788965 -99450.064697  117457.299639  400.000000  97761.788965  19295.610674  399.900000       300.00000     6.0     98161.688965         False           True   True
2  117557.499639   97961.688965 -99450.064697  117557.499639  500.100000  97961.688965  19295.710674  300.100000       300.10000     4.0     98161.688965         False           True  False
3  117557.499639   97995.238965 -99450.064697  117557.499639    0.100000  97995.238965  19295.710674  266.550000       200.10000     5.0     98261.788965         False          False   True
4  117757.599639   98095.638965 -99450.064697  117757.599639  466.650000  98095.638965  19295.810674  366.150000       300.10000     4.0     98261.788965         False           True  False
5  117857.599639   98161.688965 -99450.064697  117857.599639  466.150000  98161.688965  19295.810674  400.100000       300.10000     5.0     98261.788965         False          False   True
6  118090.074639   98261.888965 -99450.064697  118090.074639  632.575000  98261.888965  19428.285674  399.900000       300.10000     3.0     98261.788965         False           True  False
7  118322.249639   98361.688965 -99450.064697  118322.249639  632.075000  98361.688965  19560.460674  400.100000       300.10000     4.0     98261.788965         False          False   True
8  118553.724639   98561.688721 -99450.064697  118553.724639  631.575000  98561.688721  19691.935674  300.100244       300.10000     4.0     98261.788965         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=3001/10.[0m
[08/10 14:16:49]  --------------------------------------------------------------------------------
[08/10 14:16:49]  Iteration: 46 (0 solution, 45 counterexamples)
[08/10 14:16:51]  Generator returned sat in 0.606039 secs.
[08/10 14:16:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:16:52]  Improved number of small numbers from 55 to 57 out of a max of 113
[08/10 14:16:52]  Verifer returned sat in 1.325614 secs.
[08/10 14:16:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  117391.070557   97761.688965 -99450.064941  117391.070557  400.099854  97761.688965  19295.610674  333.770918      333.770918     4.0     97761.688965            -1             -1     -1
1  117457.299639   97761.788965 -99450.064941  117457.299639  400.000000  97761.788965  19295.610674  399.900000      300.000000     4.0     98161.688965         False          False   True
2  117557.499639   97961.688965 -99450.064941  117557.499639  500.100000  97961.688965  19295.710674  300.100000      300.100000     4.0     98161.688965         False          False   True
3  117557.499639   97995.084798 -99450.064941  117557.499639    0.025000  97995.084798  19295.710674  266.704167      200.100000     5.0     98261.788965         False          False   True
4  117757.599639   98095.484798 -99450.064941  117757.599639  466.804167  98095.484798  19295.810674  366.304167      300.100000     4.0     98261.788965         False           True  False
5  117857.599639   98161.688965 -99450.064941  117857.599639  466.304167  98161.688965  19295.810674  400.100000      300.100000     5.0     98261.788965         False          False   True
6  118090.651722   98261.888965 -99450.064941  118090.651722  633.152083  98261.888965  19428.862757  399.900000      300.100000     3.0     98261.788965         False           True  False
7  118323.403805   98361.688965 -99450.064941  118323.403805  632.652083  98361.688965  19561.614840  400.100000      300.100000     4.0     98261.788965         False          False   True
8  118555.455889   98561.688477 -99450.064941  118555.455889  632.152083  98561.688477  19693.666924  300.100488      300.100000     4.0     98261.788965         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=3001/10.[0m
[08/10 14:16:53]  --------------------------------------------------------------------------------
[08/10 14:16:53]  Iteration: 47 (0 solution, 46 counterexamples)
[08/10 14:17:05]  Generator returned sat in 10.788479 secs.
[08/10 14:17:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:17:06]  Improved gap from 1/800 to 100
[08/10 14:17:06]  Improved number of small numbers from 79 to 114 out of a max of 114
[08/10 14:17:06]  Verifer returned sat in 0.784652 secs.
[08/10 14:17:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  117659.229980   98329.168945 -99450.064697  117659.229980  134.550000  98329.168945  19295.610840   34.450195       -0.049805     1.0     98329.168945            -1             -1   False
1  117759.329834   98363.669189 -99450.064697  117759.329834  134.550049  98363.669189  19295.610840  100.049805        0.050049     1.0     98329.168945         False          False   False
2  117759.329834   98463.668945 -99450.064697  117759.329834   99.999756  98463.668945  19295.610840    0.050049      -99.949951     2.0     98463.718994         False          False   False
3  117959.279785   98563.668945 -99450.064697  117959.279785  200.000000  98563.668945  19295.610840  100.000000        0.000000     1.0     98463.718994         False           True   False
4  118093.279785   98720.335693 -99450.064697  118093.279785  234.000000  98720.335693  19295.660889   77.283203       33.949951     1.0     98463.718994         False          False   False
5  118193.329834   98863.668945 -99450.064697  118193.329834  177.333252  98863.668945  19295.710938   33.949951       33.949951     1.0     98463.718994         False          False    True
6  118358.379883   98897.668945 -99450.064697  118358.379883  199.000000  98897.668945  19360.760986   99.949951       33.949951     1.0     98463.718994         False          False    True
7  118424.429932   98963.668945 -99450.064697  118424.429932  166.000000  98963.668945  19360.760986  100.000000        0.000000     2.0     98463.718994         False          False    True
8  118567.263184   99063.719062 -99450.064697  118567.263184  242.833252  99063.719062  19369.644287  133.899834       33.949951     1.0     99197.618896          True           True   False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=139059/4096.[0m
[08/10 14:17:07]  --------------------------------------------------------------------------------
[08/10 14:17:07]  Iteration: 48 (0 solution, 47 counterexamples)
[08/10 14:17:11]  Generator returned sat in 3.075842 secs.
[08/10 14:17:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:17:12]  Improved gap from 1 to 100
[08/10 14:17:13]  Improved number of small numbers from 66 to 74 out of a max of 114
[08/10 14:17:13]  Verifer returned sat in 1.207278 secs.
[08/10 14:17:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  117758.079834   98195.118896 -99450.064941  117758.079834    0.100098  98195.118896  19363.060791  199.900146       99.900146     2.0     98195.118896            -1             -1   False
1  117758.379883   98395.118896 -99450.064941  117758.379883  200.200195  98395.118896  19363.060986    0.200000        0.200000     1.0     98195.118896         False          False   False
2  117758.379883   98395.118896 -99450.064941  117758.379883    0.100098  98395.118896  19363.060986    0.200000      -99.800000     1.0     98395.318896         False          False    True
3  117958.479883   98529.318896 -99450.064941  117958.479883  200.300000  98529.318896  19363.160986   66.000000        0.200000     1.0     98395.318896         False          False    True
4  118058.579883   98595.985563 -99450.064941  118058.579883  166.100000  98595.985563  19363.260986   99.333333        0.200000     1.0     98395.318896         False          False    True
5  118058.679883   98695.118896 -99450.064941  118058.679883   99.433333  98695.118896  19363.260986    0.300000      -99.700000     2.0     98395.318896         False          False    True
6  118358.379883   98840.718896 -99450.064941  118358.379883  300.000000  98840.718896  19463.060986   54.600000        0.200000     1.0     98395.318896         False          False    True
7  118458.479883   98995.118896 -99450.064941  118458.479883  154.700000  98995.118896  19463.160986    0.200000        0.200000     1.0     98395.318896         False          False    True
8  118656.846549   98995.418701 -99450.064941  118656.846549  198.566667  98995.418701  19561.527653   99.900195        0.200000     1.0     98395.318896         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 14:17:13]  --------------------------------------------------------------------------------
[08/10 14:17:13]  Iteration: 49 (0 solution, 48 counterexamples)
[08/10 14:17:32]  Generator returned sat in 17.305362 secs.
[08/10 14:17:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:17:32]  Improved gap from 0 to 100
[08/10 14:17:34]  Improved number of small numbers from 34 to 41 out of a max of 114
[08/10 14:17:34]  Verifer returned sat in 1.439786 secs.
[08/10 14:17:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  118056.096436   98494.718896 -99449.964941  118056.096436    0.050000  98494.718896  19461.177653  100.199886       99.999886     8.0     98494.718896            -1             -1     -1
1  118056.096436   98494.918896 -99449.964941  118056.096436  100.150146  98494.918896  19461.177653   99.999886       -0.000114     9.0     98494.718896         False          False   True
2  118056.196549   98594.968896 -99449.964941  118056.196549  100.100000  98594.968896  19461.177653    0.050000      -99.900000     1.0     98595.018896          True           True  False
3  118256.096549   98694.918896 -99449.964941  118256.096549  199.950000  98694.918896  19461.177653  100.000000        0.000000     1.0     98595.018896         False          False  False
4  118458.396549   98894.918896 -99449.964941  118458.396549  302.300000  98894.918896  19461.177653  102.300000      102.300000     1.0     98595.018896         False          False  False
5  118958.096549   98894.968896 -99449.964941  118958.096549  602.000000  98894.968896  19860.827653  202.300000      102.350000     2.0     98595.018896         False          False  False
6  119357.296549   99094.918896 -99449.964941  119357.296549  601.500000  99094.918896  20160.027653  102.350000      102.350000     2.0     98595.018896         False          False   True
7  119855.946549   99194.918896 -99449.964941  119855.946549  601.000000  99194.918896  20558.677653  102.350000      102.350000     2.0     98595.018896         False          False   True
8  120354.096549   99294.918701 -99449.964941  120354.096549  600.500000  99294.918701  20956.827653  102.350195      102.350000     2.0     98595.018896         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=2047/20.[0m
[08/10 14:17:34]  --------------------------------------------------------------------------------
[08/10 14:17:34]  Iteration: 50 (0 solution, 49 counterexamples)
[08/10 14:17:52]  Generator returned sat in 16.256331 secs.
[08/10 14:17:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:17:54]  Improved gap from 1/1200 to 48.4375
[08/10 14:17:55]  Improved number of small numbers from 32 to 47 out of a max of 114
[08/10 14:17:55]  Verifer returned sat in 2.996502 secs.
[08/10 14:17:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  119868.867188   99858.608398 -99449.964844  119868.867188    0.001250   99858.608398  19810.258903  199.999886      100.000111     9.0     99858.608398            -1             -1     -1
1  119868.867188   99958.608271 -99449.964844  119868.867188  199.998779   99958.608271  19810.258903  100.000013        0.000111     9.0     99858.608398         False           True   True
2  119968.864674  100110.168271 -99449.962441  119968.864674  199.997500  100110.168271  19810.258903   48.437500        0.000000     1.0    100158.605771          True           True  False
3  120119.434674  100258.605771 -99449.962441  120119.434674  199.007500  100258.605771  19860.826403    0.002500        0.002500     1.0    100258.608271         False          False  False
4  120219.435924  100358.605771 -99449.962441  120219.435924  100.003750  100358.605771  19860.827653    0.002500        0.002500     1.0    100258.608271         False          False   True
5  120269.935299  100358.605771 -99400.464316  120269.935299   50.501875  100358.605771  19860.827653   50.501875        0.000000     1.0    100258.608271         False          False   True
6  120269.935299  100409.107646 -99348.901816  120269.935299    0.010000  100409.107646  19860.827653    0.000000      -48.437500     2.0    100258.608271         False          False   True
7  120346.691237  100457.545146 -99297.339355  120346.691237   76.755938  100457.545146  19860.827653   28.318438      -20.119102     1.0    100485.863584          True           True  False
8  120407.720456  100508.604736 -99297.339355  120407.720456   89.347656  100508.604736  19860.827653   38.288066      -59.089883     1.0    100485.863584         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 14:17:56]  --------------------------------------------------------------------------------
[08/10 14:17:56]  Iteration: 51 (0 solution, 50 counterexamples)
[08/10 14:18:09]  Generator returned sat in 12.067481 secs.
[08/10 14:18:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:18:11]  Improved gap from 0 to 23.4375
[08/10 14:18:12]  Improved number of small numbers from 44 to 52 out of a max of 114
[08/10 14:18:12]  Verifer returned sat in 3.055686 secs.
[08/10 14:18:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  122373.185303  102462.927559 -102070.288379  122373.185303  100.003662  102462.927559  19810.258789  99.998955       99.998955     9.0    102462.927559            -1             -1     -1
1  122373.188848  102562.927559 -102070.288379  122373.188848  100.002500  102562.927559  19810.258789   0.002500        0.002500     1.0    102562.930059         False           True   True
2  122373.188848  102562.927559 -102070.288379  122373.188848    0.001465  102562.927559  19810.258789   0.002500      -99.997500     1.0    102562.930059         False          False   True
3  122499.191973  102662.927559 -102070.288379  122499.191973  126.005625  102662.927559  19810.258789  26.005625      -73.994375     1.0    102562.930059         False          False   True
4  122697.191973  102862.927559 -102070.288379  122697.191973  224.005625  102862.927559  19810.260039  24.004375       24.004375     1.0    102562.930059         False          False   True
5  122697.191973  102862.927559 -101994.292754  122697.191973    0.010000  102862.927559  19810.260039  24.004375        0.000000     1.0    102562.930059         False          False   True
6  122821.197598  102986.930664 -101994.292754  122821.197598  148.010000  102986.930664  19810.261289  24.005645       24.004375     1.0    102562.930059         False          False   True
7  122821.197598  102986.932129 -101918.297129  122821.197598    0.010000  102986.932129  19810.261289  24.004180        0.000000     2.0    102562.930059         False          False   True
8  122821.197598  103010.936309 -101918.297119  122821.197598    0.010000  103010.936309  19810.261289   0.000000      -99.999990     3.0    103010.936309          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=38407/1600.[0m
[08/10 14:18:13]  --------------------------------------------------------------------------------
[08/10 14:18:13]  Iteration: 52 (0 solution, 51 counterexamples)
[08/10 14:18:33]  Generator returned sat in 18.306127 secs.
[08/10 14:18:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:18:35]  Improved gap from 1/800 to 48.4375
[08/10 14:18:36]  Improved number of small numbers from 51 to 60 out of a max of 114
[08/10 14:18:36]  Verifer returned sat in 3.265750 secs.
[08/10 14:18:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  126435.093018  106431.942754 -102116.307373  126435.093018    0.001221  106431.942754  19810.258789  192.891475       99.998730     5.0    106431.942754            -1             -1     -1
1  126435.101543  106624.835205 -102116.307373  126435.101543  192.900000  106624.835205  19810.258789    0.007549        0.007256     1.0    106431.942754         False           True   True
2  126485.752930  106674.179004 -102116.307129  126485.752930   50.658936  106674.179004  19810.258789    1.315137      -49.341113     1.0    106675.494141         False          False   True
3  126535.095293  106724.835254 -102064.744629  126535.095293   50.657500  106724.835254  19810.258789    0.001250      -48.436250     1.0    106724.836504         False          False   True
4  126683.540293  106873.272754 -102064.744629  126683.540293  148.446250  106873.272754  19810.260039    0.007500        0.007500     1.0    106724.836504         False          False   True
5  126683.542793  106873.281504 -102013.190879  126683.542793    0.010000  106873.281504  19810.260039    0.001250      -48.436250     1.0    106724.836504         False          False   True
6  126785.092793  106921.719004 -101966.305664  126785.092793  101.551250  106921.719004  19810.260039   53.113750       -0.001035     1.0    106724.836504         False          False   True
7  126832.420918  106974.834004 -101914.743379  126832.420918  100.441875  106974.834004  19810.260039   47.326875       -1.110625     1.0    106724.836504         False          False   True
8  126837.874668  107023.271504 -101863.180908  126837.874668   52.780625  107023.271504  19810.260039    4.343125      -44.094404     1.0    106724.836504         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3/400.[0m
[08/10 14:18:37]  --------------------------------------------------------------------------------
[08/10 14:18:37]  Iteration: 53 (0 solution, 52 counterexamples)
[08/10 14:18:42]  Generator returned sat in 3.362932 secs.
[08/10 14:18:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:18:43]  Improved gap from 5/16384 to 23.4375
[08/10 14:18:43]  Improved number of small numbers from 54 to 114 out of a max of 114
[08/10 14:18:43]  Verifer returned sat in 1.229015 secs.
[08/10 14:18:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  126565.339111  106575.397705 -102141.307129  126565.339111    0.002686  106575.397705  19810.258789  179.682617       99.997803     2.0    106575.397705            -1             -1     -1
1  126565.339111  106655.082764 -102141.307129  126565.339111  179.682500  106655.082764  19810.258789   99.997559       -0.002197     2.0    106575.397705         False          False   True
2  126565.341553  106755.082764 -102064.744873  126565.341553  100.000000  106755.082764  19810.258789    0.000000      -23.437500     1.0    106755.082764         False          False   True
3  126693.896484  106778.520264 -102064.744873  126693.896484  128.554932  106778.520264  19810.258789  105.117432        5.117432     1.0    106755.082764         False          False   True
4  126793.901611  106975.397705 -102064.744873  126793.901611  205.122559  106975.397705  19810.261230    8.242676        5.120117     1.0    106755.082764         False          False   True
5  126793.901611  106978.520264 -101988.182373  126793.901611    0.010000  106978.520264  19810.261230    5.120117      -18.317383     2.0    106755.082764         False          False   True
6  127014.218994  107001.957764 -101988.182373  127014.218994  225.437500  107001.957764  19907.141113  105.120117        5.120117     1.0    106755.082764         False          False   True
7  127014.218994  107101.957764 -101911.619873  127014.218994    0.010000  107101.957764  19907.141113    5.120117      -18.317383     2.0    106755.082764         False          False   True
8  127137.658936  107125.395264 -101911.619873  127137.658936  128.560059  107125.395264  19907.143555  105.120117        5.120117     1.0    106755.082764         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=5243/1024.[0m
[08/10 14:18:44]  --------------------------------------------------------------------------------
[08/10 14:18:44]  Iteration: 54 (0 solution, 53 counterexamples)
[08/10 14:19:10]  Generator returned sat in 24.840990 secs.
[08/10 14:19:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:19:11]  Improved gap from 1/20 to 100
[08/10 14:19:12]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 14:19:12]  Verifer returned sat in 1.241736 secs.
[08/10 14:19:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t     losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  123193.613770  103083.354980 -98569.57959  123193.613770  1914.199951  103083.354980  19810.258789   300.000000      300.000000     8.0    103083.354980            -1             -1     -1
1  124807.763672  103183.354980 -98569.57959  124807.763672  1914.149902  103183.354980  19810.258789  1814.149902     1814.149902     9.0    104997.504883         False           True   True
2  124807.763672  103283.354980 -98569.57959  124807.763672  1072.650146  103283.354980  19810.258789  1714.149902     1714.149902     4.0    104997.504883         False           True  False
3  124807.763672  103383.354980 -98569.57959  124807.763672  1072.600098  103383.354980  19810.258789  1614.149902     1614.149902     4.0    104997.504883         False          False  False
4  124807.763672  103383.354980 -98569.57959  124807.763672  1221.600098  103383.354980  19810.258789  1614.149902     1514.149902     4.0    104997.504883         False          False  False
5  124807.763672  103546.354980 -98569.57959  124807.763672  1320.600098  103546.354980  19810.258789  1451.149902     1414.149902     5.0    104997.504883         False          False  False
6  124807.763672  103683.354980 -98569.57959  124807.763672  1451.100098  103683.354980  19810.258789  1314.149902     1314.149902     6.0    104997.504883         False          False  False
7  125093.713867  103683.404785 -98569.57959  125093.713867  1600.100098  103683.404785  19810.258789  1600.050293     1500.100098     7.0    104997.504883         False          False  False
8  125242.788574  103883.354980 -98569.57959  125242.788574  1749.125000  103883.354980  19810.258789  1549.174805     1549.174805     8.0    104997.504883         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=9071/5.[0m
[08/10 14:19:12]  --------------------------------------------------------------------------------
[08/10 14:19:12]  Iteration: 55 (0 solution, 54 counterexamples)
[08/10 14:19:27]  Generator returned sat in 12.983387 secs.
[08/10 14:19:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:19:28]  Improved gap from 1/10 to 17.1875
[08/10 14:19:29]  Improved number of small numbers from 65 to 84 out of a max of 114
[08/10 14:19:29]  Verifer returned sat in 1.530335 secs.
[08/10 14:19:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  124355.613525  104545.330078 -100032.554492  124355.613525    0.025146  104545.330078  19810.258789   0.024658       -0.975146     9.0    104545.330078            -1             -1     -1
1  124481.638672  104645.329834 -100032.554492  124481.638672  126.049805  104645.329834  19810.258789  26.050049       25.050000     1.0    104545.330078         False           True  False
2  124581.638428  104745.379883 -100032.554492  124581.638428  126.049805  104745.379883  19810.258789  25.999756       25.049756     1.0    104545.330078         False          False  False
3  124681.688672  104845.879883 -100032.554492  124681.688672  126.050000  104845.879883  19810.283789  25.525000       25.075000     1.0    104545.330078         False          False  False
4  124781.713672  104946.329883 -100032.554492  124781.713672  125.550000  104946.329883  19810.308789  25.075000       25.075000     1.0    104545.330078         False          False   True
5  124881.688672  105015.592383 -100032.554492  124881.688672  125.050000  105015.592383  19810.308789  55.787500       25.050000     1.0    104545.330078         False          False   True
6  124889.426172  105046.330078  -99965.341992  124889.426172   63.525000  105046.330078  19810.308789  32.787305        0.000000     2.0    104545.330078         False          False   True
7  124889.426172  105079.117383  -99882.529541  124889.426172   32.762500  105079.117383  19810.308789   0.000000      -17.187549     2.0    104545.330078         False          False   True
8  124906.807422  105096.304932  -99882.529541  124906.807422   17.381250  105096.304932  19810.308789   0.193701      -99.806299     1.0    104545.330078         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1003/40.[0m
[08/10 14:19:29]  --------------------------------------------------------------------------------
[08/10 14:19:29]  Iteration: 56 (0 solution, 55 counterexamples)
[08/10 14:19:32]  Generator returned sat in 0.884327 secs.
[08/10 14:19:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:19:33]  Improved gap from 149889/10240 to 18.75
[08/10 14:19:34]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 14:19:34]  Verifer returned sat in 1.909891 secs.
[08/10 14:19:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  124435.988770  104573.379639 -100082.654541  124435.988770  145.599854  104573.379639  19762.708984  99.900146       76.849854     8.0    104573.379639            -1             -1     -1
1  124481.638672  104673.329834 -100082.654541  124481.638672  145.550049  104673.329834  19762.758789  45.550049       22.449951     1.0    104718.879883         False           True  False
2  124581.588623  104796.429932 -100082.654541  124581.588623  145.500000  104796.429932  19762.758789  22.399902       22.399902     1.0    104818.829834         False          False   True
3  124682.188721  104896.429688 -100082.654541  124682.188721  123.000000  104896.429688  19763.308838  22.450195       22.449951     1.0    104918.879883         False          False   True
4  124782.238525  104983.979980 -100082.654541  124782.238525  122.500000  104983.979980  19763.358643  34.899902       22.449951     1.0    104918.879883         False          False   True
5  124869.338623  105042.929932 -100082.654541  124869.338623  122.000000  105042.929932  19763.358643  63.050049        9.550049     1.0    104918.879883         False          False   True
6  124869.338623  105096.429932 -100001.404541  124869.338623   63.000000  105096.429932  19763.358643   9.550049       -9.199951     2.0    104918.879883         False          False   True
7  124893.288574  105115.179932  -99920.154541  124893.288574   33.500000  105115.179932  19763.358643  14.750000       -4.000000     1.0    104918.879883         False          False   True
8  124897.288574  105133.929932  -99920.154541  124897.288574   18.750000  105133.929932  19763.358643   0.000000     -100.000000     1.0    104918.879883         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=91955/4096.[0m
[08/10 14:19:34]  --------------------------------------------------------------------------------
[08/10 14:19:34]  Iteration: 57 (0 solution, 56 counterexamples)
[08/10 14:19:37]  Generator returned sat in 1.093235 secs.
[08/10 14:19:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:19:40]  Improved gap from 64615/4096 to 18.75
[08/10 14:19:41]  Improved number of small numbers from 37 to 114 out of a max of 114
[08/10 14:19:41]  Verifer returned sat in 3.319736 secs.
[08/10 14:19:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  121332.055420  105451.596924 -100668.429688  121332.055420  200.200195  105451.596924  15880.458496    0.000000       -0.049805     2.0    105451.596924            -1             -1    True
1  121532.205322  105451.646729 -100668.429688  121532.205322  200.149902  105451.646729  15963.958740  116.599854       16.599854     1.0    105568.246582         False          False    True
2  121615.655273  105651.646484 -100668.429688  121615.655273  200.049805  105651.646484  15963.958740    0.050049        0.049805     1.0    105651.696533         False          False    True
3  121745.605225  105751.646729 -100668.429688  121745.605225  130.000000  105751.646729  15977.358643   16.599854       16.599854     1.0    105768.246582         False          False    True
4  121858.505371  105839.196777 -100668.429688  121858.505371  129.500000  105839.196777  15990.258789   29.049805       16.599854     1.0    105768.246582         False          False    True
5  121958.455566  105868.296875 -100668.429688  121958.455566  129.000000  105868.296875  15990.258789   99.899902       16.550049     1.0    105768.246582         False          False    True
6  121958.455566  105951.646729 -100587.179688  121958.455566   66.000000  105951.646729  15990.258789   16.550049       -2.199951     2.0    105768.246582         False          False    True
7  121976.405518  105970.396729 -100505.929688  121976.405518   34.500000  105970.396729  15990.258789   15.750000       -3.000000     1.0    105768.246582         False          False    True
8  121979.405518  105989.146729 -100424.679688  121979.405518   18.750000  105989.146729  15990.258789    0.000000      -18.750000     1.0    105768.246582         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=67993/4096.[0m
[08/10 14:19:41]  --------------------------------------------------------------------------------
[08/10 14:19:41]  Iteration: 58 (0 solution, 57 counterexamples)
[08/10 14:19:51]  Generator returned sat in 7.608071 secs.
[08/10 14:19:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:19:52]  Improved gap from 0 to 46.875
[08/10 14:19:52]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 14:19:52]  Verifer returned sat in 1.742876 secs.
[08/10 14:19:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  122641.555176  106464.296387 -101681.079346  122641.555176    0.100098  106464.296387  15977.358398  199.900391      199.900391     1.0    106464.296387            -1             -1    True
1  122641.555176  106464.296631 -101681.079346  122641.555176  199.899902  106464.296631  15977.358398  199.900146       99.900391     2.0    106464.296387         False          False    True
2  122892.630127  106664.296387 -101681.079346  122892.630127  450.975098  106664.296387  15977.358398  250.975342      250.975342     1.0    106464.296387          True           True   False
3  122892.630127  106764.296387 -101681.079346  122892.630127   56.875000  106764.296387  15977.358398  150.975342      150.975342     2.0    106915.271729         False          False   False
4  122892.630127  106862.296631 -101681.079346  122892.630127   54.875000  106862.296631  15977.358398   52.975098       50.975342     3.0    106915.271729         False           True   False
5  122892.630127  106864.296631 -101632.054688  122892.630127   52.875000  106864.296631  15977.358398   50.975098        0.000000     4.0    106915.271729         False           True   False
6  122892.630127  106915.271729 -101578.929688  122892.630127   50.875000  106915.271729  15977.358398    0.000000      -46.875000     5.0    106915.271729         False           True   False
7  122941.505127  106962.146729 -101525.804688  122941.505127   48.875000  106962.146729  15977.358398    2.000000      -44.875000     1.0    106915.271729         False           True   False
8  122986.380127  107009.021729 -101525.804688  122986.380127   46.875000  107009.021729  15977.358398    0.000000     -100.000000     1.0    106915.271729         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=257101/1024.[0m
[08/10 14:19:53]  --------------------------------------------------------------------------------
[08/10 14:19:53]  Iteration: 59 (0 solution, 58 counterexamples)
[08/10 14:20:12]  Generator returned sat in 17.509845 secs.
[08/10 14:20:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:20:13]  Improved gap from 0 to 100
[08/10 14:20:14]  Improved number of small numbers from 72 to 75 out of a max of 114
[08/10 14:20:14]  Verifer returned sat in 1.426608 secs.
[08/10 14:20:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  122541.654785  106464.296387 -101632.054688  122541.654785    0.099854  106464.296387  15977.258398  100.100000          100.10     2.0    106464.296387            -1             -1     -1
1  122541.654785  106464.296387 -101632.054688  122541.654785    0.100098  106464.296387  15977.258398  100.100000            0.10     2.0    106464.296387         False           True   True
2  122641.654785  106664.296387 -101632.054688  122641.654785  200.100000  106664.296387  15977.258398    0.100000            0.10     1.0    106464.296387         False           True  False
3  122741.854785  106764.296387 -101632.054688  122741.854785  100.300000  106764.296387  15977.358398    0.200000            0.20     1.0    106764.496387         False          False  False
4  122890.154785  106764.596387 -101632.054688  122890.154785  148.500000  106764.596387  16025.658398   99.900000            0.20     1.0    106764.496387         False          False   True
5  122938.904785  106864.596387 -101632.054688  122938.904785  148.650000  106864.596387  16025.658398   48.650000          -51.05     1.0    106764.496387         False          False   True
6  123265.029785  107032.163053 -101632.054688  123265.029785  374.775000  107032.163053  16200.533398   32.333333            0.20     1.0    106764.496387         False          False   True
7  123365.129785  107164.296387 -101632.054688  123365.129785  132.433333  107164.296387  16200.633398    0.200000            0.20     1.0    106764.496387         False          False   True
8  123563.279785  107164.596191 -101632.054688  123563.279785  198.350000  107164.596191  16298.783398   99.900195            0.20     1.0    106764.496387         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 14:20:14]  --------------------------------------------------------------------------------
[08/10 14:20:14]  Iteration: 60 (0 solution, 59 counterexamples)
[08/10 14:20:21]  Generator returned sat in 4.305200 secs.
[08/10 14:20:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:20:21]  Improved gap from 1/1200 to 0
[08/10 14:20:21]  Improved number of small numbers from 53 to 114 out of a max of 114
[08/10 14:20:21]  Verifer returned sat in 0.522131 secs.
[08/10 14:20:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  122589.454590  106463.696289 -101930.554688  122589.454590    0.200000  106463.696289  16025.658203  100.100098      100.100098     8.0    106463.696289            -1             -1     -1
1  122589.454590  106463.796387 -101930.554688  122589.454590    0.099854  106463.796387  16025.658203  100.000000        0.100098     2.0    106563.796387         False           True  False
2  122789.254639  106563.696533 -101930.554688  122789.254639  299.800049  106563.696533  16025.658203  199.899902       99.900146     3.0    106563.796387         False           True  False
3  122889.954590  106763.696289 -101930.554688  122889.954590  300.599854  106763.696289  16025.658203  100.600098      100.600098     1.0    106563.796387         False           True  False
4  122889.954590  106863.596436 -101930.554688  122889.954590    0.500000  106863.596436  16025.658203    0.699951        0.600098     2.0    106563.796387         False          False  False
5  122889.954590  106863.696533 -101831.154785  122889.954590    0.500000  106863.696533  16025.658203    0.599854        0.000000     3.0    106864.296387          True           True  False
6  122889.954590  106864.296387 -101731.154785  122889.954590    0.500000  106864.296387  16025.658203    0.000000        0.000000     4.0    106864.296387         False           True  False
7  122890.454590  106864.696533 -101632.054932  122890.454590    0.500000  106864.696533  16025.658203    0.099854       -0.400146     1.0    106864.296387         False           True  False
8  122890.854736  106865.196533 -101632.054932  122890.854736    0.500000  106865.196533  16025.658203    0.000000     -100.000000     1.0    106864.296387         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=103117/1024.[0m
[08/10 14:20:22]  --------------------------------------------------------------------------------
[08/10 14:20:22]  Iteration: 61 (0 solution, 60 counterexamples)
[08/10 14:20:25]  Generator returned sat in 1.163658 secs.
[08/10 14:20:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:20:25]  Improved gap from 0 to 0
[08/10 14:20:26]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 14:20:26]  Verifer returned sat in 0.711151 secs.
[08/10 14:20:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  123675.144531  107449.686523 -102126.754883  123675.144531    0.100098  107449.686523  16025.558105  199.899902      199.899902     2.0    107449.686523            -1             -1     -1
1  123675.344727  107449.686768 -102126.754883  123675.344727  200.100098  107449.686768  16025.658203  199.999756      100.000000     2.0    107449.686523         False           True  False
2  123675.344727  107649.686523 -102126.754883  123675.344727    0.100000  107649.686523  16025.658203    0.000000        0.000000     2.0    107649.686523          True           True   True
3  123675.544678  107649.786621 -102026.954834  123675.544678    0.199951  107649.786621  16025.658203    0.099854        0.000000     1.0    107649.686523         False           True  False
4  123676.944824  107651.186523 -101929.654785  123676.944824    1.500000  107651.186523  16025.658203    0.100098       -1.299805     1.0    107649.686523         False          False  False
5  123678.344727  107652.586670 -101829.754883  123678.344727    1.500000  107652.586670  16025.658203    0.099854        0.000000     1.0    107649.686523         False          False  False
6  123679.744873  107653.986328 -101731.155029  123679.744873    1.500000  107653.986328  16025.658203    0.100342        0.000000     1.0    107649.686523         False          False  False
7  123681.144531  107654.186523 -101632.754639  123681.144531    1.500000  107654.186523  16025.658203    1.299805       -0.199951     1.0    107649.686523         False          False  False
8  123681.344727  107655.686523 -101532.754883  123681.344727    1.500000  107655.686523  16025.658203    0.000000        0.000000     1.0    107649.686523         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=100.[0m
[08/10 14:20:26]  --------------------------------------------------------------------------------
[08/10 14:20:26]  Iteration: 62 (0 solution, 61 counterexamples)
[08/10 14:20:33]  Generator returned sat in 4.431825 secs.
[08/10 14:20:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:20:34]  Improved gap from 1023/10240 to 48.4375
[08/10 14:20:35]  Improved number of small numbers from 59 to 79 out of a max of 114
[08/10 14:20:35]  Verifer returned sat in 2.290470 secs.
[08/10 14:20:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107272.174072  107072.178955 -101834.544196  107272.174072    0.002441  107072.178955      0.000  199.995117      199.992402     1.0    107072.178955            -1             -1    True
1  107272.174072  107072.181885 -101834.544196  107272.174072    0.002500  107072.181885      0.000  199.992188       99.992402     2.0    107072.178955         False          False    True
2  107272.174072  107272.171670 -101834.544196  107272.174072  199.990000  107272.171670      0.000    0.002402       -0.007598     3.0    107072.178955          True           True   False
3  107573.061670  107323.744170 -101834.544196  107573.061670  300.890000  107323.744170    100.885  148.432500       99.995000     1.0    107072.178955          True           True   False
4  107573.074170  107472.179170 -101834.544196  107573.074170  148.445000  107472.179170    100.885    0.010000        0.007500     1.0    107072.178955         False          False    True
5  107573.074170  107472.181670 -101782.981696  107573.074170    0.010000  107472.181670    100.885    0.007500      -48.430000     2.0    107072.178955         False          False    True
6  107671.071670  107520.619170 -101736.101562  107671.071670   98.005000  107520.619170    100.885   49.567500       -3.552367     1.0    107570.186670          True           True   False
7  107717.941670  107573.739170 -101684.539196  107717.941670   96.437500  107573.739170    100.885   43.317500       -5.120000     1.0    107570.186670         False          False   False
8  107723.404170  107622.176758 -101684.539062  107723.404170   48.780000  107622.176758    100.885    0.342412      -99.657367     1.0    107570.186670         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=19999/200.[0m
[08/10 14:20:36]  --------------------------------------------------------------------------------
[08/10 14:20:36]  Iteration: 63 (0 solution, 62 counterexamples)
[08/10 14:20:40]  Generator returned sat in 2.098546 secs.
[08/10 14:20:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:20:40]  Improved gap from 1/10 to 100
[08/10 14:20:41]  Improved number of small numbers from 59 to 76 out of a max of 114
[08/10 14:20:41]  Verifer returned sat in 1.215937 secs.
[08/10 14:20:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  107361.816650  107261.516602 -101834.544196  107361.816650    0.099854  107261.516602     0.100000  100.200049      100.199980     2.0    107261.516602            -1             -1     -1
1  107361.816650  107261.516670 -101834.544196  107361.816650  100.200000  107261.516670     0.100000  100.199980        0.199980     2.0    107261.516602         False           True   True
2  107461.716670  107461.516670 -101834.544196  107461.716670  200.100000  107461.516670     0.100000    0.100000        0.100000     1.0    107261.516602          True           True  False
3  108249.350003  107461.516670 -101834.544196  108249.350003  787.733333  107461.516670   687.633333  100.200000        0.200000     1.0    107261.516602         False          False  False
4  108541.016670  107567.883337 -101834.544196  108541.016670  391.866667  107567.883337   879.300000   93.833333        0.200000     1.0    107261.516602         False          False   True
5  108641.116670  107761.516670 -101834.544196  108641.116670  193.933333  107761.516670   879.400000    0.200000        0.200000     1.0    107261.516602         False          False   True
6  108735.883337  107856.383337 -101834.544196  108735.883337   94.966667  107856.383337   879.400000    0.100000       -5.033333     1.0    107261.516602         False          False   True
7  109523.516670  107861.516670 -101834.544196  109523.516670  787.733333  107861.516670  1561.800000  100.200000        0.200000     1.0    107261.516602         False          False   True
8  109815.183337  107961.816650 -101834.544196  109815.183337  391.866667  107961.816650  1753.466667   99.900020        0.200000     1.0    107261.516602         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 14:20:42]  --------------------------------------------------------------------------------
[08/10 14:20:42]  Iteration: 64 (0 solution, 63 counterexamples)
[08/10 14:21:16]  Generator returned sat in 32.078209 secs.
[08/10 14:21:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:21:18]  Improved gap from 1/800 to 32.8125
[08/10 14:21:19]  Improved number of small numbers from 57 to 69 out of a max of 114
[08/10 14:21:19]  Verifer returned sat in 3.376477 secs.
[08/10 14:21:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  108664.133545  108664.130908 -103237.160889  108664.133545    0.002500  108664.130908   0.000000   0.002637        0.000182     8.0    108664.130908            -1             -1     -1
1  108664.133545  108664.133408 -103169.973434  108664.133545    0.001465  108664.133408   0.000000   0.000137      -32.812363     8.0    108664.133545         False           True  False
2  108796.947158  108796.944658 -103169.973434  108796.947158  132.813750  108796.944658   0.000000   0.002500        0.001250     1.0    108664.133545         False           True  False
3  108796.947158  108796.945908 -103102.785934  108796.947158    0.001250  108796.945908   0.000000   0.001250      -32.811250     2.0    108796.947158         False          False  False
4  108997.169033  108928.591846 -103102.785934  108997.169033  200.223125  108928.591846  67.408125   1.169062        0.002500     1.0    108796.947158         False          False  False
5  108997.169033  108929.758408 -103035.598434  108997.169033    0.010000  108929.758408  67.408125   0.002500      -32.810000     2.0    108796.947158         False          False   True
6  109063.578408  108962.570908 -102969.197998  109063.578408   66.411875  108962.570908  67.408125  33.599375       -0.000189     1.0    108796.947158         False          False   True
7  109145.997471  109045.776846 -102951.616943  109145.997471  116.018438  109045.776846  67.408125  32.812500       -0.000072     1.0    108796.947158         False          False   True
8  109229.786689  109078.590820 -102951.616943  109229.786689  116.601719  109078.590820  67.408125  83.787744      -16.210853     1.0    108796.947158         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 14:21:20]  --------------------------------------------------------------------------------
[08/10 14:21:20]  Iteration: 65 (0 solution, 64 counterexamples)
[08/10 14:21:43]  Generator returned sat in 21.574873 secs.
[08/10 14:21:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:21:45]  Improved gap from 0 to 48.4375
[08/10 14:21:45]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 14:21:45]  Verifer returned sat in 1.951629 secs.
[08/10 14:21:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  108497.090332  108396.957275 -102969.984863  108497.090332    0.066667  108396.957275   0.000000  100.133057      100.133057     2.0    108396.957275            -1             -1    True
1  108497.090332  108496.957031 -102969.984863  108497.090332    0.066667  108496.957031   0.000000    0.133301        0.133057     2.0    108396.957275         False          False    True
2  108497.090332  108496.957275 -102969.984619  108497.090332    0.066667  108496.957275   0.000000    0.133057      -99.866699     3.0    108396.957275         False          False    True
3  108697.223877  108696.590332 -102969.984619  108697.223877  200.266602  108696.590332   0.066895    0.566650        0.199951     1.0    108396.957275          True           True   False
4  108797.290527  108794.844482 -102969.984619  108797.290527  100.633301  108794.844482   0.133545    2.312500        0.199951     1.0    108396.957275         False          False    True
5  108845.794678  108797.223633 -102918.688721  108845.794678   50.816650  108797.223633   0.133545   48.437500        0.000000     1.0    108396.957275         False          False    True
6  108848.173828  108845.661133 -102867.126221  108848.173828   50.816650  108845.661133   0.133545    2.379150      -46.058350     2.0    108396.957275         False          False    True
7  108896.611328  108894.098633 -102815.563965  108896.611328   50.816650  108894.098633   0.133545    2.379150      -46.058594     1.0    108396.957275         False          False    True
8  108945.048828  108942.536377 -102815.563965  108945.048828   50.816650  108942.536377   0.133545    2.378906      -97.621094     1.0    108396.957275         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 14:21:46]  --------------------------------------------------------------------------------
[08/10 14:21:46]  Iteration: 66 (0 solution, 65 counterexamples)
[08/10 14:21:53]  Generator returned sat in 4.503383 secs.
[08/10 14:21:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:21:53]  Improved gap from 0 to 100
[08/10 14:21:54]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 14:21:54]  Verifer returned sat in 1.559362 secs.
[08/10 14:21:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  108397.207275  108397.157178 -102969.984619  108397.207275    0.025000  108397.157178    0.000000    0.050098        0.000098     9.0    108397.157178            -1             -1     -1
1  108397.207275  108397.207178 -102969.984619  108397.207275    0.025146  108397.207178    0.000000    0.000098      -99.999902     2.0    108397.157178         False           True  False
2  108597.207178  108497.207178 -102969.984619  108597.207178  200.000000  108497.207178    0.000000  100.000000        0.000000     1.0    108397.157178         False          False  False
3  108697.282178  108664.573844 -102969.984619  108697.282178  200.075000  108664.573844    0.025000   32.683333        0.050000     1.0    108397.157178         False          False  False
4  108797.307178  108731.257178 -102969.984619  108797.307178  132.708333  108731.257178    0.050000   66.000000        0.050000     1.0    108397.157178         False          False   True
5  108897.332178  108897.207178 -102969.984619  108897.332178  166.025000  108897.207178    0.075000    0.050000        0.050000     1.0    108397.157178         False          False   True
6  109096.282178  108997.207178 -102969.984619  109096.282178  199.000000  108997.207178   99.025000    0.050000        0.050000     1.0    108397.157178         False          False   True
7  109261.548844  109097.207178 -102969.984619  109261.548844  165.316667  109097.207178  164.291667    0.050000        0.050000     1.0    108397.157178         False          False   True
8  109443.473844  109097.281982 -102969.984619  109443.473844  181.975000  109097.281982  246.216667   99.975195        0.050000     1.0    108397.157178         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=1/20.[0m
[08/10 14:21:55]  --------------------------------------------------------------------------------
[08/10 14:21:55]  Iteration: 67 (0 solution, 66 counterexamples)
[08/10 14:22:34]  Generator returned sat in 37.009998 secs.
[08/10 14:22:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:22:34]  Improved gap from 1/600 to 100
[08/10 14:22:35]  Improved number of small numbers from 68 to 89 out of a max of 114
[08/10 14:22:35]  Verifer returned sat in 1.367278 secs.
[08/10 14:22:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  108597.037109  108397.087158 -102969.984619  108597.037109     0.050000  108397.087158       0.05   199.899951      199.899932     9.0    108397.087158            -1             -1     -1
1  108597.037109  108497.087178 -102969.984619  108597.037109     0.050049  108497.087178       0.05    99.899932       99.899932     2.0    108397.087158         False           True   True
2  108597.087178  108497.087178 -102969.984619  108597.087178    99.950000  108497.087178       0.05    99.950000       -0.050000     2.0    108397.087158         False          False   True
3  108597.187178  108597.087178 -102969.984619  108597.187178   100.050000  108597.087178       0.05     0.050000      -99.950000     1.0    108397.087158         False          False   True
4  108795.237178  108697.087402 -102969.984619  108795.237178   198.100000  108697.087402       0.05    98.099775       -1.900000     1.0    108397.087158         False          False   True
5  109091.337402  108797.087178 -102969.984619  109091.337402   394.200000  108797.087178       0.05   294.200225      194.200225     1.0    108397.087158         False          False   True
6  109583.537178  108997.087178 -102969.984619  109583.537178   786.400000  108997.087178       0.05   586.400000      586.400000     2.0    108397.087158         False          False   True
7  110567.937178  109091.337178 -102969.984619  110567.937178  1570.800000  109091.337178       0.05  1476.550000     1470.800000     2.0    108397.087158         False          False   True
8  112230.987178  109197.087158 -102969.984619  112230.987178  3139.600000  109197.087158    1433.85  1600.050020     1600.050000     3.0    108397.087158         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=32001/20.[0m
[08/10 14:22:36]  --------------------------------------------------------------------------------
[08/10 14:22:36]  Iteration: 68 (0 solution, 67 counterexamples)
[08/10 14:23:24]  Generator returned sat in 46.289325 secs.
[08/10 14:23:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:23:26]  Improved gap from 0 to 48.4375
[08/10 14:23:27]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 14:23:27]  Verifer returned sat in 2.369212 secs.
[08/10 14:23:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107692.112549  107643.674805 -102216.572266  107692.112549    0.099854  107643.674805    0.000000  48.437744       48.437500     1.0    107643.674805            -1             -1   False
1  107692.112549  107643.675049 -102165.009766  107692.112549    0.100000  107643.675049    0.000000  48.437500        0.000000     2.0    107643.674805         False          False   False
2  107792.412354  107789.687500 -102165.009766  107792.412354  148.737305  107789.687500    0.099854   2.625000        0.199951     1.0    107643.674805          True           True   False
3  107995.487549  107888.562256 -102165.009766  107995.487549  205.700195  107888.562256  103.175049   3.750244        0.199951     1.0    107643.674805         False          False    True
4  108095.587402  107992.112549 -102165.009766  108095.587402  103.850098  107992.112549  103.274902   0.199951        0.199951     1.0    107643.674805         False          False    True
5  108148.312500  107992.212402 -102117.935059  108148.312500   52.925049  107992.212402  103.274902  52.825195       -0.000244     2.0    107643.674805         False          False    True
6  108196.749756  108045.137451 -102066.472168  108196.749756  101.262451  108045.137451  103.274902  48.337402       -0.100098     1.0    108093.474854          True           True   False
7  108226.699951  108093.574951 -102014.909668  108226.699951   78.287598  108093.574951  103.274902  29.850098      -18.587402     1.0    108093.474854         False          False   False
8  108247.581055  108142.012451 -102014.909668  108247.581055   50.731201  108142.012451  103.274902   2.293701      -97.706299     1.0    108093.474854         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 14:23:27]  --------------------------------------------------------------------------------
[08/10 14:23:27]  Iteration: 69 (0 solution, 68 counterexamples)
[08/10 14:23:47]  Generator returned sat in 17.267954 secs.
[08/10 14:23:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:23:47]  Improved gap from 1/800 to 100
[08/10 14:23:48]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 14:23:48]  Verifer returned sat in 1.195900 secs.
[08/10 14:23:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  107486.606201  107486.406152 -102159.303369  107486.606201     0.100098  107486.406152        0.1     0.100049      -99.899951     2.0    107486.406152            -1             -1     -1
1  107686.506152  107586.406152 -102159.303369  107686.506152   200.000000  107586.406152        0.1   100.000000        0.000000     1.0    107486.406152         False          False   True
2  107994.274902  107786.406006 -102159.303369  107994.274902   407.768750  107786.406006        0.1   207.768896      207.768750     1.0    107486.406152         False          False   True
3  107994.274902  107886.406152 -102159.303369  107994.274902    54.584375  107886.406152        0.1   107.768750      107.768750     2.0    107994.174902         False          False   True
4  107994.274902  107886.406152 -102159.303369  107994.274902   107.668750  107886.406152        0.1   107.768750        7.768750     2.0    107994.174902         False          False   True
5  108100.343652  107994.274902 -102159.303369  108100.343652   213.837500  107994.274902        0.1   105.968750       13.837500     1.0    107994.174902         False          False   True
6  108420.549902  108100.343652 -102159.303369  108420.549902   426.175000  108100.343652        0.1   320.106250      234.043750     1.0    107994.174902         False          False   True
7  108951.293652  108286.406152 -102159.303369  108951.293652   850.850000  108286.406152        0.1   664.787500      664.787500     2.0    107994.174902         False          False   True
8  109986.706152  108386.406006 -102159.303369  109986.706152  1700.200000  108386.406006        0.2  1600.100146     1600.100000     3.0    107994.174902         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=16001/10.[0m
[08/10 14:23:49]  --------------------------------------------------------------------------------
[08/10 14:23:49]  Iteration: 70 (0 solution, 69 counterexamples)
[08/10 14:24:16]  Generator returned sat in 25.197567 secs.
[08/10 14:24:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:24:17]  Improved gap from 0 to 1.5625
[08/10 14:24:17]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 14:24:17]  Verifer returned sat in 0.401338 secs.
[08/10 14:24:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107792.334717  107690.822510 -102263.719727  107792.334717    0.049805  107690.822510        0.0  101.512207      101.512207     2.0    107690.822510            -1             -1   False
1  107792.334717  107790.822510 -102263.719727  107792.334717    0.050000  107790.822510        0.0    1.512207        1.512207     2.0    107690.822510         False          False   False
2  107792.385010  107790.822510 -102165.282227  107792.385010    1.562500  107790.822510        0.0    1.562500        0.000000     2.0    107690.822510         False          False   False
3  108094.434814  107892.385010 -102165.282227  108094.434814  303.612305  107892.385010        0.0  202.049805      202.049805     1.0    107690.822510         False          False   False
4  108094.434814  107992.384766 -102165.282227  108094.434814    2.000000  107992.384766        0.0  102.050049      102.049805     2.0    107690.822510         False          False   False
5  108094.434814  108092.334717 -102165.282227  108094.434814    2.000000  108092.334717        0.0    2.100098        2.049805     3.0    107690.822510         False          False   False
6  108094.434814  108092.385010 -102067.332031  108094.434814    2.000000  108092.385010        0.0    2.049805        0.000000     4.0    108094.434814          True           True   False
7  108094.434814  108094.434814 -101969.332031  108094.434814    2.000000  108094.434814        0.0    0.000000       -2.000000     5.0    108094.434814         False           True   False
8  108096.434814  108096.434814 -101870.894775  108096.434814    2.000000  108096.434814        0.0    0.000000       -1.562744     1.0    108094.434814         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=827801/4096.[0m
[08/10 14:24:17]  --------------------------------------------------------------------------------
[08/10 14:24:17]  Iteration: 71 (0 solution, 70 counterexamples)
[08/10 14:24:33]  Generator returned sat in 12.967486 secs.
[08/10 14:24:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:24:33]  Improved gap from 0 to 100
[08/10 14:24:33]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 14:24:33]  Verifer returned sat in 0.563185 secs.
[08/10 14:24:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107693.759766  107593.785156 -102165.282227  107693.759766    0.025146  107593.785156    0.000000   99.974609       99.949707     2.0    107593.785156            -1             -1   False
1  107693.784912  107593.810059 -102165.282227  107693.784912   99.999756  107593.810059    0.000000   99.974854       -0.025146     2.0    107593.785156         False          False   False
2  107693.834961  107693.810059 -102165.282227  107693.834961  100.024902  107693.810059    0.000000    0.024902      -99.975098     1.0    107593.785156         False          False   False
3  108194.385010  107793.810059 -102165.282227  108194.385010  500.574951  107793.810059    0.000000  400.574951      300.574951     1.0    107593.785156         False          False   False
4  108194.385010  107893.810059 -102165.282227  108194.385010  400.549805  107893.810059    0.000000  300.574951      200.574951     2.0    107593.785156         False          False   False
5  108494.310059  108093.809814 -102165.282227  108494.310059  600.500000  108093.809814   99.900146  300.600098      300.599854     3.0    107593.785156         False          False   False
6  108793.709961  108093.810059 -102165.282227  108793.709961  600.000000  108093.810059  299.300049  400.599854      300.599854     4.0    107593.785156         False          False    True
7  108992.610107  108293.809814 -102165.282227  108992.610107  599.500000  108293.809814  398.200195  300.600098      300.599854     3.0    107593.785156         False          False    True
8  109291.010010  108393.809814 -102165.282227  109291.010010  599.000000  108393.809814  596.600098  300.600098      300.599854     4.0    107593.785156         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1231257/4096.[0m
[08/10 14:24:34]  --------------------------------------------------------------------------------
[08/10 14:24:34]  Iteration: 72 (0 solution, 71 counterexamples)
[08/10 14:24:49]  Generator returned sat in 12.605537 secs.
[08/10 14:24:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:24:50]  Improved gap from 14099/300 to 100
[08/10 14:24:51]  Improved number of small numbers from 78 to 85 out of a max of 114
[08/10 14:24:51]  Verifer returned sat in 1.931181 secs.
[08/10 14:24:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  108150.060059  108049.860107 -102165.282471  108150.060059  204.200000  108049.860107       0.00  100.199951        0.199951     2.0    108049.860107            -1             -1   False
1  108253.960205  108150.160107 -102165.282471  108253.960205  204.100098  108150.160107       0.00  103.800098        4.100098     1.0    108253.960205         False          False   False
2  108354.160107  108349.860107 -102165.282471  108354.160107  204.000000  108349.860107       0.10    4.200000        4.200000     1.0    108354.060107         False          False   False
3  108553.960107  108412.560107 -102165.282471  108553.960107  204.000000  108412.560107      99.90   41.500000        4.200000     1.0    108354.060107         False          False    True
4  108692.310107  108487.160107 -102165.282471  108692.310107  179.850000  108487.160107     138.25   66.900000        4.200000     1.0    108354.060107         False          False    True
5  108792.410107  108620.393441 -102165.282471  108792.410107  167.000000  108620.393441     138.35   33.666667        4.200000     1.0    108354.060107         False          False    True
6  108892.510107  108707.960107 -102165.282471  108892.510107  133.766667  108707.960107     138.45   46.100000        4.200000     1.0    108354.060107         False          False    True
7  108992.610107  108849.860107 -102165.282471  108992.610107  146.200000  108849.860107     138.55    4.200000        4.200000     1.0    108354.060107         False          False    True
8  109168.260107  108854.160156 -102165.282471  109168.260107  179.850000  108854.160156     214.20   99.899951        4.200000     1.0    108354.060107         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=21/5.[0m
[08/10 14:24:51]  --------------------------------------------------------------------------------
[08/10 14:24:51]  Iteration: 73 (0 solution, 72 counterexamples)
[08/10 14:25:00]  Generator returned sat in 6.252286 secs.
[08/10 14:25:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:25:01]  Improved gap from 0 to 23.4375
[08/10 14:25:02]  Improved number of small numbers from 57 to 79 out of a max of 114
[08/10 14:25:02]  Verifer returned sat in 1.877116 secs.
[08/10 14:25:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  121533.701904  121433.689848 -102241.831787  121533.701904    0.000909  121433.689848    0.000000  100.012056        0.012268     1.0    121433.689848            -1             -1    True
1  121557.140075  121533.702393 -102165.282227  121557.140075  123.450227  121533.702393    0.000000   23.437683        0.000000     1.0    121433.689848         False          False    True
2  121657.141846  121657.140075 -102165.282227  121657.141846  123.439453  121657.140075    0.000000    0.001770        0.001770     1.0    121657.141846         False          False    True
3  121657.141846  121657.140075 -102165.282227  121657.141846    0.000977  121657.140075    0.000000    0.001770      -99.998230     1.0    121657.141846         False          False    True
4  121882.590303  121857.140075 -102165.282227  121882.590303  225.450227  121857.140075   25.442045    0.008182        0.008182     1.0    121657.141846         False          False    True
5  121882.592121  121857.149166 -102088.728817  121882.592121    0.010000  121857.149166   25.442045    0.000909      -23.436591     1.0    121657.141846         False          False    True
6  122084.600303  121980.586666 -102088.728817  122084.600303  202.009091  121980.586666  104.005455    0.008182        0.008182     1.0    121657.141846         False          False    True
7  122084.602121  121980.595757 -102014.185547  122084.602121    0.010000  121980.595757  104.005455    0.000909      -25.446729     1.0    121657.141846         False          False    True
8  122210.056894  122007.139404 -102014.185547  122210.056894  125.455682  122007.139404  104.005455   98.912035        0.008043     1.0    121657.141846         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=9/1100.[0m
[08/10 14:25:02]  --------------------------------------------------------------------------------
[08/10 14:25:02]  Iteration: 74 (0 solution, 73 counterexamples)
[08/10 14:25:28]  Generator returned sat in 23.380071 secs.
[08/10 14:25:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:25:30]  Improved number of small numbers from 38 to 41 out of a max of 113
[08/10 14:25:30]  Verifer returned sat in 1.873867 secs.
[08/10 14:25:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  121457.141391  120957.141391 -102165.282227  121457.141391    0.000732  120957.141391    0.000000  500.000000      500.000000     7.0    120957.141391            -1             -1   False
1  121557.141846  120957.141391 -102165.282227  121557.141846  600.000455  120957.141391  100.000455  500.000000      400.000000     7.0    120957.141391         False          False   False
2  121657.142073  121157.141391 -102165.282227  121657.142073  600.000227  121157.141391  100.000682  400.000000      400.000000     8.0    121557.141391         False          False    True
3  121657.142300  121157.141391 -102165.282227  121657.142300  400.000227  121157.141391  100.000682  400.000227      300.000227     8.0    121557.141618         False           True    True
4  121857.642187  121357.141164 -102165.282227  121857.642187  600.500114  121357.141164  100.500795  400.000227      400.000000     7.0    121557.141618         False           True   False
5  122057.642073  121357.141391 -102165.282227  122057.642073  600.000114  121357.141391  200.500682  500.000000      400.000000     7.0    121557.141618         False          False    True
6  122157.142187  121457.141391 -102165.282227  122157.142187  599.500114  121457.141391  200.500682  499.500114      399.500114     8.0    121557.141618         False          False    True
7  122557.892130  121557.141846 -102165.282227  122557.892130  900.250057  121557.141846  500.750739  499.999545      400.000000     4.0    121557.141618         False           True   False
8  122957.642641  121757.141357 -102165.282227  122957.642641  899.750057  121757.141357  800.501250  400.000034      400.000000     5.0    121557.141618         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=400.[0m
[08/10 14:25:31]  --------------------------------------------------------------------------------
[08/10 14:25:31]  Iteration: 75 (0 solution, 74 counterexamples)
[08/10 14:25:35]  Generator returned sat in 1.806035 secs.
[08/10 14:25:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:25:35]  Improved number of small numbers from 39 to 113 out of a max of 113
[08/10 14:25:35]  Verifer returned sat in 0.348424 secs.
[08/10 14:25:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  121457.141357  120955.141113 -102165.282227  121457.141357    0.000488  120955.141113    0.000000  502.000244      502.000244     7.0    120955.141113            -1             -1   False
1  121557.141846  120955.141357 -102165.282227  121557.141846  602.000732  120955.141357  100.000488  502.000000      402.000244     7.0    120955.141113         False          False   False
2  121657.142090  121155.141113 -102165.282227  121657.142090  602.000244  121155.141113  100.000732  402.000244      402.000244     8.0    121557.141357         False          False    True
3  121657.142090  121155.141113 -102165.282227  121657.142090  402.000000  121155.141113  100.000732  402.000244      302.000244     8.0    121557.141357         False           True    True
4  121858.141846  121354.141602 -102165.282227  121858.141846  603.000000  121354.141602  101.000488  402.999756      402.000244     7.0    121557.141357         False           True   False
5  122057.642090  121355.141357 -102165.282227  122057.642090  602.500000  121355.141357  200.500732  502.000000      402.000244     7.0    121557.141357         False          False    True
6  122157.642090  121457.141357 -102165.282227  122157.642090  602.000000  121457.141357  200.500732  500.000000      402.000244     8.0    121557.141357         False          False    True
7  122564.642578  121557.141602 -102165.282227  122564.642578  907.000488  121557.141602  507.501221  499.999756      402.000244     4.0    121557.141357         False           True   False
8  122971.143311  121755.141113 -102165.282227  122971.143311  906.500488  121755.141113  814.001953  402.000244      402.000244     5.0    121557.141357         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1646593/4096.[0m
[08/10 14:25:36]  --------------------------------------------------------------------------------
[08/10 14:25:36]  Iteration: 76 (0 solution, 75 counterexamples)
[08/10 14:27:33]  Generator returned sat in 114.535391 secs.
[08/10 14:27:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:27:35]  Improved gap from 0 to 34.375
[08/10 14:27:35]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 14:27:35]  Verifer returned sat in 2.406509 secs.
[08/10 14:27:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  121057.094238  120955.078613 -102165.282227  121057.094238  102.015625  120955.078613   0.000000  102.015625      101.953125     3.0    120955.078613            -1             -1   False
1  121057.094238  121055.141113 -102165.282227  121057.094238  102.000000  121055.141113   0.000000    1.953125        1.953125     3.0    121057.094238         False          False   False
2  121157.125488  121155.141113 -102165.282227  121157.125488  101.984375  121155.141113   0.015625    1.968750        1.968750     1.0    121157.109863         False          False   False
3  121257.109863  121255.141113 -102165.282227  121257.109863  101.953125  121255.141113   0.015625    1.953125        1.953125     1.0    121257.094238         False          False    True
4  121454.664551  121355.125488 -102165.282227  121454.664551  199.507812  121355.125488  97.554688    1.984375        1.968750     1.0    121257.094238         False          False    True
5  121454.680176  121355.141113 -102099.657227  121454.680176    2.000000  121355.141113  97.554688    1.984375      -32.390625     2.0    121257.094238         False          False    True
6  121552.195801  121389.516113 -102064.782227  121552.195801   99.500000  121389.516113  97.554688   65.125000        0.000000     1.0    121257.094238         False          False    True
7  121602.508301  121454.656738 -102015.250977  121602.508301  115.437500  121454.656738  97.554688   50.296875       -0.156250     1.0    121257.094238         False          False    True
8  121658.195801  121505.109863 -102015.250977  121658.195801  105.984375  121505.109863  97.554688   55.531250      -44.468750     1.0    121257.094238         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=63/32.[0m
[08/10 14:27:36]  --------------------------------------------------------------------------------
[08/10 14:27:36]  Iteration: 77 (0 solution, 76 counterexamples)
[08/10 14:27:52]  Generator returned sat in 13.275911 secs.
[08/10 14:27:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:27:52]  Improved gap from 0 to 100
[08/10 14:27:53]  Improved number of small numbers from 60 to 72 out of a max of 114
[08/10 14:27:53]  Verifer returned sat in 1.295166 secs.
[08/10 14:27:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  120357.904053  120038.425293 -101348.56646  120357.904053     0.049805  120038.425293       0.05   319.428760      219.428950     9.0    120038.425293            -1             -1     -1
1  120357.904053  120238.425102 -101348.56646  120357.904053   319.378906  120238.425102       0.05   119.428950      119.428950     2.0    120038.425293         False           True   True
2  120557.804115  120238.425293 -101348.56646  120557.804115   319.329012  120238.425293       0.05   319.328822      219.329012     3.0    120557.754115         False          False   True
3  120557.804115  120361.506584 -101348.56646  120557.804115   319.279012  120361.506584       0.05   196.247531      119.329012     2.0    120557.754115         False          False   True
4  120838.475102  120538.425102 -101348.56646  120838.475102   476.918519  120538.425102       0.05   300.000000      300.000000     3.0    120557.754115         False          False   True
5  121251.852880  120538.425102 -101348.56646  121251.852880   713.377778  120538.425102       0.05   713.377778      613.377778     3.0    120557.754115         False          False   True
6  121606.541769  120738.375102 -101348.56646  121606.541769  1068.066667  120738.375102       0.05   868.116667      868.066667     3.0    120557.754115         False          False   True
7  122338.525102  120738.425102 -101348.56646  122338.525102  1600.100000  120738.425102       0.05  1600.050000     1500.050000     4.0    120557.754115         False          False   True
8  123136.625102  120838.425293 -101348.56646  123136.625102  2398.150000  120838.425293     698.10  1600.099810     1500.100000     4.0    120557.754115         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=15001/10.[0m
[08/10 14:27:54]  --------------------------------------------------------------------------------
[08/10 14:27:54]  Iteration: 78 (0 solution, 77 counterexamples)
[08/10 14:28:03]  Generator returned sat in 7.075580 secs.
[08/10 14:28:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:28:07]  Improved gap from 0 to 3.125
[08/10 14:28:08]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/10 14:28:08]  Verifer returned sat in 4.582821 secs.
[08/10 14:28:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  120892.806396  120892.791834 -101586.525308  120892.806396  199.999756  120892.791834   0.014403    0.000159        0.000159     2.0    120892.791834            -1             -1     -1
1  121092.806238  120992.791834 -101586.525308  121092.806238  200.000000  120992.791834   0.028807   99.985597       99.985597     1.0    120892.791834         False          False   True
2  121192.820641  120992.791992 -101586.525308  121192.820641  200.000000  120992.791992   0.043210  199.985439       99.985597     2.0    120892.791834         False          False   True
3  121192.820641  121192.719818 -101586.525308  121192.820641    3.884774  121192.719818   0.043210    0.057613       -0.014403     2.0    121192.777431         False          False   True
4  121196.590188  121192.791992 -101490.280452  121196.590188    3.827160  121192.791992   0.043210    3.754986        0.000000     1.0    121192.777431         False          False   True
5  121196.590188  121196.546978 -101393.405452  121196.590188    3.740741  121196.546978   0.043210    0.000000       -3.125000     2.0    121192.777431         False          False   True
6  121200.201299  121199.671978 -101296.530452  121200.201299    3.611111  121199.671978   0.043210    0.486111       -2.638889     1.0    121192.777431         False          False   True
7  121203.131855  121202.796978 -101199.655452  121203.131855    3.416667  121202.796978   0.043210    0.291667       -2.833333     1.0    121192.777431         False          False   True
8  121205.965188  121205.921978 -101199.655273  121205.965188    3.125000  121205.921978   0.043210    0.000000      -99.999822     1.0    121192.777431         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=48593/486.[0m
[08/10 14:28:09]  --------------------------------------------------------------------------------
[08/10 14:28:09]  Iteration: 79 (0 solution, 78 counterexamples)
[08/10 14:28:50]  Generator returned sat in 38.728878 secs.
[08/10 14:28:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:28:50]  Improved gap from 1/5 to 100
[08/10 14:28:51]  Improved number of small numbers from 59 to 78 out of a max of 114
[08/10 14:28:51]  Verifer returned sat in 1.236928 secs.
[08/10 14:28:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  120347.890137  120247.890137 -100941.623662  120347.890137    0.099854  120247.890137      0.000  100.000000       99.999949     9.0    120247.890137            -1             -1     -1
1  120347.890137  120247.890188 -100941.623662  120347.890137    0.100098  120247.890188      0.000   99.999949       -0.000051     9.0    120247.890137         False           True  False
2  120448.190188  120347.890188 -100941.623662  120448.190188  200.300000  120347.890188      0.100  100.200000        0.200000     1.0    120247.890137          True           True  False
3  120550.590188  120547.890188 -100941.623662  120550.590188  202.600000  120547.890188      2.500    0.200000        0.200000     1.0    120247.890137         False          False   True
4  120650.690188  120548.190430 -100941.623662  120650.690188  100.300000  120548.190430      2.600   99.899759        0.200000     1.0    120247.890137         False          False   True
5  120650.690188  120647.890188 -100941.623662  120650.690188   49.150000  120647.890188      2.600    0.200000      -99.800000     2.0    120247.890137         False          False   True
6  121099.990188  120747.890188 -100941.623662  121099.990188  449.500000  120747.890188    251.900  100.200000        0.200000     1.0    120247.890137         False          False   True
7  121223.540188  120947.890188 -100941.623662  121223.540188  223.750000  120947.890188    275.450    0.200000        0.200000     1.0    120247.890137         False          False   True
8  121334.215188  120948.190430 -100941.623662  121334.215188  110.875000  120948.190430    286.125   99.899759        0.200000     1.0    120247.890137         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 14:28:52]  --------------------------------------------------------------------------------
[08/10 14:28:52]  Iteration: 80 (0 solution, 79 counterexamples)
[08/10 14:29:56]  Generator returned sat in 61.624076 secs.
[08/10 14:29:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:29:56]  Improved gap from 1/800 to 48.4375
[08/10 14:29:57]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 14:29:57]  Verifer returned sat in 0.881124 secs.
[08/10 14:29:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  121284.695801  120984.711670 -99753.241699  121284.695801    0.015625  120984.711670        0.0  299.984131      199.984375     7.0    120984.711670            -1             -1     -1
1  121284.695801  121184.711426 -99753.241699  121284.695801    0.015625  121184.711426        0.0   99.984375       99.984375     4.0    120984.711670         False           True  False
2  121532.992676  121284.711426 -99753.241699  121532.992676  348.281250  121284.711426        0.0  248.281250      248.281250     1.0    120984.711670         False          False  False
3  121532.992676  121384.711426 -99753.241699  121532.992676   55.937500  121384.711426        0.0  148.281250      148.281250     2.0    121532.992676         False          False  False
4  121532.992676  121480.039551 -99753.241699  121532.992676   54.437500  121480.039551        0.0   52.953125       48.281250     3.0    121532.992676         False          False  False
5  121532.992676  121484.711426 -99701.679199  121532.992676   52.937500  121484.711426        0.0   48.281250       -0.156250     4.0    121532.992676         False          False  False
6  121536.148926  121533.148926 -99650.116699  121536.148926   51.437500  121533.148926        0.0    3.000000      -45.437500     1.0    121532.992676         False          False  False
7  121583.086426  121581.586426 -99598.554199  121583.086426   49.937500  121581.586426        0.0    1.500000      -46.937500     1.0    121532.992676         False          False  False
8  121630.023926  121630.023926 -99598.554199  121630.023926   48.437500  121630.023926        0.0    0.000000     -100.000000     1.0    121532.992676         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=15891/64.[0m
[08/10 14:29:57]  --------------------------------------------------------------------------------
[08/10 14:29:57]  Iteration: 81 (0 solution, 80 counterexamples)
[08/10 14:30:45]  Generator returned sat in 44.695936 secs.
[08/10 14:30:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:30:45]  Improved gap from 0 to 100
[08/10 14:30:46]  Improved number of small numbers from 97 to 97 out of a max of 114
[08/10 14:30:46]  Verifer returned sat in 1.226979 secs.
[08/10 14:30:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  122056.992676  121532.992676 -100201.522949  122056.992676       0.1  121532.992676        0.0    524.0           524.0     8.0    121532.992676            -1             -1   False
1  122056.992676  121632.992676 -100201.522949  122056.992676     150.4  121632.992676        0.0    424.0           424.0     8.0    121532.992676         False          False   False
2  122056.992676  121732.992676 -100201.522949  122056.992676     150.4  121732.992676        0.0    324.0           324.0     8.0    121532.992676         False          False   False
3  122056.992676  121832.192676 -100201.522949  122056.992676     150.4  121832.192676        0.0    224.8           224.0     9.0    121532.992676         False          False   False
4  122357.192676  121932.992676 -100201.522949  122357.192676     525.0  121932.992676        0.1    424.1           424.1     9.0    122357.092676          True           True   False
5  122457.592676  121932.992676 -100201.522949  122457.592676     524.5  121932.992676        0.5    524.1           424.1     9.0    122357.092676         False           True    True
6  122457.592676  122056.992676 -100201.522949  122457.592676     524.0  122056.992676        0.5    400.1           324.1     9.0    122357.092676         False           True    True
7  122657.692676  122157.492676 -100201.522949  122657.692676     600.2  122157.492676        0.6    499.6           424.1     4.0    122357.092676         False           True   False
8  122757.792676  122332.992676 -100201.522949  122757.792676     599.7  122332.992676        0.7    424.1           424.1     5.0    122357.092676         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=4241/10.[0m
[08/10 14:30:47]  --------------------------------------------------------------------------------
[08/10 14:30:47]  Iteration: 82 (0 solution, 81 counterexamples)
[08/10 14:30:57]  Generator returned sat in 8.045360 secs.
[08/10 14:30:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:31:10]  Improved gap from 0 to 4.6875
[08/10 14:31:11]  Improved number of small numbers from 73 to 99 out of a max of 114
[08/10 14:31:11]  Verifer returned sat in 13.217701 secs.
[08/10 14:31:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  122052.205322  122047.317676 -100715.848145  122052.205322    4.887500  122047.317676    0.00000    4.887646        4.887451     9.0    122047.317676            -1             -1     -1
1  122052.205322  122047.517676 -100620.785400  122052.205322    4.837500  122047.517676    0.00000    4.687646       -0.049805     9.0    122052.205322         False           True  False
2  122052.305176  122052.255176 -100525.472949  122052.305176    4.787500  122052.255176    0.00000    0.050000       -4.637500     1.0    122052.305176         False           True  False
3  122056.992676  122056.942676 -100430.160449  122056.992676    4.737500  122056.942676    0.00000    0.050000       -4.637500     1.0    122056.992676         False          False  False
4  122079.561426  122061.630176 -100369.644775  122079.561426   22.618750  122061.630176    0.00000   17.931250      -21.553076     1.0    122056.992676         False          False  False
5  122102.164551  122101.114502 -100274.332275  122102.164551   40.534375  122101.114502    0.00000    1.050049       -3.637451     1.0    122056.992676         False          False  False
6  122220.100342  122105.802246 -100274.332275  122220.100342  118.985840  122105.802246    9.61084  104.687256        4.687500     1.0    122056.992676         False          False  False
7  122220.100342  122205.802002 -100179.019775  122220.100342   57.992920  122205.802002    9.61084    4.687500        0.000000     2.0    122056.992676         False          False   True
8  122220.100342  122210.489502 -100083.707520  122220.100342    0.500000  122210.489502    9.61084    0.000000       -4.687744     3.0    122056.992676         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=75/16.[0m
[08/10 14:31:11]  --------------------------------------------------------------------------------
[08/10 14:31:11]  Iteration: 83 (0 solution, 82 counterexamples)
[08/10 14:31:21]  Generator returned sat in 6.771236 secs.
[08/10 14:31:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:31:21]  Improved number of small numbers from 84 to 113 out of a max of 113
[08/10 14:31:21]  Verifer returned sat in 0.318941 secs.
[08/10 14:31:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  122056.792480  121547.081787 -100215.711914  122056.792480   500.300000  121547.081787    9.61084   500.099854      500.000000     5.0    121547.081787            -1             -1     -1
1  122056.892822  121547.181641 -100215.711914  122056.892822   500.200195  121547.181641    9.61084   500.100342      400.100342     5.0    122047.281982         False          False   True
2  122056.992676  121747.181641 -100215.711914  122056.992676   500.200195  121747.181641    9.61084   300.200195      300.200195     6.0    122047.281982         False          False   True
3  122056.992676  121747.181641 -100215.711914  122056.992676   300.200195  121747.181641    9.61084   300.200195      200.200195     6.0    122047.381836         False          False   True
4  122056.992676  121847.181641 -100215.711914  122056.992676     2.000000  121847.181641    9.61084   200.200195      100.200195     7.0    122047.381836         False          False   True
5  122056.992676  122045.281982 -100215.711914  122056.992676     2.000000  122045.281982    9.61084     2.099854        0.200195     8.0    122047.381836         False          False   True
6  122056.992676  122047.181641 -100215.711914  122056.992676     2.000000  122047.181641    9.61084     0.200195      -99.799805     9.0    122047.381836         False          False   True
7  122661.292480  122247.181641 -100215.711914  122661.292480   604.500000  122247.181641    9.61084   404.500000      404.500000     1.0    122047.381836         False           True  False
8  123965.042480  122347.181641 -100215.711914  123965.042480  1708.250000  122347.181641    9.61084  1608.250000     1608.250000     2.0    122047.381836         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6587801/4096.[0m
[08/10 14:31:22]  --------------------------------------------------------------------------------
[08/10 14:31:22]  Iteration: 84 (0 solution, 83 counterexamples)
[08/10 14:31:48]  Generator returned sat in 24.086774 secs.
[08/10 14:31:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:31:50]  Improved gap from 1/10 to 48.4375
[08/10 14:31:50]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 14:31:50]  Verifer returned sat in 1.411918 secs.
[08/10 14:31:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  122005.960205  122005.760254 -100215.711914  122005.960205  500.300000  122005.760254   0.099854    0.100098       -0.099854     5.0    122005.760254            -1             -1     -1
1  122106.060059  122005.960205 -100215.711914  122106.060059  100.199951  122005.960205   0.099854  100.000000        0.000000     1.0    122105.960205         False          False   True
2  122456.597656  122205.960205 -100215.711914  122456.597656  450.537598  122205.960205   0.099854  250.537598      250.537598     1.0    122105.960205         False          False   True
3  122456.597656  122305.960205 -100215.711914  122456.597656   53.437500  122305.960205   0.099854  150.537598      150.537598     2.0    122456.497803         False          False   True
4  122456.597656  122404.960205 -100215.711914  122456.597656   52.437500  122404.960205   0.099854   51.537598       50.537598     3.0    122456.497803         False          False   True
5  122456.597656  122405.960205 -100166.249512  122456.597656   51.437500  122405.960205   0.099854   50.537598        0.000000     4.0    122456.497803         False          False   True
6  122456.597656  122456.497803 -100114.687012  122456.597656   50.437500  122456.497803   0.099854    0.000000      -48.437500     5.0    122456.497803         False          False   True
7  122506.035156  122504.935303 -100063.124512  122506.035156   49.437500  122504.935303   0.099854    1.000000      -47.437500     1.0    122456.497803         False          False   True
8  122553.472656  122553.372803 -100063.124268  122553.472656   48.437500  122553.372803   0.099854    0.000000      -99.999756     1.0    122456.497803         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1026611/4096.[0m
[08/10 14:31:50]  --------------------------------------------------------------------------------
[08/10 14:31:50]  Iteration: 85 (0 solution, 84 counterexamples)
[08/10 14:32:13]  Generator returned sat in 20.065088 secs.
[08/10 14:32:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:32:14]  Improved gap from 775/16 to 48.4375
[08/10 14:32:14]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 14:32:14]  Verifer returned sat in 0.815210 secs.
[08/10 14:32:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  122566.167480  122517.729980 -100369.369385  122566.167480    0.049805  122517.729980        0.0   48.437500       48.437500     5.0     122517.72998            -1             -1    True
1  122566.167480  122517.729980 -100317.806885  122566.167480    0.049805  122517.729980        0.0   48.437500        0.000000     5.0     122517.72998         False          False    True
2  122914.604980  122666.167480 -100317.806885  122914.604980  396.875000  122666.167480        0.0  248.437500      248.437500     1.0     122517.72998         False          False    True
3  122914.604980  122766.167480 -100317.806885  122914.604980   53.975098  122766.167480        0.0  148.437500      148.437500     2.0     122914.60498         False          False    True
4  122914.604980  122861.580078 -100317.806885  122914.604980   53.475098  122861.580078        0.0   53.024902       48.437500     3.0     122914.60498         False          False    True
5  122914.604980  122866.167480 -100266.244385  122914.604980   52.975098  122866.167480        0.0   48.437500        0.000000     4.0     122914.60498         False          False    True
6  122918.642578  122914.655029 -100214.731934  122918.642578   52.475098  122914.655029        0.0    3.987549      -44.449951     1.0     122914.60498         False          False    True
7  122966.630127  122963.092529 -100163.169434  122966.630127   51.975098  122963.092529        0.0    3.537598      -44.899902     1.0     122914.60498         False          False    True
8  123014.567627  123011.530273 -100163.169434  123014.567627   51.475098  123011.530273        0.0    3.037354      -96.962402     1.0     122914.60498         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=19879/80.[0m
[08/10 14:32:15]  --------------------------------------------------------------------------------
[08/10 14:32:15]  Iteration: 86 (0 solution, 85 counterexamples)
[08/10 14:32:37]  Generator returned sat in 20.007666 secs.
[08/10 14:32:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:32:38]  Improved number of small numbers from 83 to 101 out of a max of 113
[08/10 14:32:38]  Verifer returned sat in 0.587221 secs.
[08/10 14:32:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  122366.367676  122266.167480 -100217.806885  122366.367676  100.200195  122266.167480      0.000  100.200195        0.200195     4.0    122266.167480            -1             -1     -1
1  122366.367676  122366.267334 -100217.806885  122366.367676  100.100000  122366.267334      0.000    0.100342      -99.799805     4.0    122366.367676         False           True  False
2  122466.267334  122466.167480 -100217.806885  122466.267334  100.000000  122466.167480      0.000    0.099854      -99.900146     1.0    122466.267334         False           True  False
3  122870.367480  122566.167480 -100217.806885  122870.367480  404.200000  122566.167480    204.000  100.200000        0.200000     1.0    122466.267334         False          False  False
4  122971.767480  122766.167480 -100217.806885  122971.767480  201.600000  122766.167480    205.400    0.200000        0.200000     1.0    122466.267334         False          False   True
5  123071.867480  122866.167480 -100217.806885  123071.867480  100.300000  122866.167480    205.500    0.200000        0.200000     1.0    122466.267334         False          False   True
6  123121.317480  122915.717480 -100217.806885  123121.317480   49.650000  122915.717480    205.500    0.100000      -50.350000     1.0    122466.267334         False          False   True
7  123571.067480  122966.167480 -100217.806885  123571.067480  449.850000  122966.167480    504.700  100.200000        0.200000     1.0    122466.267334         False          False   True
8  123695.292480  123066.467529 -100217.806885  123695.292480  224.425000  123066.467529    528.925   99.899951        0.200000     1.0    122466.267334         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 14:32:39]  --------------------------------------------------------------------------------
[08/10 14:32:39]  Iteration: 87 (0 solution, 86 counterexamples)
[08/10 14:32:58]  Generator returned sat in 16.307073 secs.
[08/10 14:32:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:33:01]  Improved gap from 0 to 0
[08/10 14:33:02]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 14:33:02]  Verifer returned sat in 3.865760 secs.
[08/10 14:33:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  122964.157471  122764.057617 -100715.696777  122964.157471  200.099854  122764.057617    0.000000  200.099854      100.100098     2.0    122764.057617            -1             -1   False
1  122964.157471  122964.057373 -100715.696777  122964.157471  200.000000  122964.057373    0.000000    0.100098        0.100098     2.0    122964.157471         False          False   False
2  122964.257324  122964.057373 -100615.896973  122964.257324    0.199951  122964.057373    0.000000    0.199951       -0.000244     2.0    122964.257324         False          False   False
3  123566.257568  122964.257568 -100615.896973  123566.257568  602.200195  122964.257568  402.000000  200.000000      100.000000     1.0    122964.257324         False          False   False
4  123666.357666  123116.907471 -100615.896973  123666.357666  300.100098  123116.907471  402.100098  147.350098      100.000000     2.0    122964.257324         False          False    True
5  123668.057617  123164.257568 -100615.896973  123668.057617  149.050049  123164.257568  402.100098  101.699951        1.699951     3.0    122964.257324         False          False    True
6  123668.057617  123264.357422 -100517.596924  123668.057617    1.500000  123264.357422  402.100098    1.600098        0.000000     2.0    123265.957520          True           True   False
7  123668.057617  123265.957520 -100417.597168  123668.057617    1.500000  123265.957520  402.100098    0.000000       -0.000244     3.0    123265.957520         False          False   False
8  123669.557617  123266.057373 -100417.596924  123669.557617    1.500000  123266.057373  402.100098    1.400146      -98.500000     1.0    123265.957520         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=100.[0m
[08/10 14:33:02]  --------------------------------------------------------------------------------
[08/10 14:33:02]  Iteration: 88 (0 solution, 87 counterexamples)
[08/10 14:33:25]  Generator returned sat in 19.424716 secs.
[08/10 14:33:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:33:26]  Improved gap from 0 to 100
[08/10 14:33:26]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 14:33:26]  Verifer returned sat in 1.626007 secs.
[08/10 14:33:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  109127.057373  109127.007324 -100615.897217  109127.057373     0.025000  109127.007324   0.024902     0.025146       -0.025146     2.0    109127.007324            -1             -1     -1
1  109227.107422  109127.057617 -100615.897217  109227.107422   100.075195  109127.057617   0.024902   100.024902        0.024902     1.0    109127.007324         False          False   True
2  109227.107422  109227.057617 -100615.897217  109227.107422    99.999756  109227.057617   0.024902     0.024902      -99.975098     2.0    109227.082520         False          False   True
3  109421.507568  109329.057373 -100615.897217  109421.507568   194.425049  109329.057373   0.024902    92.425293       -5.574951     1.0    109227.082520         False          False   True
4  109727.057373  109527.057617 -100615.897217  109727.057373   397.975098  109527.057617   0.024902   199.974854      199.974854     1.0    109227.082520         False          False   True
5  110326.557617  109626.657471 -100615.897217  110326.557617   799.475098  109626.657471   0.024902   699.875244      699.475098     2.0    109227.082520         False          False   True
6  110827.257324  109727.057617 -100615.897217  110827.257324  1200.574951  109727.057617   0.024902  1100.174805     1100.174805     2.0    109227.082520         False          False   True
7  111327.157715  109727.082520 -100615.897217  111327.157715  1600.075195  109727.082520   0.050049  1600.025146     1500.050049     3.0    109227.082520         False          False   True
8  111327.157715  109827.057617 -100615.897217  111327.157715   798.537598  109827.057617   0.050049  1500.050049     1400.050049     4.0    111327.107666          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6144205/4096.[0m
[08/10 14:33:27]  --------------------------------------------------------------------------------
[08/10 14:33:27]  Iteration: 89 (0 solution, 88 counterexamples)
[08/10 14:33:39]  Generator returned sat in 9.184319 secs.
[08/10 14:33:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:33:39]  Improved gap from 1/20 to 0
[08/10 14:33:40]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 14:33:40]  Verifer returned sat in 0.614340 secs.
[08/10 14:33:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  110923.807373  110723.857666 -102212.697266  110923.807373  200.000000  110723.857666   0.049805  199.899902      199.899902     2.0    110723.857666            -1             -1     -1
1  110923.907471  110723.907715 -102212.697266  110923.907471  200.000000  110723.907715   0.049805  199.949951      100.000000     2.0    110723.857666         False          False   True
2  110923.957520  110923.807617 -102212.697266  110923.957520  200.000000  110923.807617   0.049805    0.100098        0.050049     2.0    110723.857666         False          False   True
3  111225.457520  110923.857666 -102212.697266  111225.457520  301.600098  110923.857666   0.049805  301.550049      201.550049     3.0    110723.857666         False          False   True
4  111225.457520  111123.857666 -102212.697266  111225.457520    1.500000  111123.857666   0.049805  101.550049      101.550049     2.0    111225.407715          True           True  False
5  111225.457520  111223.807617 -102212.697266  111225.457520    1.500000  111223.807617   0.049805    1.600098        1.550049     3.0    111225.407715         False          False  False
6  111225.457520  111223.857666 -102114.247314  111225.457520    1.500000  111223.857666   0.049805    1.550049        0.000000     4.0    111225.407715         False           True  False
7  111225.457520  111225.407715 -102014.247314  111225.457520    1.500000  111225.407715   0.049805    0.000000        0.000000     5.0    111225.407715         False           True  False
8  111226.957520  111225.407715 -101915.747314  111226.957520    1.500000  111225.407715   0.049805    1.500000        0.000000     5.0    111225.407715         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1008/5.[0m
[08/10 14:33:40]  --------------------------------------------------------------------------------
[08/10 14:33:40]  Iteration: 90 (0 solution, 89 counterexamples)
[08/10 14:34:01]  Generator returned sat in 17.482162 secs.
[08/10 14:34:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:34:01]  Improved gap from 0 to 48.4375
[08/10 14:34:01]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 14:34:01]  Verifer returned sat in 0.404844 secs.
[08/10 14:34:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  111022.431641  110722.406738 -102164.272461  111022.431641  299.974854  110722.406738   0.049561  299.975342      299.975098     2.0    110722.406738            -1             -1     -1
1  111022.431641  110822.406982 -102164.272461  111022.431641  299.974854  110822.406982   0.049561  199.975098      199.975098     2.0    110722.406738         False          False   True
2  111124.006836  110822.406982 -102164.272461  111124.006836  301.550293  110822.406982   0.049561  301.550293      201.550293     2.0    110722.406738         False          False   True
3  111124.006836  111022.406982 -102164.272461  111124.006836   56.075195  111022.406982   0.049561  101.550293      101.550293     2.0    111123.957275         False          False   True
4  111124.006836  111122.406982 -102164.272461  111124.006836   54.575195  111122.406982   0.049561    1.550293        1.550293     3.0    111123.957275         False          False   True
5  111175.531738  111127.069580 -102117.372559  111175.531738   53.075195  111127.069580   0.049561   48.412598       -0.024902     1.0    111123.957275         False          False   True
6  111178.694336  111175.507080 -102065.810059  111178.694336   51.575195  111175.507080   0.049561    3.137695      -45.299805     1.0    111123.957275         False          False   True
7  111225.631836  111223.944580 -102014.247559  111225.631836   50.075195  111223.944580   0.049561    1.637695      -46.799805     1.0    111123.957275         False          False   True
8  111272.569336  111272.382080 -102014.222412  111272.569336   48.575195  111272.382080   0.049561    0.137695      -99.837158     1.0    111123.957275         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=825651/4096.[0m
[08/10 14:34:02]  --------------------------------------------------------------------------------
[08/10 14:34:02]  Iteration: 91 (0 solution, 90 counterexamples)
[08/10 14:34:29]  Generator returned sat in 24.171300 secs.
[08/10 14:34:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:34:30]  Improved gap from 1/600 to 14.0625
[08/10 14:34:30]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/10 14:34:30]  Verifer returned sat in 1.104619 secs.
[08/10 14:34:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  111022.356445  110722.406738 -102164.272461  111022.356445  299.899902  110722.406738   0.049561  299.900146      299.900146     2.0    110722.406738            -1             -1   False
1  111022.356445  110822.406738 -102164.272461  111022.356445  299.800049  110822.406738   0.049561  199.900146      199.900146     2.0    111022.306885         False          False   False
2  111217.356445  110822.406738 -102164.272461  111217.356445  394.900146  110822.406738   0.049561  394.900146      294.900146     2.0    111022.306885         False          False   False
3  111217.356445  111022.406738 -102164.272461  111217.356445  388.000000  111022.406738   0.049561  194.900146      194.900146     2.0    111217.306885         False          False   False
4  111217.456299  111119.006592 -102164.272461  111217.456299  195.000000  111119.006592   0.049561   98.400146       95.000000     3.0    111217.306885         False          False   False
5  111217.556152  111167.156738 -102159.372314  111217.556152   98.500000  111167.156738   0.049561   50.349854        0.000000     4.0    111217.306885         False           True   False
6  111217.556152  111217.506592 -102073.434814  111217.556152   50.250000  111217.506592   0.049561    0.000000      -14.062500     2.0    111217.306885         False           True   False
7  111243.681152  111231.569336 -101987.497559  111243.681152   26.125000  111231.569336   0.049561   12.062256       -2.000244     1.0    111217.306885         False          False   False
8  111245.681396  111245.631836 -101901.560059  111245.681396   14.062500  111245.631836   0.049561    0.000000      -14.062500     1.0    111217.306885         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1208319/4096.[0m
[08/10 14:34:31]  --------------------------------------------------------------------------------
[08/10 14:34:31]  Iteration: 92 (0 solution, 91 counterexamples)
[08/10 14:35:09]  Generator returned sat in 35.456745 secs.
[08/10 14:35:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:35:09]  Improved gap from 1/20 to 100
[08/10 14:35:10]  Improved number of small numbers from 74 to 78 out of a max of 114
[08/10 14:35:10]  Verifer returned sat in 0.925744 secs.
[08/10 14:35:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  110923.006299  110822.906299 -102164.272461  110923.006299  299.899658  110822.906299      0.050  100.050000      100.050000     1.0    110822.906299            -1             -1     -1
1  110923.006299  110822.906299 -102164.272461  110923.006299    0.050049  110822.906299      0.050  100.050000        0.050000     1.0    110922.956299         False          False   True
2  111022.906494  110989.472965 -102164.272461  111022.906494  199.950195  110989.472965      0.050   33.383529       -0.049805     1.0    110922.956299         False          False   True
3  111122.956299  111022.906299 -102164.272461  111122.956299  133.433333  111022.906299      0.050  100.000000        0.000000     1.0    111122.906299         False          False   True
4  111223.606299  111122.906299 -102164.272461  111223.606299  200.650000  111122.906299      0.600  100.100000        0.100000     2.0    111122.906299         False          False   True
5  111323.656299  111322.906299 -102164.272461  111323.656299  200.150000  111322.906299      0.650    0.100000        0.100000     1.0    111122.906299         False           True   True
6  111523.206299  111322.906299 -102164.272461  111523.206299  199.650000  111322.906299    100.200  100.100000        0.100000     1.0    111122.906299         False          False   True
7  111622.256299  111423.056299 -102164.272461  111622.256299  199.150000  111423.056299    100.200   99.000000       -0.850000     1.0    111122.906299         False          False   True
8  111822.481299  111622.906250 -102164.272461  111822.481299  299.225000  111622.906250    199.475    0.100049        0.100000     1.0    111122.906299         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 14:35:11]  --------------------------------------------------------------------------------
[08/10 14:35:11]  Iteration: 93 (0 solution, 92 counterexamples)
[08/10 14:35:55]  Generator returned sat in 41.169215 secs.
[08/10 14:35:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:35:55]  Improved gap from 0 to 48.4375
[08/10 14:35:57]  Improved number of small numbers from 64 to 70 out of a max of 114
[08/10 14:35:57]  Verifer returned sat in 1.865049 secs.
[08/10 14:35:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  109843.817549  109590.693799 -102164.272461  109843.817549  153.126221  109590.693799    0.00125  253.122500      153.122500     7.0    109590.693799            -1             -1     -1
1  109843.817549  109790.693799 -102164.272461  109843.817549  153.124756  109790.693799    0.00125   53.122500       53.122500     7.0    109843.816299         False           True   True
2  109943.818799  109890.693799 -102164.272461  109943.818799  153.123750  109890.693799    0.00125   53.123750       53.123750     1.0    109943.817549         False           True  False
3  110043.817549  109958.443799 -102164.272461  110043.817549  153.122500  109958.443799    0.00125   85.372500       53.122500     1.0    110043.816299         False          False  False
4  110143.820049  110090.693799 -102164.272461  110143.820049  185.375000  110090.693799    0.00250   53.123750       53.123750     1.0    110043.816299         False          False  False
5  110143.820049  110095.379883 -102117.396211  110143.820049    0.010000  110095.379883    0.00250   48.437666        0.000000     2.0    110043.816299         False          False   True
6  110143.820049  110143.817549 -102065.833711  110143.820049    0.010000  110143.817549    0.00250    0.000000      -48.437500     3.0    110043.816299         False          False   True
7  110238.006924  110192.255049 -102014.271240  110238.006924   94.186875  110192.255049    0.00250   45.749375       -2.688154     1.0    110238.004424          True           True  False
8  110244.538174  110240.692627 -102014.270996  110244.538174   52.280625  110240.692627    0.00250    3.843047      -96.156660     1.0    110238.004424         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=42499/800.[0m
[08/10 14:35:57]  --------------------------------------------------------------------------------
[08/10 14:35:57]  Iteration: 94 (0 solution, 93 counterexamples)
[08/10 14:36:38]  Generator returned sat in 37.417467 secs.
[08/10 14:36:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:36:38]  Improved gap from 0 to 100
[08/10 14:36:39]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 14:36:39]  Verifer returned sat in 1.612495 secs.
[08/10 14:36:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  110086.663818  109886.763799 -102164.272461  110086.663818    0.099854  109886.763799    0.000000  199.900020        99.90002     8.0    109886.763799            -1             -1     -1
1  110086.663818  110074.763799 -102164.272461  110086.663818   12.199951  110074.763799    0.000000   11.900020        -0.09998     2.0    109886.763799         False           True  False
2  110086.863799  110086.763799 -102164.272461  110086.863799   12.100000  110086.763799    0.000000    0.100000       -99.90000     1.0    110086.863799         False          False  False
3  110287.063799  110221.630465 -102164.272461  110287.063799  200.300000  110221.630465    0.100000   65.333333         0.20000     1.0    110086.863799         False          False  False
4  110387.163799  110350.963799 -102164.272461  110387.163799  165.433333  110350.963799    0.200000   36.000000         0.20000     1.0    110086.863799         False          False   True
5  110487.263799  110450.963799 -102164.272461  110487.263799  136.100000  110450.963799    0.300000   36.000000         0.20000     1.0    110086.863799         False          False   True
6  110631.363799  110586.763799 -102164.272461  110631.363799  180.100000  110586.763799   44.400000    0.200000         0.20000     1.0    110086.863799         False          False   True
7  110811.730465  110686.763799 -102164.272461  110811.730465  180.566667  110686.763799  124.766667    0.200000         0.20000     1.0    110086.863799         False          False   True
8  110977.430465  110687.063965 -102164.272461  110977.430465  165.900000  110687.063965  190.466667   99.899834         0.20000     1.0    110086.863799         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=1/5.[0m
[08/10 14:36:40]  --------------------------------------------------------------------------------
[08/10 14:36:40]  Iteration: 95 (0 solution, 94 counterexamples)
[08/10 14:37:30]  Generator returned sat in 46.698914 secs.
[08/10 14:37:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:37:32]  Improved gap from 1/600 to 23.4375
[08/10 14:37:33]  Improved number of small numbers from 66 to 78 out of a max of 114
[08/10 14:37:33]  Verifer returned sat in 2.538141 secs.
[08/10 14:37:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  110411.320465  109787.882965 -102240.834961  110411.320465    0.099854  109787.882965        0.0  623.437500      523.437500     7.0    109787.882965            -1             -1   False
1  110411.420465  109887.883057 -102240.834961  110411.420465  623.537500  109887.883057        0.1  523.437409      423.437500     4.0    109787.882965         False          False   False
2  110411.420465  110087.882812 -102240.834961  110411.420465  265.833252  110087.882812        0.1  323.437653      323.437500     4.0    110411.320465         False          False    True
3  110411.420465  110187.882812 -102240.834961  110411.420465  265.733333  110187.882812        0.1  223.437653      223.437500     5.0    110411.320465         False          False    True
4  110411.420465  110287.882965 -102240.834961  110411.420465  130.866667  110287.882965        0.1  123.437500      123.437500     6.0    110411.320465         False          False    True
5  110411.420465  110381.503662 -102240.834961  110411.420465   63.433333  110381.503662        0.1   29.816803       23.437500     7.0    110411.320465         False          False    True
6  110411.420465  110387.882965 -102164.272461  110411.420465   29.716667  110387.882965        0.1   23.437500        0.000000     8.0    110411.320465         False          False    True
7  110411.420465  110411.320465 -102090.734863  110411.420465   12.858333  110411.320465        0.1    0.000000      -26.462402     9.0    110411.320465         False          False    True
8  110542.287132  110437.783203 -102090.734863  110542.287132  130.866667  110437.783203        0.1  104.403929        4.404264     1.0    110411.320465         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=6775/16.[0m
[08/10 14:37:33]  --------------------------------------------------------------------------------
[08/10 14:37:33]  Iteration: 96 (0 solution, 95 counterexamples)
[08/10 14:38:45]  Generator returned sat in 68.757055 secs.
[08/10 14:38:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:38:46]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 14:38:46]  Verifer returned sat in 0.515996 secs.
[08/10 14:38:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  110021.250488  109821.300537 -101890.264893  110021.250488  199.949951  109821.300537   0.000000  199.949951       99.949951     2.0    109821.300537            -1             -1   False
1  110021.250488  109921.300537 -101890.264893  110021.250488  199.900146  109921.300537   0.000000   99.949951       -0.050049     2.0    110021.250488         False          False   False
2  110121.150391  110021.300537 -101890.264893  110121.150391  199.849854  110021.300537   0.000000   99.849854       -0.150146     1.0    110121.150391         False          False   False
3  110221.300537  110207.800537 -101890.264893  110221.300537  200.000000  110207.800537   0.000000   13.500000        0.000000     1.0    110121.150391         False          False   False
4  110400.050537  110316.800537 -101890.264893  110400.050537  192.250000  110316.800537   0.000000   83.250000       78.750000     1.0    110121.150391         False          False   False
5  110513.550537  110418.300537 -101890.264893  110513.550537  196.750000  110418.300537   0.050049   95.199951       92.199951     1.0    110121.150391         False          False   False
6  110613.600586  110521.300293 -101890.264893  110613.600586  195.250000  110521.300293   0.100098   92.200195       92.199951     1.0    110121.150391         False          False    True
7  110715.150391  110621.300537 -101890.264893  110715.150391  193.750000  110621.300537   1.649902   92.199951       92.199951     1.0    110121.150391         False          False    True
8  110815.200439  110713.550293 -101890.264893  110815.200439  192.250000  110713.550293   1.699951   99.950195       92.199951     1.0    110121.150391         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=377651/4096.[0m
[08/10 14:38:46]  --------------------------------------------------------------------------------
[08/10 14:38:46]  Iteration: 97 (0 solution, 96 counterexamples)
[08/10 14:39:31]  Generator returned sat in 41.611742 secs.
[08/10 14:39:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:39:32]  Improved gap from 1/40 to 48.4375
[08/10 14:39:32]  Improved number of small numbers from 107 to 114 out of a max of 114
[08/10 14:39:32]  Verifer returned sat in 1.025758 secs.
[08/10 14:39:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  109821.250244  109821.150146 -101890.264893  109821.250244  200.100000  109821.150146     0.0000   0.100098      -99.899902     1.0    109821.150146            -1             -1   False
1  110021.150146  109972.712891 -101890.264893  110021.150146  200.000000  109972.712891     0.0000  48.437256        0.000000     1.0    110021.150146         False          False   False
2  110121.050391  110076.921387 -101890.264893  110121.050391  148.337500  110076.921387     0.0000  44.129004       -0.099756     1.0    110121.050391         False          False   False
3  110169.587891  110121.150146 -101838.702637  110169.587891   92.666504  110121.150146     0.0000  48.437744        0.000000     1.0    110169.587891         False          False   False
4  110273.150146  110269.487793 -101838.702637  110273.150146  152.000000  110269.487793     2.0625   1.599854        1.499756     1.0    110169.587891         False          False   False
5  110273.150146  110269.587891 -101787.140137  110273.150146    1.500000  110269.587891     2.0625   1.499756      -46.937744     2.0    110169.587891         False          False    True
6  110369.983643  110318.641846 -101737.035889  110369.983643   98.333252  110318.641846     2.0625  49.279297        0.000000     1.0    110367.921143          True           True   False
7  110421.450195  110368.020996 -101688.502441  110421.450195  100.745850  110368.020996     2.0625  51.366699        0.000000     1.0    110367.921143         False          False   False
8  110421.450195  110419.387695 -101688.502441  110421.450195   51.266602  110419.387695     2.0625   0.000000     -100.000000     2.0    110367.921143         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=6143/4096.[0m
[08/10 14:39:33]  --------------------------------------------------------------------------------
[08/10 14:39:33]  Iteration: 98 (0 solution, 97 counterexamples)
[08/10 14:40:13]  Generator returned sat in 37.608155 secs.
[08/10 14:40:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:40:15]  Improved gap from 1/4 to 14.0625
[08/10 14:40:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 14:40:15]  Verifer returned sat in 1.738941 secs.
[08/10 14:40:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  110150.451660  109531.401855 -101692.164795  110150.451660  418.999756  109531.401855        0.0  619.049805      519.050049     2.0    109531.401855            -1             -1   False
1  110150.451660  109731.401611 -101692.164795  110150.451660  418.999756  109731.401611        0.0  419.050049      419.050049     3.0    109531.401855         False          False   False
2  110150.451660  109731.401611 -101692.164795  110150.451660  418.999756  109731.401611        0.0  419.050049      319.050049     3.0    109531.401855          True           True   False
3  110150.451660  109931.401611 -101692.164795  110150.451660  419.000000  109931.401611        0.0  219.050049      219.050049     4.0    109531.401855         False           True   False
4  110150.451660  110031.401611 -101692.164795  110150.451660  210.000000  110031.401611        0.0  119.050049      119.050049     5.0    110150.451660          True           True   False
5  110150.451660  110113.989258 -101692.164795  110150.451660  105.500000  110113.989258        0.0   36.462402       19.050049     6.0    110150.451660         False           True   False
6  110167.239258  110150.501953 -101628.002441  110167.239258   53.250000  110150.501953        0.0   16.737305        0.000000     1.0    110150.451660         False           True   False
7  110177.626953  110167.289307 -101542.114990  110177.626953   27.125000  110167.289307        0.0   10.337646       -3.724854     1.0    110150.451660         False          False   False
8  110181.351807  110181.351807 -101542.114990  110181.351807   14.062500  110181.351807        0.0    0.000000     -100.000000     1.0    110150.451660         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=858317/2048.[0m
[08/10 14:40:16]  --------------------------------------------------------------------------------
[08/10 14:40:16]  Iteration: 99 (0 solution, 98 counterexamples)
[08/10 14:40:48]  Generator returned sat in 29.314361 secs.
[08/10 14:40:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:40:52]  Improved gap from 9219/20480 to 0
[08/10 14:40:53]  Improved number of small numbers from 65 to 89 out of a max of 114
[08/10 14:40:53]  Verifer returned sat in 4.015689 secs.
[08/10 14:40:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  111457.711182  111457.708984 -103518.472168  111457.711182  0.000488  111457.708984   0.000625  0.001572        0.001572     6.0    111457.708984            -1             -1     -1
1  111457.711182  111457.709717 -103418.474219  111457.711182  0.000732  111457.709717   0.000625  0.000840       -0.000479     2.0    111457.708984         False          False   True
2  111458.202285  111457.711035 -103318.964844  111458.202285  0.491943  111457.711035   0.000625  0.490625        0.000000     1.0    111457.708984         False          False   True
3  111458.211660  111458.201660 -103218.974219  111458.211660  0.500000  111458.201660   0.000625  0.009375        0.000000     2.0    111457.708984         False          False   True
4  111458.212285  111458.211035 -103118.975586  111458.212285  0.010000  111458.211035   0.000625  0.000625       -0.000742     2.0    111457.708984         False          False   True
5  111458.221660  111458.220410 -103018.984844  111458.221660  0.010000  111458.220410   0.000625  0.000625       -0.000625     1.0    111457.708984         False          False   True
6  111458.231035  111458.221660 -102918.993652  111458.231035  0.010000  111458.221660   0.000625  0.008750       -0.000059     1.0    111457.708984         False          False   True
7  111458.232285  111458.231035 -102818.995605  111458.232285  0.010000  111458.231035   0.000625  0.000625       -0.000762     1.0    111457.708984         False          False   True
8  111458.241660  111458.232422 -102818.492432  111458.241660  0.010000  111458.232422   0.000625  0.008613      -99.488213     1.0    111457.708984         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/10 14:40:53]  --------------------------------------------------------------------------------
[08/10 14:40:53]  Iteration: 100 (0 solution, 99 counterexamples)
[08/10 14:42:00]  Generator returned sat in 63.779379 secs.
[08/10 14:42:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:42:01]  Improved gap from 1/600 to 100
[08/10 14:42:01]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 14:42:01]  Verifer returned sat in 0.637558 secs.
[08/10 14:42:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  110596.902344  110596.702148 -103018.984619  110596.902344    0.100000  110596.702148    0.000000    0.200195        0.200195     1.0    110596.702148            -1             -1   False
1  110596.902344  110596.702148 -103018.984619  110596.902344    0.100000  110596.702148    0.000000    0.200195      -99.799805     1.0    110596.702148         False          False   False
2  110797.702148  110697.002441 -103018.984619  110797.702148  201.000000  110697.002441    0.000000  100.699707        1.000000     1.0    110596.702148         False          False   False
3  110897.902344  110797.802246 -103018.984619  110897.902344  200.899902  110797.802246    0.100098  100.000000        1.100098     1.0    110897.802246         False          False   False
4  110998.302246  110898.002441 -103018.984619  110998.302246  200.399902  110898.002441    0.500000   99.799805        1.100098     1.0    110897.802246         False          False    True
5  111098.402344  111096.702148 -103018.984619  111098.402344  199.899902  111096.702148    0.600098    1.100098        1.100098     1.0    110897.802246         False          False    True
6  111296.702148  111097.802246 -103018.984619  111296.702148  199.399902  111097.802246   98.899902  100.000000        1.100098     2.0    110897.802246         False          False    True
7  111395.602051  111296.602295 -103018.984619  111395.602051  198.899902  111296.602295   98.899902    0.099854        0.000000     1.0    111296.702148          True           True    True
8  111695.852051  111296.702148 -103018.984619  111695.852051  300.349854  111296.702148  298.049805  101.100098        1.100098     2.0    111296.702148         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=2253/2048.[0m
[08/10 14:42:02]  --------------------------------------------------------------------------------
[08/10 14:42:02]  Iteration: 101 (0 solution, 100 counterexamples)
[08/10 14:42:26]  Generator returned sat in 21.407126 secs.
[08/10 14:42:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:42:27]  Improved gap from 0 to 100
[08/10 14:42:27]  Improved number of small numbers from 92 to 114 out of a max of 114
[08/10 14:42:27]  Verifer returned sat in 0.864244 secs.
[08/10 14:42:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  111068.302002  110968.302246 -103018.984619  111068.302002    0.100000  110968.302246   0.100098   99.899658       -0.100342     1.0    110968.302246            -1             -1     -1
1  111168.402344  111068.302246 -103018.984619  111168.402344  200.000000  111068.302246   0.100098  100.000000        0.000000     1.0    110968.302246         False          False   True
2  111294.302246  111168.302246 -103018.984619  111294.302246  225.899902  111168.302246   0.100098  125.899902       25.899902     2.0    110968.302246         False          False   True
3  111294.302246  111268.302246 -103018.984619  111294.302246    0.100000  111268.302246   0.100098   25.899902      -74.100098     2.0    111294.202148          True           True  False
4  111418.902344  111418.702148 -103018.984619  111418.902344  150.500000  111418.702148   0.100098    0.100098      -49.500000     1.0    111294.202148         False           True  False
5  111594.502197  111520.702393 -103018.984619  111594.502197  175.699951  111520.702393   0.199951   73.599854       26.000000     1.0    111294.202148         False          False  False
6  111694.602295  111668.302246 -103018.984619  111694.602295  173.699951  111668.302246   0.300049   26.000000       26.000000     1.0    111294.202148         False          False   True
7  111840.302246  111768.302246 -103018.984619  111840.302246  171.699951  111768.302246  46.000000   26.000000       26.000000     1.0    111294.202148         False          False   True
8  111984.002197  111794.402100 -103018.984619  111984.002197  169.699951  111794.402100  89.699951   99.900146       26.000000     1.0    111294.202148         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=26.[0m
[08/10 14:42:28]  --------------------------------------------------------------------------------
[08/10 14:42:28]  Iteration: 102 (0 solution, 101 counterexamples)
[08/10 14:43:27]  Generator returned sat in 56.335884 secs.
[08/10 14:43:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:43:29]  Improved gap from 1/20 to 17.1875
[08/10 14:43:29]  Improved number of small numbers from 82 to 114 out of a max of 114
[08/10 14:43:29]  Verifer returned sat in 1.798860 secs.
[08/10 14:43:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  111358.814697  111158.864502 -103018.984619  111358.814697    0.050049  111158.864502        0.0  199.950195       99.950195     2.0    111158.864502            -1             -1    True
1  111358.814697  111258.864746 -103018.984619  111358.814697  199.949951  111258.864746        0.0   99.949951       -0.049805     2.0    111158.864502         False          False    True
2  111458.864502  111358.864746 -103018.984619  111458.864502  199.999756  111358.864746        0.0   99.999756        0.000000     1.0    111158.864502         False          False    True
3  111784.864746  111558.864502 -103018.984619  111784.864746  426.000000  111558.864502        0.0  226.000244      226.000244     1.0    111158.864502         False          False    True
4  111784.864746  111658.864502 -103018.984619  111784.864746  215.000000  111658.864502        0.0  126.000244      126.000244     2.0    111158.864502         False          False    True
5  111784.864746  111734.876953 -103018.984619  111784.864746  109.500000  111734.876953        0.0   49.987793       26.000244     3.0    111158.864502         False          False    True
6  111791.626953  111761.202393 -102951.747070  111791.626953   56.750000  111761.202393        0.0   30.424561        0.000000     4.0    111158.864502         False          False    True
7  111791.626953  111791.626953 -102868.934570  111791.626953   30.375000  111791.626953        0.0    0.000000      -17.187500     2.0    111158.864502         False          False    True
8  111808.814453  111808.814453 -102868.934570  111808.814453   17.187500  111808.814453        0.0    0.000000     -100.000000     1.0    111158.864502         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=925901/4096.[0m
[08/10 14:43:30]  --------------------------------------------------------------------------------
[08/10 14:43:30]  Iteration: 103 (0 solution, 102 counterexamples)
[08/10 14:43:42]  Generator returned sat in 8.801627 secs.
[08/10 14:43:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:43:44]  Improved gap from 393/32 to 15.625
[08/10 14:43:44]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 14:43:44]  Verifer returned sat in 2.107304 secs.
[08/10 14:43:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  114834.004639  114633.904785 -106339.074707  114834.004639    0.100000  114633.904785   0.099854  200.000000      100.000000     5.0    114633.904785            -1             -1     -1
1  115134.004639  114833.904785 -106339.074707  115134.004639  500.000000  114833.904785   0.099854  300.000000      300.000000     6.0    114633.904785         False          False   True
2  115268.279785  114833.904785 -106339.074707  115268.279785  434.275146  114833.904785   0.099854  434.275146      334.275146     6.0    115268.179932          True           True  False
3  115268.279785  114933.904785 -106339.074707  115268.279785  407.000000  114933.904785   0.099854  334.275146      234.275146     3.0    115268.179932         False           True  False
4  115268.279785  115133.904541 -106339.074707  115268.279785  205.000000  115133.904541   0.099854  134.275391      134.275146     4.0    115268.179932         False          False  False
5  115268.279785  115133.904785 -106339.074707  115268.279785  104.000000  115133.904785   0.099854  134.275146       34.275146     5.0    115268.179932         False          False  False
6  115268.279785  115239.829834 -106273.349854  115268.279785   53.500000  115239.829834   0.099854   28.350098        0.000000     5.0    115268.179932         False          False  False
7  115268.279785  115268.179932 -106188.974854  115268.279785   28.250000  115268.179932   0.099854    0.000000      -15.625000     6.0    115268.179932         False          False  False
8  115283.904785  115283.804932 -106104.600098  115283.904785   15.625000  115283.804932   0.099854    0.000000      -15.625244     1.0    115268.179932         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1369599/4096.[0m
[08/10 14:43:45]  --------------------------------------------------------------------------------
[08/10 14:43:45]  Iteration: 104 (0 solution, 103 counterexamples)
[08/10 14:45:14]  Generator returned sat in 85.342859 secs.
[08/10 14:45:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:45:14]  Improved gap from 1 to 100
[08/10 14:45:14]  Improved number of small numbers from 56 to 114 out of a max of 114
[08/10 14:45:14]  Verifer returned sat in 0.572615 secs.
[08/10 14:45:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  116170.779785  116068.629883 -106273.350098  116170.779785   102.149902  116068.629883   0.099609   102.050293      102.050049     8.0    116068.629883            -1             -1     -1
1  116170.879639  116068.630127 -106273.350098  116170.879639   102.150146  116068.630127   0.099609   102.149902        2.149902     2.0    116068.629883         False           True  False
2  116170.879639  116170.729980 -106273.350098  116170.879639     0.050049  116170.729980   0.099609     0.050049      -97.850098     2.0    116170.780029         False          False  False
3  117870.829590  116271.130127 -106273.350098  117870.829590  1700.000000  116271.130127   0.149658  1599.549805     1502.049805     1.0    116170.780029         False          False  False
4  117970.779785  116370.229980 -106273.350098  117970.779785  1699.500000  116370.229980   0.149658  1600.400146     1502.000000     2.0    116170.780029         False          False   True
5  118070.879639  116470.629883 -106273.350098  118070.879639  1700.500000  116470.629883   0.199707  1600.050049     1502.049805     3.0    116170.780029         False          False   True
6  118170.829590  116569.629883 -106273.350098  118170.829590  1700.000000  116569.629883   0.199707  1601.000000     1501.999756     4.0    116170.780029         False          False   True
7  118270.829590  116668.630127 -106273.350098  118270.829590  1701.000000  116668.630127   0.199707  1601.999756     1501.999756     5.0    116170.780029         False          False   True
8  118370.829834  116868.629883 -106273.350098  118370.829834  1702.000000  116868.629883   0.199707  1502.000244     1502.000000     6.0    116170.780029         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=1538099/1024.[0m
[08/10 14:45:15]  --------------------------------------------------------------------------------
[08/10 14:45:15]  Iteration: 105 (0 solution, 104 counterexamples)
[08/10 14:45:34]  Generator returned sat in 15.334078 secs.
[08/10 14:45:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:45:35]  Improved gap from 0 to 48.4375
[08/10 14:45:35]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 14:45:35]  Verifer returned sat in 1.521902 secs.
[08/10 14:45:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  119125.625244  119025.550537 -109230.270508  119125.625244  100.049805  119025.550537    0.099609  99.975098       99.975098     1.0    119025.550537            -1             -1     -1
1  119125.675049  119125.550537 -109230.270508  119125.675049  100.024902  119125.550537    0.099609   0.024902        0.024902     1.0    119125.575439         False          False   True
2  119326.824463  119225.550537 -109230.270508  119326.824463  201.174316  119225.550537  101.224121   0.049805        0.049805     1.0    119125.575439         False          False   True
3  119527.924072  119325.550537 -109230.270508  119527.924072  201.149414  119325.550537  202.323730   0.049805        0.049805     1.0    119325.600342         False          False   True
4  119627.948975  119424.649902 -109230.270508  119627.948975  100.074707  119424.649902  202.348633   0.950439        0.049805     1.0    119325.600342         False          False   True
5  119676.535889  119425.625244 -109178.907227  119676.535889   49.537354  119425.625244  202.348633  48.562012        0.000000     1.0    119325.600342         False          False   True
6  119728.511230  119474.212158 -109130.907471  119728.511230  100.537354  119474.212158  202.348633  51.950439       -0.024902     1.0    119325.600342         False          False   True
7  119751.391602  119526.187500 -109079.344971  119751.391602   74.830811  119526.187500  202.348633  22.855469      -25.582031     1.0    119325.600342         False          False   True
8  119779.804932  119574.625000 -109079.344971  119779.804932   51.268799  119574.625000  202.348633   2.831299      -97.168701     1.0    119325.600342         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=51/1024.[0m
[08/10 14:45:36]  --------------------------------------------------------------------------------
[08/10 14:45:36]  Iteration: 106 (0 solution, 105 counterexamples)
[08/10 14:46:18]  Generator returned sat in 38.972937 secs.
[08/10 14:46:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:46:23]  Improved gap from 1/600 to 32.8125
[08/10 14:46:24]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/10 14:46:24]  Verifer returned sat in 5.735769 secs.
[08/10 14:46:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  123582.660400  123582.659769 -109436.684258  123582.660400    0.002441  123582.659769   0.000000   0.000632       -0.000618     4.0    123582.659769            -1             -1   False
1  123582.661644  123582.661019 -109436.684258  123582.661644    0.001875  123582.661019   0.000000   0.000625      -99.999375     1.0    123582.661644         False          False   False
2  123815.991852  123782.661019 -109436.684258  123815.991852  233.330833  123782.661019   0.000625  33.330208       33.330208     1.0    123582.661644         False          False   False
3  123915.991227  123882.661019 -109436.684258  123915.991227  133.329583  123882.661019   0.000625  33.329583       33.329583     1.0    123915.990602         False          False    True
4  124099.327061  123982.660394 -109436.684258  124099.327061  216.665417  123982.660394  83.335833  33.330833       33.330208     1.0    123915.990602         False          False    True
5  124099.327061  123982.661019 -109370.014648  124099.327061    0.010000  123982.661019  83.335833  33.330208       -0.000182     2.0    123915.990602         False          False    True
6  124166.001852  124015.991852 -109336.689453  124166.001852  100.005000  124015.991852  83.335833  66.674167       -0.000195     1.0    123915.990602         False          False    True
7  124215.995602  124082.666644 -109286.683105  124215.995602  116.667917  124082.666644  83.335833  49.993125       -0.000098     1.0    123915.990602         False          False    True
8  124274.339561  124132.659912 -109286.682861  124274.339561  108.337083  124132.659912  83.335833  58.343815      -41.655895     1.0    123915.990602         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=31997/960.[0m
[08/10 14:46:25]  --------------------------------------------------------------------------------
[08/10 14:46:25]  Iteration: 107 (0 solution, 106 counterexamples)
[08/10 14:47:01]  Generator returned sat in 32.779538 secs.
[08/10 14:47:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:47:02]  Improved gap from 1/800 to 46.875
[08/10 14:47:02]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 14:47:02]  Verifer returned sat in 0.689557 secs.
[08/10 14:47:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  123563.486816  123217.636719 -109126.785156  123563.486816  345.800049  123217.636719   0.049805  345.800293      290.675293     8.0    123217.636719            -1             -1     -1
1  123563.486816  123372.761719 -109126.785156  123563.486816  345.749756  123372.761719   0.049805  190.675293      190.675293     8.0    123563.437012         False           True   True
2  123718.511719  123372.761719 -109126.785156  123718.511719  345.700195  123372.761719  55.024902  290.725098      190.725098     8.0    123663.486816         False           True  False
3  123718.511719  123472.761963 -109126.785156  123718.511719   56.875000  123472.761963  55.024902  190.724854       90.725098     9.0    123663.486816         False           True   True
4  123718.511719  123663.437012 -109126.785156  123718.511719   54.875000  123663.437012  55.024902    0.049805       -9.274902     3.0    123663.486816         False           True  False
5  123771.336914  123672.761719 -109073.660156  123771.336914   52.875000  123672.761719  55.024902   43.550293       -3.324707     1.0    123663.486816         False          False  False
6  123778.661621  123719.636719 -109020.535156  123778.661621   50.875000  123719.636719  55.024902    4.000000      -42.875000     1.0    123663.486816         False          False  False
7  123823.536621  123766.511719 -108967.410156  123823.536621   48.875000  123766.511719  55.024902    2.000000      -44.875000     1.0    123663.486816         False          False  False
8  123868.411621  123813.386719 -108967.410156  123868.411621   46.875000  123813.386719  55.024902    0.000000     -100.000000     1.0    123663.486816         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=390605/2048.[0m
[08/10 14:47:02]  --------------------------------------------------------------------------------
[08/10 14:47:02]  Iteration: 108 (0 solution, 107 counterexamples)
[08/10 14:47:12]  Generator returned sat in 6.185190 secs.
[08/10 14:47:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:47:13]  Improved gap from 1/10 to 23.4375
[08/10 14:47:13]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 14:47:13]  Verifer returned sat in 1.217830 secs.
[08/10 14:47:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  122211.124023  121787.184082 -109263.407715  122211.124023  423.942383  121787.184082   0.000000  423.939941      423.939941     5.0    121787.184082            -1             -1   False
1  122211.126709  121887.184082 -109263.407715  122211.126709  423.942627  121887.184082   0.002686  323.939941      323.939941     5.0    121787.184082         False          False   False
2  122211.126709  121987.184082 -109263.407715  122211.126709  223.937256  121987.184082   0.002686  223.939941      223.939941     6.0    122211.124023         False          False    True
3  122211.126709  121987.184082 -109263.407715  122211.126709  223.937500  121987.184082   0.002686  223.939941      123.939941     6.0    122211.124023         False          False    True
4  122211.126709  122187.184082 -109263.407715  122211.126709    2.000000  122187.184082   0.002686   23.939941       23.939941     7.0    122211.124023         False          False    True
5  122211.126709  122187.686523 -109187.347656  122211.126709    2.000000  122187.686523   0.002686   23.437500        0.000000     8.0    122211.124023         False          False    True
6  122211.126709  122211.124023 -109110.785400  122211.126709    2.000000  122211.124023   0.002686    0.000000      -23.437744     9.0    122211.124023         False          False    True
7  122658.506592  122334.561523 -109110.785400  122658.506592  447.379883  122334.561523   0.004883  323.940186      323.939941     1.0    122211.124023         False           True   False
8  122658.506592  122337.181641 -109110.785400  122658.506592    0.010000  122337.181641   0.004883  321.320068      223.939941     2.0    122211.124023         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=663429/2048.[0m
[08/10 14:47:14]  --------------------------------------------------------------------------------
[08/10 14:47:14]  Iteration: 109 (0 solution, 108 counterexamples)
[08/10 14:47:42]  Generator returned sat in 24.809404 secs.
[08/10 14:47:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:47:43]  Improved gap from 1/5 to 100
[08/10 14:47:44]  Improved number of small numbers from 71 to 94 out of a max of 114
[08/10 14:47:44]  Verifer returned sat in 1.362875 secs.
[08/10 14:47:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  120082.398926  119982.298828 -107458.522656  120082.398926    0.199951  119982.298828    0.000000  100.100098      100.099902     2.0    119982.298828            -1             -1   False
1  120082.398926  120082.298828 -107458.522656  120082.398926    0.100098  120082.298828    0.000000    0.100098        0.099902     2.0    120082.398926         False          False   False
2  120082.398926  120082.299023 -107458.522656  120082.398926    0.100000  120082.299023    0.000000    0.099902      -99.900098     3.0    120082.398926         False          False   False
3  120508.499023  120190.265690 -107458.522656  120508.499023  426.200000  120190.265690  226.000000   92.233333        0.200000     1.0    120082.398926         False           True   False
4  120627.865690  120378.299023 -107458.522656  120627.865690  211.600000  120378.299023  245.366667    4.200000        0.200000     1.0    120082.398926         False          False    True
5  120727.965690  120382.599121 -107458.522656  120727.965690  104.300000  120382.599121  245.466667   99.899902        0.200000     1.0    120082.398926         False          False    True
6  120727.965690  120482.399023 -107458.522656  120727.965690   50.650000  120482.399023  245.466667    0.100000      -99.800000     2.0    120082.398926         False          False    True
7  121168.065690  120682.299023 -107458.522656  121168.065690  440.200000  120682.299023  485.566667    0.200000        0.200000     1.0    120082.398926         False          False    True
8  121386.465690  120682.399170 -107458.522656  121386.465690  218.600000  120682.399170  603.966667  100.099854        0.200000     2.0    120082.398926         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 14:47:44]  --------------------------------------------------------------------------------
[08/10 14:47:44]  Iteration: 110 (0 solution, 109 counterexamples)
[08/10 14:48:24]  Generator returned sat in 36.419251 secs.
[08/10 14:48:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:48:25]  Improved number of small numbers from 84 to 113 out of a max of 113
[08/10 14:48:25]  Verifer returned sat in 0.430319 secs.
[08/10 14:48:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  120308.749023  120207.499023 -107684.9729  120308.749023    0.050049  120207.499023   0.000000  101.250000      100.000000     2.0    120207.499023            -1             -1   False
1  120308.749023  120306.699219 -107684.9729  120308.749023  101.199951  120306.699219   0.000000    2.049805        0.000000     2.0    120207.499023         False          False   False
2  120407.849121  120407.799072 -107684.9729  120407.849121  101.149902  120407.799072   0.000000    0.050049       -0.899902     1.0    120407.849121         False          False   False
3  120508.898926  120508.299072 -107684.9729  120508.898926  101.099854  120508.299072   0.050049    0.549805        0.099854     1.0    120508.848877         False          False   False
4  120608.948975  120608.749023 -107684.9729  120608.948975  100.599854  120608.749023   0.100098    0.099854        0.099854     1.0    120508.848877         False          False    True
5  120708.948975  120675.198975 -107684.9729  120708.948975  100.099854  120675.198975   0.100098   33.649902        0.099854     1.0    120508.848877         False          False    True
6  120808.999023  120808.748779 -107684.9729  120808.999023  133.699951  120808.748779   0.150146    0.100098        0.099854     1.0    120508.848877         False          False    True
7  120942.098877  120908.749023 -107684.9729  120942.098877  133.199951  120908.749023  33.250000    0.099854        0.099854     1.0    120508.848877         False          False    True
8  121074.698975  120908.898926 -107684.9729  121074.698975  132.699951  120908.898926  65.850098   99.949951        0.099854     1.0    120508.848877         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=409/4096.[0m
[08/10 14:48:25]  --------------------------------------------------------------------------------
[08/10 14:48:25]  Iteration: 111 (0 solution, 110 counterexamples)
[08/10 14:48:47]  Generator returned sat in 18.167330 secs.
[08/10 14:48:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:48:48]  Improved gap from 1/20 to 48.4375
[08/10 14:48:49]  Improved number of small numbers from 78 to 91 out of a max of 114
[08/10 14:48:49]  Verifer returned sat in 1.324809 secs.
[08/10 14:48:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  120056.836670  120013.036475 -107585.010498  120056.836670  196.300000  120013.036475       0.00  43.800195      -51.949951     3.0    120013.036475            -1             -1    True
1  120209.286475  120208.786377 -107585.010498  120209.286475  196.250000  120208.786377       0.00   0.500098        0.499854     1.0    120209.286475         False          False    True
2  120306.886230  120260.348975 -107585.010498  120306.886230   98.099854  120260.348975       0.00  46.537256       -1.900391     1.0    120306.886230         False          False    True
3  120358.448975  120310.011475 -107534.672852  120358.448975   98.100000  120310.011475       0.00  48.437500        0.000000     1.0    120306.886230         False          False    True
4  120458.998975  120458.398926 -107534.672852  120458.998975  148.987500  120458.398926       0.05   0.550049        0.500000     1.0    120306.886230         False          False    True
5  120458.998975  120458.448975 -107483.110596  120458.998975    0.500000  120458.448975       0.05   0.500000      -47.937744     2.0    120306.886230         False          False    True
6  120558.048975  120508.569808 -107434.222900  120558.048975   99.550000  120508.569808       0.05  49.429167       -0.000049     1.0    120306.886230         False          False    True
7  120608.398975  120557.999023 -107384.572852  120608.398975   99.779167  120557.999023       0.05  50.349951        0.000000     1.0    120306.886230         False          False    True
8  120608.398975  120608.348975 -107333.010498  120608.398975   50.300049  120608.348975       0.05   0.000000      -48.437646     2.0    120306.886230         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/2.[0m
[08/10 14:48:49]  --------------------------------------------------------------------------------
[08/10 14:48:49]  Iteration: 112 (0 solution, 111 counterexamples)
[08/10 14:49:36]  Generator returned sat in 43.542400 secs.
[08/10 14:49:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:49:38]  Improved gap from 1/40 to 35.9375
[08/10 14:49:39]  Improved number of small numbers from 70 to 81 out of a max of 114
[08/10 14:49:39]  Verifer returned sat in 2.562857 secs.
[08/10 14:49:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  120382.723877  120308.848975 -107822.010254  120382.723877    0.099854  120308.848975        0.1  73.774902       36.837500     9.0    120308.848975            -1             -1     -1
1  120382.723877  120345.786475 -107758.947754  120382.723877    0.100098  120345.786475        0.1  36.837402       -0.100000     5.0    120308.848975         False           True   True
2  120459.532227  120382.723975 -107735.756104  120459.532227  113.645752  120382.723975        0.1  76.708252       -0.100000     1.0    120308.848975          True           True  False
3  120496.369808  120459.532308 -107672.693685  120496.369808  113.545833  120459.532308        0.1  36.737500       -0.200000     1.0    120496.269808         False          False  False
4  120533.473975  120496.469808 -107609.697754  120533.473975   73.841667  120496.469808        0.1  36.904167       -0.099902     1.0    120496.269808         False          False  False
5  120570.411475  120533.473975 -107546.635254  120570.411475   73.841667  120533.473975        0.1  36.837500       -0.099902     1.0    120496.269808         False          False  False
6  120607.448975  120570.411475 -107483.572998  120607.448975   73.875000  120570.411475        0.1  36.937500       -0.000146     1.0    120496.269808         False          False  False
7  120624.451058  120607.448975 -107420.610352  120624.451058   53.939583  120607.448975        0.1  16.902083      -20.035417     1.0    120496.269808         False          False  False
8  120661.538558  120644.386475 -107420.610352  120661.538558   53.989583  120644.386475        0.1  17.052083      -82.947917     1.0    120496.269808         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/10 14:49:40]  --------------------------------------------------------------------------------
[08/10 14:49:40]  Iteration: 113 (0 solution, 112 counterexamples)
[08/10 14:50:47]  Generator returned sat in 63.585426 secs.
[08/10 14:50:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:50:49]  Improved gap from 0 to 48.4375
[08/10 14:50:49]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 14:50:49]  Verifer returned sat in 2.004857 secs.
[08/10 14:50:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t   cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  120870.774658  120670.774658 -108246.998779  120870.774658  200.00000  120670.774658    0.00000  200.000000      100.000000     2.0    120670.774658            -1             -1    True
1  120870.774658  120822.336914 -108246.998779  120870.774658  199.90000  120822.336914    0.00000   48.437744        0.000000     2.0    120870.774658         False          False    True
2  120973.899414  120870.874756 -108246.998779  120973.899414  151.56250  120870.874756    0.00000  103.024658        3.124756     1.0    120973.899414         False          False    True
3  121022.437256  121022.337158 -108246.998779  121022.437256  151.56250  121022.337158    0.00000    0.100098      -48.337402     1.0    120973.899414         False          False    True
4  121249.180908  121167.749756 -108246.998779  121249.180908  226.84375  121167.749756   29.96875   51.462402       48.437500     1.0    120973.899414         False          False    True
5  121249.180908  121170.774658 -108195.436279  121249.180908    0.50000  121170.774658   29.96875   48.437500        0.000000     2.0    120973.899414         False          False    True
6  121249.180908  121219.212158 -108143.873779  121249.180908    0.25000  121219.212158   29.96875    0.000000      -48.437500     3.0    120973.899414         False          False    True
7  121347.618408  121267.749756 -108093.873779  121347.618408   98.43750  121267.749756   29.96875   49.899902        0.000000     1.0    121317.649658          True           True   False
8  121347.718506  121317.649658 -108093.873779  121347.718506   50.00000  121317.649658   29.96875    0.100098      -99.899902     2.0    121317.649658         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/10 14:50:50]  --------------------------------------------------------------------------------
[08/10 14:50:50]  Iteration: 114 (0 solution, 113 counterexamples)
[08/10 14:51:26]  Generator returned sat in 33.216167 secs.
[08/10 14:51:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:51:27]  Improved gap from 1/120 to 100
[08/10 14:51:27]  Improved number of small numbers from 86 to 104 out of a max of 114
[08/10 14:51:27]  Verifer returned sat in 0.809422 secs.
[08/10 14:51:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  121070.674561  120670.774658 -108246.999023  121070.674561     0.200195  120670.774658        0.0   399.899902      299.899902     4.0    120670.774658            -1             -1    True
1  121070.674561  120770.774658 -108246.999023  121070.674561     0.100098  120770.774658        0.0   299.899902      199.899902     2.0    121070.674561         False          False    True
2  121470.574707  120970.774658 -108246.999023  121470.574707   699.800049  120970.774658        0.0   499.800049      499.800049     3.0    121070.674561         False          False    True
3  121470.574707  120970.774658 -108246.999023  121470.574707   211.607407  120970.774658        0.0   499.800049      399.800049     3.0    121470.574707         False          False    True
4  121470.574707  121070.774658 -108246.999023  121470.574707   316.911111  121070.774658        0.0   399.800049      299.800049     3.0    121470.574707         False          False    True
5  121545.641325  121270.774658 -108246.999023  121545.641325   474.866667  121270.774658        0.0   274.866667      274.866667     4.0    121470.574707         False          False    True
6  121982.574658  121270.774658 -108246.999023  121982.574658   711.800000  121270.774658        0.0   711.800000      611.800000     4.0    121470.574707         False          False    True
7  122337.974658  121470.674658 -108246.999023  122337.974658  1067.200000  121470.674658        0.0   867.300000      867.200000     3.0    121470.574707         False          False    True
8  123070.974658  121470.774658 -108246.999023  123070.974658  1600.300000  121470.774658        0.1  1600.100000     1500.100000     4.0    121470.574707         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=15001/10.[0m
[08/10 14:51:28]  --------------------------------------------------------------------------------
[08/10 14:51:28]  Iteration: 115 (0 solution, 114 counterexamples)
[08/10 14:51:50]  Generator returned sat in 18.336907 secs.
[08/10 14:51:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:51:51]  Improved gap from 1/1200 to 0
[08/10 14:51:51]  Improved number of small numbers from 60 to 85 out of a max of 114
[08/10 14:51:51]  Verifer returned sat in 1.214899 secs.
[08/10 14:51:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  115767.738037  115767.729736 -103243.955566  115767.738037    0.011475  115767.729736        0.0  0.008301        0.006592     8.0    115767.729736            -1             -1     -1
1  115767.739502  115767.731445 -103143.963867  115767.739502    0.009766  115767.731445        0.0  0.008057       -0.000244     8.0    115767.739502         False           True  False
2  115867.751465  115867.739658 -103143.963867  115867.751465  100.020020  115867.739658        0.0  0.011807        0.011719     1.0    115767.739502         False           True  False
3  115967.751325  115967.738037 -103143.963867  115967.751325  100.011667  115967.738037        0.0  0.013288        0.011579     1.0    115967.751325         False          False  False
4  115967.751325  115967.739746 -103043.975446  115967.751325    0.010000  115967.739746        0.0  0.011579        0.000000     2.0    115967.751325         False          False  False
5  115967.751325  115967.751325 -102943.983779  115967.751325    0.010000  115967.751325        0.0  0.000000       -0.008333     3.0    115967.751325         False          False  False
6  115967.761325  115967.759658 -102843.992113  115967.761325    0.010000  115967.759658        0.0  0.001667       -0.006667     1.0    115967.751325         False          False  False
7  115967.769658  115967.767992 -102744.000488  115967.769658    0.010000  115967.767992        0.0  0.001667       -0.006709     1.0    115967.751325         False          False  False
8  115967.777992  115967.777832 -102744.000244  115967.777992    0.010000  115967.777832        0.0  0.000160      -99.998132     1.0    115967.751325         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/75.[0m
[08/10 14:51:52]  --------------------------------------------------------------------------------
[08/10 14:51:52]  Iteration: 116 (0 solution, 115 counterexamples)
[08/10 14:52:39]  Generator returned sat in 43.791362 secs.
[08/10 14:52:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:52:40]  Improved gap from 1/10 to 100
[08/10 14:52:41]  Improved number of small numbers from 60 to 73 out of a max of 114
[08/10 14:52:41]  Verifer returned sat in 1.640283 secs.
[08/10 14:52:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  115036.567871  114936.468018 -102412.792113  115036.567871    0.099854  114936.468018     0.0000  100.099854        99.99988     4.0    114936.468018            -1             -1    True
1  115036.567871  114936.567992 -102412.792113  115036.567871    0.100098  114936.567992     0.0000   99.999880        -0.00012     5.0    114936.468018         False          False    True
2  115349.867992  115136.567992 -102412.792113  115349.867992  413.300000  115136.567992   213.1000    0.200000         0.20000     1.0    114936.468018          True           True   False
3  115762.867992  115136.867992 -102412.792113  115762.867992  413.200000  115136.867992   526.1000   99.900000         0.20000     1.0    115236.767992         False          False    True
4  115867.567992  115336.567992 -102412.792113  115867.567992  204.600000  115336.567992   530.8000    0.200000         0.20000     1.0    115236.767992         False          False    True
5  115967.667992  115336.868164 -102412.792113  115967.667992  100.300000  115336.868164   530.9000   99.899827         0.20000     1.0    115236.767992         False          False    True
6  115967.667992  115436.667992 -102412.792113  115967.667992   48.150000  115436.667992   530.9000    0.100000       -99.80000     2.0    115236.767992         False          False    True
7  116443.342992  115536.567992 -102412.792113  116443.342992  475.775000  115536.567992   806.5750  100.200000         0.20000     1.0    115236.767992         False          False    True
8  116579.030492  115636.868164 -102412.792113  116579.030492  235.887500  115636.868164   842.2625   99.899827         0.20000     1.0    115236.767992         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 14:52:42]  --------------------------------------------------------------------------------
[08/10 14:52:42]  Iteration: 117 (0 solution, 116 counterexamples)
[08/10 14:53:08]  Generator returned sat in 22.604270 secs.
[08/10 14:53:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:53:13]  Improved gap from 0 to 46.875
[08/10 14:53:14]  Improved number of small numbers from 40 to 48 out of a max of 114
[08/10 14:53:14]  Verifer returned sat in 5.642530 secs.
[08/10 14:53:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  115124.992676  115025.017772 -102501.241893  115124.992676    0.099854  115025.017772    0.000000  99.974904       99.974904     2.0    115025.017772            -1             -1   False
1  115125.092662  115125.017772 -102501.241893  115125.092662  100.074890  115125.017772    0.024963   0.049927        0.049927     1.0    115025.017772         False          False   False
2  115349.867992  115222.867625 -102501.241893  115349.867992  224.825256  115222.867625  124.800293   2.200073        0.049927     1.0    115025.017772         False          False    True
3  115572.468211  115325.017772 -102501.241893  115572.468211  224.800293  115325.017772  247.400513   0.049927        0.049927     1.0    115325.067699         False          False    True
4  115684.818431  115425.017772 -102501.241893  115684.818431  112.400146  115425.017772  259.750732   0.049927        0.049927     1.0    115325.067699         False          False    True
5  115740.968577  115425.017772 -102457.442139  115740.968577   56.200073  115425.017772  259.750732  56.200073       -0.000173     1.0    115325.067699         False          False    True
6  115787.843577  115481.242808 -102404.341930  115787.843577  103.075073  115481.242808  259.750732  46.850037       -0.024963     1.0    115325.067699         False          False    True
7  115821.106059  115528.117808 -102351.217041  115821.106059   80.112518  115528.117808  259.750732  33.237518      -13.637593     1.0    115325.067699         False          False    True
8  115841.418559  115574.992920 -102351.217041  115841.418559   53.550018  115574.992920  259.750732   6.674907      -93.325093     1.0    115325.067699         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=409/8192.[0m
[08/10 14:53:15]  --------------------------------------------------------------------------------
[08/10 14:53:15]  Iteration: 118 (0 solution, 117 counterexamples)
[08/10 14:55:57]  Generator returned sat in 158.404163 secs.
[08/10 14:55:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:55:58]  Improved gap from 0 to 17.1875
[08/10 14:55:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 14:55:58]  Verifer returned sat in 1.085682 secs.
[08/10 14:55:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  115196.776367  115196.774170 -102584.054199  115196.776367    0.002686  115196.774170   0.000000    0.002197       -0.002686     2.0     115196.77417            -1             -1    True
1  115213.966553  115196.779297 -102501.241943  115213.966553   17.192383  115196.779297   0.000000   17.187256       -0.000244     1.0     115196.77417         False          False    True
2  115544.349121  115213.969238 -102501.241943  115544.349121  347.569824  115213.969238   0.002441  330.377441      230.379883     1.0     115196.77417         False          False    True
3  115544.349121  115313.966797 -102501.241943  115544.349121    0.002686  115313.966797   0.002441  230.379883      130.379883     2.0     115544.34668         False          False    True
4  115544.349121  115513.966553 -102501.241943  115544.349121    2.000000  115513.966553   0.002441   30.380127       30.379883     3.0     115544.34668         False          False    True
5  115544.349121  115527.158936 -102431.621826  115544.349121    2.000000  115527.158936   0.002441   17.187744        0.000000     4.0     115544.34668         False          False    True
6  115544.349121  115544.346680 -102348.809326  115544.349121    2.000000  115544.346680   0.002441    0.000000      -17.187500     5.0     115544.34668         False          False    True
7  115891.918945  115561.534180 -102348.809326  115891.918945  347.569824  115561.534180   0.004883  330.379883      230.379883     1.0     115544.34668         False           True   False
8  115891.918945  115663.964111 -102348.809326  115891.918945    0.010000  115663.964111   0.004883  227.949951      130.379883     2.0     115544.34668         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=235909/1024.[0m
[08/10 14:55:59]  --------------------------------------------------------------------------------
[08/10 14:55:59]  Iteration: 119 (0 solution, 118 counterexamples)
[08/10 14:56:14]  Generator returned sat in 11.609581 secs.
[08/10 14:56:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:56:16]  Improved gap from 0 to 1.5625
[08/10 14:56:16]  Improved number of small numbers from 89 to 114 out of a max of 114
[08/10 14:56:16]  Verifer returned sat in 1.788729 secs.
[08/10 14:56:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  115685.229004  115588.796387 -102976.071777  115685.229004    3.127686  115588.796387   0.000000   96.432617       96.432617     2.0    115588.796387            -1             -1   False
1  115685.229004  115683.668701 -102972.506592  115685.229004    3.124756  115683.668701   0.000000    1.560303       -0.002197     2.0    115685.229004         False          False   False
2  115686.791260  115685.231445 -102874.069336  115686.791260    3.122559  115685.231445   0.000000    1.559814       -0.002686     1.0    115686.791260         False          False   False
3  115786.793701  115686.793945 -102874.069092  115786.793701  101.562256  115686.793945   0.000000   99.999756        0.000000     1.0    115686.791260         False          False   False
4  115786.793701  115786.793701 -102775.631592  115786.793701   99.997559  115786.793701   0.000000    0.000000       -1.562500     2.0    115686.791260         False          False   False
5  115891.918701  115788.356445 -102775.631592  115891.918701  105.125000  115788.356445   1.559814  102.002441        2.002686     1.0    115686.791260         False          False   False
6  115891.918701  115888.356201 -102677.634277  115891.918701    0.010000  115888.356201   1.559814    2.002686        0.000000     2.0    115686.791260         False          False    True
7  115891.918701  115890.358887 -102579.196777  115891.918701    2.000000  115890.358887   1.559814    0.000000       -1.562500     3.0    115686.791260         False          False    True
8  115893.918701  115892.358887 -102579.196533  115893.918701    2.000000  115892.358887   1.559814    0.000000      -99.562256     1.0    115686.791260         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=8203/4096.[0m
[08/10 14:56:17]  --------------------------------------------------------------------------------
[08/10 14:56:17]  Iteration: 120 (0 solution, 119 counterexamples)
[08/10 14:57:20]  Generator returned sat in 59.664680 secs.
[08/10 14:57:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:57:21]  Improved gap from 0 to 100
[08/10 14:57:21]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 14:57:21]  Verifer returned sat in 0.731137 secs.
[08/10 14:57:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  115290.368652  115090.218750 -102577.494385  115290.368652    0.050049  115090.218750   0.050049  200.099854      100.099854     1.0    115090.218750            -1             -1     -1
1  115290.468994  115190.218994 -102577.494385  115290.468994  200.200195  115190.218994   0.150146  100.099854        0.100098     2.0    115090.218750         False          False   True
2  115390.519043  115390.218750 -102577.494385  115390.519043  200.149902  115390.218750   0.200195    0.100098        0.100098     1.0    115390.318848          True           True   True
3  115390.519043  115390.218750 -102577.494385  115390.519043    0.050049  115390.218750   0.200195    0.100098      -99.899902     1.0    115390.318848         False          False   True
4  115540.918945  115540.668701 -102577.494385  115540.918945  150.500000  115540.668701   0.200195    0.050049      -49.500000     1.0    115390.318848         False          False   True
5  115716.593750  115615.644043 -102577.494385  115716.593750  175.724854  115615.644043  26.274902   74.674805        0.100098     1.0    115390.318848         False          False   True
6  115816.643799  115716.644043 -102577.494385  115816.643799  174.724854  115716.644043  26.324951   73.674805        0.100098     1.0    115390.318848         False          False   True
7  115916.693848  115817.643799 -102577.494385  115916.693848  173.724854  115817.643799  26.375000   72.675049        0.100098     1.0    115390.318848         False          False   True
8  116016.743652  115890.368896 -102577.494385  116016.743652  172.724854  115890.368896  26.424805   99.949951        0.100098     1.0    115390.318848         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/2048.[0m
[08/10 14:57:22]  --------------------------------------------------------------------------------
[08/10 14:57:22]  Iteration: 121 (0 solution, 120 counterexamples)
[08/10 14:57:35]  Generator returned sat in 10.161591 secs.
[08/10 14:57:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:57:38]  Improved gap from 1/800 to 14.0625
[08/10 14:57:39]  Improved number of small numbers from 104 to 107 out of a max of 114
[08/10 14:57:39]  Verifer returned sat in 2.999586 secs.
[08/10 14:57:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  113058.642083  112918.241943 -100710.202718  113058.642083    0.083252  112918.241943   0.000000  140.400140       99.916667     2.0    112918.241943            -1             -1   False
1  113158.642090  113058.642083 -100710.202718  113158.642090  240.400146  113058.642083   0.000000  100.000007       99.916673     2.0    112918.241943         False          False   False
2  113298.958750  113158.725417 -100710.202718  113298.958750  240.316667  113158.725417   0.083333  140.150000      140.150000     1.0    113298.875417         False          False   False
3  113399.042083  113159.058838 -100710.202718  113399.042083  240.233333  113159.058838   0.166667  239.816579      140.150000     2.0    113398.875417         False          False    True
4  113399.042083  113298.875417 -100710.202718  113399.042083  239.733333  113298.875417   0.166667  100.000000       40.150000     3.0    113398.875417         False          False    True
5  113418.908750  113358.725586 -100670.219385  113418.908750  119.866667  113358.725586   0.166667   60.016497        0.000000     3.0    113398.875417         False           True   False
6  113418.908750  113418.742083 -100585.285889  113418.908750   59.933333  113418.742083   0.166667    0.000000      -15.066504     2.0    113398.875417         False           True   False
7  113448.875417  113433.808750 -100500.186279  113448.875417   29.966667  113433.808750   0.166667   14.900000       -0.000228     1.0    113398.875417         False          False   False
8  113448.958750  113448.791992 -100500.186035  113448.958750   14.983333  113448.791992   0.166667    0.000091      -99.916650     1.0    113398.875417         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2803/20.[0m
[08/10 14:57:39]  --------------------------------------------------------------------------------
[08/10 14:57:39]  Iteration: 122 (0 solution, 121 counterexamples)
[08/10 14:57:54]  Generator returned sat in 10.820431 secs.
[08/10 14:57:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:57:55]  Improved gap from 0 to 1.5625
[08/10 14:57:55]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/10 14:57:55]  Verifer returned sat in 0.737499 secs.
[08/10 14:57:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  113230.662917  113129.500488 -100882.140381  113230.662917  101.262451  113129.500488   0.000000  101.162428       99.999831     5.0    113129.500488            -1             -1   False
1  113230.663086  113229.100342 -100882.140381  113230.663086  101.162598  113229.100342   0.000000    1.562744        0.000000     2.0    113230.663086         False          False   False
2  113330.262939  113330.162842 -100882.140381  113330.262939  101.162598  113330.162842   0.000000    0.100098       -0.400146     1.0    113230.663086         False          False   False
3  113431.325439  113430.663086 -100882.140381  113431.325439  101.162598  113430.663086   0.099854    0.562500        0.562500     1.0    113230.663086         False          False   False
4  113531.425537  113431.325195 -100882.140381  113531.425537  100.662598  113431.325195   0.199951   99.900391        0.562500     1.0    113230.663086         False          False    True
5  113531.687744  113531.387939 -100784.427734  113531.687744  100.162598  113531.387939   0.199951    0.099854       -1.462646     1.0    113230.663086         False          False    True
6  113533.587891  113532.950439 -100685.990234  113533.587891    2.000000  113532.950439   0.199951    0.437500       -1.125000     1.0    113230.663086         False          False    True
7  113535.150391  113534.850342 -100587.890137  113535.150391    2.000000  113534.850342   0.199951    0.100098       -1.462402     1.0    113230.663086         False          False    True
8  113537.050293  113536.412917 -100489.452881  113537.050293    2.000000  113536.412917   0.199951    0.437425       -1.125244     1.0    113230.663086         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=9/16.[0m
[08/10 14:57:56]  --------------------------------------------------------------------------------
[08/10 14:57:56]  Iteration: 123 (0 solution, 122 counterexamples)
[08/10 14:58:31]  Generator returned sat in 31.689900 secs.
[08/10 14:58:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:58:32]  Improved gap from 0 to 0
[08/10 14:58:33]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 14:58:33]  Verifer returned sat in 1.337073 secs.
[08/10 14:58:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  113529.150635  113277.500488 -101028.977783  113529.150635  251.649902  113277.500488        0.0  251.650146      251.650146     5.0    113277.500488            -1             -1    True
1  113529.150635  113277.550293 -101028.977783  113529.150635  251.600098  113277.550293        0.0  251.600342      151.650146     5.0    113529.150635         False          False    True
2  113529.150635  113477.450439 -101028.977783  113529.150635  251.600000  113477.450439        0.0   51.700195       51.650146     6.0    113529.150635         False          False    True
3  113529.150635  113477.500488 -100980.627930  113529.150635    0.050049  113477.500488        0.0   51.650146        0.000000     7.0    113529.150635         False          False    True
4  113677.500488  113529.150635 -100980.627930  113677.500488  200.000000  113529.150635        0.0  148.349854       48.349854     8.0    113529.150635         False          False    True
5  113677.500488  113676.100342 -100928.977783  113677.500488    1.500000  113676.100342        0.0    1.400146        0.000000     2.0    113529.150635         False           True   False
6  113677.600342  113677.550293 -100829.077881  113677.600342    1.500000  113677.550293        0.0    0.050049       -0.000244     1.0    113529.150635         False          False   False
7  113679.050293  113677.650391 -100730.527832  113679.050293    1.500000  113677.650391        0.0    1.399902       -0.000244     1.0    113529.150635         False          False   False
8  113679.150391  113679.100342 -100730.527588  113679.150391    1.500000  113679.100342        0.0    0.050049      -99.899902     1.0    113529.150635         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=621159/4096.[0m
[08/10 14:58:33]  --------------------------------------------------------------------------------
[08/10 14:58:33]  Iteration: 124 (0 solution, 123 counterexamples)
[08/10 14:58:58]  Generator returned sat in 21.171496 secs.
[08/10 14:58:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:59:00]  Improved gap from 0 to 10.9375
[08/10 14:59:00]  Improved number of small numbers from 89 to 114 out of a max of 114
[08/10 14:59:00]  Verifer returned sat in 1.233173 secs.
[08/10 14:59:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  113329.150635  113029.150635 -100880.627930  113329.150635    0.100098  113029.150635   0.000000  300.000000      200.000000     5.0    113029.150635            -1             -1   False
1  113329.150635  113129.150635 -100880.627930  113329.150635  299.900146  113129.150635   0.000000  200.000000      100.000000     5.0    113029.150635         False          False   False
2  113591.700439  113229.150635 -100880.627930  113591.700439  462.549805  113229.150635   0.099854  362.449951      262.449951     6.0    113029.150635         False          False   False
3  113639.250488  113329.150635 -100880.627930  113639.250488  410.000000  113329.150635   0.099854  310.000000      210.000000     7.0    113639.150635         False          False    True
4  113639.250488  113529.150391 -100880.627930  113639.250488  203.000000  113529.150391   0.099854  110.000244      110.000000     3.0    113639.150635         False           True   False
5  113639.250488  113591.600586 -100880.627930  113639.250488   99.500000  113591.600586   0.099854   47.550049       10.000000     4.0    113639.150635         False          False   False
6  113639.450439  113639.250732 -100801.665527  113639.450439   47.750000  113639.250732   0.099854    0.099854      -10.837646     1.0    113639.150635         False          False   False
7  113661.225586  113650.188232 -100712.603027  113661.225586   21.875000  113650.188232   0.099854   10.937500        0.000000     1.0    113639.150635         False          False   False
8  113661.225586  113661.125732 -100623.540527  113661.225586    8.937500  113661.125732   0.099854    0.000000      -10.937500     2.0    113639.150635         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1074995/4096.[0m
[08/10 14:59:00]  --------------------------------------------------------------------------------
[08/10 14:59:00]  Iteration: 125 (0 solution, 124 counterexamples)
[08/10 14:59:47]  Generator returned sat in 43.145050 secs.
[08/10 14:59:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 14:59:48]  Improved gap from 0 to 100
[08/10 14:59:49]  Improved number of small numbers from 83 to 94 out of a max of 114
[08/10 14:59:49]  Verifer returned sat in 1.144485 secs.
[08/10 14:59:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  113129.050537  113111.979248 -100880.628174  113129.050537     0.100098  113111.979248        0.0    17.071289       -0.100098     3.0    113111.979248            -1             -1    True
1  113429.050781  113129.150635 -100880.628174  113429.050781   317.071533  113129.150635        0.0   299.900146      199.900146     1.0    113111.979248         False          False    True
2  113446.122070  113329.150635 -100880.628174  113446.122070   316.971436  113329.150635        0.0   116.971436      116.971436     2.0    113446.122070         False          False    True
3  113646.022240  113429.150635 -100880.628174  113646.022240   316.871605  113429.150635        0.0   216.871605      216.871605     2.0    113646.022240         False          False    True
4  113903.958042  113446.222240 -100880.628174  113903.958042   474.807407  113446.222240        0.0   457.735802      374.807407     2.0    113646.022240         False          False    True
5  114157.933351  113529.150635 -100880.628174  114157.933351   711.711111  113529.150635        0.0   628.782716      528.782716     3.0    113646.022240         False          False    True
6  114596.217301  113729.150635 -100880.628174  114596.217301  1067.066667  113729.150635        0.0   867.066667      867.066667     3.0    113646.022240         False          False    True
7  115329.250635  113729.150635 -100880.628174  115329.250635  1600.100000  113729.150635        0.0  1600.100000     1500.100000     3.0    113646.022240         False          False    True
8  116128.800635  113929.150635 -100880.628174  116128.800635  2399.650000  113929.150635        0.0  2199.650000     2199.650000     4.0    113646.022240         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=9010175/4096.[0m
[08/10 14:59:49]  --------------------------------------------------------------------------------
[08/10 14:59:49]  Iteration: 126 (0 solution, 125 counterexamples)
[08/10 15:00:09]  Generator returned sat in 16.016036 secs.
[08/10 15:00:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:00:10]  Improved gap from 1/20 to 1.5625
[08/10 15:00:10]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 15:00:10]  Verifer returned sat in 0.732782 secs.
[08/10 15:00:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  113322.600830  113322.550781 -100880.628174  113322.600830  103.300049  113322.550781   0.000000    0.050049       -3.199951     2.0    113322.550781            -1             -1   False
1  113425.800781  113325.800781 -100880.628174  113425.800781  103.250000  113325.800781   0.000000  100.000000        0.000000     1.0    113425.800781         False          False   False
2  113429.000732  113427.437988 -100783.828125  113429.000732  103.199951  113427.437988   0.000000    1.562744        0.000000     1.0    113429.000732         False          False   False
3  113530.587891  113529.000732 -100783.828125  113530.587891  103.149902  113529.000732   1.487305    0.099854        0.099854     1.0    113529.100586         False          False   False
4  113632.137939  113629.000732 -100783.828125  113632.137939  101.649902  113629.000732   3.037354    0.099854        0.099854     1.0    113529.100586         False          False    True
5  113732.187988  113632.550781 -100783.828125  113732.187988  100.149902  113632.550781   3.087402   96.549805        0.099854     1.0    113529.100586         False          False    True
6  113734.288086  113729.150635 -100686.028076  113734.288086   98.649902  113729.150635   3.087402    2.050049        0.000000     1.0    113529.100586         False          False    True
7  113734.288086  113731.200684 -100587.590576  113734.288086    2.000000  113731.200684   3.087402    0.000000       -1.562500     2.0    113529.100586         False          False    True
8  113736.288086  113732.763184 -100587.590576  113736.288086    2.000000  113732.763184   3.087402    0.437500      -99.562500     1.0    113529.100586         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=409/4096.[0m
[08/10 15:00:11]  --------------------------------------------------------------------------------
[08/10 15:00:11]  Iteration: 127 (0 solution, 126 counterexamples)
[08/10 15:01:05]  Generator returned sat in 50.248424 secs.
[08/10 15:01:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:01:08]  Improved gap from 0 to 3.125
[08/10 15:01:09]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 15:01:09]  Verifer returned sat in 3.499485 secs.
[08/10 15:01:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  111293.233398  111293.231557 -99609.553617  111293.233398    0.001667  111293.231557   0.000000   0.001841        0.001841     1.0    111293.231557            -1             -1   False
1  111293.233398  111293.231557 -99512.678711  111293.233398    0.001709  111293.231557   0.000000   0.001841       -3.123253     1.0    111293.231557         False          False   False
2  111299.467668  111299.466002 -99418.913061  111299.467668    6.236111  111299.466002   0.000000   0.001667       -3.123333     1.0    111293.231557         False          False   False
3  111324.809335  111302.591002 -99341.131394  111324.809335   25.343333  111302.591002   0.000000  22.218333        0.000000     1.0    111293.231557         False          False   False
4  111324.809335  111324.809335 -99244.256592  111324.809335   13.539167  111324.809335   0.000000   0.000000       -3.125197     2.0    111293.231557         False          False   False
5  111371.676002  111328.551335 -99187.999512  111371.676002   46.866667  111328.551335   0.000000  43.124667       -0.001451     1.0    111293.231557         False          False   False
6  111371.679335  111371.677668 -99091.124728  111371.679335   43.128000  111371.677668   0.000000   0.001667       -3.123333     1.0    111293.231557         False          False   False
7  111474.807668  111474.797668 -99091.124728  111474.807668  103.130000  111474.797668   0.001667   0.008333        0.003333     1.0    111293.231557         False          False   False
8  111474.809335  111474.807617 -99091.124512  111474.809335    0.010000  111474.807617   0.001667   0.000051      -99.994784     1.0    111293.231557         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/300.[0m
[08/10 15:01:10]  --------------------------------------------------------------------------------
[08/10 15:01:10]  Iteration: 128 (0 solution, 127 counterexamples)
[08/10 15:02:01]  Generator returned sat in 47.850293 secs.
[08/10 15:02:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:02:03]  Improved gap from 1/10 to 15.625
[08/10 15:02:04]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:02:04]  Verifer returned sat in 2.016051 secs.
[08/10 15:02:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  111281.211426  111081.161377 -99175.499756  111281.211426    0.050000  111081.161377   0.050049  200.000000      199.949951     4.0    111081.161377            -1             -1     -1
1  111325.786377  111081.211670 -99175.499756  111325.786377  244.574951  111081.211670   0.050049  244.524658      144.524902     3.0    111081.161377         False           True   True
2  111462.611572  111281.211426 -99175.499756  111462.611572  381.349854  111281.211426   0.100098  181.300049      181.300049     2.0    111081.161377          True           True  False
3  111462.611572  111325.786621 -99175.499756  111462.611572  181.000000  111325.786621   0.100098  136.724854       81.300049     2.0    111462.511475         False          False   True
4  111596.886719  111462.511475 -99175.499756  111596.886719  271.000000  111462.511475   0.100098  134.275146      115.575195     3.0    111462.511475         False          False   True
5  111596.886719  111481.211670 -99175.499756  111596.886719  134.000000  111481.211670   0.100098  115.574951       15.575195     2.0    111462.511475         False           True  False
6  111596.886719  111581.211426 -99091.124756  111596.886719   65.500000  111581.211426   0.100098   15.575195       -0.049805     3.0    111462.511475         False          False  False
7  111612.561523  111596.836426 -99006.749756  111612.561523   31.250000  111596.836426   0.100098   15.625000        0.000000     1.0    111612.461426          True           True  False
8  111612.561523  111612.461426 -98922.374756  111612.561523   14.125000  111612.461426   0.100098    0.000000      -15.625000     2.0    111612.461426         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=742605/4096.[0m
[08/10 15:02:04]  --------------------------------------------------------------------------------
[08/10 15:02:04]  Iteration: 129 (0 solution, 128 counterexamples)
[08/10 15:02:21]  Generator returned sat in 13.132422 secs.
[08/10 15:02:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:02:24]  Improved gap from 7885/512 to 15.625
[08/10 15:02:25]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:02:25]  Verifer returned sat in 3.011227 secs.
[08/10 15:02:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  110914.215088  110814.265137 -97995.264648  110914.215088    0.099854  110814.265137   0.000000   99.949951       99.949707     4.0    110814.265137            -1             -1     -1
1  110914.215088  110914.165527 -97995.264648  110914.215088    0.049805  110914.165527   0.000000    0.049561       -0.050293     2.0    110914.215088         False           True  False
2  111280.715332  110914.265381 -97995.264648  111280.715332  366.549805  110914.265381   0.049805  366.400146      266.400146     1.0    110914.215088         False          False  False
3  111280.715332  111016.615479 -97995.264648  111280.715332  176.333333  111016.615479   0.049805  264.050049      166.400146     2.0    111280.665527         False          False   True
4  111280.715332  111214.265381 -97995.264648  111280.715332  264.000000  111214.265381   0.049805   66.400146       66.400146     3.0    111280.665527         False          False   True
5  111345.315186  111280.715088 -97995.264648  111345.315186  131.000000  111280.715088   0.049805   64.550293       31.000000     1.0    111280.665527         False           True  False
6  111345.315186  111329.690430 -97926.314697  111345.315186   64.500000  111329.690430   0.049805   15.574951       -0.050049     2.0    111280.665527         False          False  False
7  111360.990234  111345.315430 -97841.939697  111360.990234   31.250000  111345.315430   0.049805   15.625000        0.000000     1.0    111280.665527         False          False  False
8  111360.990234  111360.940430 -97841.939697  111360.990234   14.625000  111360.940430   0.049805    0.000000     -100.000000     2.0    111280.665527         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1091175/4096.[0m
[08/10 15:02:25]  --------------------------------------------------------------------------------
[08/10 15:02:25]  Iteration: 130 (0 solution, 129 counterexamples)
[08/10 15:02:48]  Generator returned sat in 18.661809 secs.
[08/10 15:02:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:02:50]  Improved gap from 0 to 25.0
[08/10 15:02:51]  Improved number of small numbers from 80 to 114 out of a max of 114
[08/10 15:02:51]  Verifer returned sat in 2.333796 secs.
[08/10 15:02:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  110651.214844  110501.212402 -97707.216797  110651.214844    0.002500  110501.212402    0.000000  150.002441      124.997314     2.0    110501.212402            -1             -1   False
1  110651.214844  110526.217529 -97707.216797  110651.214844  149.999756  110526.217529    0.000000  124.997314       24.997314     2.0    110501.212402         False          False   False
2  110676.215088  110651.215088 -97657.214355  110676.215088  149.997559  110651.215088    0.000000   25.000000        0.000000     1.0    110676.215088         False          False   False
3  110801.210205  110774.219971 -97657.214355  110801.210205  149.995117  110774.219971    0.000000   26.990234       24.995117     1.0    110801.210205         False          False   False
4  111045.227539  110876.212402 -97657.214355  111045.227539  271.007568  110876.212402  144.012451   25.002686       25.000000     1.0    110801.210205         False          False   False
5  111045.227539  110876.215088 -97582.214355  111045.227539    0.010000  110876.215088  144.012451   25.000000        0.000000     2.0    110801.210205         False          False    True
6  111045.227539  110901.215088 -97507.214355  111045.227539    0.010000  110901.215088  144.012451    0.000000      -25.000000     3.0    110801.210205         False          False    True
7  111170.222656  110926.215088 -97507.209473  111170.222656  124.995117  110926.215088  144.012451   99.995117        0.000000     1.0    111026.210205          True           True   False
8  111170.222656  111026.210205 -97507.209229  111170.222656   48.002686  111026.210205  144.012451    0.000000      -99.999756     2.0    111026.210205         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=25.[0m
[08/10 15:02:51]  --------------------------------------------------------------------------------
[08/10 15:02:51]  Iteration: 131 (0 solution, 130 counterexamples)
[08/10 15:03:34]  Generator returned sat in 38.518732 secs.
[08/10 15:03:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:03:35]  Improved gap from 3833/120 to 100
[08/10 15:03:36]  Improved number of small numbers from 66 to 70 out of a max of 114
[08/10 15:03:36]  Verifer returned sat in 1.359226 secs.
[08/10 15:03:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  109493.752686  109493.752539 -96674.751807  109493.752686   99.999756  109493.752539       0.00    0.000146        0.000146     8.0    109493.752539            -1             -1   False
1  109593.702539  109593.652539 -96674.751807  109593.702539   99.950000  109593.652539       0.00    0.050000       -0.050000     1.0    109593.702539         False          False   False
2  109693.752539  109593.752539 -96674.751807  109693.752539  100.100000  109593.752539       0.00  100.000000        0.000000     1.0    109593.702539         False          False   False
3  110397.852539  109693.752539 -96674.751807  110397.852539  804.100000  109693.752539       0.00  704.100000      604.100000     2.0    109593.702539         False          False   False
4  110397.852539  109887.752539 -96674.751807  110397.852539  704.050000  109887.752539       0.00  510.100000      504.100000     2.0    109593.702539         False          False   False
5  110682.927539  109993.752539 -96674.751807  110682.927539  795.175000  109993.752539       0.05  689.125000      689.125000     3.0    109593.702539         False          False   False
6  110786.977539  110093.752539 -96674.751807  110786.977539  793.175000  110093.752539       4.10  689.125000      689.125000     4.0    109593.702539         False          False    True
7  110889.027539  110193.752539 -96674.751807  110889.027539  791.175000  110193.752539       6.15  689.125000      689.125000     5.0    109593.702539         False          False    True
8  110989.077539  110193.752686 -96674.751807  110989.077539  789.175000  110193.752686       6.20  789.124854      689.125000     6.0    109593.702539         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=5513/8.[0m
[08/10 15:03:36]  --------------------------------------------------------------------------------
[08/10 15:03:36]  Iteration: 132 (0 solution, 131 counterexamples)
[08/10 15:04:01]  Generator returned sat in 20.874801 secs.
[08/10 15:04:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:04:03]  Improved gap from 1/1200 to 12.5
[08/10 15:04:04]  Improved number of small numbers from 60 to 78 out of a max of 114
[08/10 15:04:04]  Verifer returned sat in 2.320357 secs.
[08/10 15:04:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  110763.542480  110359.842773 -97640.841807  110763.542480       0.1  110359.842773        0.1  403.599707      303.599941     5.0    110359.842773            -1             -1     -1
1  110763.542480  110559.842539 -97640.841807  110763.542480     403.5  110559.842539        0.1  203.599941      203.599941     3.0    110359.842773         False           True   True
2  110963.342539  110559.842773 -97640.841807  110963.342539     403.4  110559.842773        0.2  403.299766      303.300000     3.0    110963.142539          True           True  False
3  110963.342539  110759.842529 -97640.841807  110963.342539     403.2  110759.842529        0.2  203.300010      203.300000     4.0    110963.142539         False           True   True
4  110963.342539  110859.842529 -97640.841807  110963.342539     201.6  110859.842529        0.2  103.300010      103.300000     3.0    110963.142539         False           True  False
5  110963.342539  110946.542539 -97640.841807  110963.342539     100.8  110946.542539        0.2   16.600000        3.300000     4.0    110963.142539         False           True  False
6  110997.142539  110984.542539 -97578.041992  110997.142539      50.4  110984.542539        0.2   12.400000       -0.100186     1.0    110963.142539         False           True  False
7  111009.942539  110997.042725 -97490.741807  111009.942539      25.2  110997.042725        0.2   12.699814        0.000000     1.0    110963.142539         False          False  False
8  111009.942539  111009.742539 -97490.741699  111009.942539      12.6  111009.742539        0.2    0.000000      -99.999893     2.0    110963.142539         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3033/10.[0m
[08/10 15:04:04]  --------------------------------------------------------------------------------
[08/10 15:04:04]  Iteration: 133 (0 solution, 132 counterexamples)
[08/10 15:06:27]  Generator returned sat in 138.162384 secs.
[08/10 15:06:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:06:27]  Improved gap from 1/20 to 0
[08/10 15:06:28]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 15:06:28]  Verifer returned sat in 0.527327 secs.
[08/10 15:06:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  110862.952393  110662.952393 -97843.951904  110862.952393    0.050000  110662.952393   0.000000  200.000000      200.000000     3.0    110662.952393            -1             -1    True
1  110862.952393  110762.952393 -97843.951904  110862.952393    0.050049  110762.952393   0.000000  100.000000      100.000000     3.0    110662.952393         False          False    True
2  110963.002441  110762.952393 -97843.951904  110963.002441  200.050049  110762.952393   0.050049  200.000000      100.000000     3.0    110662.952393         False          False    True
3  110963.002441  110862.952393 -97843.951904  110963.002441    0.049805  110862.952393   0.050049  100.000000        0.000000     4.0    110962.952393         False          False    True
4  110963.002441  110962.952393 -97744.051758  110963.002441    1.500000  110962.952393   0.050049    0.000000       -0.099854     3.0    110962.952393         False           True   False
5  110964.502441  110963.052490 -97645.501953  110964.502441    1.500000  110963.052490   0.050049    1.399902       -0.050049     1.0    110962.952393         False          False   False
6  110964.602539  110964.502441 -97545.552002  110964.602539    1.500000  110964.502441   0.050049    0.050049        0.000000     1.0    110962.952393         False          False   False
7  110966.052490  110964.602539 -97447.001953  110966.052490    1.500000  110964.602539   0.050049    1.399902        0.000000     1.0    110962.952393         False          False   False
8  110966.152588  110966.052734 -97447.001953  110966.152588    1.500000  110966.052734   0.050049    0.049805      -99.899902     1.0    110962.952393         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=100.[0m
[08/10 15:06:28]  --------------------------------------------------------------------------------
[08/10 15:06:28]  Iteration: 134 (0 solution, 133 counterexamples)
[08/10 15:07:04]  Generator returned sat in 31.495958 secs.
[08/10 15:07:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:07:12]  Improved gap from 0 to 0
[08/10 15:07:13]  Improved number of small numbers from 20 to 38 out of a max of 114
[08/10 15:07:13]  Verifer returned sat in 9.238111 secs.
[08/10 15:07:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  100406.602295  100406.593223 -87587.592773  100406.602295  0.022217  100406.593223   0.004484  0.004587        0.004549     2.0    100406.593223            -1             -1     -1
1  100406.620128  100406.602192 -87487.615156  100406.620128  0.022421  100406.602192   0.004484  0.013452        0.000000     1.0    100406.593223         False          False   True
2  100407.011366  100406.615644 -87388.010742  100407.011366  0.404690  100406.615644   0.004484  0.391238       -0.004348     2.0    100406.593223         False          False   True
3  100407.020335  100407.011366 -87288.048340  100407.020335  0.400206  100407.011366   0.004484  0.004484       -0.032978     1.0    100407.015850         False          False   True
4  100407.134096  100407.048828 -87188.129124  100407.134096  0.118246  100407.048828   0.004484  0.080784        0.000000     1.0    100407.015850         False          False   True
5  100407.134096  100407.129612 -87088.129150  100407.134096  0.010000  100407.129612   0.004484  0.000000       -0.000026     2.0    100407.015850         False          False   True
6  100407.153065  100407.134277 -86988.148092  100407.153065  0.018968  100407.134277   0.004484  0.014303        0.000000     1.0    100407.015850         False          False   True
7  100407.153065  100407.148581 -86888.157959  100407.153065  0.010000  100407.148581   0.004484  0.000000       -0.009867     2.0    100407.015850         False          False   True
8  100407.163065  100407.158447 -86888.157959  100407.163065  0.010000  100407.158447   0.004484  0.000133      -99.999867     1.0    100407.015850         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=9/1024.[0m
[08/10 15:07:14]  --------------------------------------------------------------------------------
[08/10 15:07:14]  Iteration: 135 (0 solution, 134 counterexamples)
[08/10 15:07:37]  Generator returned sat in 18.559513 secs.
[08/10 15:07:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:07:38]  Improved gap from 0 to 100
[08/10 15:07:38]  Improved number of small numbers from 24 to 114 out of a max of 114
[08/10 15:07:38]  Verifer returned sat in 0.715961 secs.
[08/10 15:07:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  100406.598633  100306.595459 -87188.12915  100406.598633  199.999756  100306.595459   0.004639   99.998535       -0.001465     1.0    100306.595459            -1             -1     -1
1  100506.599854  100406.595459 -87188.12915  100506.599854  199.999756  100406.595459   0.004639   99.999756       -0.000244     1.0    100306.595459         False          False   True
2  100700.598877  100506.596436 -87188.12915  100700.598877  293.998779  100506.596436   0.004639  193.997803       93.998779     1.0    100306.595459         False          False   True
3  100700.598877  100639.929443 -87188.12915  100700.598877  193.996582  100639.929443   0.004639   60.664795       -6.001221     2.0    100700.594238         False          False   True
4  100806.601074  100806.595459 -87188.12915  100806.601074  166.666992  100806.595459   0.004639    0.000977        0.000977     1.0    100700.594238         False           True  False
5  101006.600098  100902.595459 -87188.12915  101006.600098  200.000000  100902.595459   6.005615   97.999023       93.999023     1.0    100700.594238         False          False  False
6  101106.601074  101004.595703 -87188.12915  101106.601074  198.000000  101004.595703   6.006592   95.998779       93.999023     1.0    100700.594238         False          False   True
7  101206.602295  101106.595459 -87188.12915  101206.602295  196.000000  101106.595459   6.007812   93.999023       93.999023     1.0    100700.594238         False          False   True
8  101306.603271  101200.595459 -87188.12915  101306.603271  194.000000  101200.595459   6.008789   99.999023       93.999023     1.0    100700.594238         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=96255/1024.[0m
[08/10 15:07:38]  --------------------------------------------------------------------------------
[08/10 15:07:38]  Iteration: 136 (0 solution, 135 counterexamples)
[08/10 15:08:16]  Generator returned sat in 33.043533 secs.
[08/10 15:08:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:08:17]  Improved gap from 1/10 to 100
[08/10 15:08:18]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/10 15:08:18]  Verifer returned sat in 2.031676 secs.
[08/10 15:08:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   99533.505127   99533.304912 -87286.42915   99533.505127    0.200195   99533.304912     0.000000    0.200214        0.200214     1.0     99533.304912            -1             -1    True
1   99533.505127   99533.304912 -87286.42915   99533.505127    0.100000   99533.304912     0.000000    0.200214      -99.799786     1.0     99533.505127         False          False    True
2   99788.678987   99633.304912 -87286.42915   99788.678987  255.374074   99633.304912     0.000000  155.374074       55.374074     1.0     99533.505127         False          False    True
3   99833.204912   99788.778987 -87286.42915   99833.204912  199.900000   99788.778987     0.000000   44.425926       -0.100000     1.0     99833.204912         False          False    True
4  100571.290098   99833.304912 -87286.42915  100571.290098  782.511111   99833.304912   544.707407  193.277778       93.277778     1.0     99833.204912         False          False    True
5  100767.767875  100033.304912 -87286.42915  100767.767875  389.755556  100033.304912   641.185185   93.277778       93.277778     1.0     99833.204912         False          False    True
6  100867.867875  100133.304912 -87286.42915  100867.867875  193.377778  100133.304912   641.285185   93.277778       93.277778     1.0     99833.204912         False          False    True
7  100869.778987  100228.393801 -87286.42915  100869.778987   95.188889  100228.393801   641.285185    0.100000       -4.811111     1.0     99833.204912         False          False    True
8  101652.190098  100233.304932 -87286.42915  101652.190098  782.511111  100233.304932  1225.607407  193.277759       93.277778     1.0     99833.204912         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1679/18.[0m
[08/10 15:08:19]  --------------------------------------------------------------------------------
[08/10 15:08:19]  Iteration: 137 (0 solution, 136 counterexamples)
[08/10 15:08:40]  Generator returned sat in 17.509665 secs.
[08/10 15:08:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:08:42]  Improved gap from 1/10 to 35.9375
[08/10 15:08:43]  Improved number of small numbers from 59 to 68 out of a max of 114
[08/10 15:08:43]  Verifer returned sat in 1.872081 secs.
[08/10 15:08:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  100597.561523  100476.674125 -87472.041504  100597.561523    0.025146  100476.674125        0.0  120.887398       99.925044     9.0    100476.674125            -1             -1     -1
1  100597.611625  100597.586625 -87472.041504  100597.611625  120.937500  100597.586625        0.0    0.025000       -0.024854     1.0    100476.674125         False           True  False
2  100633.549125  100597.636625 -87407.979150  100633.549125   35.962500  100597.636625        0.0   35.912500       -0.025000     1.0    100633.549125         False          False  False
3  100633.574125  100633.574125 -87348.266602  100633.574125   35.937500  100633.574125        0.0    0.000000      -40.287451     1.0    100633.574125         False          False  False
4  100712.024125  100673.861625 -87286.429150  100712.024125   78.450000  100673.861625        0.0   38.162500        0.000000     1.0    100633.574125         False          False  False
5  100712.024125  100712.024125 -87222.366650  100712.024125   38.137500  100712.024125        0.0    0.000000      -35.937500     2.0    100633.574125         False          False  False
6  100769.217875  100747.961625 -87158.304150  100769.217875   57.193750  100747.961625        0.0   21.256250      -14.681250     1.0    100633.574125         False          False  False
7  100805.155375  100783.899125 -87094.241699  100805.155375   57.193750  100783.899125        0.0   21.256250      -14.681299     1.0    100633.574125         False          False  False
8  100838.917875  100823.836670 -87094.241699  100838.917875   55.018750  100823.836670        0.0   15.081206      -80.918799     1.0    100633.574125         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/4096.[0m
[08/10 15:08:43]  --------------------------------------------------------------------------------
[08/10 15:08:43]  Iteration: 138 (0 solution, 137 counterexamples)
[08/10 15:09:48]  Generator returned sat in 60.352208 secs.
[08/10 15:09:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:09:52]  Improved gap from 103/8192 to 14.0625
[08/10 15:09:52]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:09:52]  Verifer returned sat in 4.151545 secs.
[08/10 15:09:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107139.136475  106757.636719 -90228.929199  107139.136475    0.050000  106757.636719   0.000000  381.499756      378.174805     7.0    106757.636719            -1             -1   False
1  107139.136475  106860.961670 -90228.929199  107139.136475    0.050000  106860.961670   0.000000  278.174805      278.174805     6.0    106757.636719         False          False   False
2  107263.736572  106960.961426 -90228.929199  107263.736572  402.774902  106960.961426   0.050049  302.725098      302.724854     6.0    106757.636719         False          False   False
3  107263.736572  107010.636719 -90228.929199  107263.736572  302.675000  107010.636719   0.050049  253.049805      202.724854     7.0    107263.686523         False          False    True
4  107263.736572  107139.136475 -90228.929199  107263.736572  253.000000  107139.136475   0.050049  124.550049      102.724854     8.0    107263.686523         False          False    True
5  107263.736572  107203.386719 -90228.929199  107263.736572  124.500000  107203.386719   0.050049   60.299805        2.724854     4.0    107263.686523         False           True   False
6  107263.736572  107260.961670 -90142.991699  107263.736572   60.250000  107260.961670   0.050049    2.724854      -11.337646     5.0    107263.686523         False          False   False
7  107289.136719  107275.024170 -90057.054199  107289.136719   28.125000  107275.024170   0.050049   14.062500        0.000000     1.0    107263.686523         False          False   False
8  107289.136719  107289.086670 -90057.053955  107289.136719   12.062500  107289.086670   0.050049    0.000000      -99.999756     2.0    107263.686523         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1239961/4096.[0m
[08/10 15:09:53]  --------------------------------------------------------------------------------
[08/10 15:09:53]  Iteration: 139 (0 solution, 138 counterexamples)
[08/10 15:10:17]  Generator returned sat in 19.231124 secs.
[08/10 15:10:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:10:18]  Verifer returned unsat in 0.971219 secs.
[08/10 15:10:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:10:18]  --------------------------------------------------------------------------------
[08/10 15:10:18]  Iteration: 140 (1 solution, 138 counterexamples)
[08/10 15:10:44]  Generator returned sat in 21.590686 secs.
[08/10 15:10:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:10:45]  Verifer returned unsat in 0.793127 secs.
[08/10 15:10:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:10:45]  --------------------------------------------------------------------------------
[08/10 15:10:45]  Iteration: 141 (2 solution, 138 counterexamples)
[08/10 15:12:37]  Generator returned sat in 107.479378 secs.
[08/10 15:12:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:12:37]  Improved number of small numbers from 64 to 113 out of a max of 113
[08/10 15:12:38]  Verifer returned sat in 0.393710 secs.
[08/10 15:12:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  116240.636475  115940.836670 -90178.729248  116240.636475     0.100098  115940.836670   0.000000   299.799805      299.799805     6.0    115940.836670            -1             -1     -1
1  116240.636475  115940.936523 -90178.729248  116240.636475   299.600000  115940.936523   0.000000   299.699951      199.799805     3.0    115940.836670         False           True  False
2  116240.636475  116140.836670 -90178.729248  116240.636475   299.600098  116140.836670   0.000000    99.799805       99.799805     3.0    115940.836670         False          False  False
3  117839.936768  116240.736328 -90178.729248  117839.936768  1699.100098  116240.736328   1.900146  1597.300293     1597.199951     1.0    115940.836670         False          False  False
4  117940.736572  116240.836670 -90178.729248  117940.736572  1698.100098  116240.836670   2.699951  1697.199951     1597.199951     2.0    115940.836670         False          False   True
5  117940.736572  116340.836670 -90178.729248  117940.736572  1697.100098  116340.836670   2.699951  1597.199951     1497.199951     3.0    115940.836670         False          False   True
6  118042.636719  116537.036377 -90178.729248  118042.636719  1699.100098  116537.036377   2.699951  1502.900391     1499.100098     4.0    115940.836670         False          False   True
7  118240.836426  116637.936768 -90178.729248  118240.836426  1701.100098  116637.936768   2.799805  1600.099854     1597.199951     5.0    115940.836670         False          False   True
8  118340.836670  116740.836426 -90178.729248  118340.836670  1700.100098  116740.836426   2.800049  1597.200195     1597.199951     6.0    118338.036621          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=6542131/4096.[0m
[08/10 15:12:38]  --------------------------------------------------------------------------------
[08/10 15:12:38]  Iteration: 142 (2 solution, 139 counterexamples)
[08/10 15:14:24]  Generator returned sat in 101.556103 secs.
[08/10 15:14:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:14:27]  Verifer returned unsat in 2.813626 secs.
[08/10 15:14:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:14:27]  --------------------------------------------------------------------------------
[08/10 15:14:27]  Iteration: 143 (3 solution, 139 counterexamples)
[08/10 15:14:40]  Generator returned sat in 8.579916 secs.
[08/10 15:14:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:14:44]  Verifer returned unsat in 3.865356 secs.
[08/10 15:14:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:14:44]  --------------------------------------------------------------------------------
[08/10 15:14:44]  Iteration: 144 (4 solution, 139 counterexamples)
[08/10 15:14:55]  Generator returned sat in 5.815736 secs.
[08/10 15:14:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:14:58]  Verifer returned unsat in 3.143979 secs.
[08/10 15:14:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:14:58]  --------------------------------------------------------------------------------
[08/10 15:14:58]  Iteration: 145 (5 solution, 139 counterexamples)
[08/10 15:15:15]  Generator returned sat in 12.234505 secs.
[08/10 15:15:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:17]  Verifer returned unsat in 1.871358 secs.
[08/10 15:15:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:17]  --------------------------------------------------------------------------------
[08/10 15:15:17]  Iteration: 146 (6 solution, 139 counterexamples)
[08/10 15:15:40]  Generator returned sat in 19.047313 secs.
[08/10 15:15:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:45]  Verifer returned unsat in 4.249038 secs.
[08/10 15:15:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:45]  --------------------------------------------------------------------------------
[08/10 15:15:45]  Iteration: 147 (7 solution, 139 counterexamples)
[08/10 15:15:59]  Generator returned sat in 9.125896 secs.
[08/10 15:15:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:02]  Verifer returned unsat in 2.631423 secs.
[08/10 15:16:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:02]  --------------------------------------------------------------------------------
[08/10 15:16:02]  Iteration: 148 (8 solution, 139 counterexamples)
[08/10 15:16:41]  Generator returned sat in 35.302845 secs.
[08/10 15:16:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:42]  Improved number of small numbers from 60 to 113 out of a max of 113
[08/10 15:16:42]  Verifer returned sat in 0.483547 secs.
[08/10 15:16:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  113276.192627  113076.393066 -88258.424316  113276.192627     0.100098  113076.393066     0.000000   199.799561       99.799561     4.0    113076.393066            -1             -1   False
1  113276.393066  113276.292969 -88258.424316  113276.393066   200.000000  113276.292969     0.000000     0.100098        0.000000     1.0    113076.393066         False          False   False
2  113476.292969  113276.393066 -88258.424316  113476.292969   200.000000  113276.393066     0.000000   199.899902       99.899902     2.0    113076.393066         False          False   False
3  113477.393066  113476.392822 -88258.424316  113477.393066   201.000000  113476.392822     0.000000     1.000244        1.000000     1.0    113076.393066         False          False   False
4  113876.392822  113576.393066 -88258.424316  113876.392822   400.000000  113576.393066     0.000000   299.999756      299.999756     1.0    113076.393066         False          False   False
5  114374.393066  113576.492676 -88258.424316  114374.393066   798.000000  113576.492676     0.000000   797.900391      698.000000     2.0    113076.393066         False          False   False
6  115170.492676  113676.393066 -88258.424316  115170.492676  1594.000000  113676.393066     0.000000  1494.099609     1394.099609     3.0    113076.393066         False          False   False
7  116862.393066  113876.292969 -88258.424316  116862.393066  3186.000000  113876.292969     0.000000  2986.100098     2986.000000     4.0    113076.393066         False          False   False
8  120246.292969  113876.393066 -88258.424316  120246.292969  6370.000000  113876.393066  3283.800049  3086.099854     2986.099854     4.0    113076.393066         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=12231065/4096.[0m
[08/10 15:16:43]  --------------------------------------------------------------------------------
[08/10 15:16:43]  Iteration: 149 (8 solution, 140 counterexamples)
[08/10 15:17:00]  Generator returned sat in 12.885113 secs.
[08/10 15:17:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:01]  Improved gap from 1/5 to 1.5625
[08/10 15:17:02]  Improved number of small numbers from 68 to 95 out of a max of 114
[08/10 15:17:02]  Verifer returned sat in 1.214073 secs.
[08/10 15:17:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  112853.592773  112755.592773 -87935.673926  112853.592773    0.050049  112755.592773       0.00   98.000000       -0.049902     3.0    112755.592773            -1             -1   False
1  112955.642822  112853.642822 -87935.673926  112955.642822  200.050049  112853.642822       0.00  102.000000        2.000146     1.0    112755.592773         False          False   False
2  113053.692871  113053.642676 -87935.673926  113053.692871  200.050049  113053.642676       0.00    0.050195        0.050195     1.0    112755.592773         False          False   False
3  113465.042676  113053.642676 -87935.673926  113465.042676  411.400000  113053.642676     309.35  102.050000        2.050000     1.0    112755.592773         False          False   False
4  113568.192676  113253.642676 -87935.673926  113568.192676  205.200000  113253.642676     312.50    2.050000        2.050000     1.0    112755.592773         False          False    True
5  113668.242676  113305.092529 -87935.673926  113668.242676  102.100000  113305.092529     312.55   50.600146        2.050000     1.0    112755.592773         False          False    True
6  113668.242676  113353.642822 -87837.723926  113668.242676   50.550000  113353.642822     312.55    2.049854        0.000000     2.0    112755.592773         False          False    True
7  113668.242676  113355.692676 -87739.286621  113668.242676    2.000000  113355.692676     312.55    0.000000       -1.562695     3.0    112755.592773         False          False    True
8  113670.242676  113357.255371 -87739.286377  113670.242676    2.000000  113357.255371     312.55    0.437305      -99.562451     1.0    112755.592773         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=41/20.[0m
[08/10 15:17:02]  --------------------------------------------------------------------------------
[08/10 15:17:02]  Iteration: 150 (8 solution, 141 counterexamples)
[08/10 15:17:31]  Generator returned sat in 24.165251 secs.
[08/10 15:17:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:35]  Improved gap from 1/10 to 48.4375
[08/10 15:17:36]  Improved number of small numbers from 76 to 80 out of a max of 114
[08/10 15:17:36]  Verifer returned sat in 4.241557 secs.
[08/10 15:17:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   98096.742676   98048.205078 -73130.236572  98096.742676    0.049805  98048.205078     0.0500  48.487598       48.487354     3.0     98048.205078            -1             -1     -1
1   98096.742676   98048.255322 -73078.724072  98096.742676    0.049805  98048.255322     0.0500  48.437354       -0.000146     3.0     98048.205078         False           True   True
2   98263.655322   98196.692822 -73078.724072  98263.655322  215.350000  98196.692822    59.8625   7.100000        7.100000     1.0     98048.205078          True           True  False
3   98471.855322   98296.692822 -73078.724072  98471.855322  215.300000  98296.692822   168.0625   7.100000        7.100000     1.0     98303.792822         False          False   True
4   98571.905322   98396.692822 -73078.724072  98571.905322  107.150000  98396.692822   168.1125   7.100000        7.100000     1.0     98303.792822         False          False   True
5   98617.880322   98396.692822 -73031.799072  98617.880322   53.075000  98396.692822   168.1125  53.075000        0.000000     1.0     98303.792822         False          False   True
6   98617.880322   98449.767822 -72980.236572  98617.880322    2.000000  98449.767822   168.1125   0.000000      -48.437500     2.0     98303.792822         False          False   True
7   98695.917822   98498.205322 -72928.674072  98695.917822   78.037500  98498.205322   168.1125  29.600000      -18.837500     1.0     98527.805322          True           True  False
8   98756.592822   98546.642822 -72928.674072  98756.592822   90.275000  98546.642822   168.1125  41.837500      -58.162500     1.0     98527.805322         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=71/10.[0m
[08/10 15:17:36]  --------------------------------------------------------------------------------
[08/10 15:17:36]  Iteration: 151 (8 solution, 142 counterexamples)
[08/10 15:18:53]  Generator returned sat in 72.767811 secs.
[08/10 15:18:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:54]  Improved number of small numbers from 63 to 113 out of a max of 113
[08/10 15:18:54]  Verifer returned sat in 0.388758 secs.
[08/10 15:18:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   95671.555176   95471.605225 -73153.786621  95671.555176     0.050049  95471.605225   0.000000   199.949951      199.949951     3.0     95471.605225            -1             -1    True
1   95671.555176   95471.605469 -73153.786621  95671.555176   199.900000  95471.605469   0.000000   199.949707       99.949951     3.0     95471.605225         False          False    True
2   95671.555176   95671.505371 -73153.786377  95671.555176   199.900000  95671.505371   0.000000     0.049805       -0.049805     4.0     95471.605225         False          False    True
3   97471.555176   95671.605469 -73153.786377  97471.555176  1800.049805  95671.605469   0.350098  1799.599609     1699.600098     1.0     95471.605225          True           True   False
4   97471.555176   95871.155273 -73153.786377  97471.555176  1799.549805  95871.155273   0.350098  1600.049805     1599.600098     2.0     95471.605225         False          False    True
5   97671.555176   95970.705322 -73153.786377  97671.555176  1800.049805  95970.705322   0.350098  1700.499756     1699.600098     3.0     95471.605225         False          False    True
6   97771.605225   96071.555176 -73153.786377  97771.605225  1800.549805  96071.555176   0.400146  1699.649902     1699.600098     4.0     95471.605225         False          False    True
7   97872.005127   96071.605469 -73153.786377  97872.005127  1800.049805  96071.605469   0.800049  1799.599609     1699.600098     5.0     97871.205078          True           True    True
8   97872.005127   96171.605225 -73153.786377  97872.005127  1799.549805  96171.605225   0.800049  1699.599854     1599.600098     6.0     97871.205078         False           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=3480781/2048.[0m
[08/10 15:18:55]  --------------------------------------------------------------------------------
[08/10 15:18:55]  Iteration: 152 (8 solution, 143 counterexamples)
[08/10 15:19:58]  Generator returned sat in 58.628785 secs.
[08/10 15:19:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:00]  Improved gap from 0 to 12.5
[08/10 15:20:00]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:20:00]  Verifer returned sat in 1.725020 secs.
[08/10 15:20:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107588.957764  107588.957764 -85271.139160  107588.957764    0.050049  107588.957764        0.0    0.000000        0.000000     3.0    107588.957764            -1             -1    True
1  107688.957520  107589.007812 -85271.138916  107688.957520   99.999756  107589.007812        0.0   99.949707        0.000000     1.0    107588.957764         False          False    True
2  107689.007812  107688.957520 -85271.138916  107689.007812  100.000000  107688.957520        0.0    0.050293      -99.949707     2.0    107588.957764         False          False    True
3  108088.957520  107888.957520 -85271.138916  108088.957520  400.000000  107888.957520        0.0  200.000000      200.000000     1.0    107588.957764         False          False    True
4  108088.957520  107988.907715 -85271.138916  108088.957520  200.000000  107988.907715        0.0  100.049805      100.000000     2.0    107588.957764         False          False    True
5  108088.957520  108076.307617 -85271.138916  108088.957520  100.000000  108076.307617        0.0   12.649902        0.000000     3.0    107588.957764         False          False    True
6  108126.307617  108101.407715 -85208.538818  108126.307617   50.000000  108101.407715        0.0   24.899902       -0.049805     1.0    107588.957764         False          False    True
7  108126.407715  108126.357422 -85121.038818  108126.407715   25.000000  108126.357422        0.0    0.050293      -12.449707     1.0    107588.957764         False          False    True
8  108138.857422  108138.857422 -85033.539062  108138.857422   12.500000  108138.857422        0.0    0.000000      -12.500244     1.0    107588.957764         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819405/4096.[0m
[08/10 15:20:01]  --------------------------------------------------------------------------------
[08/10 15:20:01]  Iteration: 153 (8 solution, 144 counterexamples)
[08/10 15:20:35]  Generator returned sat in 29.965076 secs.
[08/10 15:20:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:40]  Improved gap from 1/1000 to 0
[08/10 15:20:41]  Improved number of small numbers from 61 to 78 out of a max of 114
[08/10 15:20:41]  Verifer returned sat in 5.428380 secs.
[08/10 15:20:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  107840.702393  107640.797550 -85322.979004  107840.702393    0.002441  107640.797550     0.0025  199.902342      199.902285     2.0     107640.79755            -1             -1     -1
1  107840.707520  107640.797607 -85322.979004  107840.707520  199.907469  107640.797607     0.0025  199.907412       99.907412     2.0     107640.79755         False          False   True
2  107840.707520  107840.702520 -85322.978760  107840.707520    0.002686  107840.702520     0.0025    0.002500       -0.092344     2.0     107840.70502         False          False   True
3  107841.509958  107840.797607 -85223.688854  107841.509958    0.804938  107840.797607     0.0025    0.709850        0.000000     1.0     107840.70502         False          False   True
4  107841.509958  107841.507458 -85123.905762  107841.509958    0.707407  107841.507458     0.0025    0.000000       -0.216907     2.0     107840.70502         False          False   True
5  107842.071069  107841.724609 -85024.249965  107842.071069    0.561111  107841.724609     0.0025    0.343960        0.000000     1.0     107840.70502         False          False   True
6  107842.071069  107842.068569 -84924.250000  107842.071069    0.341667  107842.068569     0.0025    0.000000       -0.000035     2.0     107840.70502         False          False   True
7  107842.083569  107842.068604 -84824.262465  107842.083569    0.012500  107842.068604     0.0025    0.012465        0.000000     1.0     107840.70502         False          False   True
8  107842.083569  107842.081069 -84824.262451  107842.083569    0.010000  107842.081069     0.0025    0.000000      -99.999986     2.0     107840.70502         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=25577/256.[0m
[08/10 15:20:41]  --------------------------------------------------------------------------------
[08/10 15:20:41]  Iteration: 154 (8 solution, 145 counterexamples)
[08/10 15:22:12]  Generator returned sat in 85.491885 secs.
[08/10 15:22:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:12]  Improved gap from 1/8000 to 100
[08/10 15:22:14]  Improved number of small numbers from 59 to 63 out of a max of 114
[08/10 15:22:14]  Verifer returned sat in 1.912071 secs.
[08/10 15:22:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  107262.370850  107262.170853 -84676.359749  107262.370850  413.499756  107262.170853       0.10    0.099997      -99.900003     1.0    107262.170853            -1             -1     -1
1  107675.670853  107462.170853 -84676.359749  107675.670853  413.400000  107462.170853     213.30    0.200000        0.200000     1.0    107462.370853         False          False   True
2  108088.770853  107562.170853 -84676.359749  108088.770853  413.300000  107562.170853     526.40    0.200000        0.200000     1.0    107562.370853         False          False   True
3  108501.770853  107562.470853 -84676.359749  108501.770853  413.200000  107562.470853     839.40   99.900000        0.200000     1.0    107662.370853         False          False   True
4  108606.470853  107762.170853 -84676.359749  108606.470853  204.600000  107762.170853     844.10    0.200000        0.200000     1.0    107662.370853         False          False   True
5  108706.570853  107862.170853 -84676.359749  108706.570853  100.300000  107862.170853     844.20    0.200000        0.200000     1.0    107662.370853         False          False   True
6  108754.520853  107862.170853 -84676.359749  108754.520853   48.150000  107862.170853     844.20   48.150000      -51.850000     1.0    107662.370853         False          False   True
7  109203.070853  107962.170853 -84676.359749  109203.070853  496.700000  107962.170853    1140.70  100.200000        0.200000     1.0    107662.370853         False          False   True
8  109349.220853  108062.170898 -84676.359749  109349.220853  246.350000  108062.170898    1186.85  100.199954        0.200000     2.0    107662.370853         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:22:14]  --------------------------------------------------------------------------------
[08/10 15:22:14]  Iteration: 155 (8 solution, 146 counterexamples)
[08/10 15:23:07]  Generator returned sat in 47.852741 secs.
[08/10 15:23:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:20]  Improved gap from 0 to 0
[08/10 15:23:21]  Improved number of small numbers from 59 to 72 out of a max of 114
[08/10 15:23:21]  Verifer returned sat in 13.968669 secs.
[08/10 15:23:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  108605.961426  108605.960436 -84775.873047  108605.961426  0.487793  108605.960436   0.000417  0.000573       -0.000225     2.0    108605.960436            -1             -1     -1
1  108606.448353  108605.961270 -84676.359863  108606.448353  0.487500  108605.961270   0.000417  0.486667       -0.000114     1.0    108606.447936         False          False   True
2  108606.448770  108606.448353 -84576.360596  108606.448770  0.487083  108606.448353   0.000417  0.000000       -0.000430     1.0    108606.448353         False          False   True
3  108606.460436  108606.459603 -84476.371833  108606.460436  0.011667  108606.459603   0.000417  0.000417        0.000000     1.0    108606.460020         False          False   True
4  108606.470853  108606.460205 -84376.382249  108606.470853  0.010833  108606.460205   0.000417  0.010231        0.000000     1.0    108606.460020         False          False   True
5  108606.470853  108606.470436 -84276.383057  108606.470853  0.010000  108606.470436   0.000417  0.000000       -0.000807     2.0    108606.460020         False          False   True
6  108606.480853  108606.471270 -84176.392578  108606.480853  0.010000  108606.471270   0.000417  0.009167       -0.000329     1.0    108606.460020         False          False   True
7  108606.481686  108606.480853 -84076.393311  108606.481686  0.010000  108606.480853   0.000417  0.000417       -0.000228     1.0    108606.460020         False          False   True
8  108606.491270  108606.481689 -84076.393066  108606.491270  0.010000  108606.481689   0.000417  0.009163      -99.990400     1.0    108606.460020         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 15:23:22]  --------------------------------------------------------------------------------
[08/10 15:23:22]  Iteration: 156 (8 solution, 147 counterexamples)
[08/10 15:24:32]  Generator returned sat in 65.031288 secs.
[08/10 15:24:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:33]  Improved gap from 1/16384 to 23.4375
[08/10 15:24:33]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:24:33]  Verifer returned sat in 1.503925 secs.
[08/10 15:24:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  111959.607422  111733.047363 -87699.839355  111959.607422  117.185000  111733.047363   0.000000  226.560059      126.560059     2.0    111733.047363            -1             -1   False
1  111959.607422  111833.047363 -87699.839355  111959.607422  117.185000  111833.047363   0.000000  126.560059       26.560059     2.0    111733.047363         False          False   False
2  111959.607422  111936.169922 -87626.399414  111959.607422  117.185000  111936.169922   0.000000   23.437500        0.000000     3.0    111733.047363         False          False   False
3  112053.354980  111959.607422 -87626.396973  112053.354980  117.185059  111959.607422   0.000000   93.747559       -6.250000     4.0    111733.047363          True           True   False
4  112186.167480  112159.604980 -87626.396973  112186.167480  226.560059  112159.604980   0.002441   26.560059       26.560059     1.0    112186.165039          True           True   False
5  112186.167480  112162.727539 -87552.957031  112186.167480    0.010000  112162.727539   0.002441   23.437500        0.000000     2.0    112186.165039         False          False    True
6  112186.167480  112186.165039 -87476.394531  112186.167480    0.010000  112186.165039   0.002441    0.000000      -23.437500     3.0    112186.165039         False          False    True
7  112412.725098  112309.599854 -87476.394531  112412.725098  226.557617  112309.599854  76.562500   26.562744       26.560059     1.0    112186.165039         False           True   False
8  112412.725098  112309.602539 -87476.394531  112412.725098    0.010000  112309.602539  76.562500   26.560059      -73.439941     2.0    112186.165039         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=54395/2048.[0m
[08/10 15:24:34]  --------------------------------------------------------------------------------
[08/10 15:24:34]  Iteration: 157 (8 solution, 148 counterexamples)
[08/10 15:25:33]  Generator returned sat in 54.666736 secs.
[08/10 15:25:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:25:34]  Improved gap from 0 to 23.4375
[08/10 15:25:35]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 15:25:35]  Verifer returned sat in 0.977844 secs.
[08/10 15:25:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  112762.732422  112337.292480 -87626.396973  112762.732422  425.445000  112337.292480   0.000000  425.439941      425.439941     7.0    112337.292480            -1             -1   False
1  112762.735107  112337.292480 -87626.396973  112762.735107  425.442627  112337.292480   0.002686  425.439941      325.439941     7.0    112762.732422         False          False   False
2  112762.735107  112537.292480 -87626.396973  112762.735107  225.440186  112537.292480   0.002686  225.439941      225.439941     5.0    112762.732422         False          False    True
3  112762.735107  112537.292480 -87626.396973  112762.735107  225.439941  112537.292480   0.002686  225.439941      125.439941     5.0    112762.732422         False          False    True
4  112762.735107  112737.292480 -87626.396973  112762.735107    2.000000  112737.292480   0.002686   25.439941       25.439941     6.0    112762.732422         False          False    True
5  112762.735107  112739.294922 -87551.836914  112762.735107    2.000000  112739.294922   0.002686   23.437500        0.000000     7.0    112762.732422         False          False    True
6  112762.735107  112762.732422 -87475.274414  112762.735107    2.000000  112762.732422   0.002686    0.000000      -23.437500     8.0    112762.732422         False          False    True
7  113211.614990  112886.169922 -87475.274414  113211.614990  448.879883  112886.169922   0.005127  325.439941      325.439941     1.0    112762.732422         False           True   False
8  113211.614990  112886.172363 -87475.274414  113211.614990    0.010000  112886.172363   0.005127  325.437500      225.439941     2.0    112762.732422         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=666501/2048.[0m
[08/10 15:25:35]  --------------------------------------------------------------------------------
[08/10 15:25:35]  Iteration: 158 (8 solution, 149 counterexamples)
[08/10 15:26:48]  Generator returned sat in 67.699460 secs.
[08/10 15:26:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:54]  Improved gap from 0 to 31.25
[08/10 15:26:55]  Improved number of small numbers from 60 to 69 out of a max of 114
[08/10 15:26:55]  Verifer returned sat in 7.000098 secs.
[08/10 15:26:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t   cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  112244.222412  112084.722480 -87433.026973  112244.222412    0.10000  112084.722480        0.1  159.399932      100.199932     1.0     112084.72248            -1             -1     -1
1  112244.222412  112143.922480 -87433.026973  112244.222412    0.10000  112143.922480        0.1  100.199932        0.199932     2.0     112084.72248         False          False   True
2  112344.222480  112343.922480 -87433.026973  112344.222480  200.20000  112343.922480        0.1    0.200000        0.200000     1.0     112084.72248          True           True  False
3  112344.222480  112343.922480 -87364.276973  112344.222480    0.10000  112343.922480        0.1    0.200000      -31.050000     1.0     112344.12248         False          False  False
4  112475.672480  112474.572480 -87364.276973  112475.672480  131.65000  112474.572480        0.2    0.900000        0.300000     1.0     112344.12248         False          False  False
5  112475.772480  112475.172480 -87295.526973  112475.772480    1.00000  112475.172480        0.2    0.400000      -30.850000     2.0     112344.12248         False          False   True
6  112543.497480  112506.422480 -87232.402100  112543.497480   68.12500  112506.422480        0.2   36.875000       -0.000127     1.0     112543.29748          True           True  False
7  112623.934980  112543.397480 -87213.576904  112623.934980  117.31250  112543.397480        0.2   80.337500       -0.737432     1.0     112543.29748         False          False  False
8  112638.666230  112624.472656 -87213.576904  112638.666230   95.06875  112624.472656        0.2   13.993574      -86.006182     1.0     112543.29748         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3/10.[0m
[08/10 15:26:56]  --------------------------------------------------------------------------------
[08/10 15:26:56]  Iteration: 159 (8 solution, 150 counterexamples)
[08/10 15:28:54]  Generator returned sat in 113.677154 secs.
[08/10 15:28:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:59]  Improved gap from 2/15 to 48.4375
[08/10 15:29:00]  Improved number of small numbers from 59 to 72 out of a max of 114
[08/10 15:29:00]  Verifer returned sat in 5.503757 secs.
[08/10 15:29:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  110616.234131  110465.159147 -85891.701973  110616.234131    0.049805  110465.159147       0.05  151.024984      151.024984     1.0    110465.159147            -1             -1     -1
1  110616.234131  110465.159147 -85891.701973  110616.234131    0.050000  110465.159147       0.05  151.024984       51.024984     1.0    110465.159147         False          False   True
2  110636.714147  110616.234147 -85891.701904  110636.714147  171.505000  110616.234147       0.05   20.430000      -28.494932     1.0    110465.159147         False          False   True
3  110834.584147  110753.864147 -85891.701904  110834.584147  218.300000  110753.864147       0.05   80.670000       69.375068     1.0    110465.159147         False          False   True
4  110862.064147  110861.964147 -85891.701904  110862.064147  108.150000  110861.964147       0.05    0.050000       -3.144932     1.0    110465.159147         False          False   True
5  110915.089147  110866.601562 -85841.581973  110915.089147   53.075000  110866.601562       0.05   48.437585        0.000000     1.0    110465.159147         False          False   True
6  110915.089147  110915.039147 -85790.019473  110915.089147   25.537500  110915.039147       0.05    0.000000      -48.437500     2.0    110465.159147         False          False   True
7  111008.445397  110963.476647 -85738.457031  111008.445397   93.356250  110963.476647       0.05   44.918750       -3.518809     1.0    111008.395397          True           True  False
8  111060.961022  111011.914307 -85689.061279  111060.961022   97.434375  111011.914307       0.05   48.996715       -1.607432     1.0    111008.395397         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=71091/1024.[0m
[08/10 15:29:01]  --------------------------------------------------------------------------------
[08/10 15:29:01]  Iteration: 160 (8 solution, 151 counterexamples)
[08/10 15:30:09]  Generator returned sat in 63.224912 secs.
[08/10 15:30:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:10]  Improved gap from 1/1200 to 1.5625
[08/10 15:30:10]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 15:30:10]  Verifer returned sat in 0.657696 secs.
[08/10 15:30:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  110418.734131  110418.634277 -85845.227051  110418.734131  100.099854  110418.634277   0.049805    0.050049        0.000000     3.0    110418.634277            -1             -1     -1
1  110518.783936  110518.684326 -85845.227051  110518.783936  100.099854  110518.684326   0.049805    0.049805        0.049805     1.0    110418.634277         False          False   True
2  110718.684082  110518.784180 -85845.227051  110718.684082  199.949951  110518.784180   0.049805  199.850098       99.949951     1.0    110418.634277         False          False   True
3  110916.833984  110718.684326 -85845.227051  110916.833984  398.000000  110718.684326   0.049805  198.099854      198.099854     1.0    110418.634277         False          False   True
4  110916.833984  110818.684326 -85845.227051  110916.833984    2.000000  110818.684326   0.049805   98.099854       98.099854     2.0    110418.634277         False          False   True
5  110916.833984  110916.734131 -85845.226807  110916.833984    2.000000  110916.734131   0.049805    0.050049       -1.899902     3.0    110418.634277         False          False   True
6  110918.783936  110918.684082 -85746.789307  110918.783936    2.000000  110918.684082   0.049805    0.050049       -1.512451     1.0    110418.634277         False          False   True
7  110920.733887  110920.246582 -85648.352051  110920.733887    2.000000  110920.246582   0.049805    0.437500       -1.125244     1.0    110418.634277         False          False   True
8  110922.296387  110921.809326 -85648.351807  110922.296387    2.000000  110921.809326   0.049805    0.437256      -99.562500     1.0    110418.634277         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=811623/4096.[0m
[08/10 15:30:11]  --------------------------------------------------------------------------------
[08/10 15:30:11]  Iteration: 161 (8 solution, 152 counterexamples)
[08/10 15:30:49]  Generator returned sat in 33.959764 secs.
[08/10 15:30:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:53]  Improved gap from 1/1200 to 46.875
[08/10 15:30:54]  Improved number of small numbers from 74 to 95 out of a max of 114
[08/10 15:30:54]  Verifer returned sat in 4.421027 secs.
[08/10 15:30:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  110549.934082  110349.934082 -85818.026855  110549.934082    0.100000  110349.934082        0.0  200.000000      100.000146     2.0    110349.934082            -1             -1   False
1  110549.934082  110503.058838 -85818.026855  110549.934082    0.100098  110503.058838        0.0   46.875244        0.000146     2.0    110349.934082         False          False   False
2  110650.133789  110649.933936 -85818.026855  110650.133789  147.074951  110649.933936        0.0    0.199854        0.199854     1.0    110349.934082         False          False   False
3  110868.133936  110740.133936 -85818.026855  110868.133936  218.200000  110740.133936      118.0   10.000000        0.200000     1.0    110349.934082         False          False   False
4  110968.233936  110849.008936 -85818.026855  110968.233936  110.100000  110849.008936      118.1    1.125000        0.200000     1.0    110349.934082         False          False    True
5  111023.158936  110849.933936 -85773.251709  111023.158936   56.050000  110849.933936      118.1   55.125000       -0.099854     2.0    110349.934082         False          False    True
6  111070.033936  110905.158936 -85720.126855  111070.033936  102.000000  110905.158936      118.1   46.775000       -0.100000     1.0    110349.934082         False          False    True
7  111107.771436  110952.033936 -85667.001855  111107.771436   84.512500  110952.033936      118.1   37.637500       -9.237500     1.0    110349.934082         False          False    True
8  111123.646436  110998.908936 -85667.001709  111123.646436   53.512500  110998.908936      118.1    6.637500      -93.362354     1.0    110349.934082         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:30:55]  --------------------------------------------------------------------------------
[08/10 15:30:55]  Iteration: 162 (8 solution, 153 counterexamples)
[08/10 15:32:36]  Generator returned sat in 95.922785 secs.
[08/10 15:32:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:39]  Improved gap from 1/10 to 46.875
[08/10 15:32:40]  Improved number of small numbers from 63 to 81 out of a max of 114
[08/10 15:32:40]  Verifer returned sat in 4.204660 secs.
[08/10 15:32:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  114882.936279  114729.911621 -85889.2271  114882.936279  200.099854  114729.911621        0.0  153.024658       53.024844     1.0    114729.911621            -1             -1   False
1  114929.911621  114883.036377 -85889.2271  114929.911621  200.000000  114883.036377        0.0   46.875244        0.000186     1.0    114929.911621         False          False   False
2  115030.011475  115029.911436 -85889.2271  115030.011475  146.975098  115029.911436        0.0    0.100039        0.100039     1.0    115030.011475         False          False   False
3  115251.111436  115129.911436 -85889.2271  115251.111436  221.200000  115129.911436      121.0    0.200000        0.200000     1.0    115030.011475         False          False   False
4  115362.011436  115229.811436 -85889.2271  115362.011436  111.100000  115229.811436      131.9    0.300000        0.200000     1.0    115030.011475         False          False    True
5  115417.761436  115229.911436 -85845.2771  115417.761436   56.050000  115229.911436      131.9   55.950000       -0.100000     2.0    115030.011475         False          False    True
6  115463.811436  115285.961436 -85792.1521  115463.811436  102.000000  115285.961436      131.9   45.950000       -0.925000     1.0    115331.911436          True           True   False
7  115497.886436  115332.836436 -85739.0271  115497.886436   80.025000  115332.836436      131.9   33.150000      -13.725000     1.0    115331.911436         False          False   False
8  115518.248936  115379.711670 -85739.0271  115518.248936   53.512500  115379.711670      131.9    6.637266      -93.362500     1.0    115331.911436         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:32:41]  --------------------------------------------------------------------------------
[08/10 15:32:41]  Iteration: 163 (8 solution, 154 counterexamples)
[08/10 15:34:23]  Generator returned sat in 96.546864 secs.
[08/10 15:34:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:25]  Improved gap from 0 to 25.0
[08/10 15:34:25]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 15:34:25]  Verifer returned sat in 2.165871 secs.
[08/10 15:34:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  116555.398926  116430.396240 -87489.712158  116555.398926    0.002441  116430.396240    0.002441  125.000244      125.000000     7.0    116430.396240            -1             -1     -1
1  116555.398926  116530.396240 -87489.712158  116555.398926   24.997314  116530.396240    0.002441   25.000244       25.000000     3.0    116430.396240         False           True   True
2  116555.398926  116530.396484 -87489.711914  116555.398926   24.997314  116530.396484    0.002441   25.000000      -74.999756     4.0    116430.396240          True           True  False
3  116729.908691  116729.903809 -87489.711914  116729.908691  199.509766  116729.903809    0.002441    0.002441       -0.489990     1.0    116430.396240          True           True  False
4  117028.913818  116830.396240 -87489.711914  117028.913818  299.007568  116830.396240  173.514893   25.002686       25.002686     1.0    116430.396240         False          False  False
5  117028.913818  116830.398926 -87414.714600  117028.913818    0.010000  116830.398926  173.514893   25.000000        0.000000     2.0    116430.396240         False          False   True
6  117028.913818  116855.398926 -87339.714844  117028.913818    0.010000  116855.398926  173.514893    0.000000      -25.000244     3.0    116430.396240         False          False   True
7  117153.908936  116905.643799 -87339.709717  117153.908936  124.995117  116905.643799  173.514893   74.750244        0.000000     1.0    116980.394043          True           True  False
8  117153.908936  116980.394043 -87339.709473  117153.908936   74.747559  116980.394043  173.514893    0.000000      -99.999756     2.0    116980.394043         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=102411/4096.[0m
[08/10 15:34:26]  --------------------------------------------------------------------------------
[08/10 15:34:26]  Iteration: 164 (8 solution, 155 counterexamples)
[08/10 15:35:24]  Generator returned sat in 52.521913 secs.
[08/10 15:35:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:26]  Verifer returned unsat in 1.661291 secs.
[08/10 15:35:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:26]  --------------------------------------------------------------------------------
[08/10 15:35:26]  Iteration: 165 (9 solution, 155 counterexamples)
[08/10 15:35:49]  Generator returned sat in 17.994716 secs.
[08/10 15:35:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:51]  Verifer returned unsat in 1.484849 secs.
[08/10 15:35:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:51]  --------------------------------------------------------------------------------
[08/10 15:35:51]  Iteration: 166 (10 solution, 155 counterexamples)
[08/10 15:36:04]  Generator returned sat in 8.360610 secs.
[08/10 15:36:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:07]  Verifer returned unsat in 2.230313 secs.
[08/10 15:36:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:07]  --------------------------------------------------------------------------------
[08/10 15:36:07]  Iteration: 167 (11 solution, 155 counterexamples)
[08/10 15:36:22]  Generator returned sat in 9.675498 secs.
[08/10 15:36:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:23]  Improved number of small numbers from 59 to 113 out of a max of 113
[08/10 15:36:23]  Verifer returned sat in 0.738602 secs.
[08/10 15:36:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  116855.266602  116655.214111 -87714.579834  116855.266602     0.050000  116655.214111    0.002197   200.050293      200.000244     3.0    116655.214111            -1             -1   False
1  116855.266602  116655.264160 -87714.579834  116855.266602     0.050049  116655.264160    0.002197   200.000244      100.000244     3.0    116655.214111         False          False   False
2  116855.266602  116809.188965 -87714.579834  116855.266602     0.050049  116809.188965    0.002197    46.075439        0.000244     4.0    116655.214111         False          False   False
3  119361.316162  116855.264160 -87714.579834  119361.316162  2552.125000  116855.264160  855.877197  1650.174805     1550.174805     5.0    116655.214111         False          False   False
4  119361.316162  116955.264160 -87714.579834  119361.316162  1277.062500  116955.264160  855.877197  1550.174805     1450.174805     2.0    118505.438965          True           True    True
5  119361.316162  117155.264160 -87714.579834  119361.316162  1427.062500  117155.264160  855.877197  1350.174805     1350.174805     3.0    118505.438965         False          False    True
6  119611.241455  117155.313965 -87714.579834  119611.241455  1600.100098  117155.313965  855.877197  1600.050293     1500.100098     4.0    118505.438965         False          False    True
7  119761.316162  117355.264160 -87714.579834  119761.316162  1750.125000  117355.264160  855.877197  1550.174805     1550.174805     5.0    118505.438965         False          False    True
8  119761.316162  117455.263916 -87714.579834  119761.316162  1277.062500  117455.263916  855.877197  1450.175049     1450.174805     6.0    118505.438965         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=1587379/1024.[0m
[08/10 15:36:24]  --------------------------------------------------------------------------------
[08/10 15:36:24]  Iteration: 168 (11 solution, 156 counterexamples)
[08/10 15:38:37]  Generator returned sat in 127.830153 secs.
[08/10 15:38:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:38:40]  Verifer returned unsat in 3.156546 secs.
[08/10 15:38:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:38:40]  --------------------------------------------------------------------------------
[08/10 15:38:40]  Iteration: 169 (12 solution, 156 counterexamples)
[08/10 15:39:45]  Generator returned sat in 59.597948 secs.
[08/10 15:39:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:48]  Improved gap from 0 to 48.4375
[08/10 15:39:49]  Improved number of small numbers from 68 to 87 out of a max of 114
[08/10 15:39:49]  Verifer returned sat in 3.006270 secs.
[08/10 15:39:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  117057.158691  116955.221436 -87714.579834  117057.158691    0.050049  116955.221436        0.0  101.937256       99.949834     1.0    116955.221436            -1             -1    True
1  117155.171387  117057.208740 -87714.579834  117155.171387  199.949951  117057.208740        0.0   97.962646       97.962529     1.0    116955.221436         False          False    True
2  117257.158691  117155.221357 -87714.579834  117257.158691  199.949951  117155.221357        0.0  101.937334       99.949834     1.0    116955.221436         False          False    True
3  117356.121357  117257.208857 -87714.579834  117356.121357  200.900000  117257.208857        0.0   98.912500       98.912500     1.0    116955.221436         False          False    True
4  117357.158857  117356.171357 -87714.579834  117357.158857   99.950000  117356.171357        0.0    0.987500       -0.050000     1.0    116955.221436         False          False    True
5  117405.646357  117357.208857 -87663.017334  117405.646357   49.475000  117357.208857        0.0   48.437500        0.000000     1.0    116955.221436         False          False    True
6  117405.646357  117405.646357 -87611.454834  117405.646357   24.237500  117405.646357        0.0    0.000000      -48.437500     2.0    116955.221436         False          False    True
7  117491.983857  117454.083857 -87559.892334  117491.983857   86.337500  117454.083857        0.0   37.900000      -10.537500     1.0    117491.983857          True           True   False
8  117546.208857  117502.521484 -87559.892334  117546.208857   92.125000  117502.521484        0.0   43.687373      -56.312500     1.0    117491.983857         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=100.[0m
[08/10 15:39:49]  --------------------------------------------------------------------------------
[08/10 15:39:49]  Iteration: 170 (12 solution, 157 counterexamples)
[08/10 15:40:24]  Generator returned sat in 29.157811 secs.
[08/10 15:40:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:25]  Improved gap from 0 to 23.4375
[08/10 15:40:26]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 15:40:26]  Verifer returned sat in 1.244261 secs.
[08/10 15:40:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  115981.100098  115904.539062 -87705.204834  115981.100098  100.001221  115904.539062    0.000000   76.561035       -0.001221     3.0    115904.539062            -1             -1     -1
1  116004.538818  115981.101318 -87628.642334  116004.538818   99.999756  115981.101318    0.000000   23.437500        0.000000     1.0    116004.538818         False           True  False
2  116104.542480  116053.656494 -87628.642334  116104.542480  123.441162  116053.656494    0.001221   50.884766        0.002441     1.0    116004.538818         False          False  False
3  116457.660156  116104.538818 -87628.642334  116457.660156  404.002441  116104.538818  253.118896  100.002441        0.002441     2.0    116004.538818         False          False   True
4  116557.658936  116301.418701 -87628.642334  116557.658936  200.001221  116301.418701  253.118896    3.121338        0.001221     1.0    116304.540039          True           True   True
5  116557.658936  116304.538818 -87552.079834  116557.658936    0.010000  116304.538818  253.118896    0.001221      -23.436279     2.0    116304.540039         False          False   True
6  116808.540039  116327.976562 -87552.079834  116808.540039  250.882324  116327.976562  380.561279  100.002197        0.002441     1.0    116304.540039         False           True  False
7  116831.979004  116427.979980 -87475.521240  116831.979004  123.441162  116427.979980  380.561279   23.437744        0.000000     1.0    116304.540039         False          False   True
8  116831.979004  116451.417725 -87475.520996  116831.979004    0.010000  116451.417725  380.561279    0.000000      -99.999756     2.0    116304.540039         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=5/2048.[0m
[08/10 15:40:26]  --------------------------------------------------------------------------------
[08/10 15:40:26]  Iteration: 171 (12 solution, 158 counterexamples)
[08/10 15:44:58]  Generator returned sat in 266.059611 secs.
[08/10 15:44:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:45:04]  Improved gap from 0 to 0
[08/10 15:45:05]  Improved number of small numbers from 72 to 82 out of a max of 114
[08/10 15:45:05]  Verifer returned sat in 6.654500 secs.
[08/10 15:45:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  119655.490967  119654.993490 -87980.275146  119655.490967  0.497314  119654.993490    0.00125  0.496227        0.496003     4.0    119654.993490            -1             -1     -1
1  119655.490990  119655.488490 -87881.264893  119655.490990  0.496250  119655.488490    0.00125  0.001250       -0.493721     2.0    119655.489740         False           True   True
2  119655.985990  119655.983490 -87781.267422  119655.985990  0.496250  119655.983490    0.00125  0.001250       -0.001250     1.0    119655.489740         False          False   True
3  119656.161406  119655.985990 -87681.441589  119656.161406  0.176667  119655.985990    0.00125  0.174167        0.000000     1.0    119656.160156         False          False   True
4  119656.161406  119656.160156 -87581.444089  119656.161406  0.172917  119656.160156    0.00125  0.000000       -0.002500     2.0    119656.160156         False          False   True
5  119656.171406  119656.162656 -87481.452637  119656.171406  0.010000  119656.162656    0.00125  0.007500       -0.001048     1.0    119656.160156         False          False   True
6  119656.173906  119656.171406 -87381.455322  119656.173906  0.010000  119656.171406    0.00125  0.001250       -0.001234     1.0    119656.160156         False          False   True
7  119656.182656  119656.173906 -87281.462891  119656.182656  0.010000  119656.173906    0.00125  0.007500       -0.000052     1.0    119656.160156         False          False   True
8  119656.185156  119656.183838 -87181.467773  119656.185156  0.010000  119656.183838    0.00125  0.000068       -0.002435     1.0    119656.160156         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=11/4096.[0m
[08/10 15:45:06]  --------------------------------------------------------------------------------
[08/10 15:45:06]  Iteration: 172 (12 solution, 159 counterexamples)
[08/10 15:45:57]  Generator returned sat in 45.928430 secs.
[08/10 15:45:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:46:01]  Improved gap from 1/1200 to 0
[08/10 15:46:02]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/10 15:46:02]  Verifer returned sat in 4.614774 secs.
[08/10 15:46:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  119156.667236  119156.665990 -87481.947422  119156.667236  0.000244  119156.665990   0.000417  0.000830        0.000830     1.0     119156.66599            -1             -1     -1
1  119156.667236  119156.665990 -87381.948486  119156.667236  0.000488  119156.665990   0.000417  0.000830       -0.000234     1.0     119156.66599         False          False   True
2  119156.921198  119156.667240 -87282.202881  119156.921198  0.254792  119156.667240   0.000417  0.253542       -0.000667     1.0     119156.66599         False          False   True
3  119156.922448  119156.921615 -87182.203613  119156.922448  0.254792  119156.921615   0.000417  0.000417       -0.000150     1.0     119156.66599         False          False   True
4  119156.932448  119156.922865 -87082.213623  119156.932448  0.010417  119156.922865   0.000417  0.009167       -0.000160     1.0     119156.66599         False          False   True
5  119156.933281  119156.932448 -86982.214600  119156.933281  0.010000  119156.932448   0.000417  0.000417       -0.000303     1.0     119156.66599         False          False   True
6  119156.942865  119156.933281 -86882.224121  119156.942865  0.010000  119156.933281   0.000417  0.009167       -0.000241     1.0     119156.66599         False          False   True
7  119156.943698  119156.942865 -86782.234131  119156.943698  0.010000  119156.942865   0.000417  0.000417       -0.009417     1.0     119156.66599         False          False   True
8  119156.953281  119156.952865 -86782.234131  119156.953281  0.010000  119156.952865   0.000417  0.000000      -99.999834     1.0     119156.66599         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1200.[0m
[08/10 15:46:03]  --------------------------------------------------------------------------------
[08/10 15:46:03]  Iteration: 173 (12 solution, 160 counterexamples)
[08/10 15:48:28]  Generator returned sat in 139.961350 secs.
[08/10 15:48:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:30]  Verifer returned unsat in 0.807000 secs.
[08/10 15:48:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:30]  --------------------------------------------------------------------------------
[08/10 15:48:30]  Iteration: 174 (13 solution, 160 counterexamples)
[08/10 15:51:39]  Generator returned sat in 184.086495 secs.
[08/10 15:51:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:51:42]  Improved gap from 1/1600 to 32.8125
[08/10 15:51:43]  Improved number of small numbers from 57 to 69 out of a max of 114
[08/10 15:51:43]  Verifer returned sat in 3.994226 secs.
[08/10 15:51:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  117710.101318  117610.101475 -85935.382907  117710.101318  100.002500  117610.101475     0.0000  99.999844       99.999844     2.0    117610.101475            -1             -1   False
1  117710.102725  117710.101318 -85935.382907  117710.102725  100.001250  117710.101318     0.0000   0.001406        0.001250     2.0    117710.102725         False          False   False
2  117810.100098  117810.098975 -85935.382907  117810.100098   99.998779  117810.098975     0.0000   0.001123       -0.001377     1.0    117810.100098         False          False   False
3  117842.913975  117810.101475 -85868.195407  117842.913975   32.815000  117810.101475     0.0000  32.812500        0.000000     1.0    117842.913975         False          False   False
4  118026.008975  117942.905225 -85868.195407  118026.008975  215.907500  117942.905225    83.0925   0.011250        0.002500     1.0    117842.913975         False          False   False
5  118026.008975  117942.915225 -85801.009157  118026.008975    0.010000  117942.915225    83.0925   0.001250      -32.811250     2.0    117842.913975         False          False    True
6  118092.920850  117975.727725 -85735.109863  118092.920850   66.913125  117975.727725    83.0925  34.100625       -0.000081     1.0    117842.913975         False          False    True
7  118175.589912  118009.829600 -85718.185303  118175.589912  116.769688  118009.829600    83.0925  82.667812       -0.406458     1.0    117842.913975         False          False    True
8  118185.269131  118092.904053 -85718.185303  118185.269131   92.347031  118092.904053    83.0925   9.272578      -90.727240     1.0    117842.913975         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 15:51:44]  --------------------------------------------------------------------------------
[08/10 15:51:44]  Iteration: 175 (13 solution, 161 counterexamples)
[08/10 15:54:56]  Generator returned sat in 186.751169 secs.
[08/10 15:54:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:54:57]  Improved gap from 229/5 to 100
[08/10 15:54:58]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 15:54:58]  Verifer returned sat in 1.438857 secs.
[08/10 15:54:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  117272.596436  117272.496553 -85597.877985  117272.596436   100.099854  117272.496553       0.05     0.049883       -0.050117     1.0    117272.496553            -1             -1     -1
1  117372.596553  117272.596553 -85597.877985  117372.596553   100.050000  117272.596553       0.05    99.950000       -0.050000     1.0    117372.546553         False          False   True
2  117472.596553  117372.596553 -85597.877985  117472.596553   199.950000  117372.596553       0.05    99.950000       -0.050000     1.0    117372.546553         False          False   True
3  117472.696553  117472.596553 -85597.877985  117472.696553   100.050000  117472.596553       0.05     0.050000      -99.950000     1.0    117472.646553         False          False   True
4  117774.296553  117672.596553 -85597.877985  117774.296553   301.650000  117672.596553       0.05   101.650000      101.650000     1.0    117472.646553         False          False   True
5  118477.446553  117672.596553 -85597.877985  118477.446553   804.800000  117672.596553       0.05   804.800000      704.800000     1.0    117472.646553         False          False   True
6  119433.746553  117774.296387 -85597.877985  119433.746553  1761.100000  117774.296387      59.40  1600.050166     1501.750000     2.0    117472.646553         False          False   True
7  119433.746553  117896.596553 -85597.877985  119433.746553   881.050000  117896.596553      59.40  1477.750000     1401.750000     3.0    119374.346553          True           True   True
8  119433.746553  118072.596436 -85597.877985  119433.746553   552.525000  118072.596436      59.40  1301.750117     1301.750000     4.0    119374.346553         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6007/4.[0m
[08/10 15:54:59]  --------------------------------------------------------------------------------
[08/10 15:54:59]  Iteration: 176 (13 solution, 162 counterexamples)
[08/10 15:57:44]  Generator returned sat in 159.892681 secs.
[08/10 15:57:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:49]  Improved gap from 0 to 14.0625
[08/10 15:57:49]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:57:49]  Verifer returned sat in 4.455264 secs.
[08/10 15:57:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  117494.086670  117080.024170 -85441.142822  117494.086670    0.100098  117080.024170        0.0  414.062500      378.225098     5.0    117080.024170            -1             -1    True
1  117494.186768  117215.761719 -85441.142822  117494.186768  414.162598  117215.761719        0.0  278.425049      278.325195     5.0    117080.024170         False          False    True
2  117629.824219  117215.861572 -85441.142822  117629.824219  414.062500  117215.861572        0.0  413.962646      313.962646     6.0    117629.824219         False          False    True
3  117629.824219  117315.861572 -85441.142822  117629.824219   32.325195  117315.861572        0.0  313.962646      213.962646     7.0    117629.824219         False          False    True
4  117629.824219  117494.086670 -85441.142822  117629.824219  253.000000  117494.086670        0.0  135.737549      113.962646     8.0    117629.824219         False          False    True
5  117629.824219  117515.861572 -85441.142822  117629.824219  124.500000  117515.861572        0.0  113.962646       13.962646     4.0    117629.824219         False           True   False
6  117629.824219  117615.861572 -85355.205322  117629.824219   60.250000  117615.861572        0.0   13.962646       -0.099854     5.0    117629.824219         False          False   False
7  117643.986572  117629.924072 -85269.267822  117643.986572   28.125000  117629.924072        0.0   14.062500        0.000000     1.0    117629.824219         False          False   False
8  117643.986572  117643.986572 -85269.267822  117643.986572   12.062500  117643.986572        0.0    0.000000     -100.000000     2.0    117629.824219         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1286399/4096.[0m
[08/10 15:57:50]  --------------------------------------------------------------------------------
[08/10 15:57:50]  Iteration: 177 (13 solution, 163 counterexamples)
[08/10 16:00:30]  Generator returned sat in 154.664100 secs.
[08/10 16:00:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:00:32]  Improved gap from 0 to 35.9375
[08/10 16:00:32]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/10 16:00:32]  Verifer returned sat in 1.598581 secs.
[08/10 16:00:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  117462.948975  117304.011475 -85441.143066  117462.948975    0.200195  117304.011475        0.0  158.937500      158.937256     9.0    117304.011475            -1             -1     -1
1  117462.948975  117401.030518 -85441.143066  117462.948975    0.100000  117401.030518        0.0   61.918457       58.937256     3.0    117462.948975         False           True  False
2  117462.948975  117427.011475 -85400.080322  117462.948975   61.818750  117427.011475        0.0   35.937500        0.000000     3.0    117462.948975         False          False  False
3  117543.517822  117462.948975 -85380.649170  117543.517822  116.506348  117462.948975        0.0   80.568848        0.000000     4.0    117462.948975         False          False  False
4  117543.517822  117543.517822 -85316.586670  117543.517822   80.468750  117543.517822        0.0    0.000000      -35.937500     2.0    117462.948975         False           True  False
5  117615.761475  117579.924072 -85252.992920  117615.761475   72.243652  117579.924072        0.0   35.837402       -0.100098     1.0    117462.948975         False          False  False
6  117657.380371  117615.861572 -85194.511719  117657.380371   77.456299  117615.861572        0.0   41.518799        0.000000     1.0    117462.948975         False          False  False
7  117693.317871  117657.480225 -85130.549072  117693.317871   77.456299  117657.480225        0.0   35.837646       -0.099854     1.0    117462.948975         False          False  False
8  117715.461426  117693.417969 -85130.549072  117715.461426   57.981201  117693.417969        0.0   22.043457      -77.956299     1.0    117462.948975         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=120909/2048.[0m
[08/10 16:00:33]  --------------------------------------------------------------------------------
[08/10 16:00:33]  Iteration: 178 (13 solution, 164 counterexamples)
[08/10 16:00:50]  Generator returned sat in 11.232374 secs.
[08/10 16:00:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:00:52]  Improved gap from 728831/20480 to 35.9375
[08/10 16:00:52]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 16:00:52]  Verifer returned sat in 2.079843 secs.
[08/10 16:00:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  120601.492676  120543.861572 -88680.992920  120601.492676    0.100000  120543.861572        0.0  57.631104       57.631104     2.0    120543.861572            -1             -1   False
1  120601.492676  120565.555420 -88638.624268  120601.492676   57.531006  120565.555420        0.0  35.937256       -0.000244     2.0    120543.861572         False          False   False
2  120601.592773  120601.492920 -88574.561768  120601.592773   36.037354  120601.492920        0.0   0.099854      -35.837646     1.0    120601.592773         False          False   False
3  120710.405518  120653.823975 -88547.536865  120710.405518  108.912598  120653.823975        0.0  56.581543        0.000000     1.0    120601.592773         False          False   False
4  120710.405518  120710.405518 -88483.474365  120710.405518   56.481201  120710.405518        0.0   0.000000      -35.937500     2.0    120601.592773         False          False   False
5  120784.330566  120746.343018 -88421.561719  120784.330566   73.925049  120746.343018        0.0  37.987549       -0.099805     1.0    120601.592773         False          False   False
6  120820.268066  120784.430420 -88357.499268  120820.268066   73.925049  120784.430420        0.0  35.837646       -0.099854     1.0    120601.592773         False          False   False
7  120851.233643  120820.367920 -88293.436768  120851.233643   66.803223  120820.367920        0.0  30.865723       -5.071777     1.0    120601.592773         False          False   False
8  120876.849121  120856.305420 -88293.436523  120876.849121   56.481201  120856.305420        0.0  20.543701      -79.456055     1.0    120601.592773         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1/5.[0m
[08/10 16:00:53]  --------------------------------------------------------------------------------
[08/10 16:00:53]  Iteration: 179 (13 solution, 165 counterexamples)
[08/10 16:02:54]  Generator returned sat in 115.046188 secs.
[08/10 16:02:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:02:55]  Verifer returned unsat in 1.064358 secs.
[08/10 16:02:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:02:55]  --------------------------------------------------------------------------------
[08/10 16:02:55]  Iteration: 180 (14 solution, 165 counterexamples)
[08/10 16:03:11]  Generator returned sat in 10.188467 secs.
[08/10 16:03:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:03:13]  Verifer returned unsat in 1.383085 secs.
[08/10 16:03:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:03:13]  --------------------------------------------------------------------------------
[08/10 16:03:13]  Iteration: 181 (15 solution, 165 counterexamples)
[08/10 16:03:52]  Generator returned sat in 32.860080 secs.
[08/10 16:03:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:03:52]  Improved gap from 0 to 0
[08/10 16:03:53]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:03:53]  Verifer returned sat in 0.773138 secs.
[08/10 16:03:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  119712.965576  119512.965576 -87750.096924  119712.965576   99.999756  119512.965576        0.0  200.000000      100.000000     2.0    119512.965576            -1             -1   False
1  119712.965576  119612.965576 -87750.096924  119712.965576   99.950195  119612.965576        0.0  100.000000        0.000000     2.0    119712.965576         False          False   False
2  119713.015381  119713.015381 -87650.146729  119713.015381  100.049805  119713.015381        0.0    0.000000        0.000000     1.0    119712.965576         False          False   False
3  120014.065430  119713.015625 -87650.146729  120014.065430  301.050049  119713.015625        0.0  301.049805      201.050049     1.0    119712.965576         False          False   False
4  120014.065430  119864.165283 -87650.146729  120014.065430    1.000000  119864.165283        0.0  149.900146      101.050049     2.0    119712.965576         False          False   False
5  120014.065430  120012.965332 -87650.146729  120014.065430    1.000000  120012.965332        0.0    1.100098        1.050049     3.0    119712.965576         False          False   False
6  120014.065430  120013.015381 -87551.196777  120014.065430    1.000000  120013.015381        0.0    1.050049        0.000000     4.0    119712.965576         False          False   False
7  120014.065430  120014.065430 -87451.197021  120014.065430    1.000000  120014.065430        0.0    0.000000       -0.000244     5.0    119712.965576         False          False   False
8  120015.065430  120014.115723 -87352.197021  120015.065430    1.000000  120014.115723        0.0    0.949707       -0.000244     1.0    120015.065430          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=823705/4096.[0m
[08/10 16:03:53]  --------------------------------------------------------------------------------
[08/10 16:03:53]  Iteration: 182 (15 solution, 166 counterexamples)
[08/10 16:04:51]  Generator returned sat in 51.443553 secs.
[08/10 16:04:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:04:52]  Improved gap from 1/20 to 100
[08/10 16:04:53]  Improved number of small numbers from 60 to 86 out of a max of 114
[08/10 16:04:53]  Verifer returned sat in 1.478844 secs.
[08/10 16:04:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  119588.700439  119288.700576 -87425.831924  119588.700439     0.099854  119288.700576        0.0   299.999863      299.999863     2.0    119288.700576            -1             -1   False
1  119788.700576  119388.700439 -87425.831924  119788.700576   500.000000  119388.700439        0.0   400.000137      400.000000     2.0    119288.700576         False          False   False
2  120013.075439  119488.700439 -87425.831924  120013.075439   624.375000  119488.700439        0.0   524.375000      524.374863     3.0    119288.700576         False          False   False
3  120013.075439  119588.700439 -87425.831924  120013.075439   105.318750  119588.700439        0.0   424.375000      424.374863     4.0    120013.075439         False          False   False
4  120013.075439  119588.700684 -87425.831924  120013.075439   211.637500  119588.700684        0.0   424.374756      324.374863     4.0    120013.075439         False          False   False
5  120013.075439  119788.700576 -87425.831924  120013.075439   424.275000  119788.700576        0.0   224.374863      224.374863     5.0    120013.075439         False          False   False
6  120638.250576  119788.700576 -87425.831924  120638.250576   849.550000  119788.700576        0.0   849.550000      749.550000     5.0    120013.075439         False           True   False
7  121488.800576  119888.700576 -87425.831924  121488.800576  1700.100000  119888.700576        0.0  1600.100000     1500.100000     6.0    120013.075439         False           True   False
8  123289.900576  120088.700439 -87425.831924  123289.900576  3401.200000  120088.700439     1701.0  1500.200137     1500.200000     3.0    120013.075439         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=7501/5.[0m
[08/10 16:04:54]  --------------------------------------------------------------------------------
[08/10 16:04:54]  Iteration: 183 (15 solution, 167 counterexamples)
[08/10 16:05:31]  Generator returned sat in 31.910414 secs.
[08/10 16:05:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:05:33]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 16:05:33]  Verifer returned sat in 0.895757 secs.
[08/10 16:05:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  120044.550781  119744.500488 -87425.831787  120044.550781     0.049805  119744.500488     0.000000   300.050293      300.050293     7.0    119744.500488            -1             -1   False
1  120044.550781  119844.500488 -87425.831787  120044.550781   200.149902  119844.500488     0.000000   200.050293      200.050293     7.0    119744.500488         False          False   False
2  120044.600586  119844.500488 -87425.831787  120044.600586   200.100098  119844.500488     0.000000   200.100098      100.100098     7.0    120044.600586         False          False   False
3  123037.700684  120044.500488 -87425.831787  123037.700684  3193.200195  120044.500488  1393.100098  1600.100098     1600.100098     8.0    120044.600586         False          False   False
4  123037.700684  120044.550781 -87425.831787  123037.700684  1596.100098  120044.550781  1393.100098  1600.049805     1500.100098     9.0    120044.600586         False          False    True
5  123037.700684  120244.500488 -87425.831787  123037.700684  1597.100098  120244.500488  1393.100098  1400.100098     1400.100098     3.0    120044.600586         False           True   False
6  123235.700684  120244.550537 -87425.831787  123235.700684  1598.100098  120244.550537  1393.100098  1598.050049     1498.100098     4.0    120044.600586         False          False   False
7  123236.750732  120444.500488 -87425.831787  123236.750732  1599.100098  120444.500488  1393.100098  1399.150146     1399.150146     5.0    120044.600586         False          False   False
8  123437.700684  120444.550781 -87425.831787  123437.700684  1600.100098  120444.550781  1393.100098  1600.049805     1500.100098     6.0    120044.600586         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3277005/2048.[0m
[08/10 16:05:33]  --------------------------------------------------------------------------------
[08/10 16:05:33]  Iteration: 184 (15 solution, 168 counterexamples)
[08/10 16:07:03]  Generator returned sat in 83.412420 secs.
[08/10 16:07:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:07:04]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 16:07:04]  Verifer returned sat in 0.679062 secs.
[08/10 16:07:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  121860.465820  121660.465576 -85528.451904  121860.465820   199.899902  121660.465576    0.000000   200.000244      100.000244     2.0    121660.465576            -1             -1   False
1  121860.465820  121822.565674 -85528.451904  121860.465820   199.899902  121822.565674    0.000000    37.900146        0.000244     2.0    121660.465576         False          False   False
2  122022.365479  121860.465576 -85528.451904  122022.365479   199.799805  121860.465576    0.000000   161.899902       61.899902     3.0    122022.365479         False          False   False
3  124685.032471  122022.465576 -85528.451904  124685.032471  2824.566895  122022.465576  624.733398  2037.833496     1999.833496     1.0    122022.365479         False          False   False
4  124685.032471  122060.465576 -85528.451904  124685.032471  1410.283447  122060.465576  624.733398  1999.833496     1899.833496     2.0    122022.365479         False          False    True
5  124685.032471  122160.465576 -85528.451904  124685.032471  1529.733398  122160.465576  624.733398  1899.833496     1799.833496     3.0    122022.365479         False          False    True
6  124685.032471  122260.465576 -85528.451904  124685.032471  1680.233398  122260.465576  624.733398  1799.833496     1699.833496     4.0    122022.365479         False          False    True
7  124685.032471  122460.198975 -85528.451904  124685.032471  1799.733398  122460.198975  624.733398  1600.100098     1599.833496     5.0    122022.365479         False          False    True
8  125085.032471  122460.465820 -85528.451904  125085.032471  2000.100098  122460.465820  624.733398  1999.833252     1899.833496     6.0    122022.365479         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=4095659/2048.[0m
[08/10 16:07:04]  --------------------------------------------------------------------------------
[08/10 16:07:04]  Iteration: 185 (15 solution, 169 counterexamples)
[08/10 16:08:27]  Generator returned sat in 76.427016 secs.
[08/10 16:08:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:08:27]  Improved gap from 1/20 to 100
[08/10 16:08:28]  Improved number of small numbers from 86 to 104 out of a max of 114
[08/10 16:08:28]  Verifer returned sat in 0.600679 secs.
[08/10 16:08:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  124085.182617  123985.232666 -85528.451904  124085.182617   100.050049  123985.232666        0.0    99.949951       99.949951     3.0    123985.232666            -1             -1   False
1  124085.232666  123985.232666 -85528.451904  124085.232666   100.000000  123985.232666        0.0   100.000000        0.000000     3.0    124085.232666         False          False   False
2  125885.282471  124185.232422 -85528.451904  125885.282471  1900.049805  124185.232422        0.0  1700.050049     1700.049805     1.0    124085.232666         False          False   False
3  125885.282471  124285.182617 -85528.451904  125885.282471   173.262500  124285.182617        0.0  1600.099854     1600.049805     2.0    125885.282471         False          False   False
4  125885.282471  124285.232666 -85528.451904  125885.282471   348.525000  124285.232666        0.0  1600.049805     1500.049805     3.0    125885.282471         False          False   False
5  125885.282471  124485.232471 -85528.451904  125885.282471   699.050000  124485.232471        0.0  1400.050000     1400.049805     4.0    125885.282471         False          False   False
6  125885.332471  124485.282471 -85528.451904  125885.332471  1400.100000  124485.282471        0.0  1400.050000     1300.099805     5.0    125885.282471         False           True   False
7  127287.482471  124685.232471 -85528.451904  127287.482471  2802.200000  124685.232471        0.0  2602.250000     2602.249805     6.0    125885.282471         False           True   False
8  130291.632471  124685.282227 -85528.451904  130291.632471  5606.400000  124685.282227        0.0  5606.350244     5506.399805     7.0    125885.282471         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=110129/20.[0m
[08/10 16:08:28]  --------------------------------------------------------------------------------
[08/10 16:08:28]  Iteration: 186 (15 solution, 170 counterexamples)
[08/10 16:10:09]  Generator returned sat in 94.549556 secs.
[08/10 16:10:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:10:09]  Improved gap from 0 to 100
[08/10 16:10:10]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 16:10:10]  Verifer returned sat in 0.715766 secs.
[08/10 16:10:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  119984.602539  119984.552490 -85528.451904  119984.602539  100.100098  119984.552490    0.000000    0.050049       -0.049805     2.0    119984.552490            -1             -1   False
1  120084.652588  119984.652344 -85528.451904  120084.652588  100.100098  119984.652344    0.000000  100.000244        0.000244     1.0    119984.552490         False          False   False
2  120084.652588  120084.652344 -85528.451904  120084.652588    0.050049  120084.652344    0.000000    0.000244      -99.999756     2.0    120084.652588         False          False   False
3  120284.752441  120184.652588 -85528.451904  120284.752441  200.100098  120184.652588    0.000000  100.099854        0.100098     1.0    120084.652588         False          False   False
4  120384.252686  120284.652344 -85528.451904  120384.252686  199.600098  120284.652344    0.000000   99.600342       -0.399658     2.0    120084.652588         False          False   False
5  120584.152344  120384.652344 -85528.451904  120584.152344  299.500000  120384.652344   99.399902  100.100098        0.100098     1.0    120084.652588         False          False   False
6  120783.052246  120484.802490 -85528.451904  120783.052246  299.000000  120484.802490  198.299805   99.949951        0.100098     1.0    120084.652588         False          False    True
7  120981.602295  120584.802490 -85528.451904  120981.602295  298.500000  120584.802490  296.849854   99.949951        0.100098     1.0    120084.652588         False          False    True
8  121179.652344  120684.802246 -85528.451904  121179.652344  298.000000  120684.802246  394.899902   99.950195        0.100098     1.0    120084.652588         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/2048.[0m
[08/10 16:10:10]  --------------------------------------------------------------------------------
[08/10 16:10:10]  Iteration: 187 (15 solution, 171 counterexamples)
[08/10 16:11:13]  Generator returned sat in 56.467403 secs.
[08/10 16:11:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:16]  Improved gap from 0 to 0
[08/10 16:11:17]  Improved number of small numbers from 73 to 100 out of a max of 114
[08/10 16:11:17]  Verifer returned sat in 3.335166 secs.
[08/10 16:11:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118819.662598  118619.662109 -85528.452637  118819.662598    0.000977  118619.662109        0.0  200.000488      100.000732     2.0    118619.662109            -1             -1   False
1  118819.662598  118719.661865 -85528.452637  118819.662598  199.999756  118719.661865        0.0  100.000732        0.000732     2.0    118619.662109         False          False   False
2  118919.660889  118819.662598 -85528.452148  118919.660889  199.999023  118819.662598        0.0   99.998291       -0.000488     3.0    118919.660889         False          False   False
3  119019.660889  119019.652760 -85528.451904  119019.660889  199.998291  119019.652760        0.0    0.008128       -0.000244     1.0    119019.660889         False          False   False
4  119019.662760  119019.661927 -85428.453613  119019.662760    0.010000  119019.661927        0.0    0.000833       -0.000081     1.0    119019.660889         False          False   False
5  119019.671927  119019.671094 -85328.470947  119019.671927    0.010000  119019.671094        0.0    0.000833       -0.008249     1.0    119019.660889         False          False   False
6  119019.681094  119019.680260 -85228.471924  119019.681094    0.010000  119019.680260        0.0    0.000833       -0.000059     1.0    119019.660889         False          False   False
7  119019.690260  119019.690260 -85128.481201  119019.690260    0.010000  119019.690260        0.0    0.000000       -0.000169     1.0    119019.660889         False          False   False
8  119019.700260  119019.691162 -85128.480957  119019.700260    0.010000  119019.691162        0.0    0.009098      -99.989925     1.0    119019.660889         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/10 16:11:17]  --------------------------------------------------------------------------------
[08/10 16:11:17]  Iteration: 188 (15 solution, 172 counterexamples)
[08/10 16:14:12]  Generator returned sat in 168.918001 secs.
[08/10 16:14:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:14:14]  Improved gap from 0 to 25.0
[08/10 16:14:14]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:14:14]  Verifer returned sat in 1.312730 secs.
[08/10 16:14:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118620.676270  118520.674805 -85329.465576  118620.676270    0.003750  118520.674805        0.0  100.001465      100.001465     2.0    118520.674805            -1             -1   False
1  118620.676270  118620.673584 -85329.465576  118620.676270    0.002441  118620.673584        0.0    0.002686        0.001465     2.0    118620.676270         False          False   False
2  118620.676270  118620.675049 -85329.465576  118620.676270    0.001221  118620.675049        0.0    0.001221      -99.998535     3.0    118620.676270         False          False   False
3  118845.673828  118820.674805 -85329.465576  118845.673828  224.998779  118820.674805        0.0   24.999023       24.999023     1.0    118620.676270         False           True   False
4  119119.674805  118920.673584 -85329.465576  119119.674805  299.000000  118920.673584      174.0   25.001221       25.000000     1.0    118620.676270         False          False   False
5  119119.674805  118920.674805 -85254.465576  119119.674805    0.010000  118920.674805      174.0   25.000000        0.000000     2.0    118620.676270         False          False    True
6  119119.674805  118945.674805 -85179.465820  119119.674805    0.010000  118945.674805      174.0    0.000000      -25.000244     3.0    118620.676270         False          False    True
7  119243.674805  118970.675049 -85178.465576  119243.674805  124.000000  118970.675049      174.0   98.999756        0.000000     1.0    119069.674805          True           True   False
8  119243.674805  119069.674805 -85178.465576  119243.674805   49.001465  119069.674805      174.0    0.000000     -100.000000     2.0    119069.674805         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=25.[0m
[08/10 16:14:14]  --------------------------------------------------------------------------------
[08/10 16:14:14]  Iteration: 189 (15 solution, 173 counterexamples)
[08/10 16:15:28]  Generator returned sat in 67.472682 secs.
[08/10 16:15:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:15:29]  Improved gap from 1/10 to 0
[08/10 16:15:30]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:15:30]  Verifer returned sat in 1.175008 secs.
[08/10 16:15:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118789.344727  118689.394775 -85498.085693  118789.344727    0.050000  118689.394775        0.0   99.949951       -0.050049     2.0    118689.394775            -1             -1   False
1  118789.444580  118789.394775 -85398.135742  118789.444580  100.049805  118789.394775        0.0    0.049805       -0.000244     1.0    118689.394775         False          False   False
2  118990.994629  118889.444824 -85398.135742  118990.994629  201.599854  118889.444824        0.0  101.549805      101.549805     1.0    118689.394775         False          False   False
3  118990.994629  118989.395020 -85398.135742  118990.994629    2.500000  118989.395020        0.0    1.599609        1.549805     2.0    118990.994629         False          False   False
4  118990.994629  118989.444824 -85299.685547  118990.994629    1.500000  118989.444824        0.0    1.549805        0.000000     3.0    118990.994629         False          False   False
5  118990.994629  118990.994629 -85199.685791  118990.994629    1.500000  118990.994629        0.0    0.000000       -0.000244     4.0    118990.994629         False          False   False
6  118992.494629  118992.444580 -85101.235596  118992.494629    1.500000  118992.444580        0.0    0.050049       -0.050049     1.0    118990.994629         False          False   False
7  118993.944580  118992.544678 -85002.635742  118993.944580    1.500000  118992.544678        0.0    1.399902       -0.000244     1.0    118990.994629         False          False   False
8  118994.044678  118994.044678 -85002.635742  118994.044678    1.500000  118994.044678        0.0    0.000000      -99.900146     1.0    118990.994629         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=416153/4096.[0m
[08/10 16:15:30]  --------------------------------------------------------------------------------
[08/10 16:15:30]  Iteration: 190 (15 solution, 174 counterexamples)
[08/10 16:16:35]  Generator returned sat in 59.230061 secs.
[08/10 16:16:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:16:40]  Improved gap from 3/3400 to 0
[08/10 16:16:41]  Improved number of small numbers from 54 to 75 out of a max of 114
[08/10 16:16:41]  Verifer returned sat in 4.720135 secs.
[08/10 16:16:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  119213.192480  119212.635050 -85921.326172  119213.192480  0.000625  119212.635050        0.0  0.557431        0.557227     2.0    119212.635050            -1             -1   False
1  119213.192480  119212.865234 -85821.883398  119213.192480  0.557373  119212.865234        0.0  0.327246        0.000000     2.0    119212.635050         False          False   False
2  119213.192871  119213.192480 -85721.885254  119213.192871  0.327637  119213.192480        0.0  0.000391       -0.001465     3.0    119213.192871         False          False   False
3  119213.204355  119213.194355 -85621.895752  119213.204355  0.011875  119213.194355        0.0  0.010000       -0.000479     1.0    119213.204355         False          False   False
4  119213.533314  119213.204834 -85522.224232  119213.533314  0.338958  119213.204834        0.0  0.328480        0.000000     1.0    119213.204355         False          False   False
5  119213.533314  119213.533314 -85422.224854  119213.533314  0.010000  119213.533314        0.0  0.000000       -0.000622     2.0    119213.204355         False          False   False
6  119213.544564  119213.534180 -85322.235482  119213.544564  0.011250  119213.534180        0.0  0.010384        0.000000     1.0    119213.204355         False          False   False
7  119213.544564  119213.544564 -85222.235596  119213.544564  0.010000  119213.544564        0.0  0.000000       -0.000114     2.0    119213.204355         False          False   False
8  119213.554564  119213.545166 -85222.235352  119213.554564  0.010000  119213.545166        0.0  0.009398      -99.989870     1.0    119213.204355         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/10 16:16:41]  --------------------------------------------------------------------------------
[08/10 16:16:41]  Iteration: 191 (15 solution, 175 counterexamples)
[08/10 16:20:02]  Generator returned sat in 194.616673 secs.
[08/10 16:20:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:05]  Improved gap from 0 to 12.5
[08/10 16:20:05]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 16:20:05]  Verifer returned sat in 2.336377 secs.
[08/10 16:20:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  118877.204346  118677.154541 -85372.285645  118877.204346    0.049805  118677.154541   0.049805  200.000000      200.000000     2.0    118677.154541            -1             -1     -1
1  118877.204346  118777.154541 -85372.285645  118877.204346  149.975000  118777.154541   0.049805  100.000000      100.000000     2.0    118677.154541         False          False   True
2  118877.204346  118777.154541 -85372.285645  118877.204346    0.050000  118777.154541   0.049805  100.000000        0.000000     2.0    118877.154541         False          False   True
3  119213.204346  118877.204346 -85372.285645  119213.204346  436.000000  118877.204346   0.049805  335.950195      236.000000     1.0    118877.154541         False          False   True
4  119213.204346  119077.154297 -85372.285645  119213.204346  218.000000  119077.154297   0.049805  136.000244      136.000000     2.0    118877.154541         False          False   True
5  119213.204346  119161.554443 -85372.285645  119213.204346  109.000000  119161.554443   0.049805   51.600098       36.000000     3.0    118877.154541         False          False   True
6  119214.604248  119202.104492 -85309.735596  119214.604248   53.000000  119202.104492   0.049805   12.449951       -0.050049     4.0    119214.554443          True           True  False
7  119227.154297  119214.604492 -85222.235596  119227.154297   25.000000  119214.604492   0.049805   12.500000        0.000000     1.0    119214.554443         False           True  False
8  119227.154297  119227.104492 -85222.235596  119227.154297   11.000000  119227.104492   0.049805    0.000000     -100.000000     2.0    119214.554443         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=966861/4096.[0m
[08/10 16:20:06]  --------------------------------------------------------------------------------
[08/10 16:20:06]  Iteration: 192 (15 solution, 176 counterexamples)
[08/10 16:21:33]  Generator returned sat in 81.274830 secs.
[08/10 16:21:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:21:34]  Improved gap from 0 to 100
[08/10 16:21:34]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 16:21:34]  Verifer returned sat in 0.735362 secs.
[08/10 16:21:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118679.654297  118479.754150 -85174.885498  118679.654297     0.099854  118479.754150   0.000000   199.900146      199.900146     2.0    118479.754150            -1             -1   False
1  118679.654297  118479.754395 -85174.885498  118679.654297     0.100000  118479.754395   0.000000   199.899902       99.900146     2.0    118479.754150         False          False   False
2  118779.754150  118679.754150 -85174.885498  118779.754150   299.999756  118679.754150   0.000000   100.000000      100.000000     1.0    118479.754150         False          False   False
3  120379.254150  118779.754150 -85174.885498  120379.254150  1699.500000  118779.754150   0.399902  1599.100098     1599.100098     2.0    118479.754150         False          False   False
4  120479.154053  118779.754395 -85174.885498  120479.154053  1699.000000  118779.754395   0.399902  1698.999756     1599.000000     2.0    118479.754150         False          False    True
5  120480.154297  118977.954346 -85174.885498  120480.154297  1700.000000  118977.954346   0.399902  1501.800049     1500.000244     3.0    118479.754150         False          False    True
6  120679.354248  119079.754150 -85174.885498  120679.354248  1701.000000  119079.754150   0.500000  1599.100098     1599.100098     4.0    118479.754150         False          False    True
7  120780.754150  119178.754395 -85174.885498  120780.754150  1700.500000  119178.754395   1.899902  1600.099854     1599.100098     5.0    120778.854248          True           True    True
8  120880.654297  119279.754150 -85174.885498  120880.654297  1700.000000  119279.754150   1.899902  1599.000244     1599.000244     6.0    120778.854248         False           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=2, buffer=3274957/2048.[0m
[08/10 16:21:35]  --------------------------------------------------------------------------------
[08/10 16:21:35]  Iteration: 193 (15 solution, 177 counterexamples)
[08/10 16:23:13]  Generator returned sat in 92.045462 secs.
[08/10 16:23:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:23:14]  Improved gap from 0 to 48.4375
[08/10 16:23:15]  Improved number of small numbers from 84 to 114 out of a max of 114
[08/10 16:23:15]  Verifer returned sat in 1.544851 secs.
[08/10 16:23:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  120429.354004  120229.354004 -85174.885498  120429.354004    0.049805  120229.354004   0.000000  200.000000      100.000000     2.0    120229.354004            -1             -1    True
1  120429.354004  120380.916748 -85174.885498  120429.354004    0.049805  120380.916748   0.000000   48.437256        0.000000     2.0    120229.354004         False          False    True
2  120530.816650  120529.304443 -85174.885498  120530.816650  149.899902  120529.304443   0.000000    1.512207        1.462646     1.0    120229.354004         False          False    True
3  120530.816650  120529.354004 -85123.322998  120530.816650    0.050049  120529.354004   0.000000    1.462646      -46.974854     2.0    120530.816650         False          False    True
4  120679.354004  120677.741699 -85123.322998  120679.354004  150.000000  120677.741699   0.050049    1.562256        1.512451     1.0    120530.816650         False          False    True
5  120679.354004  120677.791748 -85073.743652  120679.354004    0.500000  120677.791748   0.050049    1.512207      -48.908203     2.0    120530.816650         False          False    True
6  120752.085449  120728.212402 -85022.181396  120752.085449   74.243652  120728.212402   0.050049   23.822998      -24.614502     1.0    120530.816650         False          False    True
7  120827.691650  120777.708496 -84973.173096  120827.691650   99.429199  120777.708496   0.050049   49.933105        0.000000     1.0    120530.816650         False          False    True
8  120827.741943  120827.691650 -84973.173096  120827.741943   49.983398  120827.691650   0.050049    0.000244      -99.949707     1.0    120530.816650         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=6195/4096.[0m
[08/10 16:23:15]  --------------------------------------------------------------------------------
[08/10 16:23:15]  Iteration: 194 (15 solution, 178 counterexamples)
[08/10 16:24:35]  Generator returned sat in 73.205221 secs.
[08/10 16:24:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:24:40]  Improved gap from 51/4096 to 32.8125
[08/10 16:24:41]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:24:41]  Verifer returned sat in 5.519323 secs.
[08/10 16:24:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118107.736572  117983.598877 -82853.167969  118107.736572    0.100000  117983.598877   0.000000  124.137695      100.100098     7.0    117983.598877            -1             -1   False
1  118107.736572  118107.636475 -82853.167969  118107.736572    0.100098  118107.636475   0.000000    0.100098        0.100098     7.0    117983.598877         False          False   False
2  118207.736328  118207.636475 -82853.167969  118207.736328  100.099854  118207.636475   0.000000    0.099854        0.099854     1.0    117983.598877         False          False   False
3  118243.436279  118210.623779 -82788.967773  118243.436279   35.799805  118210.623779   0.000000   32.812500        0.000000     1.0    118243.436279         False          False   False
4  118344.036133  118343.336426 -82788.967773  118344.036133  133.412354  118343.336426   0.100098    0.599609        0.499756     1.0    118243.436279         False          False   False
5  118344.036133  118343.436279 -82721.780273  118344.036133    0.500000  118343.436279   0.100098    0.499756      -32.312744     2.0    118243.436279         False          False    True
6  118411.686279  118376.248779 -82657.117676  118411.686279   68.149902  118376.248779   0.100098   35.337402        0.000000     1.0    118243.436279         False          False    True
7  118493.236328  118411.686279 -82638.667725  118493.236328  116.887451  118411.686279   0.100098   81.449951        0.000000     1.0    118243.436279         False          False    True
8  118504.405029  118493.236328 -82638.667725  118504.405029   92.618652  118493.236328   0.100098   11.068604      -88.831299     1.0    118243.436279         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=2047/4096.[0m
[08/10 16:24:41]  --------------------------------------------------------------------------------
[08/10 16:24:41]  Iteration: 195 (15 solution, 179 counterexamples)
[08/10 16:27:03]  Generator returned sat in 135.581171 secs.
[08/10 16:27:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:27:04]  Improved gap from 1/10 to 100
[08/10 16:27:05]  Improved number of small numbers from 78 to 87 out of a max of 114
[08/10 16:27:05]  Verifer returned sat in 1.886732 secs.
[08/10 16:27:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118044.848779  117398.517578 -83042.280273  118044.848779    0.025146  117398.517578      0.000  646.331201       646.30625     8.0    117398.517578            -1             -1   False
1  118044.873779  117398.542529 -83042.280273  118044.873779  646.356201  117398.542529      0.025  646.306250       546.30625     5.0    117398.517578         False          False   False
2  118052.873779  117590.592529 -83042.280273  118052.873779  654.306250  117590.592529      0.025  462.256250       454.30625     5.0    117398.517578         False          False    True
3  118244.898779  117692.592529 -83042.280273  118244.898779  654.281250  117692.592529      0.050  552.256250       546.30625     6.0    118244.848779         False          False    True
4  118344.923779  117794.592529 -83042.280273  118344.923779  652.281250  117794.592529      0.075  550.256250       546.30625     7.0    118244.848779         False          False    True
5  118444.948779  117898.542529 -83042.280273  118444.948779  650.281250  117898.542529      0.100  546.306250       546.30625     8.0    118244.848779         False          False    True
6  118546.923779  117898.542725 -83042.280273  118546.923779  648.281250  117898.542725      2.075  646.306055       546.30625     8.0    118244.848779         False          False    True
7  118546.923779  118044.848779 -83042.280273  118546.923779  646.281250  118044.848779      2.075  500.000000       446.30625     9.0    118244.848779         False          False    True
8  118746.948779  118198.542480 -83042.280273  118746.948779  700.025000  118198.542480      2.100  546.306299       546.30625     6.0    118244.848779         False           True   False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=87409/160.[0m
[08/10 16:27:06]  --------------------------------------------------------------------------------
[08/10 16:27:06]  Iteration: 196 (15 solution, 180 counterexamples)
[08/10 16:28:19]  Generator returned sat in 67.493623 secs.
[08/10 16:28:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:28:33]  Improved gap from 0 to 0
[08/10 16:28:34]  Improved number of small numbers from 61 to 75 out of a max of 114
[08/10 16:28:34]  Verifer returned sat in 14.115036 secs.
[08/10 16:28:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  117716.015137  117715.011314 -83141.275391  117716.015137  1.005000  117715.011314        0.0  1.003823        1.003706     3.0    117715.011314            -1             -1   False
1  117716.016314  117716.015625 -83042.280273  117716.016314  1.005000  117716.015625        0.0  0.000689        0.000000     1.0    117715.011314         False          False   False
2  117716.016314  117716.016314 -82942.280273  117716.016314  0.000625  117716.016314        0.0  0.000000        0.000000     2.0    117716.016314         False          False   False
3  117716.016731  117716.016522 -82842.280762  117716.016731  0.000417  117716.016522        0.0  0.000208       -0.000072     1.0    117716.016731         False          False   False
4  117716.027147  117716.016846 -82742.291107  117716.027147  0.010625  117716.016846        0.0  0.010302        0.000000     1.0    117716.016731         False          False   False
5  117716.027147  117716.027147 -82642.291260  117716.027147  0.010000  117716.027147        0.0  0.000000       -0.000153     2.0    117716.016731         False          False   False
6  117716.037147  117716.036939 -82542.301107  117716.037147  0.010000  117716.036939        0.0  0.000208        0.000000     1.0    117716.016731         False          False   False
7  117716.046939  117716.046731 -82442.311035  117716.046939  0.010000  117716.046731        0.0  0.000208       -0.000137     1.0    117716.016731         False          False   False
8  117716.056731  117716.047363 -82342.320801  117716.056731  0.010000  117716.047363        0.0  0.009367       -0.000111     1.0    117716.016731         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/2400.[0m
[08/10 16:28:35]  --------------------------------------------------------------------------------
[08/10 16:28:35]  Iteration: 197 (15 solution, 181 counterexamples)
[08/10 16:29:57]  Generator returned sat in 75.736734 secs.
[08/10 16:29:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:30:02]  Improved gap from 0 to 48.4375
[08/10 16:30:02]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:30:02]  Verifer returned sat in 5.306504 secs.
[08/10 16:30:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  117513.925781  117413.880127 -82945.290039  117513.925781    0.045410  117413.880127    0.022949  100.022705      100.022705     6.0    117413.880127            -1             -1     -1
1  117513.925781  117413.880127 -82945.290039  117513.925781    0.022949  117413.880127    0.022949  100.022705        0.022705     6.0    117513.902832         False          False   True
2  117613.971191  117613.880127 -82945.290039  117613.971191  200.068115  117613.880127    0.045410    0.045654        0.045654     1.0    117513.902832         False          False   True
3  117814.243896  117711.789307 -82945.290039  117814.243896  200.318359  117711.789307  100.318115    2.136475        0.045654     1.0    117513.902832         False          False   True
4  117914.266602  117812.465332 -82945.290039  117914.266602  102.159180  117812.465332  100.340820    1.460449        0.045654     1.0    117513.902832         False          False   True
5  117965.885742  117813.948486 -82896.977539  117965.885742   53.079590  117813.948486  100.340820   51.596436       -0.022705     1.0    117513.902832         False          False   True
6  118014.323486  117865.567627 -82845.415039  118014.323486  100.034180  117865.567627  100.340820   48.415039       -0.022461     1.0    117513.902832         False          False   True
7  118042.797607  117914.005371 -82793.852783  118042.797607   76.889160  117914.005371  100.340820   28.451416      -19.986084     1.0    117513.902832         False          False   True
8  118065.116211  117962.442871 -82742.290283  118065.116211   50.770020  117962.442871  100.340820    2.332520      -46.104980     1.0    117513.902832         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=187/4096.[0m
[08/10 16:30:03]  --------------------------------------------------------------------------------
[08/10 16:30:03]  Iteration: 198 (15 solution, 182 counterexamples)
[08/10 16:30:46]  Generator returned sat in 36.812054 secs.
[08/10 16:30:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:30:48]  Improved gap from 0 to 23.4375
[08/10 16:30:49]  Improved number of small numbers from 104 to 105 out of a max of 114
[08/10 16:30:49]  Verifer returned sat in 2.422204 secs.
[08/10 16:30:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  118155.275635  118055.225781 -82947.235693  118155.275635   100.050  118055.225781       0.05  99.999854       99.999854     2.0    118055.225781            -1             -1     -1
1  118155.275781  118155.225781 -82947.235693  118155.275781   100.000  118155.225781       0.05   0.000000        0.000000     1.0    118155.225781         False          False   True
2  118254.075781  118253.975781 -82947.235693  118254.075781    98.800  118253.975781       0.05   0.050000       -1.200000     1.0    118254.025781         False          False   True
3  118355.425781  118354.475781 -82947.235693  118355.425781   101.400  118354.475781       0.10   0.850000        0.100000     1.0    118254.025781         False          False   True
4  118455.475781  118455.225781 -82947.235693  118455.475781   100.900  118455.225781       0.15   0.100000        0.100000     1.0    118254.025781         False          False   True
5  118555.775781  118455.375732 -82947.235693  118555.775781   100.400  118455.375732       0.45  99.950049        0.100000     1.0    118254.025781         False          False   True
6  118555.775781  118555.225781 -82870.673193  118555.775781    99.900  118555.225781       0.45   0.100000      -23.337500     2.0    118254.025781         False          False   True
7  118605.625781  118578.663330 -82797.185693  118605.625781    49.950  118578.663330       0.45  26.512451        0.000000     1.0    118254.025781         False          False   True
8  118605.625781  118605.175781 -82720.623291  118605.625781    24.975  118605.175781       0.45   0.000000      -23.437598     2.0    118254.025781         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/10.[0m
[08/10 16:30:50]  --------------------------------------------------------------------------------
[08/10 16:30:50]  Iteration: 199 (15 solution, 183 counterexamples)
[08/10 16:31:21]  Generator returned sat in 24.655523 secs.
[08/10 16:31:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:31:22]  Improved gap from 0 to 48.4375
[08/10 16:31:22]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 16:31:22]  Verifer returned sat in 0.579269 secs.
[08/10 16:31:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  118112.225830  118012.125732 -82947.235840  118112.225830  344.350000  118012.125732   0.100098  100.000000      100.000000     3.0    118012.125732            -1             -1     -1
1  118356.475830  118112.125732 -82947.235840  118356.475830  344.250000  118112.125732   0.200195  244.149902      244.149902     3.0    118356.275635         False          False   True
2  118456.375977  118112.125732 -82947.235840  118456.375977  344.050049  118112.125732   0.200195  344.050049      244.050049     3.0    118456.175781         False          False   True
3  118456.375977  118312.125732 -82947.235840  118456.375977   48.537354  118312.125732   0.200195  144.050049      144.050049     3.0    118456.175781         False          False   True
4  118456.375977  118407.538330 -82947.235840  118456.375977   48.537354  118407.538330   0.200195   48.637451       44.050049     3.0    118456.175781         False          False   True
5  118456.375977  118412.125732 -82895.673340  118456.375977   48.537354  118412.125732   0.200195   44.050049       -4.387451     4.0    118456.175781         False          False   True
6  118460.863281  118460.563477 -82844.111084  118460.863281   48.537354  118460.563477   0.200195    0.099609      -48.337891     1.0    118456.175781         False          False   True
7  118509.301025  118509.000977 -82792.548584  118509.301025   48.537354  118509.000977   0.200195    0.099854      -48.337646     1.0    118456.175781         False          False   True
8  118557.738525  118557.438477 -82792.548584  118557.738525   48.537354  118557.438477   0.200195    0.099854      -99.900146     1.0    118456.175781         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=500019/2048.[0m
[08/10 16:31:23]  --------------------------------------------------------------------------------
[08/10 16:31:23]  Iteration: 200 (15 solution, 184 counterexamples)
[08/10 16:33:03]  Generator returned sat in 94.606187 secs.
[08/10 16:33:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:33:05]  Verifer returned unsat in 0.853867 secs.
[08/10 16:33:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:33:05]  --------------------------------------------------------------------------------
[08/10 16:33:05]  Iteration: 201 (16 solution, 184 counterexamples)
[08/10 16:33:25]  Generator returned sat in 13.721910 secs.
[08/10 16:33:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:33:27]  Verifer returned unsat in 1.945462 secs.
[08/10 16:33:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:33:27]  --------------------------------------------------------------------------------
[08/10 16:33:27]  Iteration: 202 (17 solution, 184 counterexamples)
[08/10 16:33:47]  Generator returned sat in 12.849221 secs.
[08/10 16:33:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:33:51]  Verifer returned unsat in 3.796627 secs.
[08/10 16:33:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:33:51]  --------------------------------------------------------------------------------
[08/10 16:33:51]  Iteration: 203 (18 solution, 184 counterexamples)
[08/10 16:34:08]  Generator returned sat in 9.997618 secs.
[08/10 16:34:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:34:09]  Verifer returned unsat in 1.221394 secs.
[08/10 16:34:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:34:09]  --------------------------------------------------------------------------------
[08/10 16:34:09]  Iteration: 204 (19 solution, 184 counterexamples)
[08/10 16:34:30]  Generator returned sat in 14.365341 secs.
[08/10 16:34:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:34:32]  Verifer returned unsat in 1.466351 secs.
[08/10 16:34:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:34:32]  --------------------------------------------------------------------------------
[08/10 16:34:32]  Iteration: 205 (20 solution, 184 counterexamples)
[08/10 16:34:59]  Generator returned sat in 20.027146 secs.
[08/10 16:34:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:01]  Verifer returned unsat in 1.537424 secs.
[08/10 16:35:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:01]  --------------------------------------------------------------------------------
[08/10 16:35:01]  Iteration: 206 (21 solution, 184 counterexamples)
[08/10 16:35:20]  Generator returned sat in 12.732381 secs.
[08/10 16:35:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:25]  Verifer returned unsat in 4.651830 secs.
[08/10 16:35:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:25]  --------------------------------------------------------------------------------
[08/10 16:35:25]  Iteration: 207 (22 solution, 184 counterexamples)
[08/10 16:35:41]  Generator returned sat in 9.546682 secs.
[08/10 16:35:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:45]  Verifer returned unsat in 2.981492 secs.
[08/10 16:35:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:45]  --------------------------------------------------------------------------------
[08/10 16:35:45]  Iteration: 208 (23 solution, 184 counterexamples)
[08/10 16:36:01]  Generator returned sat in 9.841169 secs.
[08/10 16:36:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:04]  Verifer returned unsat in 2.399197 secs.
[08/10 16:36:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:04]  --------------------------------------------------------------------------------
[08/10 16:36:04]  Iteration: 209 (24 solution, 184 counterexamples)
[08/10 16:36:22]  Generator returned sat in 11.428509 secs.
[08/10 16:36:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:25]  Verifer returned unsat in 2.801011 secs.
[08/10 16:36:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:25]  --------------------------------------------------------------------------------
[08/10 16:36:25]  Iteration: 210 (25 solution, 184 counterexamples)
[08/10 16:36:41]  Generator returned sat in 9.512692 secs.
[08/10 16:36:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:46]  Verifer returned unsat in 4.410104 secs.
[08/10 16:36:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:46]  --------------------------------------------------------------------------------
[08/10 16:36:46]  Iteration: 211 (26 solution, 184 counterexamples)
[08/10 16:37:02]  Generator returned sat in 9.773463 secs.
[08/10 16:37:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:04]  Verifer returned unsat in 1.550399 secs.
[08/10 16:37:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:04]  --------------------------------------------------------------------------------
[08/10 16:37:04]  Iteration: 212 (27 solution, 184 counterexamples)
[08/10 16:37:22]  Generator returned sat in 10.948817 secs.
[08/10 16:37:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:24]  Verifer returned unsat in 1.443619 secs.
[08/10 16:37:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:24]  --------------------------------------------------------------------------------
[08/10 16:37:24]  Iteration: 213 (28 solution, 184 counterexamples)
[08/10 16:37:45]  Generator returned sat in 14.589014 secs.
[08/10 16:37:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:46]  Verifer returned unsat in 0.632137 secs.
[08/10 16:37:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:46]  --------------------------------------------------------------------------------
[08/10 16:37:46]  Iteration: 214 (29 solution, 184 counterexamples)
[08/10 16:38:02]  Generator returned sat in 9.986782 secs.
[08/10 16:38:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:38:05]  Verifer returned unsat in 1.859851 secs.
[08/10 16:38:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:38:05]  --------------------------------------------------------------------------------
[08/10 16:38:05]  Iteration: 215 (30 solution, 184 counterexamples)
[08/10 16:38:24]  Generator returned sat in 12.472928 secs.
[08/10 16:38:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:38:27]  Verifer returned unsat in 3.177155 secs.
[08/10 16:38:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:38:27]  --------------------------------------------------------------------------------
[08/10 16:38:27]  Iteration: 216 (31 solution, 184 counterexamples)
[08/10 16:38:44]  Generator returned sat in 10.126965 secs.
[08/10 16:38:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:38:47]  Verifer returned unsat in 2.362818 secs.
[08/10 16:38:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:38:47]  --------------------------------------------------------------------------------
[08/10 16:38:47]  Iteration: 217 (32 solution, 184 counterexamples)
[08/10 16:39:03]  Generator returned sat in 9.552305 secs.
[08/10 16:39:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:39:05]  Verifer returned unsat in 1.380010 secs.
[08/10 16:39:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:39:05]  --------------------------------------------------------------------------------
[08/10 16:39:05]  Iteration: 218 (33 solution, 184 counterexamples)
[08/10 16:39:21]  Generator returned sat in 9.932470 secs.
[08/10 16:39:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:39:25]  Verifer returned unsat in 2.994549 secs.
[08/10 16:39:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:39:25]  --------------------------------------------------------------------------------
[08/10 16:39:25]  Iteration: 219 (34 solution, 184 counterexamples)
[08/10 16:39:42]  Generator returned sat in 10.876088 secs.
[08/10 16:39:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:39:46]  Improved number of small numbers from 67 to 71 out of a max of 113
[08/10 16:39:46]  Verifer returned sat in 2.738620 secs.
[08/10 16:39:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  113937.523682  113837.523596 -82947.23584  113937.523682   100.199951  113837.523596        0.1    99.900086       99.900086     3.0    113837.523596            -1             -1     -1
1  113937.823596  113937.523596 -82947.23584  113937.823596   100.200000  113937.523596        0.1     0.200000        0.200000     1.0    113837.523596         False           True   True
2  113937.823596  113937.523596 -82947.23584  113937.823596     0.100098  113937.523596        0.1     0.200000      -99.800000     1.0    113937.723596         False          False   True
3  115258.235360  114037.523596 -82947.23584  115258.235360  1320.611765  114037.523596        0.1  1220.611765     1120.611765     1.0    113937.723596         False          False   True
4  115558.235360  114175.005949 -82947.23584  115558.235360  1520.611765  114175.005949        0.1  1383.129412     1320.611765     2.0    113937.723596         False          False   True
5  115933.200066  114309.000066 -82947.23584  115933.200066  1758.094118  114309.000066        0.1  1624.100000     1595.576471     3.0    113937.723596         False          False   True
6  115933.200066  114437.523596 -82947.23584  115933.200066  1624.000000  114437.523596        0.1  1495.576471     1495.576471     4.0    115933.100066          True           True  False
7  116051.623596  114530.811831 -82947.23584  116051.623596  1614.000000  114530.811831        0.1  1520.711765     1514.000000     5.0    115933.100066         False           True  False
8  116051.623596  114637.523438 -82947.23584  116051.623596  1520.611765  114637.523438        0.1  1414.000158     1414.000000     6.0    115933.100066         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=54253/34.[0m
[08/10 16:39:46]  --------------------------------------------------------------------------------
[08/10 16:39:46]  Iteration: 220 (34 solution, 185 counterexamples)
[08/10 16:41:32]  Generator returned sat in 99.007625 secs.
[08/10 16:41:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:41:33]  Improved gap from 0 to 48.4375
[08/10 16:41:34]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:41:34]  Verifer returned sat in 1.031690 secs.
[08/10 16:41:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  116531.960449  116431.959473 -85636.554199  116531.960449    0.001250  116431.959473   0.001465  99.999512        5.116943     4.0    116431.959473            -1             -1     -1
1  116626.843262  116531.960449 -85636.553955  116626.843262  194.882324  116531.960449   0.001465  94.881348        0.000000     1.0    116431.959473         False          False   True
2  116726.844482  116678.636230 -85636.553955  116726.844482  194.882568  116678.636230   0.001465  48.206787        0.001221     1.0    116431.959473         False          False   True
3  116726.844482  116726.841797 -85584.991455  116726.844482   48.205811  116726.841797   0.001465   0.001221      -48.436279     2.0    116726.843018         False          False   True
4  116875.284424  116875.270752 -85584.991455  116875.284424  148.441162  116875.270752   0.002441   0.011230        0.002686     1.0    116726.843018         False          False   True
5  116875.284424  116875.279297 -85533.429199  116875.284424    0.010000  116875.279297   0.002441   0.002686      -48.435059     2.0    116726.843018         False          False   True
6  116974.603271  116925.126953 -85484.314453  116974.603271   99.321533  116925.126953   0.002441  49.473877       -0.001465     1.0    116726.843018         False          False   True
7  117025.271973  116974.602295 -85434.981689  117025.271973  100.142578  116974.602295   0.002441  50.667236        0.000000     1.0    116726.843018         False          False   True
8  117025.271973  117025.269531 -85434.981445  117025.271973   50.665771  117025.269531   0.002441   0.000000      -99.999756     2.0    116726.843018         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=11/4096.[0m
[08/10 16:41:34]  --------------------------------------------------------------------------------
[08/10 16:41:34]  Iteration: 221 (34 solution, 186 counterexamples)
[08/10 16:43:28]  Generator returned sat in 106.895929 secs.
[08/10 16:43:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:43:30]  Improved gap from 0 to 100
[08/10 16:43:31]  Improved number of small numbers from 53 to 62 out of a max of 114
[08/10 16:43:31]  Verifer returned sat in 2.496190 secs.
[08/10 16:43:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  115536.308838  115536.306790 -85584.991455  115536.308838     0.000488  115536.306790   0.001465     0.000583       -0.998684     1.0     115536.30679            -1             -1     -1
1  115637.306790  115636.308255 -85584.991455  115637.306790   100.998535  115636.308255   0.001465     0.997070       -0.000732     1.0     115536.30679         False          False   True
2  115737.308255  115737.306057 -85584.991455  115737.308255   100.998535  115737.306057   0.001465     0.000732        0.000732     1.0     115536.30679         False          False   True
3  115737.308255  115737.306057 -85584.991455  115737.308255     0.000366  115737.306057   0.001465     0.000732      -99.999268     1.0     115737.30679         False          False   True
4  115837.307888  115837.306057 -85584.991455  115837.307888   100.000366  115837.306057   0.001465     0.000366      -99.999634     1.0     115737.30679         False          False   True
5  116137.307156  115938.808255 -85584.991455  116137.307156   299.999634  115938.808255   0.001465   198.497437       99.999634     1.0     115737.30679         False          False   True
6  116639.060086  116137.306057 -85584.991455  116639.060086   700.250366  116137.306057   0.001465   501.752563      501.752563     1.0     115737.30679         False          False   True
7  117737.308255  116137.306424 -85584.991455  117737.308255  1600.000732  116137.306424   0.001465  1600.000366     1500.000732     2.0     115737.30679         False          False   True
8  117737.308255  116337.305908 -85584.991455  117737.308255   152.000183  116337.305908   0.001465  1400.000882     1400.000732     3.0     117737.30679          True           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6144005/4096.[0m
[08/10 16:43:32]  --------------------------------------------------------------------------------
[08/10 16:43:32]  Iteration: 222 (34 solution, 187 counterexamples)
[08/10 16:47:37]  Generator returned sat in 238.012750 secs.
[08/10 16:47:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:47:38]  Improved gap from 0 to 48.4375
[08/10 16:47:38]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:47:38]  Verifer returned sat in 0.717607 secs.
[08/10 16:47:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  115441.984619  115441.884521 -85490.636230  115441.984619    0.099854  115441.884521        0.0    0.100098       -0.099854     2.0    115441.884521            -1             -1    True
1  115442.084473  115442.084473 -85490.636230  115442.084473    0.199951  115442.084473        0.0    0.000000     -100.000000     1.0    115441.884521         False          False    True
2  115837.596924  115642.084473 -85490.636230  115837.596924  395.512451  115642.084473        0.0  195.512451      195.512451     1.0    115441.884521         False          False    True
3  115837.596924  115742.084473 -85490.636230  115837.596924   52.924805  115742.084473        0.0   95.512451       95.512451     2.0    115837.596924         False          False    True
4  115837.596924  115837.497314 -85490.636230  115837.596924   52.924805  115837.497314        0.0    0.099609       -4.487549     3.0    115837.596924         False          False    True
5  115890.422119  115842.084717 -85439.073975  115890.422119   52.924805  115842.084717        0.0   48.337402       -0.100098     1.0    115837.596924         False          False    True
6  115895.009521  115890.522217 -85387.511475  115895.009521   52.924805  115890.522217        0.0    4.487305      -43.950195     1.0    115837.596924         False          False    True
7  115943.447021  115938.959717 -85335.948975  115943.447021   52.924805  115938.959717        0.0    4.487305      -43.950195     1.0    115837.596924         False          False    True
8  115991.884521  115987.397217 -85335.948975  115991.884521   52.924805  115987.397217        0.0    4.487305      -95.512695     1.0    115837.596924         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=200307/1024.[0m
[08/10 16:47:39]  --------------------------------------------------------------------------------
[08/10 16:47:39]  Iteration: 223 (34 solution, 188 counterexamples)
[08/10 16:48:40]  Generator returned sat in 54.567546 secs.
[08/10 16:48:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:48:42]  Verifer returned unsat in 1.247833 secs.
[08/10 16:48:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:48:42]  --------------------------------------------------------------------------------
[08/10 16:48:42]  Iteration: 224 (35 solution, 188 counterexamples)
[08/10 16:49:01]  Generator returned sat in 13.068454 secs.
[08/10 16:49:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:49:05]  Verifer returned unsat in 2.598155 secs.
[08/10 16:49:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:49:05]  --------------------------------------------------------------------------------
[08/10 16:49:05]  Iteration: 225 (36 solution, 188 counterexamples)
[08/10 16:49:26]  Generator returned sat in 15.271111 secs.
[08/10 16:49:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:49:29]  Verifer returned unsat in 2.001660 secs.
[08/10 16:49:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:49:29]  --------------------------------------------------------------------------------
[08/10 16:49:29]  Iteration: 226 (37 solution, 188 counterexamples)
[08/10 16:49:46]  Generator returned sat in 10.134941 secs.
[08/10 16:49:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:49:48]  Verifer returned unsat in 1.976129 secs.
[08/10 16:49:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:49:48]  --------------------------------------------------------------------------------
[08/10 16:49:48]  Iteration: 227 (38 solution, 188 counterexamples)
[08/10 16:50:05]  Generator returned sat in 10.102737 secs.
[08/10 16:50:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:07]  Verifer returned unsat in 1.940968 secs.
[08/10 16:50:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:07]  --------------------------------------------------------------------------------
[08/10 16:50:07]  Iteration: 228 (39 solution, 188 counterexamples)
[08/10 16:50:26]  Generator returned sat in 11.857996 secs.
[08/10 16:50:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:29]  Verifer returned unsat in 2.415106 secs.
[08/10 16:50:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:29]  --------------------------------------------------------------------------------
[08/10 16:50:29]  Iteration: 229 (40 solution, 188 counterexamples)
[08/10 16:50:46]  Generator returned sat in 10.576396 secs.
[08/10 16:50:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:48]  Verifer returned unsat in 1.902391 secs.
[08/10 16:50:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:48]  --------------------------------------------------------------------------------
[08/10 16:50:48]  Iteration: 230 (41 solution, 188 counterexamples)
[08/10 16:51:05]  Generator returned sat in 10.154470 secs.
[08/10 16:51:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:51:08]  Verifer returned unsat in 2.299555 secs.
[08/10 16:51:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:51:08]  --------------------------------------------------------------------------------
[08/10 16:51:08]  Iteration: 231 (42 solution, 188 counterexamples)
[08/10 16:52:43]  Generator returned sat in 88.098798 secs.
[08/10 16:52:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:52:44]  Improved gap from 1/1600 to 100
[08/10 16:52:45]  Improved number of small numbers from 60 to 71 out of a max of 114
[08/10 16:52:45]  Verifer returned sat in 1.488180 secs.
[08/10 16:52:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  117268.818115  117268.817871 -87317.36971  117268.818115    0.050049  117268.817871       0.00    0.000244        0.000163     1.0    117268.817871            -1             -1   False
1  117368.768066  117268.817952 -87317.36971  117368.768066   99.950195  117268.817952       0.00   99.950114       -0.049886     2.0    117268.817871         False          False   False
2  117479.167952  117368.817952 -87317.36971  117479.167952  210.350000  117368.817952      10.25  100.100000        0.100000     1.0    117268.817871          True           True   False
3  117589.367952  117564.817952 -87317.36971  117589.367952  210.300000  117564.817952      20.45    4.100000        0.100000     1.0    117568.917952         False          False    True
4  117689.417952  117668.817952 -87317.36971  117689.417952  104.150000  117668.817952      20.50    0.100000        0.100000     1.0    117568.917952         False          False    True
5  117740.392952  117705.767952 -87317.36971  117740.392952   51.075000  117705.767952      20.50   14.125000      -48.925000     1.0    117568.917952         False          False    True
6  118164.867952  117768.817952 -87317.36971  118164.867952  438.600000  117768.817952     295.95  100.100000        0.100000     1.0    117568.917952         False          False    True
7  118283.067952  117960.817952 -87317.36971  118283.067952  218.300000  117960.817952     314.15    8.100000        0.100000     1.0    117568.917952         False          False    True
8  118383.117952  117968.968018 -87317.36971  118383.117952  108.150000  117968.968018     314.20   99.949935        0.100000     1.0    117568.917952         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 16:52:45]  --------------------------------------------------------------------------------
[08/10 16:52:45]  Iteration: 232 (42 solution, 189 counterexamples)
[08/10 16:54:14]  Generator returned sat in 82.616742 secs.
[08/10 16:54:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:54:16]  Improved gap from 0 to 23.4375
[08/10 16:54:16]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 16:54:16]  Verifer returned sat in 0.953471 secs.
[08/10 16:54:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  117245.280762  117045.305420 -87093.857422  117245.280762    0.025000  117045.305420   0.000000  199.975342      199.975098     2.0    117045.305420            -1             -1   False
1  117368.768066  117045.305664 -87093.857422  117368.768066  323.462646  117045.305664   0.024902  323.437500      223.437500     2.0    117045.305420         False          False   False
2  117468.793213  117245.305664 -87093.857422  117468.793213  423.462646  117245.305664   0.050049  223.437500      223.437500     2.0    117045.305420         False          False    True
3  117568.818115  117345.305420 -87093.857422  117568.818115  323.462402  117345.305420   0.074951  223.437744      223.437500     3.0    117568.743164         False          False    True
4  117568.818115  117442.205566 -87093.857422  117568.818115  162.731201  117442.205566   0.074951  126.537598      123.437500     3.0    117568.743164         False          False    True
5  117568.818115  117545.280518 -87093.857422  117568.818115    0.500000  117545.280518   0.074951   23.462646       23.437500     3.0    117568.743164         False          False    True
6  117568.818115  117545.305664 -87017.294922  117568.818115    0.500000  117545.305664   0.074951   23.437500        0.000000     4.0    117568.743164         False          False    True
7  117568.818115  117568.743164 -86940.732422  117568.818115    0.500000  117568.743164   0.074951    0.000000      -23.437500     5.0    117568.743164         False          False    True
8  117696.355713  117592.180664 -86940.732422  117696.355713  127.537598  117592.180664   0.074951  104.100098        4.100098     1.0    117568.743164         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 16:54:17]  --------------------------------------------------------------------------------
[08/10 16:54:17]  Iteration: 233 (42 solution, 190 counterexamples)
[08/10 16:54:44]  Generator returned sat in 20.982548 secs.
[08/10 16:54:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:54:47]  Improved gap from 1/40 to 0
[08/10 16:54:47]  Improved number of small numbers from 88 to 114 out of a max of 114
[08/10 16:54:47]  Verifer returned sat in 2.089168 secs.
[08/10 16:54:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  116545.555664  116446.555420 -87096.207520  116545.555664   98.999756  116446.555420        0.0  99.000244       97.650146     2.0    116446.555420            -1             -1   False
1  116545.555664  116447.905762 -87093.857666  116545.555664   98.949951  116447.905762        0.0  97.649902        0.000000     2.0    116545.555664         False          False   False
2  116546.805664  116546.755615 -87093.857422  116546.805664   98.899902  116546.755615        0.0   0.050049      -98.749756     1.0    116546.805664         False          False   False
3  116645.605713  116645.555420 -87093.857422  116645.605713   98.850098  116645.555420        0.0   0.050293      -99.949707     1.0    116645.605713         False          False   False
4  116845.555420  116845.505615 -87093.857422  116845.555420  200.000000  116845.505615        0.0   0.049805        0.000000     1.0    116645.605713         False          False   False
5  117244.105469  116944.055664 -87093.857422  117244.105469  398.599854  116944.055664      298.0   2.049805        0.550049     1.0    116645.605713         False          False   False
6  117244.105469  116945.555664 -86994.407471  117244.105469    2.000000  116945.555664      298.0   0.549805        0.000000     2.0    116645.605713         False          False    True
7  117244.105469  116946.105469 -86894.407471  117244.105469    0.500000  116946.105469      298.0   0.000000        0.000000     3.0    116645.605713         False          False    True
8  117244.605469  116946.155518 -86894.407471  117244.605469    0.500000  116946.155518      298.0   0.449951      -99.500000     1.0    116645.605713         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=2253/4096.[0m
[08/10 16:54:48]  --------------------------------------------------------------------------------
[08/10 16:54:48]  Iteration: 234 (42 solution, 191 counterexamples)
[08/10 16:56:08]  Generator returned sat in 73.412787 secs.
[08/10 16:56:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:56:09]  Improved gap from 1/20 to 100
[08/10 16:56:09]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:56:09]  Verifer returned sat in 0.628034 secs.
[08/10 16:56:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118768.585449  118572.585449 -87093.357666  118768.585449  196.049805  118572.585449   0.000000  196.000000      195.949951     2.0    118572.585449            -1             -1   False
1  118768.635254  118572.635498 -87093.357666  118768.635254  196.049805  118572.635498   0.049805  195.949951       95.949951     2.0    118572.585449         False          False   False
2  118868.585449  118672.635498 -87093.357666  118868.585449  295.900146  118672.635498   0.049805  195.900146       95.900146     3.0    118572.585449         False          False    True
3  118968.585449  118868.585449 -87093.357666  118968.585449  295.900146  118868.585449   0.049805   99.950195       95.900146     1.0    118572.585449          True           True   False
4  119018.635254  118972.635498 -87093.357666  119018.635254  150.000000  118972.635498   0.049805   45.949951       45.949951     1.0    118572.585449         False          False   False
5  119174.685303  119068.635498 -87093.357666  119174.685303  202.000000  119068.635498   6.099854   99.949951       95.949951     1.0    118572.585449         False          False   False
6  119274.735352  119170.635498 -87093.357666  119274.735352  200.000000  119170.635498   6.149902   97.949951       95.949951     1.0    118572.585449         False          False    True
7  119374.785400  119272.635498 -87093.357666  119374.785400  198.000000  119272.635498   6.199951   95.949951       95.949951     1.0    118572.585449         False          False    True
8  119474.835449  119368.635498 -87093.357666  119474.835449  196.000000  119368.635498   6.250000   99.949951       95.949951     1.0    118572.585449         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=393011/4096.[0m
[08/10 16:56:10]  --------------------------------------------------------------------------------
[08/10 16:56:10]  Iteration: 235 (42 solution, 192 counterexamples)
[08/10 16:57:35]  Generator returned sat in 78.524014 secs.
[08/10 16:57:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:57:40]  Improved gap from 0 to 31.25
[08/10 16:57:41]  Improved number of small numbers from 63 to 78 out of a max of 114
[08/10 16:57:41]  Verifer returned sat in 5.512134 secs.
[08/10 16:57:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118872.710449  118711.835498 -87332.557617  118872.710449  160.974854  118711.835498     0.0000  160.874951       60.875000     2.0    118711.835498            -1             -1   False
1  118872.710449  118841.460498 -87293.432666  118872.710449  160.874756  118841.460498     0.0000   31.249951       -0.000049     2.0    118872.710449         False          False   False
2  119002.335498  118972.610498 -87293.432666  119002.335498  160.875000  118972.610498    28.4875    1.237500        1.137500     1.0    118872.710449         False          False   False
3  119002.335498  118972.710498 -87224.682666  119002.335498    0.100000  118972.710498    28.4875    1.137500      -30.112500     2.0    118973.847998         False          False    True
4  119133.685498  119102.997803 -87224.682666  119133.685498  132.487500  119102.997803    28.5875    2.100195        1.137500     1.0    118973.847998         False          False    True
5  119133.685498  119103.960498 -87155.932666  119133.685498    2.000000  119103.960498    28.5875    1.137500      -30.112500     2.0    118973.847998         False          False    True
6  119201.222998  119135.210498 -87093.357910  119201.222998   68.675000  119135.210498    28.5875   37.425000       -0.000244     1.0    118973.847998         False          False    True
7  119281.385498  119172.735498 -87073.520264  119281.385498  117.587500  119172.735498    28.5875   80.062500       -0.000098     1.0    118973.847998         False          False    True
8  119296.985596  119252.897949 -87073.520264  119296.985596   95.662598  119252.897949    28.5875   15.500146      -84.400000     1.0    118973.847998         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=91/80.[0m
[08/10 16:57:42]  --------------------------------------------------------------------------------
[08/10 16:57:42]  Iteration: 236 (42 solution, 193 counterexamples)
[08/10 17:00:03]  Generator returned sat in 134.533158 secs.
[08/10 17:00:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:04]  Improved gap from 1/20 to 100
[08/10 17:00:04]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 17:00:04]  Verifer returned sat in 0.499737 secs.
[08/10 17:00:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  118872.710449  118072.760254 -86593.482666  118872.710449     0.099854  118072.760254    0.000000   799.950195      799.950195     8.0    118072.760254            -1             -1   False
1  118872.710449  118172.760254 -86593.482666  118872.710449     0.050000  118172.760254    0.000000   699.950195      699.950195     7.0    118872.710449         False          False   False
2  119874.910400  118172.760498 -86593.482666  119874.910400  1702.150146  118172.760498  102.000000  1600.149902     1500.150146     7.0    118872.710449         False          False   False
3  119976.860352  118272.760498 -86593.482666  119976.860352  1702.099854  118272.760498  103.949951  1600.149902     1500.150146     8.0    119872.910400         False          False    True
4  120076.810303  118372.760498 -86593.482666  120076.810303  1700.099854  118372.760498  103.949951  1600.099854     1500.100098     9.0    119872.910400         False          False    True
5  120176.810303  118472.810547 -86593.482666  120176.810303  1700.099854  118472.810547  103.949951  1600.049805     1500.100098     7.0    119872.910400         False           True   False
6  120276.860352  118572.760498 -86593.482666  120276.860352  1700.099854  118572.760498  103.949951  1600.149902     1500.150146     7.0    119872.910400         False          False   False
7  120376.810303  118672.760498 -86593.482666  120376.810303  1700.099854  118672.760498  103.949951  1600.099854     1500.100098     8.0    119872.910400         False          False   False
8  120476.810303  118872.760254 -86593.482666  120476.810303  1700.099854  118872.760254  103.949951  1500.100098     1500.100098     7.0    119872.910400         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=6144615/4096.[0m
[08/10 17:00:05]  --------------------------------------------------------------------------------
[08/10 17:00:05]  Iteration: 237 (42 solution, 194 counterexamples)
[08/10 17:00:42]  Generator returned sat in 30.828218 secs.
[08/10 17:00:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:44]  Improved gap from 0 to 23.4375
[08/10 17:00:45]  Improved number of small numbers from 97 to 114 out of a max of 114
[08/10 17:00:45]  Verifer returned sat in 1.747279 secs.
[08/10 17:00:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  119576.610352  119476.660400 -86896.657471  119576.610352    0.049805  119476.660400    0.000000   99.949951       -0.049805     4.0    119476.660400            -1             -1   False
1  119600.047852  119576.660156 -86820.094971  119600.047852  123.387451  119576.660156    0.000000   23.387695       -0.049805     1.0    119476.660400         False          False   False
2  119623.535156  119600.097656 -86743.532715  119623.535156   46.875000  119600.097656    0.000000   23.437500       -0.000244     1.0    119623.535156         False          False   False
3  120097.847656  119623.585449 -86743.532715  120097.847656  497.750000  119623.585449  150.874756  323.387451      223.437500     1.0    119623.535156         False          False   False
4  120097.847656  119823.535400 -86743.532715  120097.847656  246.875000  119823.535400  150.874756  123.437500      123.437500     2.0    119623.535156         False          False    True
5  120097.847656  119923.485352 -86743.532715  120097.847656    0.500000  119923.485352  150.874756   23.487549       23.437500     3.0    119623.535156         False          False    True
6  120097.847656  119923.535400 -86666.970215  120097.847656    0.500000  119923.535400  150.874756   23.437500        0.000000     4.0    119623.535156         False          False    True
7  120097.847656  119946.972900 -86593.482910  120097.847656    0.500000  119946.972900  150.874756    0.000000      -26.512695     5.0    119623.535156         False          False    True
8  120344.722656  119973.485596 -86593.482910  120344.722656  246.875000  119973.485596  150.874756  220.362305      120.362305     1.0    120193.847900          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 17:00:45]  --------------------------------------------------------------------------------
[08/10 17:00:45]  Iteration: 238 (42 solution, 195 counterexamples)
[08/10 17:01:22]  Generator returned sat in 30.440680 secs.
[08/10 17:01:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:01:28]  Improved gap from 367/16 to 23.4375
[08/10 17:01:28]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 17:01:28]  Verifer returned sat in 4.788529 secs.
[08/10 17:01:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  115568.187500  115468.287842 -86820.145508  115568.187500   99.899902  115468.287842      0.000   99.899658       99.899658     2.0    115468.287842            -1             -1   False
1  115568.187744  115491.824951 -86820.145264  115568.187744   99.899902  115491.824951      0.000   76.362793       -0.099854     2.0    115468.287842         False          False   False
2  115591.725098  115568.287842 -86743.583008  115591.725098   99.900146  115568.287842      0.000   23.437256       -0.000244     1.0    115468.287842         False          False   False
3  116066.537842  115667.937744 -86743.583008  116066.537842  498.250000  115667.937744    151.375  247.225098      223.437500     1.0    115468.287842         False          False   False
4  116066.537842  115791.725342 -86743.583008  116066.537842  247.125000  115791.725342    151.375  123.437500      123.437500     2.0    115468.287842         False          False    True
5  116066.537842  115891.625000 -86743.583008  116066.537842    0.500000  115891.625000    151.375   23.537842       23.437500     3.0    115468.287842         False          False    True
6  116066.537842  115891.725342 -86667.020508  116066.537842    0.500000  115891.725342    151.375   23.437500        0.000000     4.0    115468.287842         False          False    True
7  116066.537842  115915.162842 -86593.482910  116066.537842    0.500000  115915.162842    151.375    0.000000      -26.462402     5.0    115468.287842         False          False    True
8  116313.662842  115941.625244 -86593.482910  116313.662842  247.125000  115941.625244    151.375  220.662598      120.662598     1.0    116162.287842          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 17:01:29]  --------------------------------------------------------------------------------
[08/10 17:01:29]  Iteration: 239 (42 solution, 196 counterexamples)
[08/10 17:02:23]  Generator returned sat in 48.020387 secs.
[08/10 17:02:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:26]  Improved gap from 0 to 12.5
[08/10 17:02:26]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 17:02:26]  Verifer returned sat in 2.236946 secs.
[08/10 17:02:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  113956.703857  113769.303711 -86743.583008  113956.703857  187.600098  113769.303711        0.0  187.400146       87.400391     2.0    113769.303711            -1             -1   False
1  113956.803711  113956.803711 -86743.583008  113956.803711  187.500000  113956.803711        0.0    0.000000      -12.499756     1.0    113956.803711         False          False   False
2  114399.403564  113969.303711 -86743.583008  114399.403564  442.599854  113969.303711        0.0  430.099854      330.100098     1.0    113956.803711         False          False   False
3  114399.403564  114169.303467 -86743.583008  114399.403564  430.000000  114169.303467        0.0  230.100098      230.100098     2.0    114399.403564         False          False   False
4  114399.403564  114262.103760 -86743.583008  114399.403564  214.000000  114262.103760        0.0  137.299805      130.100098     3.0    114399.403564         False          False   False
5  114399.403564  114347.303711 -86743.583008  114399.403564  106.000000  114347.303711        0.0   52.099854       30.100098     4.0    114399.403564         False           True   False
6  114399.403564  114387.003662 -86673.783203  114399.403564   52.000000  114387.003662        0.0   12.399902       -0.100098     5.0    114399.403564         False           True   False
7  114412.003662  114399.503662 -86586.283203  114412.003662   25.000000  114399.503662        0.0   12.500000        0.000000     1.0    114399.403564         False           True   False
8  114412.003662  114412.003662 -86586.283203  114412.003662   11.500000  114412.003662        0.0    0.000000     -100.000000     2.0    114399.403564         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1352499/4096.[0m
[08/10 17:02:27]  --------------------------------------------------------------------------------
[08/10 17:02:27]  Iteration: 240 (42 solution, 197 counterexamples)
[08/10 17:04:10]  Generator returned sat in 96.774340 secs.
[08/10 17:04:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:04:12]  Improved gap from 0 to 100
[08/10 17:04:12]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 17:04:12]  Verifer returned sat in 0.948293 secs.
[08/10 17:04:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  111200.613770  110900.563477 -86743.583008  111200.613770     0.049805  110900.563477     0.050049   300.000244      300.000244     9.0    110900.563477            -1             -1     -1
1  111200.613770  110900.563721 -86743.583008  111200.613770   299.949951  110900.563721     0.050049   300.000000      200.000244     9.0    110900.563477         False           True   True
2  111200.613770  111100.563477 -86743.583008  111200.613770   299.950195  111100.563477     0.050049   100.000244      100.000244     8.0    110900.563477          True           True  False
3  114296.813721  111200.513916 -86743.583008  114296.813721  3196.200195  111200.513916  1497.600098  1598.699707     1598.650146     8.0    110900.563477         False          False  False
4  114296.813721  111200.563477 -86743.583008  114296.813721  1598.100098  111200.563477  1497.600098  1598.650146     1498.650146     9.0    110900.563477         False          False   True
5  114296.813721  111400.563477 -86743.583008  114296.813721  1598.600098  111400.563477  1497.600098  1398.650146     1398.650146     3.0    112799.213623          True           True  False
6  114497.263672  111500.563477 -86743.583008  114497.263672  1599.100098  111500.563477  1497.600098  1499.100098     1499.100098     4.0    112799.213623         False          False  False
7  114597.763672  111600.563477 -86743.583008  114597.763672  1599.600098  111600.563477  1497.600098  1499.600098     1499.600098     5.0    112799.213623         False          False  False
8  114698.263672  111600.613770 -86743.583008  114698.263672  1600.100098  111600.613770  1497.600098  1600.049805     1500.100098     6.0    112799.213623         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6548071/4096.[0m
[08/10 17:04:13]  --------------------------------------------------------------------------------
[08/10 17:04:13]  Iteration: 241 (42 solution, 198 counterexamples)
[08/10 17:04:59]  Generator returned sat in 39.365629 secs.
[08/10 17:05:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:05:01]  Improved gap from 0 to 17.1875
[08/10 17:05:01]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 17:05:01]  Verifer returned sat in 1.439220 secs.
[08/10 17:05:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  111428.233643  110999.133789 -86743.583008  111428.233643    0.100000  110999.133789        0.0  429.099854      400.000000     7.0    110999.133789            -1             -1    True
1  111428.333740  111028.233643 -86743.583008  111428.333740  429.199951  111028.233643        0.0  400.100098      300.100098     7.0    110999.133789         False          False    True
2  111457.333740  111128.233887 -86743.583008  111457.333740  429.100098  111128.233887        0.0  329.099854      229.100098     6.0    111457.333740         False          False    True
3  111557.233887  111328.233643 -86743.583008  111557.233887  429.000000  111328.233643        0.0  229.000244      229.000244     7.0    111557.233887         False          False    True
4  111557.233887  111428.233643 -86743.583008  111557.233887  215.000000  111428.233643        0.0  129.000244      129.000244     8.0    111557.233887         False          False    True
5  111557.233887  111457.433838 -86743.583008  111557.233887  109.500000  111457.433838        0.0   99.800049       29.000244     3.0    111557.233887         False           True   False
6  111557.233887  111543.758545 -86676.295410  111557.233887   56.750000  111543.758545        0.0   13.475342       -3.712158     4.0    111557.233887         False          False   False
7  111574.133545  111560.946045 -86593.482910  111574.133545   30.375000  111560.946045        0.0   13.187500       -4.000000     1.0    111557.233887         False          False   False
8  111578.133545  111578.133545 -86593.482910  111578.133545   17.187500  111578.133545        0.0    0.000000     -100.000000     1.0    111557.233887         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=307405/1024.[0m
[08/10 17:05:02]  --------------------------------------------------------------------------------
[08/10 17:05:02]  Iteration: 242 (42 solution, 199 counterexamples)
[08/10 17:07:49]  Generator returned sat in 159.839090 secs.
[08/10 17:07:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:07:52]  Improved gap from 1/10 to 46.875
[08/10 17:07:52]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 17:07:52]  Verifer returned sat in 2.908267 secs.
[08/10 17:07:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  110861.843506  110661.793701 -86743.583008  110861.843506    0.025146  110661.793701    0.024902  200.024902      100.024902     1.0    110661.793701            -1             -1     -1
1  110861.843506  110861.793457 -86743.583008  110861.843506    0.025146  110861.793457    0.024902    0.025146        0.024902     2.0    110661.793701         False          False   True
2  111074.643555  110959.718506 -86743.583008  111074.643555  212.825195  110959.718506  112.800049    2.125000        0.049805     1.0    110661.793701          True           True  False
3  111285.318359  111053.468750 -86743.583008  111285.318359  212.799805  111053.468750  223.474854    8.374756        0.049805     1.0    111061.843506         False          False   True
4  111385.343506  111161.793457 -86743.583008  111385.343506  108.399902  111161.793457  223.500000    0.050049        0.049805     1.0    111061.843506         False          False   True
5  111441.493408  111161.818604 -86699.783203  111441.493408   56.199951  111161.818604  223.500000   56.174805       -0.000488     2.0    111061.843506         False          False   True
6  111488.368652  111218.018555 -86646.682861  111488.368652  103.050049  111218.018555  223.500000   46.850098       -0.024902     1.0    111264.868652          True           True  False
7  111525.793457  111264.893555 -86593.557861  111525.793457   84.274902  111264.893555  223.500000   37.399902       -9.475098     1.0    111264.868652         False          False  False
8  111541.943604  111311.768555 -86593.557861  111541.943604   53.550049  111311.768555  223.500000    6.675049      -93.324951     1.0    111264.868652         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=51/1024.[0m
[08/10 17:07:53]  --------------------------------------------------------------------------------
[08/10 17:07:53]  Iteration: 243 (42 solution, 200 counterexamples)
[08/10 17:08:26]  Generator returned sat in 25.685995 secs.
[08/10 17:08:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:08:29]  Verifer returned unsat in 2.345063 secs.
[08/10 17:08:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:08:29]  --------------------------------------------------------------------------------
[08/10 17:08:29]  Iteration: 244 (43 solution, 200 counterexamples)
[08/10 17:09:26]  Generator returned sat in 50.727109 secs.
[08/10 17:09:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:09:31]  Improved gap from 1/5 to 48.4375
[08/10 17:09:32]  Improved number of small numbers from 68 to 75 out of a max of 114
[08/10 17:09:32]  Verifer returned sat in 5.011265 secs.
[08/10 17:09:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  111088.092638  110988.071777 -86743.583008  111088.092638  100.000000  110988.071777    0.020833  100.000027      100.000000     1.0    110988.071777            -1             -1     -1
1  111088.092638  110988.071804 -86743.583008  111088.092638   99.979004  110988.071804    0.020833  100.000000        0.000000     2.0    111088.071804         False          False   True
2  111188.530138  111188.071804 -86743.583008  111188.530138  200.437500  111188.071804    0.416667    0.041667        0.041667     1.0    111088.071804         False           True  False
3  111388.905138  111288.071804 -86743.583008  111388.905138  200.416667  111288.071804  100.791667    0.041667        0.041667     1.0    111288.113471         False          False   True
4  111491.071804  111383.467638 -86743.583008  111491.071804  102.208333  111383.467638  102.958333    4.645833        0.041667     1.0    111288.113471         False          False   True
5  111539.530138  111388.134277 -86692.083008  111539.530138   53.104167  111388.134277  102.958333   48.437527        0.000000     1.0    111288.113471         False          False   True
6  111539.530138  111436.571804 -86640.520508  111539.530138   26.552083  111436.571804  102.958333    0.000000      -48.437500     2.0    111288.113471         False          False   True
7  111629.056179  111485.009304 -86588.958008  111629.056179   89.526042  111485.009304  102.958333   41.088542       -7.348958     1.0    111526.097846          True           True  False
8  111685.501492  111533.447021 -86538.054443  111685.501492   97.533854  111533.447021  102.958333   49.096137       -0.000081     1.0    111526.097846         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/24.[0m
[08/10 17:09:33]  --------------------------------------------------------------------------------
[08/10 17:09:33]  Iteration: 245 (43 solution, 201 counterexamples)
[08/10 17:12:51]  Generator returned sat in 191.378992 secs.
[08/10 17:12:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:12:52]  Improved gap from 0 to 100
[08/10 17:12:53]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 17:12:53]  Verifer returned sat in 1.216511 secs.
[08/10 17:12:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  110988.072021  110988.071804 -86743.583008  110988.072021  100.200195  110988.071804     0.0000    0.000217        0.000217     1.0    110988.071804            -1             -1   False
1  111088.221804  111087.921804 -86743.583008  111088.221804  100.150000  111087.921804     0.0500    0.250000        0.100000     1.0    111088.171804         False          False   False
2  111188.121804  111188.071804 -86743.583008  111188.121804  100.150000  111188.071804     0.0500    0.000000        0.000000     1.0    111088.171804         False          False    True
3  112003.321804  111188.071804 -86743.583008  112003.321804  815.200000  111188.071804   715.1500  100.100000        0.100000     1.0    111088.171804         False          False    True
4  112309.821804  111288.221804 -86743.583008  112309.821804  406.600000  111288.221804   921.6500   99.950000        0.100000     1.0    111088.171804         False          False    True
5  112412.171804  111488.071804 -86743.583008  112412.171804  202.300000  111488.071804   924.0000    0.100000        0.100000     1.0    111088.171804         False          False    True
6  112512.221804  111572.684082 -86743.583008  112512.221804  100.150000  111572.684082   924.0500   15.487722        0.100000     1.0    111088.171804         False          False    True
7  112545.809082  111621.709304 -86743.583008  112545.809082   49.075000  111621.709304   924.0500    0.049778      -66.312722     1.0    111088.171804         False          False    True
8  112952.359304  111688.072021 -86743.583008  112952.359304  406.600000  111688.072021  1164.1875  100.099783        0.100000     1.0    111088.171804         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 17:12:54]  --------------------------------------------------------------------------------
[08/10 17:12:54]  Iteration: 246 (43 solution, 202 counterexamples)
[08/10 17:14:59]  Generator returned sat in 117.507032 secs.
[08/10 17:14:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:15:01]  Improved gap from 1/400 to 25.0
[08/10 17:15:01]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:15:01]  Verifer returned sat in 1.738295 secs.
[08/10 17:15:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  108792.699463  108692.701660 -84448.213135  108792.699463    0.002500  108692.701660    0.000000  99.997803       99.997559     2.0    108692.701660            -1             -1   False
1  108817.704346  108792.701660 -84448.213135  108817.704346  125.002686  108792.701660    0.000000  25.002686       25.002441     1.0    108692.701660         False          False   False
2  108892.701660  108892.701660 -84448.213135  108892.701660  100.000000  108892.701660    0.000000   0.000000       -0.000244     1.0    108892.701660         False          False   False
3  108991.211670  108991.209229 -84448.213135  108991.211670   98.510010  108991.209229    0.000000   0.002441       -1.490234     1.0    108991.211670         False          False   False
4  109288.216797  109092.701904 -84448.213135  109288.216797  297.007568  109092.701904  170.512451  25.002441       25.002441     1.0    108991.211670         False          False   False
5  109288.216797  109092.704102 -84373.215576  109288.216797    0.010000  109092.704102  170.512451  25.000244        0.000000     2.0    108991.211670         False          False    True
6  109288.216797  109117.704346 -84298.215576  109288.216797    2.000000  109117.704346  170.512451   0.000000      -25.000000     3.0    108991.211670         False          False    True
7  109413.211914  109142.704346 -84298.210693  109413.211914  124.995117  109142.704346  170.512451  99.995117        0.000000     1.0    109242.699463          True           True   False
8  109413.211914  109242.699463 -84298.210693  109413.211914   48.502441  109242.699463  170.512451   0.000000     -100.000000     2.0    109242.699463         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=51205/2048.[0m
[08/10 17:15:02]  --------------------------------------------------------------------------------
[08/10 17:15:02]  Iteration: 247 (43 solution, 203 counterexamples)
[08/10 17:17:09]  Generator returned sat in 119.830410 secs.
[08/10 17:17:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:17:13]  Improved gap from 0 to 0
[08/10 17:17:15]  Improved number of small numbers from 62 to 77 out of a max of 114
[08/10 17:17:15]  Verifer returned sat in 5.304383 secs.
[08/10 17:17:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  108563.735107  108465.743789 -84450.225586  108563.735107    0.001465  108465.743789    0.00000   97.991318       97.987793     4.0    108465.743789            -1             -1    True
1  108563.735107  108465.747539 -84448.213379  108563.735107   97.991250  108465.747539    0.00000   97.987568        0.000000     5.0    108465.743789         False          False    True
2  108563.737539  108563.736289 -84348.217041  108563.737539   97.990000  108563.736289    0.00000    0.001250       -0.001230     1.0    108563.737539          True           True   False
3  108663.738789  108563.738789 -84348.217041  108663.738789  100.002500  108563.738789    0.00000  100.000000        0.000020     1.0    108563.737539         False          False   False
4  108663.738789  108663.738789 -84297.705811  108663.738789   99.998750  108663.738789    0.00000    0.000000      -49.488750     2.0    108563.737539         False          False   False
5  108813.733789  108813.227539 -84297.705811  108813.733789  149.995000  108813.227539    0.49875    0.007500        0.007500     1.0    108563.737539         False          False   False
6  108813.736289  108813.236289 -84197.717041  108813.736289    0.010000  108813.236289    0.49875    0.001250       -0.001230     1.0    108563.737539         False          False    True
7  108814.235039  108813.238789 -84098.214600  108814.235039    0.500000  108813.238789    0.49875    0.497500       -0.000039     1.0    108563.737539         False          False    True
8  108814.237539  108813.737549 -84098.214600  108814.237539    0.500000  108813.737549    0.49875    0.001240      -99.997539     1.0    108563.737539         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3/400.[0m
[08/10 17:17:15]  --------------------------------------------------------------------------------
[08/10 17:17:15]  Iteration: 248 (43 solution, 204 counterexamples)
[08/10 17:17:43]  Generator returned sat in 20.225866 secs.
[08/10 17:17:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:17:47]  Improved gap from 1/3200 to 17.1875
[08/10 17:17:48]  Improved number of small numbers from 59 to 79 out of a max of 114
[08/10 17:17:48]  Verifer returned sat in 4.407529 secs.
[08/10 17:17:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107553.799561  107547.544189 -83863.900146  107553.799561    0.002441  107547.544189     0.0000    6.255371        6.255186     4.0    107547.544189            -1             -1    True
1  107553.799561  107547.544414 -83781.087686  107553.799561    0.002441  107547.544414     0.0000    6.255146      -10.932354     4.0    107547.544189         False          False    True
2  107896.616914  107564.731934 -83781.087686  107896.616914  349.072500  107564.731934     0.0000  331.884980      231.885000     1.0    107547.544189         False          False    True
3  107896.616914  107664.731914 -83781.087686  107896.616914  331.882324  107664.731914     0.0000  231.885000      131.885000     2.0    107896.616914         False          False    True
4  107896.616914  107863.806885 -83781.087686  107896.616914    0.500000  107863.806885     0.0000   32.810029       31.885000     3.0    107896.616914         False          False    True
5  107896.616914  107879.429199 -83712.972686  107896.616914    0.500000  107879.429199     0.0000   17.187715        0.000000     4.0    107896.616914         False          False    True
6  107896.616914  107896.616914 -83630.160186  107896.616914    0.500000  107896.616914     0.0000    0.000000      -17.187500     5.0    107896.616914         False          False    True
7  108245.694414  107913.804443 -83630.160186  108245.694414  349.077500  107913.804443     0.0025  331.887471      231.887500     1.0    107896.616914         False           True   False
8  108245.694414  108013.804443 -83630.160186  108245.694414    0.010000  108013.804443     0.0025  231.887471      131.887500     2.0    107896.616914         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=18551/80.[0m
[08/10 17:17:48]  --------------------------------------------------------------------------------
[08/10 17:17:48]  Iteration: 249 (43 solution, 205 counterexamples)
[08/10 17:20:01]  Generator returned sat in 125.850910 secs.
[08/10 17:20:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:20:04]  Improved gap from 1/10 to 48.4375
[08/10 17:20:05]  Improved number of small numbers from 80 to 88 out of a max of 114
[08/10 17:20:05]  Verifer returned sat in 2.516850 secs.
[08/10 17:20:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107686.074951  107686.073893 -83832.650186  107686.074951    0.001250  107686.073893    0.00000   0.001058      -99.998942     2.0    107686.073893            -1             -1    True
1  107786.075143  107786.073893 -83832.650186  107786.075143  100.001250  107786.073893    0.00000   0.001250      -99.998750     1.0    107686.073893         False          False    True
2  108034.512643  107941.757643 -83832.650186  108034.512643  248.438750  107941.757643    0.00125  92.753750       48.437500     1.0    107686.073893         False          False    True
3  108034.512643  107986.073893 -83781.087686  108034.512643   92.752500  107986.073893    0.00125  48.437500        0.000000     2.0    108034.511393         False          False    True
4  108182.951393  108133.387695 -83781.087686  108182.951393  196.876250  108133.387695    0.00250  49.561198       48.437500     1.0    108034.511393         False          False    True
5  108182.951393  108134.511393 -83729.525186  108182.951393    0.010000  108134.511393    0.00250  48.437500        0.000000     2.0    108034.511393         False          False    True
6  108231.395768  108182.948893 -83677.969727  108231.395768   96.881875  108182.948893    0.00250  48.444375       -0.000166     3.0    108034.511393         False          False    True
7  108283.388893  108232.052734 -83629.962686  108283.388893  100.437500  108232.052734    0.00250  51.333659        0.000000     1.0    108283.386393          True           True   False
8  108283.388893  108283.386393 -83629.962646  108283.388893   51.332520  108283.386393    0.00250   0.000000      -99.999961     2.0    108283.386393         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/10 17:20:05]  --------------------------------------------------------------------------------
[08/10 17:20:05]  Iteration: 250 (43 solution, 206 counterexamples)
[08/10 17:23:33]  Generator returned sat in 200.473766 secs.
[08/10 17:23:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:23:36]  Improved gap from 1/20 to 46.875
[08/10 17:23:37]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:23:37]  Verifer returned sat in 2.927642 secs.
[08/10 17:23:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107366.750244  107266.850342 -83313.426514  107366.750244  109.299805  107266.850342    0.000000  99.899902       99.899902     1.0    107266.850342            -1             -1    True
1  107376.050293  107366.850098 -83313.426514  107376.050293  109.199951  107366.850098    0.199951   9.000244        9.000000     1.0    107375.850342         False          False    True
2  107476.150146  107466.850342 -83313.426514  107476.150146  109.100098  107466.850342    0.299805   9.000000        9.000000     1.0    107475.850342         False          False    True
3  107682.350342  107566.850098 -83313.426514  107682.350342  215.200195  107566.850098  106.500000   9.000244        9.000000     1.0    107475.850342         False          False    True
4  107782.450195  107665.925293 -83313.426514  107782.450195  109.100098  107665.925293  106.599854   9.925049        9.000000     1.0    107475.850342         False          False    True
5  107828.575195  107666.850342 -83268.551514  107828.575195   56.050049  107666.850342  106.599854  55.125000        0.000000     2.0    107475.850342         False          False    True
6  107875.450195  107722.075195 -83215.526367  107875.450195  102.000000  107722.075195  106.599854  46.775146       -0.099854     1.0    107768.850342          True           True   False
7  107908.287598  107768.950195 -83162.401367  107908.287598   79.612549  107768.950195  106.599854  32.737549      -14.137451     1.0    107768.850342         False          False   False
8  107929.062500  107815.825195 -83162.401367  107929.062500   53.512451  107815.825195  106.599854   6.637451      -93.362549     1.0    107768.850342         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=9.[0m
[08/10 17:23:37]  --------------------------------------------------------------------------------
[08/10 17:23:37]  Iteration: 251 (43 solution, 207 counterexamples)
[08/10 17:24:00]  Generator returned sat in 16.038753 secs.
[08/10 17:24:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:24:05]  Verifer returned unsat in 3.656761 secs.
[08/10 17:24:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:24:05]  --------------------------------------------------------------------------------
[08/10 17:24:05]  Iteration: 252 (44 solution, 207 counterexamples)
[08/10 17:25:11]  Generator returned sat in 58.849308 secs.
[08/10 17:25:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:25:13]  Improved gap from 0 to 35.9375
[08/10 17:25:14]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 17:25:14]  Verifer returned sat in 2.227196 secs.
[08/10 17:25:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  107582.350342  107469.812744 -83398.221436  107582.350342    0.100098  107469.812744        0.0  112.537598       99.900146     4.0    107469.812744            -1             -1   False
1  107582.450439  107528.062744 -83398.221436  107582.450439  112.637695  107528.062744        0.0   54.387695        0.000244     2.0    107469.812744         False          False   False
2  107582.450439  107582.450439 -83352.308838  107582.450439   54.287598  107582.450439        0.0    0.000000      -54.087158     2.0    107582.450439         False          False   False
3  107636.637695  107636.537842 -83295.683838  107636.637695   54.187256  107636.537842        0.0    0.099854      -43.274902     1.0    107636.637695         False          False   False
4  107721.900391  107679.912842 -83237.771240  107721.900391   85.362549  107679.912842        0.0   41.987549       -0.099609     1.0    107636.637695         False          False   False
5  107757.837891  107722.000244 -83173.708984  107757.837891   77.925049  107722.000244        0.0   35.837646       -0.099854     1.0    107636.637695         False          False   False
6  107793.775146  107757.937744 -83109.646484  107793.775146   71.774902  107757.937744        0.0   35.837402       -0.100098     1.0    107636.637695         False          False   False
7  107820.637695  107793.875244 -83045.583984  107820.637695   62.699951  107793.875244        0.0   26.762451       -9.175049     1.0    107636.637695         False          False   False
8  107852.856445  107829.812744 -82981.521484  107852.856445   58.981201  107829.812744        0.0   23.043701      -12.893799     1.0    107636.637695         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/10 17:25:14]  --------------------------------------------------------------------------------
[08/10 17:25:14]  Iteration: 253 (44 solution, 208 counterexamples)
[08/10 17:28:14]  Generator returned sat in 172.086002 secs.
[08/10 17:28:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:28:16]  Improved number of small numbers from 58 to 69 out of a max of 113
[08/10 17:28:16]  Verifer returned sat in 1.737095 secs.
[08/10 17:28:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  106623.055908  106523.105713 -83051.575749  106623.055908    0.049805  106523.105713       0.00   99.950195       99.949977     1.0    106523.105713            -1             -1   False
1  106623.055908  106523.105931 -83051.575749  106623.055908    0.049805  106523.105931       0.00   99.949977       -0.050023     2.0    106523.105713         False          False   False
2  106726.455931  106623.105931 -83051.575749  106726.455931  203.350000  106623.105931       3.25  100.100000        0.100000     1.0    106523.105713          True           True   False
3  106829.655931  106823.105931 -83051.575749  106829.655931  203.300000  106823.105931       6.45    0.100000        0.100000     1.0    106823.205931         False          False    True
4  106929.705931  106890.530931 -83051.575749  106929.705931  100.150000  106890.530931       6.50   32.675000        0.100000     1.0    106823.205931         False          False    True
5  106945.605931  106939.055931 -83051.575749  106945.605931   48.575000  106939.055931       6.50    0.050000      -84.000000     1.0    106823.205931         False          False    True
6  107359.155931  107023.105931 -83051.575749  107359.155931  413.600000  107023.105931     235.95  100.100000        0.100000     1.0    106823.205931         False          False    True
7  107464.355931  107223.105931 -83051.575749  107464.355931  205.300000  107223.105931     241.15    0.100000        0.100000     1.0    106823.205931         False          False    True
8  107565.405931  107223.255859 -83051.575749  107565.405931  101.150000  107223.255859     242.20   99.950072        0.100000     1.0    106823.205931         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 17:28:17]  --------------------------------------------------------------------------------
[08/10 17:28:17]  Iteration: 254 (44 solution, 209 counterexamples)
[08/10 17:34:04]  Generator returned sat in 339.160580 secs.
[08/10 17:34:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:34:05]  Improved gap from 1/2400 to 100
[08/10 17:34:06]  Improved number of small numbers from 59 to 80 out of a max of 114
[08/10 17:34:06]  Verifer returned sat in 2.150149 secs.
[08/10 17:34:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  106540.706055  106540.505859 -83051.575749  106540.706055    0.100098  106540.505859    0.00000    0.200195        0.200124     1.0    106540.505859            -1             -1   False
1  106540.706055  106540.506104 -83051.575749  106540.706055    0.100098  106540.506104    0.00000    0.199951      -99.799876     2.0    106540.505859         False          False   False
2  106740.506104  106640.505931 -83051.575749  106740.506104  200.000000  106640.505931    0.00000  100.000173        0.000173     1.0    106540.505859          True           True   False
3  106845.105931  106840.505931 -83051.575749  106845.105931  204.600000  106840.505931    4.40000    0.200000        0.200000     1.0    106540.505859         False          False   False
4  106945.205931  106940.505931 -83051.575749  106945.205931  100.300000  106940.505931    4.50000    0.200000        0.200000     1.0    106540.505859         False          False    True
5  106993.155931  106988.555931 -83051.575749  106993.155931   48.150000  106988.555931    4.50000    0.100000      -51.850000     1.0    106540.505859         False          False    True
6  107412.830931  107140.505931 -83051.575749  107412.830931  419.775000  107140.505931  272.12500    0.200000        0.200000     1.0    106540.505859         False          False    True
7  107620.518431  107240.505931 -83051.575749  107620.518431  207.887500  107240.505931  379.81250    0.200000        0.200000     1.0    106540.505859         False          False    True
8  107722.262181  107240.805908 -83051.575749  107722.262181  101.943750  107240.805908  381.55625   99.900023        0.200000     1.0    106540.505859         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 17:34:07]  --------------------------------------------------------------------------------
[08/10 17:34:07]  Iteration: 255 (44 solution, 210 counterexamples)
[08/10 17:37:07]  Generator returned sat in 172.502195 secs.
[08/10 17:37:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:37:11]  Improved gap from 1/1200 to 18.75
[08/10 17:37:12]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/10 17:37:12]  Verifer returned sat in 4.126490 secs.
[08/10 17:37:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  105555.337158  105357.337181 -81933.231999  105555.337158    0.025146  105357.337181      0.000  197.999977      133.174977     2.0    105357.337181            -1             -1   False
1  105555.362181  105422.162181 -81933.231999  105555.362181  198.025000  105422.162181      0.025  133.175000       33.175000     2.0    105357.337181         False          False   False
2  105620.212181  105620.162181 -81933.231999  105620.212181  198.025000  105620.162181      0.025    0.025000       -1.975000     1.0    105357.337181         False          False    True
3  105755.387181  105722.162181 -81933.231999  105755.387181  135.200000  105722.162181      0.050   33.175000       33.175000     1.0    105755.337181         False          False    True
4  105855.412181  105809.687181 -81933.231999  105855.412181  133.200000  105809.687181      0.075   45.650000       33.175000     1.0    105755.337181         False          False    True
5  105940.962181  105873.762207 -81933.231999  105940.962181  131.200000  105873.762207      0.075   67.124974       18.725000     1.0    105755.337181         False          False    True
6  105940.962181  105922.162181 -81851.981999  105940.962181   67.100000  105922.162181      0.075   18.725000       -0.025000     2.0    105755.337181         False          False    True
7  105957.287181  105940.912181 -81770.731999  105957.287181   35.050000  105940.912181      0.075   16.300000       -2.450000     1.0    105755.337181         False          False    True
8  105960.012181  105959.662354 -81689.482178  105960.012181   19.025000  105959.662354      0.075    0.274827      -18.475179     1.0    105755.337181         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1327/40.[0m
[08/10 17:37:13]  --------------------------------------------------------------------------------
[08/10 17:37:13]  Iteration: 256 (44 solution, 211 counterexamples)
[08/10 17:38:52]  Generator returned sat in 92.014458 secs.
[08/10 17:38:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:38:54]  Verifer returned unsat in 1.202273 secs.
[08/10 17:38:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:38:54]  --------------------------------------------------------------------------------
[08/10 17:38:54]  Iteration: 257 (45 solution, 211 counterexamples)
[08/10 17:39:19]  Generator returned sat in 17.097283 secs.
[08/10 17:39:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:39:20]  Verifer returned unsat in 0.864870 secs.
[08/10 17:39:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:39:20]  --------------------------------------------------------------------------------
[08/10 17:39:20]  Iteration: 258 (46 solution, 211 counterexamples)
[08/10 17:40:10]  Generator returned sat in 42.135860 secs.
[08/10 17:40:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:40:12]  Verifer returned unsat in 1.531798 secs.
[08/10 17:40:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:40:12]  --------------------------------------------------------------------------------
[08/10 17:40:12]  Iteration: 259 (47 solution, 211 counterexamples)
[08/10 17:40:35]  Generator returned sat in 15.488893 secs.
[08/10 17:40:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:40:37]  Verifer returned unsat in 1.731418 secs.
[08/10 17:40:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:40:37]  --------------------------------------------------------------------------------
[08/10 17:40:37]  Iteration: 260 (48 solution, 211 counterexamples)
[08/10 17:41:09]  Generator returned sat in 24.105871 secs.
[08/10 17:41:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:41:11]  Verifer returned unsat in 1.388330 secs.
[08/10 17:41:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:41:11]  --------------------------------------------------------------------------------
[08/10 17:41:11]  Iteration: 261 (49 solution, 211 counterexamples)
[08/10 17:41:32]  Generator returned sat in 14.152921 secs.
[08/10 17:41:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:41:34]  Verifer returned unsat in 1.593666 secs.
[08/10 17:41:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:41:35]  --------------------------------------------------------------------------------
[08/10 17:41:35]  Iteration: 262 (50 solution, 211 counterexamples)
[08/10 17:42:03]  Generator returned sat in 21.216989 secs.
[08/10 17:42:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:42:05]  Verifer returned unsat in 1.375017 secs.
[08/10 17:42:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:42:05]  --------------------------------------------------------------------------------
[08/10 17:42:05]  Iteration: 263 (51 solution, 211 counterexamples)
[08/10 17:42:26]  Generator returned sat in 13.411688 secs.
[08/10 17:42:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:42:28]  Verifer returned unsat in 1.446983 secs.
[08/10 17:42:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:42:28]  --------------------------------------------------------------------------------
[08/10 17:42:28]  Iteration: 264 (52 solution, 211 counterexamples)
[08/10 17:42:53]  Generator returned sat in 16.751065 secs.
[08/10 17:42:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:42:55]  Verifer returned unsat in 1.486088 secs.
[08/10 17:42:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:42:55]  --------------------------------------------------------------------------------
[08/10 17:42:55]  Iteration: 265 (53 solution, 211 counterexamples)
[08/10 17:43:15]  Generator returned sat in 13.064336 secs.
[08/10 17:43:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:18]  Verifer returned unsat in 1.691292 secs.
[08/10 17:43:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:18]  --------------------------------------------------------------------------------
[08/10 17:43:18]  Iteration: 266 (54 solution, 211 counterexamples)
[08/10 17:43:39]  Generator returned sat in 13.737137 secs.
[08/10 17:43:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:43]  Verifer returned unsat in 3.629876 secs.
[08/10 17:43:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:43]  --------------------------------------------------------------------------------
[08/10 17:43:43]  Iteration: 267 (55 solution, 211 counterexamples)
[08/10 17:44:15]  Generator returned sat in 25.008262 secs.
[08/10 17:44:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:44:18]  Verifer returned unsat in 1.360079 secs.
[08/10 17:44:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:44:18]  --------------------------------------------------------------------------------
[08/10 17:44:18]  Iteration: 268 (56 solution, 211 counterexamples)
[08/10 17:44:38]  Generator returned sat in 13.124037 secs.
[08/10 17:44:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:44:40]  Verifer returned unsat in 1.977970 secs.
[08/10 17:44:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:44:41]  --------------------------------------------------------------------------------
[08/10 17:44:41]  Iteration: 269 (57 solution, 211 counterexamples)
[08/10 17:45:02]  Generator returned sat in 14.246626 secs.
[08/10 17:45:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:45:05]  Verifer returned unsat in 1.854892 secs.
[08/10 17:45:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:45:05]  --------------------------------------------------------------------------------
[08/10 17:45:05]  Iteration: 270 (58 solution, 211 counterexamples)
[08/10 17:45:25]  Generator returned sat in 13.307098 secs.
[08/10 17:45:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:45:28]  Verifer returned unsat in 1.687825 secs.
[08/10 17:45:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:45:28]  --------------------------------------------------------------------------------
[08/10 17:45:28]  Iteration: 271 (59 solution, 211 counterexamples)
[08/10 17:45:50]  Generator returned sat in 14.316978 secs.
[08/10 17:45:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:45:59]  Improved gap from 0 to 1.5625
[08/10 17:45:59]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:45:59]  Verifer returned sat in 9.122220 secs.
[08/10 17:45:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   86317.659912   86316.655762 -81125.612061  86317.659912  2.698975  86316.655762        0.0  1.004150        1.004150     4.0     86316.655762            -1             -1   False
1   86319.354736   86317.682861 -81028.311279  86319.354736  2.698975  86317.682861        0.0  1.671875       -0.000244     1.0     86316.655762         False          False   False
2   86319.400879   86319.377930 -80929.896729  86319.400879  1.718018  86319.377930        0.0  0.022949       -1.539551     1.0     86319.400879         False          False   False
3   86322.940430   86320.940430 -80831.919434  86322.940430  3.562500  86320.940430        0.0  2.000000       -0.022705     1.0     86319.400879         False          False   False
4   86323.864014   86322.963379 -80733.482178  86323.864014  2.923584  86322.963379        0.0  0.900635       -0.661865     1.0     86319.400879         False          False   False
5   86326.065430   86324.525879 -80635.044678  86326.065430  3.102051  86324.525879        0.0  1.539551       -0.022949     1.0     86319.400879         False          False   False
6   86327.650879   86326.088379 -80536.607178  86327.650879  3.125000  86326.088379        0.0  1.562500        0.000000     1.0     86319.400879         False          False   False
7   86329.224854   86327.674072 -80438.192871  86329.224854  3.136475  86327.674072        0.0  1.550781       -0.011719     1.0     86319.400879         False          False   False
8   86330.597656   86329.248047 -80339.766846  86330.597656  2.923584  86329.248047        0.0  1.349609       -0.212891     1.0     86319.400879         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=47/1024.[0m
[08/10 17:46:00]  --------------------------------------------------------------------------------
[08/10 17:46:00]  Iteration: 272 (59 solution, 212 counterexamples)
[08/10 17:49:55]  Generator returned sat in 228.066006 secs.
[08/10 17:49:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:49:57]  Improved gap from 1/32 to 100
[08/10 17:49:57]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 17:49:57]  Verifer returned sat in 0.925776 secs.
[08/10 17:49:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   85318.344482   85218.344727 -80339.766846  85318.344482    0.050049  85218.344727    0.000000   99.999756       -0.000244     2.0     85218.344727            -1             -1    True
1   85318.394531   85318.344727 -80339.766846  85318.394531  100.049805  85318.344727    0.000000    0.049805      -99.950195     1.0     85218.344727         False          False    True
2   85519.978027   85418.344727 -80339.766846  85519.978027  201.633301  85418.344727    0.050049  101.583252        1.583252     1.0     85218.344727         False          False    True
3   85519.978027   85518.344727 -80339.766846  85519.978027  101.533203  85518.344727    0.050049    1.583252      -98.416748     2.0     85519.927979         False          False    True
4   85921.927979   85618.344727 -80339.766846  85921.927979  403.533203  85618.344727  202.000000  101.583252        1.583252     1.0     85519.927979         False          False    True
5   86022.611328   85818.344482 -80339.766846  86022.611328  202.266602  85818.344482  202.683350    1.583496        1.583252     1.0     85519.927979         False          False    True
6   86122.661133   85918.344727 -80339.766846  86122.661133  101.633301  85918.344727  202.733154    1.583252        1.583252     1.0     85519.927979         False          False    True
7   86172.394531   85969.611328 -80339.766846  86172.394531   51.316650  85969.611328  202.733154    0.050049      -48.683350     1.0     85519.927979         False          False    True
8   86576.927734   86018.344727 -80339.766846  86576.927734  404.583252  86018.344727  456.999756  101.583252        1.583252     1.0     85519.927979         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=6485/4096.[0m
[08/10 17:49:58]  --------------------------------------------------------------------------------
[08/10 17:49:58]  Iteration: 273 (59 solution, 213 counterexamples)
[08/10 17:52:07]  Generator returned sat in 121.218783 secs.
[08/10 17:52:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:52:11]  Improved gap from 1/10 to 46.875
[08/10 17:52:12]  Improved number of small numbers from 67 to 81 out of a max of 114
[08/10 17:52:12]  Verifer returned sat in 4.961585 secs.
[08/10 17:52:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   92395.879883   92295.879883 -87416.652100  92395.879883  199.400000  92295.879883       0.00  100.000000        0.649902     2.0     92295.879883            -1             -1     -1
1   92495.229736   92395.929932 -87416.652002  92495.229736  199.349854  92395.929932       0.00   99.299805       -0.000146     1.0     92495.229736         False           True  False
2   92595.280029   92595.229883 -87416.652002  92595.280029  199.350098  92595.229883       0.00    0.050146        0.050146     1.0     92495.229736         False          False  False
3   92794.529883   92695.229883 -87416.652002  92794.529883  199.300000  92695.229883      99.20    0.100000        0.100000     1.0     92695.329883         False          False  False
4   92894.579883   92795.229883 -87416.652002  92894.579883  100.150000  92795.229883      99.25    0.100000        0.100000     1.0     92695.329883         False          False   True
5   92945.054883   92795.913216 -87372.851807  92945.054883   50.575000  92795.913216      99.25   49.891667       -5.624805     1.0     92695.329883         False          False   True
6   92997.504883   92851.429883 -87319.727002  92997.504883  102.341667  92851.429883      99.25   46.825000       -0.050000     1.0     92695.329883         False          False   True
7   93030.779883   92898.304883 -87266.602051  93030.779883   80.100000  92898.304883      99.25   33.225000      -13.650049     1.0     92695.329883         False          False   True
8   93051.092383   92945.179932 -87213.477051  93051.092383   53.537500  92945.179932      99.25    6.662451      -40.212549     1.0     92695.329883         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/10.[0m
[08/10 17:52:13]  --------------------------------------------------------------------------------
[08/10 17:52:13]  Iteration: 274 (59 solution, 214 counterexamples)
[08/10 17:54:22]  Generator returned sat in 121.326772 secs.
[08/10 17:54:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:54:26]  Improved gap from 1/600 to 15.625
[08/10 17:54:26]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 17:54:26]  Verifer returned sat in 3.779458 secs.
[08/10 17:54:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   92295.879883   92195.929688 -87372.852051  92295.879883    0.049805  92195.929688   0.000000   99.950195       99.949951     4.0     92195.929688            -1             -1     -1
1   92395.879883   92295.929932 -87372.852051  92395.879883  199.950195  92295.929932   0.000000   99.949951       99.949951     1.0     92195.929688         False           True  False
2   92667.029785   92395.879639 -87372.852051  92667.029785  371.099854  92395.879639   0.050049  271.100098      271.049805     2.0     92195.929688         False          False  False
3   92667.029785   92395.929932 -87372.852051  92667.029785  270.500000  92395.929932   0.050049  271.049805      171.049805     2.0     92666.979736         False          False   True
4   92667.029785   92595.929932 -87372.852051  92667.029785  271.000000  92595.929932   0.050049   71.049805       71.049805     3.0     92666.979736         False          False   True
5   92729.979980   92664.379883 -87372.852051  92729.979980  134.000000  92664.379883   0.050049   65.550049       34.000000     4.0     92666.979736         False           True  False
6   92729.979980   92714.354736 -87306.901855  92729.979980   65.500000  92714.354736   0.050049   15.575195       -0.049805     2.0     92666.979736         False           True  False
7   92745.654785   92729.979736 -87222.526855  92745.654785   31.250000  92729.979736   0.050049   15.625000        0.000000     1.0     92666.979736         False          False  False
8   92745.654785   92745.604736 -87138.151855  92745.654785   14.125000  92745.604736   0.050049    0.000000      -15.625000     2.0     92666.979736         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=277555/1024.[0m
[08/10 17:54:27]  --------------------------------------------------------------------------------
[08/10 17:54:27]  Iteration: 275 (59 solution, 215 counterexamples)
[08/10 18:00:27]  Generator returned sat in 352.746213 secs.
[08/10 18:00:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:00:42]  Improved gap from 0 to 0
[08/10 18:00:44]  Improved number of small numbers from 62 to 78 out of a max of 114
[08/10 18:00:44]  Verifer returned sat in 15.908663 secs.
[08/10 18:00:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   92729.957275   92728.632272 -87471.516357  92729.957275  0.000244  92728.632272        0.0  1.325003        1.324863     3.0     92728.632272            -1             -1   False
1   92729.957275   92729.956787 -87372.852051  92729.957275  0.000313  92729.956787        0.0  0.000488       -0.010830     2.0     92728.632272         False          False   False
2   92729.968506   92729.968105 -87272.852539  92729.968506  0.011719  92729.968105        0.0  0.000400       -0.000088     1.0     92728.632272         False          False   False
3   92729.979355   92729.968730 -87172.863301  92729.979355  0.011250  92729.968730        0.0  0.010625        0.000000     1.0     92729.979355         False          False   False
4   92729.979355   92729.979355 -87072.863926  92729.979355  0.010313  92729.979355        0.0  0.000000       -0.000625     2.0     92729.979355         False          False   False
5   92729.989355   92729.979980 -86972.873535  92729.989355  0.010000  92729.979980        0.0  0.009375       -0.000234     1.0     92729.979355         False          False   False
6   92729.989980   92729.989668 -86872.874268  92729.989980  0.010000  92729.989668        0.0  0.000313       -0.000342     1.0     92729.979355         False          False   False
7   92729.999668   92729.999355 -86772.883789  92729.999668  0.010000  92729.999355        0.0  0.000313       -0.000176     1.0     92729.979355         False          False   False
8   92730.009355   92730.000000 -86772.883789  92730.009355  0.010000  92730.000000        0.0  0.009355      -99.990488     1.0     92729.979355         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1/1600.[0m
[08/10 18:00:44]  --------------------------------------------------------------------------------
[08/10 18:00:44]  Iteration: 276 (59 solution, 216 counterexamples)
[08/10 18:07:56]  Generator returned sat in 424.467293 secs.
[08/10 18:07:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:07:58]  Verifer returned unsat in 0.785031 secs.
[08/10 18:07:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:07:58]  --------------------------------------------------------------------------------
[08/10 18:07:58]  Iteration: 277 (60 solution, 216 counterexamples)
[08/10 18:08:28]  Generator returned sat in 22.408576 secs.
[08/10 18:08:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:08:30]  Verifer returned unsat in 1.734616 secs.
[08/10 18:08:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:08:30]  --------------------------------------------------------------------------------
[08/10 18:08:30]  Iteration: 278 (61 solution, 216 counterexamples)
[08/10 18:08:55]  Generator returned sat in 16.811702 secs.
[08/10 18:08:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:08:59]  Verifer returned unsat in 3.539947 secs.
[08/10 18:08:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:08:59]  --------------------------------------------------------------------------------
[08/10 18:08:59]  Iteration: 279 (62 solution, 216 counterexamples)
[08/10 18:09:24]  Generator returned sat in 17.171406 secs.
[08/10 18:09:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:09:27]  Verifer returned unsat in 2.400708 secs.
[08/10 18:09:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:09:27]  --------------------------------------------------------------------------------
[08/10 18:09:27]  Iteration: 280 (63 solution, 216 counterexamples)
[08/10 18:09:50]  Generator returned sat in 15.792602 secs.
[08/10 18:09:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:09:53]  Verifer returned unsat in 1.785502 secs.
[08/10 18:09:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:09:53]  --------------------------------------------------------------------------------
[08/10 18:09:53]  Iteration: 281 (64 solution, 216 counterexamples)
[08/10 18:11:52]  Generator returned sat in 111.612761 secs.
[08/10 18:11:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:11:54]  Improved gap from 1/20 to 23.4375
[08/10 18:11:54]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 18:11:54]  Verifer returned sat in 1.320053 secs.
[08/10 18:11:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   88785.679932   88584.180176 -86973.933838  88785.679932    0.099854  88584.180176    0.000000  201.499756      101.500000     2.0     88584.180176            -1             -1     -1
1   88785.679932   88784.179932 -86973.933838  88785.679932    0.099854  88784.179932    0.000000    1.500000        1.500000     2.0     88584.180176         False           True  False
2   88785.679932   88785.579834 -86924.408691  88785.679932    0.100098  88785.579834    0.000000    0.100098      -48.974854     3.0     88584.180176          True           True  False
3   89034.854736   88911.017578 -86924.408691  89034.854736  249.274902  88911.017578   98.599854   25.237305        1.600098     1.0     88584.180176          True           True  False
4   89134.754883   89034.555176 -86924.408691  89134.754883  125.137451  89034.555176   98.599854    1.599854        1.500244     1.0     88584.180176         False          False   True
5   89134.754883   89034.655029 -86847.846436  89134.754883    1.500000  89034.655029   98.599854    1.500000      -21.937500     2.0     88584.180176         False          False   True
6   89382.330078   89058.092529 -86847.846436  89382.330078  249.075195  89058.092529  222.637451  101.600098        1.600098     1.0     89159.692627          True           True  False
7   89405.767578   89159.692627 -86772.884033  89405.767578  125.037598  89159.692627  222.637451   23.437500        0.000000     2.0     89159.692627         False          False   True
8   89507.467529   89184.454834 -86772.884033  89507.467529  125.137451  89184.454834  222.737305  100.275391        1.600098     1.0     89159.692627         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=3277/2048.[0m
[08/10 18:11:55]  --------------------------------------------------------------------------------
[08/10 18:11:55]  Iteration: 282 (64 solution, 217 counterexamples)
[08/10 18:12:47]  Generator returned sat in 44.306008 secs.
[08/10 18:12:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:12:52]  Improved gap from 96001/4096 to 23.4375
[08/10 18:12:52]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 18:12:52]  Verifer returned sat in 4.654322 secs.
[08/10 18:12:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   83992.583496   83992.583252 -87103.208740  83992.583496    0.099854  83992.583252    0.000000    0.000244        0.000000     1.0     83992.583252            -1             -1   False
1   84034.019043   84029.231445 -87063.294434  84034.019043   41.435791  84029.231445    0.000000    4.787598      -18.650146     1.0     83992.583252         False          False   False
2   84087.854736   84052.669189 -86998.580078  84087.854736   58.623291  84052.669189    0.000000   35.185547       -0.100098     1.0     83992.583252         False          False   False
3   84113.783447   84087.954834 -86924.408691  84113.783447   61.114258  84087.954834    0.000000   25.828613        0.000000     1.0     83992.583252         False          False   False
4   84213.883545   84212.342285 -86924.408691  84213.883545  125.928711  84212.342285    0.000000    1.541260        0.100098     1.0     83992.583252         False          False   False
5   84458.417480   84213.983154 -86924.408691  84458.417480  246.075195  84213.983154  144.434082  100.000244        0.199951     1.0     83992.583252         False          False   False
6   84481.954834   84314.083252 -86848.145996  84481.954834  123.537598  84314.083252  144.434082   23.437500        0.000000     1.0     83992.583252         False          False    True
7   84481.954834   84337.520752 -86771.583740  84481.954834    1.500000  84337.520752  144.434082    0.000000      -23.437744     2.0     83992.583252         False          False    True
8   84607.883301   84360.958496 -86771.583740  84607.883301  125.928467  84360.958496  146.724854  100.199951        0.199951     1.0     84461.158447          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=819/4096.[0m
[08/10 18:12:53]  --------------------------------------------------------------------------------
[08/10 18:12:53]  Iteration: 283 (64 solution, 218 counterexamples)
[08/10 18:15:37]  Generator returned sat in 157.041319 secs.
[08/10 18:15:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:15:42]  Verifer returned unsat in 3.958520 secs.
[08/10 18:15:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:15:42]  --------------------------------------------------------------------------------
[08/10 18:15:42]  Iteration: 284 (65 solution, 218 counterexamples)
[08/10 18:16:07]  Generator returned sat in 17.862346 secs.
[08/10 18:16:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:16:10]  Verifer returned unsat in 2.306256 secs.
[08/10 18:16:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:16:10]  --------------------------------------------------------------------------------
[08/10 18:16:10]  Iteration: 285 (66 solution, 218 counterexamples)
[08/10 18:16:34]  Generator returned sat in 15.609596 secs.
[08/10 18:16:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:16:38]  Verifer returned unsat in 3.881603 secs.
[08/10 18:16:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:16:38]  --------------------------------------------------------------------------------
[08/10 18:16:38]  Iteration: 286 (67 solution, 218 counterexamples)
[08/10 18:17:02]  Generator returned sat in 15.739844 secs.
[08/10 18:17:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:17:06]  Verifer returned unsat in 3.516993 secs.
[08/10 18:17:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:17:06]  --------------------------------------------------------------------------------
[08/10 18:17:06]  Iteration: 287 (68 solution, 218 counterexamples)
[08/10 18:17:31]  Generator returned sat in 17.407877 secs.
[08/10 18:17:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:17:35]  Verifer returned unsat in 3.488332 secs.
[08/10 18:17:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:17:35]  --------------------------------------------------------------------------------
[08/10 18:17:35]  Iteration: 288 (69 solution, 218 counterexamples)
[08/10 18:18:04]  Generator returned sat in 21.606973 secs.
[08/10 18:18:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:18:07]  Verifer returned unsat in 2.083977 secs.
[08/10 18:18:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:18:07]  --------------------------------------------------------------------------------
[08/10 18:18:07]  Iteration: 289 (70 solution, 218 counterexamples)
[08/10 18:22:28]  Generator returned sat in 253.083757 secs.
[08/10 18:22:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:22:30]  Improved number of small numbers from 59 to 67 out of a max of 113
[08/10 18:22:30]  Verifer returned sat in 1.444605 secs.
[08/10 18:22:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   78722.560059   78619.576781 -81733.202025  78722.560059  103.049805  78619.576781   0.000000  102.983278       99.983278     6.0     78619.576781            -1             -1   False
1   78722.626781   78722.576781 -81733.202025  78722.626781  103.050000  78722.576781   0.016667    0.033333        0.033333     1.0     78619.576781         False          False   False
2   78825.643447   78819.576781 -81733.202025  78825.643447  103.050000  78819.576781   3.033333    3.033333        0.033333     1.0     78619.576781         False          False    True
3   78925.660114   78922.576781 -81733.202025  78925.660114  103.050000  78922.576781   3.050000    0.033333        0.033333     1.0     78619.576781         False          False    True
4   79027.176781   79022.576781 -81733.202025  79027.176781  101.550000  79022.576781   4.566667    0.033333        0.033333     1.0     78619.576781         False          False    True
5   79127.193447   79073.993447 -81733.202025  79127.193447  100.050000  79073.993447   4.583333   48.616667        0.033333     1.0     78619.576781         False          False    True
6   79177.126781   79122.751953 -81683.168691  79177.126781   98.550000  79122.751953   4.583333   49.791494        0.000000     1.0     78619.576781         False          False    True
7   79177.126781   79172.543447 -81583.168701  79177.126781   49.775000  79172.543447   4.583333    0.000000       -0.000010     2.0     78619.576781         False          False    True
8   79202.514281   79172.560059 -81583.168701  79202.514281   25.387500  79172.560059   4.583333   25.370889      -74.612510     1.0     78619.576781         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/30.[0m
[08/10 18:22:31]  --------------------------------------------------------------------------------
[08/10 18:22:31]  Iteration: 290 (70 solution, 219 counterexamples)
[08/10 18:24:43]  Generator returned sat in 124.281943 secs.
[08/10 18:24:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:24:46]  Verifer returned unsat in 2.078427 secs.
[08/10 18:24:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:24:46]  --------------------------------------------------------------------------------
[08/10 18:24:46]  Iteration: 291 (71 solution, 219 counterexamples)
[08/10 18:25:09]  Generator returned sat in 16.034333 secs.
[08/10 18:25:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:25:12]  Verifer returned unsat in 1.665902 secs.
[08/10 18:25:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:25:12]  --------------------------------------------------------------------------------
[08/10 18:25:12]  Iteration: 292 (72 solution, 219 counterexamples)
[08/10 18:25:36]  Generator returned sat in 16.471949 secs.
[08/10 18:25:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:25:39]  Verifer returned unsat in 2.047987 secs.
[08/10 18:25:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:25:39]  --------------------------------------------------------------------------------
[08/10 18:25:39]  Iteration: 293 (73 solution, 219 counterexamples)
[08/10 18:26:06]  Generator returned sat in 19.427330 secs.
[08/10 18:26:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:26:08]  Verifer returned unsat in 0.947784 secs.
[08/10 18:26:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:26:08]  --------------------------------------------------------------------------------
[08/10 18:26:08]  Iteration: 294 (74 solution, 219 counterexamples)
[08/10 18:26:32]  Generator returned sat in 16.938383 secs.
[08/10 18:26:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:26:35]  Verifer returned unsat in 1.919061 secs.
[08/10 18:26:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:26:35]  --------------------------------------------------------------------------------
[08/10 18:26:35]  Iteration: 295 (75 solution, 219 counterexamples)
[08/10 18:28:31]  Generator returned sat in 108.663162 secs.
[08/10 18:28:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:28:35]  Improved gap from 1/40 to 0
[08/10 18:28:35]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 18:28:35]  Verifer returned sat in 2.778705 secs.
[08/10 18:28:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   70455.185303   70356.085693 -81984.133789  70455.185303    0.050049  70356.085693   0.000000   99.099609       97.949707     1.0     70356.085693            -1             -1   False
1   70457.285645   70455.235596 -81984.133789  70457.285645  101.199951  70455.235596   0.000000    2.050049        0.050049     1.0     70356.085693         False          False   False
2   70457.335449   70457.335449 -81884.283691  70457.335449    2.099854  70457.335449   0.000000    0.000000       -0.050049     1.0     70457.335449         False          False   False
3   70459.385498   70457.385498 -81786.283691  70459.385498    2.050049  70457.385498   0.000000    2.000000        0.000000     1.0     70459.385498         False          False   False
4   70560.685303   70509.785400 -81786.283691  70560.685303  103.299805  70509.785400   1.199951   49.699951        0.099854     1.0     70459.385498         False          False   False
5   70560.685303   70559.435547 -81686.383789  70560.685303   49.649902  70559.435547   1.199951    0.049805       -0.000244     2.0     70459.385498         False          False    True
6   70664.735596   70609.635498 -81686.383789  70664.735596  104.100098  70609.635498   5.150146   49.949951        0.099854     1.0     70659.585449          True           True   False
7   70664.835693   70659.635498 -81586.633545  70664.835693   50.050049  70659.635498   5.150146    0.050049       -0.049805     1.0     70659.585449         False          False    True
8   70764.885742   70659.735596 -81586.633545  70764.885742  100.100098  70659.735596   5.150146  100.000000        0.000244     1.0     70659.585449         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=409/4096.[0m
[08/10 18:28:36]  --------------------------------------------------------------------------------
[08/10 18:28:36]  Iteration: 296 (75 solution, 220 counterexamples)
[08/10 18:31:52]  Generator returned sat in 188.593163 secs.
[08/10 18:31:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:31:55]  Improved gap from 0 to 17.1875
[08/10 18:31:55]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 18:31:55]  Verifer returned sat in 2.824612 secs.
[08/10 18:31:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   69768.230713   69651.042969 -81967.096191  69768.230713    0.049805  69651.042969   0.000000  117.187744      117.187744     6.0     69651.042969            -1             -1   False
1   69768.230713   69751.042969 -81967.096191  69768.230713   17.137695  69751.042969   0.000000   17.187744       17.187744     7.0     69651.042969         False          False   False
2   69768.230713   69751.042969 -81884.283936  69768.230713   17.137695  69751.042969   0.000000   17.187744        0.000000     7.0     69651.042969          True           True   False
3   70011.542969   69768.230713 -81884.283936  70011.542969  260.500000  69768.230713  83.262451  160.049805       60.049805     8.0     69651.042969         False           True   False
4   70111.493164   69963.480469 -81884.283936  70111.493164  260.000000  69963.480469  83.262451   64.750244       60.000000     1.0     70028.230713          True           True    True
5   70177.242920   70028.280518 -81884.283936  70177.242920  130.500000  70028.280518  83.262451   65.699951       25.749756     1.0     70028.230713         False          False    True
6   70177.292969   70079.055420 -81812.296143  70177.292969   65.750000  70079.055420  83.262451   14.975098       -2.212402     2.0     70028.230713         False          False    True
7   70195.692871   70096.242920 -81729.483643  70195.692871   33.375000  70096.242920  83.262451   16.187500       -1.000000     1.0     70028.230713         False          False    True
8   70196.692871   70113.430420 -81729.483643  70196.692871   17.187500  70113.430420  83.262451    0.000000     -100.000000     1.0     70028.230713         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=61491/1024.[0m
[08/10 18:31:56]  --------------------------------------------------------------------------------
[08/10 18:31:56]  Iteration: 297 (75 solution, 221 counterexamples)
[08/10 18:34:06]  Generator returned sat in 121.823509 secs.
[08/10 18:34:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:34:09]  Improved gap from 0 to 0
[08/10 18:34:09]  Improved number of small numbers from 42 to 114 out of a max of 114
[08/10 18:34:09]  Verifer returned sat in 2.678158 secs.
[08/10 18:34:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   70068.286133   70068.268311 -82384.285400  70068.286133  0.018311  70068.268311        0.0  0.017822        0.017822     3.0     70068.268311            -1             -1   False
1   70068.741943   70068.304443 -82284.777100  70068.741943  0.473633  70068.304443        0.0  0.437500       -0.018066     1.0     70068.268311         False          False   False
2   70068.778076   70068.760010 -82184.813477  70068.778076  0.473633  70068.760010        0.0  0.018066       -0.018311     1.0     70068.268311         False          False   False
3   70069.102295   70068.796387 -82085.119385  70069.102295  0.342285  70068.796387        0.0  0.305908        0.000000     1.0     70069.102295         False          False   False
4   70069.102295   70069.102295 -81985.155762  70069.102295  0.028076  70069.102295        0.0  0.000000       -0.036377     2.0     70069.102295         False          False   False
5   70069.400146   70069.382324 -81885.435547  70069.400146  0.297852  70069.382324        0.0  0.017822       -0.018311     1.0     70069.102295         False          False   False
6   70069.504639   70069.486328 -81785.539551  70069.504639  0.122314  70069.486328        0.0  0.018311       -0.017822     1.0     70069.102295         False          False   False
7   70069.676270   70069.630371 -81685.693359  70069.676270  0.189941  70069.630371        0.0  0.045898        0.000000     1.0     70069.102295         False          False   False
8   70069.676270   70069.676270 -81585.729736  70069.676270  0.028076  70069.676270        0.0  0.000000       -0.036377     2.0     70069.102295         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=149/4096.[0m
[08/10 18:34:10]  --------------------------------------------------------------------------------
[08/10 18:34:10]  Iteration: 298 (75 solution, 222 counterexamples)
[08/10 18:36:02]  Generator returned sat in 104.215321 secs.
[08/10 18:36:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:36:03]  Verifer returned unsat in 0.960227 secs.
[08/10 18:36:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:36:04]  --------------------------------------------------------------------------------
[08/10 18:36:04]  Iteration: 299 (76 solution, 222 counterexamples)
[08/10 18:39:28]  Generator returned sat in 197.089415 secs.
[08/10 18:39:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:39:36]  Improved gap from 0 to 32.8125
[08/10 18:39:38]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 18:39:38]  Verifer returned sat in 8.654023 secs.
[08/10 18:39:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   60884.156494   60751.344019 -82285.827531  60884.156494    0.029297  60751.344019    0.000000  132.812475      132.812475     2.0     60751.344019            -1             -1   False
1   60884.214709   60751.344019 -82285.827531  60884.214709  132.870690  60751.344019    0.058190  132.812500       32.812500     2.0     60751.344019         False          False   False
2   60884.243804   60851.344019 -82218.669126  60884.243804  132.841595  60851.344019    0.058190   32.841595        0.000000     3.0     60884.185614         False          False    True
3   61118.272898   60984.091864 -82218.669126  61118.272898  266.870690  60984.091864  101.274784   32.906250       32.812500     1.0     60884.185614         False           True   False
4   61218.301993   61051.001347 -82218.669126  61218.301993  132.935345  61051.001347  101.303879   65.996767       32.812500     1.0     60884.185614         False          False    True
5   61218.301993   61084.185614 -82151.481626  61218.301993   65.967672  61084.185614  101.303879   32.812500        0.000000     2.0     60884.185614         False          False    True
6   61218.473329   61116.998114 -82084.294126  61218.473329   32.983836  61116.998114  101.303879    0.171336      -32.641164     3.0     60884.185614         False          False    True
7   61302.247036   61149.810614 -82035.426758  61302.247036   83.945043  61149.810614  101.303879   51.132543       -0.000089     1.0     61200.943157          True           True   False
8   61343.491648   61200.972168 -82035.426758  61343.491648   92.377155  61200.972168  101.303879   41.215601      -58.755476     1.0     61200.943157         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=525/16.[0m
[08/10 18:39:38]  --------------------------------------------------------------------------------
[08/10 18:39:38]  Iteration: 300 (76 solution, 223 counterexamples)
[08/10 18:44:15]  Generator returned sat in 269.123587 secs.
[08/10 18:44:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:44:16]  Improved gap from 0 to 100
[08/10 18:44:16]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 18:44:16]  Verifer returned sat in 0.655415 secs.
[08/10 18:44:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   59819.273193   58919.373535 -80553.856934  59819.273193     0.100098  58919.373535        0.0   899.899658      799.899658     2.0     58919.373535            -1             -1   False
1   60819.573486   59119.373291 -80553.856934  60819.573486  1900.199951  59119.373291        0.0  1700.200195     1700.199951     2.0     58919.373535         False          False   False
2   61019.473145   59219.273193 -80553.856934  61019.473145  1900.099854  59219.273193        0.0  1800.199951     1800.099609     3.0     61019.473145         False          False   False
3   61019.473145   59219.373535 -80553.856934  61019.473145  1690.099854  59219.373535        0.0  1800.099609     1700.099609     4.0     61019.473145         False          False   False
4   61019.473145   59419.373291 -80553.856934  61019.473145  1692.099854  59419.373291        0.0  1600.099854     1600.099609     5.0     61019.473145         False          False   False
5   61113.473145   59419.373535 -80553.856934  61113.473145  1694.099854  59419.373535        0.0  1694.099609     1594.099609     6.0     61019.473145         False          False   False
6   61115.473389   59619.373291 -80553.856934  61115.473389  1696.099854  59619.373291        0.0  1496.100098     1496.099854     7.0     61019.473145         False          False   False
7   61317.473145   59719.373535 -80553.856934  61317.473145  1698.099854  59719.373535        0.0  1598.099609     1598.099609     8.0     61019.473145         False          False   False
8   61419.473389   59819.373291 -80553.856934  61419.473389  1700.099854  59819.373291        0.0  1600.100098     1600.099854     8.0     61019.473145         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1843405/1024.[0m
[08/10 18:44:17]  --------------------------------------------------------------------------------
[08/10 18:44:17]  Iteration: 301 (76 solution, 224 counterexamples)
[08/10 18:46:17]  Generator returned sat in 111.947542 secs.
[08/10 18:46:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:46:18]  Improved number of small numbers from 74 to 113 out of a max of 113
[08/10 18:46:18]  Verifer returned sat in 0.919043 secs.
[08/10 18:46:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   59024.973633   58824.673584 -80553.857178  59024.973633     0.099854  58824.673584   0.100098   200.199951      100.199951     7.0     58824.673584            -1             -1     -1
1   59024.973633   58924.673584 -80553.857178  59024.973633   200.199951  58924.673584   0.100098   100.199951        0.199951     2.0     58824.673584         False           True   True
2   59124.873535   59024.973633 -80553.857178  59124.873535   200.099854  59024.973633   0.100098    99.799805        0.099854     1.0     59124.773438         False          False   True
3   59124.873535   59124.673584 -80553.857178  59124.873535    97.899902  59124.673584   0.100098     0.099854      -99.900146     2.0     59124.773438         False          False   True
4   59524.673584   59324.673584 -80553.857178  59524.673584   399.899902  59324.673584   0.100098   199.899902      199.899902     1.0     59124.773438         False          False   True
5   60126.673584   59419.373535 -80553.857178  60126.673584   801.899902  59419.373535   0.100098   707.199951      701.899902     2.0     59124.773438         False          False   True
6   60617.773438   59524.673584 -80553.857178  60617.773438  1198.299805  59524.673584   0.100098  1092.999756     1092.999756     2.0     59124.773438         False          False   True
7   61125.073486   59524.773682 -80553.857178  61125.073486  1600.299805  59524.773682   0.199951  1600.099854     1500.199951     3.0     59124.773438         False          False   True
8   61125.073486   59724.673584 -80553.857178  61125.073486   800.149902  59724.673584   0.199951  1400.199951     1400.199951     4.0     61124.873535          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6144819/4096.[0m
[08/10 18:46:19]  --------------------------------------------------------------------------------
[08/10 18:46:19]  Iteration: 302 (76 solution, 225 counterexamples)
[08/10 18:49:52]  Generator returned sat in 205.602470 secs.
[08/10 18:49:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:49:55]  Improved gap from 0 to 32.8125
[08/10 18:49:55]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 18:49:55]  Verifer returned sat in 1.911003 secs.
[08/10 18:49:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   61140.761230   61040.861084 -80771.144531  61140.761230    0.100098  61040.861084    0.000000  99.900146       99.900146     2.0     61040.861084            -1             -1   False
1   61140.960938   61140.860840 -80771.144531  61140.960938  100.099854  61140.860840    0.000000   0.100098        0.099854     1.0     61040.861084         False          False   False
2   61240.673340   61240.573486 -80771.144531  61240.673340   99.812500  61240.573486    0.000000   0.099854       -0.187744     1.0     61240.673340         False          False   False
3   61240.960938   61240.861084 -80703.957031  61240.960938    0.387451  61240.861084    0.000000   0.099854      -32.712646     1.0     61240.960938         False          False   False
4   61639.361084   61373.673340 -80703.957031  61639.361084  398.500000  61373.673340  265.487549   0.200195        0.199951     1.0     61240.960938         False          False   False
5   61640.660889   61373.973389 -80637.069580  61640.660889    1.500000  61373.973389  265.487549   1.199951      -31.612793     1.0     61240.960938         False          False    True
6   61706.910889   61406.786133 -80571.707275  61706.910889   67.449951  61406.786133  265.487549  34.637207       -0.000488     1.0     61240.960938         False          False    True
7   61788.961182   61441.523438 -80553.857178  61788.961182  116.687500  61441.523438  265.487549  81.950195       -0.100098     1.0     61240.960938         False          False    True
8   61799.279785   61523.573730 -80553.857178  61799.279785   92.268799  61523.573730  265.487549  10.218506      -89.781494     1.0     61240.960938         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 18:49:56]  --------------------------------------------------------------------------------
[08/10 18:49:56]  Iteration: 303 (76 solution, 226 counterexamples)
[08/10 18:53:54]  Generator returned sat in 230.147088 secs.
[08/10 18:53:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:53:56]  Verifer returned unsat in 1.400596 secs.
[08/10 18:53:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:53:56]  --------------------------------------------------------------------------------
[08/10 18:53:56]  Iteration: 304 (77 solution, 226 counterexamples)
[08/10 18:54:21]  Generator returned sat in 17.126453 secs.
[08/10 18:54:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:54:23]  Verifer returned unsat in 1.638307 secs.
[08/10 18:54:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:54:23]  --------------------------------------------------------------------------------
[08/10 18:54:23]  Iteration: 305 (78 solution, 226 counterexamples)
[08/10 18:55:17]  Generator returned sat in 46.234523 secs.
[08/10 18:55:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:55:21]  Verifer returned unsat in 2.653939 secs.
[08/10 18:55:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:55:21]  --------------------------------------------------------------------------------
[08/10 18:55:21]  Iteration: 306 (79 solution, 226 counterexamples)
[08/10 18:56:02]  Generator returned sat in 33.745531 secs.
[08/10 18:56:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:56:06]  Improved number of small numbers from 59 to 77 out of a max of 113
[08/10 18:56:06]  Verifer returned sat in 2.272540 secs.
[08/10 18:56:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   71200.815674   71000.716064 -90830.999336  71200.815674     0.100098  71000.716064        0.0   200.099609      100.099785     2.0     71000.716064            -1             -1   False
1   71200.815674   71100.715889 -90830.999336  71200.815674   199.999756  71100.715889        0.0   100.099785        0.099785     2.0     71000.716064         False          False   False
2   71200.815674   71200.715889 -90830.999336  71200.815674   100.000000  71200.715889        0.0     0.099785      -99.900215     3.0     71200.815674         False          False   False
3   73701.115889   71400.715889 -90830.999336  73701.115889  2500.400000  71400.715889      800.2  1500.200000     1500.200000     1.0     71200.815674         False          False   False
4   73701.115889   71400.815889 -90830.999336  73701.115889  1250.200000  71400.815889      800.2  1500.100000     1400.200000     2.0     71200.815674         False          False    True
5   73701.115889   71600.615889 -90830.999336  73701.115889  1400.250000  71600.615889      800.2  1300.300000     1300.200000     3.0     71200.815674         False          False    True
6   74001.015889   71600.715889 -90830.999336  74001.015889  1600.200000  71600.715889      800.2  1600.100000     1500.100000     4.0     71200.815674         False          False    True
7   74101.115889   71800.715889 -90830.999336  74101.115889  1700.200000  71800.715889      800.2  1500.200000     1500.200000     5.0     71200.815674         False          False    True
8   74101.115889   71800.815918 -90830.999336  74101.115889  1251.500000  71800.815918      800.2  1500.099971     1400.200000     6.0     73300.915889          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=7501/5.[0m
[08/10 18:56:06]  --------------------------------------------------------------------------------
[08/10 18:56:06]  Iteration: 307 (79 solution, 227 counterexamples)
[08/10 19:00:25]  Generator returned sat in 251.224196 secs.
[08/10 19:00:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:00:30]  Improved gap from 1/10 to 18.75
[08/10 19:00:30]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 19:00:30]  Verifer returned sat in 3.982617 secs.
[08/10 19:00:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   66215.716064   65705.666016 -90830.999268  66215.716064    0.049805  65705.666016   0.050049  510.000000      455.000000     4.0     65705.666016            -1             -1     -1
1   66215.716064   65760.666016 -90830.999268  66215.716064  455.000000  65760.666016   0.050049  455.000000      355.000000     4.0     65705.666016         False          False   True
2   66215.716064   65960.615967 -90830.999268  66215.716064  454.950000  65960.615967   0.050049  255.050049      255.000000     5.0     66215.666016         False          False   True
3   66215.765869   65960.666016 -90830.999268  66215.765869  255.099854  65960.666016   0.050049  255.049805      155.049805     6.0     66215.715820         False          False   True
4   66215.765869   66152.815918 -90830.999268  66215.765869  255.000000  66152.815918   0.050049   62.899902       55.049805     7.0     66215.715820         False          False   True
5   66281.865967   66215.766113 -90830.999268  66281.865967  129.000000  66215.766113   0.050049   66.049805       21.149902     1.0     66215.715820         False           True  False
6   66281.865967   66265.265869 -90754.349121  66281.865967   66.000000  66265.265869   0.050049   16.550049       -2.199951     2.0     66215.715820         False          False  False
7   66299.815918   66284.015869 -90673.099121  66299.815918   34.500000  66284.015869   0.050049   15.750000       -3.000000     1.0     66215.715820         False          False  False
8   66302.815918   66302.765869 -90673.099121  66302.815918   18.750000  66302.765869   0.050049    0.000000     -100.000000     1.0     66215.715820         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=363571/1024.[0m
[08/10 19:00:31]  --------------------------------------------------------------------------------
[08/10 19:00:31]  Iteration: 308 (79 solution, 228 counterexamples)
[08/10 19:11:53]  Generator returned sat in 673.773830 secs.
[08/10 19:11:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:11:55]  Improved gap from 0 to 17.1875
[08/10 19:11:55]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 19:11:55]  Verifer returned sat in 1.977711 secs.
[08/10 19:11:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   66437.515869   66354.803467 -90837.161865  66437.515869  100.1000  66354.803467   0.000000  82.712402       82.712158     4.0     66354.803467            -1             -1   False
1   66454.803467   66437.615967 -90837.161865  66454.803467  100.0000  66437.615967   0.000000  17.187500       -0.000244     1.0     66454.803467         False          False   False
2   66554.803467   66537.615967 -90837.161865  66554.803467  117.1875  66537.615967   0.000000  17.187500       -0.000244     1.0     66454.803467         False          False   False
3   66670.115967   66654.803711 -90837.161865  66670.115967  132.5000  66654.803711   0.099854  15.212402       15.212402     1.0     66454.803467         False          False   False
4   66786.403564   66739.278564 -90837.161865  66786.403564  131.5000  66739.278564  16.387451  30.737549       15.212402     1.0     66454.803467         False          False    True
5   66886.166016   66803.928467 -90837.161865  66886.166016  130.5000  66803.928467  16.387451  65.850098       14.974854     1.0     66454.803467         False          False    True
6   66886.166016   66854.803711 -90754.349365  66886.166016   65.7500  66854.803711  16.387451  14.974854       -2.212646     2.0     66454.803467         False          False    True
7   66904.566162   66871.991211 -90671.536865  66904.566162   33.3750  66871.991211  16.387451  16.187500       -1.000000     1.0     66454.803467         False          False    True
8   66905.566162   66889.178711 -90671.536621  66905.566162   17.1875  66889.178711  16.387451   0.000000      -99.999756     1.0     66454.803467         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=31155/2048.[0m
[08/10 19:11:56]  --------------------------------------------------------------------------------
[08/10 19:11:56]  Iteration: 309 (79 solution, 229 counterexamples)
[08/10 19:13:01]  Generator returned sat in 56.628252 secs.
[08/10 19:13:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:13:02]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/10 19:13:02]  Verifer returned sat in 0.799319 secs.
[08/10 19:13:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   63803.598877   63503.598633 -90837.161865  63803.598877     0.199951  63503.598633     0.000000   300.000244      300.000244     6.0     63503.598633            -1             -1   False
1   63803.598877   63503.598633 -90837.161865  63803.598877     0.100098  63503.598633     0.000000   300.000244      200.000244     6.0     63803.598877         False          False   False
2   66705.298584   63603.598877 -90837.161865  66705.298584  3201.699951  63603.598877  1501.499756  1600.199951     1500.200195     7.0     63803.598877         False          False   False
3   68306.698730   63703.598633 -90837.161865  68306.698730  3201.600098  63703.598633  3002.899902  1600.200195     1500.200195     8.0     65303.798828         False          False    True
4   68306.798584   63803.598877 -90837.161865  68306.798584  1600.300049  63803.598877  3002.899902  1500.299805     1400.300049     9.0     65303.798828         False          False    True
5   68407.298828   64002.398682 -90837.161865  68407.298828  1600.800049  64002.398682  3002.899902  1402.000244     1400.800293     4.0     65303.798828         False           True   False
6   68606.598633   64101.898682 -90837.161865  68606.598633  1601.300049  64101.898682  3002.899902  1501.800049     1500.100098     5.0     65303.798828         False          False   False
7   68706.598633   64201.398926 -90837.161865  68706.598633  1601.800049  64201.398926  3002.899902  1502.299805     1500.100098     6.0     65303.798828         False          False   False
8   68806.598877   64203.598633 -90837.161865  68806.598877  1602.300049  64203.598633  3002.899902  1600.100342     1500.100342     7.0     65303.798828         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1536205/1024.[0m
[08/10 19:13:03]  --------------------------------------------------------------------------------
[08/10 19:13:03]  Iteration: 310 (79 solution, 230 counterexamples)
[08/10 19:13:35]  Generator returned sat in 24.388999 secs.
[08/10 19:13:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:13:39]  Improved gap from 0 to 0
[08/10 19:13:40]  Improved number of small numbers from 61 to 83 out of a max of 114
[08/10 19:13:40]  Verifer returned sat in 4.220220 secs.
[08/10 19:13:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   62805.663330   62805.291584 -91636.892578  62805.663330  0.000488  62805.291584        0.0  0.371746        0.000658     8.0     62805.291584            -1             -1   False
1   62805.663330   62805.662842 -91536.893555  62805.663330  0.000732  62805.662842        0.0  0.000488       -0.000318     2.0     62805.291584         False          False   False
2   62805.664307   62805.663818 -91436.894531  62805.664307  0.001465  62805.663818        0.0  0.000488       -0.000318     1.0     62805.291584         False          False   False
3   62805.665283   62805.664709 -91336.896484  62805.665283  0.001465  62805.664709        0.0  0.000574       -0.001295     1.0     62805.291584         False          False   False
4   62805.910959   62805.666748 -91237.140865  62805.910959  0.246250  62805.666748        0.0  0.244211        0.000000     1.0     62805.291584         False          False   False
5   62805.910959   62805.910959 -91137.140869  62805.910959  0.010000  62805.910959        0.0  0.000000       -0.000004     2.0     62805.291584         False          False   False
6   62805.920959   62805.920459 -91037.151123  62805.920959  0.010000  62805.920459        0.0  0.000500       -0.000258     1.0     62805.291584         False          False   False
7   62805.931959   62805.921387 -90937.161865  62805.931959  0.011500  62805.921387        0.0  0.010572        0.000000     1.0     62805.291584         False          False   False
8   62805.931959   62805.931959 -90837.161865  62805.931959  0.010000  62805.931959        0.0  0.000000        0.000000     2.0     62805.291584         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=1/1000.[0m
[08/10 19:13:41]  --------------------------------------------------------------------------------
[08/10 19:13:41]  Iteration: 311 (79 solution, 231 counterexamples)
[08/10 19:16:32]  Generator returned sat in 162.423426 secs.
[08/10 19:16:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:16:35]  Improved gap from 0 to 48.4375
[08/10 19:16:36]  Improved number of small numbers from 77 to 87 out of a max of 114
[08/10 19:16:36]  Verifer returned sat in 3.621883 secs.
[08/10 19:16:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   62309.046631   62308.846631 -91140.276611  62309.046631  100.399902  62308.846631        0.1    0.100000       -0.100000     1.0     62308.846631            -1             -1     -1
1   62409.246631   62309.046631 -91140.276611  62409.246631  100.300000  62309.046631        0.1  100.100000        0.100000     1.0     62409.146631         False          False   True
2   62507.296631   62411.096631 -91140.276611  62507.296631  198.150000  62411.096631        0.1   96.100000       -1.850000     1.0     62409.146631         False          False   True
3   62609.246631   62609.046631 -91140.276611  62609.246631  198.050000  62609.046631        0.1    0.100000        0.100000     1.0     62609.146631         False          False   True
4   62708.171631   62707.971631 -91140.276611  62708.171631   99.025000  62707.971631        0.1    0.100000       -0.975000     1.0     62609.146631         False          False   True
5   62757.584131   62709.046631 -91088.714111  62757.584131   49.512500  62709.046631        0.1   48.437500        0.000000     1.0     62609.146631         False          False   True
6   62757.584131   62757.484131 -91037.151611  62757.584131   24.756250  62757.484131        0.1    0.000000      -48.437500     2.0     62609.146631         False          False   True
7   62845.681006   62805.921631 -90985.589111  62845.681006   88.096875  62805.921631        0.1   39.659375       -8.778125     1.0     62845.581006          True           True  False
8   62900.545068   62854.359131 -90985.588867  62900.545068   94.523438  62854.359131        0.1   46.085938      -53.913818     1.0     62845.581006         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1/5.[0m
[08/10 19:16:37]  --------------------------------------------------------------------------------
[08/10 19:16:37]  Iteration: 312 (79 solution, 232 counterexamples)
[08/10 19:22:28]  Generator returned sat in 342.767376 secs.
[08/10 19:22:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:22:35]  Improved gap from 0 to 1.5625
[08/10 19:22:36]  Improved number of small numbers from 59 to 73 out of a max of 114
[08/10 19:22:36]  Verifer returned sat in 7.937245 secs.
[08/10 19:22:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   62536.167969   62522.430902 -91353.660889  62536.167969    0.038818  62522.430902   0.000000   13.737067       13.736986     2.0     62522.430902            -1             -1   False
1   62536.167969   62536.128662 -91268.921143  62536.167969    0.039062  62536.128662   0.000000    0.039307       -1.523268     2.0     62522.430902         False          False   False
2   62637.652100   62637.613193 -91268.921143  62637.652100  101.523438  62637.613193   0.000000    0.038906       -0.039137     1.0     62522.430902         False          False   False
3   62637.730381   62637.691318 -91170.483725  62637.730381    0.117188  62637.691318   0.000000    0.039062       -1.523438     1.0     62637.730381         False          False   False
4   62751.951735   62682.399652 -91170.483725  62751.951735  114.260417  62682.399652  11.382812   58.169271        1.315104     1.0     62637.730381         False          False   False
5   62751.951735   62739.253818 -91072.046225  62751.951735   58.130208  62739.253818  11.382812    1.315104       -0.247396     2.0     62637.730381         False          False    True
6   62830.522048   62740.816318 -91050.369385  62830.522048   79.885417  62740.816318  11.382812   78.322917       -0.000243     1.0     62637.730381         False          False    True
7   62843.704339   62819.415277 -90963.551433  62843.704339   91.505208  62819.415277  11.382812   12.906250        0.000000     1.0     62637.730381         False          False    True
8   62945.058506   62832.360596 -90963.551433  62945.058506  114.260417  62832.360596  11.421875  101.276035        1.315104     1.0     62637.730381         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=505/384.[0m
[08/10 19:22:37]  --------------------------------------------------------------------------------
[08/10 19:22:37]  Iteration: 313 (79 solution, 233 counterexamples)
[08/10 19:25:49]  Generator returned sat in 183.912836 secs.
[08/10 19:25:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:25:59]  Improved gap from 0 to 0
[08/10 19:26:01]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/10 19:26:01]  Verifer returned sat in 10.692481 secs.
[08/10 19:26:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   62558.754395   62556.767438 -91569.071777  62558.754395  1.988037  62556.767438        0.0  1.986956        1.986716     8.0     62556.767438            -1             -1     -1
1   62558.754626   62558.240234 -91471.058725  62558.754626  1.987188  62558.240234        0.0  0.514391        0.000000     2.0     62558.754626         False           True  False
2   62558.754626   62558.754626 -91371.058725  62558.754626  0.001221  62558.754626        0.0  0.000000        0.000000     2.0     62558.754626         False          False  False
3   62558.755251   62558.754626 -91271.059814  62558.755251  0.000625  62558.754626        0.0  0.000625       -0.000465     2.0     62558.755251         False          False  False
4   62559.742126   62558.755876 -91172.046225  62559.742126  0.987500  62558.755876        0.0  0.986250        0.000000     1.0     62558.755251         False          False  False
5   62559.742126   62559.742126 -91072.046387  62559.742126  0.010000  62559.742126        0.0  0.000000       -0.000162     2.0     62558.755251         False          False  False
6   62559.752126   62559.751501 -90972.065430  62559.752126  0.010000  62559.751501        0.0  0.000625       -0.009205     1.0     62558.755251         False          False  False
7   62559.761501   62559.761501 -90872.065674  62559.761501  0.010000  62559.761501        0.0  0.000000       -0.000074     1.0     62558.755251         False          False  False
8   62559.772126   62559.761963 -90872.065674  62559.772126  0.010625  62559.761963        0.0  0.010163      -99.989449     1.0     62558.755251         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5/4096.[0m
[08/10 19:26:01]  --------------------------------------------------------------------------------
[08/10 19:26:01]  Iteration: 314 (79 solution, 234 counterexamples)
[08/10 19:31:29]  Generator returned sat in 319.207236 secs.
[08/10 19:31:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:31:33]  Improved gap from 101/200 to 32.8125
[08/10 19:31:35]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/10 19:31:35]  Verifer returned sat in 5.316127 secs.
[08/10 19:31:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   62458.756104   62326.947126 -91371.061225  62458.756104  133.471436  62326.947126    0.00000  131.808978       99.998978     1.0     62326.947126            -1             -1   False
1   62460.417126   62458.757126 -91371.061225  62460.417126  133.470000  62458.757126    0.00125    1.658750        1.658750     1.0     62460.415876         False          False   False
2   62560.418376   62558.754626 -91371.061225  62560.418376  101.660000  62558.754626    0.00250    1.661250        1.658750     1.0     62560.415876         False          False    True
3   62593.232126   62560.417126 -91305.533725  62593.232126   34.475000  62560.417126    0.00250   32.812500        0.000000     1.0     62593.229626         False          False    True
4   62694.892126   62693.228376 -91305.533725  62694.892126  134.472500  62693.228376    0.00375    1.660000        1.658750     1.0     62593.229626         False          False    True
5   62694.892126   62693.229626 -91238.346225  62694.892126    0.010000  62693.229626    0.00375    1.658750      -31.153750     2.0     62593.229626         False          False    True
6   62760.975876   62726.042126 -91173.276367  62760.975876   67.742500  62726.042126    0.00375   34.930000       -0.000143     1.0     62593.229626         False          False    True
7   62843.229626   62760.973376 -91155.531006  62843.229626  117.183750  62760.973376    0.00375   82.252500       -0.001031     1.0     62593.229626         False          False    True
8   62853.941501   62843.227051 -91088.343750  62853.941501   92.964375  62843.227051    0.00375   10.710700      -22.101900     1.0     62593.229626         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1327/800.[0m
[08/10 19:31:35]  --------------------------------------------------------------------------------
[08/10 19:31:35]  Iteration: 315 (79 solution, 235 counterexamples)
[08/10 19:38:42]  Generator returned sat in 418.214967 secs.
[08/10 19:38:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:38:45]  Verifer returned unsat in 2.180451 secs.
[08/10 19:38:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:38:45]  --------------------------------------------------------------------------------
[08/10 19:38:45]  Iteration: 316 (80 solution, 235 counterexamples)
[08/10 19:39:10]  Generator returned sat in 17.603378 secs.
[08/10 19:39:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:39:14]  Verifer returned unsat in 2.825175 secs.
[08/10 19:39:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:39:14]  --------------------------------------------------------------------------------
[08/10 19:39:14]  Iteration: 317 (81 solution, 235 counterexamples)
[08/10 19:40:06]  Generator returned sat in 44.327233 secs.
[08/10 19:40:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:40:08]  Verifer returned unsat in 0.598866 secs.
[08/10 19:40:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:40:08]  --------------------------------------------------------------------------------
[08/10 19:40:08]  Iteration: 318 (82 solution, 235 counterexamples)
[08/10 19:40:33]  Generator returned sat in 16.714599 secs.
[08/10 19:40:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:40:34]  Verifer returned unsat in 0.570993 secs.
[08/10 19:40:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:40:34]  --------------------------------------------------------------------------------
[08/10 19:40:34]  Iteration: 319 (83 solution, 235 counterexamples)
[08/10 19:41:18]  Generator returned sat in 35.944509 secs.
[08/10 19:41:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:41:20]  Verifer returned unsat in 1.194322 secs.
[08/10 19:41:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:41:20]  --------------------------------------------------------------------------------
[08/10 19:41:20]  Iteration: 320 (84 solution, 235 counterexamples)
[08/10 19:41:51]  Generator returned sat in 22.740077 secs.
[08/10 19:41:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:41:55]  Verifer returned unsat in 2.668196 secs.
[08/10 19:41:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:41:55]  --------------------------------------------------------------------------------
[08/10 19:41:55]  Iteration: 321 (85 solution, 235 counterexamples)
[08/10 19:42:19]  Generator returned sat in 16.074937 secs.
[08/10 19:42:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:42:21]  Verifer returned unsat in 0.950065 secs.
[08/10 19:42:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:42:21]  --------------------------------------------------------------------------------
[08/10 19:42:21]  Iteration: 322 (86 solution, 235 counterexamples)
[08/10 19:42:51]  Generator returned sat in 22.178654 secs.
[08/10 19:42:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:42:55]  Improved gap from 0 to 18.75
[08/10 19:42:55]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 19:42:55]  Verifer returned sat in 3.258125 secs.
[08/10 19:42:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   51266.011963   50827.511963 -97737.211182  51266.011963  468.149902  50827.511963   0.000000  438.500000      400.000000     9.0     50827.511963            -1             -1     -1
1   51295.612061   50866.012207 -97737.211182  51295.612061  468.100098  50866.012207  29.600098  399.999756      300.000000     9.0     51266.011963         False           True  False
2   51363.662354   51066.011963 -97737.211182  51363.662354  468.050049  51066.011963  29.600098  268.050293      268.050293     7.0     51334.062256         False           True   True
3   51426.762207   51066.011963 -97737.211182  51426.762207  331.150146  51066.011963  29.600098  331.150146      231.150146     7.0     51397.162109         False          False   True
4   51426.762207   51266.011963 -97737.211182  51426.762207  240.000000  51266.011963  29.600098  131.150146      131.150146     8.0     51397.162109         False          False   True
5   51426.762207   51334.112061 -97737.211182  51426.762207  122.000000  51334.112061  29.600098   63.050049       31.150146     3.0     51397.162109         False           True  False
6   51426.762207   51378.461914 -97668.411133  51426.762207   63.000000  51378.461914  29.600098   18.700195       -0.049805     4.0     51397.162109         False          False  False
7   51441.562012   51397.211914 -97587.161133  51441.562012   33.500000  51397.211914  29.600098   14.750000       -4.000000     1.0     51397.162109         False          False  False
8   51445.562012   51415.961914 -97587.161133  51445.562012   18.750000  51415.961914  29.600098    0.000000     -100.000000     1.0     51397.162109         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/10 19:42:56]  --------------------------------------------------------------------------------
[08/10 19:42:56]  Iteration: 323 (86 solution, 236 counterexamples)
[08/10 19:44:58]  Generator returned sat in 114.551361 secs.
[08/10 19:44:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:45:03]  Improved gap from 1/20 to 1.5625
[08/10 19:45:04]  Improved number of small numbers from 64 to 69 out of a max of 114
[08/10 19:45:04]  Verifer returned sat in 5.072474 secs.
[08/10 19:45:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   51347.362793   51342.620706 -98153.999512  51347.362793    4.743652  51342.620706    0.00125   4.740837        4.739694     7.0     51342.620706            -1             -1     -1
1   51347.364144   51342.621956 -98058.740557  51347.364144    4.742188  51342.621956    0.00125   4.740938        0.000000     6.0     51347.362894         False           True   True
2   51347.364144   51347.362894 -97960.303057  51347.364144    4.739746  51347.362894    0.00125   0.000000       -1.562500     2.0     51347.362894         False           True  False
3   51377.398519   51348.925394 -97888.774932  51377.398519   30.034375  51348.925394    0.00125  28.471875        0.000000     1.0     51347.362894         False          False  False
4   51377.398519   51377.397269 -97835.648682  51377.398519   23.321875  51377.397269    0.00125   0.000000      -46.873750     2.0     51347.362894         False          False  False
5   51425.834769   51424.271019 -97737.211182  51425.834769   48.436250  51424.271019    0.00125   1.562500        0.000000     1.0     51347.362894         False          False  False
6   51527.398519   51524.270996 -97737.211182  51527.398519  103.126250  51524.270996    0.00250   3.125023        1.562500     1.0     51347.362894         False          False  False
7   51527.398519   51525.833519 -97638.773682  51527.398519    0.010000  51525.833519    0.00250   1.562500        0.000000     2.0     51347.362894         False          False   True
8   51527.398519   51527.396019 -97638.773682  51527.398519    0.500000  51527.396019    0.00250   0.000000     -100.000000     3.0     51347.362894         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25/16.[0m
[08/10 19:45:05]  --------------------------------------------------------------------------------
[08/10 19:45:05]  Iteration: 324 (86 solution, 237 counterexamples)
[08/10 19:45:50]  Generator returned sat in 36.823026 secs.
[08/10 19:45:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:45:53]  Improved gap from 1/12800 to 4.6875
[08/10 19:45:54]  Improved number of small numbers from 64 to 70 out of a max of 114
[08/10 19:45:54]  Verifer returned sat in 2.839925 secs.
[08/10 19:45:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   50750.175049   50741.652963 -98174.136475  50750.175049    0.024414  50741.652963   0.001250   8.520836       -0.024249     2.0     50741.652963            -1             -1   False
1   50754.862547   50750.198102 -98078.824029  50754.862547   13.208333  50750.198102   0.001250   4.663194       -0.024306     1.0     50741.652963         False          False   False
2   50763.274005   50754.885602 -97987.235352  50763.274005   13.074653  50754.885602   0.001250   8.387153       -0.024170     1.0     50763.272755         False          False   False
3   50767.961505   50763.297061 -97891.922987  50767.961505   13.074653  50763.297061   0.001250   4.663194       -0.024306     1.0     50763.272755         False          False   False
4   50808.586505   50767.984561 -97832.523682  50808.586505   45.288194  50767.984561   0.001250  40.600694        0.000000     1.0     50763.272755         False          False   False
5   50808.586505   50808.585255 -97737.211182  50808.586505   37.572917  50808.585255   0.001250   0.000000       -4.687500     2.0     50763.272755         False          False   False
6   50917.985811   50913.248535 -97737.211182  50917.985811  109.399306  50913.248535   0.025556   4.711720        4.687500     1.0     50763.272755         False          False   False
7   50917.985811   50913.272755 -97641.898682  50917.985811    2.000000  50913.272755   0.025556   4.687500        0.000000     2.0     50763.272755         False          False    True
8   50917.985811   50917.960255 -97641.898682  50917.985811    0.500000  50917.960255   0.025556   0.000000     -100.000000     3.0     50763.272755         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=75/16.[0m
[08/10 19:45:54]  --------------------------------------------------------------------------------
[08/10 19:45:54]  Iteration: 325 (86 solution, 238 counterexamples)
[08/10 19:50:47]  Generator returned sat in 284.139302 secs.
[08/10 19:50:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:50:49]  Improved gap from 0 to 4.6875
[08/10 19:50:50]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 19:50:50]  Verifer returned sat in 1.775234 secs.
[08/10 19:50:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   50891.105713   50886.330322 -98310.268799  50891.105713    4.745850  50886.330322   0.000000   4.775391        4.775391     2.0     50886.330322            -1             -1   False
1   50891.105713   50886.418213 -98215.044189  50891.105713    4.746094  50886.418213   0.000000   4.687500        0.000000     2.0     50886.330322         False          False   False
2   50891.135010   50891.105713 -98119.731689  50891.135010    4.716797  50891.105713   0.000000   0.029297       -4.658203     3.0     50891.135010         False          False   False
3   50908.765869   50895.793213 -98032.733643  50908.765869   17.660156  50895.793213   0.000000  12.972656       -0.029297     1.0     50891.135010         False          False   False
4   50913.218994   50908.795166 -97937.421143  50913.218994   17.425781  50908.795166   0.000000   4.423828       -0.263672     1.0     50891.135010         False          False   False
5   50952.049072   50913.482666 -97875.987549  50952.049072   43.253906  50913.482666   0.000000  38.566406        0.000000     1.0     50891.135010         False          False   False
6   50956.736572   50952.078369 -97782.704590  50956.736572   43.253906  50952.078369   0.000000   4.658203       -2.029541     1.0     50891.135010         False          False   False
7   51063.148682   51058.736572 -97782.704590  51063.148682  111.070312  51058.736572   3.411865   1.000244        0.970703     1.0     50891.135010         False          False   False
8   51063.148682   51058.766113 -97782.704590  51063.148682    1.000000  51058.766113   3.411865   0.970703      -99.029297     2.0     50891.135010         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=497/512.[0m
[08/10 19:50:50]  --------------------------------------------------------------------------------
[08/10 19:50:50]  Iteration: 326 (86 solution, 239 counterexamples)
[08/10 19:51:32]  Generator returned sat in 32.766251 secs.
[08/10 19:51:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:51:34]  Improved gap from 1/40 to 4.6875
[08/10 19:51:34]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 19:51:34]  Verifer returned sat in 1.916541 secs.
[08/10 19:51:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   50839.873779   50839.873535 -98275.689453  50839.873779    0.100098  50839.873535   0.000000    0.000244      -11.877197     8.0     50839.873535            -1             -1     -1
1   50851.851074   50851.751221 -98180.377197  50851.851074   11.977539  50851.751221   0.000000    0.099854       -4.587646     1.0     50839.873535         False           True  False
2   50863.728760   50856.438721 -98087.667236  50863.728760   11.977539  50856.438721   0.000000    7.290039        0.000000     1.0     50839.873535         False          False  False
3   50868.316406   50863.828613 -97995.652100  50868.316406   11.877686  50863.828613   0.000000    4.487793       -3.397217     1.0     50868.316406         False          False  False
4   50912.238770   50871.713623 -97936.177246  50912.238770   48.410156  50871.713623   0.000000   40.525146        0.000000     1.0     50868.316406         False          False  False
5   50912.238770   50912.238770 -97840.864746  50912.238770   40.424805  50912.238770   0.000000    0.000000       -4.687500     2.0     50868.316406         False          False  False
6   51024.338867   50916.926270 -97840.864746  51024.338867  112.100098  50916.926270   2.725098  104.687500        4.687500     1.0     50868.316406         False          False  False
7   51024.338867   51016.926270 -97745.552246  51024.338867    1.000000  51016.926270   2.725098    4.687500        0.000000     2.0     50868.316406         False          False   True
8   51024.338867   51021.613770 -97745.552246  51024.338867    0.500000  51021.613770   2.725098    0.000000     -100.000000     3.0     50868.316406         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=75/16.[0m
[08/10 19:51:35]  --------------------------------------------------------------------------------
[08/10 19:51:35]  Iteration: 327 (86 solution, 240 counterexamples)
[08/10 19:52:07]  Generator returned sat in 23.296538 secs.
[08/10 19:52:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:52:09]  Improved gap from 18177/4096 to 4.6875
[08/10 19:52:10]  Improved number of small numbers from 60 to 67 out of a max of 114
[08/10 19:52:10]  Verifer returned sat in 3.096683 secs.
[08/10 19:52:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   52862.961426   52862.911406 -100286.850098  52862.961426    0.049805  52862.911406      0.000   0.050020        0.049805     7.0     52862.911406            -1             -1     -1
1   52874.655156   52869.967656 -100198.593633  52874.655156   11.743750  52869.967656      0.000   4.687500        0.000000     1.0     52862.911406         False           True  False
2   52881.711406   52874.655156 -100108.980957  52881.711406   11.743750  52874.655156      0.000   7.056250       -3.331074     2.0     52862.911406         False          False  False
3   52886.398906   52885.042656 -100013.668633  52886.398906   11.743750  52885.042656      0.000   1.356250       -3.331250     1.0     52862.911406         False          False  False
4   52930.305156   52889.730156  -99954.243633  52930.305156   45.262500  52889.730156      0.000  40.575000        0.000000     1.0     52862.911406         False          False  False
5   52930.305156   52930.305156  -99858.931133  52930.305156   40.525000  52930.305156      0.000   0.000000       -4.687500     2.0     52862.911406         False          False  False
6   53042.605156   53034.942627  -99858.931133  53042.605156  112.300000  53034.942627      2.925   4.737529        4.687500     1.0     52862.911406         False          False  False
7   53042.605156   53034.992656  -99763.618633  53042.605156    1.000000  53034.992656      2.925   4.687500        0.000000     2.0     52862.911406         False          False   True
8   53042.605156   53039.680156  -99763.618408  53042.605156    0.500000  53039.680156      2.925   0.000000      -99.999775     3.0     52862.911406         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=75/16.[0m
[08/10 19:52:11]  --------------------------------------------------------------------------------
[08/10 19:52:11]  Iteration: 328 (86 solution, 241 counterexamples)
[08/10 19:52:45]  Generator returned sat in 25.731180 secs.
[08/10 19:52:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:52:47]  Improved gap from 1/10 to 4.6875
[08/10 19:52:48]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 19:52:48]  Verifer returned sat in 1.719954 secs.
[08/10 19:52:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   53360.780273   53349.086182 -100773.024658  53360.780273    0.050049  53349.086182   0.000000   11.694092       11.694092     8.0     53349.086182            -1             -1     -1
1   53360.830078   53356.142578 -100684.768799  53360.830078   11.743896  53356.142578   0.000000    4.687500       -0.000244     2.0     53349.086182         False           True  False
2   53367.836182   53360.830322 -100591.774658  53367.836182   11.693604  53360.830322   0.000000    7.005859        0.000000     1.0     53367.836182         False          False  False
3   53375.605225   53370.967529 -100499.593506  53375.605225   14.774902  53370.967529   0.000000    4.637695       -0.049805     1.0     53367.836182         False          False  False
4   53416.230225   53375.655029 -100440.168701  53416.230225   45.262695  53375.655029   0.000000   40.575195        0.000000     1.0     53367.836182         False          False  False
5   53416.230225   53416.230225 -100344.856201  53416.230225   40.524902  53416.230225   0.000000    0.000000       -4.687500     2.0     53367.836182         False          False  False
6   53528.530029   53420.917725 -100344.856201  53528.530029  112.299805  53420.917725   2.924805  104.687500        4.687500     1.0     53367.836182         False          False  False
7   53528.530029   53520.917725 -100249.543701  53528.530029    1.000000  53520.917725   2.924805    4.687500        0.000000     2.0     53367.836182         False          False   True
8   53528.530029   53525.605225 -100249.543701  53528.530029    0.500000  53525.605225   2.924805    0.000000     -100.000000     3.0     53367.836182         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=75/16.[0m
[08/10 19:52:48]  --------------------------------------------------------------------------------
[08/10 19:52:48]  Iteration: 329 (86 solution, 242 counterexamples)
[08/10 19:55:15]  Generator returned sat in 138.060467 secs.
[08/10 19:55:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:55:16]  Improved number of small numbers from 59 to 113 out of a max of 113
[08/10 19:55:16]  Verifer returned sat in 0.909806 secs.
[08/10 19:55:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t     cwnd_0,t   service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   55261.210205   54961.210205 -102385.148682  55261.210205     0.100000  54961.210205     0.000000   300.000000      300.000000     8.0     54961.210205            -1             -1    True
1   55261.210205   55061.210205 -102385.148682  55261.210205   299.900000  55061.210205     0.000000   200.000000      200.000000     8.0     54961.210205         False          False    True
2   56759.710205   55061.210449 -102385.148682  56759.710205  1698.500000  55061.210449     0.099854  1698.399902     1598.400146     9.0     54961.210205         False          False    True
3   58461.910400   55161.210449 -102385.148682  58461.910400  3400.600098  55161.210449  1602.300049  1698.399902     1598.400146     8.0     54961.210205          True           True    True
4   58461.910400   55261.210205 -102385.148682  58461.910400  1698.300049  55261.210205  1602.300049  1598.400146     1498.400146     9.0     54961.210205         False          False    True
5   58562.310303   55460.210205 -102385.148682  58562.310303  1698.800049  55460.210205  1602.300049  1499.800049     1498.800049     4.0     56960.010254          True           True   False
6   58761.810303   55559.710205 -102385.148682  58761.810303  1699.300049  55559.710205  1602.300049  1599.800049     1598.300049     5.0     56960.010254         False          False   False
7   58861.810303   55659.410400 -102385.148682  58861.810303  1699.800049  55659.410400  1602.300049  1600.099854     1598.300049     6.0     56960.010254         False          False   False
8   58962.010498   55761.210205 -102385.148682  58962.010498  1700.300049  55761.210205  1602.400146  1598.400146     1598.400146     7.0     56960.010254         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6547047/4096.[0m
[08/10 19:55:17]  --------------------------------------------------------------------------------
[08/10 19:55:17]  Iteration: 330 (86 solution, 243 counterexamples)
[08/10 19:57:41]  Generator returned sat in 135.597468 secs.
[08/10 19:57:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:57:52]  Improved gap from 0 to 0
[08/10 19:57:53]  Improved number of small numbers from 66 to 84 out of a max of 114
[08/10 19:57:53]  Verifer returned sat in 11.549216 secs.
[08/10 19:57:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   58813.402100   58813.401130 -102784.136963  58813.402100  0.001042  58813.401130        0.0  0.000970        0.000189     6.0     58813.401130            -1             -1   False
1   58813.402100   58813.402100 -102684.137207  58813.402100  0.000833  58813.402100        0.0  0.000000       -0.000055     2.0     58813.402100         False          False   False
2   58813.402588   58813.402380 -102584.169922  58813.402588  0.000488  58813.402380        0.0  0.000208       -0.032282     1.0     58813.402588         False          False   False
3   58814.403838   58813.435088 -102485.138890  58814.403838  1.001458  58813.435088        0.0  0.968750        0.000000     1.0     58813.402588         False          False   False
4   58814.403838   58814.403838 -102385.148682  58814.403838  0.017708  58814.403838        0.0  0.000000       -0.009792     2.0     58813.402588         False          False   False
5   58814.413838   58814.413630 -102285.148926  58814.413838  0.010000  58814.413630        0.0  0.000208       -0.000036     1.0     58813.402588         False          False   False
6   58814.424255   58814.414062 -102185.159307  58814.424255  0.010625  58814.414062        0.0  0.010192        0.000000     1.0     58813.402588         False          False   False
7   58814.424255   58814.424255 -102085.159424  58814.424255  0.010000  58814.424255        0.0  0.000000       -0.000117     2.0     58813.402588         False          False   False
8   58814.434255   58814.424561 -102085.159180  58814.434255  0.010000  58814.424561        0.0  0.009694      -99.989873     1.0     58813.402588         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1/2048.[0m
[08/10 19:57:54]  --------------------------------------------------------------------------------
[08/10 19:57:54]  Iteration: 331 (86 solution, 244 counterexamples)
[08/10 20:06:24]  Generator returned sat in 501.014473 secs.
[08/10 20:06:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:06:28]  Improved gap from 2/5 to 32.8125
[08/10 20:06:28]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 20:06:28]  Verifer returned sat in 3.470703 secs.
[08/10 20:06:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   58546.801514   58317.357422 -102384.851318  58546.801514    0.042236  58317.357422   0.000000  229.444092      132.685303     9.0     58317.357422            -1             -1     -1
1   58546.843994   58414.116211 -102384.851318  58546.843994  229.486572  58414.116211   0.000000  132.727783       32.727783     2.0     58317.357422         False           True  False
2   58613.479980   58613.437500 -102384.851318  58613.479980  199.363770  58613.437500   0.000000    0.042480       -0.636230     1.0     58613.479980         False          False  False
3   58646.928711   58614.116211 -102317.663818  58646.928711   33.491211  58614.116211   0.000000   32.812500        0.000000     1.0     58646.928711         False          False  False
4   58779.741211   58746.886475 -102317.663818  58779.741211  165.625000  58746.886475   0.042236   32.812500       32.770264     1.0     58646.928711         False          False  False
5   58779.741211   58746.928711 -102250.476318  58779.741211    0.500000  58746.928711   0.042236   32.770264       -0.042236     2.0     58646.928711         False          False   True
6   58814.466553   58779.741211 -102185.159424  58814.466553   67.495605  58779.741211   0.042236   34.683105        0.000000     1.0     58646.928711         False          False   True
7   58896.843750   58814.424316 -102167.578857  58896.843750  117.060303  58814.424316   0.042236   82.377197       -0.042236     2.0     58646.928711         False          False   True
8   58907.265625   58896.843750 -102100.391602  58907.265625   92.799072  58896.843750   0.042236   10.379639      -22.433105     1.0     58646.928711         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=134227/4096.[0m
[08/10 20:06:29]  --------------------------------------------------------------------------------
[08/10 20:06:29]  Iteration: 332 (86 solution, 245 counterexamples)
[08/10 20:08:40]  Generator returned sat in 122.754122 secs.
[08/10 20:08:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:08:42]  Improved gap from 871/20480 to 15.625
[08/10 20:08:43]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/10 20:08:43]  Verifer returned sat in 2.609465 secs.
[08/10 20:08:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   59412.990479   59212.990680 -103782.265788  59412.990479  334.337500  59212.990680     0.0125  199.987298      199.987298     2.0      59212.99068            -1             -1     -1
1   59547.328180   59312.990680 -103782.265788  59547.328180  334.325000  59312.990680     0.0250  234.312500      234.312500     2.0      59547.30318         False          False   True
2   59647.315680   59312.990723 -103782.265788  59647.315680  334.300000  59312.990723     0.0250  334.299958      234.300000     3.0      59647.29068         False          False   True
3   59647.315680   59412.990680 -103782.265788  59647.315680  334.299805  59412.990680     0.0250  234.300000      134.300000     3.0      59647.29068         False          False   True
4   59647.315680   59612.927979 -103782.265788  59647.315680    0.500000  59612.927979     0.0250   34.362702       34.300000     3.0      59647.29068         False          False   True
5   59647.315680   59631.665527 -103716.565788  59647.315680    0.500000  59631.665527     0.0250   15.625153        0.000000     4.0      59647.29068         False          False   True
6   59647.315680   59647.290680 -103632.190788  59647.315680    0.500000  59647.290680     0.0250    0.000000      -15.625000     5.0      59647.29068         False          False   True
7   59997.265680   59762.903076 -103632.190788  59997.265680  349.950000  59762.903076     0.0375  234.325104      234.312500     1.0      59647.29068         False           True  False
8   59997.265680   59762.915771 -103632.190788  59997.265680    0.500000  59762.915771     0.0375  234.312409      134.312500     2.0      59647.29068         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3749/16.[0m
[08/10 20:08:44]  --------------------------------------------------------------------------------
[08/10 20:08:44]  Iteration: 333 (86 solution, 246 counterexamples)
[08/10 20:11:20]  Generator returned sat in 146.927437 secs.
[08/10 20:11:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:11:25]  Improved gap from 1/40 to 23.4375
[08/10 20:11:26]  Improved number of small numbers from 81 to 96 out of a max of 114
[08/10 20:11:26]  Verifer returned sat in 5.249119 secs.
[08/10 20:11:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   59547.328125   59467.228369 -103822.765625  59547.328125  334.337646  59467.228369     0.0000   80.099756       59.500000     5.0     59467.228369            -1             -1     -1
1   59547.328125   59487.828369 -103782.265869  59547.328125   80.000000  59487.828369     0.0000   59.499756       -0.000244     5.0     59547.328125         False           True  False
2   59567.728516   59567.628369 -103782.265869  59567.728516   79.900146  59567.628369     0.0000    0.100146      -79.599854     1.0     59567.728516         False           True  False
3   59647.428369   59647.328369 -103782.265869  59647.428369   79.800000  59647.328369     0.0000    0.100000      -99.900000     1.0     59647.428369         False          False  False
4   60046.928369   59844.303369 -103782.265869  60046.928369  399.600000  59844.303369   176.1625   26.462500       23.437500     1.0     59647.428369         False          False  False
5   60220.265869   59870.865723 -103782.265869  60220.265869  199.800000  59870.865723   249.5000   99.900146       23.437500     1.0     59647.428369         False          False   True
6   60220.265869   59947.328369 -103705.703369  60220.265869   99.900000  59947.328369   249.5000   23.437500        0.000000     2.0     59647.428369         False          False   True
7   60220.265869   59970.765869 -103629.140869  60220.265869    2.000000  59970.765869   249.5000    0.000000      -23.437500     3.0     59647.428369         False          False   True
8   60473.690869   59994.203369 -103629.140869  60473.690869  253.425000  59994.203369   356.0500  123.437500       23.437500     1.0     60117.640869          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=375/16.[0m
[08/10 20:11:26]  --------------------------------------------------------------------------------
[08/10 20:11:26]  Iteration: 334 (86 solution, 247 counterexamples)
[08/10 20:19:31]  Generator returned sat in 475.787977 secs.
[08/10 20:19:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:19:39]  Improved gap from 1/800 to 0
[08/10 20:19:39]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 20:19:39]  Verifer returned sat in 7.438669 secs.
[08/10 20:19:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   55248.071533   55147.570312 -103782.266113  55248.071533  100.503906  55147.570312   0.001221  100.500000      100.500000     4.0     55147.570312            -1             -1     -1
1   55248.073975   55147.571533 -103782.266113  55248.073975  100.502441  55147.571533   0.002441  100.500000        0.501221     5.0     55248.071533         False          False   True
2   55248.073975   55248.070068 -103782.265869  55248.073975  100.498535  55248.070068   0.002441    0.001465      -99.498535     6.0     55248.071533         False           True   True
3   55347.573730   55347.570068 -103682.267090  55347.573730   99.501221  55347.570068   0.002441    0.001221        0.000000     1.0     55347.571289         False           True  False
4   55497.822998   55347.572754 -103682.267090  55497.822998  150.250488  55347.572754  49.750488  100.499756        0.501221     1.0     55347.571289         False          False  False
5   55497.822998   55447.571533 -103582.768311  55497.822998    0.010000  55447.571533  49.750488    0.500977        0.000000     2.0     55347.571289         False          False   True
6   55497.822998   55448.072510 -103482.768555  55497.822998    0.500000  55448.072510  49.750488    0.000000       -0.000244     3.0     55347.571289         False          False   True
7   55498.322998   55448.073975 -103383.269531  55498.322998    0.500000  55448.073975  49.750488    0.498535       -0.001221     1.0     55347.571289         False          False   True
8   55498.324463   55448.573730 -103383.269531  55498.324463    0.500000  55448.573730  49.750488    0.000244      -99.999756     1.0     55347.571289         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2053/4096.[0m
[08/10 20:19:40]  --------------------------------------------------------------------------------
[08/10 20:19:40]  Iteration: 335 (86 solution, 248 counterexamples)
[08/10 20:21:38]  Generator returned sat in 110.062195 secs.
[08/10 20:21:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:21:41]  Improved gap from 1/4096 to 25.0
[08/10 20:21:41]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 20:21:41]  Verifer returned sat in 2.061696 secs.
[08/10 20:21:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   59587.557617   59162.507568 -103804.922607  59587.557617  425.200000  59162.507568   0.000000  425.050049      425.050049     7.0     59162.507568            -1             -1     -1
1   59587.657471   59262.507568 -103804.922607  59587.657471  425.149902  59262.507568   0.050049  325.099854      325.099854     3.0     59587.607422         False           True  False
2   59587.657471   59362.507324 -103804.922607  59587.657471  325.099854  59362.507324   0.050049  225.100098      225.099854     3.0     59587.607422         False          False   True
3   59587.657471   59461.757324 -103804.922607  59587.657471   97.200000  59461.757324   0.050049  125.850098      125.099854     4.0     59587.607422         False          False   True
4   59587.657471   59562.507568 -103804.922607  59587.657471   49.100000  59562.507568   0.050049   25.099854       25.099854     5.0     59587.607422         False          False   True
5   59587.657471   59562.507568 -103730.022461  59587.657471   25.050000  59562.507568   0.050049   25.099854        0.000000     5.0     59587.607422         False          False   True
6   59587.657471   59587.607422 -103655.022461  59587.657471   13.025000  59587.607422   0.050049    0.000000      -25.000000     6.0     59587.607422         False          False   True
7   59712.507568   59612.607422 -103654.872559  59712.507568  124.850098  59612.607422   0.050049   99.850098        0.000000     1.0     59587.607422         False           True  False
8   59712.507568   59712.457520 -103654.872559  59712.507568   49.099854  59712.457520   0.050049    0.000000     -100.000000     2.0     59587.607422         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1331609/4096.[0m
[08/10 20:21:42]  --------------------------------------------------------------------------------
[08/10 20:21:42]  Iteration: 336 (86 solution, 249 counterexamples)
[08/10 20:28:03]  Generator returned sat in 372.077235 secs.
[08/10 20:28:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:28:07]  Improved gap from 3/5 to 48.4375
[08/10 20:28:08]  Improved number of small numbers from 60 to 70 out of a max of 114
[08/10 20:28:08]  Verifer returned sat in 4.628636 secs.
[08/10 20:28:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   59239.045804   59138.945801 -103781.410843  59239.045804  100.100098  59138.945801     0.0500  100.050003      100.000000     7.0     59138.945801            -1             -1     -1
1   59239.045804   59138.995804 -103781.410843  59239.045804  100.049805  59138.995804     0.0500  100.000000        0.000000     4.0     59238.995804         False           True   True
2   59438.020804   59338.995804 -103781.410843  59438.020804  298.975000  59338.995804    50.5375   48.487500       48.487500     1.0     59238.995804         False           True  False
3   59688.508304   59438.995804 -103781.410843  59688.508304  298.975000  59438.995804   201.0250   48.487500       48.487500     1.0     59238.995804         False          False   True
4   59788.508304   59538.995804 -103781.410843  59788.508304  148.487500  59538.995804   201.0250   48.487500       48.487500     1.0     59238.995804         False          False   True
5   59788.508304   59539.045654 -103729.898343  59788.508304    0.500000  59539.045654   201.0250   48.437650        0.000000     2.0     59238.995804         False          False   True
6   59788.508304   59587.483304 -103678.335938  59788.508304    0.500000  59587.483304   201.0250    0.000000      -48.437594     3.0     59238.995804         False          False   True
7   59865.002054   59640.508304 -103631.361084  59865.002054   76.493750  59640.508304   201.0250   23.468750      -24.968991     1.0     59663.977054          True           True  False
8   59932.536429   59688.946045 -103631.360840  59932.536429   91.003125  59688.946045   201.0250   42.565384      -57.434372     1.0     59663.977054         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3879/80.[0m
[08/10 20:28:09]  --------------------------------------------------------------------------------
[08/10 20:28:09]  Iteration: 337 (86 solution, 250 counterexamples)
[08/10 20:31:15]  Generator returned sat in 177.182979 secs.
[08/10 20:31:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:31:20]  Improved gap from 0 to 23.4375
[08/10 20:31:20]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 20:31:20]  Verifer returned sat in 4.362558 secs.
[08/10 20:31:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   59228.639404   59052.177002 -103794.592041  59228.639404    0.100098  59052.177002   0.000000  176.462402       76.462402     9.0     59052.177002            -1             -1     -1
1   59252.177002   59228.739502 -103794.592041  59252.177002  200.000000  59228.739502   0.000000   23.437500        0.000000     1.0     59052.177002         False           True  False
2   59287.283203   59263.945801 -103729.798340  59287.283203   58.543701  59263.945801   0.000000   23.337402       -0.100098     1.0     59287.283203         False          False  False
3   59287.483398   59287.383301 -103653.235840  59287.483398   23.537598  59287.383301   0.000000    0.100098      -23.337402     1.0     59287.483398         False          False  False
4   59534.358398   59410.820801 -103653.235840  59534.358398  246.975098  59410.820801   0.100098  123.437500      123.437500     1.0     59287.483398         False          False  False
5   59534.358398   59510.720947 -103653.235840  59534.358398  122.987549  59510.720947   0.100098   23.537354       23.437500     2.0     59287.483398         False          False   True
6   59534.358398   59510.820801 -103576.673340  59534.358398    0.500000  59510.820801   0.100098   23.437500        0.000000     3.0     59287.483398         False          False   True
7   59534.358398   59534.258301 -103503.135742  59534.358398    0.500000  59534.258301   0.100098    0.000000      -26.462402     4.0     59287.483398         False          False   True
8   59658.045898   59560.720947 -103500.361084  59658.045898  123.687500  59560.720947   0.100098   97.224854       -0.000244     1.0     59657.945801          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 20:31:21]  --------------------------------------------------------------------------------
[08/10 20:31:21]  Iteration: 338 (86 solution, 251 counterexamples)
[08/10 20:37:28]  Generator returned sat in 359.096629 secs.
[08/10 20:37:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:37:30]  Verifer returned unsat in 1.018967 secs.
[08/10 20:37:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:37:30]  --------------------------------------------------------------------------------
[08/10 20:37:30]  Iteration: 339 (87 solution, 251 counterexamples)
[08/10 20:39:44]  Generator returned sat in 124.333197 secs.
[08/10 20:39:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:39:48]  Improved gap from 1/20 to 23.4375
[08/10 20:39:48]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 20:39:48]  Verifer returned sat in 3.535542 secs.
[08/10 20:39:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   58964.255859   58787.693359 -103530.108398  58964.255859    0.100098  58787.693359    0.099854  176.462646       76.462646     9.0     58787.693359            -1             -1     -1
1   58987.693359   58964.256104 -103530.108398  58987.693359  199.900146  58964.256104    0.099854   23.337402       -0.099854     1.0     58787.693359         False           True   True
2   59011.230957   58987.693359 -103453.546143  59011.230957   46.875000  58987.693359    0.099854   23.437744        0.000000     1.0     59011.131104         False          False   True
3   59432.868408   59111.131104 -103453.546143  59432.868408  445.075195  59111.131104  198.299805  123.437500      123.437500     1.0     59011.131104         False          False   True
4   59532.968506   59211.131104 -103453.546143  59532.968506  223.537598  59211.131104  198.399902  123.437500      123.437500     2.0     59011.131104         False          False   True
5   59532.968506   59311.030762 -103453.546143  59532.968506  112.768799  59311.030762  198.399902   23.537842       23.437500     2.0     59011.131104         False          False   True
6   59532.968506   59311.131104 -103376.983643  59532.968506    0.500000  59311.131104  198.399902   23.437500        0.000000     3.0     59011.131104         False          False   True
7   59532.968506   59334.568604 -103302.170898  59532.968506    0.500000  59334.568604  198.399902    0.000000      -25.187256     4.0     59011.131104         False          False   True
8   59658.156006   59359.756104 -103302.170898  59658.156006  125.187500  59359.756104  198.399902  100.000000        0.000244     1.0     59459.756104          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 20:39:49]  --------------------------------------------------------------------------------
[08/10 20:39:49]  Iteration: 340 (87 solution, 252 counterexamples)
[08/10 20:41:55]  Generator returned sat in 117.477304 secs.
[08/10 20:41:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:41:59]  Improved gap from 0 to 18.75
[08/10 20:41:59]  Improved number of small numbers from 81 to 114 out of a max of 114
[08/10 20:41:59]  Verifer returned sat in 2.497161 secs.
[08/10 20:41:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   59152.318604   58764.768311 -103464.671143  59152.318604  387.649902  58764.768311   0.000000  387.550293      387.550049     6.0     58764.768311            -1             -1   False
1   59152.368408   58864.768311 -103464.671143  59152.368408  387.600098  58864.768311   0.049805  287.550293      287.550049     6.0     59152.318604         False          False   False
2   59152.418213   58864.768555 -103464.671143  59152.418213  287.600098  58864.768555   0.049805  287.599854      187.599854     7.0     59152.368408         False          False    True
3   59264.768555   59004.268311 -103464.671143  59264.768555  399.950195  59004.268311   0.049805  260.450439      199.950195     7.0     59152.368408         False          False    True
4   59264.768555   59152.318604 -103464.671143  59264.768555  240.000000  59152.318604   0.049805  112.400146       99.950195     8.0     59152.368408         False          False    True
5   59274.368408   59164.768555 -103464.671143  59274.368408  122.000000  59164.768555   0.049805  109.550049        9.550049     3.0     59152.368408         False           True   False
6   59274.368408   59264.768555 -103383.421143  59274.368408   63.000000  59264.768555   0.049805    9.550049       -9.199951     2.0     59152.368408         False          False   False
7   59298.318359   59283.518555 -103302.171143  59298.318359   33.500000  59283.518555   0.049805   14.750000       -4.000000     1.0     59152.368408         False          False   False
8   59302.318359   59302.268555 -103302.171143  59302.318359   18.750000  59302.268555   0.049805    0.000000     -100.000000     1.0     59152.368408         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1177805/4096.[0m
[08/10 20:41:59]  --------------------------------------------------------------------------------
[08/10 20:41:59]  Iteration: 341 (87 solution, 253 counterexamples)
[08/10 20:45:27]  Generator returned sat in 199.550526 secs.
[08/10 20:45:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:45:31]  Verifer returned unsat in 2.741348 secs.
[08/10 20:45:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:45:31]  --------------------------------------------------------------------------------
[08/10 20:45:31]  Iteration: 342 (88 solution, 253 counterexamples)
[08/10 20:45:59]  Generator returned sat in 19.064626 secs.
[08/10 20:46:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:46:02]  Verifer returned unsat in 1.663579 secs.
[08/10 20:46:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:46:02]  --------------------------------------------------------------------------------
[08/10 20:46:02]  Iteration: 343 (89 solution, 253 counterexamples)
[08/10 20:46:30]  Generator returned sat in 18.984904 secs.
[08/10 20:46:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:46:33]  Verifer returned unsat in 1.593633 secs.
[08/10 20:46:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:46:33]  --------------------------------------------------------------------------------
[08/10 20:46:33]  Iteration: 344 (90 solution, 253 counterexamples)
[08/10 20:47:01]  Generator returned sat in 19.260169 secs.
[08/10 20:47:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:47:04]  Verifer returned unsat in 2.064505 secs.
[08/10 20:47:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:47:04]  --------------------------------------------------------------------------------
[08/10 20:47:04]  Iteration: 345 (91 solution, 253 counterexamples)
[08/10 20:47:35]  Generator returned sat in 21.660262 secs.
[08/10 20:47:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:47:37]  Verifer returned unsat in 0.874354 secs.
[08/10 20:47:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:47:37]  --------------------------------------------------------------------------------
[08/10 20:47:37]  Iteration: 346 (92 solution, 253 counterexamples)
[08/10 20:48:06]  Generator returned sat in 20.145181 secs.
[08/10 20:48:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:48:08]  Verifer returned unsat in 1.114427 secs.
[08/10 20:48:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:48:08]  --------------------------------------------------------------------------------
[08/10 20:48:08]  Iteration: 347 (93 solution, 253 counterexamples)
[08/10 20:48:38]  Generator returned sat in 21.006984 secs.
[08/10 20:48:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:48:40]  Verifer returned unsat in 1.065375 secs.
[08/10 20:48:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:48:40]  --------------------------------------------------------------------------------
[08/10 20:48:40]  Iteration: 348 (94 solution, 253 counterexamples)
[08/10 20:49:13]  Generator returned sat in 23.440238 secs.
[08/10 20:49:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:49:15]  Verifer returned unsat in 1.362721 secs.
[08/10 20:49:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:49:15]  --------------------------------------------------------------------------------
[08/10 20:49:15]  Iteration: 349 (95 solution, 253 counterexamples)
[08/10 20:51:36]  Generator returned sat in 131.747515 secs.
[08/10 20:51:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:51:39]  Improved gap from 1/10 to 31.25
[08/10 20:51:41]  Improved number of small numbers from 59 to 73 out of a max of 114
[08/10 20:51:41]  Verifer returned sat in 3.643331 secs.
[08/10 20:51:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   52123.323486   52023.373697 -103124.619141  52123.323486    0.050049  52023.373697       0.00  99.949790       99.949722     7.0     52023.373697            -1             -1     -1
1   52123.423697   52123.373535 -103124.619141  52123.423697  100.050000  52123.373535       0.00   0.050162        0.049932     1.0     52023.373697         False           True  False
2   52223.423584   52212.673697 -103124.619141  52223.423584  100.050049  52212.673697       0.00  10.749887        0.049820     1.0     52023.373697         False          False  False
3   52223.523697   52223.473697 -103055.969073  52223.523697   10.850000  52223.473697       0.00   0.050000      -31.200000     1.0     52223.523697         False          False  False
4   52425.573697   52354.723697 -103055.969073  52425.573697  202.100000  52354.723697      70.75   0.100000        0.100000     1.0     52223.523697         False          False  False
5   52425.973697   52354.873697 -102987.369073  52425.973697    0.500000  52354.873697      70.75   0.350000      -30.900000     1.0     52223.523697         False          False   True
6   52497.973697   52386.123697 -102974.668945  52497.973697   72.350000  52386.123697      70.75  41.100000      -46.199872     1.0     52223.523697         False          False   True
7   52575.373697   52473.423697 -102905.919189  52575.373697  118.500000  52473.423697      70.75  31.200000       -0.050116     1.0     52223.523697         False          False   True
8   52663.773697   52504.673828 -102905.919189  52663.773697  119.600000  52504.673828      70.75  88.349869      -11.650116     1.0     52223.523697         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/10.[0m
[08/10 20:51:41]  --------------------------------------------------------------------------------
[08/10 20:51:41]  Iteration: 350 (95 solution, 254 counterexamples)
[08/10 20:59:29]  Generator returned sat in 458.890635 secs.
[08/10 20:59:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:59:35]  Verifer returned unsat in 4.741547 secs.
[08/10 20:59:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:59:35]  --------------------------------------------------------------------------------
[08/10 20:59:35]  Iteration: 351 (96 solution, 254 counterexamples)
[08/10 21:03:38]  Generator returned sat in 233.887038 secs.
[08/10 21:03:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:03:43]  Improved gap from 1/800 to 32.8125
[08/10 21:03:44]  Improved number of small numbers from 65 to 71 out of a max of 114
[08/10 21:03:44]  Verifer returned sat in 4.985479 secs.
[08/10 21:03:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   50405.772461   50372.957664 -103212.993652  50405.772461   32.817500  50372.957664    0.00250  32.812297       32.809797     1.0     50372.957664            -1             -1     -1
1   50405.775164   50372.960164 -103145.806152  50405.775164   32.815000  50372.960164    0.00250  32.812500        0.000000     2.0     50405.772664         False          False   True
2   50538.582664   50505.772664 -103145.806152  50538.582664  165.620000  50505.772664    0.00250  32.807500       32.807500     1.0     50405.772664         False           True  False
3   50605.777664   50605.772664 -103145.806152  50605.777664  100.002500  50605.772664    0.00250   0.002500        0.002500     1.0     50605.775164         False          False  False
4   50773.683914   50705.772664 -103145.806152  50773.683914  167.908750  50705.772664   35.10125  32.810000       32.810000     1.0     50605.775164         False          False  False
5   50773.683914   50705.772664 -103078.618652  50773.683914    0.010000  50705.772664   35.10125  32.810000       -0.002500     1.0     50605.775164         False          False   True
6   50841.378914   50738.585164 -103046.311152  50841.378914  100.505000  50738.585164   35.10125  67.692500        0.000000     1.0     50605.775164         False          False   True
7   50890.845164   50806.277664 -102995.777588  50890.845164  117.158750  50806.277664   35.10125  49.466250       -0.000186     2.0     50605.775164         False          False   True
8   50951.710789   50855.746582 -102956.643066  50951.710789  110.331875  50855.746582   35.10125  60.862957       -0.000039     1.0     50916.609539          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3281/100.[0m
[08/10 21:03:45]  --------------------------------------------------------------------------------
[08/10 21:03:45]  Iteration: 352 (96 solution, 255 counterexamples)
[08/10 21:07:54]  Generator returned sat in 240.053783 secs.
[08/10 21:07:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:07:57]  Improved gap from 1/20 to 32.8125
[08/10 21:07:58]  Improved number of small numbers from 77 to 89 out of a max of 114
[08/10 21:07:58]  Verifer returned sat in 3.210726 secs.
[08/10 21:07:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   50539.271484   50374.233838 -103145.806152  50539.271484    0.050049  50374.233838       0.00  165.037646       99.950146     3.0     50374.233838            -1             -1   False
1   50540.771338   50539.321289 -103145.806152  50540.771338  166.537500  50539.321289       0.00    1.450049        1.450000     1.0     50374.233838         False          False   False
2   50636.783936   50636.733838 -103145.806152  50636.783936   97.462646  50636.733838       0.00    0.050098       -2.537402     1.0     50636.783936         False          False   False
3   50639.371338   50639.321338 -103078.618652  50639.371338    2.637500  50639.321338       0.00    0.050000      -32.762500     1.0     50639.371338         False          False   False
4   50773.683838   50772.083838 -103078.618652  50773.683838  134.362500  50772.083838       0.05    1.550000        1.500000     1.0     50639.371338         False          False   False
5   50773.683838   50772.133838 -103011.431152  50773.683838    1.500000  50772.133838       0.05    1.500000      -31.312500     2.0     50639.371338         False          False    True
6   50840.633838   50804.946338 -102947.068848  50840.633838   68.450000  50804.946338       0.05   35.637500       -0.000195     1.0     50639.371338         False          False    True
7   50922.033838   50840.633838 -102928.518555  50922.033838  117.037500  50840.633838       0.05   81.350000       -0.049902     1.0     50639.371338         False          False    True
8   50933.477588   50922.033936 -102928.518555  50933.477588   92.793750  50922.033936       0.05   11.393652      -88.606152     1.0     50639.371338         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3/2.[0m
[08/10 21:07:58]  --------------------------------------------------------------------------------
[08/10 21:07:58]  Iteration: 353 (96 solution, 256 counterexamples)
[08/10 21:09:35]  Generator returned sat in 87.819556 secs.
[08/10 21:09:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:09:40]  Verifer returned unsat in 4.085887 secs.
[08/10 21:09:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:09:40]  --------------------------------------------------------------------------------
[08/10 21:09:40]  Iteration: 354 (97 solution, 256 counterexamples)
[08/10 21:10:11]  Generator returned sat in 21.626212 secs.
[08/10 21:10:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:10:15]  Verifer returned unsat in 2.891474 secs.
[08/10 21:10:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:10:15]  --------------------------------------------------------------------------------
[08/10 21:10:15]  Iteration: 355 (98 solution, 256 counterexamples)
[08/10 21:10:47]  Generator returned sat in 22.832194 secs.
[08/10 21:10:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:10:49]  Verifer returned unsat in 1.741800 secs.
[08/10 21:10:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:10:50]  --------------------------------------------------------------------------------
[08/10 21:10:50]  Iteration: 356 (99 solution, 256 counterexamples)
[08/10 21:11:28]  Generator returned sat in 28.956357 secs.
[08/10 21:11:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:11:30]  Verifer returned unsat in 1.052131 secs.
[08/10 21:11:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:11:30]  --------------------------------------------------------------------------------
[08/10 21:11:30]  Iteration: 357 (100 solution, 256 counterexamples)
[08/10 21:12:21]  Generator returned sat in 42.440786 secs.
[08/10 21:12:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:12:29]  Improved gap from 0 to 0
[08/10 21:12:29]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 21:12:29]  Verifer returned sat in 7.031108 secs.
[08/10 21:12:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   53373.866699   53373.865479 -102378.801758  53373.866699  1.403076  53373.865479        0.0  0.001221        0.000977     8.0     53373.865479            -1             -1     -1
1   53375.267334   53373.868164 -102280.203613  53375.267334  1.401855  53373.868164        0.0  1.399170       -0.000244     1.0     53375.267334         False           True  False
2   53375.270020   53375.268799 -102180.206055  53375.270020  1.401855  53375.268799        0.0  0.001221        0.000000     1.0     53375.267334         False          False  False
3   53375.675781   53375.270020 -102080.611816  53375.675781  0.406982  53375.270020        0.0  0.405762        0.000000     2.0     53375.675781         False          False  False
4   53375.675781   53375.675781 -101980.613037  53375.675781  0.404541  53375.675781        0.0  0.000000       -0.001221     2.0     53375.675781         False          False  False
5   53376.483398   53375.677002 -101881.419434  53376.483398  0.807617  53375.677002        0.0  0.806396        0.000000     1.0     53375.675781         False          False  False
6   53376.483398   53376.483398 -101781.622803  53376.483398  0.010000  53376.483398        0.0  0.000000       -0.203369     2.0     53375.675781         False          False  False
7   53376.696777   53376.687012 -101681.633057  53376.696777  0.213379  53376.687012        0.0  0.009766       -0.000244     1.0     53375.675781         False          False  False
8   53376.698242   53376.698242 -101681.631592  53376.698242  0.011230  53376.698242        0.0  0.000000      -99.997314     1.0     53375.675781         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1/400.[0m
[08/10 21:12:30]  --------------------------------------------------------------------------------
[08/10 21:12:30]  Iteration: 358 (100 solution, 257 counterexamples)
[08/10 21:16:19]  Generator returned sat in 220.356296 secs.
[08/10 21:16:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:16:21]  Improved gap from 0 to 100
[08/10 21:16:21]  Improved number of small numbers from 88 to 114 out of a max of 114
[08/10 21:16:21]  Verifer returned sat in 0.498543 secs.
[08/10 21:16:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   52976.637207   52676.687012 -101681.623291  52976.637207   299.999756  52676.687012   0.000000   299.950195      299.950195     8.0     52676.687012            -1             -1   False
1   52976.637207   52676.687012 -101681.623291  52976.637207   299.949951  52676.687012   0.000000   299.950195      199.950195     8.0     52976.637207         False          False   False
2   54576.786865   52776.687012 -101681.623291  54576.786865  1900.099854  52776.687012   0.050049  1800.049805     1700.049805     8.0     52976.637207         False          False   False
3   54576.786865   52876.687012 -101681.623291  54576.786865  1597.999756  52876.687012   0.050049  1700.049805     1600.049805     9.0     54576.736816         False          False    True
4   54576.786865   52976.687012 -101681.623291  54576.786865  1598.999756  52976.687012   0.050049  1600.049805     1500.049805     3.0     54576.736816         False           True   False
5   54576.786865   53076.687012 -101681.623291  54576.786865  1599.999756  53076.687012   0.050049  1500.049805     1400.049805     4.0     54576.736816         False          False   False
6   54677.736816   53276.687012 -101681.623291  54677.736816  1600.999756  53276.687012   0.050049  1400.999756     1400.999756     5.0     54576.736816         False          False   False
7   54878.736816   53376.687012 -101681.623291  54878.736816  1601.999756  53376.687012   0.050049  1501.999756     1501.999756     6.0     54576.736816         False          False   False
8   54979.736816   53476.686768 -101681.623291  54979.736816  1602.999756  53476.686768   0.050049  1503.000000     1502.999756     7.0     54576.736816         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=1740851/1024.[0m
[08/10 21:16:22]  --------------------------------------------------------------------------------
[08/10 21:16:22]  Iteration: 359 (100 solution, 258 counterexamples)
[08/10 21:18:13]  Generator returned sat in 102.525887 secs.
[08/10 21:18:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:18:15]  Improved gap from 0 to 23.4375
[08/10 21:18:16]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 21:18:16]  Verifer returned sat in 1.448592 secs.
[08/10 21:18:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   52794.870361   52594.820557 -101883.289795  52794.870361    0.049805  52594.820557   0.000000  200.049805      100.050049     2.0     52594.820557            -1             -1   False
1   52794.870361   52794.770508 -101883.289795  52794.870361    0.049805  52794.770508   0.000000    0.099854        0.050049     2.0     52594.820557         False          False   False
2   52794.870361   52794.820312 -101883.289795  52794.870361    0.049805  52794.820312   0.000000    0.050049      -99.949951     3.0     52594.820557         False          False   False
3   53125.787109   52953.274414 -101883.289795  53125.787109  330.966797  52953.274414   7.529297  164.983398      123.437500     1.0     52594.820557         False          False   False
4   53125.787109   53094.770508 -101883.289795  53125.787109  164.983398  53094.770508   7.529297   23.487305       23.437500     2.0     52594.820557         False          False    True
5   53125.787109   53094.820312 -101806.727295  53125.787109    0.500000  53094.820312   7.529297   23.437500        0.000000     3.0     52594.820557         False          False    True
6   53125.787109   53118.257812 -101730.165039  53125.787109    0.500000  53118.257812   7.529297    0.000000      -23.437744     4.0     52594.820557         False          False    True
7   53373.762207   53241.695312 -101730.165039  53373.762207  247.975098  53241.695312   8.629150  123.437744      123.437500     1.0     53365.133057          True           True   False
8   53373.812012   53244.720459 -101730.165039  53373.812012  123.487549  53244.720459   8.629150  120.462402       23.487305     2.0     53365.133057         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1975/16.[0m
[08/10 21:18:16]  --------------------------------------------------------------------------------
[08/10 21:18:16]  Iteration: 360 (100 solution, 259 counterexamples)
[08/10 21:20:54]  Generator returned sat in 148.279141 secs.
[08/10 21:20:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:20:59]  Improved gap from 1/400 to 31.25
[08/10 21:21:00]  Improved number of small numbers from 62 to 76 out of a max of 114
[08/10 21:21:00]  Verifer returned sat in 4.928289 secs.
[08/10 21:21:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t       wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   52626.802002   52526.794609 -101715.264092  52626.802002    0.002686  52526.794609       0.00  100.007393      100.007393     3.0     52526.794609            -1             -1   False
1   52626.802002   52626.794434 -101715.264092  52626.802002  100.000000  52626.794434       0.00    0.007568        0.007393     3.0     52526.794609         False          False   False
2   52726.791992   52714.084609 -101715.264092  52726.791992   99.997559  52714.084609       0.00   12.707383       -0.002617     1.0     52726.791992         False          False   False
3   52758.044609   52726.794609 -101646.514092  52758.044609   43.960000  52726.794609       0.00   31.250000        0.000000     1.0     52758.044609         False          False   False
4   53125.794609   52858.042109 -101646.514092  53125.794609  399.000000  52858.042109     267.74    0.012500        0.010000     1.0     52758.044609         False          False   False
5   53125.794609   52858.044609 -101577.764092  53125.794609    0.010000  52858.044609     267.74    0.010000      -31.240000     2.0     52758.044609         False          False    True
6   53198.769609   52889.294609 -101565.259033  53198.769609   72.985000  52889.294609     267.74   41.735000      -45.759941     1.0     52758.044609         False          False    True
7   53275.777109   52976.789609 -101496.509277  53275.777109  118.742500  52976.789609     267.74   31.247500       -0.002686     1.0     52758.044609         False          False    True
8   53364.274609   53008.039795 -101496.509033  53364.274609  119.745000  53008.039795     267.74   88.494814      -11.504941     1.0     52758.044609         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/100.[0m
[08/10 21:21:01]  --------------------------------------------------------------------------------
[08/10 21:21:01]  Iteration: 361 (100 solution, 260 counterexamples)
[08/10 21:26:56]  Generator returned sat in 346.075105 secs.
[08/10 21:26:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:26:59]  Verifer returned unsat in 1.934549 secs.
[08/10 21:26:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:26:59]  --------------------------------------------------------------------------------
[08/10 21:26:59]  Iteration: 362 (101 solution, 260 counterexamples)
[08/10 21:27:33]  Generator returned sat in 23.871680 secs.
[08/10 21:27:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:27:36]  Verifer returned unsat in 2.057641 secs.
[08/10 21:27:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:27:36]  --------------------------------------------------------------------------------
[08/10 21:27:36]  Iteration: 363 (102 solution, 260 counterexamples)
[08/10 21:28:14]  Generator returned sat in 29.212180 secs.
[08/10 21:28:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:28:17]  Verifer returned unsat in 1.652519 secs.
[08/10 21:28:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:28:17]  --------------------------------------------------------------------------------
[08/10 21:28:17]  Iteration: 364 (103 solution, 260 counterexamples)
[08/10 21:28:55]  Generator returned sat in 29.137865 secs.
[08/10 21:28:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:28:59]  Verifer returned unsat in 2.841108 secs.
[08/10 21:28:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:28:59]  --------------------------------------------------------------------------------
[08/10 21:28:59]  Iteration: 365 (104 solution, 260 counterexamples)
[08/10 21:30:09]  Generator returned sat in 60.456313 secs.
[08/10 21:30:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:30:12]  Verifer returned unsat in 1.572408 secs.
[08/10 21:30:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:30:12]  --------------------------------------------------------------------------------
[08/10 21:30:12]  Iteration: 366 (105 solution, 260 counterexamples)
[08/10 21:30:45]  Generator returned sat in 23.889724 secs.
[08/10 21:30:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:30:47]  Verifer returned unsat in 1.415179 secs.
[08/10 21:30:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:30:47]  --------------------------------------------------------------------------------
[08/10 21:30:47]  Iteration: 367 (106 solution, 260 counterexamples)
[08/10 21:31:20]  Generator returned sat in 23.832587 secs.
[08/10 21:31:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:31:23]  Verifer returned unsat in 1.923359 secs.
[08/10 21:31:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:31:23]  --------------------------------------------------------------------------------
[08/10 21:31:23]  Iteration: 368 (107 solution, 260 counterexamples)
[08/10 21:31:54]  Generator returned sat in 21.667455 secs.
[08/10 21:31:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:31:57]  Verifer returned unsat in 2.525420 secs.
[08/10 21:31:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:31:57]  --------------------------------------------------------------------------------
[08/10 21:31:57]  Iteration: 369 (108 solution, 260 counterexamples)
[08/10 21:32:33]  Generator returned sat in 26.506732 secs.
[08/10 21:32:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:32:36]  Verifer returned unsat in 1.596769 secs.
[08/10 21:32:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:32:36]  --------------------------------------------------------------------------------
[08/10 21:32:36]  Iteration: 370 (109 solution, 260 counterexamples)
[08/10 21:33:09]  Generator returned sat in 24.206822 secs.
[08/10 21:33:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:33:11]  Verifer returned unsat in 0.910134 secs.
[08/10 21:33:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:33:11]  --------------------------------------------------------------------------------
[08/10 21:33:11]  Iteration: 371 (110 solution, 260 counterexamples)
[08/10 21:33:57]  Generator returned sat in 36.463096 secs.
[08/10 21:33:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:33:59]  Verifer returned unsat in 1.307081 secs.
[08/10 21:33:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:33:59]  --------------------------------------------------------------------------------
[08/10 21:33:59]  Iteration: 372 (111 solution, 260 counterexamples)
[08/10 21:34:32]  Generator returned sat in 24.199404 secs.
[08/10 21:34:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:34:34]  Verifer returned unsat in 0.647444 secs.
[08/10 21:34:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:34:34]  --------------------------------------------------------------------------------
[08/10 21:34:34]  Iteration: 373 (112 solution, 260 counterexamples)
[08/10 21:35:06]  Generator returned sat in 22.213010 secs.
[08/10 21:35:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:35:07]  Verifer returned unsat in 0.698500 secs.
[08/10 21:35:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:35:07]  --------------------------------------------------------------------------------
[08/10 21:35:07]  Iteration: 374 (113 solution, 260 counterexamples)
[08/10 21:35:39]  Generator returned sat in 22.475117 secs.
[08/10 21:35:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:35:41]  Verifer returned unsat in 0.468479 secs.
[08/10 21:35:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:35:41]  --------------------------------------------------------------------------------
[08/10 21:35:41]  Iteration: 375 (114 solution, 260 counterexamples)
[08/10 21:36:30]  Generator returned sat in 40.193177 secs.
[08/10 21:36:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:36:32]  Verifer returned unsat in 0.674261 secs.
[08/10 21:36:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:36:32]  --------------------------------------------------------------------------------
[08/10 21:36:32]  Iteration: 376 (115 solution, 260 counterexamples)
[08/10 21:37:23]  Generator returned sat in 42.087147 secs.
[08/10 21:37:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:37:25]  Verifer returned unsat in 0.426891 secs.
[08/10 21:37:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:37:25]  --------------------------------------------------------------------------------
[08/10 21:37:25]  Iteration: 377 (116 solution, 260 counterexamples)
[08/10 21:38:24]  Generator returned sat in 49.444097 secs.
[08/10 21:38:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:38:25]  Verifer returned unsat in 0.461056 secs.
[08/10 21:38:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:38:25]  --------------------------------------------------------------------------------
[08/10 21:38:25]  Iteration: 378 (117 solution, 260 counterexamples)
[08/10 21:39:16]  Generator returned sat in 41.965986 secs.
[08/10 21:39:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:39:18]  Verifer returned unsat in 0.646408 secs.
[08/10 21:39:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:39:18]  --------------------------------------------------------------------------------
[08/10 21:39:18]  Iteration: 379 (118 solution, 260 counterexamples)
[08/10 21:41:56]  Generator returned sat in 148.428500 secs.
[08/10 21:41:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:41:58]  Verifer returned unsat in 0.868545 secs.
[08/10 21:41:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:41:58]  --------------------------------------------------------------------------------
[08/10 21:41:58]  Iteration: 380 (119 solution, 260 counterexamples)
[08/10 21:42:29]  Generator returned sat in 22.127013 secs.
[08/10 21:42:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:42:31]  Verifer returned unsat in 0.850729 secs.
[08/10 21:42:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:42:31]  --------------------------------------------------------------------------------
[08/10 21:42:31]  Iteration: 381 (120 solution, 260 counterexamples)
[08/10 21:45:28]  Generator returned sat in 166.948995 secs.
[08/10 21:45:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:45:30]  Improved gap from 0 to 100
[08/10 21:45:30]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 21:45:30]  Verifer returned sat in 1.450822 secs.
[08/10 21:45:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1321.839844     615.639893 -91915.789551  1321.839844  706.199951   615.639893    0.000000  706.199951      700.000000     7.0       615.639893            -1             -1   False
1    1321.839844     715.689697 -91915.789551  1321.839844  706.199951   715.689697    0.000000  606.150146      600.000000     7.0       615.639893         False          False   False
2    1421.839844     815.839844 -91915.789551  1421.839844  706.150146   815.839844    0.000000  606.000000      600.000000     6.0      1421.839844         False          False   False
3    1521.939941     921.839844 -91915.789551  1521.939941  706.100098   921.839844    0.050049  600.050049      600.050049     6.0      1521.889893         False          False   False
4    1625.989990    1021.839844 -91915.789551  1625.989990  704.100098  1021.839844    4.100098  600.050049      600.050049     7.0      1521.889893         False          False    True
5    1728.040039    1121.839600 -91915.789551  1728.040039  702.100098  1121.839600    6.150146  600.050293      600.050049     8.0      1521.889893         False          False    True
6    1828.089844    1121.839844 -91915.789551  1828.089844  700.100098  1121.839844    6.199951  700.050049      600.050049     9.0      1521.889893         False          False    True
7    1828.089844    1321.839844 -91915.789551  1828.089844  698.100098  1321.839844    6.199951  500.050049      500.050049     9.0      1521.889893         False           True    True
8    2128.089844    1321.839844 -91915.789551  2128.089844  800.050049  1321.839844  106.199951  700.050049      600.050049     9.0      1521.889893         False           True   False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=2457805/4096.[0m
[08/10 21:45:31]  --------------------------------------------------------------------------------
[08/10 21:45:31]  Iteration: 382 (120 solution, 261 counterexamples)
[08/10 21:46:43]  Generator returned sat in 63.084057 secs.
[08/10 21:46:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:46:46]  Improved gap from 0 to 23.4375
[08/10 21:46:46]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 21:46:46]  Verifer returned sat in 2.194879 secs.
[08/10 21:46:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1515.484863    1415.234619 -92709.334473  1515.484863  100.249756  1415.234619   0.050049  100.200195      100.050049     6.0      1415.234619            -1             -1     -1
1    1515.484863    1515.384766 -92709.334473  1515.484863  100.200000  1515.384766   0.050049    0.050049        0.050049     6.0      1515.434814         False          False   True
2    1615.584717    1610.734863 -92709.334473  1615.584717  100.149902  1610.734863   0.100098    4.749756        0.099854     1.0      1615.484619         False          False   True
3    1715.634766    1712.734863 -92709.334473  1715.634766  104.799805  1712.734863   0.150146    2.749756        0.099854     1.0      1615.484619         False          False   True
4    1815.684814    1815.384766 -92709.334473  1815.684814  102.799805  1815.384766   0.200195    0.099854        0.099854     1.0      1615.484619         False          False   True
5    1916.384766    1815.435059 -92709.334473  1916.384766  100.799805  1815.435059   0.900146  100.049561        0.099854     2.0      1615.484619         False          False   True
6    1916.384766    1915.384766 -92632.772217  1916.384766   98.799805  1915.384766   0.900146    0.099854      -23.337891     2.0      1615.484619         False          False   True
7    1966.184814    1941.897217 -92559.284668  1966.184814   49.899902  1941.897217   0.900146   23.387451       -0.050293     1.0      1615.484619         False          False   True
8    1968.247314    1965.334961 -92559.284668  1968.247314   25.449951  1965.334961   0.900146    2.012207      -97.987793     1.0      1615.484619         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=409/4096.[0m
[08/10 21:46:47]  --------------------------------------------------------------------------------
[08/10 21:46:47]  Iteration: 383 (120 solution, 262 counterexamples)
[08/10 21:51:29]  Generator returned sat in 272.496981 secs.
[08/10 21:51:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:51:31]  Improved gap from 0 to 23.4375
[08/10 21:51:32]  Improved number of small numbers from 62 to 112 out of a max of 114
[08/10 21:51:32]  Verifer returned sat in 1.826156 secs.
[08/10 21:51:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -1282.94043   -1906.427734 -92709.334473  -1282.94043    0.025146 -1906.427734   0.050049  623.437256      523.437500     6.0     -1906.427734            -1             -1     -1
1    -1282.94043   -1706.427979 -92709.334473  -1282.94043  623.412354 -1706.427979   0.050049  423.437500      423.437500     4.0     -1906.427734         False          False   True
2    -1282.94043   -1627.614990 -92709.334473  -1282.94043    0.025146 -1627.614990   0.050049  344.624512      323.437500     4.0     -1282.990479         False          False   True
3    -1282.94043   -1506.427979 -92709.334473  -1282.94043  344.599609 -1506.427979   0.050049  223.437500      223.437500     4.0     -1282.990479         False          False   True
4    -1282.94043   -1406.427979 -92709.334473  -1282.94043  173.299805 -1406.427979   0.050049  123.437500      123.437500     5.0     -1282.990479         False          False   True
5    -1282.94043   -1327.840576 -92709.334473  -1282.94043   87.649902 -1327.840576   0.050049   44.850098       23.437500     6.0     -1282.990479         False          False   True
6    -1282.94043   -1306.427979 -92632.771973  -1282.94043   44.824951 -1306.427979   0.050049   23.437500        0.000000     7.0     -1282.990479         False          False   True
7    -1282.94043   -1282.990479 -92559.309326  -1282.94043   23.412476 -1282.990479   0.050049    0.000000      -26.537354     8.0     -1282.990479         False          False   True
8    -1160.50293   -1256.452881 -92559.309326  -1160.50293  122.437500 -1256.452881   0.050049   95.899902       -4.099854     1.0     -1282.990479         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=867251/2048.[0m
[08/10 21:51:33]  --------------------------------------------------------------------------------
[08/10 21:51:33]  Iteration: 384 (120 solution, 263 counterexamples)
[08/10 22:00:24]  Generator returned sat in 522.324432 secs.
[08/10 22:00:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:00:31]  Improved gap from 0 to 18.75
[08/10 22:00:31]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 22:00:31]  Verifer returned sat in 5.707871 secs.
[08/10 22:00:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1406.402832   -1893.952881 -92721.809570 -1406.402832  487.650146 -1893.952881        0.0  487.550049      387.550049     5.0     -1893.952881            -1             -1    True
1   -1406.353027   -1693.953125 -92721.809570 -1406.353027  487.599854 -1693.953125        0.0  287.600098      287.599854     5.0     -1406.353027         False          False    True
2   -1338.353027   -1593.953125 -92721.809570 -1338.353027  355.600098 -1593.953125        0.0  255.600098      255.599854     6.0     -1338.353027         False          False    True
3   -1338.353027   -1515.252686 -92721.809570 -1338.353027   97.299805 -1515.252686        0.0  176.899658      155.599854     7.0     -1338.353027         False          False    True
4   -1275.252686   -1406.402832 -92721.809570 -1275.252686  240.000000 -1406.402832        0.0  131.150146      118.700195     8.0     -1338.353027         False          False    True
5   -1275.252686   -1338.302734 -92721.809570 -1275.252686  122.000000 -1338.302734        0.0   63.050049       18.700195     2.0     -1338.353027         False           True   False
6   -1275.252686   -1293.952881 -92640.559570 -1275.252686   63.000000 -1293.952881        0.0   18.700195       -0.049805     3.0     -1338.353027         False          False   False
7   -1260.452881   -1275.202881 -92559.309570 -1260.452881   33.500000 -1275.202881        0.0   14.750000       -4.000000     1.0     -1338.353027         False          False   False
8   -1256.452881   -1256.452881 -92559.309326 -1256.452881   18.750000 -1256.452881        0.0    0.000000      -99.999756     1.0     -1338.353027         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1178215/4096.[0m
[08/10 22:00:32]  --------------------------------------------------------------------------------
[08/10 22:00:32]  Iteration: 385 (120 solution, 264 counterexamples)
[08/10 22:02:57]  Generator returned sat in 135.994803 secs.
[08/10 22:02:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:02:59]  Improved gap from 1/6400 to 100
[08/10 22:02:59]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/10 22:02:59]  Verifer returned sat in 0.656209 secs.
[08/10 22:02:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1406.403076   -1406.502686 -92559.309326 -1406.403076     0.049805 -1406.502686   0.000000     0.099609        0.049805     2.0     -1406.502686            -1             -1   False
1   -1406.403076   -1406.452637 -92559.309326 -1406.403076     0.050000 -1406.452637   0.000000     0.049561      -99.950195     2.0     -1406.502686         False          False   False
2     593.647217   -1206.502930 -92559.309326   593.647217  2000.099854 -1206.502930   0.050049  1800.100098     1800.050049     1.0     -1406.502686         False          False   False
3     593.647217   -1206.452637 -92559.309326   593.647217  1690.050049 -1206.452637   0.050049  1800.049805     1700.050049     2.0       593.597168         False          False    True
4     593.647217   -1100.502930 -92559.309326   593.647217  1692.050049 -1100.502930   0.050049  1694.100098     1600.050049     3.0       593.597168         False          False    True
5     593.647217   -1006.452881 -92559.309326   593.647217  1694.050049 -1006.452881   0.050049  1600.050049     1500.050049     4.0       593.597168         False          False    True
6     689.647217    -806.452881 -92559.309326   689.647217  1696.050049  -806.452881   0.050049  1496.050049     1496.050049     5.0       593.597168         False          False    True
7     891.647217    -706.452881 -92559.309326   891.647217  1698.050049  -706.452881   0.050049  1598.050049     1598.050049     6.0       593.597168         False          False    True
8     993.647217    -606.452881 -92559.309326   993.647217  1700.050049  -606.452881   0.050049  1600.050049     1600.050049     7.0       593.597168         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=7373005/4096.[0m
[08/10 22:03:00]  --------------------------------------------------------------------------------
[08/10 22:03:00]  Iteration: 386 (120 solution, 265 counterexamples)
[08/10 22:07:48]  Generator returned sat in 279.087776 secs.
[08/10 22:07:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:07:50]  Verifer returned unsat in 1.099238 secs.
[08/10 22:07:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:07:51]  --------------------------------------------------------------------------------
[08/10 22:07:51]  Iteration: 387 (121 solution, 265 counterexamples)
[08/10 22:11:31]  Generator returned sat in 210.887994 secs.
[08/10 22:11:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:11:33]  Verifer returned unsat in 1.269822 secs.
[08/10 22:11:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:11:33]  --------------------------------------------------------------------------------
[08/10 22:11:33]  Iteration: 388 (122 solution, 265 counterexamples)
[08/10 22:12:10]  Generator returned sat in 26.829715 secs.
[08/10 22:12:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:12:12]  Verifer returned unsat in 1.438986 secs.
[08/10 22:12:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:12:12]  --------------------------------------------------------------------------------
[08/10 22:12:12]  Iteration: 389 (123 solution, 265 counterexamples)
[08/10 22:12:53]  Generator returned sat in 31.468850 secs.
[08/10 22:12:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:12:55]  Verifer returned unsat in 0.563177 secs.
[08/10 22:12:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:12:55]  --------------------------------------------------------------------------------
[08/10 22:12:55]  Iteration: 390 (124 solution, 265 counterexamples)
[08/10 22:13:29]  Generator returned sat in 24.231407 secs.
[08/10 22:13:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:13:30]  Verifer returned unsat in 0.664418 secs.
[08/10 22:13:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:13:30]  --------------------------------------------------------------------------------
[08/10 22:13:30]  Iteration: 391 (125 solution, 265 counterexamples)
[08/10 22:14:02]  Generator returned sat in 22.602371 secs.
[08/10 22:14:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:14:04]  Verifer returned unsat in 0.745593 secs.
[08/10 22:14:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:14:04]  --------------------------------------------------------------------------------
[08/10 22:14:04]  Iteration: 392 (126 solution, 265 counterexamples)
[08/10 22:14:36]  Generator returned sat in 22.690377 secs.
[08/10 22:14:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:14:38]  Verifer returned unsat in 0.444955 secs.
[08/10 22:14:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:14:38]  --------------------------------------------------------------------------------
[08/10 22:14:38]  Iteration: 393 (127 solution, 265 counterexamples)
[08/10 22:15:10]  Generator returned sat in 22.841088 secs.
[08/10 22:15:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:15:12]  Verifer returned unsat in 0.547427 secs.
[08/10 22:15:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:15:12]  --------------------------------------------------------------------------------
[08/10 22:15:12]  Iteration: 394 (128 solution, 265 counterexamples)
[08/10 22:15:44]  Generator returned sat in 22.571593 secs.
[08/10 22:15:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:15:46]  Verifer returned unsat in 0.535876 secs.
[08/10 22:15:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:15:46]  --------------------------------------------------------------------------------
[08/10 22:15:46]  Iteration: 395 (129 solution, 265 counterexamples)
[08/10 22:16:18]  Generator returned sat in 22.573609 secs.
[08/10 22:16:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:16:20]  Verifer returned unsat in 0.591787 secs.
[08/10 22:16:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:16:20]  --------------------------------------------------------------------------------
[08/10 22:16:20]  Iteration: 396 (130 solution, 265 counterexamples)
[08/10 22:16:53]  Generator returned sat in 23.738358 secs.
[08/10 22:16:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:16:55]  Verifer returned unsat in 0.772158 secs.
[08/10 22:16:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:16:55]  --------------------------------------------------------------------------------
[08/10 22:16:55]  Iteration: 397 (131 solution, 265 counterexamples)
[08/10 22:17:27]  Generator returned sat in 22.372178 secs.
[08/10 22:17:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:17:29]  Verifer returned unsat in 0.685236 secs.
[08/10 22:17:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:17:29]  --------------------------------------------------------------------------------
[08/10 22:17:29]  Iteration: 398 (132 solution, 265 counterexamples)
[08/10 22:18:01]  Generator returned sat in 23.335463 secs.
[08/10 22:18:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:18:03]  Verifer returned unsat in 0.579839 secs.
[08/10 22:18:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:18:03]  --------------------------------------------------------------------------------
[08/10 22:18:03]  Iteration: 399 (133 solution, 265 counterexamples)
[08/10 22:18:34]  Generator returned sat in 22.213095 secs.
[08/10 22:18:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:18:36]  Verifer returned unsat in 0.694246 secs.
[08/10 22:18:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:18:36]  --------------------------------------------------------------------------------
[08/10 22:18:36]  Iteration: 400 (134 solution, 265 counterexamples)
[08/10 22:19:08]  Generator returned sat in 22.848970 secs.
[08/10 22:19:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:19:10]  Verifer returned unsat in 0.831040 secs.
[08/10 22:19:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:19:10]  --------------------------------------------------------------------------------
[08/10 22:19:10]  Iteration: 401 (135 solution, 265 counterexamples)
[08/10 22:19:42]  Generator returned sat in 22.380903 secs.
[08/10 22:19:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:19:43]  Verifer returned unsat in 0.679762 secs.
[08/10 22:19:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:19:43]  --------------------------------------------------------------------------------
[08/10 22:19:43]  Iteration: 402 (136 solution, 265 counterexamples)
[08/10 22:20:15]  Generator returned sat in 22.372643 secs.
[08/10 22:20:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:20:17]  Verifer returned unsat in 0.680101 secs.
[08/10 22:20:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:20:17]  --------------------------------------------------------------------------------
[08/10 22:20:17]  Iteration: 403 (137 solution, 265 counterexamples)
[08/10 22:20:48]  Generator returned sat in 22.104476 secs.
[08/10 22:20:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:20:50]  Verifer returned unsat in 0.674525 secs.
[08/10 22:20:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:20:50]  --------------------------------------------------------------------------------
[08/10 22:20:50]  Iteration: 404 (138 solution, 265 counterexamples)
[08/10 22:21:23]  Generator returned sat in 23.293974 secs.
[08/10 22:21:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:21:25]  Verifer returned unsat in 0.503546 secs.
[08/10 22:21:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:21:25]  --------------------------------------------------------------------------------
[08/10 22:21:25]  Iteration: 405 (139 solution, 265 counterexamples)
[08/10 22:21:56]  Generator returned sat in 22.153072 secs.
[08/10 22:21:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:21:58]  Verifer returned unsat in 0.484777 secs.
[08/10 22:21:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:21:58]  --------------------------------------------------------------------------------
[08/10 22:21:58]  Iteration: 406 (140 solution, 265 counterexamples)
[08/10 22:22:30]  Generator returned sat in 22.251729 secs.
[08/10 22:22:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:22:31]  Verifer returned unsat in 0.678227 secs.
[08/10 22:22:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:22:31]  --------------------------------------------------------------------------------
[08/10 22:22:31]  Iteration: 407 (141 solution, 265 counterexamples)
[08/10 22:23:03]  Generator returned sat in 21.731876 secs.
[08/10 22:23:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:23:04]  Verifer returned unsat in 0.604325 secs.
[08/10 22:23:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:23:04]  --------------------------------------------------------------------------------
[08/10 22:23:04]  Iteration: 408 (142 solution, 265 counterexamples)
[08/10 22:23:36]  Generator returned sat in 21.923572 secs.
[08/10 22:23:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:23:37]  Verifer returned unsat in 0.488660 secs.
[08/10 22:23:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:23:37]  --------------------------------------------------------------------------------
[08/10 22:23:37]  Iteration: 409 (143 solution, 265 counterexamples)
[08/10 22:24:12]  Generator returned sat in 25.371597 secs.
[08/10 22:24:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:24:13]  Verifer returned unsat in 0.433951 secs.
[08/10 22:24:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:24:13]  --------------------------------------------------------------------------------
[08/10 22:24:13]  Iteration: 410 (144 solution, 265 counterexamples)
[08/10 22:25:07]  Generator returned sat in 44.856842 secs.
[08/10 22:25:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:25:09]  Verifer returned unsat in 0.577860 secs.
[08/10 22:25:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:25:09]  --------------------------------------------------------------------------------
[08/10 22:25:09]  Iteration: 411 (145 solution, 265 counterexamples)
[08/10 22:26:01]  Generator returned sat in 42.617919 secs.
[08/10 22:26:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:26:03]  Verifer returned unsat in 0.571732 secs.
[08/10 22:26:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:26:03]  --------------------------------------------------------------------------------
[08/10 22:26:03]  Iteration: 412 (146 solution, 265 counterexamples)
[08/10 22:26:56]  Generator returned sat in 43.208527 secs.
[08/10 22:26:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:26:57]  Verifer returned unsat in 0.432920 secs.
[08/10 22:26:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:26:57]  --------------------------------------------------------------------------------
[08/10 22:26:57]  Iteration: 413 (147 solution, 265 counterexamples)
[08/10 22:27:48]  Generator returned sat in 41.749369 secs.
[08/10 22:27:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:27:49]  Verifer returned unsat in 0.336017 secs.
[08/10 22:27:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:27:50]  --------------------------------------------------------------------------------
[08/10 22:27:50]  Iteration: 414 (148 solution, 265 counterexamples)
[08/10 22:28:42]  Generator returned sat in 43.261075 secs.
[08/10 22:28:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:28:44]  Verifer returned unsat in 0.397163 secs.
[08/10 22:28:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:28:44]  --------------------------------------------------------------------------------
[08/10 22:28:44]  Iteration: 415 (149 solution, 265 counterexamples)
[08/10 22:29:35]  Generator returned sat in 41.595669 secs.
[08/10 22:29:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:29:36]  Verifer returned unsat in 0.527398 secs.
[08/10 22:29:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:29:36]  --------------------------------------------------------------------------------
[08/10 22:29:36]  Iteration: 416 (150 solution, 265 counterexamples)
[08/10 22:30:08]  Generator returned sat in 21.987384 secs.
[08/10 22:30:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:30:12]  Improved gap from 0 to 0
[08/10 22:30:13]  Improved number of small numbers from 59 to 78 out of a max of 114
[08/10 22:30:13]  Verifer returned sat in 4.281441 secs.
[08/10 22:30:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   17683.262451   17683.251383 -93356.724854  17683.262451  0.012695  17683.251383        0.0  0.011068        0.010853     2.0     17683.251383            -1             -1   False
1   17683.263258   17683.255127 -93256.737061  17683.263258  0.011875  17683.255127        0.0  0.008132       -0.000547     3.0     17683.263258         False          False   False
2   17683.267090   17683.263883 -93156.740479  17683.267090  0.011963  17683.263883        0.0  0.003206       -0.000133     1.0     17683.263258         False          False   False
3   17684.263883   17684.263258 -93057.737305  17684.263883  1.000000  17684.263258        0.0  0.000625       -0.000166     1.0     17683.263258         False          False   False
4   17684.275133   17684.264648 -92957.748389  17684.275133  0.011875  17684.264648        0.0  0.010485        0.000000     1.0     17683.263258         False          False   False
5   17684.275133   17684.275133 -92857.748779  17684.275133  0.010000  17684.275133        0.0  0.000000       -0.000391     2.0     17683.263258         False          False   False
6   17684.286383   17684.275879 -92757.759639  17684.286383  0.011250  17684.275879        0.0  0.010505        0.000000     1.0     17683.263258         False          False   False
7   17684.286383   17684.286383 -92657.759766  17684.286383  0.010000  17684.286383        0.0  0.000000       -0.000127     2.0     17683.263258         False          False   False
8   17684.296383   17684.296143 -92657.759766  17684.296383  0.010000  17684.296143        0.0  0.000241      -99.990127     1.0     17683.263258         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5/4096.[0m
[08/10 22:30:14]  --------------------------------------------------------------------------------
[08/10 22:30:14]  Iteration: 417 (150 solution, 266 counterexamples)
[08/10 22:32:18]  Generator returned sat in 114.828214 secs.
[08/10 22:32:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:32:21]  Verifer returned unsat in 1.488783 secs.
[08/10 22:32:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:32:21]  --------------------------------------------------------------------------------
[08/10 22:32:21]  Iteration: 418 (151 solution, 266 counterexamples)
[08/10 22:33:00]  Generator returned sat in 29.564887 secs.
[08/10 22:33:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:03]  Verifer returned unsat in 1.936810 secs.
[08/10 22:33:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:03]  --------------------------------------------------------------------------------
[08/10 22:33:03]  Iteration: 419 (152 solution, 266 counterexamples)
[08/10 22:33:34]  Generator returned sat in 21.555650 secs.
[08/10 22:33:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:37]  Verifer returned unsat in 2.102806 secs.
[08/10 22:33:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:37]  --------------------------------------------------------------------------------
[08/10 22:33:37]  Iteration: 420 (153 solution, 266 counterexamples)
[08/10 22:34:09]  Generator returned sat in 22.323832 secs.
[08/10 22:34:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:34:11]  Verifer returned unsat in 1.240769 secs.
[08/10 22:34:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:34:11]  --------------------------------------------------------------------------------
[08/10 22:34:11]  Iteration: 421 (154 solution, 266 counterexamples)
[08/10 22:35:34]  Generator returned sat in 73.677511 secs.
[08/10 22:35:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:35:37]  Improved gap from 0 to 23.4375
[08/10 22:35:38]  Improved number of small numbers from 59 to 85 out of a max of 114
[08/10 22:35:38]  Verifer returned sat in 2.176533 secs.
[08/10 22:35:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   20688.437012   20546.324427 -96612.245850  20688.437012    0.099854  20546.324427        0.0  142.112585      100.000251     2.0     20546.324427            -1             -1   False
1   20688.437012   20588.437012 -96612.245850  20688.437012  139.408447  20588.437012        0.0  100.000000        0.000251     2.0     20546.324427         False          False   False
2   20711.874512   20688.536865 -96535.783516  20711.874512  123.437500  20688.536865        0.0   23.337646       -0.099915     1.0     20711.874512         False          False   False
3   20735.411865   20711.974427 -96459.221016  20735.411865   46.875000  20711.974427        0.0   23.437438       -0.000062     1.0     20735.411865         False          False   False
4   20958.949427   20835.411927 -96459.221016  20958.949427  246.975000  20835.411927        0.1  123.437500      123.437500     1.0     20735.411865         False          False   False
5   20958.949427   20935.312012 -96459.221016  20958.949427  121.987500  20935.312012        0.1   23.537415       23.437500     2.0     20735.411865         False          False    True
6   20958.949427   20935.411927 -96382.658516  20958.949427    0.500000  20935.411927        0.1   23.437500        0.000000     3.0     20735.411865         False          False    True
7   20958.949427   20958.849427 -96306.096191  20958.949427    0.500000  20958.849427        0.1    0.000000      -23.437676     4.0     20735.411865         False          False    True
8   21142.605677   20985.311768 -96306.096191  21142.605677  183.656250  20985.311768        0.1  157.193910       60.218574     1.0     21142.505677          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 22:35:38]  --------------------------------------------------------------------------------
[08/10 22:35:38]  Iteration: 422 (154 solution, 267 counterexamples)
[08/10 22:41:15]  Generator returned sat in 326.917843 secs.
[08/10 22:41:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:41:17]  Improved gap from 0 to 23.4375
[08/10 22:41:17]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 22:41:17]  Verifer returned sat in 1.491572 secs.
[08/10 22:41:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   21034.181885   20810.644287 -96459.220947  21034.181885    0.050000  20810.644287   0.000000  223.537598      199.899902     3.0     20810.644287            -1             -1   False
1   21034.231689   20834.281982 -96459.220947  21034.231689  223.587402  20834.281982   0.000000  199.949707       99.949707     3.0     20810.644287         False          False   False
2   21057.819336   21034.281982 -96459.220947  21057.819336  223.537354  21034.281982   0.000000   23.537354       23.537354     1.0     21057.819336         False          False   False
3   21257.769287   21134.281982 -96459.220947  21257.769287  223.487305  21134.281982   0.049805  123.437500      123.437500     1.0     21257.719482         False          False   False
4   21257.769287   21234.231934 -96459.220947  21257.769287  113.243652  21234.231934   0.049805   23.487549       23.437500     2.0     21257.719482         False          False    True
5   21257.769287   21234.281982 -96382.658447  21257.769287    0.500000  21234.281982   0.049805   23.437500        0.000000     3.0     21257.719482         False          False    True
6   21257.769287   21257.719482 -96307.095947  21257.769287    0.500000  21257.719482   0.049805    0.000000      -24.437500     4.0     21257.719482         False          False    True
7   21505.644287   21282.156982 -96307.095947  21505.644287  247.875000  21282.156982   0.049805  223.437500      123.437500     1.0     21257.719482         False           True   False
8   21505.644287   21384.182129 -96307.095947  21505.644287   96.850098  21384.182129   0.049805  121.412354       23.437500     2.0     21257.719482         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1975/16.[0m
[08/10 22:41:18]  --------------------------------------------------------------------------------
[08/10 22:41:18]  Iteration: 423 (154 solution, 268 counterexamples)
[08/10 22:44:24]  Generator returned sat in 176.315896 secs.
[08/10 22:44:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:44:27]  Improved gap from 1/10 to 18.75
[08/10 22:44:27]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 22:44:27]  Verifer returned sat in 2.408639 secs.
[08/10 22:44:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   21055.444092   20655.444092 -96459.220947  21055.444092    0.100098  20655.444092   0.000000  400.000000      399.999756     6.0     20655.444092            -1             -1   False
1   21055.544189   20655.444336 -96459.220947  21055.544189  400.100098  20655.444336   0.099854  400.000000      300.000000     6.0     20655.444092         False          False   False
2   21120.494141   20855.444336 -96459.220947  21120.494141  464.949951  20855.444336   0.099854  264.949951      264.949951     7.0     20655.444092         False          False    True
3   21186.694336   20908.444092 -96459.220947  21186.694336  331.150146  20908.444092   0.099854  278.150391      231.150146     7.0     21186.594482         False          False    True
4   21186.694336   21055.444092 -96459.220947  21186.694336  255.000000  21055.444092   0.099854  131.150391      131.150146     8.0     21186.594482         False          False    True
5   21186.694336   21120.494141 -96459.220947  21186.694336  129.000000  21120.494141   0.099854   66.100342       31.150146     3.0     21186.594482         False           True   False
6   21186.694336   21167.844238 -96390.371094  21186.694336   66.000000  21167.844238   0.099854   18.750244        0.000000     4.0     21186.594482         False          False   False
7   21202.444092   21186.594482 -96309.121094  21202.444092   34.500000  21186.594482   0.099854   15.749756       -3.000244     5.0     21186.594482         False          False   False
8   21205.444336   21205.344482 -96309.120850  21205.444336   18.750000  21205.344482   0.099854    0.000000      -99.999756     1.0     21186.594482         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/10 22:44:28]  --------------------------------------------------------------------------------
[08/10 22:44:28]  Iteration: 424 (154 solution, 269 counterexamples)
[08/10 22:47:59]  Generator returned sat in 201.227583 secs.
[08/10 22:48:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:48:01]  Verifer returned unsat in 1.067031 secs.
[08/10 22:48:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:48:01]  --------------------------------------------------------------------------------
[08/10 22:48:01]  Iteration: 425 (155 solution, 269 counterexamples)
[08/10 22:48:45]  Generator returned sat in 34.440654 secs.
[08/10 22:48:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:48:47]  Verifer returned unsat in 1.121146 secs.
[08/10 22:48:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:48:47]  --------------------------------------------------------------------------------
[08/10 22:48:47]  Iteration: 426 (156 solution, 269 counterexamples)
[08/10 22:49:56]  Generator returned sat in 59.629503 secs.
[08/10 22:49:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:49:58]  Verifer returned unsat in 0.986151 secs.
[08/10 22:49:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:49:58]  --------------------------------------------------------------------------------
[08/10 22:49:58]  Iteration: 427 (157 solution, 269 counterexamples)
[08/10 22:50:35]  Generator returned sat in 27.016654 secs.
[08/10 22:50:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:50:38]  Verifer returned unsat in 1.483551 secs.
[08/10 22:50:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:50:38]  --------------------------------------------------------------------------------
[08/10 22:50:38]  Iteration: 428 (158 solution, 269 counterexamples)
[08/10 22:51:13]  Generator returned sat in 25.577534 secs.
[08/10 22:51:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:51:17]  Improved number of small numbers from 67 to 91 out of a max of 113
[08/10 22:51:17]  Verifer returned sat in 3.355609 secs.
[08/10 22:51:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   16806.244385   16706.144531 -96309.121094  16806.244385   100.199951  16706.144531        0.0   100.099854        0.099902     2.0     16706.144531            -1             -1   False
1   16806.244629   16806.144531 -96309.121094  16806.244629   100.100098  16806.144531        0.0     0.100098      -99.899854     2.0     16806.244629         False          False   False
2   16906.244629   16906.144482 -96309.121094  16906.244629   100.100098  16906.144482        0.0     0.100146      -99.899854     1.0     16806.244629         False          False   False
3   19043.644482   17006.144482 -96309.121094  19043.644482  2137.500000  17006.144482      437.4  1600.100000     1500.100000     1.0     16806.244629         False          False   False
4   19043.644482   17106.144531 -96309.121094  19043.644482  1069.250000  17106.144531      437.4  1500.099951     1400.100000     2.0     16806.244629         False          False    True
5   19043.644482   17268.144482 -96309.121094  19043.644482  1219.250000  17268.144482      437.4  1338.100000     1300.100000     3.0     16806.244629         False          False    True
6   19105.794482   17406.044482 -96309.121094  19105.794482  1400.250000  17406.044482      437.4  1262.350000     1262.250000     4.0     16806.244629         False          False    True
7   19443.644482   17406.144531 -96309.121094  19443.644482  1600.200000  17406.144531      437.4  1600.099951     1500.100000     5.0     16806.244629         False          False    True
8   19443.644482   17506.144531 -96309.121094  19443.644482  1102.100000  17506.144531      437.4  1500.099951     1400.100000     6.0     19006.244482          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=15001/10.[0m
[08/10 22:51:18]  --------------------------------------------------------------------------------
[08/10 22:51:18]  Iteration: 429 (158 solution, 270 counterexamples)
[08/10 22:52:01]  Generator returned sat in 32.848762 secs.
[08/10 22:52:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:52:06]  Verifer returned unsat in 4.014584 secs.
[08/10 22:52:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:52:06]  --------------------------------------------------------------------------------
[08/10 22:52:06]  Iteration: 430 (159 solution, 270 counterexamples)
[08/10 22:52:41]  Generator returned sat in 25.732561 secs.
[08/10 22:52:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:52:45]  Verifer returned unsat in 2.355424 secs.
[08/10 22:52:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:52:45]  --------------------------------------------------------------------------------
[08/10 22:52:45]  Iteration: 431 (160 solution, 270 counterexamples)
[08/10 22:54:21]  Generator returned sat in 87.068268 secs.
[08/10 22:54:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:54:24]  Verifer returned unsat in 2.033991 secs.
[08/10 22:54:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:54:24]  --------------------------------------------------------------------------------
[08/10 22:54:24]  Iteration: 432 (161 solution, 270 counterexamples)
[08/10 22:54:59]  Generator returned sat in 24.780507 secs.
[08/10 22:55:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:55:01]  Improved gap from 169/5 to 100
[08/10 22:55:02]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 22:55:02]  Verifer returned sat in 2.114069 secs.
[08/10 22:55:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   16563.343262   16563.318037 -96309.121094  16563.343262     0.012695  16563.318037     0.0125     0.012725       -0.012275     6.0     16563.318037            -1             -1     -1
1   16563.355537   16563.343037 -96309.121094  16563.355537     0.025000  16563.343037     0.0125     0.000000     -100.000000     1.0     16563.318037         False           True   True
2   16763.343037   16763.318037 -96309.121094  16763.343037   199.987500  16763.318037     0.0125     0.012500       -0.012500     1.0     16563.318037         False          False   True
3   16763.368037   16763.343037 -96309.121094  16763.368037     0.037500  16763.343037     0.0125     0.012500      -99.987500     1.0     16763.355537         False          False   True
4   16863.443037   16863.343037 -96309.121094  16863.443037   100.087500  16863.343037     0.0125     0.087500      -99.912500     1.0     16763.355537         False          False   True
5   17213.530537   17063.343037 -96309.121094  17213.530537   350.175000  17063.343037     0.0125   150.175000      150.175000     1.0     16763.355537         False          False   True
6   17913.718037   17063.343037 -96309.121094  17913.718037   850.362500  17063.343037     0.0125   850.362500      750.362500     1.0     16763.355537         False          False   True
7   18914.080537   17213.530762 -96309.121094  18914.080537  1850.725000  17213.530762   100.5375  1600.012275     1550.200000     2.0     16763.355537         False          False   True
8   18914.080537   17263.343262 -96309.121094  18914.080537   925.862500  17263.343262   100.5375  1550.199775     1450.200000     3.0     18813.543037          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=7751/5.[0m
[08/10 22:55:02]  --------------------------------------------------------------------------------
[08/10 22:55:02]  Iteration: 433 (161 solution, 271 counterexamples)
[08/10 22:57:46]  Generator returned sat in 154.396660 secs.
[08/10 22:57:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:57:50]  Improved gap from 0 to 31.25
[08/10 22:57:51]  Improved number of small numbers from 65 to 72 out of a max of 114
[08/10 22:57:51]  Verifer returned sat in 4.007195 secs.
[08/10 22:57:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   16648.065674   16448.054287 -96309.121094  16648.065674    0.001465  16448.054287    0.01250  199.998887       99.998887     2.0     16448.054287            -1             -1   False
1   16648.066787   16548.054287 -96309.121094  16648.066787  200.000000  16548.054287    0.01250  100.000000        0.000000     2.0     16448.054287         False          False   False
2   16763.343037   16738.329287 -96309.121094  16763.343037  215.276250  16738.329287    0.01250   25.001250       15.276250     1.0     16448.054287         False          False   False
3   16763.343037   16748.054287 -96240.371094  16763.343037   25.000000  16748.054287    0.01250   15.276250      -15.973750     2.0     16763.330537         False          False   False
4   16910.566787   16879.303037 -96240.371094  16910.566787  162.500000  16879.303037    0.01375   31.250000       31.248750     1.0     16763.330537         False          False   False
5   16910.566787   16879.304287 -96171.621094  16910.566787    0.010000  16879.304287    0.01375   31.248750       -0.001250     2.0     16763.330537         False          False    True
6   16951.310537   16910.554287 -96112.363770  16951.310537   71.992500  16910.554287    0.01375   40.742500       -0.000176     1.0     16763.330537         False          False    True
7   17029.314287   16951.298037 -96090.367432  17029.314287  118.746250  16951.298037    0.01375   78.002500       -0.000088     1.0     16763.330537         False          False    True
8   17048.182412   17029.301758 -96090.367432  17048.182412   96.870625  17029.301758    0.01375   18.866904      -81.131963     1.0     16763.330537         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=24999/800.[0m
[08/10 22:57:52]  --------------------------------------------------------------------------------
[08/10 22:57:52]  Iteration: 434 (161 solution, 272 counterexamples)
[08/10 22:59:56]  Generator returned sat in 113.927412 secs.
[08/10 22:59:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:59:58]  Verifer returned unsat in 1.031221 secs.
[08/10 22:59:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:59:58]  --------------------------------------------------------------------------------
[08/10 22:59:58]  Iteration: 435 (162 solution, 272 counterexamples)
[08/10 23:00:57]  Generator returned sat in 49.365193 secs.
[08/10 23:00:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:00:59]  Verifer returned unsat in 1.327553 secs.
[08/10 23:00:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:00:59]  --------------------------------------------------------------------------------
[08/10 23:00:59]  Iteration: 436 (163 solution, 272 counterexamples)
[08/10 23:01:34]  Generator returned sat in 24.674627 secs.
[08/10 23:01:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:01:36]  Verifer returned unsat in 1.355468 secs.
[08/10 23:01:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:01:36]  --------------------------------------------------------------------------------
[08/10 23:01:36]  Iteration: 437 (164 solution, 272 counterexamples)
[08/10 23:02:14]  Generator returned sat in 28.176018 secs.
[08/10 23:02:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:02:19]  Verifer returned unsat in 3.125367 secs.
[08/10 23:02:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:02:19]  --------------------------------------------------------------------------------
[08/10 23:02:19]  Iteration: 438 (165 solution, 272 counterexamples)
[08/10 23:03:08]  Generator returned sat in 39.488342 secs.
[08/10 23:03:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:03:13]  Verifer returned unsat in 4.383358 secs.
[08/10 23:03:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:03:13]  --------------------------------------------------------------------------------
[08/10 23:03:13]  Iteration: 439 (166 solution, 272 counterexamples)
[08/10 23:03:53]  Generator returned sat in 30.065035 secs.
[08/10 23:03:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:03:56]  Verifer returned unsat in 1.996084 secs.
[08/10 23:03:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:03:57]  --------------------------------------------------------------------------------
[08/10 23:03:57]  Iteration: 440 (167 solution, 272 counterexamples)
[08/10 23:04:34]  Generator returned sat in 26.903670 secs.
[08/10 23:04:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:04:35]  Verifer returned unsat in 0.667820 secs.
[08/10 23:04:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:04:35]  --------------------------------------------------------------------------------
[08/10 23:04:35]  Iteration: 441 (168 solution, 272 counterexamples)
[08/10 23:05:10]  Generator returned sat in 24.478464 secs.
[08/10 23:05:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:05:12]  Verifer returned unsat in 1.256413 secs.
[08/10 23:05:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:05:12]  --------------------------------------------------------------------------------
[08/10 23:05:12]  Iteration: 442 (169 solution, 272 counterexamples)
[08/10 23:08:26]  Generator returned sat in 184.192434 secs.
[08/10 23:08:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:08:28]  Verifer returned unsat in 0.631145 secs.
[08/10 23:08:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:08:28]  --------------------------------------------------------------------------------
[08/10 23:08:28]  Iteration: 443 (170 solution, 272 counterexamples)
[08/10 23:09:02]  Generator returned sat in 24.954350 secs.
[08/10 23:09:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:09:04]  Verifer returned unsat in 0.815538 secs.
[08/10 23:09:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:09:04]  --------------------------------------------------------------------------------
[08/10 23:09:04]  Iteration: 444 (171 solution, 272 counterexamples)
[08/10 23:09:39]  Generator returned sat in 25.639577 secs.
[08/10 23:09:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:09:41]  Verifer returned unsat in 0.420680 secs.
[08/10 23:09:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:09:41]  --------------------------------------------------------------------------------
[08/10 23:09:41]  Iteration: 445 (172 solution, 272 counterexamples)
[08/10 23:10:15]  Generator returned sat in 24.635237 secs.
[08/10 23:10:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:10:17]  Verifer returned unsat in 0.638800 secs.
[08/10 23:10:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:10:17]  --------------------------------------------------------------------------------
[08/10 23:10:17]  Iteration: 446 (173 solution, 272 counterexamples)
[08/10 23:10:53]  Generator returned sat in 26.665664 secs.
[08/10 23:10:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:10:56]  Verifer returned unsat in 1.631019 secs.
[08/10 23:10:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:10:56]  --------------------------------------------------------------------------------
[08/10 23:10:56]  Iteration: 447 (174 solution, 272 counterexamples)
[08/10 23:11:33]  Generator returned sat in 27.362561 secs.
[08/10 23:11:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:11:36]  Verifer returned unsat in 1.378639 secs.
[08/10 23:11:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:11:36]  --------------------------------------------------------------------------------
[08/10 23:11:36]  Iteration: 448 (175 solution, 272 counterexamples)
[08/10 23:12:09]  Generator returned sat in 24.422704 secs.
[08/10 23:12:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:12]  Verifer returned unsat in 1.692157 secs.
[08/10 23:12:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:12]  --------------------------------------------------------------------------------
[08/10 23:12:12]  Iteration: 449 (176 solution, 272 counterexamples)
[08/10 23:12:46]  Generator returned sat in 23.594107 secs.
[08/10 23:12:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:48]  Verifer returned unsat in 1.044129 secs.
[08/10 23:12:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:48]  --------------------------------------------------------------------------------
[08/10 23:12:48]  Iteration: 450 (177 solution, 272 counterexamples)
[08/10 23:13:22]  Generator returned sat in 25.016587 secs.
[08/10 23:13:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:13:24]  Verifer returned unsat in 0.939327 secs.
[08/10 23:13:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:13:24]  --------------------------------------------------------------------------------
[08/10 23:13:24]  Iteration: 451 (178 solution, 272 counterexamples)
[08/10 23:13:58]  Generator returned sat in 24.063132 secs.
[08/10 23:13:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:14:00]  Verifer returned unsat in 0.681902 secs.
[08/10 23:14:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:14:00]  --------------------------------------------------------------------------------
[08/10 23:14:00]  Iteration: 452 (179 solution, 272 counterexamples)
[08/10 23:14:35]  Generator returned sat in 25.564660 secs.
[08/10 23:14:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:14:37]  Improved gap from 3997/40 to 100
[08/10 23:14:39]  Improved number of small numbers from 59 to 84 out of a max of 114
[08/10 23:14:39]  Verifer returned sat in 2.008138 secs.
[08/10 23:14:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   10627.861816   10527.711914 -96111.41627  10627.861816    0.050000  10527.711914     0.0000  100.149902       99.950029     2.0     10527.711914            -1             -1   False
1   10627.861816   10527.911865 -96111.41627  10627.861816  100.099854  10527.911865     0.0000   99.949951       -0.049971     2.0     10527.711914         False          False   False
2   10627.961670   10627.911787 -96111.41627  10627.961670  100.049805  10627.911787     0.0000    0.049883      -99.950117     1.0     10627.961670         False          False   False
3   10828.061787   10827.911787 -96111.41627  10828.061787  200.150000  10827.911787     0.0500    0.100000        0.100000     1.0     10627.961670         False          False   False
4   10928.536787   10927.911621 -96111.41627  10928.536787  100.575000  10927.911621     0.5250    0.100166        0.100000     1.0     10627.961670         False          False    True
5   10979.224121   10975.924287 -96111.41627  10979.224121   50.787500  10975.924287     0.5250    2.774834      -49.212666     1.0     10627.961670         False          False    True
6   11375.749287   11027.911787 -96111.41627  11375.749287  399.300000  11027.911787   247.7375  100.100000        0.100000     1.0     10627.961670         False          False    True
7   11475.799287   11227.911787 -96111.41627  11475.799287  200.150000  11227.911787   247.7875    0.100000        0.100000     1.0     10627.961670         False          False    True
8   11576.274287   11228.061768 -96111.41627  11576.274287  100.575000  11228.061768   248.2625   99.950020        0.100000     1.0     10627.961670         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 23:14:39]  --------------------------------------------------------------------------------
[08/10 23:14:39]  Iteration: 453 (179 solution, 273 counterexamples)
[08/10 23:17:01]  Generator returned sat in 132.398705 secs.
[08/10 23:17:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:17:05]  Improved gap from 1/10 to 32.8125
[08/10 23:17:06]  Improved number of small numbers from 71 to 80 out of a max of 114
[08/10 23:17:06]  Verifer returned sat in 3.724696 secs.
[08/10 23:17:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   10495.096436   10362.924811 -95978.241793  10495.096436    0.026611  10362.924811   0.026442  132.145182      100.332682     2.0     10362.924811            -1             -1     -1
1   10495.122728   10494.737305 -95978.241793  10495.122728  132.171474  10494.737305   0.026442    0.358981        0.358974     2.0     10362.924811         False          False   True
2   10595.175612   10594.737311 -95978.241793  10595.175612  100.411865  10594.737311   0.052885    0.385417        0.385417     1.0     10595.122728         False          False   True
3   10628.014555   10595.149170 -95911.466152  10628.014555   33.224359  10595.149170   0.052885   32.812500        0.000000     1.0     10627.961670         False          False   True
4   10728.426414   10727.820644 -95911.466152  10728.426414  133.224359  10727.820644   0.079327    0.526442        0.385417     1.0     10627.961670         False          False   True
5   10728.426414   10727.961670 -95844.278652  10728.426414    0.500000  10727.961670   0.079327    0.385417      -32.427083     2.0     10627.961670         False          False   True
6   10795.403176   10760.774170 -95778.828369  10795.403176   67.362179  10760.774170   0.079327   34.549679       -0.000037     1.0     10627.961670         False          False   True
7   10877.847087   10844.981702 -95761.298828  10877.847087  116.993590  10844.981702   0.079327   32.786058       -0.026586     1.0     10627.961670         False          False   True
8   10962.638353   10877.794434 -95761.298828  10962.638353  117.577324  10877.794434   0.079327   84.764592      -15.235320     1.0     10627.961670         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=37/96.[0m
[08/10 23:17:07]  --------------------------------------------------------------------------------
[08/10 23:17:07]  Iteration: 454 (179 solution, 274 counterexamples)
[08/10 23:20:25]  Generator returned sat in 188.115131 secs.
[08/10 23:20:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:20:30]  Improved gap from 0 to 23.4375
[08/10 23:20:30]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/10 23:20:30]  Verifer returned sat in 3.953989 secs.
[08/10 23:20:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   10271.763281   10171.713281 -95978.241699  10271.763281    0.025146  10171.713281   0.000000  100.050000        0.050146     9.0     10171.713281            -1             -1     -1
1   10495.125781   10271.788086 -95978.241699  10495.125781  323.412500  10271.788086   0.000000  223.337695      123.412646     1.0     10171.713281         False           True  False
2   10595.175537   10449.350586 -95978.241699  10595.175537  323.387451  10449.350586   0.024902  145.800049      123.437500     2.0     10595.150635         False          False  False
3   10695.200684   10571.713135 -95978.241699  10695.200684  245.825195  10571.713135   0.050049  123.437500      123.437500     2.0     10695.150635         False          False   True
4   10695.200684   10671.688477 -95978.241699  10695.200684  123.412598  10671.688477   0.050049   23.462158       23.437500     2.0     10695.150635         False          False   True
5   10695.200684   10671.713135 -95901.679199  10695.200684    0.500000  10671.713135   0.050049   23.437500        0.000000     3.0     10695.150635         False          False   True
6   10695.200684   10695.150635 -95827.366943  10695.200684    0.500000  10695.150635   0.050049    0.000000      -25.687744     4.0     10695.150635         False          False   True
7   10820.888184   10720.838379 -95827.366943  10820.888184  125.687500  10720.838379   0.050049   99.999756       -0.000244     1.0     10695.150635         False           True  False
8   10834.882080   10820.863037 -95827.366943  10834.882080  113.993652  10820.863037   0.050049   13.968994      -86.006348     1.0     10695.150635         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1975/16.[0m
[08/10 23:20:31]  --------------------------------------------------------------------------------
[08/10 23:20:31]  Iteration: 455 (179 solution, 275 counterexamples)
[08/10 23:22:18]  Generator returned sat in 97.989275 secs.
[08/10 23:22:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:22:21]  Improved gap from 0 to 23.4375
[08/10 23:22:21]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 23:22:21]  Verifer returned sat in 1.587651 secs.
[08/10 23:22:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   12574.750732   12251.313477 -94078.092041  12574.750732    0.099854  12251.313477    0.000000  323.437256      223.437500     7.0     12251.313477            -1             -1     -1
1   12574.750732   12451.313232 -94078.092041  12574.750732  323.437256  12451.313232    0.000000  123.437500      123.437500     3.0     12251.313477         False           True  False
2   13237.150635   12451.313232 -94078.092041  13237.150635  785.837402  12451.313232  562.300049  223.537354      123.537354     3.0     12251.313477         False          False  False
3   13609.613281   12574.750732 -94078.092041  13609.613281  596.000000  12574.750732  834.762695  200.099854      123.537354     4.0     12774.850586         False          False   True
4   13709.513428   12748.288330 -94078.092041  13709.513428  300.000000  12748.288330  834.762695  126.462402      123.437500     2.0     12774.850586         False           True   True
5   13709.513428   12774.950781 -94078.092041  13709.513428    0.500000  12774.950781  834.762695   99.799951       23.437500     2.0     12774.850586         False          False   True
6   13709.513428   12851.313232 -94001.529541  13709.513428    0.500000  12851.313232  834.762695   23.437500        0.000000     3.0     12774.850586         False          False   True
7   13709.513428   12874.750732 -93924.967041  13709.513428    0.500000  12874.750732  834.762695    0.000000      -23.437500     4.0     12774.850586         False          False   True
8   13964.438232   12898.188281 -93924.967041  13964.438232  254.924805  12898.188281  842.712646  223.537305      123.537354     1.0     13121.725586          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=506009/4096.[0m
[08/10 23:22:22]  --------------------------------------------------------------------------------
[08/10 23:22:22]  Iteration: 456 (179 solution, 276 counterexamples)
[08/10 23:24:59]  Generator returned sat in 147.792666 secs.
[08/10 23:25:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:25:05]  Improved gap from 1/11 to 0
[08/10 23:25:06]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/10 23:25:06]  Verifer returned sat in 5.300422 secs.
[08/10 23:25:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   12621.773193   12421.673340 -94078.092041  12621.773193    0.100098  12421.673340   0.000000  200.099854      100.099854     1.0     12421.673340            -1             -1   False
1   12621.773193   12621.673340 -94078.092041  12621.773193    0.100098  12621.673340   0.000000    0.099854        0.099854     2.0     12421.673340         False          False   False
2   12651.113281   12651.013428 -94007.631836  12651.113281   29.439941  12651.013428   0.000000    0.099854       -0.099854     1.0     12421.673340          True           True   False
3   12651.313232   12651.213379 -93907.731934  12651.313232    0.299805  12651.213379   0.000000    0.099854        0.000000     1.0     12651.313232         False          False   False
4   12766.133301   12691.953369 -93907.731934  12766.133301  114.919922  12691.953369  14.620117   59.559814        0.199951     1.0     12651.313232         False          False   False
5   12766.133301   12751.313232 -93807.931885  12766.133301   59.459961  12751.313232  14.620117    0.199951        0.000000     2.0     12651.313232         False          False    True
6   12845.813232   12751.613281 -93788.072021  12845.813232   79.879883  12751.613281  14.620117   79.579834       -0.460205     1.0     12831.193115          True           True   False
7   12856.373291   12831.653320 -93698.171875  12856.373291   90.139893  12831.653320  14.620117   10.099854        0.000000     1.0     12831.193115         False          False   False
8   12961.193359   12841.853271 -93698.171875  12961.193359  114.919922  12841.853271  19.240234  100.099854        0.199951     1.0     12831.193115         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=819/4096.[0m
[08/10 23:25:07]  --------------------------------------------------------------------------------
[08/10 23:25:07]  Iteration: 457 (179 solution, 277 counterexamples)
[08/10 23:26:42]  Generator returned sat in 85.045724 secs.
[08/10 23:26:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:26:48]  Improved gap from 0 to 0
[08/10 23:26:49]  Improved number of small numbers from 53 to 70 out of a max of 114
[08/10 23:26:49]  Verifer returned sat in 6.190034 secs.
[08/10 23:26:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   12764.708252   12764.707565 -94167.137939  12764.708252  0.000833  12764.707565        0.0  0.000687        0.000680     9.0     12764.707565            -1             -1     -1
1   12765.214926   12764.711426 -94067.645294  12765.214926  0.507361  12764.711426        0.0  0.503500        0.000000     1.0     12764.707565         False           True  False
2   12765.214926   12765.214926 -93967.645508  12765.214926  0.502441  12765.214926        0.0  0.000000       -0.000214     2.0     12765.214926         False          False  False
3   12765.716732   12765.715898 -93868.147217  12765.716732  0.501806  12765.715898        0.0  0.000833       -0.000117     1.0     12765.716732         False          False  False
4   12765.728398   12765.717773 -93768.158766  12765.728398  0.012500  12765.717773        0.0  0.010625        0.000000     1.0     12765.716732         False          False  False
5   12765.728398   12765.728398 -93668.160400  12765.728398  0.010000  12765.728398        0.0  0.000000       -0.001634     2.0     12765.716732         False          False  False
6   12765.738398   12765.730065 -93568.169434  12765.738398  0.010000  12765.730065        0.0  0.008333       -0.000667     1.0     12765.716732         False          False  False
7   12765.740065   12765.739232 -93468.170654  12765.740065  0.010000  12765.739232        0.0  0.000833       -0.000221     1.0     12765.716732         False          False  False
8   12765.749232   12765.740967 -93468.170410  12765.749232  0.010000  12765.740967        0.0  0.008265      -99.990811     1.0     12765.716732         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/600.[0m
[08/10 23:26:50]  --------------------------------------------------------------------------------
[08/10 23:26:50]  Iteration: 458 (179 solution, 278 counterexamples)
[08/10 23:33:15]  Generator returned sat in 374.995531 secs.
[08/10 23:33:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:33:18]  Improved gap from 0 to 23.4375
[08/10 23:33:18]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 23:33:18]  Verifer returned sat in 1.922898 secs.
[08/10 23:33:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   10351.256104    9927.816162 -93868.147217  10351.256104    0.002500   9927.816162   0.000000  423.439941      423.439941     2.0      9927.816162            -1             -1   False
1   10351.258789   10027.816162 -93868.147217  10351.258789  423.442627  10027.816162   0.002686  323.439941      323.439941     2.0      9927.816162         False          False   False
2   10351.258789   10127.813721 -93868.147217  10351.258789    0.002686  10127.813721   0.002686  223.442383      223.439941     3.0     10351.256104         False          False    True
3   10351.258789   10127.816162 -93868.147217  10351.258789  103.230000  10127.816162   0.002686  223.439941      123.439941     4.0     10351.256104         False          False    True
4   10351.258789   10324.696289 -93868.147217  10351.258789   52.115000  10324.696289   0.002686   26.559814       23.439941     5.0     10351.256104         False          False    True
5   10351.258789   10327.818604 -93791.587158  10351.258789   26.557500  10327.818604   0.002686   23.437500        0.000000     6.0     10351.256104         False          False    True
6   10351.258789   10351.256104 -93715.024658  10351.258789   13.778750  10351.256104   0.002686    0.000000      -23.437500     7.0     10351.256104         False          False    True
7   10798.138672   10374.693848 -93715.024658  10798.138672  446.879883  10374.693848   0.005127  423.439697      323.439941     1.0     10351.256104         False           True   False
8   10798.138672   10474.693848 -93715.024658  10798.138672    0.010000  10474.693848   0.005127  323.439697      223.439941     2.0     10351.256104         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=662405/2048.[0m
[08/10 23:33:19]  --------------------------------------------------------------------------------
[08/10 23:33:19]  Iteration: 459 (179 solution, 279 counterexamples)
[08/10 23:35:18]  Generator returned sat in 108.684762 secs.
[08/10 23:35:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:35:22]  Improved gap from 0 to 23.4375
[08/10 23:35:23]  Improved number of small numbers from 80 to 104 out of a max of 114
[08/10 23:35:23]  Verifer returned sat in 3.966269 secs.
[08/10 23:35:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   12004.913818   11932.751221 -93872.597412  12004.913818    0.100000  11932.751221     0.0000  72.162598       72.162402     5.0     11932.751221            -1             -1   False
1   12004.913818   12004.863525 -93868.147217  12004.913818    0.050000  12004.863525     0.0000   0.050293      -23.387402     5.0     12004.913818         False          False   False
2   12128.351074   12128.250977 -93868.147217  12128.351074  123.487549  12128.250977     0.0000   0.100098        0.049854     1.0     12004.913818         False          False   False
3   12128.351074   12128.301221 -93791.584717  12128.351074    0.050049  12128.301221     0.0000   0.049854      -23.387646     2.0     12128.351074         False          False   False
4   12517.901221   12251.738721 -93791.584717  12517.901221  389.600000  12251.738721   242.7750  23.387500       23.387500     1.0     12128.351074         False          False   False
5   12690.313721   12275.176270 -93791.584717  12690.313721  195.800000  12275.176270   315.1875  99.949951       23.387500     1.0     12128.351074         False          False    True
6   12690.313721   12351.738721 -93715.022217  12690.313721   98.900000  12351.738721   315.1875  23.387500       -0.050000     2.0     12128.351074         False          False    True
7   12716.876221   12375.176270 -93641.534717  12716.876221   49.950000  12375.176270   315.1875  26.512451        0.000000     1.0     12128.351074         False          False    True
8   12716.876221   12401.688721 -93641.534668  12716.876221   25.475000  12401.688721   315.1875   0.000000      -99.999951     2.0     12128.351074         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1871/80.[0m
[08/10 23:35:24]  --------------------------------------------------------------------------------
[08/10 23:35:24]  Iteration: 460 (179 solution, 280 counterexamples)
[08/10 23:37:54]  Generator returned sat in 139.979568 secs.
[08/10 23:37:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:37:58]  Improved gap from 1/20 to 48.4375
[08/10 23:37:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 23:37:58]  Verifer returned sat in 2.724244 secs.
[08/10 23:37:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   12105.708008   12005.807861 -90872.163818  12105.708008  448.637695  12005.807861   0.100098   99.800049       99.800049     5.0     12005.807861            -1             -1     -1
1   12454.445312   12105.707764 -90872.163818  12454.445312  448.537354  12105.707764   0.199951  348.537598      348.437500     1.0     12454.245361         False          False   True
2   12454.445312   12105.807861 -90872.163818  12454.445312  348.437500  12105.807861   0.199951  348.437500      248.437500     2.0     12454.245361         False          False   True
3   12454.445312   12305.807617 -90872.163818  12454.445312  198.568359  12305.807617   0.199951  148.437744      148.437500     3.0     12454.245361         False          False   True
4   12454.445312   12403.853271 -90872.163818  12454.445312   99.784180  12403.853271   0.199951   50.392090       48.437500     4.0     12454.245361         False          False   True
5   12454.445312   12405.807861 -90820.601318  12454.445312   50.392090  12405.807861   0.199951   48.437500        0.000000     5.0     12454.245361         False          False   True
6   12454.445312   12454.245361 -90769.038818  12454.445312   25.696045  12454.245361   0.199951    0.000000      -48.437500     6.0     12454.245361         False          False   True
7   12541.512207   12502.682861 -90717.476318  12541.512207   87.066895  12502.682861   0.199951   38.629395       -9.808105     1.0     12454.245361         False           True  False
8   12595.831055   12551.120361 -90717.476318  12595.831055   92.948242  12551.120361   0.199951   44.510742      -55.489258     1.0     12454.245361         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/10 23:37:58]  --------------------------------------------------------------------------------
[08/10 23:37:58]  Iteration: 461 (179 solution, 281 counterexamples)
[08/10 23:39:50]  Generator returned sat in 101.705400 secs.
[08/10 23:39:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:39:52]  Verifer returned unsat in 1.159250 secs.
[08/10 23:39:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:39:53]  --------------------------------------------------------------------------------
[08/10 23:39:53]  Iteration: 462 (180 solution, 281 counterexamples)
[08/10 23:42:32]  Generator returned sat in 149.079016 secs.
[08/10 23:42:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:42:40]  Improved gap from 0 to 18.75
[08/10 23:42:41]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 23:42:41]  Verifer returned sat in 7.533998 secs.
[08/10 23:42:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   12093.708740   11662.758789 -90872.163818  12093.708740    0.100000  11662.758789   0.000000  430.949951      430.949951     6.0     11662.758789            -1             -1   False
1   12093.908691   11762.758789 -90872.163818  12093.908691  431.149902  11762.758789   0.199951  330.949951      330.949951     5.0     11662.758789         False          False   False
2   12194.008789   11762.758789 -90872.163818  12194.008789  431.050049  11762.758789   0.300049  430.949951      330.949951     5.0     12193.708740         False          False    True
3   12194.008789   11862.758789 -90872.163818  12194.008789  107.000000  11862.758789   0.300049  330.949951      230.949951     6.0     12193.708740         False          False    True
4   12194.008789   12062.758789 -90872.163818  12194.008789  255.000000  12062.758789   0.300049  130.949951      130.949951     7.0     12193.708740         False          False    True
5   12194.008789   12127.808838 -90872.163818  12194.008789  129.000000  12127.808838   0.300049   65.899902       30.949951     4.0     12193.708740         False           True   False
6   12194.108887   12175.158691 -90803.313721  12194.108887   66.000000  12175.158691   0.300049   18.650146       -0.099854     5.0     12193.708740         False          False   False
7   12209.958740   12193.908936 -90722.063965  12209.958740   34.500000  12193.908936   0.300049   15.749756       -3.000244     1.0     12193.708740         False          False   False
8   12212.958984   12212.658936 -90722.063965  12212.958984   18.750000  12212.658936   0.300049    0.000000     -100.000000     1.0     12193.708740         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1355571/4096.[0m
[08/10 23:42:41]  --------------------------------------------------------------------------------
[08/10 23:42:41]  Iteration: 463 (180 solution, 282 counterexamples)
[08/10 23:43:58]  Generator returned sat in 66.867233 secs.
[08/10 23:44:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:44:05]  Improved gap from 75/4 to 31.25
[08/10 23:44:07]  Improved number of small numbers from 65 to 73 out of a max of 114
[08/10 23:44:07]  Verifer returned sat in 7.154728 secs.
[08/10 23:44:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   15716.535156   15716.484941 -90940.913818  15716.535156    0.049805  15716.484941      0.000   0.050215        0.000215     8.0     15716.484941            -1             -1    True
1   15716.535156   15716.534941 -90872.163818  15716.535156    0.050000  15716.534941      0.000   0.000215      -31.249785     9.0     15716.484941         False          False    True
2   15849.834941   15846.884941 -90872.163818  15849.834941  133.300000  15846.884941      0.050   2.900000        2.000000     1.0     15716.484941          True           True   False
3   15949.784941   15947.784941 -90872.163818  15949.784941  102.850000  15947.784941      0.050   1.950000        1.950000     1.0     15949.734941         False          False    True
4   16116.409941   16047.734941 -90872.163818  16116.409941  168.575000  16047.734941     66.625   2.050000        2.000000     1.0     15949.734941         False          False    True
5   16116.409941   16047.784941 -90803.413818  16116.409941    2.000000  16047.784941     66.625   2.000000      -29.250000     2.0     15949.734941         False          False    True
6   16217.359941   16079.034941 -90790.813721  16217.359941  102.950000  16079.034941     66.625  71.700000      -15.699902     1.0     15949.734941         False          False    True
7   16264.259941   16166.434941 -90722.063818  16264.259941  118.600000  16166.434941     66.625  31.200000       -0.050000     1.0     15949.734941         False          False    True
8   16353.209941   16197.685059 -90722.063721  16353.209941  120.150000  16197.685059     66.625  88.899883      -11.099902     1.0     15949.734941         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=2.[0m
[08/10 23:44:07]  --------------------------------------------------------------------------------
[08/10 23:44:07]  Iteration: 464 (180 solution, 283 counterexamples)
[08/10 23:49:49]  Generator returned sat in 331.005583 secs.
[08/10 23:49:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:49:54]  Improved gap from 0 to 18.75
[08/10 23:49:55]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 23:49:55]  Verifer returned sat in 5.038206 secs.
[08/10 23:49:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   18279.996826   17839.896484 -90872.163818  18279.996826  507.850098  17839.896484   0.100098  440.000244      400.000244     7.0     17839.896484            -1             -1     -1
1   18347.746582   17979.896484 -90872.163818  18347.746582  507.750000  17979.896484   0.100098  367.750000      367.750000     6.0     18347.646484         False          False   True
2   18347.846680   17979.896484 -90872.163818  18347.846680  367.850098  17979.896484   0.100098  367.850098      267.850098     6.0     18347.746582         False          False   True
3   18411.046387   18079.896484 -90872.163818  18411.046387  431.049805  18079.896484   0.100098  331.049805      231.049805     7.0     18347.746582         False          False   True
4   18411.046387   18279.896484 -90872.163818  18411.046387  240.000000  18279.896484   0.100098  131.049805      131.049805     8.0     18347.746582         False          False   True
5   18411.046387   18347.846436 -90872.163818  18411.046387  122.000000  18347.846436   0.100098   63.099854       31.049805     3.0     18347.746582         False           True  False
6   18411.046387   18392.296631 -90803.313965  18411.046387   63.000000  18392.296631   0.100098   18.649658       -0.100342     4.0     18347.746582         False          False  False
7   18425.896729   18411.046631 -90722.063965  18425.896729   33.500000  18411.046631   0.100098   14.750000       -4.000000     1.0     18347.746582         False          False  False
8   18429.896729   18429.796631 -90722.063965  18429.896729   18.750000  18429.796631   0.100098    0.000000     -100.000000     1.0     18347.746582         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=7357/20.[0m
[08/10 23:49:56]  --------------------------------------------------------------------------------
[08/10 23:49:56]  Iteration: 465 (180 solution, 284 counterexamples)
[08/10 23:51:42]  Generator returned sat in 96.403178 secs.
[08/10 23:51:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:51:45]  Improved gap from 409/16384 to 15.625
[08/10 23:51:45]  Improved number of small numbers from 40 to 114 out of a max of 114
[08/10 23:51:45]  Verifer returned sat in 2.178083 secs.
[08/10 23:51:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   17581.816406   17174.566650 -90185.634033  17581.816406  407.200195  17174.566650   0.099854  407.149902      388.349854     7.0     17174.566650            -1             -1   False
1   17581.816406   17293.366699 -90185.634033  17581.816406  407.149902  17293.366699   0.099854  288.349854      288.349854     7.0     17581.716553         False          False   False
2   17700.566406   17293.366699 -90185.634033  17700.566406  407.099854  17293.366699   0.149902  407.049805      307.049805     7.0     17700.416504         False          False   False
3   17700.566406   17493.366699 -90185.634033  17700.566406  407.000000  17493.366699   0.149902  207.049805      207.049805     8.0     17700.416504         False          False    True
4   17700.566406   17581.766357 -90185.634033  17700.566406  205.000000  17581.766357   0.149902  118.650146      107.049805     3.0     17700.416504         False           True   False
5   17700.566406   17662.541504 -90185.634033  17700.566406  104.000000  17662.541504   0.149902   37.875000        7.049805     4.0     17700.416504         False          False   False
6   17716.191406   17700.466553 -90108.358887  17716.191406   53.500000  17700.466553   0.149902   15.574951       -0.050049     1.0     17700.416504         False          False   False
7   17728.866455   17716.091553 -90023.983887  17728.866455   28.250000  17716.091553   0.149902   12.625000       -3.000000     1.0     17700.416504         False          False   False
8   17731.866455   17731.716553 -90023.983643  17731.866455   15.625000  17731.716553   0.149902    0.000000      -99.999756     1.0     17700.416504         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=314419/1024.[0m
[08/10 23:51:46]  --------------------------------------------------------------------------------
[08/10 23:51:46]  Iteration: 466 (180 solution, 285 counterexamples)
[08/10 23:53:42]  Generator returned sat in 105.399193 secs.
[08/10 23:53:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:53:45]  Verifer returned unsat in 2.205352 secs.
[08/10 23:53:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:53:45]  --------------------------------------------------------------------------------
[08/10 23:53:45]  Iteration: 467 (181 solution, 285 counterexamples)
[08/10 23:54:19]  Generator returned sat in 24.170316 secs.
[08/10 23:54:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:54:22]  Verifer returned unsat in 2.145235 secs.
[08/10 23:54:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:54:22]  --------------------------------------------------------------------------------
[08/10 23:54:22]  Iteration: 468 (182 solution, 285 counterexamples)
[08/10 23:54:57]  Generator returned sat in 25.090210 secs.
[08/10 23:54:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:55:01]  Verifer returned unsat in 2.827424 secs.
[08/10 23:55:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:55:01]  --------------------------------------------------------------------------------
[08/10 23:55:01]  Iteration: 469 (183 solution, 285 counterexamples)
[08/10 23:55:36]  Generator returned sat in 25.069616 secs.
[08/10 23:55:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:55:39]  Verifer returned unsat in 1.146534 secs.
[08/10 23:55:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:55:39]  --------------------------------------------------------------------------------
[08/10 23:55:39]  Iteration: 470 (184 solution, 285 counterexamples)
[08/11 00:02:50]  Generator returned sat in 420.297658 secs.
[08/11 00:02:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:02:59]  Improved gap from 0 to 0
[08/11 00:03:01]  Improved number of small numbers from 38 to 48 out of a max of 114
[08/11 00:03:01]  Verifer returned sat in 10.635070 secs.
[08/11 00:03:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   18721.508545   18523.527981 -90384.384033  18721.508545  197.952148  18523.527981   0.099854  197.880710      100.321186     3.0     18523.527981            -1             -1     -1
1   18721.544501   18621.087646 -90384.384033  18721.544501  197.916667  18621.087646   0.135568  100.321287        0.321429     3.0     18721.408934         False           True  False
2   18721.544501   18721.373219 -90284.705462  18721.544501  100.285645  18721.373219   0.135568    0.035714        0.000000     3.0     18721.408934         False           True   True
3   18721.580216   18721.408934 -90184.741176  18721.580216    0.071429  18721.408934   0.135568    0.035714        0.000000     3.0     18721.444648         False           True  False
4   18822.520692   18773.385124 -90184.741176  18822.520692  100.976190  18773.385124   0.754615   48.380952        0.321429     1.0     18721.444648         False           True  False
5   18823.127835   18821.801791 -90085.669747  18823.127835   48.988095  18821.801791   0.754615    0.571429        0.000000     1.0     18721.444648         False          False   True
6   18923.484978   18822.408691 -90085.669747  18923.484978  100.928571  18822.408691   0.790330  100.285957        0.321429     1.0     18721.444648         False          False   True
7   18923.484978   18922.373219 -89986.645752  18923.484978   48.964286  18922.373219   0.790330    0.321429       -0.654576     2.0     18721.444648         False          False   True
8   19024.139740   18923.349365 -89986.645752  19024.139740  100.976190  18923.349365   0.790330  100.000045        0.000186     1.0     19023.349410          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=9/28.[0m
[08/11 00:03:02]  --------------------------------------------------------------------------------
[08/11 00:03:02]  Iteration: 471 (184 solution, 286 counterexamples)
[08/11 00:13:59]  Generator returned sat in 646.767406 secs.
[08/11 00:14:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:14:04]  Improved gap from 1/10 to 35.9375
[08/11 00:14:04]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 00:14:04]  Verifer returned sat in 3.664682 secs.
[08/11 00:14:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   18579.734863   18579.534912 -90342.831543  18579.734863    0.100098  18579.534912   0.000000  0.199951        0.199707     1.0     18579.534912            -1             -1    True
1   18579.734863   18579.535156 -90342.831543  18579.734863    0.100098  18579.535156   0.000000  0.199707      -99.800293     2.0     18579.534912         False          False    True
2   18779.835205   18779.535156 -90342.831543  18779.835205  200.300049  18779.535156   0.099854  0.200195        0.200195     1.0     18579.534912          True           True   False
3   18815.672363   18815.472656 -90314.706543  18815.672363   36.037354  18815.472656   0.099854  0.099854      -35.837646     1.0     18815.572510         False          False    True
4   18851.609863   18851.410156 -90250.644043  18851.609863   36.037354  18851.410156   0.099854  0.099854      -35.837646     1.0     18815.572510         False          False    True
5   18887.547363   18887.347656 -90186.581543  18887.547363   36.037354  18887.347656   0.099854  0.099854      -35.837646     1.0     18815.572510         False          False    True
6   18923.484863   18923.285156 -90122.519043  18923.484863   36.037354  18923.285156   0.099854  0.099854      -35.837646     1.0     18815.572510         False          False    True
7   18959.422363   18959.222656 -90058.456543  18959.422363   36.037354  18959.222656   0.099854  0.099854      -35.837646     1.0     18815.572510         False          False    True
8   18995.359863   18995.160156 -90058.456299  18995.359863   36.037354  18995.160156   0.099854  0.099854      -99.899902     1.0     18815.572510         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/11 00:14:05]  --------------------------------------------------------------------------------
[08/11 00:14:05]  Iteration: 472 (184 solution, 287 counterexamples)
[08/11 00:33:58]  Generator returned sat in 1183.610806 secs.
[08/11 00:33:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:34:01]  Improved gap from 781/8 to 100
[08/11 00:34:02]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/11 00:34:02]  Verifer returned sat in 2.473227 secs.
[08/11 00:34:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   10534.327393   10435.427246 -82297.623779  10534.327393   198.899902  10435.427246   0.049805    98.850342       -0.049805     7.0     10435.427246            -1             -1     -1
1   10634.327148   10534.327393 -82297.623779  10634.327148   198.850098  10534.327393   0.049805    99.949951       -0.050049     1.0     10634.277344         False           True   True
2   10734.327393   10634.327393 -82297.623779  10734.327393   199.950195  10634.327393   0.049805    99.950195       -0.049805     1.0     10634.277344         False          False   True
3   10734.427246   10734.327393 -82297.623779  10734.427246   100.050049  10734.327393   0.049805     0.050049      -99.949951     1.0     10734.377441         False          False   True
4   11134.327393   10934.327393 -82297.623779  11134.327393   399.950195  10934.327393   0.049805   199.950195      199.950195     1.0     10734.377441         False          False   True
5   11735.327393   11033.327393 -82297.623779  11735.327393   800.950195  11033.327393   0.049805   701.950195      700.950195     2.0     10734.377441         False          False   True
6   12234.327393   11134.327393 -82297.623779  12234.327393  1200.950195  11134.327393   0.049805  1099.950195     1099.950195     2.0     10734.377441         False          False   True
7   12736.327393   11136.177490 -82297.623779  12736.327393  1601.950195  11136.177490   0.099854  1600.050049     1501.900146     3.0     10734.377441         False          False   True
8   12736.327393   11334.327148 -82297.623779  12736.327393   798.975098  11334.327148   0.099854  1401.900391     1401.900146     4.0     12736.227539          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6151783/4096.[0m
[08/11 00:34:02]  --------------------------------------------------------------------------------
[08/11 00:34:02]  Iteration: 473 (184 solution, 288 counterexamples)
[08/11 00:44:02]  Generator returned sat in 589.518218 secs.
[08/11 00:44:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:44:05]  Improved gap from 1/10 to 48.4375
[08/11 00:44:06]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/11 00:44:06]  Verifer returned sat in 2.006602 secs.
[08/11 00:44:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   10608.353516   10508.453613 -82297.623779  10608.353516    0.100000  10508.453613   0.000000  99.899902       99.899902     1.0     10508.453613            -1             -1   False
1   10661.278564   10608.453369 -82297.623779  10661.278564  152.824951  10608.453369   0.000000  52.825195       52.824951     1.0     10508.453613         False          False   False
2   10705.828369   10705.728516 -82297.623779  10705.828369   97.375000  10705.728516   0.000000   0.099854       -2.625244     1.0     10705.828369         False          False   False
3   10861.378418   10808.453613 -82297.623779  10861.378418  155.649902  10808.453613   0.000000  52.924805       52.924805     1.0     10705.828369         False          False   False
4   11037.778564   10908.453613 -82297.623779  11037.778564  229.324951  10908.453613  76.399902  52.925049       52.925049     1.0     10705.828369         False          False   False
5   11037.778564   10908.453613 -82250.548828  11037.778564    2.000000  10908.453613  76.399902  52.925049        0.000000     1.0     10705.828369         False          False    True
6   11086.216064   10961.478516 -82199.086182  11086.216064  101.362549  10961.478516  76.399902  48.337646       -0.099854     1.0     10705.828369         False          False    True
7   11114.390869   11009.916016 -82147.523682  11114.390869   76.512451  11009.916016  76.399902  28.074951      -20.362549     1.0     10705.828369         False          False    True
8   11137.047119   11058.353516 -82147.523682  11137.047119   50.731201  11058.353516  76.399902   2.293701      -97.706299     1.0     10705.828369         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=216781/4096.[0m
[08/11 00:44:06]  --------------------------------------------------------------------------------
[08/11 00:44:06]  Iteration: 474 (184 solution, 289 counterexamples)
[08/11 00:49:14]  Generator returned sat in 297.546141 secs.
[08/11 00:49:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:49:17]  Verifer returned unsat in 2.237822 secs.
[08/11 00:49:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:49:17]  --------------------------------------------------------------------------------
[08/11 00:49:17]  Iteration: 475 (185 solution, 289 counterexamples)
[08/11 00:49:57]  Generator returned sat in 29.234026 secs.
[08/11 00:49:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:50:00]  Verifer returned unsat in 1.415807 secs.
[08/11 00:50:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:50:00]  --------------------------------------------------------------------------------
[08/11 00:50:00]  Iteration: 476 (186 solution, 289 counterexamples)
[08/11 00:56:47]  Generator returned sat in 397.005415 secs.
[08/11 00:56:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:56:49]  Improved gap from 0 to 23.4375
[08/11 00:56:49]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/11 00:56:49]  Verifer returned sat in 1.070440 secs.
[08/11 00:56:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   10412.359863   10312.362305 -82326.108887  10412.359863    0.002500  10312.362305   0.000000   99.997559       99.997559     9.0     10312.362305            -1             -1     -1
1   10736.804932   10412.362305 -82326.108887  10736.804932  424.442627  10412.362305   0.002686  324.439941      324.439941     1.0     10312.362305         False           True  False
2   10736.804932   10512.359619 -82326.108887  10736.804932    0.002441  10512.359619   0.002686  224.442627      224.439941     2.0     10736.802246         False          False   True
3   10736.804932   10512.362305 -82326.108887  10736.804932    0.002500  10512.362305   0.002686  224.439941      124.439941     3.0     10736.802246         False          False   True
4   10736.804932   10710.242188 -82326.108887  10736.804932    1.501250  10710.242188   0.002686   26.560059       24.439941     4.0     10736.802246         False          False   True
5   10736.804932   10713.364746 -82250.548828  10736.804932    2.250625  10713.364746   0.002686   23.437500        0.000000     5.0     10736.802246         False          False   True
6   10736.804932   10736.802246 -82173.986572  10736.804932    2.625313  10736.802246   0.002686    0.000000      -23.437744     6.0     10736.802246         False          False   True
7   11184.684814   10760.239990 -82173.986572  11184.684814  447.879883  10760.239990   0.004883  424.439941      324.439941     1.0     10736.802246         False           True  False
8   11184.684814   10860.239990 -82173.986572  11184.684814    0.010000  10860.239990   0.004883  324.439941      224.439941     2.0     10736.802246         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=664453/2048.[0m
[08/11 00:56:50]  --------------------------------------------------------------------------------
[08/11 00:56:50]  Iteration: 477 (186 solution, 290 counterexamples)
[08/11 00:58:29]  Generator returned sat in 87.962186 secs.
[08/11 00:58:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:58:31]  Improved gap from 0 to 23.4375
[08/11 00:58:32]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/11 00:58:32]  Verifer returned sat in 1.747897 secs.
[08/11 00:58:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   10489.074951   10189.074707 -82202.821533  10489.074951    0.049805  10189.074707   0.050049  299.950195      299.950195     4.0     10189.074707            -1             -1     -1
1   10712.562256   10289.024658 -82202.821533  10712.562256  523.437500  10289.024658   0.050049  423.487549      423.437500     3.0     10189.074707         False          False   True
2   10712.562256   10289.074951 -82202.821533  10712.562256  423.487305  10289.074951   0.050049  423.437256      323.437500     3.0     10712.512207         False          False   True
3   10712.562256   10489.074707 -82202.821533  10712.562256  251.025000  10489.074707   0.050049  223.437500      223.437500     3.0     10712.512207         False          False   True
4   10712.562256   10585.999756 -82202.821533  10712.562256  126.512500  10585.999756   0.050049  126.512451      123.437500     4.0     10712.512207         False          False   True
5   10712.562256   10679.384033 -82202.821533  10712.562256   64.256250  10679.384033   0.050049   33.128174       23.437500     5.0     10712.512207         False          False   True
6   10712.562256   10689.074707 -82126.259033  10712.562256   33.128125  10689.074707   0.050049   23.437500        0.000000     6.0     10712.512207         False          False   True
7   10712.562256   10712.512207 -82049.696533  10712.562256   17.564062  10712.512207   0.050049    0.000000      -23.437500     7.0     10712.512207         False          False   True
8   10839.074707   10735.949951 -82049.696533  10839.074707  126.512451  10735.949951   0.050049  103.074707        3.074951     1.0     10712.512207         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1734605/4096.[0m
[08/11 00:58:32]  --------------------------------------------------------------------------------
[08/11 00:58:32]  Iteration: 478 (186 solution, 291 counterexamples)
[08/11 01:02:21]  Generator returned sat in 218.132665 secs.
[08/11 01:02:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:02:24]  Improved gap from 1/10 to 23.4375
[08/11 01:02:24]  Improved number of small numbers from 88 to 101 out of a max of 114
[08/11 01:02:24]  Verifer returned sat in 2.267876 secs.
[08/11 01:02:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   10689.074707   10689.024756 -82702.871582  10689.074707   23.587402  10689.024756       0.00    0.049951       -0.049805     3.0     10689.024756            -1             -1   False
1   10712.562256   10689.124756 -82626.309326  10712.562256   23.537500  10689.124756       0.00   23.437500        0.000000     1.0     10712.562256         False          False   False
2   10812.562012   10812.512207 -82626.309326  10812.562012  123.437256  10812.512207       0.00    0.049805       -0.000244     1.0     10712.562256         False          False   False
3   10812.612305   10812.562256 -82549.746826  10812.612305    0.100098  10812.562256       0.00    0.050049      -23.387451     1.0     10812.612305         False          False   False
4   11059.637256   10935.974756 -82549.746826  11059.637256  247.075000  10935.974756       0.20  123.462500      123.437500     1.0     10812.612305         False          False   False
5   11059.637256   10936.024658 -82549.746826  11059.637256  121.537500  10936.024658       0.20  123.412598       23.437500     2.0     10812.612305         False          False    True
6   11059.637256   11035.999756 -82473.184326  11059.637256   61.768750  11035.999756       0.20   23.437500        0.000000     3.0     10812.612305         False          False    True
7   11068.084131   11059.437256 -82396.621826  11068.084131   31.884375  11059.437256       0.20    8.446875      -14.990625     4.0     10812.612305         False          False    True
8   11306.562256   11082.874756 -82396.621826  11306.562256  246.925000  11082.874756       0.25  223.437500      123.437500     1.0     11306.312256          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1975/16.[0m
[08/11 01:02:25]  --------------------------------------------------------------------------------
[08/11 01:02:25]  Iteration: 479 (186 solution, 292 counterexamples)
[08/11 01:06:32]  Generator returned sat in 235.932012 secs.
[08/11 01:06:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:06:37]  Improved gap from 0 to 0
[08/11 01:06:38]  Improved number of small numbers from 61 to 75 out of a max of 114
[08/11 01:06:38]  Verifer returned sat in 5.214895 secs.
[08/11 01:06:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   11289.073506   11288.069092 -82725.305908  11289.073506  1.004150  11288.069092        0.0  1.004414        1.003174     3.0     11288.069092            -1             -1   False
1   11289.073506   11288.070381 -82626.309082  11289.073506  1.004375  11288.070381        0.0  1.003125        0.000000     2.0     11288.069092         False          False   False
2   11289.073506   11289.073506 -82526.309082  11289.073506  0.001221  11289.073506        0.0  0.000000        0.000000     3.0     11289.073506         False          False   False
3   11289.074756   11289.073506 -82426.310547  11289.074756  0.001250  11289.073506        0.0  0.001250       -0.000215     3.0     11289.073506         False          False   False
4   11289.083506   11289.078923 -82326.319092  11289.083506  0.010000  11289.078923        0.0  0.004583       -0.000010     1.0     11289.073506         False          False   False
5   11289.096006   11289.084961 -82226.331582  11289.096006  0.017083  11289.084961        0.0  0.011045        0.000000     1.0     11289.073506         False          False   False
6   11289.096006   11289.096006 -82126.332764  11289.096006  0.010000  11289.096006        0.0  0.000000       -0.001182     2.0     11289.073506         False          False   False
7   11289.106006   11289.097256 -82026.341797  11289.106006  0.010000  11289.097256        0.0  0.008750       -0.000215     1.0     11289.073506         False          False   False
8   11289.107256   11289.107178 -82026.341797  11289.107256  0.010000  11289.107178        0.0  0.000078      -99.998965     1.0     11289.073506         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5/2048.[0m
[08/11 01:06:39]  --------------------------------------------------------------------------------
[08/11 01:06:39]  Iteration: 480 (186 solution, 293 counterexamples)
[08/11 01:09:44]  Generator returned sat in 174.108461 secs.
[08/11 01:09:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:09:48]  Improved gap from 0 to 23.4375
[08/11 01:09:50]  Improved number of small numbers from 59 to 72 out of a max of 114
[08/11 01:09:50]  Verifer returned sat in 4.416100 secs.
[08/11 01:09:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   10619.564941   10619.465173 -82056.700928  10619.564941    0.300049  10619.465173        0.0    0.099769        0.099590     3.0     10619.465173            -1             -1   False
1   10619.665173   10619.665039 -82002.150635  10619.665173    0.200000  10619.665039        0.0    0.000133      -45.249886     1.0     10619.665173         False          False   False
2   10688.352539   10664.915173 -81925.588379  10688.352539   68.687500  10664.915173        0.0   23.437367       -0.000264     1.0     10619.665173         False          False   False
3   10758.265173   10758.165173 -81925.588249  10758.265173   93.350000  10758.165173        0.0    0.100000      -30.087500     1.0     10619.665173         False          False   False
4   11011.890173   10885.327673 -81925.588249  11011.890173  253.725000  10885.327673        0.1  126.462500      123.437500     1.0     10619.665173         False          False   False
5   11011.890173   10888.352783 -81925.588249  11011.890173  126.362500  10888.352783        0.1  123.437389       23.437500     2.0     10619.665173         False          False    True
6   11011.890173   10988.352673 -81849.025749  11011.890173    0.500000  10988.352673        0.1   23.437500        0.000000     3.0     10619.665173         False          False    True
7   11011.890173   11011.790173 -81772.463249  11011.890173    0.500000  11011.790173        0.1    0.000000      -23.437500     4.0     10619.665173         False          False    True
8   11200.833923   11035.227783 -81772.463249  11200.833923  188.943750  11035.227783        0.1  165.506139       65.506250     1.0     11200.733923          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/11 01:09:50]  --------------------------------------------------------------------------------
[08/11 01:09:50]  Iteration: 481 (186 solution, 294 counterexamples)
[08/11 01:12:51]  Generator returned sat in 170.681733 secs.
[08/11 01:12:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:13:05]  Improved gap from 409/8192 to 18.75
[08/11 01:13:06]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 01:13:06]  Verifer returned sat in 13.047600 secs.
[08/11 01:13:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   16972.581543   16584.981201 -85349.145508  16972.581543    0.100098  16584.981201   0.000000  387.600342      387.600342     6.0     16584.981201            -1             -1    True
1   16972.581543   16585.081299 -85349.145508  16972.581543  387.499756  16585.081299   0.000000  387.500244      287.600342     6.0     16584.981201         False          False    True
2   17094.781494   16784.881592 -85349.145508  17094.781494  509.700195  16784.881592   0.100098  309.799805      309.700195     7.0     16584.981201         False          False    True
3   17094.781494   16784.981201 -85349.145508  17094.781494   80.000000  16784.981201   0.100098  309.700195      209.700195     8.0     17094.681396         False          False    True
4   17094.781494   16972.581299 -85349.145508  17094.781494  240.000000  16972.581299   0.100098  122.100098      109.700195     9.0     17094.681396         False          False    True
5   17094.781494   17031.581299 -85349.145508  17094.781494  122.000000  17031.581299   0.100098   63.100098        9.700195     4.0     17094.681396         False           True   False
6   17094.781494   17084.981445 -85267.895752  17094.781494   63.000000  17084.981445   0.100098    9.699951       -9.050049     5.0     17094.681396         False          False   False
7   17118.581543   17103.731445 -85186.645752  17118.581543   33.500000  17103.731445   0.100098   14.750000       -4.000000     1.0     17094.681396         False          False   False
8   17122.581543   17122.481445 -85186.645752  17122.581543   18.750000  17122.481445   0.100098    0.000000     -100.000000     1.0     17094.681396         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=317133/1024.[0m
[08/11 01:13:06]  --------------------------------------------------------------------------------
[08/11 01:13:06]  Iteration: 482 (186 solution, 295 counterexamples)
[08/11 01:18:31]  Generator returned sat in 314.477063 secs.
[08/11 01:18:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:18:38]  Improved gap from 0 to 23.4375
[08/11 01:18:39]  Improved number of small numbers from 68 to 80 out of a max of 114
[08/11 01:18:39]  Verifer returned sat in 6.631309 secs.
[08/11 01:18:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   14994.956299   14836.128369 -83644.758301  14994.956299    0.099854  14836.128369     0.0000  158.827930      114.362305     3.0     14836.128369            -1             -1   False
1   14994.956299   14971.218994 -83644.758301  14994.956299    0.100098  14971.218994     0.0000   23.737305       14.362305     3.0     14836.128369         False          False   False
2   14994.956299   14994.856494 -83582.458301  14994.956299   23.637451  14994.856494     0.0000    0.099805      -23.337695     3.0     14836.128369         False          False   False
3   15018.393994   15018.293994 -83582.458301  15018.393994   23.537500  15018.293994     0.0000    0.100000      -99.900000     1.0     15018.393994         False          False   False
4   15393.893994   15218.293994 -83582.458301  15393.893994  375.600000  15218.293994   151.4375   24.162500       24.162500     1.0     15018.393994         False          False   False
5   15559.031494   15246.206543 -83582.458301  15559.031494  189.300000  15246.206543   216.5750   96.249951       24.162500     1.0     15018.393994         False          False    True
6   15559.031494   15319.118994 -83506.720947  15559.031494   96.150000  15319.118994   216.5750   23.337500       -0.100146     2.0     15018.393994         False          False    True
7   15584.768994   15342.556641 -83432.358301  15584.768994   49.075000  15342.556641   216.5750   25.637354        0.000000     1.0     15018.393994         False          False    True
8   15584.768994   15368.193994 -83432.358154  15584.768994   25.537500  15368.193994   216.5750    0.000000      -99.999854     2.0     15018.393994         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1933/80.[0m
[08/11 01:18:40]  --------------------------------------------------------------------------------
[08/11 01:18:40]  Iteration: 483 (186 solution, 296 counterexamples)
[08/11 01:23:45]  Generator returned sat in 293.914274 secs.
[08/11 01:23:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:23:49]  Improved gap from 0 to 0
[08/11 01:23:51]  Improved number of small numbers from 61 to 88 out of a max of 114
[08/11 01:23:51]  Verifer returned sat in 4.406420 secs.
[08/11 01:23:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   15647.008057   15645.911484 -84131.663086  15647.008057  0.001465  15645.911484        0.0  1.096573        0.000160     2.0     15645.911484            -1             -1   False
1   15647.009632   15647.008057 -84031.666504  15647.009632  1.098148  15647.008057        0.0  0.001576       -0.001683     3.0     15645.911484         False          False   False
2   15647.011475   15647.011475 -83931.675781  15647.011475  0.003418  15647.011475        0.0  0.000000       -0.009118     1.0     15647.011475         False          False   False
3   15647.671387   15647.020743 -83832.328125  15647.671387  0.659912  15647.020743        0.0  0.650643       -0.001549     1.0     15647.011475         False          False   False
4   15647.684632   15647.673096 -83732.339821  15647.684632  0.663889  15647.673096        0.0  0.011536        0.000000     1.0     15647.011475         False          False   False
5   15647.684632   15647.684632 -83632.339844  15647.684632  0.010000  15647.684632        0.0  0.000000       -0.000023     2.0     15647.011475         False          False   False
6   15647.694632   15647.692965 -83532.356445  15647.694632  0.010000  15647.692965        0.0  0.001667       -0.006624     1.0     15647.011475         False          False   False
7   15647.702965   15647.701299 -83432.358398  15647.702965  0.010000  15647.701299        0.0  0.001667       -0.000244     1.0     15647.011475         False          False   False
8   15647.711299   15647.711182 -83432.358154  15647.711299  0.010000  15647.711182        0.0  0.000117      -99.991667     1.0     15647.011475         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=13/4096.[0m
[08/11 01:23:51]  --------------------------------------------------------------------------------
[08/11 01:23:51]  Iteration: 484 (186 solution, 297 counterexamples)
[08/11 01:32:11]  Generator returned sat in 488.902461 secs.
[08/11 01:32:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:32:14]  Improved gap from 0 to 100
[08/11 01:32:16]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/11 01:32:16]  Verifer returned sat in 3.216262 secs.
[08/11 01:32:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   15647.009632   15447.009521 -83931.664821  15647.009632     0.199951  15447.009521        0.1   199.900111      199.900000     4.0     15447.009521            -1             -1     -1
1   15647.009632   15547.009632 -83931.664821  15647.009632     0.200195  15547.009632        0.1    99.900000       99.900000     2.0     15447.009521         False           True   True
2   15647.009632   15547.009632 -83931.664821  15647.009632     0.100098  15547.009632        0.1    99.900000       -0.100000     2.0     15646.909632         False          False   True
3   16261.034270   15647.009632 -83931.664821  16261.034270   713.924638  15647.009632        0.1   613.924638      513.924638     1.0     15646.909632         False          False   True
4   16717.996589   15840.779197 -83931.664821  16717.996589  1070.886957  15840.779197        0.1   877.117391      870.886957     2.0     15646.909632         False          False   True
5   17447.209632   15847.009632 -83931.664821  17447.209632  1606.330435  15847.009632        0.1  1600.100000     1500.100000     3.0     15646.909632         False          False   True
6   17447.209632   16047.009632 -83931.664821  17447.209632  1252.165217  16047.009632        0.1  1400.100000     1400.100000     4.0     17447.109632          True           True  False
7   17447.209632   16147.009632 -83931.664821  17447.209632  1225.082609  16147.009632        0.1  1300.100000     1300.100000     5.0     17447.109632         False           True  False
8   17447.209632   16147.109863 -83931.664821  17447.209632  1070.886957  16147.109863        0.1  1299.999769     1200.100000     6.0     17447.109632         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6144819/4096.[0m
[08/11 01:32:16]  --------------------------------------------------------------------------------
[08/11 01:32:16]  Iteration: 485 (186 solution, 298 counterexamples)
[08/11 01:45:24]  Generator returned sat in 776.545918 secs.
[08/11 01:45:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:45:30]  Improved gap from 1/20 to 31.25
[08/11 01:45:32]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/11 01:45:32]  Verifer returned sat in 6.993674 secs.
[08/11 01:45:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   17257.277344   17096.977567 -83931.664821  17257.277344  160.849854  17096.977567       0.00  160.299777       99.949777     3.0     17096.977567            -1             -1     -1
1   17257.777567   17257.327567 -83931.664821  17257.777567  160.800000  17257.327567       0.05    0.400000        0.400000     1.0     17257.727567         False           True  False
2   17357.727567   17348.677567 -83931.664821  17357.727567  100.350000  17348.677567       0.05    9.000000        0.350000     1.0     17357.677567         False          False   True
3   17357.727567   17357.327567 -83862.914821  17357.727567    0.050000  17357.327567       0.05    0.350000      -30.900000     2.0     17357.677567         False          False   True
4   17489.077567   17488.527567 -83862.914821  17489.077567  131.700000  17488.527567       0.10    0.450000        0.400000     1.0     17357.677567         False           True  False
5   17489.127567   17488.577567 -83794.164821  17489.127567    0.500000  17488.577567       0.10    0.450000      -30.800000     2.0     17357.677567         False          False   True
6   17560.377567   17519.827567 -83781.564697  17560.377567   71.700000  17519.827567       0.10   40.450000      -46.949876     1.0     17560.277567          True           True  False
7   17638.527567   17607.227567 -83712.814941  17638.527567  118.600000  17607.227567       0.10   31.200000       -0.050120     1.0     17560.277567         False          False  False
8   17727.477567   17638.477783 -83701.714844  17727.477567  120.150000  17638.477783       0.10   88.899784       -0.000023     1.0     17560.277567         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=2/5.[0m
[08/11 01:45:33]  --------------------------------------------------------------------------------
[08/11 01:45:33]  Iteration: 486 (186 solution, 299 counterexamples)
[08/11 01:52:54]  Generator returned sat in 430.224218 secs.
[08/11 01:52:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:52:58]  Improved gap from 0 to 0
[08/11 01:53:00]  Improved number of small numbers from 53 to 61 out of a max of 114
[08/11 01:53:00]  Verifer returned sat in 4.431430 secs.
[08/11 01:53:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   17556.742432   17556.705741 -84331.043213  17556.742432  0.036621  17556.705741        0.0  0.036691        0.036473     9.0     17556.705741            -1             -1     -1
1   17557.430837   17556.778818 -84231.768091  17557.430837  0.725096  17556.778818        0.0  0.652019        0.000000     1.0     17556.705741         False           True  False
2   17557.430837   17557.430837 -84131.804443  17557.430837  0.036538  17557.430837        0.0  0.000000       -0.036352     2.0     17557.430837         False          False  False
3   17557.467376   17557.467376 -84031.804630  17557.467376  0.036538  17557.467376        0.0  0.000000        0.000000     1.0     17557.430837         False          False  False
4   17557.990645   17557.467376 -83932.327899  17557.990645  0.523269  17557.467376        0.0  0.523269        0.000000     1.0     17557.430837         False          False  False
5   17557.990645   17557.990645 -83832.327899  17557.990645  0.377115  17557.990645        0.0  0.000000        0.000000     2.0     17557.430837         False          False  False
6   17558.110260   17557.990645 -83732.447514  17558.110260  0.119615  17557.990645        0.0  0.119615        0.000000     2.0     17557.430837         False          False  False
7   17558.110260   17558.110260 -83632.484131  17558.110260  0.046538  17558.110260        0.0  0.000000       -0.036617     2.0     17557.430837         False          False  False
8   17558.396029   17558.146973 -83632.484131  17558.396029  0.285769  17558.146973        0.0  0.249057      -99.750847     1.0     17557.430837         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=75/1024.[0m
[08/11 01:53:00]  --------------------------------------------------------------------------------
[08/11 01:53:00]  Iteration: 487 (186 solution, 300 counterexamples)
[08/11 01:58:36]  Generator returned sat in 324.849113 secs.
[08/11 01:58:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:58:39]  Verifer returned unsat in 1.903218 secs.
[08/11 01:58:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:58:39]  --------------------------------------------------------------------------------
[08/11 01:58:39]  Iteration: 488 (187 solution, 300 counterexamples)
[08/11 01:59:22]  Generator returned sat in 31.443547 secs.
[08/11 01:59:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:59:26]  Verifer returned unsat in 2.526909 secs.
[08/11 01:59:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:59:26]  --------------------------------------------------------------------------------
[08/11 01:59:26]  Iteration: 489 (188 solution, 300 counterexamples)
[08/11 02:07:35]  Generator returned sat in 477.969595 secs.
[08/11 02:07:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:07:40]  Improved gap from 0 to 0
[08/11 02:07:42]  Improved number of small numbers from 59 to 79 out of a max of 114
[08/11 02:07:42]  Verifer returned sat in 5.338000 secs.
[08/11 02:07:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   21090.944336   21090.118652 -87864.456055  21090.944336  1.331055  21090.118652        0.0  0.825684        0.825535     2.0     21090.118652            -1             -1   False
1   21091.448486   21090.945549 -87765.786865  21091.448486  1.329834  21090.945549        0.0  0.502937       -0.001125     1.0     21091.448486         False          False   False
2   21091.450966   21091.449716 -87665.789307  21091.450966  0.505417  21091.449716        0.0  0.001250       -0.001087     1.0     21091.450966         False          False   False
3   21091.953882   21091.452148 -87566.291136  21091.953882  0.504167  21091.452148        0.0  0.501734        0.000000     1.0     21091.953882         False          False   False
4   21091.953882   21091.953882 -87466.292480  21091.953882  0.500244  21091.953882        0.0  0.000000       -0.001344     2.0     21091.953882         False          False   False
5   21091.966382   21091.955322 -87366.303636  21091.966382  0.012500  21091.955322        0.0  0.011060        0.000000     1.0     21091.953882         False          False   False
6   21091.966382   21091.966382 -87266.304886  21091.966382  0.010000  21091.966382        0.0  0.000000       -0.001250     2.0     21091.953882         False          False   False
7   21091.976382   21091.967632 -87166.314697  21091.976382  0.010000  21091.967632        0.0  0.008750       -0.001061     1.0     21091.953882         False          False   False
8   21091.977632   21091.977539 -87166.314697  21091.977632  0.010000  21091.977539        0.0  0.000093      -99.999811     1.0     21091.953882         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=11/4096.[0m
[08/11 02:07:42]  --------------------------------------------------------------------------------
[08/11 02:07:42]  Iteration: 490 (188 solution, 301 counterexamples)
[08/11 02:20:21]  Generator returned sat in 747.034504 secs.
[08/11 02:20:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:20:43]  Improved gap from 0 to 0
[08/11 02:20:44]  Improved number of small numbers from 59 to 81 out of a max of 114
[08/11 02:20:44]  Verifer returned sat in 21.906991 secs.
[08/11 02:20:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   16393.212158   16392.838109 -86081.669922  16393.212158  0.181667  16392.838109        0.0  0.374050        0.374014     3.0     16392.838109            -1             -1   False
1   16393.212158   16393.031982 -85982.043945  16393.212158  0.181667  16393.031982        0.0  0.180176       -0.000009     3.0     16392.838109         False          False   False
2   16393.213135   16393.212275 -85882.045166  16393.213135  0.181152  16393.212275        0.0  0.000860       -0.000253     1.0     16393.213135         False          False   False
3   16393.213942   16393.213525 -85782.045898  16393.213942  0.001667  16393.213525        0.0  0.000417       -0.000179     1.0     16393.213942         False          False   False
4   16393.465192   16393.223877 -85682.296970  16393.465192  0.251667  16393.223877        0.0  0.241315        0.000000     1.0     16393.213942         False          False   False
5   16393.465192   16393.465192 -85582.297119  16393.465192  0.010000  16393.465192        0.0  0.000000       -0.000149     2.0     16393.213942         False          False   False
6   16393.476025   16393.465576 -85482.307803  16393.476025  0.010833  16393.465576        0.0  0.010449        0.000000     1.0     16393.213942         False          False   False
7   16393.476025   16393.476025 -85382.307861  16393.476025  0.010000  16393.476025        0.0  0.000000       -0.000058     2.0     16393.213942         False          False   False
8   16393.486025   16393.476562 -85382.307861  16393.486025  0.010000  16393.476562        0.0  0.009463      -99.990058     1.0     16393.213942         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/11 02:20:45]  --------------------------------------------------------------------------------
[08/11 02:20:45]  Iteration: 491 (188 solution, 302 counterexamples)
[08/11 02:36:46]  Generator returned sat in 950.579125 secs.
[08/11 02:36:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:36:55]  Improved gap from 0 to 0
[08/11 02:36:56]  Improved number of small numbers from 62 to 83 out of a max of 114
[08/11 02:36:56]  Verifer returned sat in 8.164208 secs.
[08/11 02:36:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   16392.458496   16392.089814 -86081.669922  16392.458496  0.001465  16392.089814        0.0  0.368682        0.000400     6.0     16392.089814            -1             -1     -1
1   16392.458496   16392.458096 -85981.670654  16392.458496  0.000732  16392.458096        0.0  0.000400       -0.000332     3.0     16392.458496         False           True  False
2   16393.212783   16393.211670 -85882.424609  16393.212783  0.754687  16393.211670        0.0  0.001113        0.000000     1.0     16392.458496         False          False  False
3   16393.212783   16393.212783 -85782.424609  16393.212783  0.000732  16393.212783        0.0  0.000000        0.000000     2.0     16393.212783         False          False  False
4   16393.958721   16393.212891 -85683.170547  16393.958721  0.745938  16393.212891        0.0  0.745830        0.000000     1.0     16393.212783         False          False  False
5   16393.958721   16393.958721 -85583.170654  16393.958721  0.010000  16393.958721        0.0  0.000000       -0.000107     2.0     16393.212783         False          False  False
6   16393.968721   16393.968096 -85483.181152  16393.968721  0.010000  16393.968096        0.0  0.000625       -0.000605     1.0     16393.212783         False          False  False
7   16393.978721   16393.969482 -85383.190674  16393.978721  0.010625  16393.969482        0.0  0.009238       -0.000127     1.0     16393.212783         False          False  False
8   16393.982666   16393.982422 -85383.190674  16393.982666  0.013184  16393.982422        0.0  0.000244      -99.996182     1.0     16393.212783         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/11 02:36:56]  --------------------------------------------------------------------------------
[08/11 02:36:56]  Iteration: 492 (188 solution, 303 counterexamples)
[08/11 02:43:22]  Generator returned sat in 374.146914 secs.
[08/11 02:43:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:43:24]  Improved gap from 0 to 100
[08/11 02:43:25]  Improved number of small numbers from 59 to 80 out of a max of 114
[08/11 02:43:25]  Verifer returned sat in 1.920946 secs.
[08/11 02:43:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   16591.512695   16591.412842 -85683.170547  16591.512695    0.099854  16591.412842    0.000000    0.099854      -99.900088     6.0     16591.412842            -1             -1     -1
1   16691.512695   16691.412842 -85683.170547  16691.512695  100.099854  16691.412842    0.000000    0.099854      -99.900088     1.0     16591.412842         False           True  False
2   16791.512695   16791.412783 -85683.170547  16791.512695  100.099854  16791.412783    0.000000    0.099912      -99.900088     1.0     16591.412842         False          False  False
3   17193.746117   16891.412783 -85683.170547  17193.746117  402.333333  16891.412783  202.133333  100.200000        0.200000     1.0     16591.412842         False          False  False
4   17295.212783   17090.379450 -85683.170547  17295.212783  201.666667  17090.379450  203.600000    1.233333        0.200000     1.0     16591.412842         False          False   True
5   17395.312783   17191.412783 -85683.170547  17395.312783  101.333333  17191.412783  203.700000    0.200000        0.200000     1.0     16591.412842         False          False   True
6   17446.279450   17242.579450 -85683.170547  17446.279450   51.166667  17242.579450  203.700000    0.000000      -48.833333     1.0     16591.412842         False          False   True
7   17848.612783   17391.412783 -85683.170547  17848.612783  402.333333  17391.412783  457.000000    0.200000        0.200000     1.0     16591.412842         False          False   True
8   18050.079450   17391.712891 -85683.170547  18050.079450  201.666667  17391.712891  558.466667   99.899893        0.200000     1.0     16591.412842         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/11 02:43:26]  --------------------------------------------------------------------------------
[08/11 02:43:26]  Iteration: 493 (188 solution, 304 counterexamples)
[08/11 02:45:12]  Generator returned sat in 95.424094 secs.
[08/11 02:45:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:45:17]  Verifer returned unsat in 3.364969 secs.
[08/11 02:45:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:45:17]  --------------------------------------------------------------------------------
[08/11 02:45:17]  Iteration: 494 (189 solution, 304 counterexamples)
[08/11 02:46:03]  Generator returned sat in 33.506262 secs.
[08/11 02:46:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:46:07]  Verifer returned unsat in 2.632647 secs.
[08/11 02:46:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:46:07]  --------------------------------------------------------------------------------
[08/11 02:46:07]  Iteration: 495 (190 solution, 304 counterexamples)
[08/11 02:46:51]  Generator returned sat in 33.214351 secs.
[08/11 02:46:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:46:55]  Verifer returned unsat in 2.478997 secs.
[08/11 02:46:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:46:55]  --------------------------------------------------------------------------------
[08/11 02:46:55]  Iteration: 496 (191 solution, 304 counterexamples)
[08/11 02:47:39]  Generator returned sat in 32.494421 secs.
[08/11 02:47:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:47:42]  Verifer returned unsat in 1.843250 secs.
[08/11 02:47:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:47:42]  --------------------------------------------------------------------------------
[08/11 02:47:42]  Iteration: 497 (192 solution, 304 counterexamples)
[08/11 02:49:09]  Generator returned sat in 75.729846 secs.
[08/11 02:49:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:49:12]  Verifer returned unsat in 0.901781 secs.
[08/11 02:49:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:49:12]  --------------------------------------------------------------------------------
[08/11 02:49:12]  Iteration: 498 (193 solution, 304 counterexamples)
[08/11 02:49:57]  Generator returned sat in 34.773822 secs.
[08/11 02:49:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:50:01]  Improved gap from 1/10 to 1.5625
[08/11 02:50:02]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 02:50:02]  Verifer returned sat in 4.009438 secs.
[08/11 02:50:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   15958.509277   15958.471680 -86372.135254  15958.509277    0.037598  15958.471680   0.000000   0.037598        0.037354     1.0     15958.471680            -1             -1   False
1   15958.509277   15958.471924 -86372.135254  15958.509277    0.037598  15958.471924   0.000000   0.037354      -99.962646     2.0     15958.471680         False          False   False
2   16069.639160   16068.114258 -86283.340088  16069.639160  111.167236  16068.114258   0.000000   1.524902       -0.037598     1.0     15958.471680          True           True   False
3   16069.714355   16069.676758 -86184.902588  16069.714355    1.600098  16069.676758   0.000000   0.037598       -1.524902     1.0     16069.714355         False          False   False
4   16182.881836   16117.934814 -86184.902588  16182.881836  113.205078  16117.934814  11.566895  53.380127        0.075684     1.0     16069.714355         False          False   False
5   16186.604248   16171.352539 -86088.700928  16186.604248   57.102539  16171.352539  11.566895   3.684814       -0.000244     1.0     16069.714355         False          False    True
6   16263.089844   16175.075195 -86065.186523  16263.089844   80.170410  16175.075195  11.566895  76.447754       -0.000244     1.0     16069.714355         False          False    True
7   16279.426514   16251.560547 -85981.522949  16279.426514   92.784424  16251.560547  11.566895  16.299072        0.000000     1.0     16069.714355         False          False    True
8   16376.332520   16267.896973 -85978.428955  16376.332520  113.205078  16267.896973  11.566895  96.868652        0.000000     1.0     16069.714355         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=155/2048.[0m
[08/11 02:50:03]  --------------------------------------------------------------------------------
[08/11 02:50:03]  Iteration: 499 (193 solution, 305 counterexamples)
[08/11 02:58:21]  Generator returned sat in 487.880976 secs.
[08/11 02:58:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:58:24]  Improved gap from 77/16384 to 17.1875
[08/11 02:58:24]  Improved number of small numbers from 81 to 114 out of a max of 114
[08/11 02:58:24]  Verifer returned sat in 1.886814 secs.
[08/11 02:58:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   14551.609375   14551.559326 -86184.902832  14551.609375    0.050000  14551.559326        0.0    0.050049        0.000000     9.0     14551.559326            -1             -1     -1
1   14651.609375   14651.609375 -86184.902832  14651.609375  100.050049  14651.609375        0.0    0.000000        0.000000     1.0     14551.559326         False           True  False
2   15084.321777   14651.609375 -86184.902832  15084.321777  432.712402  14651.609375        0.0  432.712402      332.712402     1.0     14551.559326         False          False  False
3   15084.321777   14851.609375 -86184.902832  15084.321777  426.000000  14851.609375        0.0  232.712402      232.712402     2.0     15084.321777         False          False  False
4   15084.321777   14951.609131 -86184.902832  15084.321777  215.000000  14951.609131        0.0  132.712646      132.712402     3.0     15084.321777         False          False  False
5   15084.321777   15027.621582 -86184.902832  15084.321777  109.500000  15027.621582        0.0   56.700195       32.712402     4.0     15084.321777         False          False  False
6   15084.371582   15053.946777 -86117.665039  15084.371582   56.750000  15053.946777        0.0   30.424805        0.000000     5.0     15084.321777         False          False  False
7   15084.371582   15084.371582 -86034.852539  15084.371582   30.375000  15084.371582        0.0    0.000000      -17.187500     2.0     15084.321777         False          False  False
8   15101.559082   15101.559082 -86034.852539  15101.559082   17.187500  15101.559082        0.0    0.000000     -100.000000     1.0     15084.321777         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=26621/80.[0m
[08/11 02:58:25]  --------------------------------------------------------------------------------
[08/11 02:58:25]  Iteration: 500 (193 solution, 306 counterexamples)
[08/11 03:00:56]  Generator returned sat in 139.187303 secs.
[08/11 03:00:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:00:58]  Verifer returned unsat in 0.884637 secs.
[08/11 03:00:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:00:58]  --------------------------------------------------------------------------------
[08/11 03:00:58]  Iteration: 501 (194 solution, 306 counterexamples)
[08/11 03:04:09]  Generator returned sat in 179.682536 secs.
[08/11 03:04:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:04:12]  Verifer returned unsat in 1.592515 secs.
[08/11 03:04:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:04:12]  --------------------------------------------------------------------------------
[08/11 03:04:12]  Iteration: 502 (195 solution, 306 counterexamples)
[08/11 03:05:09]  Generator returned sat in 45.557624 secs.
[08/11 03:05:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:05:12]  Verifer returned unsat in 1.594656 secs.
[08/11 03:05:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:05:12]  --------------------------------------------------------------------------------
[08/11 03:05:12]  Iteration: 503 (196 solution, 306 counterexamples)
[08/11 03:31:14]  Generator returned sat in 1550.248401 secs.
[08/11 03:31:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:31:21]  Improved gap from 0 to 1.5625
[08/11 03:31:22]  Improved number of small numbers from 61 to 70 out of a max of 114
[08/11 03:31:22]  Verifer returned sat in 7.315041 secs.
[08/11 03:31:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   20119.458008   20119.456979 -91655.869186  20119.458008    0.001465  20119.456979       0.00    0.001029        0.001029     2.0     20119.456979            -1             -1   False
1   20219.458229   20119.459479 -91655.869186  20219.458229  100.001250  20119.459479       0.00   99.998750        0.001250     1.0     20119.456979         False          False   False
2   20219.458229   20219.456979 -91557.431686  20219.458229   99.997559  20219.456979       0.00    0.001250       -1.561250     2.0     20219.458229         False          False   False
3   20324.146979   20221.019479 -91557.431686  20324.146979  104.690000  20221.019479       0.00  103.127500        3.127500     1.0     20219.458229         False          False   False
4   20324.146979   20324.145729 -91462.120436  20324.146979  103.126250  20324.145729       0.00    0.001250       -1.561250     2.0     20219.458229         False          False   False
5   20478.051979   20424.145508 -91462.120436  20478.051979  153.906250  20424.145508       5.47   48.436471       46.873750     1.0     20219.458229         False          False   False
6   20478.051979   20471.019287 -91408.994186  20478.051979    0.010000  20471.019287       5.47    1.562692        0.000000     2.0     20219.458229         False          False    True
7   20478.051979   20472.581979 -91310.556686  20478.051979    1.010000  20472.581979       5.47    0.000000       -1.562500     3.0     20219.458229         False          False    True
8   20480.061979   20474.144531 -91212.119385  20480.061979    2.010000  20474.144531       5.47    0.447448       -1.115199     1.0     20219.458229         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=37499/800.[0m
[08/11 03:31:23]  --------------------------------------------------------------------------------
[08/11 03:31:23]  Iteration: 504 (196 solution, 307 counterexamples)
[08/11 03:40:51]  Generator returned sat in 556.963401 secs.
[08/11 03:40:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:40:57]  Improved gap from 1/32 to 0
[08/11 03:40:58]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/11 03:40:58]  Verifer returned sat in 5.029588 secs.
[08/11 03:40:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   19073.413086   19022.024170 -91609.939697  19073.413086    0.013889  19022.024170   0.000000  51.388916       51.388916     1.0     19022.024170            -1             -1   False
1   19073.413086   19022.024170 -91561.328613  19073.413086    0.013889  19022.024170   0.000000  51.388916        0.000000     1.0     19022.024170         False          False   False
2   19173.454590   19128.010254 -91561.328613  19173.454590  151.430420  19128.010254   0.013672  45.430664        0.027832     1.0     19022.024170         False          False   False
3   19174.218506   19173.440918 -91462.120361  19174.218506   46.194580  19173.440918   0.013672   0.763916        0.000000     2.0     19174.204834         False          False    True
4   19274.260254   19224.315674 -91462.120361  19274.260254  100.805664  19224.315674   0.027588  49.916992        0.027832     1.0     19174.204834         False           True   False
5   19274.260254   19274.218750 -91362.148193  19274.260254   49.902832  19274.218750   0.027588   0.013916        0.000000     2.0     19174.204834         False          False    True
6   19374.302002   19324.760254 -91362.148193  19374.302002  100.055664  19324.760254   0.041504  49.500244        0.027832     1.0     19374.260498          True           True   False
7   19374.329590   19374.274414 -91262.203857  19374.329590   49.527832  19374.274414   0.041504   0.013672       -0.000244     1.0     19374.260498         False          False    True
8   19473.371582   19374.302002 -91262.203613  19473.371582   99.055664  19374.302002   0.041504  99.028076       -0.958008     1.0     19374.260498         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=57/2048.[0m
[08/11 03:40:58]  --------------------------------------------------------------------------------
[08/11 03:40:58]  Iteration: 505 (196 solution, 308 counterexamples)
[08/11 03:42:29]  Generator returned sat in 79.416363 secs.
[08/11 03:42:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:42:31]  Verifer returned unsat in 0.712856 secs.
[08/11 03:42:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:42:32]  --------------------------------------------------------------------------------
[08/11 03:42:32]  Iteration: 506 (197 solution, 308 counterexamples)
[08/11 03:43:45]  Generator returned sat in 61.687140 secs.
[08/11 03:43:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:43:49]  Verifer returned unsat in 2.679648 secs.
[08/11 03:43:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:43:50]  --------------------------------------------------------------------------------
[08/11 03:43:50]  Iteration: 507 (198 solution, 308 counterexamples)
[08/11 03:49:22]  Generator returned sat in 320.753290 secs.
[08/11 03:49:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:49:26]  Verifer returned unsat in 2.364900 secs.
[08/11 03:49:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:49:26]  --------------------------------------------------------------------------------
[08/11 03:49:26]  Iteration: 508 (199 solution, 308 counterexamples)
[08/11 03:55:42]  Generator returned sat in 363.640655 secs.
[08/11 03:55:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:55:47]  Verifer returned unsat in 4.182850 secs.
[08/11 03:55:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:55:47]  --------------------------------------------------------------------------------
[08/11 03:55:47]  Iteration: 509 (200 solution, 308 counterexamples)
[08/11 03:58:16]  Generator returned sat in 136.616860 secs.
[08/11 03:58:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:58:23]  Improved gap from 3/2000 to 32.8125
[08/11 03:58:24]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/11 03:58:24]  Verifer returned sat in 7.030025 secs.
[08/11 03:58:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   18572.947998   18306.592041 -90994.507324  18572.947998    0.025146  18306.592041   0.000000  266.355957      166.356201     9.0     18306.592041            -1             -1     -1
1   18572.998047   18406.591797 -90994.507324  18572.998047  266.406006  18406.591797   0.050049  166.356201       66.356201     8.0     18306.592041         False           True  False
2   18673.022949   18572.947998 -90994.507324  18673.022949  266.381104  18572.947998   0.074951  100.000000       66.356201     8.0     18672.947998          True           True   True
3   18837.647949   18706.591797 -90994.507324  18837.647949  264.625000  18706.591797  64.699951   66.356201       66.356201     1.0     18772.947998         False           True   True
4   18904.104248   18772.973145 -90994.507324  18904.104248  132.812500  18772.973145  64.699951   66.431152       32.812500     1.0     18772.947998         False          False   True
5   18904.104248   18806.591797 -90927.319824  18904.104248   66.406250  18806.591797  64.699951   32.812500        0.000000     2.0     18772.947998         False          False   True
6   18904.494873   18839.404297 -90860.132324  18904.494873   33.203125  18839.404297  64.699951    0.390625      -32.421875     3.0     18772.947998         False          False   True
7   18987.112061   18872.216797 -90810.327637  18987.112061   83.007812  18872.216797  64.699951   50.195312        0.000000     1.0     18922.412109          True           True  False
8   19028.042480   18922.437012 -90810.327637  19028.042480   91.125732  18922.437012  64.699951   40.905518      -59.069580     1.0     18922.412109         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=271795/4096.[0m
[08/11 03:58:25]  --------------------------------------------------------------------------------
[08/11 03:58:25]  Iteration: 510 (200 solution, 309 counterexamples)
[08/11 04:00:22]  Generator returned sat in 104.903737 secs.
[08/11 04:00:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:00:25]  Verifer returned unsat in 2.361897 secs.
[08/11 04:00:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:00:25]  --------------------------------------------------------------------------------
[08/11 04:00:25]  Iteration: 511 (201 solution, 309 counterexamples)
[08/11 04:01:33]  Generator returned sat in 56.590335 secs.
[08/11 04:01:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:01:35]  Verifer returned unsat in 0.717464 secs.
[08/11 04:01:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:01:35]  --------------------------------------------------------------------------------
[08/11 04:01:35]  Iteration: 512 (202 solution, 309 counterexamples)
[08/11 04:04:13]  Generator returned sat in 145.988189 secs.
[08/11 04:04:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:04:16]  Verifer returned unsat in 1.513547 secs.
[08/11 04:04:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:04:16]  --------------------------------------------------------------------------------
[08/11 04:04:16]  Iteration: 513 (203 solution, 309 counterexamples)
[08/11 04:06:14]  Generator returned sat in 106.056972 secs.
[08/11 04:06:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:06:17]  Verifer returned unsat in 1.865337 secs.
[08/11 04:06:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:06:17]  --------------------------------------------------------------------------------
[08/11 04:06:17]  Iteration: 514 (204 solution, 309 counterexamples)
[08/11 04:07:10]  Generator returned sat in 41.242473 secs.
[08/11 04:07:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:07:13]  Verifer returned unsat in 2.000630 secs.
[08/11 04:07:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:07:13]  --------------------------------------------------------------------------------
[08/11 04:07:13]  Iteration: 515 (205 solution, 309 counterexamples)
[08/11 04:16:12]  Generator returned sat in 526.881967 secs.
[08/11 04:16:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:16:17]  Improved gap from 1/1200 to 0
[08/11 04:16:18]  Improved number of small numbers from 68 to 80 out of a max of 114
[08/11 04:16:18]  Verifer returned sat in 4.271263 secs.
[08/11 04:16:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   12889.794922   12691.792422 -85377.707764  12889.794922    0.001250  12691.792422    0.00125  198.001250      100.001436     8.0     12691.792422            -1             -1     -1
1   12889.794922   12889.791016 -85377.707764  12889.794922  198.001221  12889.791016    0.00125    0.002656        0.001436     8.0     12691.792422         False           True   True
2   12889.794922   12889.792236 -85277.709199  12889.794922    0.002441  12889.792236    0.00125    0.001436        0.000000     3.0     12889.793672          True           True  False
3   12989.796172   12889.794922 -85277.709199  12989.796172  100.002686  12889.794922    0.00125  100.000000        0.001250     1.0     12889.793672         False          False  False
4   13089.798672   13089.793672 -85277.709199  13089.798672  200.002500  13089.793672    0.00250    0.002500        0.002500     1.0     12889.793672         False          False  False
5   13089.806172   13089.797422 -85178.221680  13089.806172    0.010000  13089.797422    0.00250    0.006250       -0.502480     1.0     12889.793672         False          False   True
6   13090.309922   13090.306172 -85078.224121  13090.309922    0.510000  13090.306172    0.00250    0.001250       -0.001172     1.0     12889.793672         False          False   True
7   13091.318672   13090.308672 -84979.231934  13091.318672    1.010000  13090.308672    0.00250    1.007500       -0.000234     1.0     12889.793672         False          False   True
8   13091.821172   13091.316406 -84879.734375  13091.821172    1.510000  13091.316406    0.00250    0.502266       -0.000176     1.0     12889.793672         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/11 04:16:19]  --------------------------------------------------------------------------------
[08/11 04:16:19]  Iteration: 516 (205 solution, 310 counterexamples)
[08/11 04:26:14]  Generator returned sat in 583.974529 secs.
[08/11 04:26:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:26:20]  Improved gap from 0 to 48.4375
[08/11 04:26:20]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 04:26:20]  Verifer returned sat in 4.813549 secs.
[08/11 04:26:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   12988.928467   12840.464600 -85277.709229  12988.928467    0.025000  12840.464600   0.001465  148.462402      148.437256     2.0     12840.464600            -1             -1   False
1   12988.953613   12840.489746 -85277.709229  12988.953613  148.487549  12840.489746   0.026367  148.437500       48.437500     2.0     12840.464600         False          False   False
2   12988.953613   12965.464600 -85277.709229  12988.953613  148.412598  12965.464600   0.026367   23.462646      -51.562500     3.0     12988.927246         False          False    True
3   13095.003418   13094.952148 -85277.709229  13095.003418  129.512451  13094.952148   0.026367    0.024902      -45.512695     1.0     13094.977051         False           True   False
4   13288.978516   13240.464844 -85277.709229  13288.978516  194.000000  13240.464844   0.051270   48.462402       48.437500     1.0     13094.977051         False          False   False
5   13288.978516   13240.489746 -85226.146729  13288.978516    2.000000  13240.489746   0.051270   48.437500        0.000000     2.0     13094.977051         False          False    True
6   13288.978516   13288.927246 -85174.584229  13288.978516    5.000000  13288.927246   0.051270    0.000000      -48.437500     3.0     13094.977051         False          False    True
7   13390.466064   13342.002197 -85127.659180  13390.466064  101.487549  13342.002197   0.051270   48.412598       -0.024902     1.0     13390.414795          True           True   False
8   13445.565918   13390.439697 -85127.659180  13445.565918  103.512451  13390.439697   0.051270   55.074951      -44.925049     1.0     13390.414795         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/11 04:26:21]  --------------------------------------------------------------------------------
[08/11 04:26:21]  Iteration: 517 (205 solution, 311 counterexamples)
[08/11 04:31:07]  Generator returned sat in 275.360986 secs.
[08/11 04:31:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:31:13]  Improved gap from 0 to 39.0625
[08/11 04:31:14]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/11 04:31:14]  Verifer returned sat in 5.022640 secs.
[08/11 04:31:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   13088.948242   12849.685791 -85277.709229  13088.948242    0.100098  12849.685791   0.099854  239.162598      239.162598     5.0     12849.685791            -1             -1     -1
1   13089.048340   12949.685791 -85277.709229  13089.048340  239.262695  12949.685791   0.199951  139.162598      139.162598     5.0     12849.685791         False           True   True
2   13089.148438   13049.685791 -85277.709229  13089.148438  139.262695  13049.685791   0.199951   39.262695       39.262695     3.0     13088.948486          True           True   True
3   13288.948242   13149.685791 -85277.709229  13288.948242  239.062500  13149.685791   0.199951  139.062500      139.062500     1.0     13088.948486         False          False   True
4   13288.948242   13225.882812 -85277.709229  13288.948242  121.531250  13225.882812   0.199951   62.865479       39.062500     2.0     13088.948486         False          False   True
5   13288.948242   13249.685791 -85216.771729  13288.948242   62.765625  13249.685791   0.199951   39.062500        0.000000     3.0     13088.948486         False          False   True
6   13288.948242   13288.748291 -85155.834229  13288.948242   33.382812  13288.748291   0.199951    0.000000      -39.062500     4.0     13088.948486         False          False   True
7   13375.170898   13327.811035 -85103.805908  13375.170898   86.222656  13327.811035   0.199951   47.159912       -0.811523     1.0     13374.970947          True           True  False
8   13422.086426   13375.782715 -85103.805908  13422.086426   94.075439  13375.782715   0.199951   46.103760      -53.895996     1.0     13374.970947         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=285005/2048.[0m
[08/11 04:31:14]  --------------------------------------------------------------------------------
[08/11 04:31:14]  Iteration: 518 (205 solution, 312 counterexamples)
[08/11 04:43:21]  Generator returned sat in 715.652863 secs.
[08/11 04:43:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:43:31]  Improved gap from 973/80 to 18.75
[08/11 04:43:31]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 04:43:31]  Verifer returned sat in 8.083639 secs.
[08/11 04:43:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   13773.475586   13373.475830 -83709.671875  13773.475586    0.050000  13373.475830   0.000000  399.999756      399.999756     6.0      13373.47583            -1             -1   False
1   13773.525635   13373.475830 -83709.671875  13773.525635  400.049805  13373.475830   0.050049  399.999756      299.999756     6.0      13373.47583         False          False   False
2   13773.525879   13473.475830 -83709.671875  13773.525879  400.000000  13473.475830   0.050049  300.000000      200.000000     7.0      13773.47583         False          False    True
3   13773.525879   13647.525879 -83709.671875  13773.525879  232.949951  13647.525879   0.050049  125.949951      100.000000     8.0      13773.47583         False          False    True
4   13902.575928   13773.475586 -83709.671875  13902.575928  255.000000  13773.475586   0.050049  129.050293      129.050049     9.0      13773.47583         False          False    True
5   13902.575928   13773.525879 -83709.671875  13902.575928  129.000000  13773.525879   0.050049  129.000000       29.050049     2.0      13773.47583         False           True   False
6   13902.575928   13873.475830 -83640.871826  13902.575928   66.000000  13873.475830   0.050049   29.050049       -2.149902     3.0      13773.47583         False          False   False
7   13908.025879   13904.675781 -83559.621826  13908.025879   34.500000  13904.675781   0.050049    3.300049      -15.449951     1.0      13773.47583         False          False   False
8   13923.475830   13923.425781 -83559.621826  13923.475830   18.750000  13923.425781   0.050049    0.000000     -100.000000     1.0      13773.47583         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1228799/4096.[0m
[08/11 04:43:31]  --------------------------------------------------------------------------------
[08/11 04:43:31]  Iteration: 519 (205 solution, 313 counterexamples)
[08/11 04:53:50]  Generator returned sat in 607.339990 secs.
[08/11 04:53:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:53:54]  Improved gap from 0 to 23.4375
[08/11 04:53:55]  Improved number of small numbers from 74 to 91 out of a max of 114
[08/11 04:53:55]  Verifer returned sat in 3.069450 secs.
[08/11 04:53:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    19264.93833   19241.500732 -83812.999375  19264.93833    0.049805  19241.500732     0.0000   23.437598         23.4375     2.0     19241.500732            -1             -1    True
1    19264.93833   19241.500830 -83736.436875  19264.93833    0.049805  19241.500830     0.0000   23.437500          0.0000     2.0     19241.500732         False          False    True
2    19264.93833   19264.938330 -83659.874375  19264.93833    0.049805  19264.938330     0.0000    0.000000        -23.4375     3.0     19241.500732         False          False    True
3    19714.96333   19288.375830 -83659.874375  19714.96333  450.025000  19288.375830   300.0250  126.562500         26.5625     1.0     19241.500732          True           True   False
4    19814.91333   19488.375732 -83659.874375  19814.91333  226.512500  19488.375732   300.0250   26.512598         26.5125     1.0     19241.500732         False          False    True
5    19814.91333   19491.450684 -83586.386875  19814.91333    2.000000  19491.450684   300.0250   23.437646          0.0000     2.0     19241.500732         False          False    True
6    19814.91333   19514.888330 -83509.824375  19814.91333    2.000000  19514.888330   300.0250    0.000000        -23.4375     3.0     19241.500732         False          False    True
7    20041.92583   19538.325928 -83509.824375  20041.92583  227.012500  19538.325928   377.0375  126.562402         26.5625     1.0     19664.888330          True           True   False
8    20041.92583   19638.325928 -83509.824375  20041.92583  115.006250  19638.325928   377.0375   26.562402        -73.4375     2.0     19664.888330         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=425/16.[0m
[08/11 04:53:55]  --------------------------------------------------------------------------------
[08/11 04:53:55]  Iteration: 520 (205 solution, 314 counterexamples)
[08/11 04:58:13]  Generator returned sat in 245.918625 secs.
[08/11 04:58:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:58:15]  Verifer returned unsat in 1.082621 secs.
[08/11 04:58:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:58:15]  --------------------------------------------------------------------------------
[08/11 04:58:15]  Iteration: 521 (206 solution, 314 counterexamples)
[08/11 04:59:13]  Generator returned sat in 46.661033 secs.
[08/11 04:59:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:59:16]  Verifer returned unsat in 1.967658 secs.
[08/11 04:59:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:59:16]  --------------------------------------------------------------------------------
[08/11 04:59:16]  Iteration: 522 (207 solution, 314 counterexamples)
[08/11 05:00:19]  Generator returned sat in 51.658241 secs.
[08/11 05:00:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:00:22]  Verifer returned unsat in 1.569465 secs.
[08/11 05:00:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:00:22]  --------------------------------------------------------------------------------
[08/11 05:00:22]  Iteration: 523 (208 solution, 314 counterexamples)
[08/11 05:01:11]  Generator returned sat in 37.828135 secs.
[08/11 05:01:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:01:15]  Verifer returned unsat in 2.145664 secs.
[08/11 05:01:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:01:15]  --------------------------------------------------------------------------------
[08/11 05:01:15]  Iteration: 524 (209 solution, 314 counterexamples)
[08/11 05:02:10]  Generator returned sat in 44.096271 secs.
[08/11 05:02:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:02:12]  Verifer returned unsat in 0.561499 secs.
[08/11 05:02:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:02:12]  --------------------------------------------------------------------------------
[08/11 05:02:12]  Iteration: 525 (210 solution, 314 counterexamples)
[08/11 05:02:59]  Generator returned sat in 35.855945 secs.
[08/11 05:03:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:03:01]  Verifer returned unsat in 0.532318 secs.
[08/11 05:03:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:03:01]  --------------------------------------------------------------------------------
[08/11 05:03:01]  Iteration: 526 (211 solution, 314 counterexamples)
[08/11 05:03:49]  Generator returned sat in 37.090421 secs.
[08/11 05:03:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:03:51]  Verifer returned unsat in 0.536516 secs.
[08/11 05:03:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:03:51]  --------------------------------------------------------------------------------
[08/11 05:03:51]  Iteration: 527 (212 solution, 314 counterexamples)
[08/11 05:04:39]  Generator returned sat in 35.982024 secs.
[08/11 05:04:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:04:41]  Verifer returned unsat in 0.549992 secs.
[08/11 05:04:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:04:41]  --------------------------------------------------------------------------------
[08/11 05:04:41]  Iteration: 528 (213 solution, 314 counterexamples)
[08/11 05:05:28]  Generator returned sat in 36.171901 secs.
[08/11 05:05:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:05:30]  Verifer returned unsat in 0.610168 secs.
[08/11 05:05:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:05:30]  --------------------------------------------------------------------------------
[08/11 05:05:30]  Iteration: 529 (214 solution, 314 counterexamples)
[08/11 05:06:16]  Generator returned sat in 34.846150 secs.
[08/11 05:06:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:06:18]  Verifer returned unsat in 0.486919 secs.
[08/11 05:06:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:06:18]  --------------------------------------------------------------------------------
[08/11 05:06:18]  Iteration: 530 (215 solution, 314 counterexamples)
[08/11 05:08:00]  Generator returned sat in 90.216085 secs.
[08/11 05:08:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:08:02]  Verifer returned unsat in 1.532209 secs.
[08/11 05:08:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:08:03]  --------------------------------------------------------------------------------
[08/11 05:08:03]  Iteration: 531 (216 solution, 314 counterexamples)
[08/11 05:08:54]  Generator returned sat in 39.695149 secs.
[08/11 05:08:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:08:56]  Verifer returned unsat in 1.240056 secs.
[08/11 05:08:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:08:56]  --------------------------------------------------------------------------------
[08/11 05:08:56]  Iteration: 532 (217 solution, 314 counterexamples)
[08/11 05:09:45]  Generator returned sat in 37.403485 secs.
[08/11 05:09:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:09:48]  Verifer returned unsat in 1.653978 secs.
[08/11 05:09:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:09:48]  --------------------------------------------------------------------------------
[08/11 05:09:48]  Iteration: 533 (218 solution, 314 counterexamples)
[08/11 05:10:46]  Generator returned sat in 46.714914 secs.
[08/11 05:10:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:10:49]  Verifer returned unsat in 1.551248 secs.
[08/11 05:10:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:10:49]  --------------------------------------------------------------------------------
[08/11 05:10:49]  Iteration: 534 (219 solution, 314 counterexamples)
[08/11 05:11:40]  Generator returned sat in 39.705934 secs.
[08/11 05:11:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:11:43]  Verifer returned unsat in 1.089655 secs.
[08/11 05:11:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:11:43]  --------------------------------------------------------------------------------
[08/11 05:11:43]  Iteration: 535 (220 solution, 314 counterexamples)
[08/11 05:21:07]  Generator returned sat in 552.854674 secs.
[08/11 05:21:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:21:14]  Improved gap from 1/74 to 1.5625
[08/11 05:21:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 05:21:15]  Verifer returned sat in 6.763606 secs.
[08/11 05:21:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -7547.115967   -7975.924805 -82400.268066 -7547.115967    0.004883 -7975.924805  300.020264  128.788574       99.999512     2.0     -7975.924805            -1             -1     -1
1   -7547.115967   -7848.698242 -82400.268066 -7547.115967    0.005127 -7848.698242  300.020264    1.562012       -0.000488     2.0     -7975.924805         False           True   True
2   -7445.553223   -7747.135742 -82400.268066 -7445.553223  103.124756 -7747.135742  300.024902    1.557617        1.557617     1.0     -7975.924805          True           True  False
3   -7445.553223   -7747.084229 -82301.882324 -7445.553223    0.005127 -7747.084229  300.024902    1.506104       -0.056641     2.0     -7745.578125         False          False   True
4   -7331.636475   -7701.180420 -82301.882324 -7331.636475  115.422852 -7701.180420  312.327393   57.216553        1.557617     1.0     -7745.578125         False           True  False
5   -7331.636475   -7645.521484 -82203.444824 -7331.636475   57.211426 -7645.521484  312.327393    1.557617       -0.004883     2.0     -7745.578125         False          False   True
6   -7252.781250   -7643.958984 -82182.295166 -7252.781250   80.412842 -7643.958984  312.327393   78.850342        0.000000     1.0     -7565.108643          True           True  False
7   -7238.862549   -7565.103760 -82096.218262 -7238.862549   92.769043 -7565.103760  312.327393   13.913818       -0.004395     1.0     -7565.108643         False          False  False
8   -7137.353516   -7551.185059 -82096.218262 -7137.353516  115.422852 -7551.185059  312.327393  101.504150        1.504639     1.0     -7565.108643         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1595/1024.[0m
[08/11 05:21:15]  --------------------------------------------------------------------------------
[08/11 05:21:15]  Iteration: 536 (220 solution, 315 counterexamples)
[08/11 05:25:57]  Generator returned sat in 271.491924 secs.
[08/11 05:25:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:26:04]  Improved gap from 1/164 to 0
[08/11 05:26:05]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/11 05:26:05]  Verifer returned sat in 6.493084 secs.
[08/11 05:26:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -7265.767090   -7378.427734 -82981.719238 -7265.767090  112.770508 -7378.427734   0.000000  112.660645       99.917480     1.0     -7378.427734            -1             -1   False
1   -7265.684814   -7265.739746 -82981.719238 -7265.684814  112.742920 -7265.739746   0.000000    0.054932       -0.000244     1.0     -7265.684814         False          False   False
2   -7265.629639   -7265.657227 -82881.774170 -7265.629639    0.110107 -7265.657227   0.000000    0.027588        0.000000     1.0     -7265.629639         False          False   False
3   -7265.574463   -7265.602051 -82781.829346 -7265.574463    0.082764 -7265.602051   0.000000    0.027588        0.000000     1.0     -7265.574463         False          False   False
4   -7152.776367   -7220.322266 -82781.829346 -7152.776367  112.825684 -7220.322266  12.743164   54.802734        0.054932     1.0     -7265.574463         False          False   False
5   -7149.166260   -7165.491943 -82685.494629 -7149.166260   58.412842 -7165.491943  12.743164    3.582520       -0.000244     1.0     -7265.574463         False          False    True
6   -7073.459717   -7161.881836 -82661.200928 -7073.459717   79.289062 -7161.881836  12.743164   75.678955        0.000000     1.0     -7265.574463         False          False    True
7   -7057.634033   -7086.175537 -82577.054199 -7057.634033   91.504639 -7086.175537  12.743164   15.798340       -0.027588     1.0     -7265.574463         False          False    True
8   -6960.606689   -7070.349609 -82577.053955 -6960.606689  112.825684 -7070.349609  12.743164   96.999756       -3.000000     1.0     -7265.574463         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=225/4096.[0m
[08/11 05:26:05]  --------------------------------------------------------------------------------
[08/11 05:26:05]  Iteration: 537 (220 solution, 316 counterexamples)
[08/11 05:32:36]  Generator returned sat in 380.368015 secs.
[08/11 05:32:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:32:42]  Improved gap from 0 to 23.4375
[08/11 05:32:44]  Improved number of small numbers from 69 to 80 out of a max of 114
[08/11 05:32:44]  Verifer returned sat in 6.222371 secs.
[08/11 05:32:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   51703.586182   51703.485954 -82808.520837  51703.586182    0.100098  51703.485954     0.1000    0.000228        0.000228     1.0     51703.485954            -1             -1     -1
1   51803.685954   51703.486084 -82808.520837  51803.685954  100.100000  51703.486084     0.1000  100.099870        0.100000     2.0     51703.485954         False          False   True
2   51803.685954   51803.485954 -82731.958496  51803.685954  100.000000  51803.485954     0.1000    0.100000      -23.337660     2.0     51803.585954          True           True  False
3   51876.744287   51853.206787 -82681.679170  51876.744287   73.158333  51853.206787     0.1000   23.437500        0.000000     1.0     51876.644287         False           True  False
4   52039.606787   51906.131787 -82681.679170  52039.606787  186.300000  51906.131787    62.7625   70.712500        0.200000     1.0     51876.644287         False          False  False
5   52063.044287   51976.944287 -82605.416670  52063.044287   94.150000  51976.944287    62.7625   23.337500       -0.100000     1.0     51876.644287         False          False   True
6   52086.781787   52000.381836 -82529.054170  52086.781787   47.075000  52000.381836    62.7625   23.637451        0.000000     1.0     51876.644287         False          False   True
7   52086.781787   52024.019287 -82461.066650  52086.781787   23.537500  52024.019287    62.7625    0.000000      -32.012480     2.0     51876.644287         False          False   True
8   52216.438037   52056.031982 -82458.710449  52216.438037  129.656250  52056.031982    62.7625   97.643555       -0.000029     1.0     52153.675537          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/11 05:32:45]  --------------------------------------------------------------------------------
[08/11 05:32:45]  Iteration: 538 (220 solution, 317 counterexamples)
[08/11 05:39:03]  Generator returned sat in 367.522840 secs.
[08/11 05:39:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:39:05]  Verifer returned unsat in 0.904232 secs.
[08/11 05:39:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:39:05]  --------------------------------------------------------------------------------
[08/11 05:39:05]  Iteration: 539 (221 solution, 317 counterexamples)
[08/11 05:40:27]  Generator returned sat in 71.659323 secs.
[08/11 05:40:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:40:31]  Verifer returned unsat in 2.908487 secs.
[08/11 05:40:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:40:31]  --------------------------------------------------------------------------------
[08/11 05:40:31]  Iteration: 540 (222 solution, 317 counterexamples)
[08/11 05:41:21]  Generator returned sat in 38.914997 secs.
[08/11 05:41:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:41:24]  Verifer returned unsat in 1.646756 secs.
[08/11 05:41:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:41:24]  --------------------------------------------------------------------------------
[08/11 05:41:24]  Iteration: 541 (223 solution, 317 counterexamples)
[08/11 05:42:56]  Generator returned sat in 81.693289 secs.
[08/11 05:42:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:42:58]  Verifer returned unsat in 1.172379 secs.
[08/11 05:42:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:42:59]  --------------------------------------------------------------------------------
[08/11 05:42:59]  Iteration: 542 (224 solution, 317 counterexamples)
[08/11 05:43:43]  Generator returned sat in 33.513306 secs.
[08/11 05:43:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:43:45]  Verifer returned unsat in 0.921316 secs.
[08/11 05:43:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:43:45]  --------------------------------------------------------------------------------
[08/11 05:43:45]  Iteration: 543 (225 solution, 317 counterexamples)
[08/11 05:44:35]  Generator returned sat in 38.708925 secs.
[08/11 05:44:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:44:38]  Verifer returned unsat in 1.597632 secs.
[08/11 05:44:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:44:38]  --------------------------------------------------------------------------------
[08/11 05:44:38]  Iteration: 544 (226 solution, 317 counterexamples)
[08/11 05:45:21]  Generator returned sat in 32.903145 secs.
[08/11 05:45:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:45:24]  Verifer returned unsat in 2.065451 secs.
[08/11 05:45:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:45:25]  --------------------------------------------------------------------------------
[08/11 05:45:25]  Iteration: 545 (227 solution, 317 counterexamples)
[08/11 05:46:17]  Generator returned sat in 41.203503 secs.
[08/11 05:46:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:46:19]  Verifer returned unsat in 1.374329 secs.
[08/11 05:46:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:46:19]  --------------------------------------------------------------------------------
[08/11 05:46:19]  Iteration: 546 (228 solution, 317 counterexamples)
[08/11 05:47:28]  Generator returned sat in 57.459203 secs.
[08/11 05:47:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:47:32]  Verifer returned unsat in 3.081024 secs.
[08/11 05:47:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:47:32]  --------------------------------------------------------------------------------
[08/11 05:47:32]  Iteration: 547 (229 solution, 317 counterexamples)
[08/11 05:48:27]  Generator returned sat in 43.812776 secs.
[08/11 05:48:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:48:30]  Verifer returned unsat in 1.576930 secs.
[08/11 05:48:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:48:30]  --------------------------------------------------------------------------------
[08/11 05:48:30]  Iteration: 548 (230 solution, 317 counterexamples)
[08/11 05:49:15]  Generator returned sat in 34.025652 secs.
[08/11 05:49:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:49:19]  Verifer returned unsat in 2.761602 secs.
[08/11 05:49:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:49:19]  --------------------------------------------------------------------------------
[08/11 05:49:19]  Iteration: 549 (231 solution, 317 counterexamples)
[08/11 05:50:11]  Generator returned sat in 41.918510 secs.
[08/11 05:50:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:50:16]  Verifer returned unsat in 3.239811 secs.
[08/11 05:50:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:50:16]  --------------------------------------------------------------------------------
[08/11 05:50:16]  Iteration: 550 (232 solution, 317 counterexamples)
[08/11 05:51:26]  Generator returned sat in 59.711045 secs.
[08/11 05:51:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:51:29]  Verifer returned unsat in 1.786867 secs.
[08/11 05:51:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:51:29]  --------------------------------------------------------------------------------
[08/11 05:51:29]  Iteration: 551 (233 solution, 317 counterexamples)
[08/11 05:52:22]  Generator returned sat in 41.816995 secs.
[08/11 05:52:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:52:24]  Verifer returned unsat in 1.377983 secs.
[08/11 05:52:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:52:24]  --------------------------------------------------------------------------------
[08/11 05:52:24]  Iteration: 552 (234 solution, 317 counterexamples)
[08/11 05:53:14]  Generator returned sat in 38.636644 secs.
[08/11 05:53:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:53:17]  Verifer returned unsat in 1.717538 secs.
[08/11 05:53:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:53:17]  --------------------------------------------------------------------------------
[08/11 05:53:17]  Iteration: 553 (235 solution, 317 counterexamples)
[08/11 05:54:01]  Generator returned sat in 34.108499 secs.
[08/11 05:54:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:54:03]  Verifer returned unsat in 0.914377 secs.
[08/11 05:54:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:54:03]  --------------------------------------------------------------------------------
[08/11 05:54:03]  Iteration: 554 (236 solution, 317 counterexamples)
[08/11 06:07:10]  Generator returned sat in 776.297393 secs.
[08/11 06:07:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:07:13]  Verifer returned unsat in 0.976987 secs.
[08/11 06:07:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:07:13]  --------------------------------------------------------------------------------
[08/11 06:07:13]  Iteration: 555 (237 solution, 317 counterexamples)
[08/11 06:08:06]  Generator returned sat in 42.642140 secs.
[08/11 06:08:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:08:08]  Verifer returned unsat in 1.140423 secs.
[08/11 06:08:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:08:08]  --------------------------------------------------------------------------------
[08/11 06:08:08]  Iteration: 556 (238 solution, 317 counterexamples)
[08/11 06:09:07]  Generator returned sat in 47.909333 secs.
[08/11 06:09:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:09:09]  Verifer returned unsat in 0.691967 secs.
[08/11 06:09:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:09:09]  --------------------------------------------------------------------------------
[08/11 06:09:09]  Iteration: 557 (239 solution, 317 counterexamples)
[08/11 06:10:03]  Generator returned sat in 44.189043 secs.
[08/11 06:10:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:10:06]  Verifer returned unsat in 1.618125 secs.
[08/11 06:10:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:10:06]  --------------------------------------------------------------------------------
[08/11 06:10:06]  Iteration: 558 (240 solution, 317 counterexamples)
[08/11 06:11:11]  Generator returned sat in 54.515358 secs.
[08/11 06:11:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:11:15]  Verifer returned unsat in 1.953993 secs.
[08/11 06:11:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:11:15]  --------------------------------------------------------------------------------
[08/11 06:11:15]  Iteration: 559 (241 solution, 317 counterexamples)
[08/11 06:11:59]  Generator returned sat in 34.165695 secs.
[08/11 06:12:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:12:02]  Verifer returned unsat in 1.757310 secs.
[08/11 06:12:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:12:02]  --------------------------------------------------------------------------------
[08/11 06:12:02]  Iteration: 560 (242 solution, 317 counterexamples)
[08/11 06:12:49]  Generator returned sat in 35.861172 secs.
[08/11 06:12:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:12:52]  Verifer returned unsat in 1.613486 secs.
[08/11 06:12:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:12:52]  --------------------------------------------------------------------------------
[08/11 06:12:52]  Iteration: 561 (243 solution, 317 counterexamples)
[08/11 06:13:37]  Generator returned sat in 33.693720 secs.
[08/11 06:13:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:13:39]  Verifer returned unsat in 0.897810 secs.
[08/11 06:13:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:13:39]  --------------------------------------------------------------------------------
[08/11 06:13:39]  Iteration: 562 (244 solution, 317 counterexamples)
[08/11 06:14:36]  Generator returned sat in 46.558258 secs.
[08/11 06:14:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:14:39]  Verifer returned unsat in 1.582838 secs.
[08/11 06:14:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:14:39]  --------------------------------------------------------------------------------
[08/11 06:14:39]  Iteration: 563 (245 solution, 317 counterexamples)
[08/11 06:15:24]  Generator returned sat in 34.558591 secs.
[08/11 06:15:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:15:27]  Verifer returned unsat in 1.365463 secs.
[08/11 06:15:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:15:27]  --------------------------------------------------------------------------------
[08/11 06:15:27]  Iteration: 564 (246 solution, 317 counterexamples)
[08/11 06:16:11]  Generator returned sat in 32.860823 secs.
[08/11 06:16:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:16:14]  Verifer returned unsat in 1.717620 secs.
[08/11 06:16:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:16:14]  --------------------------------------------------------------------------------
[08/11 06:16:14]  Iteration: 565 (247 solution, 317 counterexamples)
[08/11 06:16:59]  Generator returned sat in 34.800947 secs.
[08/11 06:17:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:17:04]  Verifer returned unsat in 3.796339 secs.
[08/11 06:17:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:17:04]  --------------------------------------------------------------------------------
[08/11 06:17:04]  Iteration: 566 (248 solution, 317 counterexamples)
[08/11 06:18:56]  Generator returned sat in 100.957765 secs.
[08/11 06:18:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:18:59]  Verifer returned unsat in 1.743667 secs.
[08/11 06:18:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:18:59]  --------------------------------------------------------------------------------
[08/11 06:18:59]  Iteration: 567 (249 solution, 317 counterexamples)
[08/11 06:19:43]  Generator returned sat in 33.154057 secs.
[08/11 06:19:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:19:46]  Verifer returned unsat in 1.283274 secs.
[08/11 06:19:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:19:46]  --------------------------------------------------------------------------------
[08/11 06:19:46]  Iteration: 568 (250 solution, 317 counterexamples)
[08/11 06:20:31]  Generator returned sat in 33.577807 secs.
[08/11 06:20:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:20:33]  Verifer returned unsat in 0.713143 secs.
[08/11 06:20:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:20:33]  --------------------------------------------------------------------------------
[08/11 06:20:33]  Iteration: 569 (251 solution, 317 counterexamples)
[08/11 06:21:18]  Generator returned sat in 34.565921 secs.
[08/11 06:21:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:21:21]  Verifer returned unsat in 2.033195 secs.
[08/11 06:21:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:21:21]  --------------------------------------------------------------------------------
[08/11 06:21:21]  Iteration: 570 (252 solution, 317 counterexamples)
[08/11 06:22:35]  Generator returned sat in 62.922660 secs.
[08/11 06:22:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:22:39]  Verifer returned unsat in 2.568397 secs.
[08/11 06:22:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:22:39]  --------------------------------------------------------------------------------
[08/11 06:22:39]  Iteration: 571 (253 solution, 317 counterexamples)
[08/11 06:23:35]  Generator returned sat in 45.731855 secs.
[08/11 06:23:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:23:39]  Verifer returned unsat in 2.365252 secs.
[08/11 06:23:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:23:39]  --------------------------------------------------------------------------------
[08/11 06:23:39]  Iteration: 572 (254 solution, 317 counterexamples)
[08/11 06:24:27]  Generator returned sat in 38.011752 secs.
[08/11 06:24:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:24:30]  Verifer returned unsat in 1.287183 secs.
[08/11 06:24:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:24:30]  --------------------------------------------------------------------------------
[08/11 06:24:30]  Iteration: 573 (255 solution, 317 counterexamples)
[08/11 06:25:16]  Generator returned sat in 35.200715 secs.
[08/11 06:25:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:25:18]  Verifer returned unsat in 0.655436 secs.
[08/11 06:25:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:25:18]  --------------------------------------------------------------------------------
[08/11 06:25:18]  Iteration: 574 (256 solution, 317 counterexamples)
[08/11 06:26:05]  Generator returned sat in 36.149765 secs.
[08/11 06:26:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:26:07]  Verifer returned unsat in 0.703546 secs.
[08/11 06:26:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:26:07]  --------------------------------------------------------------------------------
[08/11 06:26:07]  Iteration: 575 (257 solution, 317 counterexamples)
[08/11 06:26:53]  Generator returned sat in 35.495755 secs.
[08/11 06:26:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:26:55]  Verifer returned unsat in 0.731091 secs.
[08/11 06:26:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:26:55]  --------------------------------------------------------------------------------
[08/11 06:26:55]  Iteration: 576 (258 solution, 317 counterexamples)
[08/11 06:30:52]  Generator returned sat in 225.872910 secs.
[08/11 06:30:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:30:54]  Verifer returned unsat in 1.569950 secs.
[08/11 06:30:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:30:55]  --------------------------------------------------------------------------------
[08/11 06:30:55]  Iteration: 577 (259 solution, 317 counterexamples)
[08/11 06:31:52]  Generator returned sat in 46.807583 secs.
[08/11 06:31:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:31:55]  Improved number of small numbers from 58 to 62 out of a max of 113
[08/11 06:31:55]  Verifer returned sat in 2.134237 secs.
[08/11 06:31:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   74813.014648   74704.364704 -75625.52167  74813.014648     0.050049  74704.364704        0.0   108.649945        8.649945     3.0     74704.364704            -1             -1    True
1   75004.364704   74813.064704 -75625.52167  75004.364704   300.000000  74813.064704        0.0   191.300000      100.000000     1.0     74704.364704         False          False    True
2   75004.364704   75004.364704 -75625.52167  75004.364704     0.050000  75004.364704        0.0     0.000000        0.000000     2.0     75004.364704         False          False    True
3   76552.414704   75004.364704 -75625.52167  76552.414704  1548.050000  75004.364704        0.0  1548.050000     1448.050000     2.0     75004.364704         False          False    True
4   76704.414704   75104.364704 -75625.52167  76704.414704  1700.050000  75104.364704        0.0  1600.050000     1500.050000     2.0     75004.364704         False          False    True
5   76952.064704   75281.364704 -75625.52167  76952.064704  1847.700000  75281.364704        0.0  1670.700000     1647.700000     3.0     75004.364704         False          False    True
6   77269.564704   75404.364704 -75625.52167  77269.564704  1988.200000  75404.364704        0.0  1865.200000     1865.200000     4.0     75004.364704         False          False    True
7   77269.564704   75504.364704 -75625.52167  77269.564704  1796.100000  75504.364704        0.0  1765.200000     1765.200000     5.0     77269.564704          True           True   False
8   77269.564704   75604.364502 -75625.52167  77269.564704  1700.050000  75604.364502        0.0  1665.200202     1665.200000     6.0     77269.564704         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=7461/4.[0m
[08/11 06:31:56]  --------------------------------------------------------------------------------
[08/11 06:31:56]  Iteration: 578 (259 solution, 318 counterexamples)
[08/11 06:38:11]  Generator returned sat in 364.767217 secs.
[08/11 06:38:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:38:14]  Verifer returned unsat in 1.074834 secs.
[08/11 06:38:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:38:14]  --------------------------------------------------------------------------------
[08/11 06:38:14]  Iteration: 579 (260 solution, 318 counterexamples)
[08/11 06:39:22]  Generator returned sat in 57.218411 secs.
[08/11 06:39:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:39:24]  Verifer returned unsat in 1.448776 secs.
[08/11 06:39:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:39:24]  --------------------------------------------------------------------------------
[08/11 06:39:24]  Iteration: 580 (261 solution, 318 counterexamples)
[08/11 06:40:20]  Generator returned sat in 45.291500 secs.
[08/11 06:40:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:40:25]  Verifer returned unsat in 3.998050 secs.
[08/11 06:40:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:40:26]  --------------------------------------------------------------------------------
[08/11 06:40:26]  Iteration: 581 (262 solution, 318 counterexamples)
[08/11 06:41:14]  Generator returned sat in 37.518607 secs.
[08/11 06:41:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:41:20]  Verifer returned unsat in 5.371703 secs.
[08/11 06:41:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:41:20]  --------------------------------------------------------------------------------
[08/11 06:41:20]  Iteration: 582 (263 solution, 318 counterexamples)
[08/11 06:42:07]  Generator returned sat in 35.576876 secs.
[08/11 06:42:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:42:10]  Verifer returned unsat in 1.570154 secs.
[08/11 06:42:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:42:10]  --------------------------------------------------------------------------------
[08/11 06:42:10]  Iteration: 583 (264 solution, 318 counterexamples)
[08/11 06:43:03]  Generator returned sat in 42.845380 secs.
[08/11 06:43:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:43:06]  Verifer returned unsat in 1.349439 secs.
[08/11 06:43:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:43:06]  --------------------------------------------------------------------------------
[08/11 06:43:06]  Iteration: 584 (265 solution, 318 counterexamples)
[08/11 06:43:51]  Generator returned sat in 34.673180 secs.
[08/11 06:43:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:43:55]  Verifer returned unsat in 1.974089 secs.
[08/11 06:43:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:43:55]  --------------------------------------------------------------------------------
[08/11 06:43:55]  Iteration: 585 (266 solution, 318 counterexamples)
[08/11 06:52:03]  Generator returned sat in 477.934047 secs.
[08/11 06:52:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:52:08]  Improved gap from 0 to 23.4375
[08/11 06:52:09]  Improved number of small numbers from 59 to 75 out of a max of 114
[08/11 06:52:09]  Verifer returned sat in 4.323361 secs.
[08/11 06:52:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   67054.184326   66971.784287 -76013.763916  67054.184326    0.050049  66971.784287       0.00   82.400039       82.399936     2.0     66971.784287            -1             -1   False
1   67054.184326   67054.184326 -76013.763916  67054.184326    0.050049  67054.184326       0.00    0.000000      -17.600064     2.0     66971.784287         False          False   False
2   67118.646729   67082.721787 -75960.626313  67118.646729   64.462402  67082.721787       0.00   35.924941       -0.000059     1.0     66971.784287         False          False   False
3   67147.184287   67118.646787 -75889.163813  67147.184287   64.462500  67118.646787       0.00   28.537500        0.000000     1.0     66971.784287         False          False   False
4   67370.671787   67244.109287 -75889.163813  67370.671787  252.025000  67244.109287       0.05  126.512500      123.437500     1.0     66971.784287         False          False   False
5   67370.671787   67247.184326 -75889.163813  67370.671787  126.512500  67247.184326       0.05  123.437461       23.437500     2.0     66971.784287         False          False    True
6   67370.671787   67347.184287 -75812.601313  67370.671787    0.500000  67347.184287       0.05   23.437500        0.000000     3.0     66971.784287         False          False    True
7   67370.671787   67370.621787 -75736.038818  67370.671787    0.500000  67370.621787       0.05    0.000000      -23.437506     4.0     66971.784287         False          False    True
8   67560.190537   67394.059326 -75736.038818  67560.190537  189.518750  67394.059326       0.05  166.081211       66.081244     1.0     67560.140537          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/11 06:52:10]  --------------------------------------------------------------------------------
[08/11 06:52:10]  Iteration: 586 (266 solution, 319 counterexamples)
[08/11 06:58:14]  Generator returned sat in 353.548985 secs.
[08/11 06:58:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:58:17]  Improved gap from 0 to 23.4375
[08/11 06:58:19]  Improved number of small numbers from 68 to 78 out of a max of 114
[08/11 06:58:19]  Verifer returned sat in 3.508935 secs.
[08/11 06:58:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   66546.634277   66546.534287 -75889.163818  66546.634277    0.1000  66546.534287        0.0    0.099990         0.09999     1.0     66546.534287            -1             -1    True
1   67069.971787   66546.534287 -75889.163818  67069.971787  523.4375  66546.534287        0.0  523.437500       423.43750     1.0     66546.534287         False          False    True
2   67069.971787   66646.534424 -75889.163818  67069.971787  523.4375  66646.534424        0.0  423.437363       323.43750     2.0     66546.534287         False          False    True
3   67069.971787   66746.534424 -75889.163818  67069.971787  262.2000  66746.534424        0.0  323.437363       223.43750     3.0     67069.971787         False          False    True
4   67069.971787   66946.534287 -75889.163818  67069.971787  131.6000  66946.534287        0.0  123.437500       123.43750     4.0     67069.971787         False          False    True
5   67069.971787   66946.634521 -75889.163818  67069.971787   66.3000  66946.634521        0.0  123.337266        23.43750     5.0     67069.971787         False          False    True
6   67069.971787   67046.534287 -75812.601318  67069.971787   33.6500  67046.534287        0.0   23.437500         0.00000     6.0     67069.971787         False          False    True
7   67069.971787   67069.971787 -75736.038818  67069.971787   17.3250  67069.971787        0.0    0.000000       -23.43750     7.0     67069.971787         False          False    True
8   67201.571787   67093.409424 -75736.038818  67201.571787  131.6000  67093.409424        0.0  108.162363         8.16250     1.0     67069.971787         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=867405/2048.[0m
[08/11 06:58:19]  --------------------------------------------------------------------------------
[08/11 06:58:19]  Iteration: 587 (266 solution, 320 counterexamples)
[08/11 07:10:22]  Generator returned sat in 712.355373 secs.
[08/11 07:10:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:10:33]  Improved gap from 0 to 31.25
[08/11 07:10:35]  Improved number of small numbers from 63 to 74 out of a max of 114
[08/11 07:10:35]  Verifer returned sat in 11.111965 secs.
[08/11 07:10:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   65505.532959   65505.333035 -75957.713867  65505.532959    0.099854  65505.333035    0.100000    0.099924        0.099875     4.0     65505.333035            -1             -1     -1
1   65505.733035   65505.533035 -75889.163818  65505.733035    0.300000  65505.533035    0.100000    0.100000      -31.150000     1.0     65505.333035         False           True   True
2   65770.510813   65536.783035 -75889.163818  65770.510813  264.877778  65536.783035  101.938889  131.788889       31.788889     1.0     65505.333035         False          False   True
3   65903.499702   65736.783035 -75889.163818  65903.499702  264.777778  65736.783035  134.927778   31.788889       31.788889     1.0     65768.571924         False          False   True
4   66003.599702   65803.027479 -75889.163818  66003.599702  131.888889  65803.027479  135.027778   65.544444       31.788889     1.0     65768.571924         False          False   True
5   66003.599702   65836.783203 -75820.952707  66003.599702   65.444444  65836.783203  135.027778   31.788721        0.000000     2.0     65768.571924         False          False   True
6   66004.533203   65868.571924 -75752.202707  66004.533203   32.722222  65868.571924  135.027778    0.933502      -30.316498     3.0     65768.571924         False          False   True
7   66087.855257   65899.821924 -75705.208496  66087.855257   84.255556  65899.821924  135.027778   53.005556       -0.000233     1.0     65952.827479          True           True  False
8   66127.374702   65952.927490 -75705.208496  66127.374702   92.525000  65952.927490  135.027778   39.419434      -60.480789     1.0     65952.827479         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2861/90.[0m
[08/11 07:10:35]  --------------------------------------------------------------------------------
[08/11 07:10:35]  Iteration: 588 (266 solution, 321 counterexamples)
[08/11 07:15:09]  Generator returned sat in 262.941884 secs.
[08/11 07:15:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:15:12]  Improved number of small numbers from 67 to 73 out of a max of 113
[08/11 07:15:12]  Verifer returned sat in 2.123492 secs.
[08/11 07:15:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   65436.783203   65436.366368 -75889.163818  65436.783203     0.024902  65436.366368   0.025000     0.391835       -0.024832     1.0     65436.366368            -1             -1     -1
1   65536.808035   65436.783035 -75889.163818  65536.808035   100.416667  65436.783035   0.025000   100.000000        0.000000     1.0     65436.366368         False          False   True
2   65537.199702   65537.174702 -75889.163818  65537.199702   100.391667  65537.174702   0.025000     0.000000      -99.608333     1.0     65537.174702         False          False   True
3   65636.833035   65636.783035 -75889.163818  65636.833035    99.633333  65636.783035   0.025000     0.025000      -99.975000     1.0     65636.808035         False          False   True
4   65936.783035   65738.808035 -75889.163818  65936.783035   299.975000  65738.808035   0.025000   197.950000       99.975000     1.0     65636.808035         False          False   True
5   66490.295535   65936.783035 -75889.163818  66490.295535   751.462500  65936.783035   0.025000   553.487500      553.487500     1.0     65636.808035         False          False   True
6   67640.037202   66036.758057 -75889.163818  67640.037202  1703.229167  66036.758057   3.229167  1600.049978     1600.025000     2.0     65636.808035         False          False   True
7   67640.037202   66036.783035 -75889.163818  67640.037202   851.114583  66036.783035   3.229167  1600.025000     1500.025000     3.0     67636.808035          True           True   True
8   67640.037202   66236.782959 -75889.163818  67640.037202   299.975000  66236.782959   3.229167  1400.025076     1400.025000     4.0     67636.808035         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=64001/40.[0m
[08/11 07:15:13]  --------------------------------------------------------------------------------
[08/11 07:15:13]  Iteration: 589 (266 solution, 322 counterexamples)
[08/11 07:22:47]  Generator returned sat in 443.311836 secs.
[08/11 07:22:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:22:50]  Improved gap from 0 to 23.4375
[08/11 07:22:50]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/11 07:22:50]  Verifer returned sat in 1.479299 secs.
[08/11 07:22:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   65436.782715   65299.601807 -75965.626221  65436.782715    0.100000  65299.601807    0.099854  137.081055       99.899902     5.0     65299.601807            -1             -1     -1
1   65436.882812   65413.345459 -75965.626221  65436.882812  137.181152  65413.345459    0.099854   23.437500        0.000000     5.0     65299.601807         False           True   True
2   65437.083008   65436.883057 -75889.163818  65437.083008   23.637695  65436.883057    0.099854    0.100098      -23.337402     1.0     65436.983154          True           True  False
3   66080.857910   65460.320557 -75889.163818  66080.857910  643.875000  65460.320557  395.199951  225.337402      125.337402     1.0     65436.983154         False          False  False
4   66178.958008   65660.320557 -75889.163818  66178.958008  323.437500  65660.320557  395.199951  123.437500      123.437500     2.0     65436.983154         False          False   True
5   66178.958008   65760.220459 -75889.163818  66178.958008    0.500000  65760.220459  395.199951   23.537598       23.437500     2.0     65436.983154         False          False   True
6   66178.958008   65760.320557 -75812.601318  66178.958008    0.500000  65760.320557  395.199951   23.437500        0.000000     3.0     65436.983154         False          False   True
7   66178.958008   65783.758057 -75736.038818  66178.958008    0.500000  65783.758057  395.199951    0.000000      -23.437500     4.0     65436.983154         False          False   True
8   66427.833008   65810.220215 -75736.038818  66427.833008  248.875000  65810.220215  395.300049  222.312744      125.337402     1.0     66032.532959          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=256691/2048.[0m
[08/11 07:22:51]  --------------------------------------------------------------------------------
[08/11 07:22:51]  Iteration: 590 (266 solution, 323 counterexamples)
[08/11 07:30:43]  Generator returned sat in 461.085459 secs.
[08/11 07:30:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:30:45]  Verifer returned unsat in 0.986516 secs.
[08/11 07:30:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:30:45]  --------------------------------------------------------------------------------
[08/11 07:30:45]  Iteration: 591 (267 solution, 323 counterexamples)
[08/11 07:32:28]  Generator returned sat in 92.759670 secs.
[08/11 07:32:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:32:33]  Verifer returned unsat in 3.134090 secs.
[08/11 07:32:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:32:33]  --------------------------------------------------------------------------------
[08/11 07:32:33]  Iteration: 592 (268 solution, 323 counterexamples)
[08/11 07:34:48]  Generator returned sat in 123.985993 secs.
[08/11 07:34:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:34:58]  Improved gap from 1/272 to 0
[08/11 07:34:58]  Improved number of small numbers from 36 to 114 out of a max of 114
[08/11 07:34:58]  Verifer returned sat in 8.994137 secs.
[08/11 07:34:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   66256.602295   66126.496094 -75989.667236  66256.602295    0.006592  66126.496094    0.099609  130.006592      102.760010     1.0     66126.496094            -1             -1     -1
1   66351.710449   66153.742676 -75989.667236  66351.710449  225.114746  66153.742676   95.207764  102.760010        2.760010     2.0     66126.496094         False          False   True
2   66448.957031   66353.742432 -75989.667236  66448.957031  200.006592  66353.742432   95.207764    0.006836        0.006592     1.0     66353.749268          True           True   True
3   66448.963623   66353.749268 -75889.680420  66448.963623    0.013428  66353.749268   95.207764    0.006592        0.000000     2.0     66353.755859         False          False   True
4   66564.090332   66399.442627 -75889.680420  66564.090332  115.133301  66399.442627  107.574463   57.073242        2.760010     1.0     66353.755859         False           True  False
5   66564.090332   66453.755859 -75792.440674  66564.090332   57.066650  66453.755859  107.574463    2.760010       -0.000244     2.0     66353.755859         False          False   True
6   66641.370361   66456.522705 -75769.720703  66641.370361   80.040039  66456.522705  107.574463   77.273193       -0.000244     1.0     66533.795898          True           True  False
7   66657.003906   66533.802490 -75685.360596  66657.003906   92.906738  66533.802490  107.574463   15.626953       -0.006592     1.0     66533.795898         False          False  False
8   66756.510254   66549.436035 -75685.360352  66756.510254  115.133301  66549.436035  107.574463   99.499756       -0.500000     1.0     66533.795898         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=11305/4096.[0m
[08/11 07:34:59]  --------------------------------------------------------------------------------
[08/11 07:34:59]  Iteration: 593 (268 solution, 324 counterexamples)
[08/11 07:44:10]  Generator returned sat in 540.174400 secs.
[08/11 07:44:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:44:14]  Improved gap from 0 to 23.4375
[08/11 07:44:15]  Improved number of small numbers from 60 to 74 out of a max of 114
[08/11 07:44:15]  Verifer returned sat in 3.279070 secs.
[08/11 07:44:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   62952.575928   62752.476426 -72588.400986  62952.575928    0.049561  62752.476426   0.099609  199.999893      199.999893     8.0     62752.476426            -1             -1     -1
1   63276.013535   62852.476318 -72588.400986  63276.013535  523.437500  62852.476318   0.099609  423.437607      423.437500     4.0     62752.476426         False           True   True
2   63276.013535   62852.476562 -72588.400986  63276.013535  423.437256  62852.476562   0.099609  423.437363      323.437500     3.0     63275.913926         False          False   True
3   63276.013535   62952.476562 -72588.400986  63276.013535  263.200000  62952.476562   0.099609  323.437363      223.437500     3.0     63275.913926         False          False   True
4   63276.013535   63152.476426 -72588.400986  63276.013535  132.600000  63152.476426   0.099609  123.437500      123.437500     4.0     63275.913926         False          False   True
5   63276.013535   63241.214111 -72588.400986  63276.013535   67.300000  63241.214111   0.099609   34.699814       23.437500     5.0     63275.913926         False          False   True
6   63276.013535   63252.476426 -72511.838486  63276.013535   34.650000  63252.476426   0.099609   23.437500        0.000000     6.0     63275.913926         False          False   True
7   63276.013535   63275.913926 -72435.276123  63276.013535   18.325000  63275.913926   0.099609    0.000000      -23.437637     7.0     63275.913926         False          False   True
8   63408.613535   63299.351562 -72435.276123  63408.613535  132.600000  63299.351562   0.099609  109.162363        9.162363     1.0     63275.913926         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1734603/4096.[0m
[08/11 07:44:15]  --------------------------------------------------------------------------------
[08/11 07:44:15]  Iteration: 594 (268 solution, 325 counterexamples)
[08/11 07:45:42]  Generator returned sat in 76.312828 secs.
[08/11 07:45:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:45:49]  Improved gap from 375/16 to 23.4375
[08/11 07:45:50]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/11 07:45:50]  Verifer returned sat in 6.303150 secs.
[08/11 07:45:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   63830.909180   63830.867702 -73717.510596  63830.909180  526.562256  63830.867702   0.020833    0.020645        0.020645     1.0     63830.867702            -1             -1     -1
1   64357.430202   63830.867702 -73717.510596  64357.430202  526.541667  63830.867702   0.020833  526.541667      426.541667     1.0     64357.409368         False          False   True
2   64357.430202   63930.867920 -73717.510596  64357.430202  526.541667  63930.867920   0.020833  426.541449      326.541667     2.0     64357.409368         False          False   True
3   64357.430202   64030.867920 -73717.510596  64357.430202  393.708333  64030.867920   0.020833  326.541449      226.541667     3.0     64357.409368         False          False   True
4   64357.430202   64230.867702 -73717.510596  64357.430202  197.854167  64230.867702   0.020833  126.541667      126.541667     4.0     64357.409368         False          False   True
5   64357.430202   64306.425049 -73717.510596  64357.430202   99.927083  64306.425049   0.020833   50.984320       26.541667     5.0     64357.409368         False          False   True
6   64357.430202   64330.867920 -73644.052262  64357.430202   50.963542  64330.867920   0.020833   26.541449        0.000000     6.0     64357.409368         False          False   True
7   64357.430202   64357.409368 -73567.489762  64357.430202   26.481771  64357.409368   0.020833    0.000000      -23.437500     7.0     64357.409368         False          False   True
8   64497.712754   64380.846924 -73567.489762  64497.712754  140.282552  64380.846924   0.020833  116.844997       16.845052     1.0     64357.409368         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1747199/4096.[0m
[08/11 07:45:51]  --------------------------------------------------------------------------------
[08/11 07:45:51]  Iteration: 595 (268 solution, 326 counterexamples)
[08/11 07:55:21]  Generator returned sat in 559.307798 secs.
[08/11 07:55:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:55:24]  Improved gap from 1/20 to 23.4375
[08/11 07:55:24]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/11 07:55:24]  Verifer returned sat in 1.983985 secs.
[08/11 07:55:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   63944.682129   63944.681885 -73831.324951  63944.682129    0.100000  63944.681885    0.000000    0.000244        0.000000     9.0     63944.681885            -1             -1     -1
1   63968.419189   63944.981934 -73755.062256  63968.419189   23.737305  63944.981934    0.000000   23.437256       -0.000244     1.0     63944.681885         False           True  False
2   63968.619385   63968.519287 -73755.062256  63968.619385   23.637451  63968.519287    0.000000    0.100098      -99.800049     1.0     63968.619385         False          False  False
3   64450.269287   64168.419189 -73755.062256  64450.269287  481.750000  64168.419189  220.331299   61.518799       61.518555     1.0     63968.619385         False          False  False
4   64631.625488   64268.419434 -73755.062256  64631.625488  242.875000  64268.419434  301.687500   61.518555       61.518555     1.0     63968.619385         False          False   True
5   64693.544434   64330.038086 -73755.062256  64693.544434  123.437500  64330.038086  301.687500   61.818848       23.437500     1.0     63968.619385         False          False   True
6   64693.544434   64368.419434 -73678.499756  64693.544434   61.718750  64368.419434  301.687500   23.437500        0.000000     2.0     63968.619385         False          False   True
7   64700.966309   64391.856934 -73603.437256  64700.966309   30.859375  64391.856934  301.687500    7.421875      -17.515625     3.0     63968.619385         False          False   True
8   64818.481934   64416.794434 -73603.437256  64818.481934  124.937500  64416.794434  301.687500  100.000000        0.000000     1.0     64516.794434          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=62995/1024.[0m
[08/11 07:55:25]  --------------------------------------------------------------------------------
[08/11 07:55:25]  Iteration: 596 (268 solution, 327 counterexamples)
[08/11 08:09:08]  Generator returned sat in 812.536025 secs.
[08/11 08:09:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:09:13]  Improved gap from 0 to 100
[08/11 08:09:13]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/11 08:09:13]  Verifer returned sat in 3.463045 secs.
[08/11 08:09:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   61069.746826   60870.396484 -73755.062256  61069.746826     0.050049  60870.396484   0.000000   199.350342       99.950195     2.0     60870.396484            -1             -1    True
1   61069.746826   60969.796631 -73755.062256  61069.746826   199.300049  60969.796631   0.000000    99.950195       -0.049805     2.0     60870.396484         False          False    True
2   61169.046631   61069.796631 -73755.062256  61169.046631   199.250000  61069.796631   0.000000    99.250000       -0.750000     1.0     61169.046631         False          False    True
3   61169.846680   61169.796631 -73755.062256  61169.846680   100.050049  61169.796631   0.000000     0.050049      -99.949951     1.0     61169.846680         False          False    True
4   61569.746826   61369.796631 -73755.062256  61569.746826   399.950195  61369.796631   0.000000   199.950195      199.950195     1.0     61169.846680         False          False    True
5   62170.246826   61468.796631 -73755.062256  62170.246826   800.450195  61468.796631   0.000000   701.450195      700.450195     2.0     61169.846680         False          False    True
6   62668.746826   61569.796631 -73755.062256  62668.746826  1199.950195  61569.796631   0.000000  1098.950195     1098.950195     2.0     61169.846680         False          False    True
7   63170.246826   61570.146729 -73755.062256  63170.246826  1600.450195  61570.146729   0.050049  1600.050049     1500.400146     3.0     61169.846680         False          False    True
8   63170.246826   61669.796875 -73755.062256  63170.246826   799.225098  61669.796875   0.050049  1500.399902     1400.400146     4.0     63170.196777          True           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6145639/4096.[0m
[08/11 08:09:14]  --------------------------------------------------------------------------------
[08/11 08:09:14]  Iteration: 597 (268 solution, 328 counterexamples)
[08/11 08:31:27]  Generator returned sat in 1321.835824 secs.
[08/11 08:31:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:31:29]  Verifer returned unsat in 0.865754 secs.
[08/11 08:31:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:31:29]  --------------------------------------------------------------------------------
[08/11 08:31:29]  Iteration: 598 (269 solution, 328 counterexamples)
[08/11 08:44:48]  Generator returned sat in 787.874057 secs.
[08/11 08:44:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:44:52]  Improved gap from 193/16 to 23.4375
[08/11 08:44:53]  Improved number of small numbers from 60 to 75 out of a max of 114
[08/11 08:44:53]  Verifer returned sat in 4.129215 secs.
[08/11 08:44:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   76377.730957   76377.681152 -89262.946618  76377.730957  226.362305  76377.681152     0.0000    0.049805      -99.950036     2.0     76377.681152            -1             -1   False
1   76603.993652   76477.680993 -89262.946618  76603.993652  226.312500  76477.680993     0.0000  126.312660       26.312660     1.0     76603.993652         False          False   False
2   77250.330993   76604.043493 -89262.946618  77250.330993  772.650000  76604.043493   546.2875  100.000000       26.362500     1.0     76603.993652         False          False   False
3   77922.930993   76704.093493 -89262.946618  77922.930993  772.600000  76704.093493  1118.8875   99.950000       26.362500     1.0     76804.043493         False          False    True
4   78207.780993   76877.680993 -89262.946618  78207.780993  384.800000  76877.680993  1303.7375   26.362500       26.362500     1.0     76804.043493         False          False    True
5   78372.318493   76910.043701 -89262.946618  78372.318493  190.900000  76910.043701  1368.2750   93.999792       26.362500     1.0     76804.043493         False          False    True
6   78372.318493   76980.655993 -89189.359131  78372.318493   93.950000  76980.655993  1368.2750   23.387500       -0.050013     2.0     76804.043493         False          False    True
7   78395.905993   77004.093506 -89112.896618  78395.905993   46.975000  77004.093506  1368.2750   23.537487        0.000000     1.0     76804.043493         False          False    True
8   78395.905993   77027.630993 -89112.896484  78395.905993   23.487500  77027.630993  1368.2750    0.000000      -99.999867     2.0     76804.043493         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=2109/80.[0m
[08/11 08:44:54]  --------------------------------------------------------------------------------
[08/11 08:44:54]  Iteration: 599 (269 solution, 329 counterexamples)
[08/11 08:51:54]  Generator returned sat in 409.063930 secs.
[08/11 08:51:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:51:58]  Verifer returned unsat in 2.736828 secs.
[08/11 08:51:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:51:58]  --------------------------------------------------------------------------------
[08/11 08:51:58]  Iteration: 600 (270 solution, 329 counterexamples)
[08/11 08:55:58]  Generator returned sat in 229.466627 secs.
[08/11 08:56:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:56:01]  Verifer returned unsat in 1.673789 secs.
[08/11 08:56:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:56:01]  --------------------------------------------------------------------------------
[08/11 08:56:01]  Iteration: 601 (271 solution, 329 counterexamples)
[08/11 08:57:09]  Generator returned sat in 56.542098 secs.
[08/11 08:57:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:57:12]  Verifer returned unsat in 1.753277 secs.
[08/11 08:57:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:57:12]  --------------------------------------------------------------------------------
[08/11 08:57:12]  Iteration: 602 (272 solution, 329 counterexamples)
[08/11 08:58:09]  Generator returned sat in 46.128382 secs.
[08/11 08:58:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:58:13]  Verifer returned unsat in 2.548427 secs.
[08/11 08:58:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:58:13]  --------------------------------------------------------------------------------
[08/11 08:58:13]  Iteration: 603 (273 solution, 329 counterexamples)
[08/11 09:00:26]  Generator returned sat in 121.950710 secs.
[08/11 09:00:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:00:29]  Verifer returned unsat in 2.062422 secs.
[08/11 09:00:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:00:29]  --------------------------------------------------------------------------------
[08/11 09:00:29]  Iteration: 604 (274 solution, 329 counterexamples)
[08/11 09:03:12]  Generator returned sat in 151.791599 secs.
[08/11 09:03:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:03:16]  Verifer returned unsat in 1.924135 secs.
[08/11 09:03:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:03:16]  --------------------------------------------------------------------------------
[08/11 09:03:16]  Iteration: 605 (275 solution, 329 counterexamples)
[08/11 09:10:04]  Generator returned sat in 397.315119 secs.
[08/11 09:10:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:10:07]  Improved gap from 0 to 23.4375
[08/11 09:10:07]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 09:10:07]  Verifer returned sat in 1.549327 secs.
[08/11 09:10:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   31559.840576   31284.328369 -89262.946777  31559.840576    0.049805  31284.328369    0.000000  275.512207      275.462402     9.0     31284.328369            -1             -1     -1
1   31707.765625   31284.378174 -89262.946777  31707.765625  423.437256  31284.378174   99.949951  323.437500      223.437500     6.0     31284.328369         False           True  False
2   31807.715576   31384.528320 -89262.946777  31807.715576  423.387451  31384.528320   99.949951  323.237305      223.387451     6.0     31707.765625          True           True   True
3   31983.228271   31559.890869 -89262.946777  31983.228271  498.750000  31559.890869  175.412598  247.924805      223.437500     3.0     31707.765625         False           True  False
4   31983.228271   31684.378174 -89262.946777  31983.228271  247.875000  31684.378174  175.412598  123.437500      123.437500     3.0     31707.765625         False          False   True
5   31983.228271   31707.815430 -89262.946777  31983.228271    0.500000  31707.815430  175.412598  100.000244       23.437500     3.0     31707.765625         False          False   True
6   31983.228271   31784.378174 -89186.384277  31983.228271    0.500000  31784.378174  175.412598   23.437500        0.000000     4.0     31707.765625         False          False   True
7   31983.228271   31807.815674 -89109.821777  31983.228271    0.500000  31807.815674  175.412598    0.000000      -23.437500     5.0     31707.765625         False          False   True
8   32231.103271   31831.253174 -89109.821777  32231.103271  247.875000  31831.253174  175.412598  224.437500      124.437500     1.0     32055.690674          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/11 09:10:08]  --------------------------------------------------------------------------------
[08/11 09:10:08]  Iteration: 606 (275 solution, 330 counterexamples)
[08/11 09:12:29]  Generator returned sat in 129.910777 secs.
[08/11 09:12:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:12:31]  Improved gap from 0 to 23.4375
[08/11 09:12:31]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/11 09:12:31]  Verifer returned sat in 1.366499 secs.
[08/11 09:12:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   31435.178711   31208.716064 -89310.722168  31435.178711    0.049805  31208.716064    0.000000  226.462646      126.462646     2.0     31208.716064            -1             -1    True
1   31435.203613   31408.716064 -89310.722168  31435.203613  226.487549  31408.716064    0.000000   26.487549       26.487549     2.0     31208.716064         False          False    True
2   31709.690918   31508.716064 -89310.722168  31709.690918  300.974854  31508.716064  174.462158   26.512695       26.512695     1.0     31208.716064         False          False    True
3   31984.128418   31586.253662 -89310.722168  31984.128418  300.950195  31586.253662  348.899658   48.975098       26.512695     1.0     31635.228760         False          False    True
4   32084.128418   31708.690918 -89310.722168  32084.128418  148.975098  31708.690918  348.899658   26.537842       26.512695     1.0     31635.228760         False          False    True
5   32084.128418   31708.716064 -89237.234863  32084.128418    0.500000  31708.716064  348.899658   26.512695        0.000000     2.0     31635.228760         False          False    True
6   32084.128418   31735.228760 -89160.672363  32084.128418    0.500000  31735.228760  348.899658    0.000000      -23.437500     3.0     31635.228760         False          False    True
7   32234.103516   31811.666260 -89160.672363  32234.103516  149.975098  31811.666260  348.924561   73.512695       26.512695     1.0     31885.178955          True           True   False
8   32234.103516   31858.666260 -89087.185303  32234.103516   73.487549  31858.666260  348.924561   26.512695       -0.000244     2.0     31885.178955         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=27149/1024.[0m
[08/11 09:12:32]  --------------------------------------------------------------------------------
[08/11 09:12:32]  Iteration: 607 (275 solution, 331 counterexamples)
[08/11 09:18:41]  Generator returned sat in 358.061401 secs.
[08/11 09:18:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:18:45]  Improved gap from 0 to 23.4375
[08/11 09:18:46]  Improved number of small numbers from 105 to 105 out of a max of 114
[08/11 09:18:46]  Verifer returned sat in 3.540713 secs.
[08/11 09:18:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   31632.953516   31477.228516 -89534.959619  31632.953516  156.1250  31477.228516     0.0000  155.7250        100.0000     1.0     31477.228516            -1             -1    True
1   31633.253516   31632.953516 -89534.959619  31633.253516  156.0250  31632.953516     0.1000    0.2000          0.2000     2.0     31633.153516         False          False    True
2   31633.253516   31632.953516 -89458.397119  31633.253516    0.1000  31632.953516     0.1000    0.2000        -23.2375     2.0     31633.153516         False           True    True
3   31679.928516   31656.391016 -89381.834619  31679.928516   46.8750  31656.391016     0.1000   23.4375          0.0000     1.0     31633.153516         False           True   False
4   31860.091016   31779.828516 -89381.834619  31860.091016  203.6000  31779.828516    80.0625    0.2000          0.2000     1.0     31633.153516         False          False   False
5   31960.191016   31854.916016 -89381.834619  31960.191016  100.3000  31854.916016    80.1625   25.1125          0.2000     1.0     31633.153516         False          False    True
6   31983.728516   31880.128516 -89305.572119  31983.728516   48.6500  31880.128516    80.1625   23.4375          0.0000     1.0     31633.153516         False          False    True
7   31983.728516   31903.566016 -89229.009619  31983.728516    0.5000  31903.566016    80.1625    0.0000        -23.4375     2.0     31633.153516         False          False    True
8   32108.716016   31927.003516 -89229.009619  32108.716016  124.9875  31927.003516    81.5125  100.2000          0.2000     1.0     32027.203516          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/11 09:18:46]  --------------------------------------------------------------------------------
[08/11 09:18:46]  Iteration: 608 (275 solution, 332 counterexamples)
[08/11 09:33:39]  Generator returned sat in 880.817420 secs.
[08/11 09:33:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:33:42]  Improved number of small numbers from 59 to 63 out of a max of 113
[08/11 09:33:42]  Verifer returned sat in 1.689795 secs.
[08/11 09:33:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   30758.410645   30658.410869 -88760.416973  30758.410645     0.100098  30658.410869        0.1    99.899775       -0.100225     9.0     30658.410869            -1             -1     -1
1   30758.510869   30758.410869 -88760.416973  30758.510869   100.000000  30758.410869        0.1     0.000000     -100.000000     1.0     30658.410869         False           True   True
2   31158.410869   30958.410869 -88760.416973  31158.410869   399.900000  30958.410869        0.1   199.900000      199.900000     1.0     30658.410869         False          False   True
3   31158.410869   30958.410869 -88760.416973  31158.410869    73.700000  30958.410869        0.1   199.900000       99.900000     1.0     31158.310869         False          False   True
4   31257.410869   31158.410869 -88760.416973  31257.410869   298.900000  31158.410869        0.1    98.900000       98.900000     1.0     31158.310869         False          False   True
5   31957.810869   31158.410869 -88760.416973  31957.810869   799.300000  31158.410869        0.1   799.300000      699.300000     1.0     31158.310869         False          False   True
6   32858.610869   31258.410869 -88760.416973  32858.610869  1700.100000  31258.410869        0.1  1600.100000     1500.100000     2.0     31158.310869         False          False   True
7   32858.610869   31458.310869 -88760.416973  32858.610869   300.000000  31458.310869        0.1  1400.200000     1400.100000     3.0     32858.510869          True           True  False
8   32858.610869   31558.410645 -88760.416973  32858.610869   299.900000  31558.410645        0.1  1300.100225     1300.100000     4.0     32858.510869         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6144819/4096.[0m
[08/11 09:33:42]  --------------------------------------------------------------------------------
[08/11 09:33:42]  Iteration: 609 (275 solution, 333 counterexamples)
[08/11 09:45:48]  Generator returned sat in 714.637432 secs.
[08/11 09:45:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:45:50]  Verifer returned unsat in 0.767860 secs.
[08/11 09:45:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:45:50]  --------------------------------------------------------------------------------
[08/11 09:45:50]  Iteration: 610 (276 solution, 333 counterexamples)
[08/11 09:46:45]  Generator returned sat in 43.728260 secs.
[08/11 09:46:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:46:48]  Verifer returned unsat in 1.214319 secs.
[08/11 09:46:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:46:48]  --------------------------------------------------------------------------------
[08/11 09:46:48]  Iteration: 611 (277 solution, 333 counterexamples)
[08/11 09:47:38]  Generator returned sat in 38.931121 secs.
[08/11 09:47:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:47:40]  Verifer returned unsat in 0.941394 secs.
[08/11 09:47:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:47:41]  --------------------------------------------------------------------------------
[08/11 09:47:41]  Iteration: 612 (278 solution, 333 counterexamples)
[08/11 09:48:40]  Generator returned sat in 48.147412 secs.
[08/11 09:48:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:48:43]  Verifer returned unsat in 1.293104 secs.
[08/11 09:48:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:48:43]  --------------------------------------------------------------------------------
[08/11 09:48:43]  Iteration: 613 (279 solution, 333 counterexamples)
[08/11 09:53:10]  Generator returned sat in 255.764600 secs.
[08/11 09:53:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:53:14]  Verifer returned unsat in 3.016997 secs.
[08/11 09:53:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:53:14]  --------------------------------------------------------------------------------
[08/11 09:53:14]  Iteration: 614 (280 solution, 333 counterexamples)
[08/11 09:54:13]  Generator returned sat in 47.721759 secs.
[08/11 09:54:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:54:17]  Verifer returned unsat in 1.842263 secs.
[08/11 09:54:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:54:17]  --------------------------------------------------------------------------------
[08/11 09:54:17]  Iteration: 615 (281 solution, 333 counterexamples)
[08/11 09:55:14]  Generator returned sat in 46.421214 secs.
[08/11 09:55:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:55:18]  Verifer returned unsat in 2.331068 secs.
[08/11 09:55:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:55:18]  --------------------------------------------------------------------------------
[08/11 09:55:18]  Iteration: 616 (282 solution, 333 counterexamples)
[08/11 09:57:11]  Generator returned sat in 101.336448 secs.
[08/11 09:57:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:57:15]  Verifer returned unsat in 2.325370 secs.
[08/11 09:57:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:57:15]  --------------------------------------------------------------------------------
[08/11 09:57:15]  Iteration: 617 (283 solution, 333 counterexamples)
[08/11 09:58:19]  Generator returned sat in 52.818602 secs.
[08/11 09:58:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:58:22]  Verifer returned unsat in 1.827053 secs.
[08/11 09:58:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:58:22]  --------------------------------------------------------------------------------
[08/11 09:58:22]  Iteration: 618 (284 solution, 333 counterexamples)
[08/11 10:13:03]  Generator returned sat in 869.347451 secs.
[08/11 10:13:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:13:06]  Verifer returned unsat in 1.217687 secs.
[08/11 10:13:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:13:06]  --------------------------------------------------------------------------------
[08/11 10:13:06]  Iteration: 619 (285 solution, 333 counterexamples)
[08/11 10:14:58]  Generator returned sat in 101.570112 secs.
[08/11 10:15:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:15:01]  Verifer returned unsat in 0.845873 secs.
[08/11 10:15:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:15:01]  --------------------------------------------------------------------------------
[08/11 10:15:01]  Iteration: 620 (286 solution, 333 counterexamples)
[08/11 10:16:41]  Generator returned sat in 88.924755 secs.
[08/11 10:16:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:16:43]  Verifer returned unsat in 0.795087 secs.
[08/11 10:16:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:16:43]  --------------------------------------------------------------------------------
[08/11 10:16:43]  Iteration: 621 (287 solution, 333 counterexamples)
[08/11 10:18:05]  Generator returned sat in 71.254272 secs.
[08/11 10:18:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:18:08]  Verifer returned unsat in 1.233002 secs.
[08/11 10:18:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:18:08]  --------------------------------------------------------------------------------
[08/11 10:18:08]  Iteration: 622 (288 solution, 333 counterexamples)
[08/11 10:19:02]  Generator returned sat in 43.050130 secs.
[08/11 10:19:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:19:06]  Verifer returned unsat in 2.141459 secs.
[08/11 10:19:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:19:06]  --------------------------------------------------------------------------------
[08/11 10:19:06]  Iteration: 623 (289 solution, 333 counterexamples)
[08/11 10:20:23]  Generator returned sat in 65.823213 secs.
[08/11 10:20:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:20:25]  Verifer returned unsat in 0.692486 secs.
[08/11 10:20:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:20:25]  --------------------------------------------------------------------------------
[08/11 10:20:25]  Iteration: 624 (290 solution, 333 counterexamples)
[08/11 10:21:15]  Generator returned sat in 38.323415 secs.
[08/11 10:21:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:21:17]  Verifer returned unsat in 0.468234 secs.
[08/11 10:21:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:21:17]  --------------------------------------------------------------------------------
[08/11 10:21:17]  Iteration: 625 (291 solution, 333 counterexamples)
[08/11 10:22:06]  Generator returned sat in 38.337468 secs.
[08/11 10:22:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:22:08]  Verifer returned unsat in 0.574593 secs.
[08/11 10:22:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:22:08]  --------------------------------------------------------------------------------
[08/11 10:22:08]  Iteration: 626 (292 solution, 333 counterexamples)
[08/11 10:23:33]  Generator returned sat in 73.351217 secs.
[08/11 10:23:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:23:35]  Verifer returned unsat in 0.422613 secs.
[08/11 10:23:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:23:35]  --------------------------------------------------------------------------------
[08/11 10:23:35]  Iteration: 627 (293 solution, 333 counterexamples)
[08/11 10:24:30]  Generator returned sat in 43.832093 secs.
[08/11 10:24:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:24:32]  Verifer returned unsat in 0.641175 secs.
[08/11 10:24:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:24:32]  --------------------------------------------------------------------------------
[08/11 10:24:32]  Iteration: 628 (294 solution, 333 counterexamples)
[08/11 10:25:29]  Generator returned sat in 46.120032 secs.
[08/11 10:25:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:25:31]  Verifer returned unsat in 0.605295 secs.
[08/11 10:25:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:25:31]  --------------------------------------------------------------------------------
[08/11 10:25:31]  Iteration: 629 (295 solution, 333 counterexamples)
[08/11 10:26:23]  Generator returned sat in 41.042327 secs.
[08/11 10:26:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:26:26]  Verifer returned unsat in 0.724237 secs.
[08/11 10:26:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:26:26]  --------------------------------------------------------------------------------
[08/11 10:26:26]  Iteration: 630 (296 solution, 333 counterexamples)
[08/11 10:27:28]  Generator returned sat in 51.653311 secs.
[08/11 10:27:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:27:31]  Verifer returned unsat in 1.204638 secs.
[08/11 10:27:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:27:31]  --------------------------------------------------------------------------------
[08/11 10:27:31]  Iteration: 631 (297 solution, 333 counterexamples)
[08/11 10:28:24]  Generator returned sat in 41.676791 secs.
[08/11 10:28:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:28:28]  Verifer returned unsat in 2.629089 secs.
[08/11 10:28:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:28:28]  --------------------------------------------------------------------------------
[08/11 10:28:28]  Iteration: 632 (298 solution, 333 counterexamples)
[08/11 10:29:23]  Generator returned sat in 44.045925 secs.
[08/11 10:29:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:29:27]  Verifer returned unsat in 1.962810 secs.
[08/11 10:29:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:29:27]  --------------------------------------------------------------------------------
[08/11 10:29:27]  Iteration: 633 (299 solution, 333 counterexamples)
[08/11 10:30:28]  Generator returned sat in 49.998492 secs.
[08/11 10:30:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:30:31]  Verifer returned unsat in 1.918843 secs.
[08/11 10:30:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:30:31]  --------------------------------------------------------------------------------
[08/11 10:30:31]  Iteration: 634 (300 solution, 333 counterexamples)
[08/11 10:32:01]  Generator returned sat in 78.806903 secs.
[08/11 10:32:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:32:05]  Verifer returned unsat in 1.899174 secs.
[08/11 10:32:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:32:05]  --------------------------------------------------------------------------------
[08/11 10:32:05]  Iteration: 635 (301 solution, 333 counterexamples)
[08/11 10:33:02]  Generator returned sat in 46.067914 secs.
[08/11 10:33:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:33:06]  Verifer returned unsat in 2.117757 secs.
[08/11 10:33:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:33:06]  --------------------------------------------------------------------------------
[08/11 10:33:06]  Iteration: 636 (302 solution, 333 counterexamples)
[08/11 10:34:03]  Generator returned sat in 46.587941 secs.
[08/11 10:34:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:34:07]  Verifer returned unsat in 1.796468 secs.
[08/11 10:34:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:34:07]  --------------------------------------------------------------------------------
[08/11 10:34:07]  Iteration: 637 (303 solution, 333 counterexamples)
[08/11 10:35:02]  Generator returned sat in 43.611999 secs.
[08/11 10:35:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:35:04]  Verifer returned unsat in 1.328299 secs.
[08/11 10:35:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:35:04]  --------------------------------------------------------------------------------
[08/11 10:35:04]  Iteration: 638 (304 solution, 333 counterexamples)
[08/11 10:35:59]  Generator returned sat in 42.906360 secs.
[08/11 10:36:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:36:02]  Verifer returned unsat in 1.888520 secs.
[08/11 10:36:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:36:02]  --------------------------------------------------------------------------------
[08/11 10:36:02]  Iteration: 639 (305 solution, 333 counterexamples)
[08/11 10:36:57]  Generator returned sat in 43.515208 secs.
[08/11 10:36:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:37:00]  Verifer returned unsat in 1.718078 secs.
[08/11 10:37:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:37:00]  --------------------------------------------------------------------------------
[08/11 10:37:00]  Iteration: 640 (306 solution, 333 counterexamples)
[08/11 10:38:04]  Generator returned sat in 52.435418 secs.
[08/11 10:38:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:38:09]  Verifer returned unsat in 3.330261 secs.
[08/11 10:38:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:38:09]  --------------------------------------------------------------------------------
[08/11 10:38:09]  Iteration: 641 (307 solution, 333 counterexamples)
[08/11 10:39:04]  Generator returned sat in 44.201946 secs.
[08/11 10:39:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:39:07]  Verifer returned unsat in 1.620063 secs.
[08/11 10:39:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:39:08]  --------------------------------------------------------------------------------
[08/11 10:39:08]  Iteration: 642 (308 solution, 333 counterexamples)
[08/11 10:40:09]  Generator returned sat in 50.010754 secs.
[08/11 10:40:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:40:12]  Verifer returned unsat in 1.489933 secs.
[08/11 10:40:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:40:12]  --------------------------------------------------------------------------------
[08/11 10:40:12]  Iteration: 643 (309 solution, 333 counterexamples)
[08/11 10:41:10]  Generator returned sat in 47.252346 secs.
[08/11 10:41:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:41:13]  Verifer returned unsat in 0.952409 secs.
[08/11 10:41:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:41:13]  --------------------------------------------------------------------------------
[08/11 10:41:13]  Iteration: 644 (310 solution, 333 counterexamples)
[08/11 10:42:51]  Generator returned sat in 87.474563 secs.
[08/11 10:42:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:42:54]  Verifer returned unsat in 1.547119 secs.
[08/11 10:42:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:42:55]  --------------------------------------------------------------------------------
[08/11 10:42:55]  Iteration: 645 (311 solution, 333 counterexamples)
[08/11 10:44:03]  Generator returned sat in 57.385640 secs.
[08/11 10:44:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:44:06]  Verifer returned unsat in 1.006899 secs.
[08/11 10:44:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:44:06]  --------------------------------------------------------------------------------
[08/11 10:44:06]  Iteration: 646 (312 solution, 333 counterexamples)
[08/11 10:45:55]  Generator returned sat in 97.652752 secs.
[08/11 10:45:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:45:59]  Verifer returned unsat in 3.108399 secs.
[08/11 10:45:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:45:59]  --------------------------------------------------------------------------------
[08/11 10:45:59]  Iteration: 647 (313 solution, 333 counterexamples)
[08/11 10:47:09]  Generator returned sat in 58.476206 secs.
[08/11 10:47:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:47:12]  Verifer returned unsat in 1.439503 secs.
[08/11 10:47:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:47:12]  --------------------------------------------------------------------------------
[08/11 10:47:12]  Iteration: 648 (314 solution, 333 counterexamples)
[08/11 11:01:58]  Generator returned sat in 874.679510 secs.
[08/11 11:01:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:02:03]  Improved gap from 0 to 23.4375
[08/11 11:02:04]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 11:02:04]  Verifer returned sat in 4.368539 secs.
[08/11 11:02:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   41502.356689   41502.156494 -89150.158447  41502.356689  100.300049  41502.156494    0.099854    0.100342        0.000000     5.0     41502.156494            -1             -1     -1
1   41602.456543   41502.256836 -89150.158447  41602.456543  100.200195  41502.256836    0.099854  100.099854        0.099854     3.0     41602.356689         False           True   True
2   41602.656738   41602.456787 -89080.795898  41602.656738  100.300049  41602.456787    0.099854    0.100098      -30.337402     1.0     41602.356689         False           True  False
3   41802.756836   41732.894043 -89080.795898  41802.756836  200.200195  41732.894043   69.662598    0.200195        0.199951     1.0     41602.356689         False          False  False
4   41902.656738   41831.394287 -89080.795898  41902.656738  100.100098  41831.394287   69.662598    1.599854        0.099854     1.0     41602.356689         False          False   True
5   41902.656738   41832.894287 -89004.233398  41902.656738    1.500000  41832.894287   69.662598    0.099854      -23.337646     2.0     41602.356689         False          False   True
6   42135.744385   41863.475342 -89004.233398  42135.744385  233.187500  41863.475342  179.212646   93.056396        0.199951     1.0     41956.531738          True           True  False
7   42159.281738   41956.631592 -88927.970703  42159.281738  116.593750  41956.631592  179.212646   23.437500        0.000000     1.0     41956.531738         False          False   True
8   42159.281738   41980.069092 -88927.970703  42159.281738    1.500000  41980.069092  179.212646    0.000000     -100.000000     2.0     41956.531738         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/11 11:02:04]  --------------------------------------------------------------------------------
[08/11 11:02:04]  Iteration: 649 (314 solution, 334 counterexamples)
[08/11 11:08:41]  Generator returned sat in 385.297480 secs.
[08/11 11:08:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:08:44]  Verifer returned unsat in 1.837931 secs.
[08/11 11:08:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:08:44]  --------------------------------------------------------------------------------
[08/11 11:08:44]  Iteration: 650 (315 solution, 334 counterexamples)
[08/11 11:09:56]  Generator returned sat in 60.587824 secs.
[08/11 11:09:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:10:00]  Verifer returned unsat in 2.349620 secs.
[08/11 11:10:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:10:00]  --------------------------------------------------------------------------------
[08/11 11:10:00]  Iteration: 651 (316 solution, 334 counterexamples)
[08/11 11:18:40]  Generator returned sat in 508.534454 secs.
[08/11 11:18:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:18:46]  Improved gap from 0 to 23.4375
[08/11 11:18:47]  Improved number of small numbers from 50 to 74 out of a max of 114
[08/11 11:18:47]  Verifer returned sat in 6.085905 secs.
[08/11 11:18:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   43746.135254   43745.835205 -89004.233398  43746.135254    0.100098  43745.835205    0.099854    0.200195       -0.099818     2.0     43745.835205            -1             -1     -1
1   43846.135010   43746.135254 -89004.233398  43846.135010  100.199951  43746.135254    0.099854   99.899902       -0.100062     1.0     43745.835205         False          False   True
2   43846.334961   43846.135218 -89004.233398  43846.334961  100.099854  43846.135218    0.099854    0.099889      -99.900111     1.0     43846.235107         False          False   True
3   44347.085072   43946.135218 -89004.233398  44347.085072  500.850000  43946.135218  274.487354  126.462500       26.462500     1.0     43846.235107         False          False   True
4   44473.047572   44146.135218 -89004.233398  44473.047572  252.425000  44146.135218  300.449854   26.462500       26.462500     1.0     43846.235107         False          False   True
5   44574.797572   44172.597656 -89004.233398  44574.797572  128.212500  44172.597656  302.199854  100.000062       26.462500     2.0     43846.235107         False          False   True
6   44574.797572   44246.135254 -88930.695898  44574.797572   66.106250  44246.135254  302.199854   26.462464        0.000000     2.0     43846.235107         False          False   True
7   44574.797572   44272.597718 -88854.133398  44574.797572    2.000000  44272.597718  302.199854    0.000000      -23.437500     3.0     43846.235107         False          False   True
8   44827.222572   44296.035400 -88854.133398  44827.222572  252.425000  44296.035400  404.724854  126.462318       26.462500     1.0     44422.497718          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=2117/80.[0m
[08/11 11:18:48]  --------------------------------------------------------------------------------
[08/11 11:18:48]  Iteration: 652 (316 solution, 335 counterexamples)
[08/11 11:32:02]  Generator returned sat in 782.950151 secs.
[08/11 11:32:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:32:05]  Improved gap from 0 to 23.4375
[08/11 11:32:05]  Improved number of small numbers from 42 to 114 out of a max of 114
[08/11 11:32:05]  Verifer returned sat in 1.595879 secs.
[08/11 11:32:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   43857.078613   43695.260254 -88953.408203  43857.078613  161.718506  43695.260254   0.099854  161.718506      161.668945     8.0     43695.260254            -1             -1     -1
1   43857.078613   43695.310303 -88953.408203  43857.078613  161.693848  43695.310303   0.099854  161.668457       61.668945     8.0     43856.978760         False           True   True
2   43857.078857   43795.310059 -88953.408203  43857.078857  161.668701  43795.310059   0.099854   61.668945      -38.330811     4.0     43856.979004         False           True  False
3   43957.078613   43946.135254 -88927.671143  43957.078613  161.668701  43946.135254   0.099854   10.843506      -12.593994     1.0     43856.979004         False           True  False
4   44197.110107   44069.572754 -88927.671143  44197.110107  250.875000  44069.572754  65.843750   61.693604       61.693604     1.0     43856.979004         False          False  False
5   44258.854004   44131.291260 -88927.671143  44258.854004  123.437500  44131.291260  65.843750   61.718994       23.437500     1.0     43856.979004         False          False   True
6   44258.854004   44169.572754 -88851.108643  44258.854004   61.718750  44169.572754  65.843750   23.437500        0.000000     2.0     43856.979004         False          False   True
7   44266.275879   44193.010254 -88774.546143  44266.275879   30.859375  44193.010254  65.843750    7.421875      -16.015625     3.0     43856.979004         False          False   True
8   44382.291504   44216.447754 -88774.546143  44382.291504  123.437500  44216.447754  65.843750  100.000000        0.000000     1.0     44316.447754          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=252697/4096.[0m
[08/11 11:32:06]  --------------------------------------------------------------------------------
[08/11 11:32:06]  Iteration: 653 (316 solution, 336 counterexamples)
[08/11 11:37:03]  Generator returned sat in 285.507579 secs.
[08/11 11:37:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:37:05]  Improved gap from 0 to 23.4375
[08/11 11:37:05]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/11 11:37:05]  Verifer returned sat in 1.432474 secs.
[08/11 11:37:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   43857.078613   43333.591064 -88591.689453  43857.078613    0.100000  43333.591064   0.050049  523.437500      523.437500     3.0     43333.591064            -1             -1     -1
1   43857.078613   43433.591064 -88591.689453  43857.078613    0.100098  43433.591064   0.050049  423.437500      423.437500     3.0     43333.591064         False          False   True
2   43857.078613   43433.591064 -88591.689453  43857.078613    0.050049  43433.591064   0.050049  423.437500      323.437500     3.0     43857.028564         False          False   True
3   43857.078613   43633.591064 -88591.689453  43857.078613  371.312500  43633.591064   0.050049  223.437500      223.437500     4.0     43857.028564         False          False   True
4   43857.078613   43733.591064 -88591.689453  43857.078613  186.156250  43733.591064   0.050049  123.437500      123.437500     5.0     43857.028564         False          False   True
5   43857.078613   43809.689697 -88591.689453  43857.078613   93.578125  43809.689697   0.050049   47.338867       23.437500     6.0     43857.028564         False          False   True
6   43857.078613   43833.591064 -88515.126953  43857.078613   47.289062  43833.591064   0.050049   23.437500        0.000000     7.0     43857.028564         False          False   True
7   43857.785645   43857.028564 -88438.564453  43857.785645   24.144531  43857.028564   0.050049    0.707031      -22.730469     8.0     43857.028564         False          False   True
8   44043.234863   43880.466309 -88438.564453  44043.234863  186.156250  43880.466309   0.050049  162.718506       62.718750     1.0     43857.028564         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=33879/80.[0m
[08/11 11:37:06]  --------------------------------------------------------------------------------
[08/11 11:37:06]  Iteration: 654 (316 solution, 337 counterexamples)
[08/11 11:48:06]  Generator returned sat in 648.483817 secs.
[08/11 11:48:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:48:10]  Verifer returned unsat in 2.682463 secs.
[08/11 11:48:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:48:10]  --------------------------------------------------------------------------------
[08/11 11:48:10]  Iteration: 655 (317 solution, 337 counterexamples)
[08/11 11:49:13]  Generator returned sat in 51.124353 secs.
[08/11 11:49:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:49:15]  Verifer returned unsat in 0.962869 secs.
[08/11 11:49:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:49:15]  --------------------------------------------------------------------------------
[08/11 11:49:15]  Iteration: 656 (318 solution, 337 counterexamples)
[08/11 11:50:05]  Generator returned sat in 38.389931 secs.
[08/11 11:50:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:50:07]  Verifer returned unsat in 1.319354 secs.
[08/11 11:50:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:50:07]  --------------------------------------------------------------------------------
[08/11 11:50:07]  Iteration: 657 (319 solution, 337 counterexamples)
[08/11 11:50:57]  Generator returned sat in 38.081566 secs.
[08/11 11:50:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:51:00]  Verifer returned unsat in 1.375631 secs.
[08/11 11:51:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:51:00]  --------------------------------------------------------------------------------
[08/11 11:51:00]  Iteration: 658 (320 solution, 337 counterexamples)
[08/11 11:53:05]  Generator returned sat in 114.020127 secs.
[08/11 11:53:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:53:08]  Verifer returned unsat in 1.291037 secs.
[08/11 11:53:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:53:08]  --------------------------------------------------------------------------------
[08/11 11:53:08]  Iteration: 659 (321 solution, 337 counterexamples)
[08/11 11:53:58]  Generator returned sat in 38.742862 secs.
[08/11 11:54:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:54:03]  Verifer returned unsat in 3.437300 secs.
[08/11 11:54:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:54:04]  --------------------------------------------------------------------------------
[08/11 11:54:04]  Iteration: 660 (322 solution, 337 counterexamples)
[08/11 11:54:52]  Generator returned sat in 37.450512 secs.
[08/11 11:54:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:54:56]  Verifer returned unsat in 2.047556 secs.
[08/11 11:54:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:54:56]  --------------------------------------------------------------------------------
[08/11 11:54:56]  Iteration: 661 (323 solution, 337 counterexamples)
[08/11 11:55:56]  Generator returned sat in 48.292402 secs.
[08/11 11:55:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:55:59]  Verifer returned unsat in 1.527605 secs.
[08/11 11:55:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:55:59]  --------------------------------------------------------------------------------
[08/11 11:55:59]  Iteration: 662 (324 solution, 337 counterexamples)
[08/11 11:56:49]  Generator returned sat in 38.291391 secs.
[08/11 11:56:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:56:53]  Verifer returned unsat in 2.847630 secs.
[08/11 11:56:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:56:53]  --------------------------------------------------------------------------------
[08/11 11:56:53]  Iteration: 663 (325 solution, 337 counterexamples)
[08/11 11:57:39]  Generator returned sat in 34.691102 secs.
[08/11 11:57:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:57:43]  Verifer returned unsat in 2.108067 secs.
[08/11 11:57:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:57:43]  --------------------------------------------------------------------------------
[08/11 11:57:43]  Iteration: 664 (326 solution, 337 counterexamples)
[08/11 11:58:39]  Generator returned sat in 45.004703 secs.
[08/11 11:58:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:58:42]  Verifer returned unsat in 1.722418 secs.
[08/11 11:58:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:58:42]  --------------------------------------------------------------------------------
[08/11 11:58:42]  Iteration: 665 (327 solution, 337 counterexamples)
[08/11 11:59:30]  Generator returned sat in 35.766504 secs.
[08/11 11:59:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:59:33]  Verifer returned unsat in 1.566207 secs.
[08/11 11:59:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:59:33]  --------------------------------------------------------------------------------
[08/11 11:59:33]  Iteration: 666 (328 solution, 337 counterexamples)
[08/11 12:00:21]  Generator returned sat in 36.687676 secs.
[08/11 12:00:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:00:23]  Verifer returned unsat in 0.616984 secs.
[08/11 12:00:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:00:23]  --------------------------------------------------------------------------------
[08/11 12:00:23]  Iteration: 667 (329 solution, 337 counterexamples)
[08/11 12:01:09]  Generator returned sat in 34.856191 secs.
[08/11 12:01:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:01:12]  Verifer returned unsat in 0.872976 secs.
[08/11 12:01:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:01:12]  --------------------------------------------------------------------------------
[08/11 12:01:12]  Iteration: 668 (330 solution, 337 counterexamples)
[08/11 12:01:59]  Generator returned sat in 36.206456 secs.
[08/11 12:02:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:02:02]  Verifer returned unsat in 0.933446 secs.
[08/11 12:02:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:02:02]  --------------------------------------------------------------------------------
[08/11 12:02:02]  Iteration: 669 (331 solution, 337 counterexamples)
[08/11 12:02:50]  Generator returned sat in 36.108648 secs.
[08/11 12:02:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:02:53]  Verifer returned unsat in 1.398088 secs.
[08/11 12:02:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:02:53]  --------------------------------------------------------------------------------
[08/11 12:02:53]  Iteration: 670 (332 solution, 337 counterexamples)
[08/11 12:03:50]  Generator returned sat in 45.630049 secs.
[08/11 12:03:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:03:53]  Verifer returned unsat in 1.421263 secs.
[08/11 12:03:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:03:53]  --------------------------------------------------------------------------------
[08/11 12:03:53]  Iteration: 671 (333 solution, 337 counterexamples)
[08/11 12:04:40]  Generator returned sat in 35.463444 secs.
[08/11 12:04:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:04:43]  Verifer returned unsat in 1.733031 secs.
[08/11 12:04:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:04:43]  --------------------------------------------------------------------------------
[08/11 12:04:43]  Iteration: 672 (334 solution, 337 counterexamples)
[08/11 12:05:52]  Generator returned sat in 57.441909 secs.
[08/11 12:05:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:05:56]  Verifer returned unsat in 2.405299 secs.
[08/11 12:05:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:05:56]  --------------------------------------------------------------------------------
[08/11 12:05:56]  Iteration: 673 (335 solution, 337 counterexamples)
[08/11 12:06:43]  Generator returned sat in 36.019402 secs.
[08/11 12:06:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:06:47]  Verifer returned unsat in 2.845196 secs.
[08/11 12:06:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:06:47]  --------------------------------------------------------------------------------
[08/11 12:06:47]  Iteration: 674 (336 solution, 337 counterexamples)
[08/11 12:07:44]  Generator returned sat in 44.971347 secs.
[08/11 12:07:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:07:47]  Verifer returned unsat in 1.406021 secs.
[08/11 12:07:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:07:47]  --------------------------------------------------------------------------------
[08/11 12:07:47]  Iteration: 675 (337 solution, 337 counterexamples)
[08/11 12:08:43]  Generator returned sat in 44.725499 secs.
[08/11 12:08:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:08:46]  Verifer returned unsat in 1.436365 secs.
[08/11 12:08:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:08:46]  --------------------------------------------------------------------------------
[08/11 12:08:46]  Iteration: 676 (338 solution, 337 counterexamples)
[08/11 12:09:36]  Generator returned sat in 38.661024 secs.
[08/11 12:09:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:09:39]  Verifer returned unsat in 1.493328 secs.
[08/11 12:09:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:09:39]  --------------------------------------------------------------------------------
[08/11 12:09:39]  Iteration: 677 (339 solution, 337 counterexamples)
[08/11 12:10:33]  Generator returned sat in 43.099633 secs.
[08/11 12:10:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:10:37]  Verifer returned unsat in 1.697736 secs.
[08/11 12:10:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:10:37]  --------------------------------------------------------------------------------
[08/11 12:10:37]  Iteration: 678 (340 solution, 337 counterexamples)
[08/11 12:11:24]  Generator returned sat in 35.802372 secs.
[08/11 12:11:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:11:27]  Verifer returned unsat in 1.385160 secs.
[08/11 12:11:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:11:27]  --------------------------------------------------------------------------------
[08/11 12:11:27]  Iteration: 679 (341 solution, 337 counterexamples)
[08/11 12:12:14]  Generator returned sat in 35.637703 secs.
[08/11 12:12:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:12:17]  Verifer returned unsat in 1.456068 secs.
[08/11 12:12:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:12:17]  --------------------------------------------------------------------------------
[08/11 12:12:17]  Iteration: 680 (342 solution, 337 counterexamples)
[08/11 12:13:16]  Generator returned sat in 47.504444 secs.
[08/11 12:13:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:13:19]  Verifer returned unsat in 1.547263 secs.
[08/11 12:13:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:13:19]  --------------------------------------------------------------------------------
[08/11 12:13:19]  Iteration: 681 (343 solution, 337 counterexamples)
[08/11 12:14:06]  Generator returned sat in 35.804696 secs.
[08/11 12:14:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:14:09]  Verifer returned unsat in 1.281113 secs.
[08/11 12:14:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:14:09]  --------------------------------------------------------------------------------
[08/11 12:14:09]  Iteration: 682 (344 solution, 337 counterexamples)
[08/11 12:14:55]  Generator returned sat in 34.514197 secs.
[08/11 12:14:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:14:58]  Verifer returned unsat in 1.756237 secs.
[08/11 12:14:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:14:58]  --------------------------------------------------------------------------------
[08/11 12:14:58]  Iteration: 683 (345 solution, 337 counterexamples)
[08/11 12:15:59]  Generator returned sat in 49.979898 secs.
[08/11 12:16:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:16:03]  Verifer returned unsat in 1.840185 secs.
[08/11 12:16:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:16:03]  --------------------------------------------------------------------------------
[08/11 12:16:03]  Iteration: 684 (346 solution, 337 counterexamples)
[08/11 12:16:50]  Generator returned sat in 36.232087 secs.
[08/11 12:16:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:16:53]  Verifer returned unsat in 1.464555 secs.
[08/11 12:16:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:16:53]  --------------------------------------------------------------------------------
[08/11 12:16:53]  Iteration: 685 (347 solution, 337 counterexamples)
[08/11 12:17:41]  Generator returned sat in 35.772513 secs.
[08/11 12:17:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:17:44]  Verifer returned unsat in 1.484538 secs.
[08/11 12:17:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:17:44]  --------------------------------------------------------------------------------
[08/11 12:17:44]  Iteration: 686 (348 solution, 337 counterexamples)
[08/11 12:18:32]  Generator returned sat in 36.949317 secs.
[08/11 12:18:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:18:35]  Verifer returned unsat in 1.626278 secs.
[08/11 12:18:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:18:35]  --------------------------------------------------------------------------------
[08/11 12:18:35]  Iteration: 687 (349 solution, 337 counterexamples)
[08/11 12:19:23]  Generator returned sat in 36.552570 secs.
[08/11 12:19:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:19:26]  Verifer returned unsat in 1.279012 secs.
[08/11 12:19:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:19:26]  --------------------------------------------------------------------------------
[08/11 12:19:26]  Iteration: 688 (350 solution, 337 counterexamples)
[08/11 12:20:15]  Generator returned sat in 36.744152 secs.
[08/11 12:20:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:20:19]  Verifer returned unsat in 2.603477 secs.
[08/11 12:20:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:20:19]  --------------------------------------------------------------------------------
[08/11 12:20:19]  Iteration: 689 (351 solution, 337 counterexamples)
[08/11 12:21:05]  Generator returned sat in 35.009147 secs.
[08/11 12:21:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:21:08]  Verifer returned unsat in 1.602064 secs.
[08/11 12:21:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:21:08]  --------------------------------------------------------------------------------
[08/11 12:21:08]  Iteration: 690 (352 solution, 337 counterexamples)
[08/11 12:22:15]  Generator returned sat in 55.626842 secs.
[08/11 12:22:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:22:19]  Verifer returned unsat in 2.592967 secs.
[08/11 12:22:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:22:20]  --------------------------------------------------------------------------------
[08/11 12:22:20]  Iteration: 691 (353 solution, 337 counterexamples)
[08/11 12:23:15]  Generator returned sat in 44.242104 secs.
[08/11 12:23:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:23:18]  Verifer returned unsat in 1.731547 secs.
[08/11 12:23:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:23:18]  --------------------------------------------------------------------------------
[08/11 12:23:18]  Iteration: 692 (354 solution, 337 counterexamples)
[08/11 12:24:18]  Generator returned sat in 47.860701 secs.
[08/11 12:24:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:24:28]  Improved gap from 1/22 to 0
[08/11 12:24:30]  Improved number of small numbers from 59 to 72 out of a max of 114
[08/11 12:24:30]  Verifer returned sat in 10.582137 secs.
[08/11 12:24:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   35776.436523   35776.436493 -75482.050293  35776.436523  103.288818  35776.436493   0.000000    0.000030       -2.711038     9.0     35776.436493            -1             -1     -1
1   35879.675382   35831.800537 -75482.050293  35879.675382  103.238889  35831.800537   0.000000   47.874845        0.527820     1.0     35879.675382         False           True  False
2   35879.675382   35879.147604 -75429.775146  35879.675382   47.825195  35879.147604   0.000000    0.527778      -47.197033     2.0     35879.675382         False          False  False
3   35926.922604   35926.872604 -75329.825335  35926.922604   47.775000  35926.872604   0.000000    0.050000        0.000000     1.0     35926.922604         False           True  False
4   36027.978160   35978.128160 -75329.825335  36027.978160  101.105556  35978.128160   0.477778   49.372222        0.577778     1.0     35926.922604         False          False  False
5   36027.978160   36027.450382 -75230.403113  36027.978160   49.052778  36027.450382   0.477778    0.050000        0.000000     2.0     35926.922604         False          False   True
6   36128.605938   36027.500488 -75230.403113  36128.605938  100.677778  36027.500488   0.527778  100.577672        0.577778     1.0     36128.078160          True           True  False
7   36128.605938   36127.500382 -75130.980957  36128.605938   48.838889  36127.500382   0.527778    0.577778       -0.000066     2.0     36128.078160         False          False   True
8   36229.133715   36128.078369 -75130.980957  36229.133715  101.105556  36128.078369   0.527778  100.527568        0.527712     1.0     36128.078160         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=26/45.[0m
[08/11 12:24:31]  --------------------------------------------------------------------------------
[08/11 12:24:31]  Iteration: 693 (354 solution, 338 counterexamples)
[08/11 12:35:07]  Generator returned sat in 624.744417 secs.
[08/11 12:35:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:35:13]  Improved gap from 0 to 23.4375
[08/11 12:35:14]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/11 12:35:14]  Verifer returned sat in 5.860055 secs.
[08/11 12:35:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   35779.775382   35744.325382 -75447.228271  35779.775382    0.100000  35744.325382       0.00   35.450000       35.449842     2.0     35744.325382            -1             -1   False
1   35779.775382   35756.337646 -75382.678113  35779.775382    0.100000  35756.337646       0.00   23.437736        0.000000     2.0     35744.325382         False          False   False
2   35779.775382   35779.775382 -75382.677979  35779.775382    0.100098  35779.775382       0.00    0.000000      -99.999865     3.0     35744.325382         False          False   False
3   35879.875382   35879.775382 -75306.115613  35879.875382  100.100000  35879.775382       0.00    0.100000      -23.337500     1.0     35744.325382         False          False   False
4   36131.500382   36000.187882 -75306.115613  36131.500382  251.725000  36000.187882       4.85  126.462500      123.437500     1.0     35744.325382         False          False   False
5   36131.500382   36061.368896 -75306.115613  36131.500382  126.362500  36061.368896       4.85   65.281486       23.437500     2.0     35744.325382         False          False    True
6   36131.500382   36103.212882 -75229.553113  36131.500382   65.181250  36103.212882       4.85   23.437500        0.000000     3.0     35744.325382         False          False    True
7   36142.653507   36126.650382 -75152.990613  36142.653507   34.590625  36126.650382       4.85   11.153125      -12.284375     4.0     35744.325382         False          False    True
8   36336.989445   36150.087891 -75152.990613  36336.989445  205.489062  36150.087891       4.85  182.051554       82.051563     1.0     36332.139445          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/11 12:35:15]  --------------------------------------------------------------------------------
[08/11 12:35:15]  Iteration: 694 (354 solution, 339 counterexamples)
[08/11 12:40:41]  Generator returned sat in 314.241065 secs.
[08/11 12:40:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:40:50]  Improved gap from 1/30 to 0
[08/11 12:40:52]  Improved number of small numbers from 59 to 74 out of a max of 114
[08/11 12:40:52]  Verifer returned sat in 9.611665 secs.
[08/11 12:40:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -8949.247559   -8968.756416 -30753.602295 -8949.247559    0.026123 -8968.756416   0.000000   19.508858        0.052878     3.0     -8968.756416            -1             -1   False
1   -8949.247559   -8949.300293 -30653.681396 -8949.247559    0.026316 -8949.300293   0.000000    0.052734       -0.026224     3.0     -8968.756416         False          False   False
2   -8900.958252   -8949.221329 -30601.970703 -8900.958252   48.342041 -8949.221329   0.000000   48.263077       -0.026224     1.0     -8968.756416         False          False   False
3   -8900.905539   -8900.931855 -30501.997192 -8900.905539   48.315789 -8900.931855   0.000000    0.026316        0.000000     1.0     -8900.905539         False          False   False
4   -8799.195013   -8850.747644 -30501.997192 -8799.195013  101.736842 -8850.747644   1.657895   49.894737        0.052632     1.0     -8900.905539         False          False   False
5   -8799.195013   -8800.879223 -30402.049824 -8799.195013   49.868421 -8800.879223   1.657895    0.026316        0.000000     2.0     -8900.905539         False          False    True
6   -8698.116065   -8750.379150 -30402.049824 -8698.116065  101.105263 -8750.379150   2.684211   49.578875        0.052632     1.0     -8900.905539         False          False    True
7   -8698.116065   -8700.826592 -30302.128771 -8698.116065   49.552632 -8700.826592   2.684211    0.026316       -0.026316     2.0     -8900.905539         False          False    True
8   -8596.405539   -8700.773926 -30302.128771 -8596.405539  101.736842 -8700.773926   4.315789  100.052597        0.052632     1.0     -8900.905539         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/19.[0m
[08/11 12:40:52]  --------------------------------------------------------------------------------
[08/11 12:40:52]  Iteration: 695 (354 solution, 340 counterexamples)
[08/11 12:48:35]  Generator returned sat in 451.193134 secs.
[08/11 12:48:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:48:37]  Verifer returned unsat in 0.710660 secs.
[08/11 12:48:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:48:37]  --------------------------------------------------------------------------------
[08/11 12:48:37]  Iteration: 696 (355 solution, 340 counterexamples)
[08/11 12:49:24]  Generator returned sat in 35.517583 secs.
[08/11 12:49:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:49:27]  Verifer returned unsat in 0.665651 secs.
[08/11 12:49:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:49:27]  --------------------------------------------------------------------------------
[08/11 12:49:27]  Iteration: 697 (356 solution, 340 counterexamples)
[08/11 12:50:15]  Generator returned sat in 36.818414 secs.
[08/11 12:50:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:50:18]  Verifer returned unsat in 0.964231 secs.
[08/11 12:50:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:50:18]  --------------------------------------------------------------------------------
[08/11 12:50:18]  Iteration: 698 (357 solution, 340 counterexamples)
[08/11 12:51:06]  Generator returned sat in 36.557165 secs.
[08/11 12:51:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:51:08]  Verifer returned unsat in 0.779370 secs.
[08/11 12:51:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:51:08]  --------------------------------------------------------------------------------
[08/11 12:51:08]  Iteration: 699 (358 solution, 340 counterexamples)
[08/11 12:55:45]  Generator returned sat in 265.346736 secs.
[08/11 12:55:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:55:49]  Verifer returned unsat in 2.177271 secs.
[08/11 12:55:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:55:49]  --------------------------------------------------------------------------------
[08/11 12:55:49]  Iteration: 700 (359 solution, 340 counterexamples)
[08/11 12:57:23]  Generator returned sat in 82.107514 secs.
[08/11 12:57:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:57:26]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/11 12:57:26]  Verifer returned sat in 1.688968 secs.
[08/11 12:57:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -100.112793    -100.213135 -30402.049805  -100.112793     0.050049  -100.213135    0.050049     0.050293        0.050293     5.0      -100.213135            -1             -1     -1
1      -0.212891    -100.213135 -30402.049805    -0.212891    99.950195  -100.213135    0.050049    99.950195       -0.049805     5.0      -100.213135         False           True   True
2      -0.113037      -0.213135 -30402.049805    -0.113037   100.050049    -0.213135    0.050049     0.050049      -99.949951     1.0      -100.213135         False           True  False
3    2599.937012     103.636963 -30402.049805  2599.937012  2600.100098   103.636963  800.050049  1696.250000     1600.100098     1.0      -100.213135         False          False  False
4    2599.937012     199.786865 -30402.049805  2599.937012  1302.050049   199.786865  800.050049  1600.100098     1500.100098     2.0      -100.213135         False          False   True
5    2599.937012     399.737061 -30402.049805  2599.937012  1452.050049   399.737061  800.050049  1400.149902     1400.100098     3.0      -100.213135         False          False   True
6    2851.812256     399.786865 -30402.049805  2851.812256  1652.025146   399.786865  800.050049  1651.975342     1551.975342     4.0      -100.213135         False          False   True
7    2999.937012     599.786865 -30402.049805  2999.937012  1800.100098   599.786865  800.050049  1600.100098     1600.100098     5.0      -100.213135         False          False   True
8    2999.937012     599.837158 -30402.049805  2999.937012  1302.050049   599.837158  800.050049  1600.049805     1500.100098     6.0      2199.886963          True           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=3277005/2048.[0m
[08/11 12:57:27]  --------------------------------------------------------------------------------
[08/11 12:57:27]  Iteration: 701 (359 solution, 341 counterexamples)
[08/11 13:11:04]  Generator returned sat in 806.082309 secs.
[08/11 13:11:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:11:11]  Improved gap from 0 to 23.4375
[08/11 13:11:11]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/11 13:11:11]  Verifer returned sat in 5.125057 secs.
[08/11 13:11:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -873.275391    -986.713135 -30402.050049  -873.275391    0.100098  -986.713135   0.049805  113.387939      100.000244     2.0      -986.713135            -1             -1   False
1    -873.275391    -896.762939 -30402.050049  -873.275391  113.387451  -896.762939   0.049805   23.437744        0.000244     2.0      -986.713135         False          False   False
2    -696.813232    -873.325439 -30402.050049  -696.813232  199.899902  -873.325439   0.049805  176.462402       76.462402     3.0      -986.713135         False          False   False
3    -673.275635    -696.762939 -30402.050049  -673.275635  200.000000  -696.762939   0.049805   23.437500        0.000000     1.0      -986.713135         False          False   False
4    -449.738037    -573.325439 -30402.050049  -449.738037  246.975098  -573.325439   0.149902  123.437500      123.437500     1.0      -986.713135         False          False   False
5    -449.738037    -473.425781 -30402.050049  -449.738037    2.000000  -473.425781   0.149902   23.537842       23.437500     2.0      -986.713135         False          False    True
6    -449.738037    -473.325439 -30325.487549  -449.738037    3.500000  -473.325439   0.149902   23.437500        0.000000     3.0      -986.713135         False          False    True
7    -449.738037    -449.887939 -30248.925049  -449.738037    5.000000  -449.887939   0.149902    0.000000      -23.437500     4.0      -986.713135         False          False    True
8    -383.519287    -426.450439 -30248.925049  -383.519287   66.218750  -426.450439   0.149902   42.781250      -57.218750     1.0      -383.669189          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/11 13:11:11]  --------------------------------------------------------------------------------
[08/11 13:11:11]  Iteration: 702 (359 solution, 342 counterexamples)
[08/11 13:16:16]  Generator returned sat in 292.435048 secs.
[08/11 13:16:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:16:19]  Verifer returned unsat in 1.912007 secs.
[08/11 13:16:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:16:19]  --------------------------------------------------------------------------------
[08/11 13:16:19]  Iteration: 703 (360 solution, 342 counterexamples)
[08/11 13:17:17]  Generator returned sat in 46.791280 secs.
[08/11 13:17:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:17:20]  Verifer returned unsat in 1.304252 secs.
[08/11 13:17:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:17:20]  --------------------------------------------------------------------------------
[08/11 13:17:20]  Iteration: 704 (361 solution, 342 counterexamples)
[08/11 13:18:28]  Generator returned sat in 55.689266 secs.
[08/11 13:18:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:18:31]  Verifer returned unsat in 2.175112 secs.
[08/11 13:18:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:18:32]  --------------------------------------------------------------------------------
[08/11 13:18:32]  Iteration: 705 (362 solution, 342 counterexamples)
[08/11 13:19:21]  Generator returned sat in 38.214793 secs.
[08/11 13:19:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:19:25]  Verifer returned unsat in 1.962476 secs.
[08/11 13:19:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:19:25]  --------------------------------------------------------------------------------
[08/11 13:19:25]  Iteration: 706 (363 solution, 342 counterexamples)
[08/11 13:20:14]  Generator returned sat in 36.694671 secs.
[08/11 13:20:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:20:17]  Verifer returned unsat in 1.389235 secs.
[08/11 13:20:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:20:17]  --------------------------------------------------------------------------------
[08/11 13:20:17]  Iteration: 707 (364 solution, 342 counterexamples)
[08/11 13:21:06]  Generator returned sat in 37.612393 secs.
[08/11 13:21:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:21:09]  Verifer returned unsat in 1.664052 secs.
[08/11 13:21:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:21:09]  --------------------------------------------------------------------------------
[08/11 13:21:09]  Iteration: 708 (365 solution, 342 counterexamples)
[08/11 13:21:58]  Generator returned sat in 36.487532 secs.
[08/11 13:21:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:22:01]  Verifer returned unsat in 1.456572 secs.
[08/11 13:22:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:22:01]  --------------------------------------------------------------------------------
[08/11 13:22:01]  Iteration: 709 (366 solution, 342 counterexamples)
[08/11 13:25:30]  Generator returned sat in 197.776800 secs.
[08/11 13:25:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:25:33]  Improved gap from 0 to 100
[08/11 13:25:33]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 13:25:33]  Verifer returned sat in 1.434196 secs.
[08/11 13:25:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -8442.184082   -8442.284180 -30498.150146 -8442.184082   299.949951 -8442.284180   0.050049     0.050049      -99.949951     8.0     -8442.284180            -1             -1     -1
1   -8142.334229   -8242.284180 -30498.150146 -8142.334229   299.899902 -8242.284180   0.050049    99.899902       99.899902     1.0     -8142.384277         False           True   True
2   -6542.534180   -8142.333984 -30498.150146 -6542.534180  1699.699951 -8142.333984   0.100098  1599.699707     1599.649902     1.0     -8142.384277         False          False   True
3   -6542.534180   -8142.284180 -30498.150146 -6542.534180  1599.100098 -8142.284180   0.100098  1599.649902     1499.649902     2.0     -6542.634277         False          False   True
4   -6542.534180   -7942.284180 -30498.150146 -6542.534180  1599.600098 -7942.284180   0.100098  1399.649902     1399.649902     3.0     -6542.634277         False          False   True
5   -6342.083984   -7942.234131 -30498.150146 -6342.083984  1600.100098 -7942.234131   0.100098  1600.050049     1500.100098     4.0     -6542.634277         False          False   True
6   -6341.533936   -7742.284180 -30498.150146 -6341.533936  1600.600098 -7742.284180   0.100098  1400.650146     1400.650146     5.0     -6542.634277         False          False   True
7   -6141.083984   -7642.284180 -30498.150146 -6141.083984  1601.100098 -7642.284180   0.100098  1501.100098     1501.100098     6.0     -6542.634277         False          False   True
8   -6040.583984   -7542.284180 -30498.150146 -6040.583984  1601.600098 -7542.284180   0.100098  1501.600098     1501.600098     7.0     -6542.634277         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3276083/2048.[0m
[08/11 13:25:34]  --------------------------------------------------------------------------------
[08/11 13:25:34]  Iteration: 710 (366 solution, 343 counterexamples)
[08/11 13:31:08]  Generator returned sat in 322.373071 secs.
[08/11 13:31:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:31:12]  Improved gap from 0 to 0
[08/11 13:31:13]  Improved number of small numbers from 70 to 92 out of a max of 114
[08/11 13:31:13]  Verifer returned sat in 3.523281 secs.
[08/11 13:31:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5941.115723   -5941.870339 -30498.150146 -5941.115723  0.000833 -5941.870339        0.0  0.754616        0.000137     8.0     -5941.870339            -1             -1     -1
1   -5941.115723   -5941.115723 -30398.150391 -5941.115723  0.000833 -5941.115723        0.0  0.000000       -0.000107     9.0     -5941.870339         False           True  False
2   -5941.115234   -5941.115234 -30298.150879 -5941.115234  0.000488 -5941.115234        0.0  0.000000       -0.000107     1.0     -5941.115234          True           True  False
3   -5941.114746   -5941.115026 -30198.151367 -5941.114746  0.000488 -5941.115026        0.0  0.000280       -0.000107     1.0     -5941.115234         False          False  False
4   -5941.104401   -5941.114502 -30098.161605 -5941.104401  0.010625 -5941.114502        0.0  0.010101        0.000000     1.0     -5941.115234         False          False  False
5   -5941.104401   -5941.104401 -29998.161621 -5941.104401  0.010000 -5941.104401        0.0  0.000000       -0.000016     2.0     -5941.115234         False          False  False
6   -5941.094401   -5941.103984 -29898.171631 -5941.094401  0.010000 -5941.103984        0.0  0.009583       -0.000026     1.0     -5941.115234         False          False  False
7   -5941.093984   -5941.094193 -29798.181641 -5941.093984  0.010000 -5941.094193        0.0  0.000208       -0.009619     1.0     -5941.115234         False          False  False
8   -5941.084193   -5941.084229 -29698.181885 -5941.084193  0.010000 -5941.084229        0.0  0.000036       -0.000072     1.0     -5941.115234         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/2048.[0m
[08/11 13:31:14]  --------------------------------------------------------------------------------
[08/11 13:31:14]  Iteration: 711 (366 solution, 344 counterexamples)
[08/11 13:33:14]  Generator returned sat in 108.233115 secs.
[08/11 13:33:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:33:23]  Improved gap from 0 to 0
[08/11 13:33:24]  Improved number of small numbers from 56 to 87 out of a max of 114
[08/11 13:33:24]  Verifer returned sat in 8.788089 secs.
[08/11 13:33:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5942.100830   -5942.101318 -30497.165771 -5942.100830  0.986084 -5942.101318        0.0  0.000488       -0.000596     7.0     -5942.101318            -1             -1   False
1   -5941.115234   -5942.099999 -30398.150879 -5941.115234  0.986084 -5942.099999        0.0  0.984764       -0.000107     1.0     -5942.101318         False          False   False
2   -5941.104637   -5941.114990 -30298.161377 -5941.104637  0.995362 -5941.114990        0.0  0.010354       -0.000008     1.0     -5942.101318         False          False   False
3   -5941.103271   -5941.103984 -30198.170898 -5941.103271  0.011719 -5941.103984        0.0  0.000713       -0.008164     1.0     -5941.103271         False          False   False
4   -5941.093984   -5941.095071 -30098.172674 -5941.093984  0.010000 -5941.095071        0.0  0.001087       -0.000652     1.0     -5941.103271         False          False   False
5   -5941.082680   -5941.093262 -29998.183326 -5941.082680  0.012391 -5941.093262        0.0  0.010582        0.000000     1.0     -5941.103271         False          False   False
6   -5941.082680   -5941.082680 -29898.191650 -5941.082680  0.010000 -5941.082680        0.0  0.000000       -0.008325     2.0     -5941.103271         False          False   False
7   -5941.072680   -5941.074202 -29798.201660 -5941.072680  0.010000 -5941.074202        0.0  0.001522       -0.008334     1.0     -5941.103271         False          False   False
8   -5941.064202   -5941.064209 -29798.201660 -5941.064202  0.010000 -5941.064209        0.0  0.000007      -99.999856     1.0     -5941.103271         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/11 13:33:25]  --------------------------------------------------------------------------------
[08/11 13:33:25]  Iteration: 712 (366 solution, 345 counterexamples)
[08/11 13:39:52]  Generator returned sat in 375.067432 secs.
[08/11 13:39:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:39:54]  Improved gap from 0 to 23.4375
[08/11 13:39:55]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/11 13:39:55]  Verifer returned sat in 1.047338 secs.
[08/11 13:39:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5790.604492   -5844.829590 -30594.436523 -5790.604492  100.399902 -5844.829590    0.000000   54.225098       54.225098     3.0     -5844.829590            -1             -1     -1
1   -5744.529541   -5790.504639 -30594.436523 -5744.529541  100.300049 -5790.504639    0.100098   45.875000        0.199951     1.0     -5744.629639         False           True  False
2   -5690.104492   -5744.729736 -30549.061523 -5690.104492  100.300049 -5744.729736    0.100098   54.525146        0.000000     2.0     -5744.629639         False          False   True
3   -5541.229736   -5590.204590 -30549.061523 -5541.229736  203.399902 -5590.204590   48.774902    0.199951        0.199951     1.0     -5744.629639         False           True  False
4   -5441.229736   -5490.604736 -30549.061523 -5441.229736  100.199951 -5490.604736   48.774902    0.600098        0.199951     1.0     -5744.629639         False          False   True
5   -5441.229736   -5490.004639 -30472.699219 -5441.229736    0.500000 -5490.004639   48.774902    0.000000      -23.437744     2.0     -5744.629639         False          False   True
6   -5186.504639   -5466.566895 -30472.699219 -5186.504639  254.725098 -5466.566895  179.862305  100.199951        0.199951     1.0     -5366.366943          True           True  False
7   -5160.842041   -5366.267090 -30398.561768 -5160.842041  125.862549 -5366.267090  179.862305   25.562744        0.000000     1.0     -5366.366943         False          False   True
8   -5160.842041   -5340.704346 -30321.999268 -5160.842041    0.500000 -5340.704346  179.862305    0.000000      -23.437500     2.0     -5366.366943         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/11 13:39:55]  --------------------------------------------------------------------------------
[08/11 13:39:55]  Iteration: 713 (366 solution, 346 counterexamples)
[08/11 13:43:08]  Generator returned sat in 180.933578 secs.
[08/11 13:43:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:43:11]  Verifer returned unsat in 1.076988 secs.
[08/11 13:43:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:43:11]  --------------------------------------------------------------------------------
[08/11 13:43:11]  Iteration: 714 (367 solution, 346 counterexamples)
[08/11 13:44:01]  Generator returned sat in 38.716611 secs.
[08/11 13:44:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:44:03]  Verifer returned unsat in 0.461353 secs.
[08/11 13:44:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:44:03]  --------------------------------------------------------------------------------
[08/11 13:44:03]  Iteration: 715 (368 solution, 346 counterexamples)
[08/11 13:44:54]  Generator returned sat in 38.571393 secs.
[08/11 13:44:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:44:56]  Verifer returned unsat in 0.501860 secs.
[08/11 13:44:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:44:56]  --------------------------------------------------------------------------------
[08/11 13:44:56]  Iteration: 716 (369 solution, 346 counterexamples)
[08/11 13:45:47]  Generator returned sat in 38.567611 secs.
[08/11 13:45:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:45:49]  Verifer returned unsat in 0.506377 secs.
[08/11 13:45:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:45:49]  --------------------------------------------------------------------------------
[08/11 13:45:49]  Iteration: 717 (370 solution, 346 counterexamples)
[08/11 13:46:41]  Generator returned sat in 39.926829 secs.
[08/11 13:46:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:46:43]  Verifer returned unsat in 0.394915 secs.
[08/11 13:46:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:46:43]  --------------------------------------------------------------------------------
[08/11 13:46:43]  Iteration: 718 (371 solution, 346 counterexamples)
[08/11 13:47:36]  Generator returned sat in 41.149286 secs.
[08/11 13:47:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:47:38]  Verifer returned unsat in 0.481036 secs.
[08/11 13:47:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:47:38]  --------------------------------------------------------------------------------
[08/11 13:47:38]  Iteration: 719 (372 solution, 346 counterexamples)
[08/11 13:48:30]  Generator returned sat in 40.176128 secs.
[08/11 13:48:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:48:32]  Verifer returned unsat in 0.558579 secs.
[08/11 13:48:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:48:32]  --------------------------------------------------------------------------------
[08/11 13:48:32]  Iteration: 720 (373 solution, 346 counterexamples)
[08/11 13:49:25]  Generator returned sat in 40.630896 secs.
[08/11 13:49:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:49:27]  Verifer returned unsat in 0.475076 secs.
[08/11 13:49:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:49:27]  --------------------------------------------------------------------------------
[08/11 13:49:27]  Iteration: 721 (374 solution, 346 counterexamples)
[08/11 13:50:20]  Generator returned sat in 41.658272 secs.
[08/11 13:50:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:50:22]  Verifer returned unsat in 0.514615 secs.
[08/11 13:50:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:50:22]  --------------------------------------------------------------------------------
[08/11 13:50:22]  Iteration: 722 (375 solution, 346 counterexamples)
[08/11 13:51:45]  Generator returned sat in 70.429965 secs.
[08/11 13:51:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:51:48]  Verifer returned unsat in 1.307996 secs.
[08/11 13:51:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:51:48]  --------------------------------------------------------------------------------
[08/11 13:51:48]  Iteration: 723 (376 solution, 346 counterexamples)
[08/11 13:52:44]  Generator returned sat in 44.198743 secs.
[08/11 13:52:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:52:46]  Verifer returned unsat in 1.008278 secs.
[08/11 13:52:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:52:47]  --------------------------------------------------------------------------------
[08/11 13:52:47]  Iteration: 724 (377 solution, 346 counterexamples)
[08/11 13:53:40]  Generator returned sat in 41.412748 secs.
[08/11 13:53:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:53:43]  Verifer returned unsat in 1.587529 secs.
[08/11 13:53:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:53:43]  --------------------------------------------------------------------------------
[08/11 13:53:43]  Iteration: 725 (378 solution, 346 counterexamples)
[08/11 13:54:39]  Generator returned sat in 43.936348 secs.
[08/11 13:54:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:54:42]  Verifer returned unsat in 0.801776 secs.
[08/11 13:54:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:54:42]  --------------------------------------------------------------------------------
[08/11 13:54:42]  Iteration: 726 (379 solution, 346 counterexamples)
[08/11 13:56:08]  Generator returned sat in 74.466146 secs.
[08/11 13:56:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:56:10]  Verifer returned unsat in 1.017392 secs.
[08/11 13:56:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:56:10]  --------------------------------------------------------------------------------
[08/11 13:56:10]  Iteration: 727 (380 solution, 346 counterexamples)
[08/11 13:57:15]  Generator returned sat in 52.640433 secs.
[08/11 13:57:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:57:18]  Verifer returned unsat in 1.289051 secs.
[08/11 13:57:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:57:18]  --------------------------------------------------------------------------------
[08/11 13:57:18]  Iteration: 728 (381 solution, 346 counterexamples)
[08/11 13:58:18]  Generator returned sat in 47.996488 secs.
[08/11 13:58:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:58:21]  Verifer returned unsat in 1.556442 secs.
[08/11 13:58:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:58:21]  --------------------------------------------------------------------------------
[08/11 13:58:21]  Iteration: 729 (382 solution, 346 counterexamples)
[08/11 13:59:18]  Generator returned sat in 45.593096 secs.
[08/11 13:59:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:59:21]  Verifer returned unsat in 1.131278 secs.
[08/11 13:59:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:59:21]  --------------------------------------------------------------------------------
[08/11 13:59:21]  Iteration: 730 (383 solution, 346 counterexamples)
[08/11 14:00:17]  Generator returned sat in 44.335798 secs.
[08/11 14:00:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:00:21]  Verifer returned unsat in 1.632370 secs.
[08/11 14:00:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:00:21]  --------------------------------------------------------------------------------
[08/11 14:00:21]  Iteration: 731 (384 solution, 346 counterexamples)
[08/11 14:04:23]  Generator returned sat in 230.597921 secs.
[08/11 14:04:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:04:28]  Verifer returned unsat in 2.612940 secs.
[08/11 14:04:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:04:28]  --------------------------------------------------------------------------------
[08/11 14:04:28]  Iteration: 732 (385 solution, 346 counterexamples)
[08/11 14:05:50]  Generator returned sat in 71.097103 secs.
[08/11 14:05:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:05:54]  Verifer returned unsat in 1.456162 secs.
[08/11 14:05:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:05:54]  --------------------------------------------------------------------------------
[08/11 14:05:54]  Iteration: 733 (386 solution, 346 counterexamples)
[08/11 14:07:08]  Generator returned sat in 62.379584 secs.
[08/11 14:07:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:07:10]  Verifer returned unsat in 1.045323 secs.
[08/11 14:07:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:07:10]  --------------------------------------------------------------------------------
[08/11 14:07:10]  Iteration: 734 (387 solution, 346 counterexamples)
[08/11 14:08:31]  Generator returned sat in 69.042085 secs.
[08/11 14:08:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:08:36]  Verifer returned unsat in 3.074519 secs.
[08/11 14:08:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:08:36]  --------------------------------------------------------------------------------
[08/11 14:08:36]  Iteration: 735 (388 solution, 346 counterexamples)
[08/11 14:09:57]  Generator returned sat in 68.742208 secs.
[08/11 14:09:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:09:59]  Verifer returned unsat in 0.696398 secs.
[08/11 14:09:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:09:59]  --------------------------------------------------------------------------------
[08/11 14:09:59]  Iteration: 736 (389 solution, 346 counterexamples)
[08/11 14:10:57]  Generator returned sat in 46.174908 secs.
[08/11 14:10:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:10:59]  Verifer returned unsat in 0.790575 secs.
[08/11 14:10:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:10:59]  --------------------------------------------------------------------------------
[08/11 14:10:59]  Iteration: 737 (390 solution, 346 counterexamples)
[08/11 14:11:59]  Generator returned sat in 47.953722 secs.
[08/11 14:12:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:12:03]  Verifer returned unsat in 2.210132 secs.
[08/11 14:12:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:12:03]  --------------------------------------------------------------------------------
[08/11 14:12:03]  Iteration: 738 (391 solution, 346 counterexamples)
[08/11 14:13:33]  Generator returned sat in 78.587056 secs.
[08/11 14:13:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:13:36]  Verifer returned unsat in 1.232454 secs.
[08/11 14:13:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:13:36]  --------------------------------------------------------------------------------
[08/11 14:13:36]  Iteration: 739 (392 solution, 346 counterexamples)
[08/11 14:14:38]  Generator returned sat in 49.465945 secs.
[08/11 14:14:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:14:41]  Verifer returned unsat in 1.807595 secs.
[08/11 14:14:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:14:41]  --------------------------------------------------------------------------------
[08/11 14:14:41]  Iteration: 740 (393 solution, 346 counterexamples)
[08/11 14:15:50]  Generator returned sat in 56.291411 secs.
[08/11 14:15:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:15:53]  Verifer returned unsat in 1.764366 secs.
[08/11 14:15:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:15:53]  --------------------------------------------------------------------------------
[08/11 14:15:53]  Iteration: 741 (394 solution, 346 counterexamples)
