[08/10 15:15:19]  --------------------------------------------------------------------------------
[08/10 15:15:19]  Iteration: 1 (0 solution, 0 counterexamples)
[08/10 15:15:19]  Generator returned sat in 0.004271 secs.
[08/10 15:15:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:19]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:19]  Verifer returned sat in 0.394382 secs.
[08/10 15:15:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0         -100.1        -1508.5    1508.1       -100.1       0.1      -1508.5        0.0   1408.4          1408.0     8.0          -1508.5            -1             -1   False
1         -100.1        -1408.1    1508.1       -100.1    1408.3      -1408.1        0.0   1308.0          1308.0     9.0          -1508.5         False          False   False
2            0.1        -1308.2    1508.1          0.1    1408.2      -1308.2        0.1   1308.2          1308.1     8.0              0.0          True           True   False
3            0.1        -1308.1    1508.1          0.1       0.1      -1308.1        0.1   1308.1          1208.1     9.0              0.0         False          False    True
4            0.1        -1208.1    1508.1          0.1     403.0      -1208.1        0.1   1208.1          1108.1     5.0              0.0         False           True   False
5            0.1        -1108.1    1508.1          0.1    1208.0      -1108.1        0.1   1108.1          1008.1     6.0              0.0         False          False   False
6         1710.2        -1008.1    1508.1       1710.2    2818.2      -1008.1     1310.2   1408.1          1308.1     7.0              0.0         False          False   False
7         6540.5         -808.1    1508.1       6540.5    6238.4       -808.1     6040.5   1308.1          1308.1     8.0              0.0         False          False    True
8        18511.2         -708.1    1508.1      18511.2   13278.8       -708.1    17911.2   1308.1          1308.1     9.0              0.0         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=13081/10.[0m
[08/10 15:15:20]  --------------------------------------------------------------------------------
[08/10 15:15:20]  Iteration: 2 (0 solution, 1 counterexamples)
[08/10 15:15:20]  Generator returned sat in 0.035892 secs.
[08/10 15:15:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:20]  Improved number of small numbers from 109 to 109 out of a max of 113
[08/10 15:15:20]  Verifer returned sat in 0.499872 secs.
[08/10 15:15:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4742.760000   -1200.430000   1100.43  4742.760000     0.050000 -1200.430000  5143.240000   799.950000          699.95     7.0         -1200.43            -1             -1   False
1    4942.960000   -1000.430000   1100.43  4942.960000  1000.150000 -1000.430000  5143.240000   800.150000          800.15     8.0         -1200.43         False          False   False
2    5142.910000   -1000.380000   1100.43  5142.910000  1000.100000 -1000.380000  5143.290000  1000.000000          900.05     3.0            -0.38          True           True   False
3    5142.910000    -900.430000   1100.43  5142.910000     0.050000  -900.430000  5143.290000   900.050000          800.05     4.0            -0.38         False          False    True
4    5142.910000    -800.430000   1100.43  5142.910000   298.575000  -800.430000  5143.290000   800.050000          700.05     5.0            -0.38         False          False    True
5    5142.910000    -600.430000   1100.43  5142.910000   646.362500  -600.430000  5143.290000   600.050000          600.05     6.0            -0.38         False          False    True
6    5910.853750    -542.403437   1100.43  5910.853750  1367.993750  -542.403437  5511.233750   942.023438          900.05     7.0            -0.38         False          False    True
7    6010.853750    -400.430000   1100.43  6010.853750  1042.023438  -400.430000  5511.233750   900.050000          900.05     7.0            -0.38         False          False    True
8    7072.338906    -300.430000   1100.43  7072.338906  1961.535156  -300.430000  6472.718906   900.050000          900.05     8.0            -0.38         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=18001/20.[0m
[08/10 15:15:21]  --------------------------------------------------------------------------------
[08/10 15:15:21]  Iteration: 3 (0 solution, 2 counterexamples)
[08/10 15:15:21]  Generator returned sat in 0.102059 secs.
[08/10 15:15:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:22]  Improved gap from 0 to 23.4375
[08/10 15:15:22]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/10 15:15:22]  Verifer returned sat in 1.099729 secs.
[08/10 15:15:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4141.447266   -1000.403809  1000.403809  4141.447266  100.003662 -1000.403809  5141.851074    0.000000        0.000000     9.0     -1000.403809            -1             -1     -1
1    4241.449707    -900.403809  1000.403809  4241.449707  100.002441  -900.403809  5141.851074    0.002441        0.002441     1.0      -900.401367         False           True   True
2    4241.449707    -900.403809  1000.403809  4241.449707    0.001465  -900.403809  5141.851074    0.002441      -99.997559     1.0      -900.401367         False          False   True
3    4363.323486    -800.403809  1076.966309  4363.323486  121.876221  -800.403809  5141.851074   21.876221       -1.561279     1.0      -900.401367         False          False   True
4    4539.947266    -676.966309  1076.966309  4539.947266  198.500000  -676.966309  5193.476074   23.437500       23.437500     1.0      -900.401367         False          False   True
5    4539.947266    -676.966309  1153.528809  4539.947266    0.010000  -676.966309  5193.476074   23.437500        0.000000     1.0      -900.401367         False          False   True
6    4738.447266    -653.527588  1153.528809  4738.447266  221.937500  -653.527588  5268.538574  123.436279       23.437500     1.0      -900.401367         False          False   True
7    4738.447266    -553.528809  1230.091309  4738.447266    0.010000  -553.528809  5268.538574   23.437500        0.000000     2.0      -900.401367         False          False   True
8    4738.447266    -530.091309  1230.091309  4738.447266    0.010000  -530.091309  5268.538574    0.000000     -100.000000     3.0      -530.091309          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/10 15:15:23]  --------------------------------------------------------------------------------
[08/10 15:15:23]  Iteration: 4 (0 solution, 3 counterexamples)
[08/10 15:15:23]  Generator returned sat in 0.013406 secs.
[08/10 15:15:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:23]  Improved gap from 144/5 to 100
[08/10 15:15:23]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 15:15:23]  Verifer returned sat in 0.360551 secs.
[08/10 15:15:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4340.699707    -900.401367  1153.528809  4340.699707    0.050000  -900.401367  5141.401123   99.699951       98.350098     9.0      -900.401367            -1             -1     -1
1    4342.849854    -800.701416  1153.528809  4342.849854  101.850098  -800.701416  5141.801270    1.750000        0.100098     3.0      -900.401367         False           True   True
2    4442.899658    -798.901611  1153.528809  4442.899658  101.799805  -798.901611  5141.851074   99.950195        0.100098     1.0      -698.951416          True           True   True
3    4542.799561    -698.901367  1153.528809  4542.799561  199.850098  -698.901367  5141.851074   99.849854        0.000000     1.0      -698.951416         False          False   True
4    4642.949707    -599.051514  1153.528809  4642.949707  200.000000  -599.051514  5141.901123  100.100098        0.100098     2.0      -698.951416         False          False   True
5    4742.999512    -399.051514  1153.528809  4742.999512  200.149902  -399.051514  5141.950928    0.100098        0.100098     1.0      -398.951416          True           True   True
6    5141.249512    -399.051270  1153.528809  5141.249512  398.350098  -399.051270  5440.200928  100.099854        0.100098     2.0      -398.951416         False          False   True
7    5339.499756    -199.051514  1153.528809  5339.499756  298.350098  -199.051514  5538.451172    0.100098        0.100098     1.0      -398.951416         False           True   True
8    5737.899658    -198.901611  1153.528809  5737.899658  398.500000  -198.901611  5836.851074   99.950195        0.100098     1.0      -398.951416         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=205/2048.[0m
[08/10 15:15:24]  --------------------------------------------------------------------------------
[08/10 15:15:24]  Iteration: 5 (0 solution, 4 counterexamples)
[08/10 15:15:24]  Generator returned sat in 0.018802 secs.
[08/10 15:15:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:25]  Improved gap from 0 to 100
[08/10 15:15:25]  Improved number of small numbers from 55 to 114 out of a max of 114
[08/10 15:15:25]  Verifer returned sat in 0.699654 secs.
[08/10 15:15:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4389.199707    -824.426514  1153.528564  4389.199707    0.049805  -824.426514  5141.401123   72.225098       62.975098     1.0      -824.426514            -1             -1   False
1    4479.299561    -752.176758  1153.528564  4479.299561  162.324951  -752.176758  5141.401123   90.075195       53.074951     1.0      -824.426514         False          False   False
2    4551.524414    -624.326660  1153.528564  4551.524414  162.300049  -624.326660  5141.401123   34.449951       25.299805     1.0      -589.876709         False          False   False
3    4679.349365    -515.176514  1153.528564  4679.349365  162.274902  -515.176514  5141.426025   53.099854       53.099854     1.0      -462.076660         False          False   False
4    4779.374512    -424.426758  1153.528564  4779.374512  153.125000  -424.426758  5141.451172   62.350098       53.099854     1.0      -462.076660         False          False    True
5    4879.399414    -362.076660  1153.528564  4879.399414  162.375000  -362.076660  5141.476074  100.000000       53.099854     2.0      -462.076660         False          False    True
6    4909.024414    -262.051514  1153.528564  4909.024414  129.625000  -262.051514  5141.476074   29.599854      -17.275146     1.0      -232.451660          True           True    True
7    5131.049561    -115.176758  1153.528564  5131.049561  251.625000  -115.176758  5193.126221   53.100098       53.099854     1.0      -232.451660         False          False    True
8    5231.074463     -62.051514  1153.528564  5231.074463  153.125000   -62.051514  5193.151123   99.974854       53.099854     1.0      -232.451660         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=217497/4096.[0m
[08/10 15:15:26]  --------------------------------------------------------------------------------
[08/10 15:15:26]  Iteration: 6 (0 solution, 5 counterexamples)
[08/10 15:15:26]  Generator returned sat in 0.203069 secs.
[08/10 15:15:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:26]  Improved gap from 0 to 100
[08/10 15:15:27]  Improved number of small numbers from 60 to 108 out of a max of 114
[08/10 15:15:27]  Verifer returned sat in 1.295895 secs.
[08/10 15:15:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5177.324707    4377.324463 -4038.972656  5177.324707    0.049805  4377.324463   0.050049  799.950195      799.950195     3.0      4377.324463            -1             -1     -1
1    5181.724609    4477.324463 -4038.972656  5181.724609  804.350098  4477.324463   0.150146  704.250000      704.250000     3.0      4377.324463         False          False   True
2    5281.774414    4477.324707 -4038.972656  5281.774414  804.299805  4477.324707   0.199951  804.249756      704.250000     4.0      5281.574463         False          False   True
3    5281.774414    4677.274414 -4038.972656  5281.774414  270.755556  4677.274414   0.199951  604.300049      604.250000     5.0      5281.574463         False          False   True
4    5281.774414    4677.324512 -4038.972656  5281.774414  404.133333  4677.324512   0.199951  604.249951      504.250000     6.0      5281.574463         False          False   True
5    5281.774414    4777.324512 -4038.972656  5281.774414  604.200000  4777.324512   0.199951  504.249951      404.250000     7.0      5281.574463         False          False   True
6    5681.824463    4881.524658 -4038.972656  5681.824463  904.300000  4881.524658   0.250000  800.049805      704.250000     8.0      5281.574463         False          False   True
7    5681.824463    5033.941178 -4038.972656  5681.824463  453.650000  5033.941178   0.250000  647.633285      604.250000     9.0      5281.574463         False          False   True
8    5681.824463    5177.324463 -4038.972656  5681.824463  404.133333  5177.324463   0.250000  504.250000      504.250000     8.0      5281.574463         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=2817/4.[0m
[08/10 15:15:28]  --------------------------------------------------------------------------------
[08/10 15:15:28]  Iteration: 7 (0 solution, 6 counterexamples)
[08/10 15:15:29]  Generator returned sat in 0.462952 secs.
[08/10 15:15:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:29]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:29]  Verifer returned sat in 0.234751 secs.
[08/10 15:15:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4776.600342    4276.600342 -4038.972656  4776.600342    0.049805  4276.600342    0.024902  499.975098      499.975098     3.0      4276.600342            -1             -1     -1
1    4876.675049    4376.575439 -4038.972656  4876.675049  600.049805  4376.575439  100.099609  400.000000      399.975098     3.0      4276.600342         False           True   True
2    5076.699951    4376.600342 -4038.972656  5076.699951  600.024902  4376.600342  200.124512  499.975098      399.975098     4.0      4876.575439          True           True   True
3    5176.724854    4476.600342 -4038.972656  5176.724854  600.000000  4476.600342  200.149414  499.975098      399.975098     5.0      4976.575439         False           True   True
4    5277.249756    4576.600342 -4038.972656  5277.249756  600.500000  4576.600342  200.674316  499.975098      399.975098     6.0      4976.575439         False           True   True
5    5378.274658    4676.600342 -4038.972656  5378.274658  601.000000  4676.600342  201.699219  499.975098      399.975098     7.0      4976.575439         False           True   True
6    5479.799561    4876.600342 -4038.972656  5479.799561  601.500000  4876.600342  203.224121  399.975098      399.975098     4.0      4976.575439         False           True   True
7    5681.824463    4976.600342 -4038.972656  5681.824463  602.000000  4976.600342  305.249023  399.975098      399.975098     4.0      4976.575439         False           True   True
8    5884.349365    4976.600342 -4038.972656  5884.349365  602.500000  4976.600342  407.773926  499.975098      399.975098     4.0      4976.575439         False           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=819149/2048.[0m
[08/10 15:15:29]  --------------------------------------------------------------------------------
[08/10 15:15:29]  Iteration: 8 (0 solution, 7 counterexamples)
[08/10 15:15:30]  Generator returned sat in 0.047475 secs.
[08/10 15:15:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:30]  Improved gap from 1/400 to 100
[08/10 15:15:30]  Improved number of small numbers from 55 to 114 out of a max of 114
[08/10 15:15:30]  Verifer returned sat in 0.616426 secs.
[08/10 15:15:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4778.049561    4777.925049 -4038.9729  4778.049561  199.900146  4777.925049   0.024658    0.099854      -73.833252     1.0      4777.925049            -1             -1   False
1    4977.749756    4851.858154 -4038.9729  4977.749756  199.800049  4851.858154  25.691650  100.199951        0.199951     1.0      4952.058105         False          False   False
2    5077.249756    4952.157959 -4038.9729  5077.249756  199.699951  4952.157959  25.691650   99.400146       -0.300049     1.0      5051.558105         False          False    True
3    5177.549805    5051.858154 -4038.9729  5177.549805  199.700195  5051.858154  25.691650  100.000000        0.000000     1.0      5051.558105         False          False    True
4    5212.516357    5186.724854 -4038.9729  5212.516357  134.966553  5186.724854  25.691650    0.099854      -65.033447     1.0      5051.558105         False          False    True
5    5377.849854    5287.224609 -4038.9729  5377.849854  165.433350  5287.224609  25.791748   64.833496        0.199951     1.0      5051.558105         False          False    True
6    5477.949707    5387.724609 -4038.9729  5477.949707  164.933350  5387.724609  25.891602   64.333496        0.199951     1.0      5051.558105         False          False    True
7    5578.049561    5551.858154 -4038.9729  5578.049561  164.433350  5551.858154  25.991455    0.199951        0.199951     1.0      5051.558105         False          False    True
8    5741.782959    5552.158203 -4038.9729  5741.782959  163.933350  5552.158203  89.724854   99.899902        0.199951     1.0      5051.558105         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:15:31]  --------------------------------------------------------------------------------
[08/10 15:15:31]  Iteration: 9 (0 solution, 8 counterexamples)
[08/10 15:15:31]  Generator returned sat in 0.038025 secs.
[08/10 15:15:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:32]  Improved number of small numbers from 89 to 91 out of a max of 113
[08/10 15:15:32]  Verifer returned sat in 0.597319 secs.
[08/10 15:15:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4778.049316    4772.224609 -4038.973145  4778.049316  205.550293  4772.224609   0.024658    5.800049      -73.833496     1.0      4772.224609            -1             -1   False
1    4977.749756    4851.858154 -4038.973145  4977.749756  205.500488  4851.858154  25.691650  100.199951        0.199951     1.0      4952.058105         False          False   False
2    5077.249756    4952.157959 -4038.973145  5077.249756  199.699951  4952.157959  25.691650   99.400146       -0.300049     1.0      5051.558105         False          False    True
3    5177.549805    5051.858154 -4038.973145  5177.549805  199.700195  5051.858154  25.691650  100.000000        0.000000     1.0      5051.558105         False          False    True
4    5215.366577    5189.625000 -4038.973145  5215.366577  137.816772  5189.625000  25.691650    0.049927      -62.183228     1.0      5051.558105         False          False    True
5    5382.200073    5287.224609 -4038.973145  5382.200073  166.883423  5287.224609  30.141968   64.833496        0.199951     1.0      5051.558105         False          False    True
6    5482.250000    5389.224609 -4038.973145  5482.250000  164.883423  5389.224609  30.191895   62.833496        0.199951     1.0      5051.558105         False          False    True
7    5582.299927    5551.857910 -4038.973145  5582.299927  162.883423  5551.857910  30.241821    0.200195        0.199951     1.0      5051.558105         False          False    True
8    5742.983154    5552.158203 -4038.973145  5742.983154  160.883423  5552.158203  90.925049   99.899902        0.199951     1.0      5051.558105         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:15:32]  --------------------------------------------------------------------------------
[08/10 15:15:32]  Iteration: 10 (0 solution, 9 counterexamples)
[08/10 15:15:33]  Generator returned sat in 0.475200 secs.
[08/10 15:15:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:34]  Improved gap from 1/40 to 100
[08/10 15:15:34]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 15:15:34]  Verifer returned sat in 0.831668 secs.
[08/10 15:15:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5434.274902    5234.274658 -4038.973145  5434.274902     0.050000  5234.274658    0.050049   199.950195       99.950195     9.0      5234.274658            -1             -1     -1
1    5434.274902    5434.174561 -4038.973145  5434.274902   199.900000  5434.174561    0.050049     0.050293       -0.049805     9.0      5234.274658         False           True   True
2    5634.074707    5434.274658 -4038.973145  5634.074707   199.850098  5434.274658    0.050049   199.750000       99.750000     1.0      5634.024658          True           True  False
3    6630.624512    5634.274658 -4038.973145  6630.624512  1196.299805  5634.274658    0.099854   996.250000      996.250000     1.0      5634.024658         False          False  False
4    6630.624512    5734.224854 -4038.973145  6630.624512   596.149902  5734.224854    0.099854   896.299805      896.250000     2.0      5634.024658         False          False   True
5    6630.624512    5734.274658 -4038.973145  6630.624512   896.200195  5734.274658    0.099854   896.250000      796.250000     3.0      5634.024658         False          False   True
6    6930.574707    5834.274658 -4038.973145  6930.574707  1196.200195  5834.274658    0.099854  1096.200195      996.200195     4.0      5634.024658         False          False   True
7    7230.574707    5934.274902 -4038.973145  7230.574707  1396.200195  5934.274902  200.050049  1096.249756      996.250000     5.0      5634.024658         False          False   True
8    7230.574707    6134.274658 -4038.973145  7230.574707   696.100098  6134.274658  200.050049   896.250000      896.250000     6.0      5634.024658         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=3985/4.[0m
[08/10 15:15:35]  --------------------------------------------------------------------------------
[08/10 15:15:35]  Iteration: 11 (0 solution, 10 counterexamples)
[08/10 15:15:35]  Generator returned sat in 0.164862 secs.
[08/10 15:15:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:35]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:35]  Verifer returned sat in 0.140880 secs.
[08/10 15:15:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5434.274902    5234.274658 -4038.973145  5434.274902     0.050000  5234.274658    0.050049   199.950195       99.950195     9.0      5234.274658            -1             -1     -1
1    5434.274902    5434.174561 -4038.973145  5434.274902   199.900000  5434.174561    0.050049     0.050293       -0.049805     9.0      5234.274658         False           True   True
2    5634.074707    5435.274658 -4038.973145  5634.074707   199.850098  5435.274658    0.050049   198.750000       99.750000     1.0      5634.024658          True           True  False
3    6630.624512    5634.274658 -4038.973145  6630.624512  1195.299805  5634.274658    0.099854   996.250000      996.250000     1.0      5634.024658         False          False  False
4    6630.624512    5734.224854 -4038.973145  6630.624512   596.149902  5734.224854    0.099854   896.299805      896.250000     2.0      5634.024658         False          False   True
5    6630.624512    5734.274658 -4038.973145  6630.624512   896.200195  5734.274658    0.099854   896.250000      796.250000     3.0      5634.024658         False          False   True
6    6929.574707    5834.274658 -4038.973145  6929.574707  1195.200195  5834.274658    0.099854  1095.200195      995.200195     4.0      5634.024658         False          False   True
7    7229.574707    5934.274902 -4038.973145  7229.574707  1395.200195  5934.274902  199.050049  1096.249756      996.250000     5.0      5634.024658         False          False   True
8    7229.574707    6134.274658 -4038.973145  7229.574707   696.100098  6134.274658  199.050049   896.250000      896.250000     6.0      5634.024658         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=3985/4.[0m
[08/10 15:15:36]  --------------------------------------------------------------------------------
[08/10 15:15:36]  Iteration: 12 (0 solution, 11 counterexamples)
[08/10 15:15:38]  Generator returned sat in 1.784101 secs.
[08/10 15:15:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:38]  Improved number of small numbers from 111 to 113 out of a max of 113
[08/10 15:15:38]  Verifer returned sat in 0.268555 secs.
[08/10 15:15:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5830.562012    5528.262207 -4038.973389  5830.562012     0.050049  5528.262207     0.049805  302.250000      300.000000     9.0      5528.262207            -1             -1     -1
1    5830.562012    5630.512207 -4038.973389  5830.562012   302.237549  5630.512207     0.049805  200.000000      200.000000     9.0      5528.262207         False           True   True
2    5830.562012    5730.512207 -4038.973389  5830.562012   199.999756  5730.512207     0.049805  100.000000      100.000000     7.0      5830.512207          True           True  False
3    6630.624268    5730.512207 -4038.973389  6630.624268   900.062256  5730.512207     0.099609  900.012451      800.012451     7.0      5830.512207         False          False  False
4    6630.624268    5830.512207 -4038.973389  6630.624268    99.125000  5830.512207     0.099609  800.012451      700.012451     8.0      5830.512207         False          False   True
5    6630.624268    5931.512207 -4038.973389  6630.624268   398.750000  5931.512207     0.099609  699.012451      600.012451     3.0      5830.512207         False           True  False
6    6930.611816    6130.512207 -4038.973389  6930.611816   999.000000  6130.512207     0.099609  800.000000      800.000000     4.0      5830.512207         False          False  False
7    8529.111816    6130.524414 -4038.973389  8529.111816  2398.500000  6130.524414  1498.587158  900.000244      800.012451     5.0      5830.512207         False          False  False
8    8529.111816    6330.512207 -4038.973389  8529.111816   148.006104  6330.512207  1498.587158  700.012451      700.012451     6.0      5830.512207         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=3276851/4096.[0m
[08/10 15:15:39]  --------------------------------------------------------------------------------
[08/10 15:15:39]  Iteration: 13 (0 solution, 12 counterexamples)
[08/10 15:15:39]  Generator returned sat in 0.135574 secs.
[08/10 15:15:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:40]  Improved number of small numbers from 111 to 113 out of a max of 113
[08/10 15:15:40]  Verifer returned sat in 0.286359 secs.
[08/10 15:15:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5830.561768    5529.012207 -4038.973389  5830.561768     0.050049  5529.012207     0.049561  301.500000      300.000000     7.0      5529.012207            -1             -1     -1
1    5830.561768    5630.512207 -4038.973389  5830.561768   301.500000  5630.512207     0.049561  200.000000      200.000000     8.0      5529.012207         False          False   True
2    5830.561768    5730.512207 -4038.973389  5830.561768   199.999756  5730.512207     0.049561  100.000000      100.000000     7.0      5830.512207          True           True  False
3    6630.624023    5730.512207 -4038.973389  6630.624023   900.062256  5730.512207     0.099365  900.012451      800.012451     7.0      5830.512207         False          False  False
4    6630.624023    5830.512207 -4038.973389  6630.624023    98.750000  5830.512207     0.099365  800.012451      700.012451     8.0      5830.512207         False          False   True
5    6630.624023    5931.512207 -4038.973389  6630.624023   398.500000  5931.512207     0.099365  699.012451      600.012451     3.0      5830.512207         False           True  False
6    6930.611572    6130.512207 -4038.973389  6930.611572   999.000000  6130.512207     0.099365  800.000000      800.000000     4.0      5830.512207         False          False  False
7    8529.611572    6130.524414 -4038.973389  8529.611572  2399.000000  6130.524414  1499.086914  900.000244      800.012451     5.0      5830.512207         False          False  False
8    8529.611572    6330.511963 -4038.973389  8529.611572   148.006104  6330.511963  1499.086914  700.012695      700.012451     6.0      5830.512207         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=3276851/4096.[0m
[08/10 15:15:40]  --------------------------------------------------------------------------------
[08/10 15:15:40]  Iteration: 14 (0 solution, 13 counterexamples)
[08/10 15:15:42]  Generator returned sat in 1.223203 secs.
[08/10 15:15:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:42]  Improved gap from 1/800 to 100
[08/10 15:15:43]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:15:43]  Verifer returned sat in 0.593629 secs.
[08/10 15:15:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6347.162354    6147.012451 -3749.043213  6347.162354  200.149902  6147.012451    0.050049  200.099854      100.100098     6.0      6147.012451            -1             -1     -1
1    6347.212402    6247.012207 -3749.043213  6347.212402  200.149902  6247.012207    0.100098  100.100098        0.100098     3.0      6147.012451         False           True   True
2    6347.212402    6347.012207 -3749.043213  6347.212402  100.049805  6347.012207    0.100098    0.100098      -99.899902     3.0      6347.112305          True           True   True
3    6547.262207    6447.512451 -3749.043213  6547.262207  200.149902  6447.512451    0.149902   99.599854        0.100098     1.0      6347.112305         False           True  False
4    6647.312256    6547.162598 -3749.043213  6647.312256  199.649902  6547.162598    0.199951   99.949707        0.100098     1.0      6347.112305         False          False   True
5    6746.512451    6746.312256 -3749.043213  6746.512451  199.149902  6746.312256    0.199951    0.000244       -0.699707     1.0      6347.112305         False          False   True
6    7246.387207    6747.012451 -3749.043213  7246.387207  499.875000  6747.012451  399.274902  100.099854        0.100098     1.0      6347.112305         False          False   True
7    7645.662354    6847.162354 -3749.043213  7645.662354  499.375000  6847.162354  698.550049   99.949951        0.100098     1.0      6347.112305         False          False   True
8    8044.587402    6947.162354 -3749.043213  8044.587402  498.875000  6947.162354  997.475098   99.949951        0.100098     1.0      6347.112305         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/2048.[0m
[08/10 15:15:43]  --------------------------------------------------------------------------------
[08/10 15:15:43]  Iteration: 15 (0 solution, 14 counterexamples)
[08/10 15:15:45]  Generator returned sat in 1.195558 secs.
[08/10 15:15:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:45]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:45]  Verifer returned sat in 0.207904 secs.
[08/10 15:15:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6372.312256    6152.312256 -3722.343262  6372.312256  220.075195  6152.312256    0.024902  219.975098      151.975098     6.0      6152.312256            -1             -1     -1
1    6372.412354    6220.312256 -3722.343262  6372.412354  220.075195  6220.312256    0.125000  151.975098       51.975098     3.0      6152.312256         False           True   True
2    6372.412354    6347.012207 -3722.343262  6372.412354  151.950195  6347.012207    0.125000   25.275146      -48.024902     3.0      6372.287354          True           True   True
3    6572.437256    6500.312256 -3722.343262  6572.437256  225.300049  6500.312256    0.149902   71.975098       51.975098     1.0      6372.287354         False           True  False
4    6672.462158    6572.312256 -3722.343262  6672.462158  172.000000  6572.312256    0.174805   99.975098       51.975098     1.0      6372.287354         False          False   True
5    6746.487061    6720.312256 -3722.343262  6746.487061  174.000000  6720.312256    0.174805   26.000000       26.000000     1.0      6372.287354         False          False   True
6    7268.287109    6816.312256 -3722.343262  7268.287109  547.800049  6816.312256  395.999756   55.975098       51.975098     1.0      6372.287354         False          False   True
7    7368.312012    6920.312256 -3722.343262  7368.312012  156.000000  6920.312256  396.024658   51.975098       51.975098     1.0      6372.287354         False          False   True
8    7488.336914    6972.312256 -3722.343262  7488.336914  172.000000  6972.312256  416.049561   99.975098       51.975098     1.0      6372.287354         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=106445/2048.[0m
[08/10 15:15:46]  --------------------------------------------------------------------------------
[08/10 15:15:46]  Iteration: 16 (0 solution, 15 counterexamples)
[08/10 15:15:47]  Generator returned sat in 0.318626 secs.
[08/10 15:15:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:47]  Improved gap from 1/1600 to 23.4375
[08/10 15:15:48]  Improved number of small numbers from 60 to 69 out of a max of 114
[08/10 15:15:48]  Verifer returned sat in 1.502315 secs.
[08/10 15:15:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6315.455078    6292.013701 -4025.470947  6315.455078   23.440000  6292.013701    0.00125  23.440127       23.436436     1.0      6292.013701            -1             -1     -1
1    6315.455078    6292.017451 -3948.908506  6315.455078   23.440000  6292.017451    0.00125  23.436377       -0.001123     2.0      6292.013701         False          False   True
2    6315.457451    6315.454951 -3872.346191  6315.457451   23.438750  6315.454951    0.00125   0.001250      -23.436436     1.0      6315.456201          True           True  False
3    6438.893701    6374.807868 -3872.346006  6438.893701  123.437500  6374.807868    0.00125  64.084583        0.000000     1.0      6315.456201         False          False  False
4    6538.897451    6538.891201 -3872.346006  6538.897451  164.088333  6538.891201    0.00250   0.003750        0.002500     1.0      6315.456201         False          False  False
5    6538.903701    6538.892451 -3795.783506  6538.903701    0.010000  6538.892451    0.00250   0.008750      -23.428750     2.0      6315.456201         False          False   True
6    6984.269951    6662.329951 -3795.783506  6984.269951  445.375000  6662.329951  321.93750   0.002500        0.002500     1.0      6662.332451          True           True  False
7    6984.277451    6662.333701 -3722.343506  6984.277451    0.010000  6662.333701  321.93750   0.006250      -26.550000     1.0      6662.332451         False          False   True
8    7109.213701    6688.890137 -3720.729980  7109.213701  124.942500  6688.890137  321.93750  98.386064       -0.000225     1.0      6662.332451         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/400.[0m
[08/10 15:15:49]  --------------------------------------------------------------------------------
[08/10 15:15:49]  Iteration: 17 (0 solution, 16 counterexamples)
[08/10 15:15:50]  Generator returned sat in 0.611448 secs.
[08/10 15:15:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:50]  Improved gap from 54611/4200 to 100
[08/10 15:15:50]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:15:50]  Verifer returned sat in 0.577097 secs.
[08/10 15:15:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5292.713867    5292.613525 -3026.067139  5292.713867     0.100098  5292.613525   0.000000     0.100342        0.100098     2.0      5292.613525            -1             -1   False
1    5692.413574    5392.613770 -3026.067139  5692.413574   399.800049  5392.613770   0.000000   299.799805      299.799805     1.0      5292.613525         False          False   False
2    6492.613770    5492.513916 -3026.067139  6492.613770  1100.000000  5492.513916   0.000000  1000.099854     1000.000000     2.0      5292.613525         False          False   False
3    6492.613770    5492.613770 -3026.067139  6492.613770   234.925926  5492.613770   0.000000  1000.000000      900.000000     3.0      6492.613770         False          False   False
4    6492.613770    5692.513916 -3026.067139  6492.613770   353.888889  5692.513916   0.000000   800.099854      800.000000     3.0      6492.613770         False          False   False
5    6492.613770    5692.613770 -3026.067139  6492.613770   532.333333  5692.613770   0.000000   800.000000      700.000000     4.0      6492.613770         False          False   False
6    6492.613770    5890.813477 -3026.067139  6492.613770   800.000000  5890.813477   0.000000   601.800293      600.000000     5.0      6492.613770         False          False   False
7    7092.313477    5892.613770 -3026.067139  7092.313477  1201.500000  5892.613770   0.099854  1199.599854     1099.599854     6.0      6492.613770         False          False   False
8    7092.313477    6092.613525 -3026.067139  7092.313477  1199.500000  6092.613525   0.099854   999.600098      999.599854     7.0      6492.613770         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=4503961/4096.[0m
[08/10 15:15:51]  --------------------------------------------------------------------------------
[08/10 15:15:51]  Iteration: 18 (0 solution, 17 counterexamples)
[08/10 15:15:52]  Generator returned sat in 0.423942 secs.
[08/10 15:15:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:53]  Improved gap from 0 to 100
[08/10 15:15:54]  Improved number of small numbers from 88 to 94 out of a max of 114
[08/10 15:15:54]  Verifer returned sat in 1.552356 secs.
[08/10 15:15:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6376.909912    6292.613770 -3026.067383  6376.909912    0.050000  6292.613770       0.00   84.296143       84.296143     8.0      6292.613770            -1             -1     -1
1    6492.613525    6376.959717 -3026.067383  6492.613525  199.999756  6376.959717       0.00  115.653809       99.999756     1.0      6292.613770         False           True  False
2    6492.613525    6392.613770 -3026.067383  6492.613525  115.604004  6392.613770       0.00   99.999756       -0.000244     2.0      6492.613525         False          False  False
3    6508.167844    6492.613770 -3026.067383  6508.167844  115.554074  6492.613770       0.00   15.554074      -84.445926     1.0      6508.167844         False          False  False
4    6667.444881    6592.613770 -3026.067383  6667.444881  174.831111  6592.613770       0.00   74.831111      -25.168889     1.0      6508.167844         False          False  False
5    6856.360436    6692.613770 -3026.067383  6856.360436  263.746667  6692.613770       0.00  163.746667       63.746667     1.0      6508.167844         False          False  False
6    7089.733770    6856.410436 -3026.067383  7089.733770  397.120000  6856.410436       0.00  233.323333      197.120000     1.0      6508.167844         False          False  False
7    7453.590436    6992.613770 -3026.067383  7453.590436  597.180000  6992.613770       0.00  460.976667      460.976667     2.0      6508.167844         False          False  False
8    7889.883770    7089.783936 -3026.067383  7889.883770  897.270000  7089.783936       0.05  800.049834      797.220000     2.0      6508.167844         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=39861/50.[0m
[08/10 15:15:54]  --------------------------------------------------------------------------------
[08/10 15:15:54]  Iteration: 19 (0 solution, 18 counterexamples)
[08/10 15:15:56]  Generator returned sat in 0.829356 secs.
[08/10 15:15:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:56]  Improved gap from 1/120 to 100
[08/10 15:15:56]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:15:56]  Verifer returned sat in 0.672721 secs.
[08/10 15:15:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6088.973877    5485.623779 -3026.067383  6088.973877  603.550049  5485.623779   0.000000  603.350098      599.700195     6.0      5485.623779            -1             -1   False
1    6089.073975    5589.273682 -3026.067383  6089.073975  603.450195  5589.273682   0.000000  499.800293      499.800293     6.0      6089.073975         False          False   False
2    6192.623779    5689.273682 -3026.067383  6192.623779  603.350098  5689.273682   3.449951  499.900146      499.900146     7.0      6189.173828         False          False   False
3    6192.623779    5787.173828 -3026.067383  6192.623779  499.800049  5787.173828   3.449951  402.000000      399.900146     8.0      6189.173828         False          False    True
4    6392.723877    5889.273682 -3026.067383  6392.723877  602.100098  5889.273682   3.550049  499.900146      499.900146     7.0      6189.173828         False           True   False
5    6494.423828    5988.073730 -3026.067383  6494.423828  601.600098  5988.073730   5.250000  501.100098      499.900146     8.0      6189.173828         False          False    True
6    6594.423828    6088.973877 -3026.067383  6594.423828  601.100098  6088.973877   5.250000  500.199951      499.900146     9.0      6189.173828         False           True    True
7    6696.823975    6189.273682 -3026.067383  6696.823975  602.600098  6189.273682   7.650146  499.900146      499.900146     4.0      6189.173828         False           True   False
8    6799.023926    6289.273682 -3026.067383  6799.023926  602.100098  6289.273682   9.850098  499.900146      499.900146     5.0      6189.173828         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=2047591/4096.[0m
[08/10 15:15:57]  --------------------------------------------------------------------------------
[08/10 15:15:57]  Iteration: 20 (0 solution, 19 counterexamples)
[08/10 15:15:58]  Generator returned sat in 0.086308 secs.
[08/10 15:15:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:58]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:58]  Verifer returned sat in 0.156160 secs.
[08/10 15:15:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6088.973877    5485.623779 -3026.067383  6088.973877  603.550049  5485.623779   0.000000  603.350098      599.700195     6.0      5485.623779            -1             -1   False
1    6089.073975    5589.273682 -3026.067383  6089.073975  603.450195  5589.273682   0.000000  499.800293      499.800293     6.0      6089.073975         False          False   False
2    6191.623779    5689.273682 -3026.067383  6191.623779  602.350098  5689.273682   2.449951  499.900146      499.900146     7.0      6189.173828         False          False   False
3    6191.623779    5787.173828 -3026.067383  6191.623779  499.800049  5787.173828   2.449951  402.000000      399.900146     8.0      6189.173828         False          False    True
4    6392.223877    5889.273682 -3026.067383  6392.223877  602.600098  5889.273682   3.050049  499.900146      499.900146     7.0      6189.173828         False           True   False
5    6494.423828    5987.573730 -3026.067383  6494.423828  602.100098  5987.573730   5.250000  501.600098      499.900146     8.0      6189.173828         False          False    True
6    6594.423828    6088.973877 -3026.067383  6594.423828  601.600098  6088.973877   5.250000  500.199951      499.900146     9.0      6189.173828         False           True    True
7    6697.323975    6189.273682 -3026.067383  6697.323975  603.100098  6189.273682   8.150146  499.900146      499.900146     4.0      6189.173828         False           True   False
8    6800.023926    6289.273682 -3026.067383  6800.023926  602.600098  6289.273682  10.850098  499.900146      499.900146     5.0      6189.173828         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=2047591/4096.[0m
[08/10 15:15:58]  --------------------------------------------------------------------------------
[08/10 15:15:58]  Iteration: 21 (0 solution, 20 counterexamples)
[08/10 15:15:59]  Generator returned sat in 0.089233 secs.
[08/10 15:15:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:59]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:59]  Verifer returned sat in 0.181940 secs.
[08/10 15:15:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6088.973877    5486.623535 -3026.067627  6088.973877  603.549805  5486.623535   0.000000  602.350342      599.700195     6.0      5486.623535            -1             -1   False
1    6089.073730    5589.273438 -3026.067627  6089.073730  602.450195  5589.273438   0.000000  499.800293      499.800049     6.0      6089.073730         False          False   False
2    6191.623535    5689.273438 -3026.067627  6191.623535  602.350098  5689.273438   2.449951  499.900146      499.899902     7.0      6189.173584         False          False   False
3    6191.623535    5787.673584 -3026.067627  6191.623535  499.800049  5787.673584   2.449951  401.500000      399.899902     8.0      6189.173584         False          False    True
4    6392.723633    5888.773438 -3026.067627  6392.723633  602.600098  5888.773438   3.550049  500.400146      499.899902     7.0      6189.173584         False           True   False
5    6494.423584    5987.573486 -3026.067627  6494.423584  602.100098  5987.573486   5.250000  501.600098      499.899902     8.0      6189.173584         False          False    True
6    6594.423584    6088.973633 -3026.067627  6594.423584  601.600098  6088.973633   5.250000  500.199951      499.899902     9.0      6189.173584         False           True    True
7    6697.323730    6189.273438 -3026.067627  6697.323730  603.100098  6189.273438   8.150146  499.900146      499.899902     4.0      6189.173584         False           True   False
8    6800.023682    6289.273682 -3026.067627  6800.023682  602.600098  6289.273682  10.850098  499.899902      499.899902     5.0      6189.173584         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1023795/2048.[0m
[08/10 15:16:00]  --------------------------------------------------------------------------------
[08/10 15:16:00]  Iteration: 22 (0 solution, 21 counterexamples)
[08/10 15:16:01]  Generator returned sat in 0.131481 secs.
[08/10 15:16:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:01]  Improved number of small numbers from 107 to 113 out of a max of 113
[08/10 15:16:01]  Verifer returned sat in 0.177561 secs.
[08/10 15:16:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6088.973877    5487.248291 -3026.067871  6088.973877  603.549561  5487.248291   0.000000  601.725586      599.125732     6.0      5487.248291            -1             -1   False
1    6089.073242    5589.848145 -3026.067871  6089.073242  601.824951  5589.848145   0.000000  499.225098      499.225098     6.0      6089.073242         False          False   False
2    6191.623047    5689.273193 -3026.067871  6191.623047  601.774902  5689.273193   2.449707  499.900146      499.325195     7.0      6189.173340         False          False   False
3    6191.623047    5787.923340 -3026.067871  6191.623047  499.799805  5787.923340   2.449707  401.250000      399.325195     8.0      6189.173340         False          False    True
4    6392.723145    5889.023193 -3026.067871  6392.723145  602.350098  5889.023193   3.549805  500.150146      499.325195     7.0      6189.173340         False           True   False
5    6494.423096    5987.823242 -3026.067871  6494.423096  601.850098  5987.823242   5.249756  501.350098      499.325195     8.0      6189.173340         False          False    True
6    6594.423096    6088.973389 -3026.067871  6594.423096  601.350098  6088.973389   5.249756  500.199951      499.325195     9.0      6189.173340         False           True    True
7    6697.323242    6189.273193 -3026.067871  6697.323242  603.100098  6189.273193   8.149902  499.900146      499.325195     4.0      6189.173340         False           True   False
8    6800.023193    6289.273682 -3026.067871  6800.023193  602.600098  6289.273682  10.849854  499.899658      499.325195     5.0      6189.173340         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=511309/1024.[0m
[08/10 15:16:02]  --------------------------------------------------------------------------------
[08/10 15:16:02]  Iteration: 23 (0 solution, 22 counterexamples)
[08/10 15:16:03]  Generator returned sat in 0.834903 secs.
[08/10 15:16:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:03]  Improved gap from 1/800 to 100
[08/10 15:16:04]  Improved number of small numbers from 72 to 79 out of a max of 114
[08/10 15:16:04]  Verifer returned sat in 1.135009 secs.
[08/10 15:16:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t  losts_0,t       queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5191.123779    4991.123877 -3026.067871   5191.123779    603.549561  4991.123877        0.0    199.999902       99.999902     2.0      4991.123877            -1             -1   False
1    5191.123779    5091.123877 -3026.067871   5191.123779    199.950000  5091.123877        0.0     99.999902       -0.000098     2.0      5191.123779         False          False   False
2    5291.023877    5191.223877 -3026.067871   5291.023877    199.900000  5191.223877        0.0     99.800000       -0.100000     1.0      5291.023877         False          False   False
3    5391.073877    5391.023877 -3026.067871   5391.073877    199.850000  5391.023877        0.0      0.050000       -0.050000     1.0      5391.073877         False          False   False
4    6389.073877    5391.123877 -3026.067871   6389.073877    998.050000  5391.123877        0.0    997.950000      897.950000     1.0      5391.073877         False          False   False
5    7835.723877    5491.123877 -3026.067871   7835.723877   2444.600000  5491.123877        0.0   2344.600000     2244.600000     2.0      5391.073877         False          False   False
6   10828.673877    5591.123877 -3026.067871  10828.673877   5337.550000  5591.123877        0.0   5237.550000     5137.550000     3.0      5391.073877         False          False   False
7   16564.873877    5791.123877 -3026.067871  16564.873877  10973.750000  5791.123877        0.0  10773.750000    10773.750000     4.0      5391.073877         False          False   False
8   28337.123877    5791.124023 -3026.067871  28337.123877  22546.000000  5791.124023        0.0  22545.999854    22446.000000     5.0      5391.073877         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=22446.[0m
[08/10 15:16:05]  --------------------------------------------------------------------------------
[08/10 15:16:05]  Iteration: 24 (0 solution, 23 counterexamples)
[08/10 15:16:07]  Generator returned sat in 1.085794 secs.
[08/10 15:16:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:07]  Improved gap from 1/1200 to 100
[08/10 15:16:07]  Improved number of small numbers from 90 to 112 out of a max of 114
[08/10 15:16:07]  Verifer returned sat in 0.712655 secs.
[08/10 15:16:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5024.423828    5024.223877 -3026.068115  5024.423828    0.100098  5024.223877   0.000000    0.199951        0.199951     7.0      5024.223877            -1             -1     -1
1    5024.423828    5024.323975 -3026.068115  5024.423828    0.100098  5024.323975   0.000000    0.099854      -99.800049     3.0      5024.223877         False           True  False
2    5273.723877    5124.223877 -3026.068115  5273.723877  249.399902  5124.223877   0.100098  149.399902       49.399902     1.0      5024.223877         False          False  False
3    5373.823730    5324.223877 -3026.068115  5373.823730  249.499756  5324.223877   0.199951   49.399902       49.399902     1.0      5024.223877         False          False   True
4    5473.923828    5391.123779 -3026.068115  5473.923828  149.500000  5391.123779   0.300049   82.500000       49.399902     1.0      5024.223877         False          False   True
5    5574.323730    5490.890544 -3026.068115  5574.323730  182.899902  5490.890544   0.699951   82.733236       49.399902     1.0      5024.223877         False          False   True
6    5674.423828    5624.223877 -3026.068115  5674.423828  182.833333  5624.223877   0.800049   49.399902       49.399902     1.0      5024.223877         False          False   True
7    5774.523926    5713.123779 -3026.068115  5774.523926  149.500000  5713.123779   0.900146   60.500000       49.399902     1.0      5024.223877         False          False   True
8    5874.523926    5724.223877 -3026.068115  5874.523926  160.500000  5724.223877   0.900146  149.399902       49.399902     2.0      5024.223877         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=101171/2048.[0m
[08/10 15:16:08]  --------------------------------------------------------------------------------
[08/10 15:16:08]  Iteration: 25 (0 solution, 24 counterexamples)
[08/10 15:16:10]  Generator returned sat in 0.741490 secs.
[08/10 15:16:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:10]  Improved gap from 1/1600 to 23.4375
[08/10 15:16:10]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:16:10]  Verifer returned sat in 0.864467 secs.
[08/10 15:16:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5670.394531    5493.831787 -3595.676025  5670.394531  200.002686  5493.831787    0.002686  176.560059       76.560059     9.0      5493.831787            -1             -1     -1
1    5693.834473    5670.394287 -3595.676025  5693.834473  200.000000  5670.394287    0.002686   23.437500        0.000000     1.0      5693.831787         False           True   True
2    5738.212158    5714.771973 -3540.053955  5738.212158   67.815186  5714.771973    0.002686   23.437500       -0.000244     1.0      5738.209473         False          False   True
3    5738.217041    5738.211914 -3540.053955  5738.217041   23.442383  5738.211914    0.002686    0.002441      -99.995361     1.0      5738.214355         False          False   True
4    5984.594727    5938.209717 -3540.053955  5984.594727  246.380127  5938.209717   46.372559    0.012451        0.012451     1.0      5738.214355         False          False   True
5    5984.594727    5938.211914 -3463.493652  5984.594727    0.010000  5938.211914   46.372559    0.010254      -23.427246     2.0      5738.214355         False          False   True
6    6430.964355    5961.649414 -3463.493652  6430.964355  446.379883  5961.649414  369.302490  100.012451        0.012451     1.0      6061.661865          True           True  False
7    6430.964355    6061.649658 -3386.931396  6430.964355    0.010000  6061.649658  369.302490    0.012207      -23.425293     2.0      6061.661865         False          False   True
8    6677.332031    6085.087158 -3386.931396  6677.332031  246.379883  6085.087158  492.232422  100.012451        0.012451     1.0      6061.661865         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=51/4096.[0m
[08/10 15:16:11]  --------------------------------------------------------------------------------
[08/10 15:16:11]  Iteration: 26 (0 solution, 25 counterexamples)
[08/10 15:16:12]  Generator returned sat in 0.175591 secs.
[08/10 15:16:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:13]  Improved gap from 375/16 to 23.4375
[08/10 15:16:13]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 15:16:13]  Verifer returned sat in 1.103407 secs.
[08/10 15:16:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5455.392090    5444.451904 -3540.056396  5455.392090    0.002441  5444.451904    0.000000   10.940186       10.939941     1.0      5444.451904            -1             -1   False
1    5455.396973    5455.394531 -3540.056396  5455.396973   10.945068  5455.394531    0.000000    0.002441      -89.055176     1.0      5444.451904         False          False   False
2    5546.014404    5546.014404 -3540.056396  5546.014404   90.619873  5546.014404    0.000000    0.000000      -98.437744     1.0      5444.451904         False          False   False
3    5649.142090    5647.056152 -3540.056152  5649.142090  103.127686  5647.056152    0.000000    2.085938      -95.309814     1.0      5444.451904         False          False   False
4    6052.264648    5843.890625 -3540.056152  6052.264648  405.208496  5843.890625  207.800049    0.573975        0.012695     1.0      5444.451904         False          False   False
5    6052.264648    5844.451904 -3463.493652  6052.264648    0.010000  5844.451904  207.800049    0.012695      -23.424805     2.0      5444.451904         False          False    True
6    6649.126953    5967.889404 -3463.493652  6649.126953  596.875000  5967.889404  681.224854    0.012695        0.012695     1.0      5967.902100          True           True   False
7    6649.126953    5967.889404 -3389.492188  6649.126953    0.010000  5967.889404  681.224854    0.012695      -25.985840     1.0      5967.902100         False          False    True
8    6775.113037    5993.887939 -3389.492188  6775.113037  125.998779  5993.887939  681.224854  100.000244        0.000244     1.0      5967.902100         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=13/1024.[0m
[08/10 15:16:14]  --------------------------------------------------------------------------------
[08/10 15:16:14]  Iteration: 27 (0 solution, 26 counterexamples)
[08/10 15:16:15]  Generator returned sat in 0.501162 secs.
[08/10 15:16:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:16]  Improved gap from 0 to 100
[08/10 15:16:16]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 15:16:16]  Verifer returned sat in 0.863561 secs.
[08/10 15:16:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5967.901855    5467.802246 -3663.156494  5967.901855  500.099854  5467.802246    0.000000  500.099609      400.349854     2.0      5467.802246            -1             -1   False
1    5967.901855    5567.552246 -3663.156494  5967.901855  500.000000  5567.552246    0.000000  400.349609      300.349854     3.0      5967.901855         False          False   False
2    6067.452148    5667.552246 -3663.156494  6067.452148  499.899902  5667.552246    0.000000  399.899902      299.900146     3.0      6067.452148         False          False   False
3    6067.452148    5767.552002 -3663.156494  6067.452148    0.100098  5767.552002    0.000000  299.900146      199.900146     4.0      6067.452148         False          False   False
4    6067.452148    5892.877197 -3663.156494  6067.452148  299.799805  5892.877197    0.000000  174.574951       99.900146     5.0      6067.452148         False          False   False
5    6368.102051    6067.552002 -3663.156494  6368.102051  475.224854  6067.552002    0.100098  300.449951      300.449951     1.0      6067.452148         False          False   False
6    6542.376953    6093.877197 -3663.156494  6542.376953  474.724854  6093.877197   74.375000  374.124756      300.449951     2.0      6067.452148         False          False    True
7    6642.477051    6267.552002 -3663.156494  6642.477051  474.224854  6267.552002   74.475098  300.449951      300.449951     3.0      6067.452148         False          False    True
8    6815.751953    6367.552002 -3663.156494  6815.751953  473.724854  6367.552002  147.750000  300.449951      300.449951     4.0      6067.452148         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1230643/4096.[0m
[08/10 15:16:17]  --------------------------------------------------------------------------------
[08/10 15:16:17]  Iteration: 28 (0 solution, 27 counterexamples)
[08/10 15:16:19]  Generator returned sat in 1.034875 secs.
[08/10 15:16:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:19]  Improved gap from 1/600 to 0
[08/10 15:16:20]  Improved number of small numbers from 74 to 84 out of a max of 114
[08/10 15:16:20]  Verifer returned sat in 0.989316 secs.
[08/10 15:16:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5667.553669    5567.548828 -3663.156494  5667.553669  500.099854  5567.548828   0.000833  100.004007      100.000833     7.0      5567.548828            -1             -1     -1
1    5667.553669    5667.552002 -3663.156494  5667.553669  100.003418  5667.552002   0.000833    0.000833        0.000833     3.0      5667.552835         False           True   True
2    5767.555335    5766.552002 -3663.156494  5767.555335  100.002500  5766.552002   0.001667    1.001667        0.001667     1.0      5767.553669         False           True  False
3    5867.556169    5867.552002 -3663.156494  5867.556169  101.002500  5867.552002   0.002500    0.001667        0.001667     1.0      5767.553669         False          False   True
4    5968.057002    5967.552002 -3663.156494  5968.057002  100.502500  5967.552002   0.503333    0.001667        0.001667     1.0      5767.553669         False          False   True
5    6068.057835    5968.050537 -3663.156494  6068.057835  100.002500  5968.050537   0.504167   99.503132        0.001667     1.0      5767.553669         False          False   True
6    6068.057835    6067.552835 -3563.158936  6068.057835   99.502500  6067.552835   0.504167    0.000833       -0.000775     2.0      5767.553669         False          False   True
7    6068.067002    6067.554502 -3463.167480  6068.067002    0.010000  6067.554502   0.504167    0.008333       -0.000153     1.0      6067.562835          True           True  False
8    6068.068669    6067.563477 -3363.169189  6068.068669    0.010000  6067.563477   0.504167    0.001025       -0.000195     1.0      6067.562835         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/600.[0m
[08/10 15:16:20]  --------------------------------------------------------------------------------
[08/10 15:16:20]  Iteration: 29 (0 solution, 28 counterexamples)
[08/10 15:16:21]  Generator returned sat in 0.404152 secs.
[08/10 15:16:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:23]  Improved gap from 0 to 23.4375
[08/10 15:16:24]  Improved number of small numbers from 60 to 67 out of a max of 114
[08/10 15:16:24]  Verifer returned sat in 2.141361 secs.
[08/10 15:16:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5667.553711    5667.553669 -3763.160645  5667.553711   42.85500  5667.553669     0.0000   0.000042       -0.002441     1.0      5667.553669            -1             -1   False
1    5710.406169    5667.556169 -3706.010661  5710.406169   42.85250  5667.556169     0.0000  42.850000        0.000000     1.0      5710.406169         False          False   False
2    5810.421169    5767.541169 -3706.010661  5810.421169  142.86500  5767.541169     0.0025  42.877500        0.012500     1.0      5710.406169         False          False   False
3    5910.408669    5886.968669 -3706.010661  5910.408669  142.86500  5886.968669     0.0025  23.437500        0.000000     1.0      5710.406169         False          False    True
4    6284.408669    6010.406169 -3706.010661  6284.408669  397.43750  6010.406169   273.9900   0.012500        0.012500     1.0      5710.406169         False          False    True
5    6284.408669    6010.406169 -3629.448161  6284.408669    0.01000  6010.406169   273.9900   0.012500      -23.425000     1.0      5710.406169         False          False    True
6    6407.848669    6133.843669 -3629.448161  6407.848669  123.45250  6133.843669   273.9925   0.012500        0.012500     1.0      5710.406169         False          False    True
7    6407.848669    6133.843669 -3552.885742  6407.848669    0.01000  6133.843669   273.9925   0.012500      -23.425081     1.0      5710.406169         False          False    True
8    6471.574919    6157.281250 -3552.885742  6471.574919   63.73875  6157.281250   273.9925  40.301169      -59.698831     1.0      5710.406169         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/80.[0m
[08/10 15:16:24]  --------------------------------------------------------------------------------
[08/10 15:16:24]  Iteration: 30 (0 solution, 29 counterexamples)
[08/10 15:16:27]  Generator returned sat in 1.607354 secs.
[08/10 15:16:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:27]  Improved gap from 0 to 1.5625
[08/10 15:16:27]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:16:27]  Verifer returned sat in 0.528032 secs.
[08/10 15:16:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5711.896240    5711.895996 -3807.500732  5711.896240    0.100098  5711.895996   0.000000    0.000244        0.000000     2.0      5711.895996            -1             -1   False
1    5861.533691    5760.958740 -3807.500732  5861.533691  149.637695  5760.958740   0.000000  100.574951       49.637451     1.0      5711.895996         False          False   False
2    5910.496338    5910.396240 -3807.500732  5910.496338  149.537598  5910.396240   0.000000    0.100098       -1.399902     1.0      5910.496338         False          False   False
3    6061.733643    6011.896240 -3807.500732  6061.733643  151.337402  6011.896240   0.100098   49.737305       49.737305     1.0      5910.496338         False          False   False
4    6161.833740    6065.658691 -3807.500732  6161.833740  149.837402  6065.658691   0.200195   95.974854       49.737305     1.0      5910.496338         False          False    True
5    6214.196289    6211.796143 -3807.500732  6214.196289  148.337402  6211.796143   0.200195    2.199951        2.099854     1.0      5910.496338         False          False    True
6    6214.196289    6211.896240 -3709.600586  6214.196289    2.000000  6211.896240   0.200195    2.099854        0.000000     2.0      5910.496338         False          False    True
7    6214.196289    6213.996094 -3611.163086  6214.196289    2.000000  6213.996094   0.200195    0.000000       -1.562500     3.0      5910.496338         False          False    True
8    6216.196289    6215.558838 -3611.163086  6216.196289    2.000000  6215.558838   0.200195    0.437256      -99.562500     1.0      5910.496338         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=50931/1024.[0m
[08/10 15:16:28]  --------------------------------------------------------------------------------
[08/10 15:16:28]  Iteration: 31 (0 solution, 30 counterexamples)
[08/10 15:16:29]  Generator returned sat in 0.190177 secs.
[08/10 15:16:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:30]  Improved gap from 25/16 to 1.5625
[08/10 15:16:30]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 15:16:30]  Verifer returned sat in 0.889042 secs.
[08/10 15:16:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7194.620850    7094.771240 -5190.375732  7194.620850    0.049805  7094.771240    0.000000   99.849609       99.849609     2.0       7094.77124            -1             -1   False
1    7194.921143    7194.670898 -5190.375732  7194.921143  100.149902  7194.670898    0.050049    0.200195        0.099854     1.0       7094.77124         False          False   False
2    7294.871094    7240.533447 -5190.375732  7294.871094  100.150146  7240.533447    0.050049   54.287598        0.049805     1.0       7094.77124         False          False    True
3    7394.970947    7394.771240 -5190.375732  7394.970947  154.387451  7394.771240    0.099854    0.099854        0.099854     1.0       7094.77124         False          False    True
4    7547.258545    7494.770996 -5190.375732  7547.258545  152.387451  7494.770996   52.387451    0.100098        0.099854     1.0       7094.77124         False          False    True
5    7697.545898    7494.771240 -5190.375732  7697.545898  150.387451  7494.771240  102.674805  100.099854        0.099854     2.0       7094.77124         False          False    True
6    7745.833496    7594.921094 -5138.763184  7745.833496  148.387451  7594.921094  102.674805   48.237598        0.000000     1.0       7094.77124         False          False    True
7    7745.833496    7643.158691 -5040.325684  7745.833496    2.000000  7643.158691  102.674805    0.000000       -1.562500     2.0       7094.77124         False          False    True
8    7747.833496    7644.721191 -4941.888184  7747.833496    2.000000  7644.721191  102.674805    0.437500       -1.125000     1.0       7094.77124         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=409/4096.[0m
[08/10 15:16:31]  --------------------------------------------------------------------------------
[08/10 15:16:31]  Iteration: 32 (0 solution, 31 counterexamples)
[08/10 15:16:33]  Generator returned sat in 1.749811 secs.
[08/10 15:16:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:34]  Improved gap from 0 to 0
[08/10 15:16:34]  Improved number of small numbers from 82 to 95 out of a max of 114
[08/10 15:16:34]  Verifer returned sat in 0.825326 secs.
[08/10 15:16:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6901.169678    6801.171143 -4896.775635  6901.169678    0.049561  6801.171143        0.0   99.998535       99.998535     7.0      6801.171143            -1             -1     -1
1    7001.169678    6901.170898 -4896.775635  7001.169678  199.998535  6901.170898        0.0   99.998779       99.998535     1.0      6801.171143         False           True  False
2    7101.169678    7001.171143 -4896.775635  7101.169678  199.998779  7001.171143        0.0   99.998535       99.998535     1.0      6801.171143         False          False  False
3    7201.172393    7101.170898 -4896.775635  7201.172393  200.001250  7101.170898        0.0  100.001494      100.001250     1.0      6801.171143         False          False  False
4    7201.172393    7201.162354 -4896.775635  7201.172393    0.010000  7201.162354        0.0    0.010039        0.001250     2.0      6801.171143         False          False  False
5    7201.172393    7201.171143 -4796.776885  7201.172393    0.010000  7201.171143        0.0    0.001250        0.000000     3.0      6801.171143         False          False  False
6    7201.181143    7201.172393 -4696.785645  7201.181143    0.010000  7201.172393        0.0    0.008750       -0.000010     4.0      6801.171143         False          False  False
7    7201.182393    7201.182393 -4596.787109  7201.182393    0.010000  7201.182393        0.0    0.000000       -0.000225     1.0      7201.182393          True           True  False
8    7201.192393    7201.192383 -4596.786865  7201.192393    0.010000  7201.192383        0.0    0.000010      -99.989980     1.0      7201.182393         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409611/4096.[0m
[08/10 15:16:35]  --------------------------------------------------------------------------------
[08/10 15:16:35]  Iteration: 33 (0 solution, 32 counterexamples)
[08/10 15:16:41]  Generator returned sat in 5.408003 secs.
[08/10 15:16:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:44]  Improved gap from 23/102400 to 0
[08/10 15:16:45]  Improved number of small numbers from 65 to 104 out of a max of 114
[08/10 15:16:45]  Verifer returned sat in 3.450039 secs.
[08/10 15:16:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5800.188965    5500.689209 -3596.293701  5800.188965    0.001465  5500.689209        0.0  299.499756      299.499756     7.0      5500.689209            -1             -1    True
1    5800.188965    5600.688965 -3596.293701  5800.188965    0.001465  5600.688965        0.0  199.500000      199.499756     5.0      5500.689209         False          False    True
2    5800.188965    5600.689209 -3596.293701  5800.188965  199.499756  5600.689209        0.0  199.499756       99.499756     6.0      5500.689209         False          False    True
3    5800.188965    5700.689209 -3595.793457  5800.188965  199.499756  5700.689209        0.0   99.499756        0.000000     7.0      5500.689209         False          False    True
4    5900.189209    5800.188965 -3595.793457  5900.189209  199.500000  5800.188965        0.0  100.000244        0.000244     8.0      5500.689209         False          False    True
5    5900.189209    5900.189049 -3495.796875  5900.189209    0.010000  5900.189049        0.0    0.000160       -0.003174     2.0      5900.189209          True           True   False
6    5900.199049    5900.192383 -3395.803711  5900.199049    0.010000  5900.192383        0.0    0.006667       -0.000169     1.0      5900.189209         False          False   False
7    5900.202383    5900.200716 -3295.806885  5900.202383    0.010000  5900.200716        0.0    0.001667       -0.000010     1.0      5900.189209         False          False   False
8    5900.210716    5900.204102 -3295.806875  5900.210716    0.010000  5900.204102        0.0    0.006615      -99.991667     1.0      5900.189209         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=408579/2048.[0m
[08/10 15:16:45]  --------------------------------------------------------------------------------
[08/10 15:16:45]  Iteration: 34 (0 solution, 33 counterexamples)
[08/10 15:16:47]  Generator returned sat in 0.939068 secs.
[08/10 15:16:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:50]  Improved gap from 103/61440 to 0
[08/10 15:16:51]  Improved number of small numbers from 67 to 112 out of a max of 114
[08/10 15:16:51]  Verifer returned sat in 3.291148 secs.
[08/10 15:16:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4838.892090    4838.892090 -4118.746826  4838.892090  2.005833  4838.892090        0.0  0.000000        0.000000     3.0      4838.892090            -1             -1    True
1    4840.897461    4840.896973 -4020.754150  4840.897461  2.005371  4840.896973        0.0  0.000488       -0.001953     1.0      4840.897461         False          False    True
2    4840.899902    4840.899414 -3920.754883  4840.899902  0.002930  4840.899414        0.0  0.000488       -0.000244     1.0      4840.899902         False          False    True
3    4841.907715    4840.900391 -3821.762695  4841.907715  1.008301  4840.900391        0.0  1.007324       -0.000244     1.0      4840.899902         False          False    True
4    4841.908691    4841.908203 -3721.763916  4841.908691  1.008301  4841.908203        0.0  0.000488       -0.000488     1.0      4840.899902         False          False    True
5    4841.919434    4841.909180 -3621.774170  4841.919434  0.011230  4841.909180        0.0  0.010254        0.000000     1.0      4840.899902         False          False    True
6    4841.919434    4841.919434 -3521.774902  4841.919434  0.010000  4841.919434        0.0  0.000000       -0.000732     2.0      4840.899902         False          False    True
7    4841.938477    4841.928965 -3421.793701  4841.938477  0.019043  4841.928965        0.0  0.009512       -0.000488     1.0      4840.899902         False          False    True
8    4841.938965    4841.938965 -3421.793457  4841.938965  0.010000  4841.938965        0.0  0.000000      -99.999756     1.0      4840.899902         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 15:16:51]  --------------------------------------------------------------------------------
[08/10 15:16:51]  Iteration: 35 (0 solution, 34 counterexamples)
[08/10 15:16:56]  Generator returned sat in 4.153047 secs.
[08/10 15:16:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:57]  Improved gap from 1/8192 to 100
[08/10 15:16:57]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:16:57]  Verifer returned sat in 0.427584 secs.
[08/10 15:16:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4541.452637    3841.502686 -3121.357666  4541.452637     0.050000  3841.502686        0.0   699.949951      699.949951     5.0      3841.502686            -1             -1    True
1    4541.452637    3841.502930 -3121.357666  4541.452637     0.050000  3841.502930        0.0   699.949707      599.949951     2.0      3841.502686         False          False    True
2    4941.552734    3941.502930 -3121.357666  4941.552734  1100.049805  3941.502930        0.0  1000.049805      900.050049     3.0      3841.502686         False          False    True
3    4941.552734    4041.502686 -3121.357666  4941.552734   134.308642  4041.502686        0.0   900.050049      800.050049     4.0      4941.552734         False          False    True
4    4941.552734    4141.502930 -3121.357666  4941.552734   200.962963  4141.502930        0.0   800.049805      700.050049     5.0      4941.552734         False          False    True
5    4941.552734    4241.502686 -3121.357666  4941.552734   300.944444  4241.502686        0.0   700.050049      600.050049     6.0      4941.552734         False          False    True
6    4941.552734    4441.502686 -3121.357666  4941.552734   450.916667  4441.502686        0.0   500.050049      500.050049     7.0      4941.552734         False          False    True
7    5117.377686    4541.502686 -3121.357666  5117.377686   675.875000  4541.502686        0.0   575.875000      575.875000     6.0      4941.552734         False          False    True
8    5554.815186    4541.502930 -3121.357666  5554.815186  1013.312500  4541.502930        0.0  1013.312256      913.312500     7.0      4941.552734         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=4200243/4096.[0m
[08/10 15:16:58]  --------------------------------------------------------------------------------
[08/10 15:16:58]  Iteration: 36 (0 solution, 35 counterexamples)
[08/10 15:17:01]  Generator returned sat in 2.671697 secs.
[08/10 15:17:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:02]  Improved number of small numbers from 99 to 113 out of a max of 113
[08/10 15:17:02]  Verifer returned sat in 0.274919 secs.
[08/10 15:17:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4441.502441    3841.502686 -3121.357666  4441.502441   599.999756  3841.502686        0.0   599.999756      599.999756     2.0      3841.502686            -1             -1    True
1    4441.502686    3841.502686 -3121.357666  4441.502686   600.000000  3841.502686        0.0   600.000000      500.000000     2.0      3841.502686         False          False    True
2    4941.552490    3941.502686 -3121.357666  4941.552490  1100.049805  3941.502686        0.0  1000.049805      900.049805     3.0      3841.502686         False          False    True
3    4941.552490    4041.502686 -3121.357666  4941.552490    47.916748  4041.502686        0.0   900.049805      800.049805     4.0      4941.552490         False          False    True
4    4941.552490    4141.502686 -3121.357666  4941.552490   148.916748  4141.502686        0.0   800.049805      700.049805     5.0      4941.552490         False          False    True
5    4941.552490    4241.502686 -3121.357666  4941.552490   299.916748  4241.502686        0.0   700.049805      600.049805     6.0      4941.552490         False          False    True
6    4941.552490    4441.502686 -3121.357666  4941.552490   450.916748  4441.502686        0.0   500.049805      500.049805     6.0      4941.552490         False          False    True
7    5093.419434    4541.502686 -3121.357666  5093.419434   651.916748  4541.502686        0.0   551.916748      551.916748     6.0      4941.552490         False          False    True
8    5394.419434    4541.502686 -3121.357666  5394.419434   852.916748  4541.502686        0.0   852.916748      752.916748     6.0      4941.552490         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2100121/2048.[0m
[08/10 15:17:02]  --------------------------------------------------------------------------------
[08/10 15:17:02]  Iteration: 37 (0 solution, 36 counterexamples)
[08/10 15:17:12]  Generator returned sat in 8.488706 secs.
[08/10 15:17:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:12]  Improved gap from 0 to 100
[08/10 15:17:13]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:17:13]  Verifer returned sat in 0.625231 secs.
[08/10 15:17:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4441.152588    4341.252686 -2924.077637  4441.152588    0.100098  4341.252686   0.000000  99.899902       -0.099854     9.0      4341.252686            -1             -1     -1
1    4541.252441    4441.252686 -2924.077637  4541.252441  199.999756  4441.252686   0.000000  99.999756        0.000000     1.0      4341.252686         False           True  False
2    4641.152588    4541.252441 -2924.077637  4641.152588  199.899902  4541.252441   0.000000  99.900146       -0.099854     2.0      4641.152588         False          False  False
3    4741.252441    4641.252686 -2924.077637  4741.252441  200.000000  4641.252686   0.000000  99.999756        0.000000     1.0      4641.152588         False          False  False
4    4789.752686    4775.785889 -2924.077637  4789.752686  148.500000  4775.785889   0.000000  13.966797      -51.499756     1.0      4641.152588         False          False  False
5    4941.552490    4941.252441 -2924.077637  4941.552490  165.766602  4941.252441   0.100098   0.199951        0.199951     1.0      4641.152588         False          False  False
6    5106.619141    4976.785889 -2924.077637  5106.619141  165.266602  4976.785889  65.166748  64.666504        0.199951     1.0      4641.152588         False          False   True
7    5206.719238    5077.285645 -2924.077637  5206.719238  164.766602  5077.285645  65.266846  64.166748        0.199951     1.0      4641.152588         False          False   True
8    5306.819092    5141.552246 -2924.077637  5306.819092  164.266602  5141.552246  65.366699  99.900146        0.199951     1.0      4641.152588         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:17:13]  --------------------------------------------------------------------------------
[08/10 15:17:13]  Iteration: 38 (0 solution, 37 counterexamples)
[08/10 15:17:17]  Generator returned sat in 2.861650 secs.
[08/10 15:17:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:18]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/10 15:17:18]  Verifer returned sat in 0.577084 secs.
[08/10 15:17:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4441.352539    4341.402344 -2924.077637  4441.352539   200.000000  4341.402344   0.000000   99.950195       99.950195     3.0      4341.402344            -1             -1    True
1    4541.352295    4441.402344 -2924.077637  4541.352295   199.949951  4441.402344   0.000000   99.949951       99.949951     1.0      4541.352295         False          False    True
2    4541.452393    4541.402344 -2924.077637  4541.452393   100.050049  4541.402344   0.000000    0.050049        0.050049     1.0      4541.452393         False          False    True
3    4841.402344    4541.402344 -2924.077637  4841.402344   300.000000  4541.402344   0.000000  300.000000      200.000000     1.0      4541.452393         False          False    True
4    4992.902344    4741.352295 -2924.077637  4992.902344   451.500000  4741.352295   0.000000  251.550049      251.500000     2.0      4541.452393         False          False    True
5    5420.102295    4741.402588 -2924.077637  5420.102295   678.750000  4741.402588   0.000000  678.699707      578.699951     3.0      4541.452393         False          False    True
6    5761.027588    4841.402344 -2924.077637  5761.027588  1019.625000  4841.402344   0.000000  919.625244      819.625244     4.0      4541.452393         False          False    True
7    5861.527344    5041.402344 -2924.077637  5861.527344  1020.125000  5041.402344   0.449951  819.675049      819.675049     3.0      5861.077393          True           True   False
8    5861.527344    5041.402588 -2924.077637  5861.527344   510.062500  5041.402588   0.449951  819.674805      719.675049     4.0      5861.077393         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3357389/4096.[0m
[08/10 15:17:18]  --------------------------------------------------------------------------------
[08/10 15:17:18]  Iteration: 39 (0 solution, 38 counterexamples)
[08/10 15:17:22]  Generator returned sat in 1.954000 secs.
[08/10 15:17:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:22]  Improved gap from 1/1200 to 100
[08/10 15:17:22]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 15:17:22]  Verifer returned sat in 0.528996 secs.
[08/10 15:17:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4439.952344    4439.902100 -3022.67749  4439.952344    0.050049  4439.902100    0.000000    0.050244       -0.049854     2.0        4439.9021            -1             -1   False
1    4539.952148    4440.002197 -3022.67749  4539.952148  100.050049  4440.002197    0.000000   99.949951       -0.050049     1.0        4439.9021         False          False   False
2    4640.002197    4540.002344 -3022.67749  4640.002197  200.000000  4540.002344    0.000000   99.999854        0.000000     1.0        4439.9021         False          False   False
3    4840.652344    4640.002197 -3022.67749  4840.652344  300.650000  4640.002197    0.000000  200.650146      100.650146     2.0        4439.9021         False          False   False
4    4840.652344    4740.127197 -3022.67749  4840.652344  200.600098  4740.127197    0.000000  100.525146        0.650146     2.0        4439.9021         False          False   False
5    5040.752197    4940.002197 -3022.67749  5040.752197  300.625000  4940.002197    0.050049  100.699951      100.699951     1.0        4439.9021         False          False   False
6    5240.177246    5040.002197 -3022.67749  5240.177246  300.125000  5040.002197   99.475098  100.699951      100.699951     2.0        4439.9021         False          False    True
7    5439.102295    5140.002197 -3022.67749  5439.102295  299.625000  5140.002197  198.400146  100.699951      100.699951     2.0        4439.9021         False          False    True
8    5637.527344    5240.002197 -3022.67749  5637.527344  299.125000  5240.002197  296.825195  100.699951      100.699951     2.0        4439.9021         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=412467/4096.[0m
[08/10 15:17:23]  --------------------------------------------------------------------------------
[08/10 15:17:23]  Iteration: 40 (0 solution, 39 counterexamples)
[08/10 15:17:29]  Generator returned sat in 4.502201 secs.
[08/10 15:17:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:30]  Improved gap from 1/1200 to 23.4375
[08/10 15:17:31]  Improved number of small numbers from 78 to 112 out of a max of 114
[08/10 15:17:31]  Verifer returned sat in 2.272935 secs.
[08/10 15:17:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4890.002197    4366.464600 -2949.140137  4890.002197  523.437500  4366.464600   0.100098  523.437500       523.43750     2.0        4366.4646            -1             -1     -1
1    4890.002197    4366.564453 -2949.140137  4890.002197  523.337402  4366.564453   0.100098  523.337646       423.43750     2.0        4889.9021         False          False   True
2    4890.002197    4513.202148 -2949.140137  4890.002197  376.600098  4513.202148   0.100098  376.699951       323.43750     3.0        4889.9021         False          False   True
3    4890.002197    4566.464844 -2949.140137  4890.002197  376.600000  4566.464844   0.100098  323.437256       223.43750     4.0        4889.9021         False          False   True
4    4890.002197    4766.464600 -2949.140137  4890.002197  188.300000  4766.464600   0.100098  123.437500       123.43750     5.0        4889.9021         False          False   True
5    4890.002197    4842.727051 -2949.140137  4890.002197   94.150000  4842.727051   0.100098   47.175049        23.43750     6.0        4889.9021         False          False   True
6    4890.002197    4866.464600 -2872.577637  4890.002197   47.075000  4866.464600   0.100098   23.437500         0.00000     7.0        4889.9021         False          False   True
7    4890.102197    4889.902100 -2796.015137  4890.102197   23.537500  4889.902100   0.100098    0.100000       -23.33750     8.0        4889.9021         False          False   True
8    5076.658447    4913.339844 -2796.015137  5076.658447  186.656250  4913.339844   0.100098  163.218506        63.21875     1.0        4889.9021         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1734809/4096.[0m
[08/10 15:17:32]  --------------------------------------------------------------------------------
[08/10 15:17:32]  Iteration: 41 (0 solution, 40 counterexamples)
[08/10 15:17:45]  Generator returned sat in 12.591146 secs.
[08/10 15:17:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:46]  Improved gap from 0 to 100
[08/10 15:17:47]  Improved number of small numbers from 80 to 82 out of a max of 114
[08/10 15:17:47]  Verifer returned sat in 1.209930 secs.
[08/10 15:17:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4466.564453      4366.4646 -2949.140381  4466.564453  100.099854    4366.4646      0.050  100.049854      100.049854     2.0        4366.4646            -1             -1     -1
1    4466.564600      4366.4646 -2949.140381  4466.564600  100.050000    4366.4646      0.050  100.050000        0.050000     2.0        4466.5146         False           True   True
2    4566.564600      4468.4146 -2949.140381  4566.564600  200.050000    4468.4146      0.050   98.100000        0.050000     1.0        4466.5146         False           True  False
3    4666.664600      4665.5146 -2949.140381  4666.664600  198.200000    4665.5146      0.100    1.050000        0.100000     1.0        4666.5646         False          False  False
4    4766.714600      4729.1896 -2949.140381  4766.714600  101.100000    4729.1896      0.150   37.375000        0.100000     1.0        4666.5646         False          False   True
5    4781.889600      4781.6896 -2949.140381  4781.889600   52.550000    4781.6896      0.150    0.050000      -84.725000     1.0        4666.5646         False          False   True
6    5174.439600      4868.3146 -2949.140381  5174.439600  392.600000    4868.3146    207.875   98.250000        0.100000     1.0        4666.5646         False          False   True
7    5274.489600      5066.4646 -2949.140381  5274.489600  198.300000    5066.4646    207.925    0.100000        0.100000     1.0        4666.5646         False          False   True
8    5375.539600      5066.4646 -2949.140381  5375.539600  101.150000    5066.4646    208.975  100.100000        0.100000     1.0        4666.5646         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 15:17:47]  --------------------------------------------------------------------------------
[08/10 15:17:47]  Iteration: 42 (0 solution, 41 counterexamples)
[08/10 15:17:49]  Generator returned sat in 0.490447 secs.
[08/10 15:17:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:50]  Improved gap from 1/80 to 100
[08/10 15:17:51]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 15:17:51]  Verifer returned sat in 1.487541 secs.
[08/10 15:17:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4794.752686    4794.690078 -2949.140381  4794.752686    0.037354  4794.690078    0.050000   0.012607       -0.012393     1.0      4794.690078            -1             -1     -1
1    4794.777578    4794.715078 -2949.140381  4794.777578    0.037500  4794.715078    0.050000   0.012500      -99.987500     1.0      4794.690078         False          False   True
2    4898.740078    4898.677578 -2949.140381  4898.740078  103.975000  4898.677578    0.050000   0.012500      -96.025000     1.0      4794.690078         False          False   True
3    5094.802578    5094.715078 -2949.140381  5094.802578  196.075000  5094.715078    0.062500   0.025000        0.025000     1.0      4794.690078         False          False   True
4    5194.815078    5194.714844 -2949.140381  5194.815078  100.037500  5194.714844    0.075000   0.025234        0.025000     1.0      4794.690078         False          False   True
5    5246.808594    5220.799453 -2949.140381  5246.808594   52.018750  5220.799453    0.075000  25.934141      -47.981484     1.0      4794.690078         False          False   True
6    5621.024453    5394.715078 -2949.140381  5621.024453  400.150000  5394.715078  226.284375   0.025000        0.025000     1.0      4794.690078         False          False   True
7    5823.074453    5491.715078 -2949.140381  5823.074453  202.075000  5491.715078  328.334375   3.025000        0.025000     1.0      4794.690078         False          False   True
8    5923.086953    5494.752686 -2949.140381  5923.086953  103.037500  5494.752686  328.346875  99.987393        0.025000     1.0      4794.690078         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/40.[0m
[08/10 15:17:51]  --------------------------------------------------------------------------------
[08/10 15:17:51]  Iteration: 43 (0 solution, 42 counterexamples)
[08/10 15:17:54]  Generator returned sat in 1.254905 secs.
[08/10 15:17:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:55]  Improved number of small numbers from 60 to 81 out of a max of 113
[08/10 15:17:55]  Verifer returned sat in 1.106231 secs.
[08/10 15:17:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4794.752441    4794.689941 -2949.140381  4794.752441    0.028076  4794.689941    0.059326   0.003174       -0.021963     1.0      4794.689941            -1             -1     -1
1    4794.777344    4794.715088 -2949.140381  4794.777344    0.028076  4794.715088    0.059326   0.002930      -99.997061     1.0      4794.689941         False          False   True
2    4898.749512    4898.668252 -2949.140381  4898.749512  103.975098  4898.668252    0.059326   0.021934      -96.024893     1.0      4794.689941         False          False   True
3    5094.802578    5094.715078 -2949.140381  5094.802578  196.075000  5094.715078    0.062500   0.025000        0.025000     1.0      4794.689941         False          False   True
4    5194.815078    5194.714844 -2949.140381  5194.815078  100.037500  5194.714844    0.075000   0.025234        0.025000     1.0      4794.689941         False          False   True
5    5246.808594    5221.544790 -2949.140381  5246.808594   52.018750  5221.544790    0.075000  25.188804      -47.981484     1.0      4794.689941         False          False   True
6    5621.024453    5394.715078 -2949.140381  5621.024453  399.404663  5394.715078  226.284375   0.025000        0.025000     1.0      4794.689941         False          False   True
7    5822.701785    5491.892086 -2949.140381  5822.701785  201.702332  5491.892086  327.961707   2.847992        0.025000     1.0      4794.689941         False          False   True
8    5922.704958    5494.752686 -2949.140381  5922.704958  102.851166  5494.752686  327.964880  99.987393        0.025000     1.0      4794.689941         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/40.[0m
[08/10 15:17:56]  --------------------------------------------------------------------------------
[08/10 15:17:56]  Iteration: 44 (0 solution, 43 counterexamples)
[08/10 15:18:03]  Generator returned sat in 6.132574 secs.
[08/10 15:18:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:04]  Improved gap from 0 to 0
[08/10 15:18:04]  Improved number of small numbers from 54 to 114 out of a max of 114
[08/10 15:18:04]  Verifer returned sat in 0.725675 secs.
[08/10 15:18:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5220.477539    4920.418213 -2949.140381  5220.477539  400.999756  4920.418213   0.059082  300.000244      200.000244     4.0      4920.418213            -1             -1   False
1    5321.377441    5020.418213 -2949.140381  5321.377441  400.900146  5020.418213   0.159180  300.800049      200.800049     4.0      5321.218262         False          False   False
2    5321.377441    5220.418213 -2949.140381  5321.377441  300.699951  5220.418213   0.159180  100.800049      100.800049     5.0      5321.218262         False          False    True
3    5521.177246    5320.417969 -2949.140381  5521.177246  300.599854  5320.417969   0.159180  200.600098      200.599854     3.0      5521.018066         False           True   False
4    5521.177246    5420.417969 -2949.140381  5521.177246    0.500000  5420.417969   0.159180  100.600098      100.599854     2.0      5521.018066         False          False   False
5    5521.177246    5520.318115 -2949.140381  5521.177246    0.500000  5520.318115   0.159180    0.699951        0.599854     3.0      5521.018066         False          False   False
6    5521.177246    5520.418213 -2849.740234  5521.177246    0.500000  5520.418213   0.159180    0.599854        0.000000     4.0      5521.018066         False          False   False
7    5521.177246    5521.018066 -2749.740479  5521.177246    0.500000  5521.018066   0.159180    0.000000       -0.000244     5.0      5521.018066         False          False   False
8    5521.677246    5521.018311 -2749.740479  5521.677246    0.500000  5521.018311   0.159180    0.499756      -99.500244     1.0      5521.018066         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=822477/4096.[0m
[08/10 15:18:04]  --------------------------------------------------------------------------------
[08/10 15:18:04]  Iteration: 45 (0 solution, 44 counterexamples)
[08/10 15:18:08]  Generator returned sat in 2.450543 secs.
[08/10 15:18:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:10]  Improved gap from 1/4800 to 23.4375
[08/10 15:18:10]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 15:18:10]  Verifer returned sat in 1.525068 secs.
[08/10 15:18:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1970.020508   -2347.578369 -2949.140381 -1970.020508  423.442383 -2347.578369    0.000000  377.557861      277.557861     9.0     -2347.578369            -1             -1     -1
1   -1924.138428   -2147.578369 -2949.140381 -1924.138428  423.439941 -2147.578369    0.002441  223.437500      223.437500     4.0     -1924.140869         False           True  False
2   -1924.138428   -2061.640625 -2949.140381 -1924.138428  223.435059 -2061.640625    0.002441  137.499756      123.437500     5.0     -1924.140869         False          False   True
3   -1573.888184   -1970.018311 -2949.140381 -1573.888184  487.750000 -1970.018311  150.252686  245.877441      223.437500     3.0     -1924.140869         False           True  False
4   -1573.888184   -1847.578369 -2949.140381 -1573.888184  245.875000 -1847.578369  150.252686  123.437500      123.437500     2.0     -1924.140869         False          False   True
5   -1573.888184   -1847.575684 -2949.140381 -1573.888184    0.010000 -1847.575684  150.252686  123.434814       23.437500     3.0     -1924.140869         False          False   True
6   -1573.888184   -1747.578369 -2872.577881 -1573.888184    0.010000 -1747.578369  150.252686   23.437500        0.000000     4.0     -1924.140869         False          False   True
7   -1573.888184   -1724.140869 -2796.015381 -1573.888184    0.010000 -1724.140869  150.252686    0.000000      -23.437500     5.0     -1924.140869         False          False   True
8   -1328.013184   -1700.703125 -2796.015381 -1328.013184  245.875000 -1700.703125  150.252686  222.437256      122.437500     1.0     -1478.265869          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 15:18:11]  --------------------------------------------------------------------------------
[08/10 15:18:11]  Iteration: 46 (0 solution, 45 counterexamples)
[08/10 15:18:13]  Generator returned sat in 1.044364 secs.
[08/10 15:18:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:15]  Improved gap from 1149/102400 to 23.4375
[08/10 15:18:15]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:18:15]  Verifer returned sat in 1.849408 secs.
[08/10 15:18:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2350.826172   -2361.768311 -2949.140381 -2350.826172    0.002686 -2361.768311    0.000000   10.942139       -0.002686     9.0     -2361.768311            -1             -1     -1
1   -2250.823486   -2350.823486 -2949.140381 -2250.823486  110.944824 -2350.823486    0.000000  100.000000        0.000000     1.0     -2361.768311         False           True  False
2   -2239.881104   -2250.820801 -2872.580566 -2239.881104  110.942383 -2250.820801    0.000000   10.939697      -12.497803     1.0     -2239.881104         False          False  False
3   -1762.070801   -2149.820801 -2872.580566 -1762.070801  488.750000 -2149.820801  241.872559  145.877441      123.439941     1.0     -2239.881104         False          False  False
4   -1662.073242   -2027.383301 -2872.580566 -1662.073242  245.875000 -2027.383301  241.872559  123.437500      123.437500     2.0     -2239.881104         False          False   True
5   -1662.073242   -1927.385986 -2872.580566 -1662.073242    0.010000 -1927.385986  241.872559   23.440186       23.437500     2.0     -2239.881104         False          False   True
6   -1662.073242   -1927.383301 -2796.018066 -1662.073242    0.010000 -1927.383301  241.872559   23.437500        0.000000     3.0     -2239.881104         False          False   True
7   -1662.073242   -1903.945801 -2719.455566 -1662.073242    0.010000 -1903.945801  241.872559    0.000000      -23.437500     4.0     -2239.881104         False          False   True
8   -1416.198242   -1880.508301 -2719.455566 -1416.198242  245.875000 -1880.508301  241.872559  222.437500      122.437500     1.0     -1658.070801          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=252805/2048.[0m
[08/10 15:18:16]  --------------------------------------------------------------------------------
[08/10 15:18:16]  Iteration: 47 (0 solution, 46 counterexamples)
[08/10 15:18:25]  Generator returned sat in 8.303039 secs.
[08/10 15:18:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:32]  Improved gap from 1/400 to 1.5625
[08/10 15:18:32]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:18:32]  Verifer returned sat in 6.616933 secs.
[08/10 15:18:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1304.220459   -1307.775146 -3992.188721 -1304.220459    0.005127 -1307.775146   0.000000    3.554688        3.554688     1.0     -1307.775146            -1             -1   False
1   -1304.220459   -1307.775146 -3895.745850 -1304.220459    0.002686 -1307.775146   0.000000    3.554688       -0.002441     1.0     -1304.220459         False          False   False
2   -1304.215576   -1304.218018 -3797.308594 -1304.215576    3.559570 -1304.218018   0.000000    0.002441       -1.560303     1.0     -1304.220459         False          False   False
3   -1272.680420   -1298.363281 -3727.283447 -1272.680420   31.537598 -1298.363281   0.000000   25.682861        0.000000     1.0     -1304.220459         False          False   False
4   -1272.680420   -1272.680420 -3628.845947 -1272.680420   25.680664 -1272.680420   0.000000    0.000000       -1.562500     2.0     -1304.220459         False          False   False
5   -1224.245361   -1225.807861 -3575.718506 -1224.245361   48.435059 -1225.807861   0.000000    1.562500        0.000000     1.0     -1304.220459         False          False   False
6   -1122.680176   -1224.242920 -3575.718506 -1122.680176  103.127686 -1224.242920   0.002686  101.560059        1.562500     1.0     -1304.220459         False          False   False
7   -1122.680176   -1124.245361 -3477.281006 -1122.680176    1.500000 -1124.245361   0.002686    1.562500        0.000000     2.0     -1304.220459         False          False    True
8   -1122.680176   -1122.682861 -3477.280762 -1122.680176    0.010000 -1122.682861   0.002686    0.000000      -99.999756     3.0     -1304.220459         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25/16.[0m
[08/10 15:18:33]  --------------------------------------------------------------------------------
[08/10 15:18:33]  Iteration: 48 (0 solution, 47 counterexamples)
[08/10 15:18:36]  Generator returned sat in 2.418756 secs.
[08/10 15:18:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:37]  Improved gap from 1/10 to 0
[08/10 15:18:37]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 15:18:37]  Verifer returned sat in 0.848538 secs.
[08/10 15:18:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2190.372803   -2190.423096 -3895.745850 -2190.372803    0.050049 -2190.423096   0.000000   0.050293        0.050049     7.0     -2190.423096            -1             -1     -1
1   -2090.423096   -2190.422852 -3895.745850 -2090.423096  100.000000 -2190.422852   0.000000  99.999756       -0.000244     2.0     -2190.423096         False           True  False
2   -1991.173096   -1991.222900 -3894.995850 -1991.173096  199.249756 -1991.222900   0.000000   0.049805       -0.000244     1.0     -2190.423096         False          False  False
3   -1792.022705   -1891.173096 -3894.995850 -1792.022705  199.200195 -1891.173096  97.600098   1.550293        1.550049     1.0     -1889.622803         False          False  False
4   -1691.972900   -1889.572754 -3894.995850 -1691.972900  101.600098 -1889.572754  97.649902  99.949951        1.550049     1.0     -1889.622803         False          False   True
5   -1691.972900   -1791.172852 -3796.545898 -1691.972900   52.800049 -1791.172852  97.649902   1.550049        0.000000     2.0     -1889.622803         False          False   True
6   -1691.972900   -1789.622803 -3697.995850 -1691.972900    1.500000 -1789.622803  97.649902   0.000000       -1.449951     3.0     -1889.622803         False          False   True
7   -1690.472900   -1788.172852 -3599.495850 -1690.472900    1.500000 -1788.172852  97.649902   0.050049       -1.449951     1.0     -1889.622803         False          False   True
8   -1689.022949   -1786.672852 -3599.495850 -1689.022949    1.500000 -1786.672852  97.649902   0.000000     -100.000000     1.0     -1889.622803         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=6349/4096.[0m
[08/10 15:18:38]  --------------------------------------------------------------------------------
[08/10 15:18:38]  Iteration: 49 (0 solution, 48 counterexamples)
[08/10 15:18:46]  Generator returned sat in 6.338799 secs.
[08/10 15:18:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:46]  Improved gap from 0 to 48.4375
[08/10 15:18:47]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:18:47]  Verifer returned sat in 0.624984 secs.
[08/10 15:18:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2134.085205   -2285.663330 -3845.061768 -2134.085205  351.625000 -2285.663330   0.000000  151.578125       99.952881     9.0     -2285.663330            -1             -1     -1
1   -1934.085205   -2134.038330 -3845.061768 -1934.085205  351.578125 -2134.038330   0.000000  199.953125      199.952881     1.0     -1934.085205         False           True  False
2   -1782.507080   -2134.038086 -3845.061768 -1782.507080  351.531250 -2134.038086   0.046875  351.484131      251.484131     2.0     -1782.553955         False          False  False
3   -1782.507080   -1934.038330 -3845.061768 -1782.507080   55.937500 -1934.038330   0.046875  151.484375      151.484131     2.0     -1782.553955         False          False   True
4   -1782.507080   -1835.631836 -3845.061768 -1782.507080   54.437500 -1835.631836   0.046875   53.077881       51.484131     3.0     -1782.553955         False          False   True
5   -1782.507080   -1834.038086 -3796.545898 -1782.507080   52.937500 -1834.038086   0.046875   51.484131        0.000000     4.0     -1782.553955         False          False   True
6   -1782.507080   -1782.553955 -3744.983398 -1782.507080   51.437500 -1782.553955   0.046875    0.000000      -48.437500     5.0     -1782.553955         False          False   True
7   -1732.569580   -1734.116211 -3693.421143 -1732.569580   49.937500 -1734.116211   0.046875    1.499756      -46.937744     1.0     -1782.553955         False          False   True
8   -1685.631836   -1685.678711 -3693.420898 -1685.631836   48.437500 -1685.678711   0.046875    0.000000      -99.999756     1.0     -1782.553955         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1030079/4096.[0m
[08/10 15:18:47]  --------------------------------------------------------------------------------
[08/10 15:18:47]  Iteration: 50 (0 solution, 49 counterexamples)
[08/10 15:18:57]  Generator returned sat in 8.091639 secs.
[08/10 15:18:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:57]  Improved gap from 0 to 100
[08/10 15:18:57]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:18:57]  Verifer returned sat in 0.561279 secs.
[08/10 15:18:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3634.259766   -3731.059570 -3845.062012 -3634.259766  200.000000 -3731.059570    0.000000   96.799805       96.799805     2.0     -3731.059570            -1             -1   False
1   -3531.109375   -3634.209473 -3845.062012 -3531.109375  199.950195 -3634.209473    0.000000  103.100098       99.950195     1.0     -3531.109375         False          False   False
2   -3431.109375   -3534.059570 -3845.062012 -3431.109375  203.100098 -3534.059570    0.000000  102.950195       99.950195     2.0     -3531.109375         False          False   False
3   -3331.009521   -3431.059570 -3845.062012 -3331.009521  203.050049 -3431.059570    0.050049  100.000000      100.000000     1.0     -3331.059570         False          False   False
4   -3229.459473   -3331.059570 -3845.062012 -3229.459473  201.550049 -3331.059570    1.600098  100.000000      100.000000     2.0     -3331.059570         False          False    True
5   -3129.409424   -3331.009521 -3845.062012 -3129.409424  200.050049 -3331.009521    1.650146  199.949951      100.000000     2.0     -3331.059570         False          False    True
6   -3129.409424   -3231.059570 -3845.062012 -3129.409424  198.550049 -3231.059570    1.650146  100.000000        0.000000     3.0     -3331.059570         False          False    True
7   -2830.909424   -3031.059570 -3845.062012 -2830.909424  398.500000 -3031.059570  100.150146  100.000000      100.000000     1.0     -2931.059570          True           True   False
8   -2533.909424   -2931.059570 -3845.062012 -2533.909424  397.000000 -2931.059570  297.150146  100.000000      100.000000     2.0     -2931.059570         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=100.[0m
[08/10 15:18:58]  --------------------------------------------------------------------------------
[08/10 15:18:58]  Iteration: 51 (0 solution, 50 counterexamples)
[08/10 15:19:05]  Generator returned sat in 5.384384 secs.
[08/10 15:19:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:06]  Improved gap from 0 to 0
[08/10 15:19:06]  Improved number of small numbers from 62 to 83 out of a max of 114
[08/10 15:19:06]  Verifer returned sat in 1.177850 secs.
[08/10 15:19:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3817.434570   -3817.436279 -3758.685303 -3817.434570    0.003174 -3817.436279    0.000000   0.001709        0.001709     2.0     -3817.436279            -1             -1   False
1   -3817.434570   -3817.436090 -3658.687158 -3817.434570    0.001667 -3817.436090    0.000000   0.001520       -0.000146     2.0     -3817.434570         False          False   False
2   -3717.429424   -3717.434424 -3658.687158 -3717.429424  100.006667 -3717.434424    0.001667   0.003333        0.003333     1.0     -3817.434570         False          False   False
3   -3329.412757   -3713.439424 -3658.687158 -3329.412757  388.020000 -3713.439424  288.018333  96.008333        0.003333     1.0     -3817.434570         False          False    True
4   -3229.411090   -3517.434424 -3658.687158 -3229.411090  196.010000 -3517.434424  288.020000   0.003333        0.003333     1.0     -3817.434570         False          False    True
5   -3129.409424   -3419.443590 -3658.687158 -3129.409424  100.005000 -3419.443590  288.021667   2.012500        0.003333     1.0     -3817.434570         False          False    True
6   -3079.419424   -3367.447757 -3608.682129 -3079.419424   52.002500 -3367.447757  288.021667   0.006667       -0.001637     1.0     -3817.434570         False          False    True
7   -3079.416090   -3367.439424 -3508.683838 -3079.416090    0.010000 -3367.439424  288.021667   0.001667       -0.000013     1.0     -3817.434570         False          False    True
8   -3079.407757   -3367.436279 -3508.683594 -3079.407757    0.010000 -3367.436279  288.021667   0.006855      -99.991436     1.0     -3817.434570         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/300.[0m
[08/10 15:19:07]  --------------------------------------------------------------------------------
[08/10 15:19:07]  Iteration: 52 (0 solution, 51 counterexamples)
[08/10 15:19:10]  Generator returned sat in 1.107530 secs.
[08/10 15:19:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:10]  Improved gap from 0 to 0
[08/10 15:19:11]  Improved number of small numbers from 67 to 89 out of a max of 114
[08/10 15:19:11]  Verifer returned sat in 0.817960 secs.
[08/10 15:19:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3329.413330   -3429.411133 -3908.659912 -3329.413330  100.000000 -3429.411133    0.00000   99.997803       99.997764     8.0     -3429.411133            -1             -1     -1
1   -3329.412354   -3429.410889 -3908.659912 -3329.412354   99.998779 -3429.410889    0.00000   99.998535       -0.001260     2.0     -3329.412354         False           True  False
2   -3329.409668   -3329.410918 -3808.661338 -3329.409668  100.001221 -3329.410918    0.00000    0.001250        0.000000     1.0     -3329.412354         False          False  False
3   -3129.409668   -3229.899043 -3808.661338 -3129.409668  200.001250 -3229.899043    0.00125  100.488125       99.998750     1.0     -3329.412354         False          False  False
4   -3129.397168   -3129.410889 -3808.661338 -3129.397168  100.500625 -3129.410889    0.00125    0.012471        0.011250     1.0     -3329.412354         False          False   True
5   -3129.397168   -3129.409668 -3708.672588 -3129.397168    0.010000 -3129.409668    0.00125    0.011250        0.000000     2.0     -3329.412354         False          False   True
6   -3129.397168   -3129.398418 -3608.673828 -3129.397168    0.010000 -3129.398418    0.00125    0.000000       -0.001240     3.0     -3329.412354         False          False   True
7   -3129.387168   -3129.397168 -3508.683838 -3129.387168    0.010000 -3129.397168    0.00125    0.008750       -0.001250     1.0     -3329.412354         False          False   True
8   -3129.385918   -3129.387168 -3508.683838 -3129.385918    0.010000 -3129.387168    0.00125    0.000000     -100.000000     1.0     -3329.412354         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=79999/800.[0m
[08/10 15:19:11]  --------------------------------------------------------------------------------
[08/10 15:19:11]  Iteration: 53 (0 solution, 52 counterexamples)
[08/10 15:19:18]  Generator returned sat in 5.547342 secs.
[08/10 15:19:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:19]  Improved gap from 0 to 48.4375
[08/10 15:19:19]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:19:19]  Verifer returned sat in 0.748023 secs.
[08/10 15:19:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4205.184082   -4705.137207 -2732.933838 -4205.184082  499.999756 -4705.137207        0.0  499.953125      399.953369     3.0     -4705.137207            -1             -1   False
1   -4205.137451   -4605.137207 -2732.933838 -4205.137451  499.999756 -4605.137207        0.0  399.999756      300.000000     3.0     -4705.137207         False          False   False
2   -4152.059326   -4405.137451 -2732.933838 -4152.059326  453.077881 -4405.137451        0.0  253.078125      253.078125     4.0     -4152.059326         False          False   False
3   -4152.059326   -4305.137451 -2732.933838 -4152.059326   55.937500 -4305.137451        0.0  153.078125      153.078125     5.0     -4152.059326         False          False   False
4   -4152.059326   -4205.137451 -2732.933838 -4152.059326   54.437500 -4205.137451        0.0   53.078125       53.078125     4.0     -4152.059326         False           True   False
5   -4152.059326   -4205.137451 -2686.011963 -4152.059326   52.937500 -4205.137451        0.0   53.078125        0.000000     4.0     -4152.059326         False          False   False
6   -4152.059326   -4152.059326 -2634.449463 -4152.059326   51.437500 -4152.059326        0.0    0.000000      -48.437500     5.0     -4152.059326         False          False   False
7   -4102.121826   -4103.621826 -2582.886963 -4102.121826   49.937500 -4103.621826        0.0    1.500000      -46.937500     1.0     -4152.059326         False           True   False
8   -4055.184326   -4055.184326 -2582.886963 -4055.184326   48.437500 -4055.184326        0.0    0.000000     -100.000000     1.0     -4152.059326         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/10 15:19:20]  --------------------------------------------------------------------------------
[08/10 15:19:20]  Iteration: 54 (0 solution, 53 counterexamples)
[08/10 15:19:24]  Generator returned sat in 2.916659 secs.
[08/10 15:19:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:25]  Improved gap from 0 to 100
[08/10 15:19:25]  Improved number of small numbers from 84 to 114 out of a max of 114
[08/10 15:19:25]  Verifer returned sat in 0.552292 secs.
[08/10 15:19:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5052.259521   -5352.159180 -2732.934082 -5052.259521     0.100098 -5352.159180        0.0  299.899658      199.899658     2.0     -5352.159180            -1             -1   False
1   -5052.259521   -5152.159180 -2732.934082 -5052.259521   299.800000 -5152.159180        0.0   99.899658       99.899658     2.0     -5352.159180         False          False   False
2   -4152.059326   -5052.159424 -2732.934082 -4152.059326  1000.099854 -5052.159424        0.0  900.100098      900.099854     1.0     -5352.159180         False          False   False
3   -4152.059326   -4952.259521 -2732.934082 -4152.059326   790.199951 -4952.259521        0.0  800.200195      800.099854     2.0     -4152.059326         False          False   False
4   -4152.059326   -4952.159180 -2732.934082 -4152.059326   792.199951 -4952.159180        0.0  800.099854      700.099854     3.0     -4152.059326         False          False   False
5   -4152.059326   -4752.159180 -2732.934082 -4152.059326   794.199951 -4752.159180        0.0  600.099854      600.099854     4.0     -4152.059326         False          False   False
6   -3955.959229   -4652.159424 -2732.934082 -3955.959229   796.199951 -4652.159424        0.0  696.200195      696.199951     5.0     -4152.059326         False           True   False
7   -3853.959473   -4552.159180 -2732.934082 -3853.959473   798.199951 -4552.159180        0.0  698.199707      698.199707     6.0     -4152.059326         False           True   False
8   -3751.959229   -4552.059326 -2732.934082 -3751.959229   800.199951 -4552.059326        0.0  800.100098      700.199951     7.0     -4152.059326         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3687219/4096.[0m
[08/10 15:19:26]  --------------------------------------------------------------------------------
[08/10 15:19:26]  Iteration: 55 (0 solution, 54 counterexamples)
[08/10 15:19:31]  Generator returned sat in 4.217173 secs.
[08/10 15:19:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:33]  Improved gap from 1/20 to 100
[08/10 15:19:33]  Improved number of small numbers from 92 to 114 out of a max of 114
[08/10 15:19:33]  Verifer returned sat in 1.841972 secs.
[08/10 15:19:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3143.208984   -3143.409424 -2732.934082 -3143.208984    0.100000 -3143.409424    0.000000    0.200439        0.200439     9.0     -3143.409424            -1             -1     -1
1   -3143.208984   -3143.409180 -2732.934082 -3143.208984    0.100000 -3143.409180    0.000000    0.200195      -99.799561     2.0     -3143.409424         False           True  False
2   -2943.509277   -2943.609131 -2732.934082 -2943.509277  199.899902 -2943.609131    0.000000    0.099854       -0.099854     1.0     -3143.409424         False          False  False
3   -2743.709229   -2943.409424 -2732.934082 -2743.709229  199.899902 -2943.409424    0.000000  199.700195       99.700195     1.0     -3143.409424         False          False  False
4   -2743.709229   -2743.809326 -2732.934082 -2743.709229  197.949951 -2743.809326    0.000000    0.100098       -0.299805     2.0     -3143.409424         False          False  False
5   -2447.034424   -2739.684326 -2732.934082 -2447.034424  296.774902 -2739.684326   96.475098  196.174805       99.899902     1.0     -3143.409424         False          False  False
6   -2346.934326   -2543.409424 -2732.934082 -2346.934326  296.274902 -2543.409424   96.575195   99.899902       99.899902     1.0     -3143.409424         False          False   True
7   -2151.059326   -2443.409424 -2732.934082 -2151.059326  295.774902 -2443.409424  192.450195   99.899902       99.899902     1.0     -3143.409424         False          False   True
8   -1955.684326   -2343.409424 -2732.934082 -1955.684326  295.274902 -2343.409424  287.825195   99.899902       99.899902     1.0     -3143.409424         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=204595/2048.[0m
[08/10 15:19:34]  --------------------------------------------------------------------------------
[08/10 15:19:34]  Iteration: 56 (0 solution, 55 counterexamples)
[08/10 15:19:52]  Generator returned sat in 15.758709 secs.
[08/10 15:19:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:52]  Improved gap from 1/1200 to 10.9375
[08/10 15:19:52]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 15:19:52]  Verifer returned sat in 0.606192 secs.
[08/10 15:19:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2505.634521   -2505.734375 -3370.609131 -2505.634521  538.962402 -2505.734375   0.050049    0.049805        0.049805     4.0     -2505.734375            -1             -1     -1
1   -1966.721924   -2505.634277 -3370.609131 -1966.721924  538.962402 -2505.634277   0.100098  538.812256      438.912354     1.0     -2505.734375         False          False   True
2   -1966.721924   -2405.734131 -3370.609131 -1966.721924    0.050049 -2405.734131   0.100098  438.912109      338.912354     2.0     -1966.822021         False          False   True
3   -1966.721924   -2205.734375 -3370.609131 -1966.721924  410.000000 -2205.734375   0.100098  238.912354      238.912354     3.0     -1966.822021         False          False   True
4   -1966.721924   -2105.734375 -3370.609131 -1966.721924  203.000000 -2105.734375   0.100098  138.912354      138.912354     4.0     -1966.822021         False          False   True
5   -1966.721924   -2014.521729 -3370.609131 -1966.721924   99.500000 -2014.521729   0.100098   47.699707       38.912354     5.0     -1966.822021         False          False   True
6   -1966.671631   -1977.659424 -3309.621582 -1966.671631   47.750000 -1977.659424   0.100098   10.887695       -0.049805     6.0     -1966.822021         False          False   True
7   -1955.684326   -1966.721924 -3220.559082 -1955.684326   21.875000 -1966.721924   0.100098   10.937500        0.000000     1.0     -1966.822021         False          False   True
8   -1955.684326   -1955.784424 -3220.559082 -1955.684326    8.937500 -1955.784424   0.100098    0.000000     -100.000000     2.0     -1966.822021         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1797785/4096.[0m
[08/10 15:19:53]  --------------------------------------------------------------------------------
[08/10 15:19:53]  Iteration: 57 (0 solution, 56 counterexamples)
[08/10 15:19:56]  Generator returned sat in 1.513314 secs.
[08/10 15:19:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:59]  Improved gap from 1/1200 to 0
[08/10 15:20:00]  Improved number of small numbers from 36 to 45 out of a max of 114
[08/10 15:20:00]  Verifer returned sat in 3.643886 secs.
[08/10 15:20:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3176.148438   -3276.198723 -1171.911533 -3176.148438  100.003906 -3276.198723   0.050049  100.000236      100.000236     8.0     -3276.198723            -1             -1     -1
1   -3176.144674   -3276.198723 -1171.911533 -3176.144674  100.004000 -3276.198723   0.051049  100.003000        0.003000     8.0     -3276.198723         False           True   True
2   -3176.138674   -3176.198723 -1171.911377 -3176.138674  100.009000 -3176.198723   0.051049    0.009000      -99.990844     9.0     -3276.198723         False           True   True
3   -3076.139674   -3076.198723 -1071.920410 -3076.139674  100.008000 -3076.198723   0.051049    0.008000       -0.000877     1.0     -3076.190723          True           True  False
4   -3076.137674   -3076.189723  -971.921631 -3076.137674    0.010000 -3076.189723   0.051049    0.001000       -0.000098     1.0     -3076.190723         False          False  False
5   -3076.128674   -3076.179723  -871.930533 -3076.128674    0.010000 -3076.179723   0.051049    0.000000        0.000000     1.0     -3076.190723         False          False  False
6   -3076.118674   -3076.179723  -771.940533 -3076.118674    0.010000 -3076.179723   0.051049    0.010000        0.000000     1.0     -3076.190723         False          False  False
7   -3076.118674   -3076.169723  -671.940674 -3076.118674    0.010000 -3076.169723   0.051049    0.000000       -0.000141     2.0     -3076.190723         False          False  False
8   -3076.108674   -3076.168701  -671.940430 -3076.108674    0.010000 -3076.168701   0.051049    0.008979      -99.989896     1.0     -3076.190723         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3/1000.[0m
[08/10 15:20:00]  --------------------------------------------------------------------------------
[08/10 15:20:00]  Iteration: 58 (0 solution, 57 counterexamples)
[08/10 15:20:11]  Generator returned sat in 8.578240 secs.
[08/10 15:20:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:11]  Improved gap from 0 to 100
[08/10 15:20:12]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/10 15:20:12]  Verifer returned sat in 0.731016 secs.
[08/10 15:20:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3176.144531   -3276.207031 -1071.924072 -3176.144531    0.012451 -3276.207031    0.049805  100.012695      100.000244     9.0     -3276.207031            -1             -1     -1
1   -3176.144531   -3276.194580 -1071.924072 -3176.144531   99.987305 -3276.194580    0.049805  100.000244        0.000244     6.0     -3276.207031         False           True   True
2   -3176.144531   -3176.194580 -1071.924072 -3176.144531   99.987305 -3176.194580    0.049805    0.000244      -99.999756     3.0     -3276.207031          True           True  False
3   -2992.157227   -3058.144531 -1071.924072 -2992.157227  183.987549 -3058.144531    0.049805   65.937500      -16.012451     1.0     -3276.207031         False          False  False
4   -2876.107178   -2942.169678 -1071.924072 -2876.107178  181.987549 -2942.169678    0.062500   66.000000        0.024902     1.0     -3276.207031         False          False  False
5   -2776.094727   -2776.194580 -1071.924072 -2776.094727  166.012451 -2776.194580    0.074951    0.024902        0.024902     1.0     -3276.207031         False          False   True
6   -2577.119629   -2676.194824 -1071.924072 -2577.119629  199.000000 -2676.194824   99.050049    0.025146        0.024902     1.0     -3276.207031         False          False   True
7   -2387.169922   -2576.194580 -1071.924072 -2387.169922  189.974854 -2576.194580  188.999756    0.024902        0.024902     1.0     -3276.207031         False          False   True
8   -2205.207275   -2576.157227 -1071.924072 -2205.207275  181.987549 -2576.157227  270.962402   99.987549        0.024902     1.0     -3276.207031         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=51/2048.[0m
[08/10 15:20:12]  --------------------------------------------------------------------------------
[08/10 15:20:12]  Iteration: 59 (0 solution, 58 counterexamples)
[08/10 15:20:16]  Generator returned sat in 1.411365 secs.
[08/10 15:20:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:16]  Improved gap from 0 to 48.4375
[08/10 15:20:16]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:20:16]  Verifer returned sat in 0.455627 secs.
[08/10 15:20:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2377.772217   -2477.822021 -1870.296875 -2377.772217    0.025000 -2477.822021   0.049805  100.000000      100.000000     2.0     -2477.822021            -1             -1   False
1   -2177.797119   -2377.822021 -1870.296875 -2177.797119  299.975098 -2377.822021   0.049805  199.975098      199.975098     2.0     -2477.822021         False          False   False
2   -2024.672119   -2377.821777 -1870.296875 -2024.672119  353.100098 -2377.821777   0.049805  353.099854      253.100098     2.0     -2477.822021         False          False   False
3   -2024.672119   -2177.822021 -1870.296875 -2024.672119   55.074951 -2177.822021   0.049805  153.100098      153.100098     2.0     -2024.721924         False          False   False
4   -2024.672119   -2077.822021 -1870.296875 -2024.672119   54.074951 -2077.822021   0.049805   53.100098       53.100098     3.0     -2024.721924         False          False   False
5   -2024.672119   -2073.159424 -1823.396973 -2024.672119   53.074951 -2073.159424   0.049805   48.437500        0.000000     4.0     -2024.721924         False          False   False
6   -2021.034668   -2024.721924 -1771.834473 -2021.034668   52.074951 -2024.721924   0.049805    3.637451      -44.800049     5.0     -2024.721924         False          False   False
7   -1973.597168   -1976.284424 -1720.271973 -1973.597168   51.074951 -1976.284424   0.049805    2.637451      -45.800049     1.0     -2024.721924         False           True   False
8   -1926.159668   -1927.846680 -1720.271729 -1926.159668   50.074951 -1927.846680   0.049805    1.637207      -98.362305     1.0     -2024.721924         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2025/8.[0m
[08/10 15:20:17]  --------------------------------------------------------------------------------
[08/10 15:20:17]  Iteration: 60 (0 solution, 59 counterexamples)
[08/10 15:20:20]  Generator returned sat in 1.098763 secs.
[08/10 15:20:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:20]  Improved gap from 759/16 to 48.4375
[08/10 15:20:20]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:20:20]  Verifer returned sat in 0.721601 secs.
[08/10 15:20:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2294.124512   -2642.662354 -1926.521729 -2294.124512  348.487500 -2642.662354   0.000000  348.537842      348.337402     8.0     -2642.662354            -1             -1     -1
1   -2294.124512   -2542.462158 -1926.521729 -2294.124512  348.487549 -2542.462158   0.000000  248.337646      248.337402     4.0     -2642.662354         False           True  False
2   -2194.024658   -2442.462158 -1926.521729 -2194.024658  348.437500 -2442.462158   0.049805  248.387695      248.387451     5.0     -2194.074463         False          False  False
3   -2194.024658   -2442.461914 -1926.521729 -2194.024658   53.974854 -2442.461914   0.049805  248.387451      148.387451     6.0     -2194.074463         False           True   True
4   -2194.024658   -2247.099609 -1926.521729 -2194.024658   53.474854 -2247.099609   0.049805   53.025146       48.387451     3.0     -2194.074463         False           True  False
5   -2194.024658   -2242.461914 -1874.959229 -2194.024658   52.974854 -2242.461914   0.049805   48.387451       -0.050049     4.0     -2194.074463         False          False  False
6   -2189.937256   -2194.024414 -1823.396729 -2189.937256   52.474854 -2194.024414   0.049805    4.037354      -44.400146     1.0     -2194.074463         False          False  False
7   -2141.999756   -2145.586914 -1771.834229 -2141.999756   51.974854 -2145.586914   0.049805    3.537354      -44.900146     1.0     -2194.074463         False          False  False
8   -2094.062256   -2097.149414 -1720.271729 -2094.062256   51.474854 -2097.149414   0.049805    3.037354      -45.400146     1.0     -2194.074463         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1017395/4096.[0m
[08/10 15:20:21]  --------------------------------------------------------------------------------
[08/10 15:20:21]  Iteration: 61 (0 solution, 60 counterexamples)
[08/10 15:20:43]  Generator returned sat in 19.771793 secs.
[08/10 15:20:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:43]  Improved gap from 1/20 to 100
[08/10 15:20:44]  Improved number of small numbers from 68 to 89 out of a max of 114
[08/10 15:20:44]  Verifer returned sat in 1.356089 secs.
[08/10 15:20:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2292.251953   -2392.352051 -1720.271729 -2292.251953    0.100000 -2392.352051      0.000  100.100098      100.099961     2.0     -2392.352051            -1             -1   False
1   -2292.251953   -2292.352051 -1720.271729 -2292.251953    0.100098 -2292.352051      0.000    0.100098        0.099961     2.0     -2392.352051         False          False   False
2   -2192.352051   -2292.351914 -1720.271729 -2192.352051  100.000000 -2292.351914      0.000   99.999863       -0.000137     3.0     -2392.352051         False          False   False
3   -2082.751914   -2092.351914 -1720.271729 -2082.751914  209.600000 -2092.351914      5.400    4.200000        4.200000     1.0     -2392.352051         False          False   False
4   -1982.651914   -2001.176914 -1720.271729 -1982.651914  104.300000 -2001.176914      5.500   13.025000        4.200000     1.0     -2392.352051         False          False    True
5   -1944.026914   -1949.626914 -1720.271729 -1944.026914   51.650000 -1949.626914      5.500    0.100000      -57.175000     1.0     -2392.352051         False          False    True
6   -1523.926914   -1892.351914 -1720.271729 -1523.926914  420.200000 -1892.351914    264.225  104.200000        4.200000     1.0     -2392.352051         False          False    True
7   -1418.526914   -1692.351914 -1720.271729 -1418.526914  209.600000 -1692.351914    269.625    4.200000        4.200000     1.0     -2392.352051         False          False    True
8   -1318.426914   -1688.052002 -1720.271729 -1318.426914  104.300000 -1688.052002    269.725   99.900088        4.200000     1.0     -2392.352051         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=21/5.[0m
[08/10 15:20:45]  --------------------------------------------------------------------------------
[08/10 15:20:45]  Iteration: 62 (0 solution, 61 counterexamples)
[08/10 15:20:54]  Generator returned sat in 7.063509 secs.
[08/10 15:20:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:54]  Improved gap from 1/20 to 100
[08/10 15:20:54]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:20:54]  Verifer returned sat in 0.397779 secs.
[08/10 15:20:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2345.568359   -2345.568359 -1733.721924 -2345.568359  396.150000 -2345.568359   0.000000    0.000000        0.000000     4.0     -2345.568359            -1             -1     -1
1   -1949.468506   -2255.368408 -1733.721924 -1949.468506  396.099854 -2255.368408   0.000000  305.899902      296.099854     1.0     -1949.468506         False           True  False
2   -1847.468506   -2153.468750 -1733.721924 -1847.468506  407.899902 -2153.468750   0.000000  306.000244      298.099854     2.0     -1949.468506         False          False  False
3   -1745.568604   -2045.568359 -1733.721924 -1745.568604  407.900146 -2045.568359   0.049805  299.949951      299.949951     3.0     -1949.468506         False          False  False
4   -1639.618408   -1949.468506 -1733.721924 -1639.618408  405.900146 -1949.468506   6.000000  303.850098      299.949951     4.0     -1949.468506         False          False   True
5   -1539.568359   -1847.468750 -1733.721924 -1539.568359  403.900146 -1847.468750   6.050049  301.850342      299.949951     4.0     -1949.468506         False           True   True
6   -1439.518555   -1845.568359 -1733.721924 -1439.518555  401.900146 -1845.568359   6.099854  399.949951      299.949951     4.0     -1445.618408          True           True   True
7   -1439.518555   -1714.668457 -1733.721924 -1439.518555  399.900146 -1714.668457   6.099854  269.050049      199.949951     4.0     -1445.618408         False           True   True
8   -1239.468506   -1545.568604 -1733.721924 -1239.468506  469.100098 -1545.568604   6.149902  299.950195      299.949951     3.0     -1445.618408         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1228595/4096.[0m
[08/10 15:20:55]  --------------------------------------------------------------------------------
[08/10 15:20:55]  Iteration: 63 (0 solution, 62 counterexamples)
[08/10 15:20:58]  Generator returned sat in 1.133893 secs.
[08/10 15:20:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:58]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:20:58]  Verifer returned sat in 0.166401 secs.
[08/10 15:20:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2345.568359   -2345.568359 -1733.721924 -2345.568359  396.150000 -2345.568359   0.000000    0.000000        0.000000     5.0     -2345.568359            -1             -1     -1
1   -1949.468506   -2255.368408 -1733.721924 -1949.468506  396.099854 -2255.368408   0.000000  305.899902      296.099854     1.0     -1949.468506         False           True  False
2   -1847.468506   -2153.468750 -1733.721924 -1847.468506  407.899902 -2153.468750   0.000000  306.000244      298.099854     2.0     -1949.468506         False          False  False
3   -1745.568604   -2045.568359 -1733.721924 -1745.568604  407.900146 -2045.568359   0.049805  299.949951      299.949951     3.0     -1949.468506         False          False  False
4   -1639.618408   -1949.468506 -1733.721924 -1639.618408  405.900146 -1949.468506   6.000000  303.850098      299.949951     4.0     -1949.468506         False          False   True
5   -1539.568359   -1847.468750 -1733.721924 -1539.568359  403.900146 -1847.468750   6.050049  301.850342      299.949951     4.0     -1949.468506         False           True   True
6   -1439.518555   -1845.568359 -1733.721924 -1439.518555  401.900146 -1845.568359   6.099854  399.949951      299.949951     4.0     -1445.618408          True           True   True
7   -1439.518555   -1714.343506 -1733.721924 -1439.518555  399.900146 -1714.343506   6.099854  268.725098      199.949951     4.0     -1445.618408         False           True   True
8   -1239.493652   -1545.568604 -1733.721924 -1239.493652  468.750000 -1545.568604   6.124756  299.950195      299.949951     3.0     -1445.618408         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1228595/4096.[0m
[08/10 15:20:59]  --------------------------------------------------------------------------------
[08/10 15:20:59]  Iteration: 64 (0 solution, 63 counterexamples)
[08/10 15:21:07]  Generator returned sat in 6.519521 secs.
[08/10 15:21:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:21:08]  Improved gap from 967/20 to 100
[08/10 15:21:09]  Improved number of small numbers from 68 to 89 out of a max of 114
[08/10 15:21:09]  Verifer returned sat in 1.171396 secs.
[08/10 15:21:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -6673.098877   -6773.298828 -1733.721924 -6673.098877    0.099854 -6773.298828    0.00000  100.199951      100.199922     2.0     -6773.298828            -1             -1   False
1   -6673.098877   -6673.298828 -1733.721924 -6673.098877    0.100000 -6673.298828    0.00000    0.199951        0.199922     2.0     -6773.298828         False          False   False
2   -6673.098877   -6673.298799 -1733.721924 -6673.098877    0.100098 -6673.298799    0.00000    0.199922      -99.800078     3.0     -6773.298828         False          False   False
3   -6469.698799   -6473.298799 -1733.721924 -6469.698799  203.600000 -6473.298799    3.40000    0.200000        0.200000     1.0     -6773.298828          True           True   False
4   -6369.598799   -6373.298799 -1733.721924 -6369.598799  100.300000 -6373.298799    3.50000    0.200000        0.200000     1.0     -6773.298828         False          False    True
5   -6321.148799   -6372.998799 -1733.721924 -6321.148799   48.650000 -6372.998799    3.50000   48.350000      -51.350000     1.0     -6773.298828         False          False    True
6   -5895.723799   -6173.298799 -1733.721924 -5895.723799  473.775000 -6173.298799  277.37500    0.200000        0.200000     1.0     -6773.298828         False          False    True
7   -5660.536299   -6073.298799 -1733.721924 -5660.536299  235.387500 -6073.298799  412.56250    0.200000        0.200000     1.0     -6773.298828         False          False    True
8   -5544.542549   -6073.298584 -1733.721924 -5544.542549  116.193750 -6073.298584  428.55625  100.199785        0.200000     2.0     -6773.298828         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:21:09]  --------------------------------------------------------------------------------
[08/10 15:21:09]  Iteration: 65 (0 solution, 64 counterexamples)
[08/10 15:21:42]  Generator returned sat in 30.787012 secs.
[08/10 15:21:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:21:44]  Improved gap from 0 to 3.125
[08/10 15:21:45]  Improved number of small numbers from 61 to 68 out of a max of 114
[08/10 15:21:45]  Verifer returned sat in 2.556348 secs.
[08/10 15:21:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6276.039795   -6279.542161 -2227.478760 -6276.039795    6.243408 -6279.542161     3.5000   0.002367        0.002168     9.0     -6279.542161            -1             -1     -1
1   -6269.801328   -6279.537161 -2133.724365 -6269.801328    6.240833 -6279.537161     3.5000   6.235833       -0.004971     1.0     -6273.301328         False           True  False
2   -6269.796328   -6273.296328 -2036.849395 -6269.796328    6.240833 -6273.296328     3.5000   0.000000       -3.125000     1.0     -6273.301328         False          False  False
3   -6244.788828   -6270.171328 -1958.731895 -6244.788828   25.007500 -6270.171328     3.5000  21.882500        0.000000     1.0     -6273.301328         False          False  False
4   -6244.788828   -6248.288828 -1861.856895 -6244.788828   14.056250 -6248.288828     3.5000   0.000000       -3.125000     2.0     -6273.301328         False          False  False
5   -6197.916328   -6245.163828 -1805.604395 -6197.916328   46.872500 -6245.163828     3.5000  43.747500        0.000000     1.0     -6273.301328         False          False  False
6   -6197.916328   -6201.416328 -1708.729395 -6197.916328   42.198750 -6201.416328     3.5000   0.000000       -3.125000     2.0     -6273.301328         False          False  False
7   -6094.783828   -6098.299072 -1708.729395 -6094.783828  103.132500 -6098.299072     3.5025   0.012744        0.005000     1.0     -6273.301328         False          False  False
8   -6094.783828   -6098.291260 -1708.729248 -6094.783828    0.010000 -6098.291260     3.5025   0.004932      -99.994854     2.0     -6273.301328         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/200.[0m
[08/10 15:21:45]  --------------------------------------------------------------------------------
[08/10 15:21:45]  Iteration: 66 (0 solution, 65 counterexamples)
[08/10 15:21:54]  Generator returned sat in 6.570003 secs.
[08/10 15:21:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:21:58]  Improved gap from 0 to 23.4375
[08/10 15:21:59]  Improved number of small numbers from 63 to 74 out of a max of 114
[08/10 15:21:59]  Verifer returned sat in 5.179820 secs.
[08/10 15:21:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5334.584961   -5338.087578 -2044.178223 -5334.584961  107.031006 -5338.087578     3.5000    0.002617        0.002539     2.0     -5338.087578            -1             -1   False
1   -5227.558828   -5254.002686 -2044.178223 -5227.558828  107.028750 -5254.002686     3.5000   22.943857        7.028672     1.0     -5231.058828         False          False   False
2   -5143.473877   -5231.056328 -2035.291992 -5143.473877  107.028809 -5231.056328     3.5000   84.082451       -0.000146     1.0     -5231.058828         False          False   False
3   -5120.033828   -5146.971328 -1958.731895 -5120.033828  107.522500 -5146.971328     3.5000   23.437500        0.000000     1.0     -5231.058828         False          False   False
4   -4896.593828   -5023.533828 -1958.731895 -4896.593828  246.877500 -5023.533828     3.5025  123.437500      123.437500     1.0     -5231.058828         False          False   False
5   -4896.593828   -4923.536377 -1958.731895 -4896.593828    0.010000 -4923.536377     3.5025   23.440049       23.437500     2.0     -5231.058828         False          False    True
6   -4896.593828   -4923.533828 -1882.169395 -4896.593828    0.010000 -4923.533828     3.5025   23.437500        0.000000     3.0     -5231.058828         False          False    True
7   -4896.593828   -4900.096328 -1807.611816 -4896.593828    0.010000 -4900.096328     3.5025    0.000000      -25.442422     4.0     -5231.058828         False          False    True
8   -4771.151328   -4874.653809 -1807.611816 -4771.151328  125.442500 -4874.653809     3.5025   99.999980        0.000078     1.0     -4774.653828          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 15:22:00]  --------------------------------------------------------------------------------
[08/10 15:22:00]  Iteration: 67 (0 solution, 66 counterexamples)
[08/10 15:22:09]  Generator returned sat in 6.776046 secs.
[08/10 15:22:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:10]  Improved gap from 0 to 23.4375
[08/10 15:22:11]  Improved number of small numbers from 45 to 49 out of a max of 114
[08/10 15:22:11]  Verifer returned sat in 2.074262 secs.
[08/10 15:22:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5744.924316   -6048.421143 -1958.731895 -5744.924316  107.031006 -6048.421143    3.499756  299.997070      199.997256     9.0     -6048.421143            -1             -1     -1
1   -5744.924316   -5848.421328 -1958.731895 -5744.924316  299.994873 -5848.421328    3.499756   99.997256       99.997256     2.0     -6048.421143         False           True  False
2   -5544.929072   -5748.421328 -1958.731895 -5544.929072  299.992500 -5748.421328  103.492256  100.000000      100.000000     1.0     -5648.421328         False          False  False
3   -5344.939072   -5674.478828 -1958.731895 -5344.939072  299.990000 -5674.478828  203.482256  126.057500      100.000000     2.0     -5548.421328         False          False   True
4   -5321.501572   -5548.421328 -1958.731895 -5321.501572  149.495000 -5548.421328  203.482256   23.437500       23.437500     2.0     -5548.421328         False          False   True
5   -5321.501572   -5548.421328 -1882.169395 -5321.501572    0.010000 -5548.421328  203.482256   23.437500        0.000000     2.0     -5548.421328         False          False   True
6   -5321.501572   -5524.983828 -1805.606895 -5321.501572    0.010000 -5524.983828  203.482256    0.000000      -23.437500     3.0     -5548.421328         False          False   True
7   -5024.511572   -5401.546328 -1805.606895 -5024.511572  296.990000 -5401.546328  277.034756  100.000000      100.000000     1.0     -5301.546328          True           True  False
8   -4976.516572   -5398.423828 -1805.606895 -4976.516572  147.995000 -5398.423828  277.034756  144.872500       47.995000     2.0     -5301.546328         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=100.[0m
[08/10 15:22:12]  --------------------------------------------------------------------------------
[08/10 15:22:12]  Iteration: 68 (0 solution, 67 counterexamples)
[08/10 15:22:31]  Generator returned sat in 17.028548 secs.
[08/10 15:22:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:32]  Improved gap from 3/3400 to 100
[08/10 15:22:33]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/10 15:22:33]  Verifer returned sat in 1.778284 secs.
[08/10 15:22:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5711.522217   -5711.622406 -2195.530817 -5711.522217  299.999756 -5711.622406       0.05    0.050189        0.050189     2.0     -5711.622406            -1             -1     -1
1   -5411.622406   -5711.522217 -2195.530817 -5411.622406  299.950000 -5711.522217       0.05  299.849811      199.950000     1.0     -5411.672406         False          False   True
2   -5411.622406   -5611.622406 -2195.530817 -5411.622406  266.683350 -5611.622406       0.05  199.950000       99.950000     2.0     -5411.672406         False          False   True
3   -5344.939072   -5411.622559 -2195.530817 -5344.939072  266.633333 -5411.622559       0.05   66.633486       66.633333     1.0     -5344.989072         False          False   True
4   -5011.622559   -5344.939072 -2195.530817 -5011.622559  399.950000 -5344.939072       0.05  333.266514      299.949847     1.0     -5344.989072         False          False   True
5   -4744.964072   -5211.622406 -2195.530817 -4744.964072  599.925000 -5211.622406       0.05  466.608333      466.608333     2.0     -5344.989072         False          False   True
6   -4311.684906   -5111.834717 -2195.530817 -4311.684906  899.887500 -5111.834717       0.10  800.049811      799.837500     3.0     -5344.989072         False          False   True
7   -4311.684906   -5011.622406 -2195.530817 -4311.684906  449.443750 -5011.622406       0.10  699.837500      699.837500     3.0     -4311.784906          True           True   True
8   -4311.684906   -4911.622559 -2195.530817 -4311.684906  499.475000 -4911.622559       0.10  599.837653      599.837500     4.0     -4311.784906         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=63987/80.[0m
[08/10 15:22:33]  --------------------------------------------------------------------------------
[08/10 15:22:33]  Iteration: 69 (0 solution, 68 counterexamples)
[08/10 15:22:37]  Generator returned sat in 1.921683 secs.
[08/10 15:22:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:39]  Improved gap from 0 to 48.4375
[08/10 15:22:39]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:22:39]  Verifer returned sat in 1.853341 secs.
[08/10 15:22:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -4656.054932   -4804.442139 -2151.290771 -4656.054932    0.099854 -4804.442139   0.050049  148.337158      100.199951     3.0     -4804.442139            -1             -1     -1
1   -4655.954834   -4756.304688 -2151.290771 -4655.954834  148.437256 -4756.304688   0.149902  100.199951        0.200195     2.0     -4804.442139         False           True  False
2   -4607.717285   -4656.304688 -2099.728516 -4607.717285  148.437500 -4656.304688   0.149902   48.437500        0.000000     3.0     -4804.442139         False          False   True
3   -4441.454590   -4507.867188 -2099.728516 -4441.454590  214.700195 -4507.867188  66.212402    0.200195        0.200195     1.0     -4804.442139          True           True  False
4   -4334.804688   -4412.154785 -2099.728516 -4334.804688  106.850098 -4412.154785  72.862305    4.487793        0.200195     1.0     -4804.442139         False          False   True
5   -4286.367432   -4407.567383 -2048.465820 -4286.367432   52.925049 -4407.567383  72.862305   48.337646       -0.099854     1.0     -4804.442139         False          False   True
6   -4279.780029   -4359.129883 -1996.903320 -4279.780029   54.925049 -4359.129883  72.862305    6.487549      -41.949951     1.0     -4804.442139         False          False   True
7   -4229.342529   -4310.692383 -1945.340820 -4229.342529   56.925049 -4310.692383  72.862305    8.487549      -39.949951     1.0     -4804.442139         False          False   True
8   -4178.905029   -4262.254883 -1893.778320 -4178.905029   58.925049 -4262.254883  72.862305   10.487549      -37.949951     1.0     -4804.442139         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=205/1024.[0m
[08/10 15:22:40]  --------------------------------------------------------------------------------
[08/10 15:22:40]  Iteration: 70 (0 solution, 69 counterexamples)
[08/10 15:22:45]  Generator returned sat in 3.321196 secs.
[08/10 15:22:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:46]  Improved gap from 0 to 100
[08/10 15:22:47]  Improved number of small numbers from 57 to 84 out of a max of 114
[08/10 15:22:47]  Verifer returned sat in 1.311982 secs.
[08/10 15:22:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4589.738281   -4589.788086 -2116.580782 -4589.738281  100.100098 -4589.788086       0.00    0.049805       -0.050114     1.0     -4589.788086            -1             -1    True
1   -4489.738037   -4589.687988 -2116.580782 -4489.738037  100.050049 -4589.687988       0.00   99.949951       -0.049870     1.0     -4489.738037         False          False    True
2   -4368.501465   -4489.687988 -2116.580782 -4368.501465  221.186523 -4489.687988       0.00  121.186523       21.186702     1.0     -4489.738037         False          False    True
3   -4368.501465   -4389.688167 -2116.580782 -4368.501465  121.136626 -4389.688167       0.00   21.186702      -78.813298     2.0     -4368.501465         False          False    True
4   -4209.483229   -4289.688167 -2116.580782 -4209.483229  180.204938 -4289.688167       0.00   80.204938      -19.795062     1.0     -4368.501465         False          False    True
5   -4020.880760   -4189.688167 -2116.580782 -4020.880760  268.807407 -4189.688167       0.00  168.807407       68.807407     1.0     -4368.501465         False          False    True
6   -3787.977056   -4020.830760 -2116.580782 -3787.977056  401.711111 -4020.830760       0.00  232.853704      201.711111     1.0     -4368.501465         False          False    True
7   -3419.764093   -3889.688167 -2116.580782 -3419.764093  601.066667 -3889.688167       0.00  469.924074      469.924074     2.0     -4368.501465         False          False    True
8   -2989.588167   -3789.688232 -2116.580782 -2989.588167  900.100000 -3789.688232       0.05  800.050065      800.050000     3.0     -4368.501465         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=16001/20.[0m
[08/10 15:22:47]  --------------------------------------------------------------------------------
[08/10 15:22:47]  Iteration: 71 (0 solution, 70 counterexamples)
[08/10 15:22:59]  Generator returned sat in 9.344769 secs.
[08/10 15:22:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:00]  Improved gap from 0 to 100
[08/10 15:23:00]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:23:00]  Verifer returned sat in 1.005844 secs.
[08/10 15:23:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -4589.729980   -4689.688232 -2016.580811 -4589.729980    0.041504 -4689.688232    0.000000   99.958252       99.958008     5.0     -4689.688232            -1             -1     -1
1   -4289.729980   -4589.688232 -2016.580811 -4289.729980  399.958252 -4589.688232    0.000000  299.958252      299.958008     1.0     -4689.688232         False           True  False
2   -4189.729736   -4491.396484 -2016.580811 -4189.729736  399.958496 -4491.396484    0.000000  301.666748      299.958252     2.0     -4689.688232         False          False  False
3   -4089.646484   -4389.687988 -2016.580811 -4089.646484  401.750000 -4389.687988    0.041504  300.000000      300.000000     3.0     -4689.688232         False          False  False
4   -3988.896484   -4389.479736 -2016.580811 -3988.896484  400.750000 -4389.479736    0.791504  399.791748      300.000000     4.0     -4689.688232         False          False   True
5   -3988.896484   -4189.729736 -2016.580811 -3988.896484  399.750000 -4189.729736    0.791504  200.041748      200.000000     4.0     -3989.687988          True           True   True
6   -3686.896484   -4089.687988 -2016.580811 -3686.896484  502.041748 -4089.687988  102.791504  300.000000      300.000000     4.0     -3989.687988         False           True  False
7   -3485.854736   -4089.687988 -2016.580811 -3485.854736  501.041748 -4089.687988  203.833252  400.000000      300.000000     4.0     -3989.687988         False           True   True
8   -3385.812988   -3889.687988 -2016.580811 -3385.812988  500.041748 -3889.687988  203.875000  300.000000      300.000000     3.0     -3989.687988         False           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=300.[0m
[08/10 15:23:01]  --------------------------------------------------------------------------------
[08/10 15:23:01]  Iteration: 72 (0 solution, 71 counterexamples)
[08/10 15:23:06]  Generator returned sat in 2.718003 secs.
[08/10 15:23:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:06]  Improved gap from 0 to 23.4375
[08/10 15:23:06]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:23:06]  Verifer returned sat in 0.512326 secs.
[08/10 15:23:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3315.997314   -3339.435059 -3366.833740 -3315.997314    0.001221 -3339.435059    0.000000   23.437744       23.437744     7.0     -3339.435059            -1             -1     -1
1   -3315.997314   -3339.434814 -3290.271484 -3315.997314    0.001465 -3339.434814    0.000000   23.437500        0.000000     2.0     -3339.435059         False           True  False
2   -2989.434814   -3315.996338 -3290.271484 -2989.434814  350.000000 -3315.996338    0.001221  326.560303      226.561279     1.0     -3339.435059         False          False  False
3   -2989.434814   -3215.997314 -3290.271484 -2989.434814    0.001465 -3215.997314    0.001221  226.561279      126.561279     2.0     -2989.436035         False          False   True
4   -2989.434814   -3015.997559 -3290.271484 -2989.434814    0.010000 -3015.997559    0.001221   26.561523       26.561279     3.0     -2989.436035         False          False   True
5   -2989.434814   -3012.873779 -3216.832764 -2989.434814    0.010000 -3012.873779    0.001221   23.437744        0.000000     4.0     -2989.436035         False          False   True
6   -2989.434814   -2989.436035 -3140.270264 -2989.434814    0.010000 -2989.436035    0.001221    0.000000      -23.437500     5.0     -2989.436035         False          False   True
7   -2536.812256   -2965.998535 -3140.270264 -2536.812256  452.622559 -2965.998535  102.625000  326.561279      226.561279     1.0     -2989.436035         False           True  False
8   -2536.812256   -2865.998535 -3140.270264 -2536.812256    0.010000 -2865.998535  102.625000  226.561279      126.561279     2.0     -2989.436035         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=927995/4096.[0m
[08/10 15:23:07]  --------------------------------------------------------------------------------
[08/10 15:23:07]  Iteration: 73 (0 solution, 72 counterexamples)
[08/10 15:23:19]  Generator returned sat in 10.148863 secs.
[08/10 15:23:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:20]  Improved gap from 3971/409600 to 12.5
[08/10 15:23:20]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:23:20]  Verifer returned sat in 0.979916 secs.
[08/10 15:23:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2170.482422   -2357.882080 -3290.271484 -2170.482422   12.500000 -2357.882080        0.0  187.399658       87.399658     1.0     -2357.882080            -1             -1   False
1   -1920.482178   -2170.382080 -3290.271484 -1920.482178  437.399902 -2170.382080        0.0  249.899902      237.399902     1.0     -2357.882080         False          False   False
2   -1733.082275   -2148.182129 -3290.271484 -1733.082275  437.299805 -2148.182129        0.0  415.099854      324.799805     2.0     -1733.082275         False          False   False
3   -1733.082275   -1957.882324 -3290.271484 -1733.082275  415.000000 -1957.882324        0.0  224.800049      224.799805     3.0     -1733.082275         False          False   False
4   -1733.082275   -1857.882080 -3290.271484 -1733.082275  207.000000 -1857.882080        0.0  124.799805      124.799805     3.0     -1733.082275         False          False   False
5   -1733.082275   -1783.982178 -3290.271484 -1733.082275  103.000000 -1783.982178        0.0   50.899902       24.799805     4.0     -1733.082275         False          False   False
6   -1732.982178   -1732.982178 -3227.671387 -1732.982178   51.000000 -1732.982178        0.0    0.000000      -12.500000     1.0     -1733.082275         False          False   False
7   -1707.982178   -1720.482178 -3140.171387 -1707.982178   25.000000 -1720.482178        0.0   12.500000        0.000000     1.0     -1733.082275         False          False   False
8   -1707.982178   -1707.982178 -3140.171387 -1707.982178   12.000000 -1707.982178        0.0    0.000000     -100.000000     2.0     -1733.082275         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3249/10.[0m
[08/10 15:23:21]  --------------------------------------------------------------------------------
[08/10 15:23:21]  Iteration: 74 (0 solution, 73 counterexamples)
[08/10 15:23:31]  Generator returned sat in 8.157360 secs.
[08/10 15:23:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:32]  Improved gap from 1/600 to 1.5625
[08/10 15:23:32]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 15:23:32]  Verifer returned sat in 0.461436 secs.
[08/10 15:23:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2057.883545   -2157.882080 -3390.271729 -2057.883545  202.004883 -2157.882080   0.000000   99.998535       99.998535     2.0     -2157.882080            -1             -1    True
1   -1955.877197   -2057.882080 -3390.271729 -1955.877197  202.004883 -2057.882080   0.003662  102.001221      102.001221     1.0     -2157.882080         False          False    True
2   -1855.874512   -1957.882324 -3390.271729 -1855.874512  202.003906 -1957.882324   0.006348  102.001465      102.001221     2.0     -1855.880859         False          False    True
3   -1755.873535   -1857.882080 -3390.271729 -1755.873535  202.002441 -1857.882080   0.007324  102.001221      102.001221     2.0     -1755.880859         False          False    True
4   -1755.873535   -1857.882080 -3390.271729 -1755.873535    2.000000 -1857.882080   0.007324  102.001221        2.001221     2.0     -1755.880859         False          False    True
5   -1755.873535   -1757.882080 -3292.272949 -1755.873535    0.010000 -1757.882080   0.007324    2.001221        0.000000     3.0     -1755.880859         False          False    True
6   -1755.873535   -1755.880859 -3194.271729 -1755.873535    2.000000 -1755.880859   0.007324    0.000000       -1.998779     4.0     -1755.880859         False           True   False
7   -1753.873535   -1753.882080 -3095.834229 -1753.873535    2.000000 -1753.882080   0.007324    0.001221       -1.561279     1.0     -1755.880859         False           True   False
8   -1751.874756   -1752.319580 -3095.834229 -1751.874756    2.000000 -1752.319580   0.007324    0.437500      -99.562500     1.0     -1755.880859         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=417797/4096.[0m
[08/10 15:23:33]  --------------------------------------------------------------------------------
[08/10 15:23:33]  Iteration: 75 (0 solution, 74 counterexamples)
[08/10 15:23:37]  Generator returned sat in 1.901634 secs.
[08/10 15:23:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:38]  Improved gap from 895/2048 to 0
[08/10 15:23:38]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 15:23:38]  Verifer returned sat in 0.730666 secs.
[08/10 15:23:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2150.649658   -2449.749512 -3493.784180 -2150.649658  199.099854 -2449.749512        0.0  299.099854      299.099854     5.0     -2449.749512            -1             -1     -1
1   -2150.649658   -2349.749756 -3493.784180 -2150.649658  199.099854 -2349.749756        0.0  199.100098      199.099854     3.0     -2449.749512         False           True  False
2   -2150.649658   -2349.749512 -3493.784180 -2150.649658  199.100098 -2349.749512        0.0  199.099854       99.099854     3.0     -2449.749512          True           True  False
3   -2149.699463   -2150.649658 -3493.784180 -2149.699463  200.050049 -2150.649658        0.0    0.950195        0.050049     4.0     -2449.749512          True           True  False
4   -2149.649658   -2149.749512 -3393.884277 -2149.649658    1.000000 -2149.749512        0.0    0.099854       -0.000244     2.0     -2149.649658          True           True  False
5   -2148.749512   -2149.649414 -3294.784424 -2148.749512    1.000000 -2149.649414        0.0    0.899902       -0.000244     1.0     -2149.649658         False          False  False
6   -2148.649414   -2148.699707 -3194.934326 -2148.649414    1.000000 -2148.699707        0.0    0.050293       -0.050049     1.0     -2149.649658         False          False  False
7   -2147.699707   -2148.599365 -3095.834229 -2147.699707    1.000000 -2148.599365        0.0    0.899658       -0.000244     1.0     -2149.649658         False          False  False
8   -2147.599365   -2147.599609 -2996.034180 -2147.599365    1.000000 -2147.599609        0.0    0.000244       -0.099854     1.0     -2149.649658         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=407859/2048.[0m
[08/10 15:23:38]  --------------------------------------------------------------------------------
[08/10 15:23:38]  Iteration: 76 (0 solution, 75 counterexamples)
[08/10 15:23:52]  Generator returned sat in 10.924132 secs.
[08/10 15:23:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:52]  Improved gap from 0 to 48.4375
[08/10 15:23:53]  Improved number of small numbers from 70 to 79 out of a max of 114
[08/10 15:23:53]  Verifer returned sat in 1.282895 secs.
[08/10 15:23:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2250.649902   -2450.650908 -3592.882568 -2250.649902    0.001465 -2450.650908    0.00125  199.999756       99.999971     1.0     -2450.650908            -1             -1     -1
1   -2250.649658   -2350.648438 -3592.882568 -2250.649658  200.000000 -2350.648438    0.00125   99.997529        0.000215     2.0     -2450.650908         False          False   True
2   -2150.648408   -2205.323408 -3592.882568 -2150.648408  199.998779 -2205.323408    0.00125   54.673750        0.001465     1.0     -2150.649658          True           True  False
3   -2150.648408   -2150.650908 -3541.320283 -2150.648408    0.001465 -2150.650908    0.00125    0.001250      -48.436250     2.0     -2150.649658         False          False  False
4   -2000.649658   -2002.219658 -3541.320283 -2000.649658  150.000000 -2002.219658    1.56125    0.008750        0.002500     1.0     -2150.649658         False           True  False
5   -2000.648408   -2002.213408 -3489.757783 -2000.648408    0.010000 -2002.213408    1.56125    0.003750      -48.433750     2.0     -2150.649658         False          False   True
6   -1899.097158   -1953.775908 -3442.875283 -1899.097158  101.555000 -1953.775908    1.56125   53.117500        0.000000     1.0     -1900.658408          True           True  False
7   -1853.777158   -1900.658408 -3391.312988 -1853.777158   98.437500 -1900.658408    1.56125   45.320000       -3.117705     2.0     -1900.658408         False          False  False
8   -1848.316533   -1852.220703 -3391.312744 -1848.316533   50.780625 -1852.220703    1.56125    2.342920      -97.656836     1.0     -1900.658408         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 15:23:54]  --------------------------------------------------------------------------------
[08/10 15:23:54]  Iteration: 77 (0 solution, 76 counterexamples)
[08/10 15:24:09]  Generator returned sat in 13.064368 secs.
[08/10 15:24:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:10]  Improved gap from 1/1600 to 23.4375
[08/10 15:24:11]  Improved number of small numbers from 70 to 76 out of a max of 114
[08/10 15:24:11]  Verifer returned sat in 1.884892 secs.
[08/10 15:24:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2250.649658   -2350.655908 -3592.881533 -2250.649658    0.001465 -2350.655908    0.001250  100.005000       100.00125     1.0     -2350.655908            -1             -1     -1
1   -2250.649658   -2250.652344 -3592.881533 -2250.649658  100.003906 -2250.652344    0.001250    0.001436         0.00125     2.0     -2350.655908         False          False   True
2   -2150.648408   -2150.652158 -3592.881533 -2150.648408  100.002686 -2150.652158    0.001250    0.002500         0.00250     1.0     -2150.649658          True           True  False
3   -2150.648408   -2150.652158 -3592.881533 -2150.648408    0.001465 -2150.652158    0.001250    0.002500       -99.99750     1.0     -2150.649658         False          False  False
4   -1852.645283   -1953.774658 -3592.881533 -1852.645283  298.005625 -1953.774658   98.004375    3.125000         0.00250     1.0     -2150.649658         False          False  False
5   -1852.645283   -1950.650908 -3516.320283 -1852.645283    0.010000 -1950.650908   98.004375    0.001250       -23.43625     2.0     -2150.649658         False          False   True
6   -1554.644658   -1827.221924 -3516.320283 -1554.644658  298.001875 -1827.221924  272.566250    0.011016         0.00250     1.0     -1827.210908          True           True  False
7   -1554.644658   -1827.213408 -3439.757783 -1554.644658    0.010000 -1827.213408  272.566250    0.002500       -23.43500     2.0     -1827.210908         False          False   True
8   -1366.805283   -1803.775879 -3439.757783 -1366.805283  187.841875 -1803.775879  336.968125  100.002471         0.00250     1.0     -1827.210908         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/400.[0m
[08/10 15:24:12]  --------------------------------------------------------------------------------
[08/10 15:24:12]  Iteration: 78 (0 solution, 77 counterexamples)
[08/10 15:24:24]  Generator returned sat in 10.176735 secs.
[08/10 15:24:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:25]  Improved gap from 0 to 46.875
[08/10 15:24:25]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:24:25]  Verifer returned sat in 0.670922 secs.
[08/10 15:24:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2102.694824   -2402.669434 -3618.545410 -2102.694824  298.100098 -2402.669434        0.0  299.974609      199.974609     9.0     -2402.669434            -1             -1     -1
1   -2102.694824   -2202.669678 -3618.545410 -2102.694824  298.074951 -2202.669678        0.0   99.974854       99.974609     2.0     -2102.694824         False           True  False
2   -1904.619873   -2102.669434 -3618.545410 -1904.619873  298.049805 -2102.669434        0.0  198.049561      198.049561     1.0     -1904.619873         False          False  False
3   -1904.619873   -2002.669434 -3618.545410 -1904.619873   56.875000 -2002.669434        0.0   98.049561       98.049561     2.0     -1904.619873         False          False  False
4   -1904.619873   -1904.644531 -3618.545410 -1904.619873   54.875000 -1904.644531        0.0    0.024658       -1.950439     3.0     -1904.619873         False          False  False
5   -1851.769531   -1902.669434 -3569.445312 -1851.769531   52.875000 -1902.669434        0.0   50.899902        0.000000     1.0     -1904.619873         False          False  False
6   -1851.769531   -1851.769531 -3516.320312 -1851.769531   50.875000 -1851.769531        0.0    0.000000      -46.875000     2.0     -1904.619873         False          False  False
7   -1802.894531   -1804.894531 -3463.195312 -1802.894531   48.875000 -1804.894531        0.0    2.000000      -44.875000     1.0     -1904.619873         False          False  False
8   -1758.019531   -1758.019531 -3463.195068 -1758.019531   46.875000 -1758.019531        0.0    0.000000      -99.999756     1.0     -1904.619873         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=202829/1024.[0m
[08/10 15:24:26]  --------------------------------------------------------------------------------
[08/10 15:24:26]  Iteration: 79 (0 solution, 78 counterexamples)
[08/10 15:24:33]  Generator returned sat in 4.456509 secs.
[08/10 15:24:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:34]  Improved gap from 1/100 to 12.5
[08/10 15:24:34]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 15:24:34]  Verifer returned sat in 1.527463 secs.
[08/10 15:24:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16220.527100  -16752.677002  10831.412188 -16220.527100    0.050049 -16752.677002   0.050049  532.099854      532.049883     9.0    -16752.677002            -1             -1     -1
1  -16220.526855  -16752.626953  10831.412188 -16220.526855  532.100098 -16752.626953   0.050049  532.050049      432.050127     5.0    -16752.677002         False           True   True
2  -16220.526855  -16652.626953  10831.412188 -16220.526855  432.050049 -16652.626953   0.050049  432.050049      332.050127     5.0    -16220.576904         False          False   True
3  -16220.526855  -16552.626953  10831.412188 -16220.526855  432.000000 -16552.626953   0.050049  332.050049      232.050127     6.0    -16220.576904         False          False   True
4  -16220.526855  -16352.627197  10831.412188 -16220.526855  216.000000 -16352.627197   0.050049  132.050293      132.050127     7.0    -16220.576904         False          False   True
5  -16220.526855  -16274.626953  10831.412188 -16220.526855  108.000000 -16274.626953   0.050049   54.050049       32.050127     8.0    -16220.576904         False          False   True
6  -16220.526855  -16233.026855  10899.312012 -16220.526855   54.000000 -16233.026855   0.050049   12.449951       -0.050049     9.0    -16220.576904         False          False   True
7  -16207.976807  -16220.526855  10986.812012 -16207.976807   25.000000 -16220.526855   0.050049   12.500000        0.000000     1.0    -16220.576904         False           True  False
8  -16207.976807  -16208.026855  11074.312012 -16207.976807   10.500000 -16208.026855   0.050049    0.000000      -12.500000     2.0    -16220.576904         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=884941/2048.[0m
[08/10 15:24:35]  --------------------------------------------------------------------------------
[08/10 15:24:35]  Iteration: 80 (0 solution, 79 counterexamples)
[08/10 15:24:49]  Generator returned sat in 11.324909 secs.
[08/10 15:24:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:49]  Improved gap from 0 to 23.4375
[08/10 15:24:50]  Improved number of small numbers from 64 to 110 out of a max of 114
[08/10 15:24:50]  Verifer returned sat in 1.358944 secs.
[08/10 15:24:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16904.978516  -17104.978516  10831.412354 -16904.978516    0.001709 -17104.978516    0.001709  199.998291       99.998291     1.0    -17104.978516            -1             -1     -1
1  -16904.978516  -17004.978516  10831.412354 -16904.978516  199.996826 -17004.978516    0.001709   99.998291       -0.001709     2.0    -17104.978516         False          False   True
2  -16804.981689  -16904.978271  10831.417236 -16804.981689  199.995117 -16904.978271    0.001709   99.994873        0.000000     1.0    -16804.983398          True           True  False
3  -16704.983398  -16728.422607  10831.418945 -16704.983398  199.993164 -16728.422607    0.001709   23.437500        0.000000     1.0    -16704.985107         False          False  False
4  -16353.364990  -16604.993652  10831.418945 -16353.364990  375.055908 -16604.993652  251.616699    0.011963        0.003418     1.0    -16704.985107         False          False  False
5  -16353.364990  -16604.981689  10906.493164 -16353.364990    0.010000 -16604.981689  251.616699    0.000000      -24.922363     2.0    -16704.985107         False          False   True
6  -16054.868408  -16480.064307  10906.493164 -16054.868408  298.496582 -16480.064307  425.187500    0.008398        0.003418     1.0    -16480.055908          True           True  False
7  -16054.866807  -16480.056152  10983.052187 -16054.866807    0.010000 -16480.056152  425.187500    0.001846      -23.435957     2.0    -16480.055908         False          False   True
8  -15931.431152  -16454.995117  10983.052187 -15931.431152  123.437500 -16454.995117  425.187500   98.376465       -0.000303     1.0    -16480.055908         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=7/2048.[0m
[08/10 15:24:51]  --------------------------------------------------------------------------------
[08/10 15:24:51]  Iteration: 81 (0 solution, 80 counterexamples)
[08/10 15:24:55]  Generator returned sat in 1.799140 secs.
[08/10 15:24:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:55]  Improved gap from 7/32768 to 100
[08/10 15:24:56]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:24:56]  Verifer returned sat in 0.459262 secs.
[08/10 15:24:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17339.205566  -17539.255127  11265.688965 -17339.205566    0.049805 -17539.255127    0.049805  199.999756       99.999756     9.0    -17539.255127            -1             -1     -1
1  -17339.205566  -17439.005127  11265.688965 -17339.205566  199.950195 -17439.005127    0.049805   99.749756       -0.000244     3.0    -17539.255127         False           True   True
2  -17239.055176  -17338.955566  11265.688965 -17239.055176  199.900146 -17338.955566    0.100098   99.800293        0.099854     1.0    -17239.155273          True           True  False
3  -17139.005371  -17139.255127  11265.688965 -17139.005371  199.850098 -17139.255127    0.149902    0.099854        0.099854     1.0    -17139.155273         False          False   True
4  -16941.105225  -17040.705322  11265.688965 -16941.105225  198.000000 -17040.705322   98.050049    1.550049        0.099854     1.0    -17139.155273         False          False   True
5  -16745.505371  -17004.388672  11265.688965 -16745.505371  197.149902 -17004.388672  193.649902   65.233398        0.099854     1.0    -17139.155273         False          False   True
6  -16645.455322  -16937.822021  11265.688965 -16645.455322  165.283447 -16937.822021  193.699951   98.666748        0.099854     1.0    -17139.155273         False          False   True
7  -16645.405518  -16839.155273  11265.688965 -16645.405518   98.716553 -16839.155273  193.699951    0.049805      -99.850342     2.0    -17139.155273         False          False   True
8  -16445.405273  -16739.255127  11265.688965 -16445.405273  200.050049 -16739.255127  193.750000  100.099854        0.099854     1.0    -16639.155273          True           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=409/4096.[0m
[08/10 15:24:56]  --------------------------------------------------------------------------------
[08/10 15:24:56]  Iteration: 82 (0 solution, 81 counterexamples)
[08/10 15:25:20]  Generator returned sat in 21.531350 secs.
[08/10 15:25:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:25:22]  Improved number of small numbers from 65 to 77 out of a max of 113
[08/10 15:25:22]  Verifer returned sat in 1.475747 secs.
[08/10 15:25:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -18487.505615  -18687.605469  12414.039404 -18487.505615  200.099854 -18687.605469     0.000000  200.099854      100.099951     9.0    -18687.605469            -1             -1     -1
1  -18487.505615  -18587.205566  12414.039404 -18487.505615  200.000000 -18587.205566     0.000000   99.699951        0.099951     5.0    -18487.505615         False           True  False
2  -18387.305566  -18487.505566  12414.039404 -18387.305566  199.900000 -18487.505566     0.100000  100.100000        0.200000     1.0    -18387.405566         False          False  False
3  -17657.005566  -18387.305566  12414.039404 -17657.005566  830.400000 -18387.305566   630.400000   99.900000        0.200000     1.0    -18387.405566         False          False   True
4  -17343.705566  -18187.605566  12414.039404 -17343.705566  413.200000 -18187.605566   843.700000    0.200000        0.200000     1.0    -18387.405566         False          False   True
5  -17139.305566  -18087.605566  12414.039404 -17139.305566  204.600000 -18087.605566   948.100000    0.200000        0.200000     1.0    -18387.405566         False          False   True
6  -17039.205566  -17987.605566  12414.039404 -17039.205566  100.300000 -17987.605566   948.200000    0.200000        0.200000     1.0    -18387.405566         False          False   True
7  -16991.255566  -17939.555566  12414.039551 -16991.255566   48.150000 -17939.555566   948.200000    0.100000      -51.849854     1.0    -18387.405566         False          False   True
8  -16495.255566  -17887.605713  12414.039551 -16495.255566  496.100000 -17887.605713  1292.150146  100.200000        0.200000     1.0    -18387.405566         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:25:23]  --------------------------------------------------------------------------------
[08/10 15:25:23]  Iteration: 83 (0 solution, 82 counterexamples)
[08/10 15:25:39]  Generator returned sat in 14.189989 secs.
[08/10 15:25:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:25:40]  Improved gap from 1/2400 to 100
[08/10 15:25:40]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:25:40]  Verifer returned sat in 0.550365 secs.
[08/10 15:25:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -18686.205322  -18686.405518  12414.039307 -18686.205322    0.099854 -18686.405518    0.100098    0.100098      -98.899902     4.0    -18686.405518            -1             -1     -1
1  -18487.405273  -18586.305420  12414.039307 -18487.405273  198.900146 -18586.305420    0.100098   98.800049       -0.099854     1.0    -18686.405518         False           True   True
2  -18387.405273  -18487.405518  12414.039307 -18387.405273  198.800049 -18487.405518    0.100098   99.900146       -0.099854     1.0    -18387.505371         False          False   True
3  -18288.605225  -18387.405518  12414.039307 -18288.605225  198.700195 -18387.405518    0.100098   98.700195       -1.299805     1.0    -18288.705322         False          False   True
4  -18090.305420  -18235.605225  12414.039307 -18090.305420  297.000000 -18235.605225   96.899902   48.399902        0.200195     1.0    -18288.705322         False          False   True
5  -17990.205322  -18161.555420  12414.039307 -17990.205322  148.500000 -18161.555420   97.000000   74.350098        0.200195     1.0    -18288.705322         False          False   True
6  -17990.205322  -18087.305420  12414.039307 -17990.205322   74.250000 -18087.305420   97.000000    0.100098      -99.799805     2.0    -18288.705322         False          False   True
7  -17392.105225  -17987.405518  12414.039307 -17392.105225  598.200195 -17987.405518  495.100098  100.200195        0.200195     1.0    -17887.205322          True           True  False
8  -17193.205322  -17887.105225  12414.039307 -17193.205322  299.100098 -17887.105225  594.000000   99.899902        0.200195     1.0    -17887.205322         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/1024.[0m
[08/10 15:25:41]  --------------------------------------------------------------------------------
[08/10 15:25:41]  Iteration: 84 (0 solution, 83 counterexamples)
[08/10 15:25:55]  Generator returned sat in 11.391877 secs.
[08/10 15:25:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:00]  Improved gap from 1/1000 to 29.6875
[08/10 15:26:01]  Improved number of small numbers from 60 to 66 out of a max of 114
[08/10 15:26:01]  Verifer returned sat in 6.395854 secs.
[08/10 15:26:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -19906.105713  -20106.005518  13832.639307 -19906.105713    0.100000 -20106.005518    0.000000  199.899805       99.899805     5.0    -20106.005518            -1             -1     -1
1  -19905.705518  -19906.005518  13832.639307 -19905.705518  200.300000 -19906.005518    0.100000    0.200000        0.200000     1.0    -20106.005518         False           True  False
2  -19705.605518  -19806.005518  13832.639307 -19705.605518  200.300000 -19806.005518  100.200000    0.200000        0.200000     1.0    -20106.005518         False          False   True
3  -19656.690934  -19786.578434  13883.524723 -19656.690934   49.114583 -19786.578434  100.200000   29.687500        0.000000     1.0    -19756.890934         False          False   True
4  -19502.607601  -19656.890934  13883.524723 -19502.607601  183.770833 -19656.890934  154.083333    0.200000        0.200000     1.0    -19756.890934         False          False   True
5  -19412.922184  -19656.590934  13893.639307 -19412.922184   89.885417 -19656.590934  154.083333   89.585417        0.000000     1.0    -19756.890934         False          False   True
6  -19383.357601  -19567.005518  13963.951660 -19383.357601  119.150000 -19567.005518  154.083333   29.564583       -0.123063     2.0    -19756.890934         False          False   True
7  -19353.347184  -19537.317871  14034.064307 -19353.347184   59.575000 -19537.317871  154.083333   29.887354        0.000000     1.0    -19507.430518          True           True  False
8  -19353.347184  -19507.430518  14104.376709 -19353.347184   29.787500 -19507.430518  154.083333    0.000000      -29.687598     2.0    -19507.430518         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:26:02]  --------------------------------------------------------------------------------
[08/10 15:26:02]  Iteration: 85 (0 solution, 84 counterexamples)
[08/10 15:26:07]  Generator returned sat in 2.091429 secs.
[08/10 15:26:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:12]  Improved gap from 1785091/61440 to 29.6875
[08/10 15:26:13]  Improved number of small numbers from 61 to 66 out of a max of 114
[08/10 15:26:13]  Verifer returned sat in 6.308915 secs.
[08/10 15:26:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -20078.925537  -20278.825518  14334.776807 -20078.925537  200.1000 -20278.825518     0.0000  199.899980       99.899980     1.0    -20278.825518            -1             -1   False
1  -20078.725518  -20078.825518  14334.776807 -20078.725518  200.1000 -20078.825518     0.0000    0.100000        0.100000     1.0    -20278.825518         False          False   False
2  -19878.725518  -19983.963018  14334.776807 -19878.725518  200.1000 -19983.963018    83.1875   22.050000       16.912500     1.0    -20278.825518         False          False   False
3  -19848.938018  -19961.813018  14388.076807 -19848.938018   51.8375 -19961.813018    83.1875   29.687500        0.000000     1.0    -19932.125518         False          False    True
4  -19695.700518  -19832.125518  14388.076807 -19695.700518  182.9250 -19832.125518   119.5125   16.912500       16.912500     1.0    -19932.125518         False          False    True
5  -19623.150518  -19832.125518  14398.614307 -19623.150518   89.4625 -19832.125518   119.5125   89.462500        0.000000     1.0    -19932.125518         False          False    True
6  -19593.463018  -19742.663018  14468.926758 -19593.463018  119.1500 -19742.663018   119.5125   29.687500       -0.000049     2.0    -19932.125518         False          False    True
7  -19563.575518  -19712.975342  14539.039307 -19563.575518   59.5750 -19712.975342   119.5125   29.887324        0.000000     1.0    -19683.088018          True           True   False
8  -19563.575518  -19683.088018  14539.039307 -19563.575518   29.7875 -19683.088018   119.5125    0.000000     -100.000000     2.0    -19683.088018         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1353/80.[0m
[08/10 15:26:14]  --------------------------------------------------------------------------------
[08/10 15:26:14]  Iteration: 86 (0 solution, 85 counterexamples)
[08/10 15:26:18]  Generator returned sat in 2.024418 secs.
[08/10 15:26:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:24]  Improved gap from 0 to 29.6875
[08/10 15:26:25]  Improved number of small numbers from 80 to 85 out of a max of 114
[08/10 15:26:25]  Verifer returned sat in 6.072488 secs.
[08/10 15:26:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23602.238037  -23702.237842  17758.189014 -23602.238037  200.199951 -23702.237842     0.1000   99.899805       -0.100195     6.0    -23702.237842            -1             -1     -1
1  -23502.037842  -23602.237842  17758.189014 -23502.037842  200.100000 -23602.237842     0.1000  100.100000        0.100000     1.0    -23502.137842         False           True   True
2  -23402.037842  -23402.237842  17758.189014 -23402.037842  200.100000 -23402.237842     0.1000    0.100000        0.100000     1.0    -23502.137842         False          False   True
3  -23353.137842  -23379.787842  17806.051514 -23353.137842   49.000000 -23379.787842     0.1000   26.550000       -3.137500     1.0    -23353.237842         False          False   True
4  -23195.962842  -23250.100342  17806.051514 -23195.962842  183.725000 -23250.100342    53.9375    0.200000        0.200000     1.0    -23353.237842         False          False   True
5  -23106.300342  -23249.800342  17816.189014 -23106.300342   89.862500 -23249.800342    53.9375   89.562500        0.000000     1.0    -23353.237842         False          False   True
6  -23076.712842  -23160.237842  17886.501465 -23076.712842  119.150000 -23160.237842    53.9375   29.587500       -0.100049     2.0    -23353.237842         False          False   True
7  -23046.725342  -23130.550293  17956.614014 -23046.725342   59.575000 -23130.550293    53.9375   29.887451        0.000000     1.0    -23100.662842          True           True  False
8  -23046.725342  -23100.662842  17956.614014 -23046.725342   29.787500 -23100.662842    53.9375    0.000000     -100.000000     2.0    -23100.662842         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:26:25]  --------------------------------------------------------------------------------
[08/10 15:26:25]  Iteration: 87 (0 solution, 86 counterexamples)
[08/10 15:26:50]  Generator returned sat in 22.419712 secs.
[08/10 15:26:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:51]  Improved gap from 0 to 0
[08/10 15:26:52]  Improved number of small numbers from 65 to 75 out of a max of 114
[08/10 15:26:52]  Verifer returned sat in 1.335756 secs.
[08/10 15:26:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23908.280762  -23908.281738  17758.189209 -23908.280762    0.001250 -23908.281738    0.00000   0.000977      -99.998975     3.0    -23908.281738            -1             -1     -1
1  -23708.280518  -23708.281787  17758.189209 -23708.280518  200.001221 -23708.281787    0.00000   0.001270        0.001270     1.0    -23908.281738         False           True  False
2  -23608.278037  -23608.281787  17758.189209 -23608.278037  100.003750 -23608.281787    0.00125   0.002500        0.002500     1.0    -23608.279287         False          False  False
3  -23457.293037  -23558.765537  17758.189209 -23457.293037  150.987500 -23558.765537   50.98625  50.486250        0.002500     1.0    -23608.279287         False          False   True
4  -23357.291787  -23508.278037  17758.189209 -23357.291787  150.487500 -23508.278037   50.98750  99.998750        0.002500     1.0    -23608.279287         False          False   True
5  -23307.303037  -23358.299287  17808.196777 -23307.303037  149.987500 -23358.299287   50.98750   0.008750       -0.001182     1.0    -23608.279287         False          False   True
6  -23307.301787  -23358.289287  17908.196709 -23307.301787    0.010000 -23358.289287   50.98750   0.000000        0.000000     1.0    -23608.279287         False          False   True
7  -23307.291787  -23358.289287  18008.186709 -23307.291787    0.010000 -23358.289287   50.98750   0.010000        0.000000     1.0    -23608.279287         False          False   True
8  -23307.291787  -23358.279287  18108.186523 -23307.291787    0.010000 -23358.279287   50.98750   0.000000       -0.000186     2.0    -23608.279287         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 15:26:53]  --------------------------------------------------------------------------------
[08/10 15:26:53]  Iteration: 88 (0 solution, 87 counterexamples)
[08/10 15:27:20]  Generator returned sat in 24.392572 secs.
[08/10 15:27:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:21]  Improved number of small numbers from 41 to 112 out of a max of 113
[08/10 15:27:21]  Verifer returned sat in 0.977528 secs.
[08/10 15:27:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -23771.626465  -23871.626221  17758.189209 -23771.626465    0.001250 -23871.626221    0.000000   99.999756       -0.000244     6.0    -23871.626221            -1             -1   False
1  -23671.625977  -23771.626221  17758.189209 -23671.625977  200.000244 -23771.626221    0.000000  100.000244        0.000244     1.0    -23871.626221         False          False   False
2  -23571.626221  -23661.294189  17758.189209 -23571.626221  200.000000 -23661.294189    0.000000   89.667969        0.000000     1.0    -23571.626221         False          False   False
3  -23457.293213  -23471.626221  17758.189209 -23457.293213  204.000977 -23471.626221   14.332764    0.000244        0.000244     1.0    -23571.626221         False          False   False
4  -23357.292969  -23471.625732  17758.189209 -23357.292969  100.000488 -23471.625732   14.333008   99.999756        0.000244     1.0    -23571.626221         False          False    True
5  -23357.292969  -23371.626221  17758.189209 -23357.292969   48.000244 -23371.626221   14.333008    0.000244      -99.999756     2.0    -23571.626221         False          False    True
6  -22921.291260  -23271.626221  17758.189209 -22921.291260  436.001953 -23271.626221  250.334717  100.000244        0.000244     1.0    -23571.626221         False          False    True
7  -22805.290527  -23071.626221  17758.189209 -22805.290527  216.000977 -23071.626221  266.335449    0.000244        0.000244     1.0    -23571.626221         False          False    True
8  -22699.290283  -23071.625977  17758.189209 -22699.290283  106.000488 -23071.625977  272.335693  100.000000        0.000244     2.0    -23571.626221         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/4096.[0m
[08/10 15:27:21]  --------------------------------------------------------------------------------
[08/10 15:27:21]  Iteration: 89 (0 solution, 88 counterexamples)
[08/10 15:27:36]  Generator returned sat in 11.701675 secs.
[08/10 15:27:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:37]  Verifer returned unsat in 0.828982 secs.
[08/10 15:27:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:37]  --------------------------------------------------------------------------------
[08/10 15:27:37]  Iteration: 90 (1 solution, 88 counterexamples)
[08/10 15:27:42]  Generator returned sat in 1.994788 secs.
[08/10 15:27:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:42]  Verifer returned unsat in 0.485664 secs.
[08/10 15:27:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:42]  --------------------------------------------------------------------------------
[08/10 15:27:42]  Iteration: 91 (2 solution, 88 counterexamples)
[08/10 15:27:47]  Generator returned sat in 2.328285 secs.
[08/10 15:27:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:48]  Improved gap from 0 to 100
[08/10 15:27:48]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:27:48]  Verifer returned sat in 0.632980 secs.
[08/10 15:27:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -27638.906250  -28138.606201  22025.169189 -27638.906250   900.199951 -28138.606201     0.000000  499.699951      399.699951     3.0    -28138.606201            -1             -1    True
1  -27238.406250  -27938.606445  22025.169189 -27238.406250   900.199951 -27938.606445     0.100098  700.100098      700.099854     3.0    -28138.606201         False          False    True
2  -26334.006348  -27838.606201  22025.169189 -26334.006348  1604.500000 -27838.606201   804.500000  700.099854      700.099854     4.0    -28138.606201         False          False    True
3  -25429.706299  -27838.606201  22025.169189 -25429.706299  1604.399902 -27838.606201  1608.800049  800.099854      700.099854     4.0    -27038.506348          True           True    True
4  -25429.606201  -27638.806152  22025.169189 -25429.606201   800.199951 -27638.806152  1608.800049  600.399902      600.199951     4.0    -27038.506348         False           True    True
5  -25229.806152  -27538.806396  22025.169189 -25229.806152   800.199951 -27538.806396  1608.800049  700.200195      700.000000     5.0    -27038.506348         False           True   False
6  -25129.806396  -27438.806396  22025.169189 -25129.806396   800.199951 -27438.806396  1608.800049  700.199951      699.999756     6.0    -27038.506348         False           True   False
7  -25029.806396  -27338.606445  22025.169189 -25029.806396   800.199951 -27338.606445  1608.800049  700.000000      699.999756     7.0    -27038.506348         False           True   False
8  -24929.606445  -27338.606201  22025.169189 -24929.606445   800.199951 -27338.606201  1608.899902  800.099854      700.099854     8.0    -27038.506348         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2867609/4096.[0m
[08/10 15:27:49]  --------------------------------------------------------------------------------
[08/10 15:27:49]  Iteration: 92 (2 solution, 89 counterexamples)
[08/10 15:28:30]  Generator returned sat in 37.917733 secs.
[08/10 15:28:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:31]  Improved gap from 0 to 100
[08/10 15:28:31]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:28:31]  Verifer returned sat in 1.398713 secs.
[08/10 15:28:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -25763.646240  -25863.596191  19750.15918 -25763.646240     0.050049 -25863.596191        0.0    99.949951       -0.050049     2.0    -25863.596191            -1             -1    True
1  -25663.646240  -25763.596191  19750.15918 -25663.646240   199.949951 -25763.596191        0.0    99.949951       -0.050049     1.0    -25863.596191         False          False    True
2  -25563.696289  -25663.596191  19750.15918 -25563.696289   199.899902 -25663.596191        0.0    99.899902       -0.100098     1.0    -25563.696289         False          False    True
3  -25339.496094  -25478.696289  19750.15918 -25339.496094   324.100098 -25478.696289        0.0   139.200195      124.100098     1.0    -25563.696289         False          False    True
4  -24963.646240  -25363.596191  19750.15918 -24963.646240   515.050049 -25363.596191        0.0   399.949951      399.949951     2.0    -25563.696289         False          False    True
5  -24650.046143  -25271.596191  19750.15918 -24650.046143   713.550049 -25271.596191        0.0   621.550049      613.550049     2.0    -25563.696289         False          False    True
6  -24363.546143  -25163.596191  19750.15918 -24363.546143   908.050049 -25163.596191        0.0   800.050049      800.050049     3.0    -25563.696289         False          False    True
7  -24099.496094  -25163.596191  19750.15918 -24099.496094  1064.100098 -25163.596191        0.0  1064.100098      964.100098     3.0    -25563.696289         False          False    True
8  -24000.996094  -24963.596191  19750.15918 -24000.996094  1162.600098 -24963.596191        0.0   962.600098      962.600098     4.0    -25563.696289         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1974477/2048.[0m
[08/10 15:28:32]  --------------------------------------------------------------------------------
[08/10 15:28:32]  Iteration: 93 (2 solution, 90 counterexamples)
[08/10 15:28:52]  Generator returned sat in 17.712146 secs.
[08/10 15:28:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:00]  Improved gap from 0 to 3.125
[08/10 15:29:01]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 15:29:01]  Verifer returned sat in 8.258619 secs.
[08/10 15:29:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -24600.633789  -24721.333496  19784.796875 -24600.633789    0.100098 -24721.333496   0.000000  120.699707      100.000000     4.0    -24721.333496            -1             -1   False
1  -24600.533691  -24600.633789  19784.796875 -24600.533691  120.799805 -24600.633789   0.000000    0.100098        0.100098     2.0    -24721.333496         False          False   False
2  -24479.833740  -24500.733887  19784.796875 -24479.833740  120.800049 -24500.733887  20.600098    0.300049        0.199951     1.0    -24721.333496         False          False   False
3  -24479.833740  -24500.633789  19881.671875 -24479.833740    0.100098 -24500.633789  20.600098    0.199951       -2.925049     2.0    -24500.433838         False          False    True
4  -24371.133789  -24446.171143  19881.671875 -24371.133789  108.899902 -24446.171143  26.175049   48.862305        0.199951     1.0    -24500.433838         False          False    True
5  -24363.546143  -24397.208740  19973.884277 -24363.546143   56.449951 -24397.208740  26.175049    7.487549        0.000000     1.0    -24500.433838         False          False    True
6  -24292.546143  -24389.621338  20002.884277 -24292.546143   78.487549 -24389.621338  26.175049   70.900146        0.000000     1.0    -24500.433838         False          False    True
7  -24270.196289  -24318.621338  20080.434082 -24270.196289   93.250000 -24318.621338  26.175049   22.250000       -0.100342     1.0    -24500.433838         False          False    True
8  -24183.546387  -24296.270996  20080.434326 -24183.546387  108.899902 -24296.270996  26.175049   86.549561      -13.450195     1.0    -24500.433838         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 15:29:01]  --------------------------------------------------------------------------------
[08/10 15:29:01]  Iteration: 94 (2 solution, 91 counterexamples)
[08/10 15:29:15]  Generator returned sat in 10.473738 secs.
[08/10 15:29:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:17]  Improved gap from 0 to 48.4375
[08/10 15:29:17]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 15:29:17]  Verifer returned sat in 1.932714 secs.
[08/10 15:29:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -24677.946045  -24977.846191  19948.186768 -24677.946045  300.000000 -24977.846191   0.100098  299.800049      199.800293     9.0    -24977.846191            -1             -1     -1
1  -24677.846191  -24782.133789  19948.186768 -24677.846191  299.899902 -24782.133789   0.100098  104.187500       99.900146     3.0    -24677.946289         False           True   True
2  -24482.233887  -24677.846436  19948.186768 -24482.233887  299.799805 -24677.846436   0.100098  195.512451      195.512451     1.0    -24482.333984         False          False   True
3  -24482.233887  -24577.846436  19948.186768 -24482.233887   54.925049 -24577.846436   0.100098   95.512451       95.512451     2.0    -24482.333984         False          False   True
4  -24482.233887  -24482.433838  19948.186768 -24482.233887   53.925049 -24482.433838   0.100098    0.099854       -4.487549     3.0    -24482.333984         False          False   True
5  -24429.408691  -24477.846436  19999.749268 -24429.408691   52.925049 -24477.846436   0.100098   48.337646       -0.099854     1.0    -24482.333984         False          False   True
6  -24425.821289  -24429.408936  20051.311768 -24425.821289   51.925049 -24429.408936   0.100098    3.487549      -44.949951     1.0    -24482.333984         False          False   True
7  -24378.383789  -24380.971436  20102.874268 -24378.383789   50.925049 -24380.971436   0.100098    2.487549      -45.949951     1.0    -24482.333984         False          False   True
8  -24330.946289  -24332.533691  20102.874512 -24330.946289   49.925049 -24332.533691   0.100098    1.487305      -98.512207     1.0    -24482.333984         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=801229/4096.[0m
[08/10 15:29:18]  --------------------------------------------------------------------------------
[08/10 15:29:18]  Iteration: 95 (2 solution, 92 counterexamples)
[08/10 15:29:47]  Generator returned sat in 26.183058 secs.
[08/10 15:29:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:57]  Improved gap from 0 to 0
[08/10 15:29:58]  Improved number of small numbers from 55 to 82 out of a max of 114
[08/10 15:29:58]  Verifer returned sat in 11.478103 secs.
[08/10 15:29:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -22939.221924  -22940.216442  19549.677490 -22939.221924  0.000244 -22940.216442        0.0  0.994518        0.994303     2.0    -22940.216442            -1             -1   False
1  -22939.221546  -22939.221924  19648.682809 -22939.221546  0.994896 -22939.221924        0.0  0.000378        0.000000     3.0    -22940.216442         False          False   False
2  -22939.221436  -22939.221546  19748.682617 -22939.221436  0.000488 -22939.221546        0.0  0.000111       -0.000081     2.0    -22939.221436         False          False   False
3  -22939.220921  -22939.221130  19848.682129 -22939.220921  0.000625 -22939.221130        0.0  0.000208       -0.000055     1.0    -22939.221436         False          False   False
4  -22938.725505  -22939.219971  19948.186768 -22938.725505  0.495625 -22939.219971        0.0  0.494466        0.000000     1.0    -22939.221436         False          False   False
5  -22938.725505  -22938.725505  20048.186523 -22938.725505  0.010000 -22938.725505        0.0  0.000000       -0.000244     2.0    -22939.221436         False          False   False
6  -22938.715505  -22938.715713  20148.176758 -22938.715505  0.010000 -22938.715713        0.0  0.000208       -0.000010     1.0    -22939.221436         False          False   False
7  -22938.705296  -22938.715332  20248.166559 -22938.705296  0.010417 -22938.715332        0.0  0.010036        0.000000     1.0    -22939.221436         False          False   False
8  -22938.705296  -22938.705296  20248.166748 -22938.705296  0.010000 -22938.705296        0.0  0.000000      -99.999811     2.0    -22939.221436         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/2048.[0m
[08/10 15:29:59]  --------------------------------------------------------------------------------
[08/10 15:29:59]  Iteration: 96 (2 solution, 93 counterexamples)
[08/10 15:30:16]  Generator returned sat in 14.066092 secs.
[08/10 15:30:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:23]  Improved gap from 0 to 25.0
[08/10 15:30:24]  Improved number of small numbers from 60 to 78 out of a max of 114
[08/10 15:30:24]  Verifer returned sat in 8.077437 secs.
[08/10 15:30:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -22667.967773  -22967.965332  19477.426678 -22667.967773  251.977539 -22967.965332       0.00  299.997559      199.997642     3.0    -22967.965332            -1             -1   False
1  -22667.967773  -22821.927979  19477.426678 -22667.967773  251.975098 -22821.927979       0.00  153.960205       99.997642     3.0    -22667.967773         False          False   False
2  -22569.955566  -22667.965415  19477.426678 -22569.955566  251.972412 -22667.965415       0.00   98.009849       98.009849     1.0    -22569.955566         False          False   False
3  -22415.995415  -22569.952915  19477.426678 -22415.995415  251.970000 -22569.952915      26.97  126.987500      125.000000     1.0    -22442.965415         False          False   False
4  -22415.995415  -22467.967915  19477.426678 -22415.995415  126.985000 -22467.967915      26.97   25.002500       25.000000     2.0    -22442.965415         False          False    True
5  -22415.995415  -22467.965415  19552.426678 -22415.995415    0.010000 -22467.965415      26.97   25.000000        0.000000     3.0    -22442.965415         False          False    True
6  -22415.995415  -22442.965415  19627.426514 -22415.995415    0.010000 -22442.965415      26.97    0.000000      -25.000165     4.0    -22442.965415         False          False    True
7  -22291.002915  -22401.479165  19627.431641 -22291.002915  124.992500 -22401.479165      26.97   83.506250       -0.002538     1.0    -22442.965415         False           True   False
8  -22247.524165  -22317.970215  19627.431885 -22247.524165  126.985000 -22317.970215      26.97   43.476050      -56.523544     1.0    -22442.965415         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=125.[0m
[08/10 15:30:25]  --------------------------------------------------------------------------------
[08/10 15:30:25]  Iteration: 97 (2 solution, 94 counterexamples)
[08/10 15:30:57]  Generator returned sat in 29.098210 secs.
[08/10 15:30:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:58]  Improved gap from 1/20 to 100
[08/10 15:30:59]  Improved number of small numbers from 60 to 66 out of a max of 114
[08/10 15:30:59]  Verifer returned sat in 1.872834 secs.
[08/10 15:30:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22867.965332  -22892.952915  19477.426678 -22867.965332  124.987549 -22892.952915      0.050   24.937583       -0.049917     9.0    -22892.952915            -1             -1     -1
1  -22767.965415  -22867.965415  19477.426678 -22767.965415  124.937500 -22867.965415      0.050   99.950000       -0.050000     1.0    -22768.015415         False           True   True
2  -22743.027915  -22767.965415  19477.426678 -22743.027915  124.887500 -22767.965415      0.050   24.887500      -75.112500     1.0    -22743.077915         False          False   True
3  -22643.077915  -22667.965415  19477.426678 -22643.077915  124.837500 -22667.965415      0.050   24.837500      -75.162500     1.0    -22643.127915         False          False   True
4  -22268.015415  -22467.965415  19477.426678 -22268.015415  399.900000 -22467.965415      0.050  199.900000      199.900000     1.0    -22643.127915         False          False   True
5  -21667.965415  -22467.965415  19477.426678 -21667.965415  799.950000 -22467.965415      0.050  799.950000      699.950000     1.0    -22643.127915         False          False   True
6  -21617.940415  -22268.015415  19477.426678 -21617.940415  849.975000 -22268.015415      0.050  650.025000      649.975000     2.0    -22643.127915         False          False   True
7  -21417.490415  -22267.965332  19477.426678 -21417.490415  850.475000 -22267.965332     50.425  800.049917      700.050000     3.0    -21467.915415          True           True  False
8  -21417.490415  -22067.965576  19477.426678 -21417.490415  423.237500 -22067.965576     50.425  600.050161      600.050000     4.0    -21467.915415         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14001/20.[0m
[08/10 15:31:00]  --------------------------------------------------------------------------------
[08/10 15:31:00]  Iteration: 98 (2 solution, 95 counterexamples)
[08/10 15:31:12]  Generator returned sat in 9.623531 secs.
[08/10 15:31:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:14]  Improved number of small numbers from 63 to 66 out of a max of 113
[08/10 15:31:14]  Verifer returned sat in 1.546561 secs.
[08/10 15:31:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22867.965332  -22893.008471  19477.426514 -22867.965332  125.042969 -22893.008471      0.050   24.993139       -0.050081     2.0    -22893.008471            -1             -1     -1
1  -22767.927915  -22864.936249  19477.426678 -22767.927915  125.030556 -22864.936249      0.050   96.958333       -0.012500     1.0    -22767.977915         False           True   True
2  -22743.027915  -22767.965415  19477.426678 -22743.027915  121.858333 -22767.965415      0.050   24.887500      -75.112500     1.0    -22743.077915         False          False   True
3  -22646.069582  -22667.965415  19477.426678 -22646.069582  121.845833 -22667.965415      0.050   21.845833      -78.154167     1.0    -22646.119582         False          False   True
4  -22267.927915  -22467.965415  19477.426678 -22267.927915  399.987500 -22467.965415      0.050  199.987500      199.987500     1.0    -22646.119582         False          False   True
5  -21670.965415  -22467.965415  19477.426678 -21670.965415  796.950000 -22467.965415      0.050  796.950000      696.950000     1.0    -22646.119582         False          False   True
6  -21617.940415  -22267.965415  19477.426678 -21617.940415  849.975000 -22267.965415      0.050  649.975000      649.975000     2.0    -22646.119582         False          False   True
7  -21417.440415  -22267.953125  19477.426678 -21417.440415  850.475000 -22267.953125     50.475  800.037710      700.050000     3.0    -21467.915415          True           True  False
8  -21417.440415  -22067.965576  19477.426678 -21417.440415  423.237500 -22067.965576     50.475  600.050161      600.050000     4.0    -21467.915415         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14001/20.[0m
[08/10 15:31:15]  --------------------------------------------------------------------------------
[08/10 15:31:15]  Iteration: 99 (2 solution, 96 counterexamples)
[08/10 15:31:32]  Generator returned sat in 14.216321 secs.
[08/10 15:31:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:32]  Improved gap from 0 to 100
[08/10 15:31:33]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 15:31:33]  Verifer returned sat in 0.550376 secs.
[08/10 15:31:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22542.015381  -22542.215332  19477.426758 -22542.015381  100.100000 -22542.215332    0.100098    0.099854        0.099854     2.0    -22542.215332            -1             -1     -1
1  -22442.115479  -22542.215332  19477.426758 -22442.115479   99.999756 -22542.215332    0.100098   99.999756       -0.000244     2.0    -22442.215576         False           True   True
2  -22442.115234  -22442.215332  19477.426758 -22442.115234  100.000000 -22442.215332    0.100098    0.000000     -100.000000     1.0    -22442.215576         False           True  False
3  -22219.615234  -22251.165527  19477.426758 -22219.615234  222.500000 -22251.165527   22.400146    9.150146        0.199951     1.0    -22442.215576         False          False  False
4  -22119.515381  -22142.215332  19477.426758 -22119.515381  109.250000 -22142.215332   22.500000    0.199951        0.199951     1.0    -22442.215576         False          False   True
5  -22067.090332  -22142.215332  19477.426758 -22067.090332   52.625000 -22142.215332   22.500000   52.625000      -47.375000     1.0    -22442.215576         False          False   True
6  -21670.715332  -22042.215332  19477.426758 -21670.715332  449.000000 -22042.215332  271.300049  100.199951        0.199951     1.0    -22442.215576         False          False   True
7  -21548.415283  -21851.165527  19477.426758 -21548.415283  222.500000 -21851.165527  293.600098    9.150146        0.199951     1.0    -22442.215576         False          False   True
8  -21448.315430  -21841.915527  19477.426758 -21448.315430  109.250000 -21841.915527  293.699951   99.900146        0.199951     1.0    -22442.215576         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:31:33]  --------------------------------------------------------------------------------
[08/10 15:31:33]  Iteration: 100 (2 solution, 97 counterexamples)
[08/10 15:31:51]  Generator returned sat in 14.075601 secs.
[08/10 15:31:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:52]  Improved gap from 0 to 46.875
[08/10 15:31:53]  Improved number of small numbers from 110 to 113 out of a max of 114
[08/10 15:31:53]  Verifer returned sat in 2.171758 secs.
[08/10 15:31:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -40271.015234  -40371.115234  19477.426758 -40271.015234  200.099854 -40371.115234       0.00  100.100000        0.100000     1.0    -40371.115234            -1             -1   False
1  -40171.115479  -40270.915234  19477.426758 -40171.115479  199.999756 -40270.915234       0.00   99.799756       -0.000244     1.0    -40171.115479         False          False   False
2  -40071.015234  -40072.065234  19477.426758 -40071.015234  199.900000 -40072.065234       0.00    1.050000        0.100000     1.0    -40071.015234         False          False   False
3  -39872.265234  -39972.715234  19477.426758 -39872.265234  199.800000 -39972.715234      98.65    1.800000        0.200000     1.0    -39970.915234         False          False   False
4  -39772.165234  -39871.115234  19477.426758 -39772.165234  101.900000 -39871.115234      98.75    0.200000        0.200000     1.0    -39970.915234         False          False    True
5  -39719.415234  -39870.815234  19521.276855 -39719.415234   52.950000 -39870.815234      98.75   52.650000       -3.199902     1.0    -39970.915234         False          False    True
6  -39669.440234  -39814.965234  19574.401758 -39669.440234  102.625000 -39814.965234      98.75   46.775000       -0.100000     1.0    -39970.915234         False          False    True
7  -39635.340234  -39768.090234  19627.526611 -39635.340234   80.875000 -39768.090234      98.75   34.000000      -12.875146     1.0    -39970.915234         False          False    True
8  -39615.827734  -39721.215088  19680.651611 -39615.827734   53.512500 -39721.215088      98.75    6.637354      -40.237646     1.0    -39970.915234         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:31:54]  --------------------------------------------------------------------------------
[08/10 15:31:54]  Iteration: 101 (2 solution, 98 counterexamples)
[08/10 15:32:25]  Generator returned sat in 28.526841 secs.
[08/10 15:32:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:26]  Improved gap from 0 to 100
[08/10 15:32:26]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 15:32:26]  Verifer returned sat in 0.533992 secs.
[08/10 15:32:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -40172.165234  -40172.215234  19477.426758 -40172.165234      0.05 -40172.215234       0.00     0.05           -0.05     4.0    -40172.215234            -1             -1   False
1  -40072.115234  -40172.115234  19477.426758 -40072.115234    100.10 -40172.115234       0.00   100.00            0.00     1.0    -40172.215234         False          False   False
2  -39478.215234  -40072.065234  19477.426758 -39478.215234    693.90 -40072.065234       0.00   593.85          493.90     1.0    -40172.215234         False          False   False
3  -39472.165234  -39874.015234  19477.426758 -39472.165234    599.90 -39874.015234       0.00   401.85          399.95     2.0    -39472.165234         False          False   False
4  -39278.115234  -39772.165234  19477.426758 -39278.115234    595.90 -39772.165234       0.05   494.00          493.95     3.0    -39472.165234         False          False   False
5  -39177.215234  -39772.115234  19477.426758 -39177.215234    594.90 -39772.115234       0.95   593.95          493.95     4.0    -39472.165234         False          False    True
6  -39177.215234  -39575.215234  19477.426758 -39177.215234    593.90 -39575.215234       0.95   397.05          393.95     5.0    -39472.165234         False          False    True
7  -38977.165234  -39472.115234  19477.426758 -38977.165234    597.10 -39472.115234       1.00   493.95          493.95     4.0    -39472.165234         False           True   False
8  -38875.015234  -39372.115234  19477.426758 -38875.015234    596.10 -39372.115234       3.15   493.95          493.95     5.0    -39472.165234         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=9879/20.[0m
[08/10 15:32:27]  --------------------------------------------------------------------------------
[08/10 15:32:27]  Iteration: 102 (2 solution, 99 counterexamples)
[08/10 15:32:36]  Generator returned sat in 6.167670 secs.
[08/10 15:32:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:36]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:32:36]  Verifer returned sat in 0.228651 secs.
[08/10 15:32:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -40171.890625  -40171.903076  19477.426514 -40171.890625    0.050049 -40171.903076   0.000000    0.012451        0.012451     8.0    -40171.903076            -1             -1     -1
1  -40072.115234  -40171.878174  19477.426514 -40072.115234   99.787842 -40171.878174   0.000000   99.762939       -0.212158     1.0    -40171.903076         False           True  False
2  -39478.340332  -40061.990479  19477.426514 -39478.340332  693.537842 -40061.990479   0.000000  583.650146      493.562744     1.0    -40171.903076         False          False  False
3  -39472.165283  -39872.715576  19477.426514 -39472.165283  589.825195 -39872.715576   0.000000  400.550293      399.737793     2.0    -39472.165283         False          False  False
4  -39278.115479  -39771.915527  19477.426514 -39278.115479  594.600098 -39771.915527   0.212402  493.587646      493.575195     3.0    -39472.165283         False          False  False
5  -39178.103027  -39771.903076  19477.426514 -39178.103027  593.600098 -39771.903076   0.224854  593.575195      493.575195     4.0    -39472.165283         False          False   True
6  -39178.103027  -39573.915527  19477.426514 -39178.103027  592.600098 -39573.915527   0.224854  395.587646      393.575195     5.0    -39472.165283         False          False   True
7  -38978.090576  -39472.115234  19477.426514 -38978.090576  595.600098 -39472.115234   0.237305  493.787354      493.575195     4.0    -39472.165283         False           True  False
8  -38877.277832  -39371.903076  19477.426514 -38877.277832  594.600098 -39371.903076   1.050049  493.575195      493.575195     5.0    -39472.165283         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=505421/1024.[0m
[08/10 15:32:37]  --------------------------------------------------------------------------------
[08/10 15:32:37]  Iteration: 103 (2 solution, 100 counterexamples)
[08/10 15:33:27]  Generator returned sat in 46.653169 secs.
[08/10 15:33:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:33:27]  Improved gap from 1/800 to 46.875
[08/10 15:33:27]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:33:27]  Verifer returned sat in 0.526653 secs.
[08/10 15:33:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -39080.000977  -39180.100586  18485.623779 -39080.000977  100.049805 -39180.100586   0.049805  100.049805      100.049805     3.0    -39180.100586            -1             -1     -1
1  -39080.000977  -39080.100830  18485.623779 -39080.000977  100.049805 -39080.100830   0.049805    0.050049        0.049805     3.0    -39180.100586         False          False   True
2  -38729.125977  -39080.000732  18485.623779 -38729.125977  350.925049 -39080.000732   0.049805  350.824951      250.924805     1.0    -39180.100586         False          False   True
3  -38729.125977  -38880.100830  18485.623779 -38729.125977   56.875000 -38880.100830   0.049805  150.925049      150.924805     2.0    -38729.175781         False          False   True
4  -38729.125977  -38782.100830  18485.623779 -38729.125977   54.875000 -38782.100830   0.049805   52.925049       50.924805     3.0    -38729.175781         False          False   True
5  -38729.125977  -38780.100586  18534.698975 -38729.125977   52.875000 -38780.100586   0.049805   50.924805        0.000000     4.0    -38729.175781         False          False   True
6  -38729.125977  -38729.175781  18587.823975 -38729.125977   50.875000 -38729.175781   0.049805    0.000000      -46.875000     5.0    -38729.175781         False          False   True
7  -38680.250977  -38682.300781  18640.948975 -38680.250977   48.875000 -38682.300781   0.049805    2.000000      -44.875000     1.0    -38729.175781         False          False   True
8  -38635.375977  -38635.425781  18640.948975 -38635.375977   46.875000 -38635.425781   0.049805    0.000000     -100.000000     1.0    -38729.175781         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=513997/2048.[0m
[08/10 15:33:28]  --------------------------------------------------------------------------------
[08/10 15:33:28]  Iteration: 104 (2 solution, 101 counterexamples)
[08/10 15:33:42]  Generator returned sat in 10.894556 secs.
[08/10 15:33:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:33:44]  Improved gap from 0 to 48.4375
[08/10 15:33:44]  Improved number of small numbers from 77 to 114 out of a max of 114
[08/10 15:33:44]  Verifer returned sat in 1.606174 secs.
[08/10 15:33:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -39186.541016  -39435.025635  18440.382812 -39186.541016    0.002441 -39435.025635   0.049805  248.434814      148.434814     2.0    -39435.025635            -1             -1     -1
1  -39186.541016  -39333.458252  18440.382812 -39186.541016  246.870117 -39333.458252   0.049805  146.867432       48.434814     2.0    -39435.025635         False          False   True
2  -39086.541016  -39235.025635  18440.382812 -39086.541016  246.867432 -39235.025635   0.049805  148.434814       48.434814     3.0    -39086.590820         False          False   True
3  -39034.973389  -39039.713135  18440.382812 -39034.973389  200.002441 -39039.713135   0.049805    4.689941        0.002441     1.0    -39035.023193         False           True  False
4  -38841.007080  -38939.710693  18440.382812 -38841.007080  198.656250 -38939.710693  45.581055   53.122559       48.437500     1.0    -39035.023193         False          False  False
5  -38841.007080  -38935.025635  18491.945312 -38841.007080    0.010000 -38935.025635  45.581055   48.437500        0.000000     2.0    -39035.023193         False          False   True
6  -38841.007080  -38886.588135  18543.507812 -38841.007080    0.010000 -38886.588135  45.581055    0.000000      -48.437500     3.0    -39035.023193         False          False   True
7  -38763.444580  -38838.150635  18595.070312 -38763.444580   77.562500 -38838.150635  45.581055   29.125000      -19.312500     1.0    -38809.025635          True           True  False
8  -38740.789551  -38789.713135  18595.070312 -38740.789551   51.780029 -38789.713135  45.581055    3.342529      -96.657471     1.0    -38809.025635         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/10 15:33:45]  --------------------------------------------------------------------------------
[08/10 15:33:45]  Iteration: 105 (2 solution, 102 counterexamples)
[08/10 15:34:05]  Generator returned sat in 16.923411 secs.
[08/10 15:34:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:06]  Improved gap from 0 to 100
[08/10 15:34:06]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 15:34:06]  Verifer returned sat in 1.521843 secs.
[08/10 15:34:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -39255.533203  -39424.618164  18460.915527 -39255.533203  169.060059 -39424.618164   0.025146  169.059814      100.000000     9.0    -39424.618164            -1             -1     -1
1  -39255.533203  -39355.558350  18460.915527 -39255.533203  169.035156 -39355.558350   0.025146  100.000000        0.000000     9.0    -39255.558350         False           True   True
2  -39186.523193  -39186.573242  18460.915527 -39186.523193  169.010010 -39186.573242   0.025146    0.024902      -30.989990     1.0    -39186.548340         False           True  False
3  -39017.563232  -39085.931641  18460.915527 -39017.563232  168.984863 -39085.931641   0.050049   68.318359       37.945068     1.0    -39017.613281         False          False  False
4  -38917.538330  -38996.244873  18460.915527 -38917.538330  168.343262 -38996.244873   0.074951   78.631592       37.945068     1.0    -39017.613281         False          False   True
5  -38817.513184  -38873.250000  18460.915527 -38817.513184  178.656738 -38873.250000   0.100098   55.636719       37.945068     1.0    -39017.613281         False          False   True
6  -38717.488281  -38773.036133  18460.915527 -38717.488281  155.661621 -38773.036133   0.125000   55.422852       37.945068     1.0    -39017.613281         False          False   True
7  -38617.463379  -38657.558350  18460.915527 -38617.463379  155.447754 -38657.558350   0.149902   39.945068       37.945068     1.0    -39017.613281         False          False   True
8  -38489.065186  -38617.588379  18460.915527 -38489.065186  168.343262 -38617.588379  28.548096   99.975098       37.945068     1.0    -39017.613281         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=155423/4096.[0m
[08/10 15:34:07]  --------------------------------------------------------------------------------
[08/10 15:34:07]  Iteration: 106 (2 solution, 103 counterexamples)
[08/10 15:34:22]  Generator returned sat in 12.077761 secs.
[08/10 15:34:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:25]  Improved gap from 0 to 48.4375
[08/10 15:34:26]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 15:34:26]  Verifer returned sat in 2.941642 secs.
[08/10 15:34:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -37660.208496  -37708.845947  18362.065430 -37660.208496    0.099854 -37708.845947    0.099854  48.537598       48.537598     5.0    -37708.845947            -1             -1     -1
1  -37660.208496  -37708.745850  18413.527832 -37660.208496    0.099854 -37708.745850    0.099854  48.437500        0.000000     6.0    -37708.845947         False          False   True
2  -37560.108398  -37560.308594  18413.527832 -37560.108398  148.537598 -37560.308594    0.099854   0.100342        0.100098     1.0    -37708.845947          True           True  False
3  -37351.508545  -37464.858398  18413.527832 -37351.508545  208.700195 -37464.858398  108.599854   4.750000        0.199951     1.0    -37708.845947         False          False  False
4  -37251.408447  -37360.720703  18413.527832 -37251.408447  104.850098 -37360.720703  108.699951   0.612305        0.199951     1.0    -37708.845947         False          False   True
5  -37199.095703  -37360.008301  18460.915527 -37199.095703   52.925049 -37360.008301  108.699951  52.212646       -0.099609     1.0    -37708.845947         False          False   True
6  -37150.658203  -37307.695801  18512.477783 -37150.658203  100.650146 -37307.695801  108.699951  48.337646       -0.099854     1.0    -37708.845947         False          False   True
7  -37119.914551  -37259.258301  18564.040283 -37119.914551   79.081299 -37259.258301  108.699951  30.643799      -17.793701     1.0    -37708.845947         False          False   True
8  -37099.327148  -37210.820801  18615.602783 -37099.327148   51.231201 -37210.820801  108.699951   2.793701      -45.643799     1.0    -37708.845947         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 15:34:26]  --------------------------------------------------------------------------------
[08/10 15:34:26]  Iteration: 107 (2 solution, 104 counterexamples)
[08/10 15:34:43]  Generator returned sat in 14.077968 secs.
[08/10 15:34:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:44]  Improved gap from 0 to 100
[08/10 15:34:45]  Improved number of small numbers from 93 to 114 out of a max of 114
[08/10 15:34:45]  Verifer returned sat in 0.959790 secs.
[08/10 15:34:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -37858.595947  -38058.598389  18413.527588 -37858.595947   700.002500 -38058.598389    0.002441  200.000000      199.997559     4.0    -38058.598389            -1             -1     -1
1  -37358.596191  -38058.595947  18413.527588 -37358.596191   699.999756 -38058.595947    0.002441  699.997314      599.997314     4.0    -37358.598633         False          False   True
2  -37158.593506  -37858.596191  18413.527588 -37158.593506   900.000000 -37858.596191    0.002441  700.000244      700.000000     2.0    -37358.598633         False          False   True
3  -37158.593506  -37758.596191  18413.527588 -37158.593506   134.082520 -37758.596191    0.002441  600.000244      600.000000     3.0    -37158.595947         False          False   True
4  -37158.593506  -37658.596191  18413.527588 -37158.593506   267.665039 -37658.596191    0.002441  500.000244      500.000000     4.0    -37158.595947         False          False   True
5  -37123.763672  -37558.598633  18413.527588 -37123.763672   534.830078 -37558.598633    0.002441  434.832520      434.829834     5.0    -37158.595947         False          False   True
6  -36489.436035  -37558.595947  18413.527588 -36489.436035  1069.160156 -37558.595947  269.157471  800.002441      700.002441     6.0    -37158.595947         False          False   True
7  -36489.436035  -37358.596191  18413.527588 -36489.436035     0.010000 -37358.596191  269.157471  600.002686      600.002441     6.0    -37158.595947         False           True   True
8  -36489.436035  -37358.595947  18413.527588 -36489.436035   301.005000 -37358.595947  269.157471  600.002441      500.002441     7.0    -37158.595947         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1433605/2048.[0m
[08/10 15:34:45]  --------------------------------------------------------------------------------
[08/10 15:34:45]  Iteration: 108 (2 solution, 105 counterexamples)
[08/10 15:35:17]  Generator returned sat in 28.627849 secs.
[08/10 15:35:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:18]  Improved number of small numbers from 66 to 74 out of a max of 113
[08/10 15:35:18]  Verifer returned sat in 1.049446 secs.
[08/10 15:35:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -37858.594482  -38058.594360  18413.527588 -37858.594482  699.998291 -38058.594360   0.000610  199.999268      199.999268     9.0    -38058.594360            -1             -1     -1
1  -37358.596191  -37958.594360  18413.527588 -37358.596191  699.997559 -37958.594360   0.000610  599.997559      599.997559     4.0    -37358.596802         False           True   True
2  -37159.086250  -37858.594482  18413.527588 -37159.086250  799.507500 -37858.594482   0.000610  699.507622      699.507500     2.0    -37358.596802         False          False   True
3  -37159.086250  -37758.595215  18413.527588 -37159.086250  268.670000 -37758.595215   0.000610  599.508354      599.507500     3.0    -37159.086860         False          False   True
4  -37159.086250  -37758.594360  18413.527588 -37159.086250  401.005000 -37758.594360   0.000610  599.507500      499.507500     4.0    -37159.086860         False          False   True
5  -37159.086250  -37655.854390  18413.527588 -37159.086250  599.507500 -37655.854390   0.000610  496.767529      399.507500     5.0    -37159.086860         False          False   True
6  -36758.592529  -37558.594238  18413.527588 -36758.592529  897.261250 -37558.594238   0.001221  800.000488      700.000610     6.0    -37159.086860         False          False   True
7  -36758.592529  -37358.594360  18413.527588 -36758.592529    0.010000 -37358.594360   0.001221  600.000610      600.000610     6.0    -37159.086860         False           True   True
8  -36758.592529  -37358.593994  18413.527588 -36758.592529  401.005000 -37358.593994   0.001221  600.000244      500.000610     7.0    -37159.086860         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=5734405/8192.[0m
[08/10 15:35:19]  --------------------------------------------------------------------------------
[08/10 15:35:19]  Iteration: 109 (2 solution, 106 counterexamples)
[08/10 15:35:35]  Generator returned sat in 12.236878 secs.
[08/10 15:35:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:36]  Improved gap from 0 to 23.4375
[08/10 15:35:36]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/10 15:35:36]  Verifer returned sat in 1.009728 secs.
[08/10 15:35:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -37768.857422  -37825.498779  18313.531738 -37768.857422    0.001465 -37825.498779    0.001221   56.640137       56.639893     2.0    -37825.498779            -1             -1     -1
1  -37768.856445  -37768.858887  18333.454590 -37768.856445   56.641113 -37768.858887    0.001221    0.001221      -23.436279     3.0    -37825.498779         False          False   True
2  -37712.216309  -37735.655029  18400.250732 -37712.216309   56.641357 -37735.655029    0.001221   23.437500        0.000000     1.0    -37825.498779          True           True  False
3  -37585.656250  -37712.217529  18400.250732 -37585.656250  149.997559 -37712.217529    0.001221  126.560059       26.560059     2.0    -37825.498779         False          False  False
4  -37485.653809  -37512.217529  18400.250732 -37485.653809  226.562500 -37512.217529    0.002441   26.561279       26.561279     1.0    -37825.498779         False          False  False
5  -37485.653809  -37509.093994  18473.689453 -37485.653809    0.500000 -37509.093994    0.002441   23.437744        0.000000     2.0    -37825.498779         False          False   True
6  -37485.653809  -37485.656250  18550.251953 -37485.653809    0.010000 -37485.656250    0.002441    0.000000      -23.437500     3.0    -37825.498779         False          False   True
7  -37032.531250  -37362.219971  18550.251953 -37032.531250  453.122559 -37362.219971  303.126221   26.562500       26.561279     1.0    -37335.657471          True           True  False
8  -37032.531250  -37362.218750  18550.251953 -37032.531250    0.500000 -37362.218750  303.126221   26.561279      -73.438721     2.0    -37335.657471         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=108795/4096.[0m
[08/10 15:35:37]  --------------------------------------------------------------------------------
[08/10 15:35:37]  Iteration: 110 (2 solution, 107 counterexamples)
[08/10 15:36:10]  Generator returned sat in 29.843497 secs.
[08/10 15:36:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:10]  Improved gap from 1/20 to 100
[08/10 15:36:10]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 15:36:10]  Verifer returned sat in 0.440730 secs.
[08/10 15:36:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -37982.441250  -38482.442383  18870.475586 -37982.441250     0.050049 -38482.442383    0.000977  500.000156      400.000156     4.0    -38482.442383            -1             -1    True
1  -37882.591309  -38282.492432  18870.475586 -37882.591309   599.850098 -38282.492432    0.000977  399.900146      399.850098     2.0    -38482.442383         False          False    True
2  -37882.541260  -38282.442383  18870.475586 -37882.541260   399.950195 -38282.442383    0.000977  399.900146      299.900146     3.0    -37882.542236         False          False    True
3  -36681.241211  -38182.442383  18870.475586 -36681.241211  1601.200195 -38182.442383  701.051270  800.149902      700.149902     4.0    -37882.542236         False          False    True
4  -36681.241211  -37982.442627  18870.475586 -36681.241211   800.100098 -37982.442627  701.051270  600.150146      600.149902     5.0    -37882.542236         False          False    True
5  -36481.291260  -37882.492676  18870.475586 -36481.291260   800.100098 -37882.492676  701.051270  700.150146      700.099854     3.0    -37882.542236         False           True   False
6  -36381.341309  -37882.442383  18870.475586 -36381.341309   800.100098 -37882.442383  701.051270  800.049805      700.049805     4.0    -37882.542236         False          False   False
7  -36381.291016  -37682.442383  18870.475586 -36381.291016   800.100098 -37682.442383  701.051270  600.100098      600.100098     5.0    -37882.542236         False          False   False
8  -36181.291016  -37582.442627  18870.475586 -36181.291016   800.100098 -37582.442627  701.051270  700.100342      700.100098     6.0    -36882.342285          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1433907/2048.[0m
[08/10 15:36:11]  --------------------------------------------------------------------------------
[08/10 15:36:11]  Iteration: 111 (2 solution, 108 counterexamples)
[08/10 15:36:22]  Generator returned sat in 8.036398 secs.
[08/10 15:36:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:23]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:36:23]  Verifer returned sat in 0.189476 secs.
[08/10 15:36:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -37281.403564  -38482.442383  18870.475586 -37281.403564    0.050049 -38482.442383  701.038818  500.000000      400.000000     4.0    -38482.442383            -1             -1    True
1  -37281.403564  -38282.492432  18870.475586 -37281.403564  500.000000 -38282.492432  701.038818  300.050049      300.000000     2.0    -38482.442383         False          False    True
2  -37181.428467  -38183.880127  18870.475586 -37181.428467  400.025146 -38183.880127  701.038818  301.412842      299.975098     3.0    -37882.467285         False          False    True
3  -36681.241211  -38182.405029  18870.475586 -36681.241211  801.600098 -38182.405029  701.051270  800.112549      700.149902     4.0    -37882.467285         False          False    True
4  -36681.241211  -37982.442383  18870.475586 -36681.241211  800.100098 -37982.442383  701.051270  600.149902      600.149902     5.0    -37882.467285         False          False    True
5  -36481.291016  -37882.454834  18870.475586 -36481.291016  800.100098 -37882.454834  701.051270  700.112549      700.100098     3.0    -37882.467285         False           True   False
6  -36381.303467  -37882.442383  18870.475586 -36381.303467  800.100098 -37882.442383  701.051270  800.087646      700.087646     4.0    -37882.467285         False          False   False
7  -36381.291016  -37682.442383  18870.475586 -36381.291016  800.100098 -37682.442383  701.051270  600.100098      600.100098     5.0    -37882.467285         False          False   False
8  -36181.291016  -37582.442627  18870.475586 -36181.291016  800.100098 -37582.442627  701.051270  700.100342      700.100098     6.0    -36882.342285          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1433907/2048.[0m
[08/10 15:36:24]  --------------------------------------------------------------------------------
[08/10 15:36:24]  Iteration: 112 (2 solution, 109 counterexamples)
[08/10 15:36:30]  Generator returned sat in 3.356890 secs.
[08/10 15:36:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:31]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:36:31]  Verifer returned sat in 0.278964 secs.
[08/10 15:36:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -37281.903564  -38482.442383  18870.475342 -37281.903564    0.049805 -38482.442383  700.538818  500.000000      400.000000     4.0    -38482.442383            -1             -1    True
1  -37281.903564  -38282.492676  18870.475342 -37281.903564  499.999756 -38282.492676  700.538818  300.050293      300.000000     3.0    -38482.442383         False          False    True
2  -37181.928711  -38183.880127  18870.475342 -37181.928711  400.025146 -38183.880127  700.538818  301.412598      299.974854     4.0    -37882.467529         False          False    True
3  -36681.241455  -38182.405273  18870.475342 -36681.241455  802.099854 -38182.405273  701.051270  800.112549      700.149658     5.0    -37882.467529         False          False    True
4  -36681.241455  -37982.442383  18870.475342 -36681.241455  800.099854 -37982.442383  701.051270  600.149658      600.149658     6.0    -37882.467529         False           True    True
5  -36481.291260  -37882.454834  18870.475342 -36481.291260  800.099854 -37882.454834  701.051270  700.112305      700.099854     3.0    -37882.467529         False           True   False
6  -36381.303711  -37882.442383  18870.475342 -36381.303711  800.099854 -37882.442383  701.051270  800.087402      700.087402     4.0    -37882.467529         False          False   False
7  -36381.291260  -37682.442383  18870.475342 -36381.291260  800.099854 -37682.442383  701.051270  600.099854      600.099854     5.0    -37882.467529         False          False   False
8  -36181.291260  -37582.442627  18870.475342 -36181.291260  800.099854 -37582.442627  701.051270  700.100098      700.099854     6.0    -36882.342529          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2867813/4096.[0m
[08/10 15:36:31]  --------------------------------------------------------------------------------
[08/10 15:36:31]  Iteration: 113 (2 solution, 110 counterexamples)
[08/10 15:36:50]  Generator returned sat in 15.541936 secs.
[08/10 15:36:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:52]  Improved gap from 1/800 to 10.9375
[08/10 15:36:52]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:36:52]  Verifer returned sat in 1.064374 secs.
[08/10 15:36:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -38012.967529  -38508.067383  18896.100098 -38012.967529    0.049805 -38508.067383   0.049805  495.050049      395.050049     4.0    -38508.067383            -1             -1     -1
1  -38012.967529  -38308.067383  18896.100098 -38012.967529    0.050049 -38308.067383   0.049805  295.050049      295.050049     5.0    -38508.067383         False          False   True
2  -37912.967773  -38308.067383  18896.100098 -37912.967773  395.049805 -38308.067383   0.049805  395.049805      295.049805     5.0    -38508.067383          True           True  False
3  -37912.967773  -38108.067383  18896.100098 -37912.967773  395.000000 -38108.067383   0.049805  195.049805      195.049805     4.0    -37913.017578         False           True  False
4  -37912.017578  -38008.617676  18896.100098 -37912.017578  196.000000 -38008.617676   0.049805   96.550293       96.000000     3.0    -37913.017578         False          False  False
5  -37912.017578  -37919.004883  18896.100098 -37912.017578   96.500000 -37919.004883   0.049805    6.937500       -4.000000     4.0    -37913.017578         False          False  False
6  -37872.205078  -37880.542480  18957.637695 -37872.205078   46.750000 -37880.542480   0.049805    8.287598       -2.649902     1.0    -37913.017578         False          False  False
7  -37858.617676  -37869.604980  19046.700195 -37858.617676   21.875000 -37869.604980   0.049805   10.937500        0.000000     1.0    -37913.017578         False          False  False
8  -37858.617676  -37858.667480  19046.700195 -37858.617676    9.437500 -37858.667480   0.049805    0.000000     -100.000000     2.0    -37913.017578         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2951/10.[0m
[08/10 15:36:52]  --------------------------------------------------------------------------------
[08/10 15:36:52]  Iteration: 114 (2 solution, 111 counterexamples)
[08/10 15:36:59]  Generator returned sat in 3.449573 secs.
[08/10 15:36:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:00]  Improved gap from 164813/16384 to 10.9375
[08/10 15:37:00]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 15:37:00]  Verifer returned sat in 0.839805 secs.
[08/10 15:37:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -38229.291992  -38629.291992  18896.675293 -38229.291992    0.049805 -38629.291992   0.000000  400.000000      399.975098     4.0    -38629.291992            -1             -1   False
1  -38229.291992  -38629.267090  18896.675293 -38229.291992  399.975098 -38629.267090   0.000000  399.975098      299.975098     5.0    -38629.291992         False          False   False
2  -38119.217285  -38529.267090  18896.675293 -38119.217285  510.049805 -38529.267090   0.024902  410.024902      310.024902     4.0    -38629.291992          True           True   False
3  -38119.217285  -38329.267090  18896.675293 -38119.217285  410.000000 -38329.267090   0.024902  210.024902      210.024902     5.0    -38119.242188         False          False    True
4  -38119.217285  -38229.267090  18896.675293 -38119.217285  203.000000 -38229.267090   0.024902  110.024902      110.024902     3.0    -38119.242188         False           True   False
5  -38119.217285  -38138.004395  18896.675293 -38119.217285   99.500000 -38138.004395   0.024902   18.762207       10.024902     4.0    -38119.242188         False          False   False
6  -38090.229492  -38101.166992  18957.637695 -38090.229492   47.750000 -38101.166992   0.024902   10.912598       -0.024902     1.0    -38119.242188         False          False   False
7  -38079.267090  -38090.229492  19046.700195 -38079.267090   21.875000 -38090.229492   0.024902   10.937500        0.000000     1.0    -38119.242188         False          False   False
8  -38079.267090  -38079.291992  19046.700195 -38079.267090    8.937500 -38079.291992   0.024902    0.000000     -100.000000     2.0    -38119.242188         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=634931/2048.[0m
[08/10 15:37:01]  --------------------------------------------------------------------------------
[08/10 15:37:01]  Iteration: 115 (2 solution, 112 counterexamples)
[08/10 15:37:34]  Generator returned sat in 29.980940 secs.
[08/10 15:37:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:35]  Improved gap from 51/8192 to 0
[08/10 15:37:36]  Improved number of small numbers from 106 to 106 out of a max of 114
[08/10 15:37:36]  Verifer returned sat in 1.092454 secs.
[08/10 15:37:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -38019.240937  -38119.242188  21923.929141 -38019.240937  199.99875 -38119.242188    0.00000  100.00125       100.00125     5.0    -38119.242188            -1             -1     -1
1  -37919.243438  -38019.242188  21923.929141 -37919.243438  199.99875 -38019.242188    0.00000   99.99875        99.99875     5.0    -38119.242188         False           True  False
2  -37819.243438  -38019.240937  21923.929141 -37819.243438  199.99875 -38019.240937    0.00000  199.99750        99.99875     3.0    -38119.242188          True           True  False
3  -37616.235938  -37819.242188  21923.929141 -37616.235938  403.00500 -37819.242188  103.00500  100.00125       100.00125     1.0    -38119.242188         False          False  False
4  -37516.234688  -37719.242188  21923.929141 -37516.234688  200.00250 -37719.242188  103.00625  100.00125       100.00125     2.0    -38119.242188         False          False   True
5  -37516.234688  -37619.252188  21923.929141 -37516.234688   98.50125 -37619.252188  103.00625    0.01125         0.00125     2.0    -38119.242188         False          False   True
6  -37516.234688  -37619.242188  22023.927891 -37516.234688    0.01000 -37619.242188  103.00625    0.00125         0.00000     3.0    -38119.242188         False          False   True
7  -37516.225937  -37619.240937  22123.919141 -37516.225937    0.01000 -37619.240937  103.00625    0.00875         0.00000     4.0    -38119.242188         False          False   True
8  -37514.734688  -37617.740937  22123.919141 -37514.734688    1.50000 -37617.740937  103.00625    0.00000       -98.50875     1.0    -37617.740937          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=80001/800.[0m
[08/10 15:37:36]  --------------------------------------------------------------------------------
[08/10 15:37:36]  Iteration: 116 (2 solution, 113 counterexamples)
[08/10 15:37:44]  Generator returned sat in 4.240198 secs.
[08/10 15:37:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:45]  Improved gap from 0 to 0
[08/10 15:37:45]  Improved number of small numbers from 101 to 108 out of a max of 114
[08/10 15:37:45]  Verifer returned sat in 0.771643 secs.
[08/10 15:37:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -37919.242432  -38119.242432  21923.928955 -37919.242432    0.003418 -38119.242432      0.000  200.000000      199.999756     3.0    -38119.242432            -1             -1    True
1  -37919.242432  -38119.242188  21923.928955 -37919.242432    0.001465 -38119.242188      0.000  199.999756       99.999756     3.0    -37919.242432         False          False    True
2  -37919.242432  -38019.242188  21923.928955 -37919.242432  199.999756 -38019.242188      0.000   99.999756       -0.000244     4.0    -37919.242432         False          False    True
3  -37615.238854  -37819.242188  21923.928955 -37615.238854  404.003333 -37819.242188      4.015  199.988333      199.988333     1.0    -37919.242432         False           True   False
4  -37615.225521  -37769.228760  21923.928955 -37615.225521  200.001667 -37769.228760      4.015  149.988239      100.001667     2.0    -37919.242432         False          False    True
5  -37615.225521  -37619.251953  21923.928955 -37615.225521    0.010000 -37619.251953      4.015    0.011432        0.001667     2.0    -37919.242432         False          False    True
6  -37615.225521  -37619.242188  22023.927246 -37615.225521    0.010000 -37619.242188      4.015    0.001667       -0.000042     3.0    -37919.242432         False          False    True
7  -37615.217187  -37619.238854  22123.918945 -37615.217187    0.010000 -37619.238854      4.015    0.006667       -0.000010     1.0    -37919.242432         False          False    True
8  -37615.213854  -37619.230469  22123.918945 -37615.213854    0.010000 -37619.230469      4.015    0.001615      -99.996676     1.0    -37919.242432         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=119993/600.[0m
[08/10 15:37:46]  --------------------------------------------------------------------------------
[08/10 15:37:46]  Iteration: 117 (2 solution, 114 counterexamples)
[08/10 15:37:56]  Generator returned sat in 6.714053 secs.
[08/10 15:37:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:57]  Improved gap from 3/4096 to 46.875
[08/10 15:37:57]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 15:37:57]  Verifer returned sat in 0.572671 secs.
[08/10 15:37:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -38015.942627  -38315.942383  22020.629150 -38015.942627  300.199951 -38315.942383        0.0  299.999756      199.999756     3.0    -38315.942383            -1             -1    True
1  -38015.842529  -38115.942627  22020.629150 -38015.842529  300.099854 -38115.942627        0.0  100.100098      100.099854     2.0    -38015.842529         False          False    True
2  -37817.742676  -38015.942627  22020.629150 -37817.742676  298.199951 -38015.942627        0.0  198.199951      198.199707     3.0    -37817.742676         False          False    True
3  -37817.742676  -38015.942383  22020.629150 -37817.742676   56.875000 -38015.942383        0.0  198.199707       98.199707     3.0    -37817.742676         False          False    True
4  -37817.742676  -37817.842529  22020.629150 -37817.742676   54.875000 -37817.842529        0.0    0.099854       -1.800293     3.0    -37817.742676         False          False    True
5  -37764.967529  -37815.942383  22069.654297 -37764.967529   52.875000 -37815.942383        0.0   50.974854        0.000000     1.0    -37817.742676         False          False    True
6  -37764.967529  -37764.967529  22122.779053 -37764.967529   50.875000 -37764.967529        0.0    0.000000      -46.875244     2.0    -37817.742676         False          False    True
7  -37716.092529  -37718.092285  22175.904053 -37716.092529   48.875000 -37718.092285        0.0    1.999756      -44.875244     1.0    -37817.742676         False          False    True
8  -37671.217285  -37671.217285  22229.029053 -37671.217285   46.875000 -37671.217285        0.0    0.000000      -46.875000     1.0    -37817.742676         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=812237/4096.[0m
[08/10 15:37:58]  --------------------------------------------------------------------------------
[08/10 15:37:58]  Iteration: 118 (2 solution, 115 counterexamples)
[08/10 15:38:18]  Generator returned sat in 17.144455 secs.
[08/10 15:38:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:38:19]  Improved gap from 0 to 100
[08/10 15:38:19]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/10 15:38:19]  Verifer returned sat in 0.390988 secs.
[08/10 15:38:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -37715.867920  -37816.093018  22020.62915 -37715.867920    0.025000 -37816.093018    0.000000  100.225098      100.000000     2.0    -37816.093018            -1             -1   False
1  -37715.867920  -37815.867920  22020.62915 -37715.867920    0.025000 -37815.867920    0.000000  100.000000        0.000000     2.0    -37816.093018         False          False   False
2  -37715.867920  -37715.867920  22020.62915 -37715.867920   99.975098 -37715.867920    0.000000    0.000000     -100.000000     3.0    -37816.093018         False          False   False
3  -37515.867920  -37615.867920  22020.62915 -37515.867920  200.000000 -37615.867920    0.000000  100.000000        0.000000     1.0    -37816.093018         False          False   False
4  -37215.917725  -37515.867920  22020.62915 -37215.917725  399.950195 -37515.867920    0.000000  299.950195      199.950195     2.0    -37816.093018         False          False   False
5  -36916.367920  -37415.867920  22020.62915 -36916.367920  599.500000 -37415.867920  199.524902  299.975098      199.975098     2.0    -37816.093018         False          False   False
6  -36618.843018  -37215.892578  22020.62915 -36618.843018  597.500000 -37215.892578  397.049805  199.999756      199.975098     2.0    -37816.093018         False          False    True
7  -36223.342773  -37115.867920  22020.62915 -36223.342773  595.500000 -37115.867920  692.550049  199.975098      199.975098     2.0    -37816.093018         False          False    True
8  -35829.817871  -37115.842773  22020.62915 -35829.817871  593.500000 -37115.842773  986.074951  299.949951      199.975098     3.0    -37816.093018         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=409549/2048.[0m
[08/10 15:38:20]  --------------------------------------------------------------------------------
[08/10 15:38:20]  Iteration: 119 (2 solution, 116 counterexamples)
[08/10 15:38:27]  Generator returned sat in 4.031161 secs.
[08/10 15:38:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:38:28]  Improved gap from 4086269/40960 to 100
[08/10 15:38:28]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:38:28]  Verifer returned sat in 0.633954 secs.
[08/10 15:38:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -37414.851074  -37714.651367  22020.62915 -37414.851074  400.099854 -37714.651367    0.000000  299.800293      299.800293     9.0    -37714.651367            -1             -1     -1
1  -37314.651367  -37614.651367  22020.62915 -37314.651367  400.000000 -37614.651367    0.000000  300.000000      300.000000     3.0    -37314.651367         False           True  False
2  -37314.551270  -37614.651367  22020.62915 -37314.551270  300.100098 -37614.651367    0.000000  300.100098      200.100098     3.0    -37314.551270         False          False  False
3  -37110.751221  -37414.751465  22020.62915 -37110.751221  503.900146 -37414.751465    3.800049  300.200195      300.100098     3.0    -37314.551270         False          False  False
4  -36909.051270  -37414.651367  22020.62915 -36909.051270  501.900146 -37414.651367  105.500000  400.100098      300.100098     4.0    -37314.551270         False          False   True
5  -36809.251221  -37314.651367  22020.62915 -36809.251221  499.900146 -37314.651367  105.500000  399.900146      299.900146     5.0    -37314.551270         False          False   True
6  -36609.151367  -37214.651123  22020.62915 -36609.151367  600.000000 -37214.651123  205.399902  400.099854      300.100098     4.0    -37314.551270         False           True  False
7  -36411.251221  -37014.651367  22020.62915 -36411.251221  598.000000 -37014.651367  303.300049  300.100098      300.100098     4.0    -37314.551270         False          False   True
8  -36115.351318  -36914.651367  22020.62915 -36115.351318  596.000000 -36914.651367  499.199951  300.100098      300.100098     3.0    -37314.551270         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=614605/2048.[0m
[08/10 15:38:29]  --------------------------------------------------------------------------------
[08/10 15:38:29]  Iteration: 120 (2 solution, 117 counterexamples)
[08/10 15:39:01]  Generator returned sat in 28.798192 secs.
[08/10 15:39:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:02]  Improved gap from 1/400 to 100
[08/10 15:39:02]  Improved number of small numbers from 96 to 96 out of a max of 114
[08/10 15:39:02]  Verifer returned sat in 0.902187 secs.
[08/10 15:39:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -37414.851074  -37714.851074  22020.62915 -37414.851074   300.0500 -37714.851074       0.05   299.95          299.95     9.0    -37714.851074            -1             -1     -1
1  -37414.801074  -37614.851074  22020.62915 -37414.801074   300.0000 -37614.851074       0.05   200.00          200.00     3.0    -37414.851074         False           True   True
2  -36914.851074  -37514.851074  22020.62915 -36914.851074   699.9500 -37514.851074       0.05   599.95          599.95     3.0    -37414.851074         False          False   True
3  -36914.851074  -37414.851074  22020.62915 -36914.851074   226.5125 -37414.851074       0.05   499.95          499.95     3.0    -36914.901074         False          False   True
4  -36914.851074  -37414.851074  22020.62915 -36914.851074   451.0250 -37414.851074       0.05   499.95          399.95     3.0    -36914.901074         False          False   True
5  -36514.751074  -37314.851074  22020.62915 -36514.751074   900.0500 -37314.851074       0.05   800.05          700.05     4.0    -36914.901074         False          False   True
6  -35516.701074  -37114.851074  22020.62915 -35516.701074  1798.1000 -37114.851074     898.05   700.10          700.10     5.0    -36914.901074         False          False   True
7  -35516.701074  -37081.301074  22020.62915 -35516.701074     0.5000 -37081.301074     898.05   666.55          600.10     6.0    -36914.901074         False           True   True
8  -35516.651074  -36914.851074  22020.62915 -35516.651074   666.6000 -36914.851074     898.05   500.15          500.15     4.0    -36914.901074         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=7001/10.[0m
[08/10 15:39:03]  --------------------------------------------------------------------------------
[08/10 15:39:03]  Iteration: 121 (2 solution, 118 counterexamples)
[08/10 15:39:24]  Generator returned sat in 16.836158 secs.
[08/10 15:39:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:24]  Improved gap from 0 to 100
[08/10 15:39:25]  Improved number of small numbers from 82 to 114 out of a max of 114
[08/10 15:39:25]  Verifer returned sat in 0.866937 secs.
[08/10 15:39:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -37111.201416  -37311.051514  22020.62915 -37111.201416    0.049805 -37311.051514    0.000000  199.850098      199.849854     4.0    -37311.051514            -1             -1   False
1  -37111.201416  -37307.451416  22020.62915 -37111.201416    0.049805 -37307.451416    0.000000  196.250000       99.849854     2.0    -37311.051514         False          False   False
2  -37111.101318  -37111.151367  22020.62915 -37111.101318  196.350098 -37111.151367    0.000000    0.050049       -0.050049     1.0    -37311.051514         False          False   False
3  -36914.851318  -37111.051270  22020.62915 -36914.851318  196.300049 -37111.051270    0.000000  196.199951       96.199951     1.0    -36914.851318         False          False   False
4  -36914.851318  -36914.901367  22020.62915 -36914.851318  196.150146 -36914.901367    0.000000    0.050049       -3.800049     2.0    -36914.851318         False          False   False
5  -36622.551270  -36901.901367  22020.62915 -36622.551270  292.350098 -36901.901367   88.550049  190.800049       99.949951     1.0    -36914.851318         False          False   False
6  -36522.501221  -36711.051514  22020.62915 -36522.501221  290.850098 -36711.051514   88.600098   99.950195       99.949951     1.0    -36914.851318         False          False    True
7  -36333.101318  -36611.051514  22020.62915 -36333.101318  289.350098 -36611.051514  178.000000   99.950195       99.949951     1.0    -36914.851318         False          False    True
8  -36145.201416  -36511.051270  22020.62915 -36145.201416  287.850098 -36511.051270  265.899902   99.949951       99.949951     1.0    -36914.851318         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=409395/4096.[0m
[08/10 15:39:25]  --------------------------------------------------------------------------------
[08/10 15:39:25]  Iteration: 122 (2 solution, 119 counterexamples)
[08/10 15:41:16]  Generator returned sat in 106.594229 secs.
[08/10 15:41:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:18]  Verifer returned unsat in 1.485742 secs.
[08/10 15:41:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:18]  --------------------------------------------------------------------------------
[08/10 15:41:18]  Iteration: 123 (3 solution, 119 counterexamples)
[08/10 15:41:25]  Generator returned sat in 4.038047 secs.
[08/10 15:41:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:27]  Verifer returned unsat in 1.187261 secs.
[08/10 15:41:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:27]  --------------------------------------------------------------------------------
[08/10 15:41:27]  Iteration: 124 (4 solution, 119 counterexamples)
[08/10 15:41:36]  Generator returned sat in 5.413171 secs.
[08/10 15:41:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:38]  Verifer returned unsat in 1.302734 secs.
[08/10 15:41:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:38]  --------------------------------------------------------------------------------
[08/10 15:41:38]  Iteration: 125 (5 solution, 119 counterexamples)
[08/10 15:41:45]  Generator returned sat in 3.948147 secs.
[08/10 15:41:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:48]  Verifer returned unsat in 2.120336 secs.
[08/10 15:41:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:48]  --------------------------------------------------------------------------------
[08/10 15:41:48]  Iteration: 126 (6 solution, 119 counterexamples)
[08/10 15:41:56]  Generator returned sat in 3.906265 secs.
[08/10 15:41:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:58]  Verifer returned unsat in 1.887619 secs.
[08/10 15:41:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:58]  --------------------------------------------------------------------------------
[08/10 15:41:58]  Iteration: 127 (7 solution, 119 counterexamples)
[08/10 15:42:05]  Generator returned sat in 3.805994 secs.
[08/10 15:42:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:08]  Verifer returned unsat in 2.089162 secs.
[08/10 15:42:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:08]  --------------------------------------------------------------------------------
[08/10 15:42:08]  Iteration: 128 (8 solution, 119 counterexamples)
[08/10 15:42:20]  Generator returned sat in 7.857431 secs.
[08/10 15:42:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:21]  Verifer returned unsat in 1.396369 secs.
[08/10 15:42:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:21]  --------------------------------------------------------------------------------
[08/10 15:42:21]  Iteration: 129 (9 solution, 119 counterexamples)
[08/10 15:42:29]  Generator returned sat in 3.916364 secs.
[08/10 15:42:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:31]  Verifer returned unsat in 2.173313 secs.
[08/10 15:42:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:32]  --------------------------------------------------------------------------------
[08/10 15:42:32]  Iteration: 130 (10 solution, 119 counterexamples)
[08/10 15:42:39]  Generator returned sat in 3.908798 secs.
[08/10 15:42:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:42]  Verifer returned unsat in 2.464144 secs.
[08/10 15:42:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:42]  --------------------------------------------------------------------------------
[08/10 15:42:42]  Iteration: 131 (11 solution, 119 counterexamples)
[08/10 15:42:50]  Generator returned sat in 3.781737 secs.
[08/10 15:42:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:52]  Verifer returned unsat in 2.342369 secs.
[08/10 15:42:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:52]  --------------------------------------------------------------------------------
[08/10 15:42:52]  Iteration: 132 (12 solution, 119 counterexamples)
[08/10 15:43:00]  Generator returned sat in 3.878762 secs.
[08/10 15:43:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:43:01]  Verifer returned unsat in 1.306117 secs.
[08/10 15:43:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:43:01]  --------------------------------------------------------------------------------
[08/10 15:43:01]  Iteration: 133 (13 solution, 119 counterexamples)
[08/10 15:43:09]  Generator returned sat in 3.773321 secs.
[08/10 15:43:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:43:17]  Improved gap from 0 to 0
[08/10 15:43:18]  Improved number of small numbers from 60 to 68 out of a max of 114
[08/10 15:43:18]  Verifer returned sat in 9.092071 secs.
[08/10 15:43:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -44488.887939  -44488.889289  22020.629150 -44488.887939  0.000732 -44488.889289   0.000714  0.000635        0.000635     1.0    -44488.889289            -1             -1     -1
1  -44488.887146  -44488.889289  22120.627722 -44488.887146  0.001429 -44488.889289   0.000714  0.001429        0.000000     1.0    -44488.889289         False          False   True
2  -44488.886431  -44488.887860  22220.365967 -44488.886431  0.002143 -44488.887860   0.000714  0.000714       -0.261041     2.0    -44488.889289         False          False   True
3  -44488.392146  -44488.626074  22320.132722 -44488.392146  0.495000 -44488.626074   0.000714  0.233214        0.000000     1.0    -44488.889289         False          False   True
4  -44488.392146  -44488.392860  22420.123535 -44488.392146  0.010714 -44488.392860   0.000714  0.000000       -0.009187     2.0    -44488.889289         False          False   True
5  -44488.382146  -44488.383574  22520.122070 -44488.382146  0.010000 -44488.383574   0.000714  0.000714       -0.000652     1.0    -44488.889289         False          False   True
6  -44488.372860  -44488.382146  22620.112793 -44488.372860  0.010000 -44488.382146   0.000714  0.008571       -0.000643     1.0    -44488.889289         False          False   True
7  -44488.371431  -44488.372860  22720.102783 -44488.371431  0.010000 -44488.372860   0.000714  0.000714       -0.009224     1.0    -44488.889289         False          False   True
8  -44488.362146  -44488.362860  22720.102783 -44488.362146  0.010000 -44488.362860   0.000714  0.000000      -99.999939     1.0    -44488.889289         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=5/4096.[0m
[08/10 15:43:19]  --------------------------------------------------------------------------------
[08/10 15:43:19]  Iteration: 134 (13 solution, 120 counterexamples)
[08/10 15:43:51]  Generator returned sat in 27.833939 secs.
[08/10 15:43:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:43:51]  Improved gap from 1/800 to 100
[08/10 15:43:52]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/10 15:43:52]  Verifer returned sat in 0.692901 secs.
[08/10 15:43:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50630.072754  -50630.172607  28161.612305 -50630.072754    0.100098 -50630.172607    0.000000   0.099854       -0.199951     5.0    -50630.172607            -1             -1     -1
1  -50529.972656  -50629.872803  28161.612305 -50529.972656  100.199951 -50629.872803    0.000000  99.900146       -0.099854     1.0    -50630.172607         False           True  False
2  -50529.772949  -50529.872803  28161.612305 -50529.772949  100.099854 -50529.872803    0.000000   0.099854      -99.900146     1.0    -50529.772949         False          False  False
3  -50307.622803  -50338.697998  28161.612305 -50307.622803  222.250000 -50338.697998   22.050049   9.025146        0.199951     1.0    -50529.772949         False          False  False
4  -50207.522949  -50229.872803  28161.612305 -50207.522949  109.125000 -50229.872803   22.149902   0.199951        0.199951     1.0    -50529.772949         False          False   True
5  -50155.160400  -50229.872803  28161.612305 -50155.160400   52.562500 -50229.872803   22.149902  52.562500      -47.437500     1.0    -50529.772949         False          False   True
6  -49759.222900  -50029.872803  28161.612305 -49759.222900  448.500000 -50029.872803  270.449951   0.199951        0.199951     1.0    -50529.772949         False          False   True
7  -49537.172852  -49929.872803  28161.612305 -49537.172852  222.250000 -49929.872803  392.500000   0.199951        0.199951     1.0    -50529.772949         False          False   True
8  -49428.247803  -49929.572998  28161.612305 -49428.247803  109.125000 -49929.572998  401.425049  99.900146        0.199951     1.0    -50529.772949         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:43:52]  --------------------------------------------------------------------------------
[08/10 15:43:52]  Iteration: 135 (13 solution, 121 counterexamples)
[08/10 15:44:00]  Generator returned sat in 4.127440 secs.
[08/10 15:44:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:44:01]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:44:01]  Verifer returned sat in 0.187653 secs.
[08/10 15:44:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50630.072754  -50630.172607  28161.612305 -50630.072754    0.100098 -50630.172607    0.000000   0.099854       -0.199951     5.0    -50630.172607            -1             -1     -1
1  -50529.972656  -50629.872803  28161.612305 -50529.972656  100.199951 -50629.872803    0.000000  99.900146       -0.099854     1.0    -50630.172607         False           True  False
2  -50529.772949  -50529.872803  28161.612305 -50529.772949  100.099854 -50529.872803    0.000000   0.099854      -99.900146     1.0    -50529.772949         False          False  False
3  -50307.872803  -50337.447998  28161.612305 -50307.872803  222.000000 -50337.447998   21.800049   7.775146        0.199951     1.0    -50529.772949         False          False  False
4  -50206.647949  -50229.872803  28161.612305 -50206.647949  109.000000 -50229.872803   23.024902   0.199951        0.199951     1.0    -50529.772949         False          False   True
5  -50154.347900  -50229.872803  28161.612305 -50154.347900   52.500000 -50229.872803   23.024902  52.500000      -47.500000     1.0    -50529.772949         False          False   True
6  -49758.847900  -50029.872803  28161.612305 -49758.847900  448.000000 -50029.872803  270.824951   0.199951        0.199951     1.0    -50529.772949         False          False   True
7  -49537.047852  -49929.872803  28161.612305 -49537.047852  222.000000 -49929.872803  392.625000   0.199951        0.199951     1.0    -50529.772949         False          False   True
8  -49428.247803  -49929.572998  28161.612305 -49428.247803  109.000000 -49929.572998  401.425049  99.900146        0.199951     1.0    -50529.772949         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:44:01]  --------------------------------------------------------------------------------
[08/10 15:44:01]  Iteration: 136 (13 solution, 122 counterexamples)
[08/10 15:45:03]  Generator returned sat in 57.323335 secs.
[08/10 15:45:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:45:03]  Improved gap from 7/100 to 100
[08/10 15:45:03]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/10 15:45:03]  Verifer returned sat in 0.517556 secs.
[08/10 15:45:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -51306.748047  -51406.748047  28938.487549 -51306.748047     0.049805 -51406.748047   0.049805    99.950195       99.950195     9.0    -51406.748047            -1             -1     -1
1  -51006.698242  -51306.748291  28938.487549 -51006.698242   400.000000 -51306.748291   0.049805   300.000244      300.000000     1.0    -51406.748047         False           True   True
2  -50206.648438  -51206.748291  28938.487549 -50206.648438  1100.050049 -51206.748291   0.049805  1000.050049     1000.049805     2.0    -51406.748047         False          False   True
3  -50206.648438  -51106.748291  28938.487549 -50206.648438   100.437500 -51106.748291   0.049805   900.050049      900.049805     3.0    -50206.698242         False          False   True
4  -50206.648438  -51006.748047  28938.487549 -50206.648438   200.375000 -51006.748047   0.049805   800.049805      800.049805     4.0    -50206.698242         False          False   True
5  -50206.648438  -51006.748047  28938.487549 -50206.648438   400.250000 -51006.748047   0.049805   800.049805      700.049805     4.0    -50206.698242         False          False   True
6  -50206.648438  -50806.848145  28938.487549 -50206.648438   800.000000 -50806.848145   0.049805   600.149902      600.049805     5.0    -50206.698242         False          False   True
7  -49207.298340  -50706.748047  28938.487549 -49207.298340  1599.500000 -50706.748047   0.049805  1499.399902     1499.399902     6.0    -50206.698242         False          False   True
8  -49107.198242  -50606.748291  28938.487549 -49107.198242  1599.500000 -50606.748291   0.099854  1499.450195     1499.449951     7.0    -50206.698242         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6141747/4096.[0m
[08/10 15:45:04]  --------------------------------------------------------------------------------
[08/10 15:45:04]  Iteration: 137 (13 solution, 123 counterexamples)
[08/10 15:45:44]  Generator returned sat in 36.462217 secs.
[08/10 15:45:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:45:45]  Improved gap from 0 to 100
[08/10 15:45:45]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 15:45:45]  Verifer returned sat in 0.413037 secs.
[08/10 15:45:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -51306.698486  -51406.735596  28938.487305 -51306.698486    0.012451 -51406.735596   0.049805   99.987305       99.987305     2.0    -51406.735596            -1             -1     -1
1  -50806.710693  -51306.735840  28938.487305 -50806.710693  599.975098 -51306.735840   0.049805  499.975342      499.975098     1.0    -51406.735596         False          False   True
2  -50706.710938  -51206.735596  28938.487305 -50706.710938  599.975098 -51206.735596   0.049805  499.974854      499.974854     2.0    -51406.735596         False          False   True
3  -50406.673340  -51206.723145  28938.487305 -50406.673340  800.012451 -51206.723145   0.049805  800.000000      700.012451     3.0    -51406.735596         False          False   True
4  -50406.660889  -51106.735596  28938.487305 -50406.660889  800.012451 -51106.735596   0.049805  700.024902      600.024902     4.0    -51406.735596         False          False   True
5  -50306.673340  -50906.735596  28938.487305 -50306.673340  800.012451 -50906.735596   0.049805  600.012451      600.012451     5.0    -51406.735596         False          False   True
6  -50106.673340  -50906.735596  28938.487305 -50106.673340  800.012451 -50906.735596   0.049805  800.012451      700.012451     5.0    -51406.735596         False          False   True
7  -50106.673340  -50706.748291  28938.487305 -50106.673340  800.012451 -50706.748291   0.049805  600.025146      600.012451     5.0    -51406.735596         False          False   True
8  -49906.686035  -50606.735840  28938.487305 -49906.686035  800.012451 -50606.735840   0.049805  700.000000      699.999756     6.0    -51406.735596         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=2867251/4096.[0m
[08/10 15:45:46]  --------------------------------------------------------------------------------
[08/10 15:45:46]  Iteration: 138 (13 solution, 124 counterexamples)
[08/10 15:46:14]  Generator returned sat in 24.358773 secs.
[08/10 15:46:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:46:15]  Improved gap from 0 to 100
[08/10 15:46:15]  Improved number of small numbers from 57 to 82 out of a max of 114
[08/10 15:46:15]  Verifer returned sat in 1.186723 secs.
[08/10 15:46:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -51726.470215  -51726.522949  28938.487305 -51726.470215    0.002686 -51726.522949   0.049805    0.002930       -0.002277     7.0    -51726.522949            -1             -1     -1
1  -51626.468018  -51726.517578  28938.487305 -51626.468018  100.005127 -51726.517578   0.049805   99.999756       -0.000080     1.0    -51726.522949         False           True   True
2  -51417.588379  -51626.517578  28938.487305 -51417.588379  308.879395 -51626.517578   0.049805  208.879395      108.879559     1.0    -51726.522949         False          False   True
3  -51417.588379  -51526.517742  28938.487305 -51417.588379  208.877083 -51526.517742   0.049805  108.879559        8.879559     2.0    -51417.638184         False          False   True
4  -51109.213771  -51360.521076  28938.487305 -51109.213771  417.254167 -51360.521076   0.049805  251.257500      217.254167     1.0    -51417.638184         False          False   True
5  -50526.462938  -51326.517578  28938.487305 -50526.462938  834.008333 -51326.517578   0.052305  800.002336      700.002500     2.0    -51417.638184         False          False   True
6  -50526.462938  -51126.517742  28938.487305 -50526.462938    0.010000 -51126.517742   0.052305  600.002500      600.002500     3.0    -51417.638184         False          False   True
7  -50526.462938  -51026.517742  28938.487305 -50526.462938  599.000000 -51026.517742   0.052305  500.002500      500.002500     3.0    -50526.515242          True           True  False
8  -50526.460437  -50926.517822  28938.487305 -50526.460437  500.005000 -50926.517822   0.052305  400.005080      400.005000     4.0    -50526.515242         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=280001/400.[0m
[08/10 15:46:16]  --------------------------------------------------------------------------------
[08/10 15:46:16]  Iteration: 139 (13 solution, 125 counterexamples)
[08/10 15:47:32]  Generator returned sat in 72.065285 secs.
[08/10 15:47:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:47:33]  Improved gap from 0 to 100
[08/10 15:47:35]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 15:47:35]  Verifer returned sat in 2.357271 secs.
[08/10 15:47:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50726.622803  -50826.722938  28038.6425 -50726.622803     0.049805 -50826.722938       0.05  100.050135      100.000135     8.0    -50826.722938            -1             -1     -1
1  -50726.622803  -50826.672937  28038.6425 -50726.622803     0.049805 -50826.672937       0.05  100.000135        0.000135     2.0    -50826.722938         False           True   True
2  -50526.672937  -50717.372937  28038.6425 -50526.672937   299.950000 -50717.372937       0.05  190.650000       99.950000     1.0    -50826.722938         False          False   True
3  -50526.672937  -50626.672937  28038.6425 -50526.672937    86.627778 -50626.672937       0.05   99.950000       -0.050000     2.0    -50526.722938         False          False   True
4  -50394.656271  -50526.672937  28038.6425 -50394.656271   231.966667 -50526.672937       0.05  131.966667       31.966667     1.0    -50526.722938         False          False   True
5  -50026.672937  -50358.156271  28038.6425 -50026.672937   499.950000 -50358.156271       0.05  331.433333      299.950000     1.0    -50526.722938         False          False   True
6  -49426.572938  -50226.672937  28038.6425 -49426.572938   931.533333 -50226.672937       0.05  800.050000      800.050000     2.0    -50526.722938         False          False   True
7  -48627.322938  -50126.672937  28038.6425 -48627.322938  1599.300000 -50126.672937     699.25  800.100000      800.100000     3.0    -50526.722938         False          False   True
8  -48627.272937  -50026.673096  28038.6425 -48627.272937   800.150000 -50026.673096     699.25  700.150158      700.150000     3.0    -49326.522937          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=8001/10.[0m
[08/10 15:47:35]  --------------------------------------------------------------------------------
[08/10 15:47:35]  Iteration: 140 (13 solution, 126 counterexamples)
[08/10 15:48:24]  Generator returned sat in 45.071417 secs.
[08/10 15:48:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:26]  Improved number of small numbers from 67 to 84 out of a max of 113
[08/10 15:48:26]  Verifer returned sat in 1.042389 secs.
[08/10 15:48:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50526.117920  -50726.142822  28038.6425 -50526.117920    0.012451 -50726.142822     0.0500  199.974902      199.974883     2.0    -50726.142822            -1             -1     -1
1  -50526.117920  -50626.142803  28038.6425 -50526.117920    0.012695 -50626.142803     0.0500   99.974883       99.974883     2.0    -50726.142822         False          False   True
2  -50226.092803  -50526.155518  28038.6425 -50226.092803  400.000000 -50526.155518     0.0500  300.012715      300.000000     1.0    -50726.142822         False          False   True
3  -50226.092803  -50526.142578  28038.6425 -50226.092803   27.975313 -50526.142578     0.0500  299.999775      200.000000     2.0    -50226.142803         False          False   True
4  -50226.092803  -50336.556396  28038.6425 -50226.092803   55.450625 -50336.556396     0.0500  110.413594      100.000000     3.0    -50226.142803         False          False   True
5  -50226.092803  -50326.142803  28038.6425 -50226.092803  110.401250 -50326.142803     0.0500  100.000000        0.000000     4.0    -50226.142803         False          False   True
6  -50105.790303  -50126.142803  28038.6425 -50105.790303  220.302500 -50126.142803     0.0500   20.302500       20.302500     1.0    -50226.142803         False          False   True
7  -49685.987803  -50105.827803  28038.6425 -49685.987803  440.105000 -50105.827803     0.0500  419.790000      340.105000     1.0    -50226.142803         False          False   True
8  -49226.067803  -50026.142578  28038.6425 -49226.067803  879.710000 -50026.142578     0.0625  800.012275      700.012500     2.0    -50226.142803         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=56001/80.[0m
[08/10 15:48:26]  --------------------------------------------------------------------------------
[08/10 15:48:26]  Iteration: 141 (13 solution, 127 counterexamples)
[08/10 15:48:51]  Generator returned sat in 20.450179 secs.
[08/10 15:48:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:52]  Improved gap from 0 to 100
[08/10 15:48:54]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 15:48:54]  Verifer returned sat in 2.360103 secs.
[08/10 15:48:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50427.230957  -50427.293428  27739.793125 -50427.230957   199.640381 -50427.293428    0.050000    0.012471        0.012471     9.0    -50427.293428            -1             -1     -1
1  -50227.615303  -50327.293428  27739.793125 -50227.615303   199.628125 -50327.293428    0.050000   99.628125       99.628125     1.0    -50227.665303         False           True   True
2  -50227.590303  -50227.652803  27739.793125 -50227.590303    99.653125 -50227.652803    0.050000    0.012500       -0.346875     1.0    -50227.640303         False          False   True
3  -50227.230928  -50227.293428  27739.793125 -50227.230928     0.371875 -50227.293428    0.050000    0.012500      -99.987500     1.0    -50227.280928         False          False   True
4  -50126.999678  -50127.293428  27739.793125 -50126.999678   100.243750 -50127.293428    0.050000    0.243750      -99.756250     1.0    -50227.280928         False          False   True
5  -49827.255928  -50027.293428  27739.793125 -49827.255928   299.987500 -50027.293428    0.050000  199.987500       99.987500     1.0    -50227.280928         False          False   True
6  -49327.588740  -49827.293428  27739.793125 -49327.588740   699.654688 -49827.293428    0.050000  499.654688      499.654688     1.0    -50227.280928         False          False   True
7  -48228.434053  -49727.293457  27739.793125 -48228.434053  1598.809375 -49727.293457  698.846875  800.012529      800.012500     2.0    -50227.280928         False          False   True
8  -48228.434053  -49627.293457  27739.793125 -48228.434053   797.404688 -49627.293457  698.846875  700.012529      700.012500     3.0    -48927.280928          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=64001/80.[0m
[08/10 15:48:54]  --------------------------------------------------------------------------------
[08/10 15:48:54]  Iteration: 142 (13 solution, 128 counterexamples)
[08/10 15:49:43]  Generator returned sat in 45.120500 secs.
[08/10 15:49:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:49:45]  Improved gap from 0 to 0
[08/10 15:49:45]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:49:45]  Verifer returned sat in 1.205319 secs.
[08/10 15:49:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50326.833496  -50627.933350  27542.693115 -50326.833496  301.499756 -50627.933350   0.000000  301.099854      201.099854     9.0    -50627.933350            -1             -1     -1
1  -50326.533447  -50428.033447  27542.693115 -50326.533447  301.399902 -50428.033447   0.099854  101.400146      101.300049     3.0    -50326.633301         False           True  False
2  -50326.533447  -50427.933350  27542.693115 -50326.533447  101.299805 -50427.933350   0.099854  101.300049        1.300049     3.0    -50326.633301         False          False   True
3  -50326.533447  -50326.733643  27641.393066 -50326.533447  101.200195 -50326.733643   0.099854    0.100342        0.000000     3.0    -50326.633301         False          False   True
4  -50224.933594  -50326.633301  27641.393066 -50224.933594  101.700195 -50326.633301   0.099854  101.599854        1.599854     4.0    -50326.633301         False          False   True
5  -50224.933594  -50226.633301  27739.793213 -50224.933594    1.500000 -50226.633301   0.099854    1.599854        0.000000     2.0    -50326.633301         False           True  False
6  -50224.933594  -50225.033447  27839.792969 -50224.933594    1.500000 -50225.033447   0.099854    0.000000       -0.000244     3.0    -50326.633301         False          False  False
7  -50223.433594  -50224.933350  27938.293213 -50223.433594    1.500000 -50224.933350   0.099854    1.399902        0.000000     1.0    -50326.633301         False          False  False
8  -50223.333496  -50223.533447  28038.193115 -50223.333496    1.500000 -50223.533447   0.099854    0.100098        0.000000     2.0    -50326.633301         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=414925/4096.[0m
[08/10 15:49:46]  --------------------------------------------------------------------------------
[08/10 15:49:46]  Iteration: 143 (13 solution, 129 counterexamples)
[08/10 15:50:27]  Generator returned sat in 37.643197 secs.
[08/10 15:50:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:50:30]  Improved gap from 1/80 to 17.1875
[08/10 15:50:30]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 15:50:30]  Verifer returned sat in 2.209777 secs.
[08/10 15:50:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -50676.158447  -50875.858643  27790.618408 -50676.158447    0.100098 -50875.858643        0.0  199.700195       99.700195     4.0    -50875.858643            -1             -1   False
1  -50675.958496  -50676.058594  27790.618408 -50675.958496  199.900146 -50676.058594        0.0    0.100098       -0.099854     1.0    -50875.858643         False          False   False
2  -50575.858643  -50675.858643  27790.618408 -50575.858643  100.199951 -50675.858643        0.0  100.000000        0.000000     1.0    -50575.858643         False          False   False
3  -50249.858643  -50475.858643  27790.618408 -50249.858643  426.000000 -50475.858643        0.0  226.000000      226.000000     1.0    -50575.858643         False          False   False
4  -50249.858643  -50375.858643  27790.618408 -50249.858643  215.000000 -50375.858643        0.0  126.000000      126.000000     2.0    -50575.858643         False          False   False
5  -50249.858643  -50299.895752  27790.618408 -50249.858643  109.500000 -50299.895752        0.0   50.037109       26.000000     3.0    -50575.858643         False          False   False
6  -50243.145752  -50273.620850  27857.905518 -50243.145752   56.750000 -50273.620850        0.0   30.475098        0.000000     4.0    -50575.858643         False          False   False
7  -50243.145752  -50243.145752  27940.718018 -50243.145752   30.375000 -50243.145752        0.0    0.000000      -17.187500     2.0    -50575.858643         False          False   False
8  -50225.958252  -50225.958252  27940.718018 -50225.958252   17.187500 -50225.958252        0.0    0.000000     -100.000000     1.0    -50575.858643         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=926105/4096.[0m
[08/10 15:50:30]  --------------------------------------------------------------------------------
[08/10 15:50:30]  Iteration: 144 (13 solution, 130 counterexamples)
[08/10 15:50:40]  Generator returned sat in 5.746369 secs.
[08/10 15:50:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:50:43]  Improved gap from 409/8192 to 14.0625
[08/10 15:50:44]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:50:44]  Verifer returned sat in 3.087987 secs.
[08/10 15:50:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -49983.818848  -50371.868408  27241.128418 -49983.818848    0.050000 -50371.868408        0.0  388.049561      292.949707     3.0    -50371.868408            -1             -1   False
1  -49983.818604  -50176.768555  27241.128418 -49983.818604  388.049805 -50176.768555        0.0  192.949951      192.949951     3.0    -50371.868408         False          False   False
2  -49788.718506  -50176.768555  27241.128418 -49788.718506  388.050049 -50176.768555        0.0  388.050049      288.050049     3.0    -50371.868408         False          False   False
3  -49788.718506  -49983.768555  27241.128418 -49788.718506  388.000000 -49983.768555        0.0  195.050049      188.050049     2.0    -49788.718506         False          False   False
4  -49788.718506  -49910.543457  27241.128418 -49788.718506  195.000000 -49910.543457        0.0  121.824951       88.050049     3.0    -49788.718506         False          False   False
5  -49788.718506  -49839.018799  27253.078369 -49788.718506   98.500000 -49839.018799        0.0   50.300293        0.000000     4.0    -49788.718506         False          False   False
6  -49788.718506  -49788.718506  27339.015869 -49788.718506   50.250000 -49788.718506        0.0    0.000000      -14.062500     5.0    -49788.718506         False          False   False
7  -49762.593506  -49774.656006  27424.953369 -49762.593506   26.125000 -49774.656006        0.0   12.062500       -2.000000     1.0    -49788.718506         False          False   False
8  -49760.593506  -49760.593506  27424.953369 -49760.593506   14.062500 -49760.593506        0.0    0.000000     -100.000000     1.0    -49788.718506         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1180057/4096.[0m
[08/10 15:50:44]  --------------------------------------------------------------------------------
[08/10 15:50:44]  Iteration: 145 (13 solution, 131 counterexamples)
[08/10 15:51:21]  Generator returned sat in 32.914644 secs.
[08/10 15:51:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:51:22]  Improved gap from 0 to 100
[08/10 15:51:22]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:51:22]  Verifer returned sat in 0.786032 secs.
[08/10 15:51:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -49357.435059  -49788.868652  27253.078369 -49357.435059    0.050000 -49788.868652    0.000000  431.433594      431.433350     3.0    -49788.868652            -1             -1   False
1  -49357.435059  -49788.818359  27253.078369 -49357.435059  431.433105 -49788.818359    0.000000  431.383301      331.433350     3.0    -49788.868652         False          False   False
2  -49357.385254  -49688.868408  27253.078369 -49357.385254  431.433105 -49688.868408    0.000000  331.483154      231.483154     4.0    -49788.868652         False          False   False
3  -49357.334961  -49490.768555  27253.078369 -49357.334961  331.533447 -49490.768555    0.000000  133.433594      131.533447     5.0    -49357.334961         False          False   False
4  -48894.568359  -49488.868408  27253.078369 -48894.568359  596.200195 -49488.868408    0.050049  594.250000      494.250000     6.0    -49357.334961         False          False   False
5  -48894.568359  -49357.435059  27253.078369 -48894.568359  594.200195 -49357.435059    0.050049  462.816650      394.250000     7.0    -49357.334961         False          False    True
6  -48694.518311  -49188.868408  27253.078369 -48694.518311  662.866699 -49188.868408    0.100098  494.250000      494.250000     3.0    -49357.334961         False           True   False
7  -48527.901611  -49088.868652  27253.078369 -48527.901611  660.866699 -49088.868652   66.716797  494.250244      494.250000     4.0    -49357.334961         False          False    True
8  -48363.285156  -49088.868408  27253.078369 -48363.285156  658.866699 -49088.868408  131.333252  594.250000      494.250000     5.0    -49357.334961         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1977/4.[0m
[08/10 15:51:23]  --------------------------------------------------------------------------------
[08/10 15:51:23]  Iteration: 146 (13 solution, 132 counterexamples)
[08/10 15:52:18]  Generator returned sat in 50.458833 secs.
[08/10 15:52:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:52:19]  Improved gap from 1/600 to 100
[08/10 15:52:19]  Improved number of small numbers from 76 to 97 out of a max of 114
[08/10 15:52:19]  Verifer returned sat in 1.432554 secs.
[08/10 15:52:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -49994.668213  -49995.562012  27253.078369 -49994.668213  100.993652 -49995.562012       0.00    0.893799       -0.049902     1.0    -49995.562012            -1             -1    True
1  -49894.618408  -49994.618164  27253.078369 -49894.618408  100.943604 -49994.618164       0.00   99.999756       -0.000098     1.0    -49894.618408         False          False    True
2  -49893.724609  -49893.774561  27253.078369 -49893.724609  100.893555 -49893.774561       0.00    0.049951      -99.106299     1.0    -49893.724609         False          False    True
3  -49792.880811  -49794.618311  27253.078369 -49792.880811  100.893750 -49794.618311       0.00    1.737500      -98.262500     1.0    -49893.724609         False          False    True
4  -49593.830811  -49694.618311  27253.078369 -49593.830811  200.787500 -49694.618311       0.00  100.787500        0.787500     1.0    -49893.724609         False          False    True
5  -49294.043311  -49494.668311  27253.078369 -49294.043311  400.575000 -49494.668311       0.00  200.625000      200.575000     1.0    -49893.724609         False          False    True
6  -48694.518311  -49494.618164  27253.078369 -48694.518311  800.150000 -49494.618164       0.05  800.049854      700.050000     2.0    -49893.724609         False          False    True
7  -48694.518311  -49294.618311  27253.078369 -48694.518311  401.575000 -49294.618311       0.05  600.050000      600.050000     3.0    -48694.568311          True           True    True
8  -48694.518311  -49293.993408  27253.078369 -48694.518311  400.500000 -49293.993408       0.05  599.425098      500.050000     3.0    -48694.568311         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14001/20.[0m
[08/10 15:52:20]  --------------------------------------------------------------------------------
[08/10 15:52:20]  Iteration: 147 (13 solution, 133 counterexamples)
[08/10 15:52:32]  Generator returned sat in 7.126029 secs.
[08/10 15:52:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:52:32]  Improved gap from 1/1600 to 100
[08/10 15:52:33]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 15:52:33]  Verifer returned sat in 1.631774 secs.
[08/10 15:52:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50488.233398  -50539.058311  27746.693369 -50488.233398   150.824951 -50539.058311       0.05   50.774912       -0.050088     9.0    -50539.058311            -1             -1     -1
1  -50388.233311  -50488.233311  27746.693369 -50388.233311   150.775000 -50488.233311       0.05   99.950000       -0.050000     1.0    -50388.283311         False           True   True
2  -50337.408311  -50388.233311  27746.693369 -50337.408311   150.775000 -50388.233311       0.05   50.775000      -49.225000     1.0    -50388.283311         False          False   True
3  -50237.458311  -50288.233154  27746.693369 -50237.458311   150.725000 -50288.233154       0.05   50.724844      -49.275000     1.0    -50237.508311         False          False   True
4  -49988.233154  -50188.233311  27746.693369 -49988.233154   299.950000 -50188.233311       0.05  199.950156       99.950156     1.0    -50237.508311         False          False   True
5  -49589.783311  -49988.233311  27746.693369 -49589.783311   598.400000 -49988.233311       0.05  398.400000      398.400000     1.0    -50237.508311         False          False   True
6  -48792.883311  -49988.183105  27746.693369 -48792.883311  1195.300000 -49988.183105     195.30  999.999795      900.050000     2.0    -50237.508311         False          False   True
7  -48792.883311  -49888.233311  27746.693369 -48792.883311   599.150000 -49888.233311     195.30  900.050000      800.050000     3.0    -48988.183311          True           True   True
8  -48792.883311  -49788.233154  27746.693369 -48792.883311   300.500000 -49788.233154     195.30  800.049844      700.050000     4.0    -48988.183311         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=18001/20.[0m
[08/10 15:52:34]  --------------------------------------------------------------------------------
[08/10 15:52:34]  Iteration: 148 (13 solution, 134 counterexamples)
[08/10 15:53:01]  Generator returned sat in 22.785323 secs.
[08/10 15:53:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:53:02]  Improved gap from 0 to 100
[08/10 15:53:03]  Improved number of small numbers from 59 to 75 out of a max of 114
[08/10 15:53:03]  Verifer returned sat in 1.441841 secs.
[08/10 15:53:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50776.548096  -50888.173096  27746.693369 -50776.548096     0.0500 -50888.173096       0.05  111.575000       11.575215     5.0    -50888.173096            -1             -1     -1
1  -50682.360596  -50776.548311  27746.693369 -50682.360596   205.7625 -50776.548311       0.05   94.137715        5.762715     1.0    -50888.173096         False           True   True
2  -50682.260811  -50682.360811  27746.693369 -50682.260811    94.2375 -50682.360811       0.05    0.050000      -94.137500     1.0    -50682.310811         False          False   True
3  -50588.073311  -50588.173311  27746.693369 -50588.073311    94.2375 -50588.173311       0.05    0.050000      -99.950000     1.0    -50682.310811         False          False   True
4  -50399.648311  -50465.173340  27746.693369 -50399.648311   188.4750 -50465.173340       0.05   65.475029      -11.525000     1.0    -50682.310811         False          False   True
5  -50088.173340  -50288.173311  27746.693369 -50088.173340   376.9500 -50288.173311       0.05  199.949971      199.949971     1.0    -50682.310811         False          False   True
6  -49534.223311  -50288.173311  27746.693369 -49534.223311   753.9000 -50288.173311       0.05  753.900000      653.900000     1.0    -50682.310811         False          False   True
7  -48780.323311  -50088.173340  27746.693369 -48780.323311  1507.8000 -50088.173340     507.80  800.050029      800.050000     2.0    -50682.310811         False          False   True
8  -48780.323311  -50088.173096  27746.693369 -48780.323311   753.9000 -50088.173096     507.80  800.049785      700.050000     3.0    -49288.123311          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=16001/20.[0m
[08/10 15:53:04]  --------------------------------------------------------------------------------
[08/10 15:53:04]  Iteration: 149 (13 solution, 135 counterexamples)
[08/10 15:54:51]  Generator returned sat in 102.744151 secs.
[08/10 15:54:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:54:52]  Improved gap from 1/45 to 100
[08/10 15:54:53]  Improved number of small numbers from 68 to 70 out of a max of 114
[08/10 15:54:53]  Verifer returned sat in 1.963732 secs.
[08/10 15:54:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55771.173096  -55865.523096  27746.693369 -55771.173096    0.050049 -55865.523096    0.00000   94.350000         94.3500     3.0    -55865.523096            -1             -1     -1
1  -55771.073096  -55771.123096  27746.693369 -55771.073096   94.450000 -55771.123096    0.00000    0.050000         -5.5500     1.0    -55865.523096         False           True  False
2  -55676.673096  -55765.523096  27746.693369 -55676.673096   94.450000 -55765.523096    0.00000   88.850000        -11.1500     1.0    -55865.523096         False          False  False
3  -55640.285596  -55640.335596  27746.693369 -55640.285596  125.237500 -55640.335596    0.00000    0.050000        -74.7625     1.0    -55865.523096         False          False  False
4  -55464.623096  -55565.523096  27746.693369 -55464.623096  175.712500 -55565.523096    0.05000  100.850000          0.8500     1.0    -55865.523096         False          False  False
5  -55464.623096  -55465.523096  27746.693369 -55464.623096  100.800000 -55465.523096    0.05000    0.850000        -99.1500     2.0    -55865.523096         False          False   True
6  -55264.573096  -55265.523096  27746.693369 -55264.573096  200.900000 -55265.523096    0.10000    0.850000          0.8500     1.0    -55264.673096          True           True  False
7  -55080.016846  -55210.098096  27746.693369 -55080.016846  185.406250 -55210.098096   84.65625   45.425000          0.8500     1.0    -55264.673096         False          False   True
8  -54949.729346  -55164.623291  27746.693369 -54949.729346  175.712500 -55164.623291  114.94375   99.950195          0.8500     1.0    -55264.673096         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=17/20.[0m
[08/10 15:54:53]  --------------------------------------------------------------------------------
[08/10 15:54:53]  Iteration: 150 (13 solution, 136 counterexamples)
[08/10 15:55:05]  Generator returned sat in 7.187884 secs.
[08/10 15:55:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:55:06]  Improved number of small numbers from 69 to 113 out of a max of 113
[08/10 15:55:06]  Verifer returned sat in 0.401376 secs.
[08/10 15:55:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55771.173096  -55865.522949  27746.693359 -55771.173096    0.049805 -55865.522949    0.000000   94.349854       94.349854     9.0    -55865.522949            -1             -1     -1
1  -55771.072998  -55771.123047  27746.693359 -55771.072998   94.449951 -55771.123047    0.000000    0.050049       -5.550049     1.0    -55865.522949         False           True  False
2  -55676.673096  -55763.523193  27746.693359 -55676.673096   94.449951 -55763.523193    0.000000   86.850098      -11.150146     1.0    -55865.522949         False          False  False
3  -55640.285645  -55640.335693  27746.693604 -55640.285645  123.237549 -55640.335693    0.000000    0.050049      -74.762451     1.0    -55865.522949         False          False  False
4  -55464.623291  -55565.522949  27746.693604 -55464.623291  175.712402 -55565.522949    0.049805  100.849854        0.850098     1.0    -55865.522949         False          False  False
5  -55464.623291  -55465.522949  27746.693604 -55464.623291  100.800049 -55465.522949    0.049805    0.849854      -99.149902     2.0    -55865.522949         False          False   True
6  -55264.572998  -55265.523193  27746.693604 -55264.572998  200.900146 -55265.523193    0.100098    0.850098        0.850098     1.0    -55264.673096          True           True  False
7  -55080.016846  -55210.098145  27746.693604 -55080.016846  185.406250 -55210.098145   84.656250   45.425049        0.850098     1.0    -55264.673096         False          False   True
8  -54949.729492  -55164.623535  27746.693604 -54949.729492  175.712402 -55164.623535  114.943604   99.950439        0.850098     1.0    -55264.673096         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1741/2048.[0m
[08/10 15:55:06]  --------------------------------------------------------------------------------
[08/10 15:55:06]  Iteration: 151 (13 solution, 137 counterexamples)
[08/10 15:55:21]  Generator returned sat in 10.219553 secs.
[08/10 15:55:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:55:21]  Improved gap from 1197/16 to 100
[08/10 15:55:22]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 15:55:22]  Verifer returned sat in 0.572750 secs.
[08/10 15:55:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55699.248047  -55899.348145  27746.693604 -55699.248047    0.050000 -55899.348145    0.050049  200.050049      100.050049     8.0    -55899.348145            -1             -1     -1
1  -55699.248047  -55702.998047  27746.693604 -55699.248047  199.999756 -55702.998047    0.050049    3.699951        0.050049     2.0    -55899.348145         False           True   True
2  -55506.347900  -55695.748047  27746.693604 -55506.347900  196.600098 -55695.748047   92.900146   96.500000        0.100098     1.0    -55599.248047          True           True  False
3  -55406.298096  -55499.498047  27746.693604 -55406.298096  196.549805 -55499.498047   92.949951    0.250000        0.100098     1.0    -55499.248047         False          False   True
4  -55208.623047  -55499.198242  27746.693604 -55208.623047  197.925049 -55499.198242  190.625000   99.950195        0.100098     1.0    -55499.248047         False          False   True
5  -55208.623047  -55399.348145  27746.693604 -55208.623047   99.899902 -55399.348145  190.625000    0.100098      -99.899902     2.0    -55499.248047         False          False   True
6  -55008.573242  -55231.297852  27746.693604 -55008.573242  200.149902 -55231.297852  190.674805   32.049805        0.100098     1.0    -55199.248047          True           True  False
7  -54908.522949  -55099.348145  27746.693604 -54908.522949  132.100098 -55099.348145  190.725098    0.100098        0.100098     1.0    -55199.248047         False          False   True
8  -54710.697998  -55099.198242  27746.693604 -54710.697998  197.925049 -55099.198242  288.550049   99.950195        0.100098     1.0    -55199.248047         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/2048.[0m
[08/10 15:55:22]  --------------------------------------------------------------------------------
[08/10 15:55:22]  Iteration: 152 (13 solution, 138 counterexamples)
[08/10 15:55:44]  Generator returned sat in 17.588661 secs.
[08/10 15:55:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:55:47]  Improved gap from 0 to 12.5
[08/10 15:55:47]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 15:55:47]  Verifer returned sat in 2.414297 secs.
[08/10 15:55:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55008.022949  -55207.722900  27746.693604 -55008.022949  199.999756 -55207.722900        0.0  199.699951       99.699951     3.0    -55207.722900            -1             -1   False
1  -55007.822754  -55007.922852  27746.693604 -55007.822754  199.900146 -55007.922852        0.0    0.100098       -0.099854     1.0    -55007.822754         False          False   False
2  -54577.623047  -55007.722900  27746.693604 -54577.623047  430.299805 -55007.722900        0.0  430.099854      330.099854     1.0    -55007.822754         False          False   False
3  -54577.623047  -54807.722900  27746.693604 -54577.623047  430.000000 -54807.722900        0.0  230.099854      230.099854     2.0    -54577.623047         False          False   False
4  -54577.623047  -54707.722900  27746.693604 -54577.623047  214.000000 -54707.722900        0.0  130.099854      130.099854     3.0    -54577.623047         False          False   False
5  -54577.623047  -54629.723145  27746.693604 -54577.623047  106.000000 -54629.723145        0.0   52.100098       30.099854     4.0    -54577.623047         False          False   False
6  -54577.623047  -54582.822998  27809.293701 -54577.623047   52.000000 -54582.822998        0.0    5.199951       -7.300049     5.0    -54577.623047         False          False   False
7  -54557.822998  -54570.322998  27896.793701 -54557.822998   25.000000 -54570.322998        0.0   12.500000        0.000000     1.0    -54577.623047         False          False   False
8  -54557.822998  -54557.822998  27896.793701 -54557.822998   11.500000 -54557.822998        0.0    0.000000     -100.000000     2.0    -54577.623047         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=338125/1024.[0m
[08/10 15:55:48]  --------------------------------------------------------------------------------
[08/10 15:55:48]  Iteration: 153 (13 solution, 139 counterexamples)
[08/10 15:57:17]  Generator returned sat in 85.038492 secs.
[08/10 15:57:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:18]  Improved gap from 0 to 100
[08/10 15:57:18]  Improved number of small numbers from 92 to 94 out of a max of 114
[08/10 15:57:18]  Verifer returned sat in 0.939079 secs.
[08/10 15:57:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55007.673096  -55007.722900  27646.693359 -55007.673096     0.075000 -55007.722900      0.025    0.024805        0.024805     1.0    -55007.722900            -1             -1     -1
1  -55007.647900  -55007.722900  27646.693359 -55007.647900     0.050000 -55007.722900      0.025    0.050000      -99.950000     1.0    -55007.672900         False          False   True
2  -54807.647900  -54807.722900  27646.693359 -54807.647900   200.050000 -54807.722900      0.025    0.050000        0.050000     1.0    -55007.672900         False          False   True
3  -54807.647900  -54807.722900  27646.693359 -54807.647900     0.025000 -54807.722900      0.025    0.050000      -99.950000     1.0    -54807.672900         False          False   True
4  -54706.160400  -54707.722900  27646.693359 -54706.160400   101.537500 -54707.722900      0.025    1.537500      -98.462500     1.0    -54807.672900         False          False   True
5  -54403.891650  -54507.722900  27646.693359 -54403.891650   303.806250 -54507.722900      0.025  103.806250      103.806250     1.0    -54807.672900         False          False   True
6  -53900.488525  -54507.722900  27646.693359 -53900.488525   607.209375 -54507.722900      0.025  607.209375      507.209375     1.0    -54807.672900         False          False   True
7  -53445.383838  -54307.723145  27646.693359 -53445.383838  1062.314063 -54307.723145      0.025  862.314307      862.314062     2.0    -54807.672900         False          False   True
8  -53445.383838  -54245.433838  27646.693359 -53445.383838   531.157031 -54245.433838      0.025  800.025000      762.314062     3.0    -53445.408838          True           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=551897/640.[0m
[08/10 15:57:19]  --------------------------------------------------------------------------------
[08/10 15:57:19]  Iteration: 154 (13 solution, 140 counterexamples)
[08/10 15:57:35]  Generator returned sat in 11.109909 secs.
[08/10 15:57:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:36]  Improved gap from 1/800 to 48.4375
[08/10 15:57:37]  Improved number of small numbers from 64 to 76 out of a max of 114
[08/10 15:57:37]  Verifer returned sat in 2.107502 secs.
[08/10 15:57:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55207.678955  -55207.680400  27646.693359 -55207.678955  200.008789 -55207.680400   0.000000    0.001445      -99.998555     1.0    -55207.680400            -1             -1    True
1  -55007.672900  -55107.680176  27646.693359 -55007.672900  200.007500 -55107.680176   0.000000  100.007275        0.007500     1.0    -55007.672900         False          False    True
2  -54907.674072  -54907.774150  27646.693359 -54907.674072  200.006104 -54907.774150   0.000000    0.100078        0.006328     1.0    -54907.674072         False          False    True
3  -54850.335400  -54850.336650  27646.693359 -54850.335400   57.438750 -54850.336650   0.000000    0.001250      -42.655000     1.0    -54850.335400         False          False    True
4  -54670.164775  -54707.680400  27646.693359 -54670.164775  180.171875 -54707.680400  37.508125    0.007500        0.007500     1.0    -54850.335400         False          False    True
5  -54670.162275  -54707.671650  27695.247314 -54670.162275    0.010000 -54707.671650  37.508125    0.001250      -51.436045     1.0    -54850.335400         False          False    True
6  -54568.612275  -54656.234150  27745.133301 -54568.612275  101.551250 -54656.234150  37.508125   50.113750       -0.000059     1.0    -54850.335400         False          False    True
7  -54520.174775  -54606.119150  27796.694609 -54520.174775   98.551250 -54606.119150  37.508125   48.436250       -0.001250     1.0    -54850.335400         False          False    True
8  -54516.330400  -54557.681641  27848.257080 -54516.330400   52.280625 -54557.681641  37.508125    3.843115      -44.594404     1.0    -54850.335400         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3/400.[0m
[08/10 15:57:38]  --------------------------------------------------------------------------------
[08/10 15:57:38]  Iteration: 155 (13 solution, 141 counterexamples)
[08/10 15:59:05]  Generator returned sat in 82.870875 secs.
[08/10 15:59:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:59:08]  Improved gap from 1/1200 to 46.875
[08/10 15:59:08]  Improved number of small numbers from 108 to 114 out of a max of 114
[08/10 15:59:08]  Verifer returned sat in 2.505515 secs.
[08/10 15:59:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55124.924805  -55223.574463  27698.156982 -55124.924805    0.100000 -55223.574463    0.000000   98.649658       98.649658     1.0    -55223.574463            -1             -1   False
1  -55024.524414  -55223.574463  27698.156982 -55024.524414  199.050049 -55223.574463   98.850098  100.199951        0.199951     1.0    -55223.574463         False          False   False
2  -54925.774414  -55024.724854  27698.156982 -54925.774414  198.949951 -55024.724854   98.850098    0.100342       -1.050049     1.0    -55024.624512         False          False    True
3  -54698.674561  -54936.374756  27698.156982 -54698.674561  227.200195 -54936.374756  224.699951   13.000244        0.199951     1.0    -55024.624512         False          False    True
4  -54598.574707  -54823.574463  27698.156982 -54598.574707  113.100098 -54823.574463  224.799805    0.199951        0.199951     1.0    -55024.624512         False          False    True
5  -54542.724609  -54823.274658  27742.007080 -54542.724609   56.050049 -54823.274658  224.799805   55.750244       -0.099854     1.0    -55024.624512         False          False    True
6  -54495.749756  -54767.424561  27795.132080 -54495.749756  102.725098 -54767.424561  224.799805   46.875000        0.000000     1.0    -55024.624512         False          False    True
7  -54456.149658  -54720.549561  27848.257080 -54456.149658   86.475098 -54720.549561  224.799805   39.600098       -7.274902     2.0    -55024.624512         False          False    True
8  -54442.237305  -54673.674561  27848.257080 -54442.237305   53.512451 -54673.674561  224.799805    6.637451      -93.362549     1.0    -55024.624512         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 15:59:09]  --------------------------------------------------------------------------------
[08/10 15:59:09]  Iteration: 156 (13 solution, 142 counterexamples)
[08/10 15:59:52]  Generator returned sat in 38.876318 secs.
[08/10 15:59:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:59:54]  Improved gap from 0 to 20.3125
[08/10 15:59:55]  Improved number of small numbers from 87 to 114 out of a max of 114
[08/10 15:59:55]  Verifer returned sat in 2.127242 secs.
[08/10 15:59:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55038.261719  -55038.461914  27513.044189 -55038.261719   0.100098 -55038.461914        0.0   0.200195        0.200195     1.0    -55038.461914            -1             -1    True
1  -55038.261719  -55038.461914  27592.731689 -55038.261719   0.100098 -55038.461914        0.0   0.200195      -20.112305     1.0    -55038.461914         False          False    True
2  -55018.049316  -55018.149414  27672.419189 -55018.049316  20.412598 -55018.149414        0.0   0.100098      -20.212402     1.0    -55038.461914         False          False    True
3  -54997.736816  -54997.836914  27752.106689 -54997.736816  20.412598 -54997.836914        0.0   0.100098      -20.212402     1.0    -55038.461914         False          False    True
4  -54955.711914  -54977.524414  27830.294189 -54955.711914  42.125000 -54977.524414        0.0  21.812500        0.000000     1.0    -55038.461914         False          False    True
5  -54915.086914  -54935.299316  27889.569092 -54915.086914  62.437500 -54935.299316        0.0  20.212402       -0.100098     1.0    -55038.461914         False          False    True
6  -54850.949219  -54914.986816  27925.531494 -54850.949219  84.350098 -54914.986816        0.0  64.037598        0.000000     1.0    -55038.461914         False          False    True
7  -54830.636719  -54850.949219  28005.218994 -54830.636719  84.350098 -54850.949219        0.0  20.312500        0.000000     2.0    -55038.461914         False          False    True
8  -54830.636719  -54830.636719  28005.219238 -54830.636719   1.500000 -54830.636719        0.0   0.000000      -99.999756     2.0    -54830.636719          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/5.[0m
[08/10 15:59:55]  --------------------------------------------------------------------------------
[08/10 15:59:55]  Iteration: 157 (13 solution, 143 counterexamples)
[08/10 16:00:33]  Generator returned sat in 32.928993 secs.
[08/10 16:00:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:00:34]  Improved gap from 0 to 48.4375
[08/10 16:00:35]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/10 16:00:35]  Verifer returned sat in 2.144373 secs.
[08/10 16:00:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54377.476602  -54443.779102  27534.360352 -54377.476602    0.003662 -54443.779102    0.00125  66.301250       66.301162     4.0    -54443.779102            -1             -1     -1
1  -54377.476602  -54425.915527  27568.059189 -54377.476602    0.002500 -54425.915527    0.00125  48.437676        0.000000     2.0    -54377.477852         False           True   True
2  -54377.476602  -54377.477852  27619.621689 -54377.476602    0.001465 -54377.477852    0.00125   0.000000      -48.437500     3.0    -54377.477852         False           True  False
3  -54234.281602  -54234.284102  27619.621689 -54234.281602  143.195000 -54234.284102    0.00125   0.001250       -5.242500     1.0    -54377.477852         False           True  False
4  -54129.035352  -54129.040352  27619.621689 -54129.035352  105.247500 -54129.040352    0.00250   0.002500        0.002500     1.0    -54377.477852         False          False  False
5  -54075.914102  -54129.036621  27666.497939 -54075.914102   53.123750 -54129.036621    0.00250  53.120020        0.000000     1.0    -54377.477852         False          False   True
6  -54075.914102  -54075.916602  27718.060439 -54075.914102    0.010000 -54075.916602    0.00250   0.000000      -48.437500     2.0    -54377.477852         False          False   True
7  -53996.230352  -54027.479102  27769.622939 -53996.230352   79.683750 -54027.479102    0.00250  31.246250      -17.191250     1.0    -53996.232852          True           True  False
8  -53976.195977  -53979.041504  27821.185303 -53976.195977   51.280625 -53979.041504    0.00250   2.843027      -45.594512     1.0    -53996.232852         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 16:00:36]  --------------------------------------------------------------------------------
[08/10 16:00:36]  Iteration: 158 (13 solution, 144 counterexamples)
[08/10 16:01:27]  Generator returned sat in 46.969906 secs.
[08/10 16:01:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:01:28]  Improved gap from 1/3200 to 100
[08/10 16:01:28]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:01:28]  Verifer returned sat in 0.554029 secs.
[08/10 16:01:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54528.940186  -54629.040283  27619.621582 -54528.940186    0.099854 -54629.040283    0.000000  100.100098        0.100098     2.0    -54629.040283            -1             -1   False
1  -54528.940186  -54529.040283  27619.621582 -54528.940186   99.999756 -54529.040283    0.000000    0.100098      -99.899902     2.0    -54629.040283         False          False   False
2  -54328.640381  -54429.040283  27619.621582 -54328.640381  200.399902 -54429.040283    0.199951  100.199951        0.199951     1.0    -54629.040283         False          False   False
3  -54228.540283  -54294.173584  27619.621582 -54228.540283  200.300049 -54294.173584    0.300049   65.333252        0.199951     1.0    -54228.840332         False          False    True
4  -54128.440186  -54175.507080  27619.621582 -54128.440186  165.433350 -54175.507080    0.400146   46.666748        0.199951     1.0    -54228.840332         False          False    True
5  -54000.340332  -54029.040283  27619.621582 -54000.340332  174.766602 -54029.040283   28.500000    0.199951        0.199951     1.0    -54228.840332         False          False    True
6  -53802.540283  -53982.551514  27619.621582 -53802.540283  198.000000 -53982.551514  126.300049   53.711182        0.199951     1.0    -54228.840332         False          False    True
7  -53702.440430  -53829.040283  27619.621582 -53702.440430  153.811035 -53829.040283  126.399902    0.199951        0.199951     1.0    -54228.840332         False          False    True
8  -53531.406982  -53828.740479  27619.621582 -53531.406982  171.233398 -53828.740479  197.433350   99.900146        0.199951     1.0    -54228.840332         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=819/4096.[0m
[08/10 16:01:29]  --------------------------------------------------------------------------------
[08/10 16:01:29]  Iteration: 159 (13 solution, 145 counterexamples)
[08/10 16:01:59]  Generator returned sat in 26.016852 secs.
[08/10 16:02:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:02:01]  Improved gap from 1/1600 to 23.4375
[08/10 16:02:01]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 16:02:01]  Verifer returned sat in 1.210058 secs.
[08/10 16:02:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54551.745605  -54951.734863  27942.315918 -54551.745605  576.648438 -54951.734863   0.000000  399.989258      299.989258     2.0    -54951.734863            -1             -1   False
1  -54375.097168  -54751.734863  27942.315918 -54375.097168  576.637695 -54751.734863   0.010742  376.626953      376.626953     2.0    -54375.107910         False          False   False
2  -54328.286621  -54702.609863  27942.315918 -54328.286621  423.437500 -54702.609863   0.010742  374.312500      323.437500     3.0    -54328.297363         False          False    True
3  -54328.286621  -54551.735107  27942.315918 -54328.286621  374.312500 -54551.735107   0.010742  223.437744      223.437500     3.0    -54328.297363         False          False    True
4  -54328.286621  -54451.734863  27942.315918 -54328.286621  187.156250 -54451.734863   0.010742  123.437500      123.437500     4.0    -54328.297363         False          False    True
5  -54328.286621  -54375.097412  27942.315918 -54328.286621   93.578125 -54375.097412   0.010742   46.800049       23.437500     4.0    -54328.297363         False          False    True
6  -54328.286621  -54351.734863  28018.878418 -54328.286621   46.789062 -54351.734863   0.010742   23.437500        0.000000     5.0    -54328.297363         False          False    True
7  -54328.286621  -54328.297363  28095.440918 -54328.286621   23.394531 -54328.297363   0.010742    0.000000      -23.437500     6.0    -54328.297363         False          False    True
8  -54141.130371  -54304.859863  28095.440918 -54141.130371  187.156250 -54304.859863   0.010742  163.718750       63.718750     1.0    -54328.297363         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=192833/512.[0m
[08/10 16:02:02]  --------------------------------------------------------------------------------
[08/10 16:02:02]  Iteration: 160 (13 solution, 146 counterexamples)
[08/10 16:02:59]  Generator returned sat in 52.417450 secs.
[08/10 16:02:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:02:59]  Improved gap from 0 to 100
[08/10 16:02:59]  Improved number of small numbers from 83 to 114 out of a max of 114
[08/10 16:02:59]  Verifer returned sat in 0.388163 secs.
[08/10 16:02:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55028.347412  -55028.397217  27942.315674 -55028.347412     0.049805 -55028.397217   0.000000    0.049805       -0.050049     4.0    -55028.397217            -1             -1     -1
1  -54928.297363  -55028.297363  27942.315674 -54928.297363   100.099854 -55028.297363   0.000000  100.000000        0.000000     1.0    -55028.397217         False           True  False
2  -53928.197510  -54828.297607  27942.315674 -53928.197510  1100.099854 -54828.297607   0.050049  900.050049      900.049805     1.0    -55028.397217         False          False  False
3  -53928.197510  -54728.347168  27942.315674 -53928.197510   798.600098 -54728.347168   0.050049  800.099609      800.049805     2.0    -53928.247559         False          False   True
4  -53928.197510  -54728.297363  27942.315674 -53928.197510   799.100098 -54728.297363   0.050049  800.049805      700.049805     3.0    -53928.247559         False           True  False
5  -53928.197510  -54528.297607  27942.315674 -53928.197510   799.600098 -54528.297607   0.050049  600.050049      600.049805     4.0    -53928.247559         False           True  False
6  -53728.147461  -54528.247314  27942.315674 -53728.147461   800.100098 -54528.247314   0.050049  800.049805      700.099854     5.0    -53928.247559         False           True  False
7  -53727.597168  -54328.297363  27942.315674 -53727.597168   800.600098 -54328.297363   0.050049  600.650146      600.650146     6.0    -53928.247559         False           True  False
8  -53527.147217  -54228.297363  27942.315674 -53527.147217   801.100098 -54228.297363   0.050049  701.100098      701.100098     7.0    -53928.247559         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=921651/1024.[0m
[08/10 16:03:00]  --------------------------------------------------------------------------------
[08/10 16:03:00]  Iteration: 161 (13 solution, 147 counterexamples)
[08/10 16:05:51]  Generator returned sat in 166.796377 secs.
[08/10 16:05:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:05:53]  Improved gap from 0 to 48.4375
[08/10 16:05:54]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/10 16:05:54]  Verifer returned sat in 1.710639 secs.
[08/10 16:05:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54625.747314  -54825.697510  27942.315674 -54625.747314    0.100098 -54825.697510        0.0  199.950195      199.950195     4.0    -54825.697510            -1             -1   False
1  -54625.747314  -54725.697510  27942.315674 -54625.747314    0.049805 -54725.697510        0.0   99.950195       99.950195     3.0    -54625.747314         False          False   False
2  -54380.347412  -54625.697510  27942.315674 -54380.347412  345.350098 -54625.697510        0.0  245.350098      245.350098     1.0    -54625.747314         False          False   False
3  -54380.347412  -54525.697510  27942.315674 -54380.347412   50.937500 -54525.697510        0.0  145.350098      145.350098     2.0    -54380.347412         False          False   False
4  -54380.347412  -54430.334717  27942.315674 -54380.347412   50.437500 -54430.334717        0.0   49.987305       45.350098     3.0    -54380.347412         False          False   False
5  -54380.347412  -54425.697510  27993.878174 -54380.347412   49.937500 -54425.697510        0.0   45.350098       -3.087402     4.0    -54380.347412         False          False   False
6  -54376.260010  -54377.260010  28045.440430 -54376.260010   49.437500 -54377.260010        0.0    1.000000      -47.437744     1.0    -54380.347412         False          False   False
7  -54328.322510  -54328.822266  28097.002930 -54328.322510   48.937500 -54328.822266        0.0    0.499756      -47.937744     1.0    -54380.347412         False          False   False
8  -54280.384766  -54280.384766  28097.003174 -54280.384766   48.437500 -54280.384766        0.0    0.000000      -99.999756     1.0    -54380.347412         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1005159/4096.[0m
[08/10 16:05:54]  --------------------------------------------------------------------------------
[08/10 16:05:54]  Iteration: 162 (13 solution, 148 counterexamples)
[08/10 16:07:09]  Generator returned sat in 69.606026 secs.
[08/10 16:07:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:07:09]  Improved gap from 51/4096 to 1.5625
[08/10 16:07:10]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/10 16:07:10]  Verifer returned sat in 0.771364 secs.
[08/10 16:07:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54325.434814  -54325.485107  27942.315674 -54325.434814    0.024902 -54325.485107   0.024902    0.025391       -0.024658     3.0    -54325.485107            -1             -1     -1
1  -54225.410156  -54325.435059  27942.315674 -54225.410156  100.050049 -54325.435059   0.024902  100.000000        0.000000     1.0    -54325.485107         False          False   True
2  -54225.360107  -54225.435059  27942.315674 -54225.360107  100.050049 -54225.435059   0.024902    0.050049      -99.949951     2.0    -54325.485107         False          False   True
3  -53927.360107  -54026.997559  27942.315674 -53927.360107  298.050049 -54026.997559   0.024902   99.612549       98.050049     1.0    -54325.485107         False          False   True
4  -53927.360107  -53927.410156  27942.315674 -53927.360107    2.000000 -53927.410156   0.024902    0.025146       -1.949951     2.0    -54325.485107         False          False   True
5  -53925.385254  -53925.434814  28040.752930 -53925.385254    2.000000 -53925.434814   0.024902    0.024658       -1.537842     1.0    -54325.485107         False          False   True
6  -53923.409912  -53923.872314  28139.190430 -53923.409912    2.000000 -53923.872314   0.024902    0.437500       -1.125000     1.0    -54325.485107         False          False   True
7  -53921.847412  -53922.309814  28237.627930 -53921.847412    2.000000 -53922.309814   0.024902    0.437500       -1.125000     1.0    -54325.485107         False          False   True
8  -53920.284912  -53920.747314  28237.627930 -53920.284912    2.000000 -53920.747314   0.024902    0.437500      -99.562500     1.0    -54325.485107         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=100429/1024.[0m
[08/10 16:07:10]  --------------------------------------------------------------------------------
[08/10 16:07:10]  Iteration: 163 (13 solution, 149 counterexamples)
[08/10 16:07:22]  Generator returned sat in 7.460268 secs.
[08/10 16:07:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:07:23]  Improved gap from 17/16 to 0
[08/10 16:07:24]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 16:07:24]  Verifer returned sat in 0.822484 secs.
[08/10 16:07:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54377.655029  -54778.255127  27942.315430 -54377.655029  400.650146 -54778.255127        0.0  400.600098      350.649658     5.0    -54778.255127            -1             -1    True
1  -54377.655029  -54628.304932  27942.315430 -54377.655029  400.600000 -54628.304932        0.0  250.649902      250.649658     5.0    -54377.655029         False          False    True
2  -54227.755127  -54628.304688  27942.315430 -54227.755127  400.549805 -54628.304688        0.0  400.549561      300.549561     6.0    -54227.755127         False          False    True
3  -54227.754883  -54428.304932  27942.315430 -54227.754883  400.549805 -54428.304932        0.0  200.550049      200.549805     7.0    -54227.755127         False          False    True
4  -54227.754883  -54377.655029  27942.315430 -54227.754883    1.500000 -54377.655029        0.0  149.900146      100.549805     8.0    -54227.755127         False          False    True
5  -54227.754883  -54228.354736  27942.315430 -54227.754883    0.500000 -54228.354736        0.0    0.599854        0.549805     4.0    -54227.755127         False           True   False
6  -54227.754883  -54228.304688  28041.765625 -54227.754883    0.500000 -54228.304688        0.0    0.549805        0.000000     5.0    -54227.755127         False          False   False
7  -54227.754883  -54227.754883  28141.765625 -54227.754883    0.500000 -54227.754883        0.0    0.000000        0.000000     5.0    -54227.755127         False          False   False
8  -54227.254883  -54227.704834  28241.265625 -54227.254883    0.500000 -54227.704834        0.0    0.449951        0.000000     1.0    -54227.755127         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1231257/4096.[0m
[08/10 16:07:24]  --------------------------------------------------------------------------------
[08/10 16:07:24]  Iteration: 164 (13 solution, 150 counterexamples)
[08/10 16:08:01]  Generator returned sat in 32.080082 secs.
[08/10 16:08:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:08:03]  Improved gap from 0 to 35.9375
[08/10 16:08:04]  Improved number of small numbers from 87 to 96 out of a max of 114
[08/10 16:08:04]  Verifer returned sat in 2.086014 secs.
[08/10 16:08:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54117.117432  -54233.330029  27965.635986 -54117.117432  116.262500 -54233.330029        0.0  116.212598       99.950312     2.0    -54233.330029            -1             -1   False
1  -54117.092529  -54125.467529  27965.635986 -54117.092529  116.237500 -54125.467529        0.0    8.375000       -0.024785     3.0    -54117.092529         False          False   False
2  -54081.155273  -54117.067627  28029.698271 -54081.155273   44.312256 -54117.067627        0.0   35.912354       -0.025244     1.0    -54081.155273         False          False   False
3  -54072.780029  -54081.130029  28093.760771 -54072.780029   44.287598 -54081.130029        0.0    8.350000      -27.587500     1.0    -54072.780029         False          False   False
4  -54003.030029  -54045.192529  28151.598271 -54003.030029   78.100000 -54045.192529        0.0   42.162500        0.000000     1.0    -54072.780029         False          False   False
5  -54003.030029  -54003.030029  28215.660771 -54003.030029   42.137500 -54003.030029        0.0    0.000000      -35.937500     2.0    -54072.780029         False          False   False
6  -53944.011230  -53967.092529  28279.723271 -53944.011230   59.018799 -53967.092529        0.0   23.081299      -12.856201     1.0    -54072.780029         False          False   False
7  -53908.073779  -53931.155029  28343.785771 -53908.073779   59.018750 -53931.155029        0.0   23.081250      -12.856250     1.0    -54072.780029         False          False   False
8  -53872.136279  -53895.217529  28407.848145 -53872.136279   59.018750 -53895.217529        0.0   23.081250      -12.856377     1.0    -54072.780029         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/4096.[0m
[08/10 16:08:04]  --------------------------------------------------------------------------------
[08/10 16:08:04]  Iteration: 165 (13 solution, 151 counterexamples)
[08/10 16:09:41]  Generator returned sat in 91.978279 secs.
[08/10 16:09:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:09:42]  Improved gap from 0 to 100
[08/10 16:09:42]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:09:42]  Verifer returned sat in 0.733774 secs.
[08/10 16:09:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54291.353760  -54691.403564  28339.972168 -54291.353760     0.049805 -54691.403564    0.049805  400.000000      300.000244     9.0    -54691.403564            -1             -1     -1
1  -54291.353760  -54591.403809  28339.972168 -54291.353760     0.049805 -54591.403809    0.049805  300.000244      200.000244     5.0    -54691.403564         False           True   True
2  -54091.403809  -54391.403809  28339.972168 -54091.403809   499.950195 -54391.403809    0.049805  299.950195      299.950195     3.0    -54691.403564          True           True  False
3  -52795.153809  -54291.453857  28339.972168 -52795.153809  1596.200195 -54291.453857  697.600098  798.699951      798.649902     4.0    -54691.403564         False          False  False
4  -52795.153809  -54291.403564  28339.972168 -52795.153809   798.100098 -54291.403564  697.600098  798.649658      698.649902     5.0    -53492.753906          True           True   True
5  -52795.153809  -54091.403809  28339.972168 -52795.153809   798.600098 -54091.403809  697.600098  598.649902      598.649902     3.0    -53492.753906         False           True  False
6  -52594.703613  -53991.403809  28339.972168 -52594.703613   799.100098 -53991.403809  697.600098  699.100098      699.100098     4.0    -53492.753906         False          False  False
7  -52494.203613  -53891.403809  28339.972168 -52494.203613   799.600098 -53891.403809  697.600098  699.600098      699.600098     5.0    -53492.753906         False           True  False
8  -52393.703613  -53891.354004  28339.972168 -52393.703613   800.100098 -53891.354004  697.600098  800.050293      700.100098     6.0    -53492.753906         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1635635/2048.[0m
[08/10 16:09:43]  --------------------------------------------------------------------------------
[08/10 16:09:43]  Iteration: 166 (13 solution, 152 counterexamples)
[08/10 16:10:21]  Generator returned sat in 32.707608 secs.
[08/10 16:10:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:10:21]  Improved gap from 0 to 100
[08/10 16:10:22]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:10:22]  Verifer returned sat in 0.637535 secs.
[08/10 16:10:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -64071.258545  -64171.320557  37919.876465 -64071.258545     0.024902 -64171.320557   0.049561   100.012451      100.000000     8.0    -64171.320557            -1             -1     -1
1  -64071.258545  -64171.308105  37919.876465 -64071.258545     0.012451 -64171.308105   0.049561   100.000000        0.000000     7.0    -64071.308105         False           True   True
2  -58582.233643  -64071.308105  37919.876465 -58582.233643  5589.024902 -64071.308105   0.049561  5489.024902     5389.024902     8.0    -64071.308105         False           True  False
3  -58582.233643  -63871.308350  37919.876465 -58582.233643  5286.524902 -63871.308350   0.049561  5289.025146     5289.024902     2.0    -58582.283203         False           True  False
4  -58582.233643  -63869.820557  37919.876465 -58582.233643  5287.024902 -63869.820557   0.049561  5287.537354     5189.024902     3.0    -58582.283203         False          False  False
5  -58582.233643  -63671.308105  37919.876465 -58582.233643  5287.524902 -63671.308105   0.049561  5089.024902     5089.024902     4.0    -58582.283203         False          False  False
6  -58383.233643  -63571.308105  37919.876465 -58383.233643  5288.024902 -63571.308105   0.049561  5188.024902     5188.024902     5.0    -58582.283203         False           True  False
7  -58282.733643  -63471.308105  37919.876465 -58282.733643  5288.524902 -63471.308105   0.049561  5188.524902     5188.524902     6.0    -58582.283203         False           True  False
8  -58182.233643  -63471.295898  37919.876465 -58182.233643  5289.024902 -63471.295898   0.049561  5289.012695     5189.024902     7.0    -58582.283203         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2759187/512.[0m
[08/10 16:10:22]  --------------------------------------------------------------------------------
[08/10 16:10:22]  Iteration: 167 (13 solution, 153 counterexamples)
[08/10 16:10:57]  Generator returned sat in 29.812356 secs.
[08/10 16:10:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:00]  Verifer returned unsat in 2.764537 secs.
[08/10 16:11:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:00]  --------------------------------------------------------------------------------
[08/10 16:11:00]  Iteration: 168 (14 solution, 153 counterexamples)
[08/10 16:11:11]  Generator returned sat in 6.052410 secs.
[08/10 16:11:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:14]  Verifer returned unsat in 2.945294 secs.
[08/10 16:11:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:14]  --------------------------------------------------------------------------------
[08/10 16:11:14]  Iteration: 169 (15 solution, 153 counterexamples)
[08/10 16:11:26]  Generator returned sat in 6.580418 secs.
[08/10 16:11:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:28]  Verifer returned unsat in 1.561820 secs.
[08/10 16:11:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:28]  --------------------------------------------------------------------------------
[08/10 16:11:28]  Iteration: 170 (16 solution, 153 counterexamples)
[08/10 16:11:39]  Generator returned sat in 6.275002 secs.
[08/10 16:11:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:41]  Verifer returned unsat in 1.889922 secs.
[08/10 16:11:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:41]  --------------------------------------------------------------------------------
[08/10 16:11:41]  Iteration: 171 (17 solution, 153 counterexamples)
[08/10 16:11:54]  Generator returned sat in 8.114039 secs.
[08/10 16:11:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:56]  Improved gap from 1/10 to 35.9375
[08/10 16:11:57]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 16:11:57]  Verifer returned sat in 2.394778 secs.
[08/10 16:11:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54939.580322  -55047.593046  37768.856445 -54939.580322   0.099854 -55047.593046        0.0  108.012724      100.000204     9.0    -55047.593046            -1             -1     -1
1  -54939.580322  -54939.580546  37768.856445 -54939.580322   0.100098 -54939.580546        0.0    0.000224        0.000204     9.0    -55047.593046         False           True  False
2  -54903.443046  -54939.280546  37832.618965 -54903.443046  36.137500 -54939.280546        0.0   35.837500       -0.100000     1.0    -55047.593046          True           True  False
3  -54903.243046  -54903.343046  37896.681465 -54903.243046  36.037500 -54903.343046        0.0    0.100000      -35.837500     1.0    -54903.243046         False          False  False
4  -54829.718046  -54867.405546  37958.993965 -54829.718046  73.625000 -54867.405546        0.0   37.687500        0.000000     1.0    -54903.243046         False          False  False
5  -54829.718046  -54829.718046  38023.056396 -54829.718046  37.587500 -54829.718046        0.0    0.000000      -35.937568     2.0    -54903.243046         False          False  False
6  -54773.436796  -54792.380546  38085.718965 -54773.436796  56.281250 -54792.380546        0.0   18.943750      -16.993750     1.0    -54903.243046         False          False  False
7  -54735.399296  -54756.443046  38149.781465 -54735.399296  56.981250 -54756.443046        0.0   21.043750      -14.893750     1.0    -54903.243046         False          False  False
8  -54699.461796  -54720.505371  38149.781494 -54699.461796  56.981250 -54720.505371        0.0   21.043575      -78.956221     1.0    -54903.243046         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/10 16:11:58]  --------------------------------------------------------------------------------
[08/10 16:11:58]  Iteration: 172 (17 solution, 154 counterexamples)
[08/10 16:12:39]  Generator returned sat in 36.845094 secs.
[08/10 16:12:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:12:41]  Improved number of small numbers from 58 to 62 out of a max of 113
[08/10 16:12:41]  Verifer returned sat in 1.501778 secs.
[08/10 16:12:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55732.968046  -56331.568046  39060.843965 -55732.968046    0.025146 -56331.568046      0.025  598.575000         598.575     8.0    -56331.568046            -1             -1     -1
1  -55732.918046  -56331.568046  39060.843965 -55732.918046  598.625000 -56331.568046      0.075  598.575000         498.575     8.0    -56331.568046         False           True   True
2  -55732.893046  -56131.568046  39060.843965 -55732.893046  598.600000 -56131.568046      0.075  398.600000         398.600     9.0    -55732.968046         False           True   True
3  -55528.443046  -56034.518046  39060.843965 -55528.443046  603.050000 -56034.518046      4.550  501.525000         498.575     5.0    -55732.968046         False           True  False
4  -55428.418046  -55931.593046  39060.843965 -55428.418046  601.550000 -55931.593046      4.575  498.600000         498.575     6.0    -55732.968046         False          False   True
5  -55326.968046  -55931.567871  39060.843965 -55326.968046  600.050000 -55931.567871      6.025  598.574825         498.575     7.0    -55732.968046         False          False   True
6  -55326.968046  -55732.993046  39060.843965 -55326.968046  598.550000 -55732.993046      6.025  400.000000         398.575     8.0    -55732.968046         False          False   True
7  -55123.918046  -55631.568046  39060.843965 -55123.918046  603.050000 -55631.568046      9.075  498.575000         498.575     5.0    -55732.968046         False           True  False
8  -55020.943046  -55531.568115  39060.843965 -55020.943046  601.550000 -55531.568115     12.050  498.575069         498.575     5.0    -55732.968046         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=19943/40.[0m
[08/10 16:12:42]  --------------------------------------------------------------------------------
[08/10 16:12:42]  Iteration: 173 (17 solution, 155 counterexamples)
[08/10 16:14:06]  Generator returned sat in 79.181733 secs.
[08/10 16:14:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:14:07]  Improved gap from 1/2400 to 23.4375
[08/10 16:14:08]  Improved number of small numbers from 59 to 85 out of a max of 114
[08/10 16:14:08]  Verifer returned sat in 2.135241 secs.
[08/10 16:14:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55149.932373  -55304.294922  39010.806641 -55149.932373    0.099854 -55304.294922        4.4  149.962549      149.962515     3.0    -55304.294922            -1             -1     -1
1  -55149.932373  -55204.394531  39010.806641 -55149.932373    0.100000 -55204.394531        4.4   50.062158       49.962515     3.0    -55304.294922         False          False   True
2  -55149.932373  -55204.294712  39060.843965 -55149.932373    0.100098 -55204.294712        4.4   49.962339       -0.000161     4.0    -55304.294922         False          False   True
3  -54826.494712  -55054.332275  39060.843965 -54826.494712  373.400000 -55054.332275        4.4  223.437563      223.437500     1.0    -55304.294922         False          False   True
4  -54826.494712  -54954.332212  39060.843965 -54826.494712  186.700000 -54954.332212        4.4  123.437500      123.437500     2.0    -55304.294922         False          False   True
5  -54826.494712  -54877.669922  39060.843965 -54826.494712   93.350000 -54877.669922        4.4   46.775209       23.437500     3.0    -55304.294922         False          False   True
6  -54826.494712  -54854.332212  39137.406465 -54826.494712   46.675000 -54854.332212        4.4   23.437500        0.000000     4.0    -55304.294922         False          False   True
7  -54826.494712  -54830.894712  39213.968965 -54826.494712   23.337500 -54830.894712        4.4    0.000000      -23.437500     5.0    -55304.294922         False          False   True
8  -54641.838462  -54807.457031  39213.968965 -54641.838462  184.656250 -54807.457031        4.4  161.218569       61.218750     1.0    -54646.238462          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=915609/4096.[0m
[08/10 16:14:09]  --------------------------------------------------------------------------------
[08/10 16:14:09]  Iteration: 174 (17 solution, 156 counterexamples)
[08/10 16:15:43]  Generator returned sat in 88.615319 secs.
[08/10 16:15:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:15:47]  Improved gap from 3/3400 to 0
[08/10 16:15:48]  Improved number of small numbers from 63 to 72 out of a max of 114
[08/10 16:15:48]  Verifer returned sat in 4.543302 secs.
[08/10 16:15:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54955.341309  -54956.495303  38515.504395 -54955.341309  0.001500 -54956.495303        0.0  1.153995       -0.001250     2.0    -54956.495303            -1             -1   False
1  -54954.838359  -54955.339942  38615.001221 -54954.838359  1.656944 -54955.339942        0.0  0.501583       -0.001474     1.0    -54956.495303         False          False   False
2  -54954.835359  -54954.836859  38714.993408 -54954.835359  0.504583 -54954.836859        0.0  0.001500       -0.006286     1.0    -54954.835359         False          False   False
3  -54954.332275  -54954.828859  38814.496611 -54954.332275  0.504583 -54954.828859        0.0  0.496583        0.000000     1.0    -54954.835359         False          False   False
4  -54953.829192  -54954.332275  38913.993528 -54953.829192  0.999667 -54954.332275        0.0  0.503083        0.000000     2.0    -54954.835359         False          False   False
5  -54953.829192  -54953.829192  39013.983643 -54953.829192  0.011500 -54953.829192        0.0  0.000000       -0.009885     2.0    -54954.835359         False          False   False
6  -54953.817692  -54953.819192  39113.980528 -54953.817692  0.011500 -54953.819192        0.0  0.001500       -0.001500     1.0    -54954.835359         False          False   False
7  -54953.804692  -54953.816162  39213.969028 -54953.804692  0.014500 -54953.816162        0.0  0.011470        0.000000     1.0    -54954.835359         False          False   False
8  -54953.804692  -54953.804692  39213.969238 -54953.804692  0.010000 -54953.804692        0.0  0.000000      -99.999790     2.0    -54954.835359         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=13/4096.[0m
[08/10 16:15:48]  --------------------------------------------------------------------------------
[08/10 16:15:48]  Iteration: 175 (17 solution, 157 counterexamples)
[08/10 16:16:17]  Generator returned sat in 23.685484 secs.
[08/10 16:16:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:16:18]  Improved gap from 0 to 7.8125
[08/10 16:16:19]  Improved number of small numbers from 61 to 82 out of a max of 114
[08/10 16:16:19]  Verifer returned sat in 1.976087 secs.
[08/10 16:16:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54558.641357  -54658.541504  38218.705644 -54558.641357  199.799805 -54658.541504        0.0  99.900146       99.899951     1.0    -54658.541504            -1             -1    True
1  -54458.741455  -54558.541309  38218.705644 -54458.741455  199.800049 -54558.541309        0.0  99.799854       99.799854     1.0    -54658.541504         False          False    True
2  -54458.741455  -54558.541309  38218.705644 -54458.741455   99.700000 -54558.541309        0.0  99.799854       -0.200146     1.0    -54458.741455         False          False    True
3  -54258.641309  -54358.541309  38218.705644 -54258.641309  299.900000 -54358.541309        0.0  99.900000       99.900000     1.0    -54458.741455         False          False    True
4  -54209.591309  -54258.541309  38218.705644 -54209.591309  148.950000 -54258.541309        0.0  48.950000       48.950000     1.0    -54458.741455         False          False    True
5  -54185.066309  -54194.178809  38218.705811 -54185.066309   73.475000 -54194.178809        0.0   9.112500      -26.524834     1.0    -54458.741455         False          False    True
6  -54158.441309  -54158.541309  38310.893144 -54158.441309   35.737500 -54158.541309        0.0   0.100000       -7.712500     1.0    -54458.741455         False          False    True
7  -54141.672559  -54150.728760  38401.836894 -54141.672559   16.868750 -54150.728760        0.0   9.056201        0.000000     1.0    -54458.741455         False          False    True
8  -54141.672559  -54141.672559  38494.024170 -54141.672559    7.434375 -54141.672559        0.0   0.000000       -7.812724     2.0    -54458.741455         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409191/4096.[0m
[08/10 16:16:20]  --------------------------------------------------------------------------------
[08/10 16:16:20]  Iteration: 176 (17 solution, 158 counterexamples)
[08/10 16:17:22]  Generator returned sat in 57.291167 secs.
[08/10 16:17:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:17:24]  Improved number of small numbers from 58 to 90 out of a max of 113
[08/10 16:17:24]  Verifer returned sat in 1.103086 secs.
[08/10 16:17:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54960.226074  -54960.226074  38420.390625 -54960.226074     0.100098 -54960.226074        0.0     0.000000      -99.999785     2.0    -54960.226074            -1             -1    True
1  -54760.226318  -54760.326172  38420.390644 -54760.226318   199.999756 -54760.326172        0.0     0.099854       -0.000010     1.0    -54960.226074         False          False    True
2  -54260.326416  -54760.226074  38420.390644 -54260.326416   499.999756 -54760.226074        0.0   499.899658      399.899893     1.0    -54960.226074         False          False    True
3  -54260.326416  -54560.226318  38420.390644 -54260.326416    37.925000 -54560.226318        0.0   299.899902      299.899893     2.0    -54260.326416         False          False    True
4  -54260.326416  -54460.226309  38420.390644 -54260.326416    75.350000 -54460.226309        0.0   199.899893      199.899893     3.0    -54260.326416         False          False    True
5  -54260.326416  -54460.226309  38420.390644 -54260.326416   150.200000 -54460.226309        0.0   199.899893       99.899893     3.0    -54260.326416         False          False    True
6  -54160.326309  -54260.226309  38420.390644 -54160.326309   299.900000 -54260.226309        0.0    99.900000       99.900000     1.0    -54260.326416         False          False    True
7  -53660.926309  -54160.226309  38420.390644 -53660.926309   599.300000 -54160.226309        0.0   499.300000      499.300000     1.0    -54260.326416         False          False    True
8  -52962.126309  -54160.126465  38420.390644 -52962.126309  1198.100000 -54160.126465        0.0  1198.000156     1098.100000     2.0    -54260.326416         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=4498227/4096.[0m
[08/10 16:17:24]  --------------------------------------------------------------------------------
[08/10 16:17:24]  Iteration: 177 (17 solution, 159 counterexamples)
[08/10 16:17:59]  Generator returned sat in 29.980240 secs.
[08/10 16:18:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:18:00]  Improved gap from 0 to 100
[08/10 16:18:01]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 16:18:01]  Verifer returned sat in 0.713176 secs.
[08/10 16:18:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54860.476562  -55160.476562  38720.640869 -54860.476562    0.050000 -55160.476562   0.000000  300.000000      300.000000     8.0    -55160.476562            -1             -1    True
1  -54860.476562  -55060.476562  38720.640869 -54860.476562    0.050000 -55060.476562   0.000000  200.000000      200.000000     8.0    -55160.476562         False          False    True
2  -54260.276367  -55060.476562  38720.640869 -54260.276367  800.200195 -55060.476562   0.050049  800.150146      700.150146     8.0    -55160.476562         False          False    True
3  -54260.276367  -54860.476562  38720.640869 -54260.276367  799.099854 -54860.476562   0.050049  600.150146      600.150146     9.0    -54260.326416         False          False    True
4  -54060.326660  -54860.426514  38720.640869 -54060.326660  800.099854 -54860.426514   0.050049  800.049805      700.099854     3.0    -54260.326416         False           True   False
5  -54059.276611  -54760.476318  38720.640869 -54059.276611  801.099854 -54760.476318   0.050049  701.149658      601.149902     4.0    -54260.326416         False          False   False
6  -53958.326416  -54563.476318  38720.640869 -53958.326416  802.099854 -54563.476318   0.050049  605.099854      602.100098     5.0    -54260.326416         False          False   False
7  -53760.326416  -54460.476562  38720.640869 -53760.326416  803.099854 -54460.476562   0.050049  700.100098      700.100098     6.0    -54260.326416         False          False   False
8  -53656.326660  -54360.476562  38720.640869 -53656.326660  804.099854 -54360.476562   3.999756  700.150146      700.150146     7.0    -54260.326416         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=2867815/4096.[0m
[08/10 16:18:01]  --------------------------------------------------------------------------------
[08/10 16:18:01]  Iteration: 178 (17 solution, 160 counterexamples)
[08/10 16:18:14]  Generator returned sat in 7.638457 secs.
[08/10 16:18:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:18:14]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 16:18:14]  Verifer returned sat in 0.150872 secs.
[08/10 16:18:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54860.476562  -55160.476562  38720.640869 -54860.476562    0.050000 -55160.476562   0.000000  300.000000      300.000000     8.0    -55160.476562            -1             -1    True
1  -54860.476562  -55060.476562  38720.640869 -54860.476562    0.050000 -55060.476562   0.000000  200.000000      200.000000     8.0    -55160.476562         False          False    True
2  -54260.276367  -55060.476562  38720.640869 -54260.276367  800.200195 -55060.476562   0.050049  800.150146      700.150146     8.0    -55160.476562         False          False    True
3  -54260.276367  -54860.476562  38720.640869 -54260.276367  798.599854 -54860.476562   0.050049  600.150146      600.150146     9.0    -54260.326416         False          False    True
4  -54060.326660  -54860.426514  38720.640869 -54060.326660  800.099854 -54860.426514   0.050049  800.049805      700.099854     3.0    -54260.326416         False           True   False
5  -54058.776611  -54760.476318  38720.640869 -54058.776611  801.599854 -54760.476318   0.050049  701.649658      601.649902     4.0    -54260.326416         False          False   False
6  -53957.326416  -54564.976318  38720.640869 -53957.326416  803.099854 -54564.976318   0.050049  607.599854      603.100098     5.0    -54260.326416         False          False   False
7  -53760.326416  -54460.476562  38720.640869 -53760.326416  804.599854 -54460.476562   0.050049  700.100098      700.100098     6.0    -54260.326416         False          False   False
8  -53654.326660  -54360.476562  38720.640869 -53654.326660  806.099854 -54360.476562   5.999756  700.150146      700.150146     7.0    -54260.326416         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=2867815/4096.[0m
[08/10 16:18:15]  --------------------------------------------------------------------------------
[08/10 16:18:15]  Iteration: 179 (17 solution, 161 counterexamples)
[08/10 16:19:50]  Generator returned sat in 90.183782 secs.
[08/10 16:19:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:19:52]  Improved gap from 0 to 23.4375
[08/10 16:19:53]  Improved number of small numbers from 59 to 78 out of a max of 114
[08/10 16:19:53]  Verifer returned sat in 1.917576 secs.
[08/10 16:19:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54583.370117  -54688.232178  41972.503369 -54583.370117    0.099854 -54688.232178        0.1  104.762061      104.662279     4.0    -54688.232178            -1             -1     -1
1  -54583.370117  -54688.132396  41972.503369 -54583.370117    0.100098 -54688.132396        0.1  104.662279        4.662279     5.0    -54688.232178         False          False   True
2  -54261.369896  -54583.469896  41972.503369 -54261.369896  426.662500 -54583.469896        0.2  321.900000      226.562500     1.0    -54688.232178          True           True  False
3  -54161.469896  -54388.132568  41972.503369 -54161.469896  421.800000 -54388.132568        0.2  226.462673      226.462500     2.0    -54161.669896         False          False   True
4  -54161.469896  -54288.132396  41972.503369 -54161.469896  210.900000 -54288.132396        0.2  126.462500      126.462500     3.0    -54161.669896         False          False   True
5  -54161.469896  -54261.570068  41972.503369 -54161.469896  105.450000 -54261.570068        0.2   99.900173       26.462500     4.0    -54161.669896         False          False   True
6  -54161.469896  -54188.132324  42046.040869 -54161.469896   52.725000 -54188.132324        0.2   26.462428        0.000000     4.0    -54161.669896         False          False   True
7  -54161.469896  -54161.669896  42122.603271 -54161.469896   26.362500 -54161.669896        0.2    0.000000      -23.437598     5.0    -54161.669896         False          False   True
8  -53969.776146  -54138.232178  42122.603271 -53969.776146  191.693750 -54138.232178        0.2  168.256032       68.256152     1.0    -54161.669896         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3625/16.[0m
[08/10 16:19:53]  --------------------------------------------------------------------------------
[08/10 16:19:53]  Iteration: 180 (17 solution, 162 counterexamples)
[08/10 16:20:34]  Generator returned sat in 35.282170 secs.
[08/10 16:20:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:37]  Verifer returned unsat in 2.626415 secs.
[08/10 16:20:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:37]  --------------------------------------------------------------------------------
[08/10 16:20:37]  Iteration: 181 (18 solution, 162 counterexamples)
[08/10 16:20:49]  Generator returned sat in 6.916980 secs.
[08/10 16:20:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:51]  Verifer returned unsat in 1.442477 secs.
[08/10 16:20:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:51]  --------------------------------------------------------------------------------
[08/10 16:20:51]  Iteration: 182 (19 solution, 162 counterexamples)
[08/10 16:21:03]  Generator returned sat in 6.872477 secs.
[08/10 16:21:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:21:05]  Verifer returned unsat in 2.314161 secs.
[08/10 16:21:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:21:05]  --------------------------------------------------------------------------------
[08/10 16:21:05]  Iteration: 183 (20 solution, 162 counterexamples)
[08/10 16:21:18]  Generator returned sat in 7.239444 secs.
[08/10 16:21:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:21:21]  Verifer returned unsat in 2.507144 secs.
[08/10 16:21:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:21:21]  --------------------------------------------------------------------------------
[08/10 16:21:21]  Iteration: 184 (21 solution, 162 counterexamples)
[08/10 16:22:24]  Generator returned sat in 58.327590 secs.
[08/10 16:22:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:22:26]  Improved gap from 0 to 23.4375
[08/10 16:22:27]  Improved number of small numbers from 59 to 72 out of a max of 114
[08/10 16:22:27]  Verifer returned sat in 1.799141 secs.
[08/10 16:22:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55337.347412  -55537.297607  41977.840967 -55337.347412    0.050049 -55537.297607       0.00  199.950195       99.950205     9.0    -55537.297607            -1             -1     -1
1  -55237.347656  -55337.297617  41977.840967 -55237.347656  299.949951 -55337.297617       0.00   99.949961       99.949961     1.0    -55537.297607         False           True  False
2  -55113.810117  -55237.297617  41977.840967 -55113.810117  223.487500 -55237.297617       0.05  123.437500      123.437500     1.0    -55113.860117         False          False  False
3  -55013.760117  -55163.501784  41977.840967 -55013.760117  223.487500 -55163.501784       0.10  149.641667      123.437500     2.0    -55113.860117         False          False   True
4  -55013.760117  -55037.347617  41977.840967 -55013.760117  112.243750 -55037.347617       0.10   23.487500       23.437500     2.0    -55113.860117         False          False   True
5  -55013.760117  -55037.297617  42054.403467 -55013.760117    0.500000 -55037.297617       0.10   23.437500        0.000000     3.0    -55113.860117         False          False   True
6  -55013.760117  -55013.860117  42127.940918 -55013.760117    0.500000 -55013.860117       0.10    0.000000      -26.462549     4.0    -55113.860117         False          False   True
7  -54787.297617  -54963.851784  42127.940918 -54787.297617  226.462500 -54963.851784       0.10  176.454167       99.999951     1.0    -54787.397617          True           True  False
8  -54787.297617  -54887.397461  42127.940918 -54787.297617  112.243750 -54887.397461       0.10   99.999844       -0.000049     2.0    -54787.397617         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1975/16.[0m
[08/10 16:22:27]  --------------------------------------------------------------------------------
[08/10 16:22:27]  Iteration: 185 (21 solution, 163 counterexamples)
[08/10 16:23:30]  Generator returned sat in 57.408884 secs.
[08/10 16:23:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:23:31]  Improved gap from 0 to 100
[08/10 16:23:31]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:23:31]  Verifer returned sat in 0.565083 secs.
[08/10 16:23:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54736.172607  -54985.897217  41426.440674 -54736.172607     0.100098 -54985.897217    0.100098  249.624512      149.624756     4.0    -54985.897217            -1             -1     -1
1  -54736.172607  -54885.897461  41426.440674 -54736.172607   249.524902 -54885.897461    0.100098  149.624756       49.624756     2.0    -54985.897217         False           True   True
2  -54685.897461  -54736.172607  41426.440674 -54685.897461   199.899902 -54736.172607    0.100098   50.175049       -0.100098     1.0    -54685.997559         False          False   True
3  -54685.697510  -54685.897461  41426.440674 -54685.697510    50.375000 -54685.897461    0.100098    0.099854      -99.900146     1.0    -54685.797607         False          False   True
4  -54585.547363  -54585.897461  41426.440674 -54585.547363   100.250000 -54585.897461    0.100098    0.250000      -99.750000     1.0    -54685.797607         False          False   True
5  -54385.797363  -54485.497559  41426.440674 -54385.797363   200.000000 -54485.497559    0.100098   99.600098        0.000000     1.0    -54685.797607         False          False   True
6  -54085.897461  -54385.797363  41426.440674 -54085.897461   399.500000 -54385.797363    0.100098  299.799805      199.899902     1.0    -54685.797607         False          False   True
7  -53587.197266  -54285.897461  41426.440674 -53587.197266   798.500000 -54285.897461    0.100098  698.600098      598.600098     2.0    -54685.797607         False          False   True
8  -52689.297363  -54085.897461  41426.440674 -52689.297363  1596.500000 -54085.897461  596.500000  800.100098      800.100098     2.0    -54685.797607         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1638605/2048.[0m
[08/10 16:23:31]  --------------------------------------------------------------------------------
[08/10 16:23:31]  Iteration: 186 (21 solution, 164 counterexamples)
[08/10 16:24:20]  Generator returned sat in 43.330936 secs.
[08/10 16:24:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:24:21]  Improved gap from 0 to 23.4375
[08/10 16:24:21]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/10 16:24:21]  Verifer returned sat in 0.868107 secs.
[08/10 16:24:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55085.807129  -55209.242432  41426.440674 -55085.807129    0.002441 -55209.242432    0.000000  123.435303      123.435303     4.0    -55209.242432            -1             -1     -1
1  -55085.807129  -55109.244873  41426.440674 -55085.807129    0.002441 -55109.244873    0.000000   23.437744       23.435303     2.0    -55209.242432         False           True  False
2  -54985.807373  -55009.242432  41426.440674 -54985.807373  123.437500 -55009.242432    0.000000   23.435059       23.435059     1.0    -55209.242432         False          False  False
3  -54885.807373  -54910.359863  41426.440674 -54885.807373  123.435059 -54910.359863    0.000000   24.552490       23.435059     1.0    -54885.807373         False          False  False
4  -54609.477295  -54809.244629  41426.440674 -54609.477295  300.882568 -54809.244629  176.327637   23.439697       23.437500     1.0    -54885.807373         False          False  False
5  -54609.477295  -54809.242432  41503.003174 -54609.477295    0.010000 -54809.242432  176.327637   23.437500        0.000000     2.0    -54885.807373         False          False   True
6  -54609.477295  -54785.804932  41503.003174 -54609.477295    0.010000 -54785.804932  176.327637    0.000000     -100.000000     3.0    -54885.807373         False          False   True
7  -54482.922363  -54685.246094  41576.445557 -54482.922363  126.554932 -54685.246094  176.327637   25.996094       -0.002686     1.0    -54659.250000          True           True  False
8  -54382.919922  -54659.247314  41576.445557 -54382.919922  125.998535 -54659.247314  176.327637   99.999756       -0.000244     1.0    -54659.250000         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=375/16.[0m
[08/10 16:24:22]  --------------------------------------------------------------------------------
[08/10 16:24:22]  Iteration: 187 (21 solution, 165 counterexamples)
[08/10 16:24:44]  Generator returned sat in 16.665980 secs.
[08/10 16:24:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:24:45]  Improved gap from 0 to 48.4375
[08/10 16:24:47]  Improved number of small numbers from 36 to 45 out of a max of 114
[08/10 16:24:47]  Verifer returned sat in 2.472469 secs.
[08/10 16:24:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54752.939697  -54876.974814  41375.078125 -54752.939697   48.737549 -54876.974814  123.934951   0.100166        0.100117     8.0    -54876.974814            -1             -1     -1
1  -54704.402363  -54876.774814  41426.440674 -54704.402363   48.637500 -54876.774814  123.934951  48.437500        0.000000     1.0    -54828.337314         False           True   True
2  -54604.102363  -54728.337314  41426.440674 -54604.102363  148.737500 -54728.337314  124.034951   0.200000        0.200000     1.0    -54828.337314         False          False   True
3  -54386.602363  -54635.887314  41426.440674 -54386.602363  217.700000 -54635.887314  241.534951   7.750000        0.200000     1.0    -54828.337314         False          False   True
4  -54286.502363  -54529.249814  41426.440674 -54286.502363  107.850000 -54529.249814  241.634951   1.112500        0.200000     1.0    -54828.337314         False          False   True
5  -54234.689863  -54528.037314  41474.328369 -54234.689863   52.925000 -54528.037314  241.634951  51.712500       -0.099805     1.0    -54828.337314         False          False   True
6  -54186.252363  -54476.224814  41525.890674 -54186.252363  100.150000 -54476.224814  241.634951  48.337500       -0.100000     1.0    -54828.337314         False          False   True
7  -54154.758613  -54427.787314  41577.453125 -54154.758613   79.831250 -54427.787314  241.634951  31.393750      -17.043799     1.0    -54828.337314         False          False   True
8  -54135.421113  -54379.349609  41577.453369 -54135.421113   50.731250 -54379.349609  241.634951   2.293545      -97.706055     1.0    -54828.337314         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 16:24:47]  --------------------------------------------------------------------------------
[08/10 16:24:47]  Iteration: 188 (21 solution, 166 counterexamples)
[08/10 16:25:50]  Generator returned sat in 57.050397 secs.
[08/10 16:25:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:25:50]  Improved gap from 30293/1430 to 100
[08/10 16:25:52]  Improved number of small numbers from 59 to 63 out of a max of 114
[08/10 16:25:52]  Verifer returned sat in 1.866202 secs.
[08/10 16:25:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54528.305420  -54627.305297  41125.408656 -54528.305420     0.038574 -54627.305297   0.038462    98.961415       98.961415     8.0    -54627.305297            -1             -1     -1
1  -54526.189912  -54528.305297  41125.408656 -54526.189912   101.076923 -54528.305297   0.038462     2.076923        1.076923     1.0    -54627.305297         False           True   True
2  -54427.189912  -54427.305297  41125.408656 -54427.189912   101.076923 -54427.305297   0.038462     0.076923        0.076923     1.0    -54627.305297         False          False   True
3  -54427.189912  -54427.305297  41125.408656 -54427.189912     0.038462 -54427.305297   0.038462     0.076923      -99.923077     1.0    -54427.228374         False          False   True
4  -54227.709143  -54327.305297  41125.408656 -54227.709143   199.557692 -54327.305297   0.038462    99.557692       -0.442308     1.0    -54427.228374         False          False   True
5  -53827.430297  -54141.305297  41125.408656 -53827.430297   499.836538 -54141.305297   0.038462   313.836538      299.836538     1.0    -54427.228374         False          False   True
6  -53106.012027  -54127.305297  41125.408656 -53106.012027  1035.254808 -54127.305297   0.038462  1021.254808      921.254808     2.0    -54427.228374         False          False   True
7  -53106.012027  -53927.305297  41125.408656 -53106.012027   302.000000 -53927.305297   0.038462   821.254808      821.254808     3.0    -53106.050489          True           True  False
8  -53106.012027  -53827.305420  41125.408656 -53106.012027   402.000000 -53827.305420   0.038462   721.254931      721.254808     3.0    -53106.050489         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1886809/2048.[0m
[08/10 16:25:53]  --------------------------------------------------------------------------------
[08/10 16:25:53]  Iteration: 189 (21 solution, 167 counterexamples)
[08/10 16:27:15]  Generator returned sat in 77.286636 secs.
[08/10 16:27:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:27:16]  Improved gap from 1/20 to 0
[08/10 16:27:16]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:27:16]  Verifer returned sat in 0.578451 secs.
[08/10 16:27:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54535.609375  -54638.659180  41133.662598 -54535.609375    0.050000 -54638.659180   0.000000  103.049805       99.949707     9.0    -54638.659180            -1             -1     -1
1  -54535.409180  -54535.559082  41133.662598 -54535.409180  103.250000 -54535.559082   0.050049    0.099854        0.099854     1.0    -54638.659180         False           True  False
2  -54432.309082  -54435.559082  41133.662598 -54432.309082  103.199951 -54435.559082   3.150146    0.099854        0.099854     1.0    -54435.459229         False          False   True
3  -54329.259033  -54335.559326  41133.662598 -54329.259033  103.149902 -54335.559326   6.200195    0.100098        0.099854     1.0    -54335.459229         False          False   True
4  -54227.709229  -54235.559082  41133.662598 -54227.709229  101.649902 -54235.559082   7.750000    0.099854        0.099854     1.0    -54335.459229         False          False   True
5  -54127.659180  -54233.009033  41133.662598 -54127.659180  100.149902 -54233.009033   7.800049   97.549805        0.099854     1.0    -54335.459229         False          False   True
6  -54126.559082  -54135.408936  41232.462646 -54126.559082   98.649902 -54135.408936   7.800049    1.049805        0.000000     1.0    -54335.459229         False          False   True
7  -54126.559082  -54134.359131  41332.462402 -54126.559082    1.000000 -54134.359131   7.800049    0.000000       -0.000244     2.0    -54335.459229         False          False   True
8  -54125.559082  -54134.309082  41431.462402 -54125.559082    1.000000 -54134.309082   7.800049    0.949951       -0.000244     1.0    -54335.459229         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=409/4096.[0m
[08/10 16:27:17]  --------------------------------------------------------------------------------
[08/10 16:27:17]  Iteration: 190 (21 solution, 168 counterexamples)
[08/10 16:27:34]  Generator returned sat in 11.662907 secs.
[08/10 16:27:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:27:35]  Improved gap from 411/4096 to 0
[08/10 16:27:35]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/10 16:27:35]  Verifer returned sat in 1.066130 secs.
[08/10 16:27:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54960.934082  -54965.509033  41137.137695 -54960.934082  104.624756 -54965.509033   0.000000    4.574951       -0.024902     9.0    -54965.509033            -1             -1     -1
1  -54860.908936  -54960.908936  41137.137695 -54860.908936  104.600098 -54960.908936   0.000000  100.000000        0.000244     1.0    -54860.908936         False           True  False
2  -54856.333984  -54859.334229  41232.562500 -54856.333984  104.574951 -54859.334229   0.000000    3.000244        0.000000     1.0    -54856.333984         False          False  False
3  -54754.784180  -54757.833984  41232.562500 -54754.784180  104.550049 -54757.833984   0.024902    3.024902        1.524902     1.0    -54754.809082         False          False  False
4  -54654.759033  -54656.333984  41232.562500 -54654.759033  103.050049 -54656.333984   0.050049    1.524902        1.524902     1.0    -54754.809082         False          False   True
5  -54554.733887  -54654.884033  41232.562500 -54554.733887  101.550049 -54654.884033   0.075195  100.074951        1.524902     2.0    -54754.809082         False          False   True
6  -54554.733887  -54556.333984  41331.037598 -54554.733887  100.050049 -54556.333984   0.075195    1.524902        0.000000     2.0    -54554.809082          True           True   True
7  -54554.733887  -54554.809082  41431.012451 -54554.733887    1.500000 -54554.809082   0.075195    0.000000       -0.025146     3.0    -54554.809082         False           True  False
8  -54553.233887  -54554.783936  41431.012500 -54553.233887    1.500000 -54554.783936   0.075195    1.474854      -98.525098     1.0    -54554.809082         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=3123/2048.[0m
[08/10 16:27:36]  --------------------------------------------------------------------------------
[08/10 16:27:36]  Iteration: 191 (21 solution, 169 counterexamples)
[08/10 16:28:42]  Generator returned sat in 60.747538 secs.
[08/10 16:28:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:28:43]  Improved gap from 0 to 100
[08/10 16:28:43]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 16:28:43]  Verifer returned sat in 0.733335 secs.
[08/10 16:28:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55159.859131  -55259.834229  41336.0625 -55159.859131  199.999756 -55259.834229   0.000000  99.975098       -0.024902     1.0    -55259.834229            -1             -1   False
1  -55059.859131  -55159.834229  41336.0625 -55059.859131  199.975098 -55159.834229   0.000000  99.975098       -0.024902     1.0    -55059.859131         False          False   False
2  -54959.884277  -55059.833984  41336.0625 -54959.884277  199.949951 -55059.833984   0.000000  99.949707       -0.050049     1.0    -54959.884277         False          False   False
3  -54859.909180  -54930.817627  41336.0625 -54859.909180  199.924805 -54930.817627   0.000000  70.908447       -0.074951     1.0    -54859.909180         False          False   False
4  -54765.809326  -54765.834229  41336.0625 -54765.809326  165.008301 -54765.834229   0.000000   0.024902       -5.975098     1.0    -54859.909180         False          False   False
5  -54568.334229  -54663.833984  41336.0625 -54568.334229  197.500000 -54663.833984   0.024902  95.474854       91.475098     1.0    -54859.909180         False          False   False
6  -54468.309082  -54561.834229  41336.0625 -54468.309082  195.500000 -54561.834229   0.050049  93.475098       91.475098     1.0    -54859.909180         False          False    True
7  -54368.284180  -54459.834229  41336.0625 -54368.284180  193.500000 -54459.834229   0.074951  91.475098       91.475098     1.0    -54859.909180         False          False    True
8  -54268.259277  -54359.834229  41336.0625 -54268.259277  191.500000 -54359.834229   0.099854  91.475098       91.475098     1.0    -54859.909180         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=187341/2048.[0m
[08/10 16:28:44]  --------------------------------------------------------------------------------
[08/10 16:28:44]  Iteration: 192 (21 solution, 170 counterexamples)
[08/10 16:29:39]  Generator returned sat in 50.091611 secs.
[08/10 16:29:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:29:41]  Improved gap from 0 to 23.4375
[08/10 16:29:42]  Improved number of small numbers from 70 to 88 out of a max of 114
[08/10 16:29:42]  Verifer returned sat in 1.967676 secs.
[08/10 16:29:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54375.222900  -54575.218018  41288.580078 -54375.222900  200.002441 -54575.218018     0.0000  199.995117       99.995205     9.0    -54575.218018            -1             -1     -1
1  -54375.218018  -54375.220459  41288.580078 -54375.218018  200.000000 -54375.220459     0.0000    0.002441        0.000088     1.0    -54375.218018         False           True  False
2  -54319.600586  -54375.215527  41332.962500 -54319.600586   55.619873 -54375.215527     0.0000   55.614941       -0.000059     1.0    -54319.600586         False          False  False
3  -54119.110527  -54243.038027  41332.962500 -54119.110527  256.105000 -54243.038027    97.3725   26.555000        3.117500     1.0    -54319.600586         False          False  False
4  -54019.113027  -54119.603027  41332.962500 -54019.113027  126.552500 -54119.603027    97.3725    3.117500        3.115000     1.0    -54319.600586         False          False   True
5  -54019.113027  -54119.600527  41409.525000 -54019.113027    0.010000 -54119.600527    97.3725    3.115000      -20.322500     2.0    -54319.600586         False          False   True
6  -53766.113027  -54096.163027  41409.525000 -53766.113027  256.115000 -54096.163027   226.9325  103.117500        3.117500     1.0    -53993.045527          True           True  False
7  -53742.673027  -53993.043213  41482.967500 -53742.673027  126.557500 -53993.043213   226.9325   23.437686        0.000000     1.0    -53993.045527         False          False   True
8  -53742.673027  -53969.605527  41559.529785 -53742.673027    0.010000 -53969.605527   226.9325    0.000000      -23.437715     2.0    -53993.045527         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1247/400.[0m
[08/10 16:29:42]  --------------------------------------------------------------------------------
[08/10 16:29:42]  Iteration: 193 (21 solution, 171 counterexamples)
[08/10 16:30:28]  Generator returned sat in 39.566407 secs.
[08/10 16:30:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:30:29]  Improved gap from 0 to 100
[08/10 16:30:30]  Improved number of small numbers from 64 to 85 out of a max of 114
[08/10 16:30:30]  Verifer returned sat in 1.521595 secs.
[08/10 16:30:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55118.700439  -55118.800781  41609.474902 -55118.700439    0.05000 -55118.800781       0.05    0.050342        0.050146     1.0    -55118.800781            -1             -1     -1
1  -54918.800781  -55118.700684  41609.474902 -54918.800781  199.95000 -55118.700684       0.05  199.849902       99.949805     1.0    -55118.800781         False          False   True
2  -54918.700684  -54918.800586  41609.474902 -54918.700684  199.95000 -54918.800586       0.05    0.049902        0.049902     1.0    -55118.800781         False          False   True
3  -54869.194336  -54918.363086  41609.474902 -54869.194336   49.55625 -54918.363086       0.05   49.118750      -50.443750     1.0    -54869.244336         False          False   True
4  -54818.700586  -54818.800586  41609.474902 -54818.700586   99.61250 -54818.800586       0.05    0.050000      -99.950000     1.0    -54869.244336         False          False   True
5  -54619.025586  -54718.800537  41609.474902 -54619.025586  199.72500 -54718.800537       0.05   99.724951       -0.275000     1.0    -54869.244336         False          False   True
6  -54318.800537  -54518.850586  41609.474902 -54318.800537  399.95000 -54518.850586       0.05  200.000049      199.950049     1.0    -54869.244336         False          False   True
7  -53718.400586  -54518.800537  41609.474902 -53718.400586  800.40000 -54518.800537       0.35  800.049951      700.050000     2.0    -54869.244336         False          False   True
8  -53718.400586  -54318.800781  41609.474902 -53718.400586  398.70000 -54318.800781       0.35  600.050195      600.050000     2.0    -53718.750586          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14001/20.[0m
[08/10 16:30:30]  --------------------------------------------------------------------------------
[08/10 16:30:30]  Iteration: 194 (21 solution, 172 counterexamples)
[08/10 16:30:51]  Generator returned sat in 15.061920 secs.
[08/10 16:30:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:30:51]  Improved gap from 1/20 to 100
[08/10 16:30:53]  Improved number of small numbers from 59 to 76 out of a max of 114
[08/10 16:30:53]  Verifer returned sat in 1.411387 secs.
[08/10 16:30:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54415.195801  -54415.245361  41609.474902 -54415.195801  199.949951 -54415.245361       0.00    0.049561      -99.950215     1.0    -54415.245361            -1             -1   False
1  -54215.295410  -54315.245361  41609.474902 -54215.295410  199.949951 -54315.245361       0.00   99.949951       -0.049824     1.0    -54415.245361         False          False   False
2  -54115.345459  -54215.245586  41609.474902 -54115.345459  199.899902 -54215.245586       0.00   99.900127       -0.099873     1.0    -54115.345459         False          False   False
3  -53393.045586  -54015.245586  41609.474902 -53393.045586  822.200000 -54015.245586     622.10    0.100000        0.100000     1.0    -54115.345459         False          False   False
4  -52983.545586  -54015.145586  41609.474902 -52983.545586  409.600000 -54015.145586     931.60  100.000000        0.100000     2.0    -54115.345459         False          False    True
5  -52880.245586  -53815.245586  41609.474902 -52880.245586  203.300000 -53815.245586     934.90    0.100000        0.100000     1.0    -53815.145586          True           True    True
6  -52780.195586  -53715.245586  41609.474902 -52780.195586  100.150000 -53715.245586     934.95    0.100000        0.100000     1.0    -53815.145586         False          False    True
7  -52731.720586  -53666.720586  41609.474902 -52731.720586   48.575000 -53666.720586     934.95    0.050000      -51.425000     1.0    -53815.145586         False          False    True
8  -52285.695586  -53615.245361  41609.474902 -52285.695586  446.075000 -53615.245361    1229.45  100.099775        0.100000     1.0    -53815.145586         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 16:30:53]  --------------------------------------------------------------------------------
[08/10 16:30:53]  Iteration: 195 (21 solution, 173 counterexamples)
[08/10 16:32:03]  Generator returned sat in 64.246014 secs.
[08/10 16:32:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:32:04]  Improved gap from 0 to 100
[08/10 16:32:04]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:32:04]  Verifer returned sat in 0.714204 secs.
[08/10 16:32:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54134.695312  -54234.595703  42760.415039 -54134.695312     0.099854 -54234.595703        0.0   99.900391       99.900391     8.0    -54234.595703            -1             -1   False
1  -54134.595703  -54234.595703  42760.415039 -54134.595703   100.000000 -54234.595703        0.0  100.000000        0.000000     8.0    -54234.595703         False          False   False
2  -53035.395508  -54034.595703  42760.415039 -53035.395508  1199.200195 -54034.595703        0.0  999.200195      999.200195     1.0    -54234.595703         False          False   False
3  -53035.395508  -53934.695557  42760.415039 -53035.395508   898.100098 -53934.695557        0.0  899.300049      899.200195     2.0    -53035.395508         False          False   False
4  -53035.395508  -53934.595459  42760.415039 -53035.395508   898.600098 -53934.595459        0.0  899.199951      799.200195     3.0    -53035.395508         False          False   False
5  -53035.395508  -53734.595703  42760.415039 -53035.395508   899.100098 -53734.595703        0.0  699.200195      699.200195     4.0    -53035.395508         False          False   False
6  -52834.995605  -53634.595703  42760.415039 -52834.995605   899.600098 -53634.595703        0.0  799.600098      799.600098     5.0    -53035.395508         False          False   False
7  -52734.495605  -53534.595703  42760.415039 -52734.495605   900.100098 -53534.595703        0.0  800.100098      800.100098     6.0    -53035.395508         False          False   False
8  -52633.995605  -53534.595459  42760.415039 -52633.995605   900.600098 -53534.595459        0.0  900.599854      800.600098     7.0    -53035.395508         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1023283/1024.[0m
[08/10 16:32:05]  --------------------------------------------------------------------------------
[08/10 16:32:05]  Iteration: 196 (21 solution, 174 counterexamples)
[08/10 16:34:00]  Generator returned sat in 109.540688 secs.
[08/10 16:34:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:34:02]  Improved gap from 0 to 12.5
[08/10 16:34:02]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 16:34:02]  Verifer returned sat in 1.377685 secs.
[08/10 16:34:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54134.695312  -54134.745361  42660.564697 -54134.695312    0.024902 -54134.745361   0.024902    0.025146        0.025146     9.0    -54134.745361            -1             -1     -1
1  -53734.645508  -54134.745117  42660.564697 -53734.645508  400.074951 -54134.745117   0.049805  400.049805      300.050049     6.0    -54134.745361         False           True   True
2  -53734.645508  -54034.745117  42660.564697 -53734.645508  400.025146 -54034.745117   0.049805  300.049805      200.050049     2.0    -53734.695312         False          False   True
3  -53634.695312  -53834.770264  42660.564697 -53634.695312  400.000000 -53834.770264   0.049805  200.025146      200.000244     3.0    -53634.745117         False          False   True
4  -53634.695312  -53734.770264  42660.564697 -53634.695312  200.000000 -53734.770264   0.049805  100.025146      100.000244     4.0    -53634.745117         False          False   True
5  -53634.695312  -53734.670410  42660.564697 -53634.695312  100.000000 -53734.670410   0.049805   99.925293        0.000244     3.0    -53634.745117         False          False   True
6  -53634.695312  -53634.745361  42748.064453 -53634.695312   50.000000 -53634.745361   0.049805    0.000244      -12.500000     4.0    -53634.745117         False          False   True
7  -53609.695557  -53609.770264  42823.089600 -53609.695557   25.000000 -53609.770264   0.049805    0.024902      -12.475098     1.0    -53634.745117         False          False   True
8  -53597.220459  -53597.270264  42823.089600 -53597.220459   12.500000 -53597.270264   0.049805    0.000000     -100.000000     1.0    -53634.745117         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1229005/4096.[0m
[08/10 16:34:02]  --------------------------------------------------------------------------------
[08/10 16:34:02]  Iteration: 197 (21 solution, 175 counterexamples)
[08/10 16:34:35]  Generator returned sat in 26.507209 secs.
[08/10 16:34:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:34:36]  Improved gap from 0 to 23.4375
[08/10 16:34:36]  Improved number of small numbers from 107 to 114 out of a max of 114
[08/10 16:34:36]  Verifer returned sat in 1.361157 secs.
[08/10 16:34:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54034.690313  -54158.125244  42660.564453 -54034.690313    0.024902 -54158.125244    0.000000  123.434932      123.434932     9.0    -54158.125244            -1             -1     -1
1  -54034.690313  -54158.122803  42660.564453 -54034.690313  123.434814 -54158.122803    0.000000  123.432490       23.434932     2.0    -54158.125244         False           True  False
2  -53934.687988  -54034.687988  42660.564453 -53934.687988  223.434814 -54034.687988    0.000000  100.000000       23.437256     1.0    -54158.125244         False          False  False
3  -53911.247803  -53934.685303  42713.687012 -53911.247803  123.440186 -53934.685303    0.000000   23.437500        0.000000     1.0    -53911.247803         False          False  False
4  -53600.025391  -53811.250488  42713.687012 -53600.025391  334.659912 -53811.250488  187.784912   23.440186       23.437500     1.0    -53911.247803         False          False  False
5  -53600.025391  -53811.247803  42790.249512 -53600.025391    0.010000 -53811.247803  187.784912   23.437500        0.000000     2.0    -53911.247803         False          False   True
6  -53600.025391  -53787.810303  42866.812012 -53600.025391    0.010000 -53787.810303  187.784912    0.000000      -23.437500     3.0    -53911.247803         False          False   True
7  -53380.212891  -53764.372803  42866.812012 -53380.212891  219.812500 -53764.372803  260.722412  123.437500       23.437500     1.0    -53640.935303          True           True  False
8  -53380.212891  -53664.372803  42866.812012 -53380.212891    0.010000 -53664.372803  260.722412   23.437500      -76.562500     2.0    -53640.935303         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/10 16:34:37]  --------------------------------------------------------------------------------
[08/10 16:34:37]  Iteration: 198 (21 solution, 176 counterexamples)
[08/10 16:35:12]  Generator returned sat in 29.628950 secs.
[08/10 16:35:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:16]  Improved gap from 17/1600 to 23.4375
[08/10 16:35:17]  Improved number of small numbers from 68 to 84 out of a max of 114
[08/10 16:35:17]  Verifer returned sat in 4.484705 secs.
[08/10 16:35:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -53655.857666  -53874.607474  42713.687012 -53655.857666    0.002500 -53874.607474     0.0000  218.749808      218.749808     5.0    -53874.607474            -1             -1     -1
1  -53655.857666  -53874.607422  42713.687012 -53655.857666    0.002500 -53874.607422     0.0000  218.749756      118.749808     6.0    -53874.607474         False           True  False
2  -53655.857666  -53774.607422  42713.687012 -53655.857666    0.002686 -53774.607422     0.0000  118.749756       18.749808     7.0    -53874.607474          True           True  False
3  -53655.857666  -53674.607474  42790.249512 -53655.857666   93.755000 -53674.607474     0.0000   18.749808       -4.687692     8.0    -53874.607474          True           True  False
4  -53427.729974  -53554.292474  42790.249512 -53427.729974  246.877500 -53554.292474     0.0025  126.560000      123.437500     1.0    -53427.732474          True           True  False
5  -53427.729974  -53551.169922  42790.249512 -53427.729974    0.010000 -53551.169922     0.0025  123.437448       23.437500     2.0    -53427.732474         False          False   True
6  -53427.729974  -53451.169974  42866.812012 -53427.729974    0.010000 -53451.169974     0.0025   23.437500        0.000000     3.0    -53427.732474         False          False   True
7  -53427.729974  -53427.732474  42943.374512 -53427.729974    0.010000 -53427.732474     0.0025    0.000000      -23.437500     4.0    -53427.732474         False          False   True
8  -53301.164974  -53404.294922  42943.374512 -53301.164974  126.565000 -53404.294922     0.0025  103.127448        3.127500     1.0    -53427.732474         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 16:35:18]  --------------------------------------------------------------------------------
[08/10 16:35:18]  Iteration: 199 (21 solution, 177 counterexamples)
[08/10 16:36:49]  Generator returned sat in 85.066106 secs.
[08/10 16:36:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:50]  Improved gap from 0 to 48.4375
[08/10 16:36:52]  Improved number of small numbers from 60 to 67 out of a max of 114
[08/10 16:36:52]  Verifer returned sat in 2.615236 secs.
[08/10 16:36:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54382.287598  -54382.387422  43221.467012 -54382.287598  200.400146 -54382.387422      0.000    0.099824        0.099824     1.0    -54382.387422            -1             -1   False
1  -54182.087422  -54382.287422  43221.467012 -54182.087422  200.300000 -54382.287422    100.100  100.100000        0.200000     1.0    -54282.187422         False          False   False
2  -54081.987422  -54183.812422  43221.467012 -54081.987422  200.200000 -54183.812422    100.200    1.625000        0.200000     1.0    -54182.187422         False          False    True
3  -53859.912422  -54091.937422  43221.467012 -53859.912422  223.700000 -54091.937422    222.275    9.750000        0.200000     1.0    -54182.187422         False          False    True
4  -53759.812422  -53982.387422  43221.467012 -53759.812422  109.850000 -53982.387422    222.375    0.200000        0.200000     1.0    -54182.187422         False          False    True
5  -53707.087422  -53982.287422  43268.442139 -53707.087422   52.925000 -53982.287422    222.375   52.825000       -0.099873     2.0    -54182.187422         False          False    True
6  -53658.649922  -53929.362422  43320.004512 -53658.649922  101.262500 -53929.362422    222.375   48.337500       -0.100000     1.0    -53881.024922          True           True   False
7  -53625.199922  -53880.924922  43371.566895 -53625.199922   81.787500 -53880.924922    222.375   33.350000      -15.087617     1.0    -53881.024922         False          False   False
8  -53607.318672  -53832.487305  43371.567139 -53607.318672   51.231250 -53832.487305    222.375    2.793633      -97.206123     1.0    -53881.024922         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 16:36:52]  --------------------------------------------------------------------------------
[08/10 16:36:52]  Iteration: 200 (21 solution, 178 counterexamples)
[08/10 16:37:35]  Generator returned sat in 37.397858 secs.
[08/10 16:37:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:42]  Improved gap from 1/40 to 0
[08/10 16:37:42]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:37:42]  Verifer returned sat in 6.001727 secs.
[08/10 16:37:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54562.451172  -54661.919922  42773.592041 -54562.451172    0.006104 -54661.919922        0.0  99.468750       99.468750     3.0    -54661.919922            -1             -1   False
1  -54561.919922  -54562.445312  42773.592041 -54561.919922  100.000000 -54562.445312        0.0   0.525391        0.000000     1.0    -54661.919922         False          False   False
2  -54561.907715  -54561.913818  42873.560791 -54561.907715    0.537598 -54561.913818        0.0   0.006104       -0.019043     1.0    -54561.907715         False          False   False
3  -54561.382568  -54561.888672  42973.054688 -54561.382568    0.531250 -54561.888672        0.0   0.506104        0.000000     1.0    -54561.382568         False          False   False
4  -54561.382568  -54561.382568  43073.054443 -54561.382568    0.500000 -54561.382568        0.0   0.000000       -0.000244     2.0    -54561.382568         False          False   False
5  -54560.882568  -54560.888672  43172.554688 -54560.882568    0.500000 -54560.888672        0.0   0.006104        0.000000     1.0    -54561.382568         False          False   False
6  -54560.388672  -54560.395264  43272.060547 -54560.388672    0.500000 -54560.395264        0.0   0.006592       -0.000244     1.0    -54561.382568         False          False   False
7  -54559.895264  -54560.382812  43371.567139 -54559.895264    0.500000 -54560.382812        0.0   0.487549       -0.000244     1.0    -54561.382568         False          False   False
8  -54559.882812  -54559.888916  43371.567139 -54559.882812    0.500000 -54559.888916        0.0   0.006104      -99.987793     1.0    -54561.382568         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=13/1024.[0m
[08/10 16:37:43]  --------------------------------------------------------------------------------
[08/10 16:37:43]  Iteration: 201 (21 solution, 179 counterexamples)
[08/10 16:39:45]  Generator returned sat in 116.280232 secs.
[08/10 16:39:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:39:46]  Improved gap from 1/2800 to 48.4375
[08/10 16:39:47]  Improved number of small numbers from 82 to 100 out of a max of 114
[08/10 16:39:47]  Verifer returned sat in 1.973247 secs.
[08/10 16:39:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54961.382568  -54961.382568  42973.054443 -54961.382568  100.199951 -54961.382568        0.0    0.000000        0.000000     2.0    -54961.382568            -1             -1   False
1  -54861.282715  -54961.382568  42973.054443 -54861.282715  100.099854 -54961.382568        0.0  100.099854        0.099854     2.0    -54861.282715         False          False   False
2  -54757.682568  -54761.382568  42973.054443 -54757.682568  203.700000 -54761.382568        3.5    0.200000        0.200000     1.0    -54861.282715         False          False   False
3  -54554.282568  -54661.382568  42973.054443 -54554.282568  203.600000 -54661.382568      106.9    0.200000        0.200000     1.0    -54661.182568         False          False    True
4  -54454.182568  -54561.382568  42973.054443 -54454.182568  100.300000 -54561.382568      107.0    0.200000        0.200000     1.0    -54661.182568         False          False    True
5  -54405.732568  -54560.474365  43020.029785 -54405.732568   48.650000 -54560.474365      107.0   47.741797       -4.374658     1.0    -54661.182568         False          False    True
6  -54353.020264  -54508.357666  43071.592041 -54353.020264  100.454102 -54508.357666      107.0   48.337402       -0.100098     1.0    -54661.182568         False          False    True
7  -54324.845215  -54459.920166  43123.154541 -54324.845215   76.512451 -54459.920166      107.0   28.074951      -20.362549     1.0    -54661.182568         False          False    True
8  -54302.188965  -54411.482422  43123.154541 -54302.188965   50.731201 -54411.482422      107.0    2.293457      -97.706299     1.0    -54661.182568         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 16:39:48]  --------------------------------------------------------------------------------
[08/10 16:39:48]  Iteration: 202 (21 solution, 180 counterexamples)
[08/10 16:40:33]  Generator returned sat in 39.715933 secs.
[08/10 16:40:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:40:34]  Improved gap from 0 to 48.4375
[08/10 16:40:34]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:40:34]  Verifer returned sat in 0.672468 secs.
[08/10 16:40:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54925.135254  -55220.597900  43232.269775 -54925.135254  295.562256 -55220.597900   0.000000  295.462646      295.462646     3.0    -55220.597900            -1             -1   False
1  -54925.085205  -55220.597656  43232.269775 -54925.085205  295.512695 -55220.597656   0.050049  295.462402      195.462646     3.0    -54925.135254         False          False   False
2  -54825.135010  -55020.597900  43232.269775 -54825.135010  395.412598 -55020.597900   0.050049  195.412842      195.412842     3.0    -54925.135254         False          False    True
3  -54825.135010  -54920.597900  43232.269775 -54825.135010   53.025146 -54920.597900   0.050049   95.412842       95.412842     2.0    -54825.185059         False          False    True
4  -54825.135010  -54825.235352  43232.269775 -54825.135010   53.025146 -54825.235352   0.050049    0.050293       -4.587158     3.0    -54825.185059         False          False    True
5  -54772.160156  -54820.597900  43283.832275 -54772.160156   53.025146 -54820.597900   0.050049   48.387695       -0.049805     1.0    -54825.185059         False          False    True
6  -54767.522705  -54772.160400  43335.394775 -54767.522705   53.025146 -54772.160400   0.050049    4.587646      -43.849854     1.0    -54825.185059         False          False    True
7  -54719.085205  -54723.722900  43386.957031 -54719.085205   53.025146 -54723.722900   0.050049    4.587646      -43.850098     1.0    -54825.185059         False          False    True
8  -54670.647705  -54675.285156  43438.519531 -54670.647705   53.025146 -54675.285156   0.050049    4.587402      -43.850098     1.0    -54825.185059         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=800615/4096.[0m
[08/10 16:40:35]  --------------------------------------------------------------------------------
[08/10 16:40:35]  Iteration: 203 (21 solution, 181 counterexamples)
[08/10 16:41:34]  Generator returned sat in 52.788640 secs.
[08/10 16:41:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:41:37]  Improved gap from 1/10 to 18.75
[08/10 16:41:38]  Improved number of small numbers from 60 to 73 out of a max of 114
[08/10 16:41:38]  Verifer returned sat in 3.724291 secs.
[08/10 16:41:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54375.398193  -54762.921125  52681.139402 -54375.398193    0.011230 -54762.921125   0.011364  387.511568      387.511568     2.0    -54762.921125            -1             -1     -1
1  -54375.398193  -54762.909761  52681.139402 -54375.398193    0.011230 -54762.909761   0.011364  387.500204      287.511568     2.0    -54762.921125         False          False   True
2  -54311.322640  -54662.920898  52681.139402 -54311.322640  451.575758 -54662.920898   0.011364  351.586895      251.587121     3.0    -54762.921125         False          False   True
3  -54311.322640  -54503.572640  52681.139402 -54311.322640  351.575928 -54503.572640   0.011364  192.238636      151.587121     4.0    -54311.334004         False          False   True
4  -54244.212792  -54375.409912  52681.139402 -54244.212792  259.348485 -54375.409912   0.011364  131.185757      118.696970     5.0    -54311.334004         False          False   True
5  -54244.212792  -54311.322510  52681.139402 -54244.212792  131.174242 -54311.322510   0.011364   67.098354       18.696970     2.0    -54311.334004         False           True  False
6  -54244.212792  -54262.921125  52762.389402 -54244.212792   67.087121 -54262.921125   0.011364   18.696970       -0.053030     3.0    -54311.334004         False          False  False
7  -54227.866201  -54244.171125  52843.639402 -54227.866201   35.043561 -54244.171125   0.011364   16.293561       -2.456439     1.0    -54311.334004         False          False  False
8  -54225.137981  -54225.420898  52843.639404 -54225.137981   19.021780 -54225.420898   0.011364    0.271554      -99.728217     1.0    -54311.334004         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=12651/44.[0m
[08/10 16:41:39]  --------------------------------------------------------------------------------
[08/10 16:41:39]  Iteration: 204 (21 solution, 182 counterexamples)
[08/10 16:42:42]  Generator returned sat in 56.962366 secs.
[08/10 16:42:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:42:43]  Improved gap from 4073/4096 to 100
[08/10 16:42:43]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 16:42:43]  Verifer returned sat in 0.501601 secs.
[08/10 16:42:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54673.904053  -54875.407227  52793.625244 -54673.904053    0.002930 -54875.407227   0.011475  201.491699      201.491455     2.0    -54875.407227            -1             -1     -1
1  -54673.904053  -54775.407227  52793.625244 -54673.904053    0.002930 -54775.407227   0.011475  101.491699      101.491455     2.0    -54875.407227         False          False   True
2  -54275.401367  -54775.406982  52793.625244 -54275.401367  499.994385 -54775.406982   0.011475  499.994141      399.994141     3.0    -54875.407227         False          False   True
3  -53977.386963  -54673.912842  52793.625244 -53977.386963  798.008545 -54673.912842   0.011475  696.514404      598.008545     2.0    -54875.407227         False          False   True
4  -53875.392822  -54475.407227  52793.625244 -53875.392822  798.508545 -54475.407227   0.011475  600.002930      600.002686     3.0    -54875.407227         False          False   True
5  -53676.387207  -54475.406982  52793.625244 -53676.387207  799.008545 -54475.406982   0.011475  799.008301      699.008301     4.0    -54875.407227         False          False   True
6  -53675.886963  -54275.410156  52793.625244 -53675.886963  799.508545 -54275.410156   0.011475  599.511719      599.508545     4.0    -54875.407227         False          False   True
7  -53475.390137  -54275.406982  52793.625244 -53475.390137  800.008545 -54275.406982   0.014160  800.002686      700.002686     5.0    -54875.407227         False          False   True
8  -53475.390137  -54075.407227  52793.625244 -53475.390137  798.508545 -54075.407227   0.014160  600.002930      600.002686     6.0    -53475.404297          True           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2867211/4096.[0m
[08/10 16:42:44]  --------------------------------------------------------------------------------
[08/10 16:42:44]  Iteration: 205 (21 solution, 183 counterexamples)
[08/10 16:45:12]  Generator returned sat in 142.287021 secs.
[08/10 16:45:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:45:14]  Improved gap from 0 to 48.4375
[08/10 16:45:14]  Improved number of small numbers from 84 to 90 out of a max of 114
[08/10 16:45:14]  Verifer returned sat in 1.996837 secs.
[08/10 16:45:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -54475.806885  -54675.906982  52643.525244 -54475.806885    0.099854 -54675.906982      0.000  200.100098      100.100098     2.0    -54675.906982            -1             -1   False
1  -54475.806885  -54475.907227  52643.525244 -54475.806885    0.100098 -54475.907227      0.000    0.100342        0.100098     3.0    -54675.906982         False          False   False
2  -54375.907227  -54376.731982  52643.525244 -54375.907227  100.000000 -54376.731982      0.000    0.824756       -0.000244     1.0    -54675.906982         False          False   False
3  -54165.031982  -54281.456982  52643.525244 -54165.031982  211.700000 -54281.456982    110.675    5.750000        0.200000     1.0    -54675.906982         False          False   False
4  -54064.931982  -54175.906982  52643.525244 -54064.931982  105.850000 -54175.906982    110.775    0.200000        0.200000     1.0    -54675.906982         False          False    True
5  -54012.206982  -54175.606982  52690.500244 -54012.206982   52.925000 -54175.606982    110.775   52.625000       -0.100000     1.0    -54675.906982         False          False    True
6  -53963.769482  -54122.881982  52742.062744 -53963.769482  101.062500 -54122.881982    110.775   48.337500       -0.100000     1.0    -54675.906982         False          False    True
7  -53932.319482  -54074.444482  52793.625244 -53932.319482   79.787500 -54074.444482    110.775   31.350000      -17.087500     1.0    -54675.906982         False          False    True
8  -53912.438232  -54026.006836  52793.625244 -53912.438232   51.231250 -54026.006836    110.775    2.793604      -97.206250     1.0    -54675.906982         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 16:45:15]  --------------------------------------------------------------------------------
[08/10 16:45:15]  Iteration: 206 (21 solution, 184 counterexamples)
[08/10 16:45:59]  Generator returned sat in 37.839900 secs.
[08/10 16:46:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:46:02]  Improved gap from 0 to 1.5625
[08/10 16:46:03]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:46:03]  Verifer returned sat in 3.078303 secs.
[08/10 16:46:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55298.991211  -55300.653809  53366.509521 -55298.991211    0.100000 -55300.653809        0.0    1.662598       -0.099854     4.0    -55300.653809            -1             -1   False
1  -55198.891357  -55298.891357  53366.509521 -55198.891357  101.762451 -55298.891357        0.0  100.000000        0.000000     1.0    -55300.653809         False          False   False
2  -55197.228760  -55198.791260  53464.846680 -55197.228760  101.662598 -55198.791260        0.0    1.562500       -0.000244     1.0    -55197.228760         False          False   False
3  -54895.128662  -55197.128662  53464.846680 -54895.128662  303.662598 -55197.128662        0.0  302.000000      202.099854     1.0    -55197.228760         False          False   False
4  -54895.128662  -55043.466064  53464.846680 -54895.128662    2.000000 -55043.466064        0.0  148.337402      102.099854     2.0    -55197.228760         False          False   False
5  -54895.128662  -54997.228516  53464.846680 -54895.128662    2.000000 -54997.228516        0.0  102.099854        2.099854     3.0    -55197.228760         False          False   False
6  -54895.128662  -54897.228516  53562.746826 -54895.128662    2.000000 -54897.228516        0.0    2.099854        0.000000     4.0    -55197.228760         False          False   False
7  -54895.128662  -54895.128662  53661.184326 -54895.128662    2.000000 -54895.128662        0.0    0.000000       -1.562500     5.0    -55197.228760         False          False   False
8  -54893.128662  -54893.566162  53661.184570 -54893.128662    2.000000 -54893.566162        0.0    0.437500      -99.562256     1.0    -54893.128662          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1011/5.[0m
[08/10 16:46:03]  --------------------------------------------------------------------------------
[08/10 16:46:03]  Iteration: 207 (21 solution, 185 counterexamples)
[08/10 16:47:31]  Generator returned sat in 81.868833 secs.
[08/10 16:47:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:47:33]  Improved gap from 51/1024 to 48.4375
[08/10 16:47:35]  Improved number of small numbers from 73 to 79 out of a max of 114
[08/10 16:47:35]  Verifer returned sat in 2.682641 secs.
[08/10 16:47:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55276.691406  -55476.591357  53417.87168 -55276.691406    0.100098 -55476.591357      0.000  199.899951       99.899951     9.0    -55476.591357            -1             -1     -1
1  -55276.291357  -55276.591553  53417.87168 -55276.291357  200.300000 -55276.591553      0.100    0.200195        0.200000     1.0    -55476.591357         False           True  False
2  -55012.791357  -55177.016357  53417.87168 -55012.791357  263.700195 -55177.016357    163.600    0.625000        0.200000     1.0    -55476.591357         False          False   True
3  -54801.316357  -55082.341357  53417.87168 -54801.316357  212.100000 -55082.341357    275.075    5.950000        0.200000     1.0    -55076.391357         False          False   True
4  -54701.216357  -54976.591357  53417.87168 -54701.216357  106.050000 -54976.591357    275.175    0.200000        0.200000     1.0    -55076.391357         False          False   True
5  -54648.391357  -54976.491357  53464.84668 -54648.391357   53.025000 -54976.491357    275.175   52.925000        0.000000     2.0    -55076.391357         False          False   True
6  -54600.053857  -54923.566357  53516.40918 -54600.053857  101.262500 -54923.566357    275.175   48.337500       -0.100000     2.0    -55076.391357         False          False   True
7  -54568.003857  -54875.128857  53567.97168 -54568.003857   80.387500 -54875.128857    275.175   31.950000      -16.487500     1.0    -55076.391357         False          False   True
8  -54548.222607  -54826.691162  53567.97168 -54548.222607   51.731250 -54826.691162    275.175    3.293555      -96.706250     1.0    -55076.391357         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 16:47:35]  --------------------------------------------------------------------------------
[08/10 16:47:35]  Iteration: 208 (21 solution, 186 counterexamples)
[08/10 16:48:08]  Generator returned sat in 26.600287 secs.
[08/10 16:48:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:48:10]  Improved gap from 0 to 48.4375
[08/10 16:48:11]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 16:48:11]  Verifer returned sat in 2.456544 secs.
[08/10 16:48:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -52963.698486  -53115.317639  51056.597962 -52963.698486    0.043457 -53115.317639    0.100000  151.519153       51.519153     1.0    -53115.317639            -1             -1   False
1  -52915.217639  -52963.755139  51056.597962 -52915.217639  200.000000 -52963.755139    0.100000   48.437500        0.000000     1.0    -53115.317639         False          False   False
2  -52815.174370  -52815.880139  51056.597962 -52815.174370  148.480769 -52815.880139    0.100000    0.605769        0.043269     1.0    -52815.274370         False          False   False
3  -52612.626293  -52718.264755  51056.597962 -52612.626293  203.153846 -52718.264755  102.604808    3.033654        0.086538     1.0    -52815.274370         False          False   False
4  -52512.583024  -52615.317639  51056.597962 -52512.583024  103.076923 -52615.317639  102.648077    0.086538        0.086538     1.0    -52815.274370         False          False    True
5  -52459.631101  -52615.187832  51103.516357 -52459.631101   53.038462 -52615.187832  102.648077   52.908654       -0.043143     1.0    -52815.274370         False          False    True
6  -52411.193601  -52562.235909  51155.078731 -52411.193601  101.346154 -52562.235909  102.648077   48.394231       -0.043269     1.0    -52815.274370         False          False    True
7  -52380.573409  -52513.798409  51206.641231 -52380.573409   79.014423 -52513.798409  102.648077   30.576923      -17.860577     1.0    -52815.274370         False          False    True
8  -52359.390716  -52465.360840  51206.641357 -52359.390716   51.759615 -52465.360840  102.648077    3.322047      -96.677758     1.0    -52815.274370         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=9/104.[0m
[08/10 16:48:11]  --------------------------------------------------------------------------------
[08/10 16:48:11]  Iteration: 209 (21 solution, 187 counterexamples)
[08/10 16:50:01]  Generator returned sat in 103.716431 secs.
[08/10 16:50:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:02]  Improved gap from 0 to 100
[08/10 16:50:03]  Improved number of small numbers from 65 to 73 out of a max of 114
[08/10 16:50:03]  Verifer returned sat in 1.333881 secs.
[08/10 16:50:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -53163.648438  -53163.748486  51156.747962 -53163.648438     0.050049 -53163.748486       0.05    0.050049      -99.949951     5.0    -53163.748486            -1             -1     -1
1  -52963.698486  -53063.748486  51156.747962 -52963.698486   200.000000 -53063.748486       0.05  100.000000        0.000000     1.0    -53163.748486         False           True   True
2  -52912.767236  -52912.867236  51156.747962 -52912.767236   150.931250 -52912.867236       0.05    0.050000      -49.068750     1.0    -52912.817236         False          False   True
3  -52863.260986  -52863.360986  51156.747962 -52863.260986    49.556250 -52863.360986       0.05    0.050000      -99.562500     1.0    -52863.310986         False          False   True
4  -52763.698486  -52763.748486  51156.747962 -52763.698486    99.612500 -52763.748486       0.05    0.000000     -100.000000     1.0    -52863.310986         False          False   True
5  -52563.973486  -52663.748291  51156.747962 -52563.973486   199.725000 -52663.748291       0.05   99.724805       -0.275000     1.0    -52863.310986         False          False   True
6  -52263.748291  -52463.748486  51156.747962 -52263.748291   399.950000 -52463.748486       0.05  199.950195      199.950195     1.0    -52863.310986         False          False   True
7  -51663.298486  -52463.748486  51156.747962 -51663.298486   800.400000 -52463.748486       0.05  800.400000      700.400000     1.0    -52863.310986         False          False   True
8  -50862.398486  -52263.748535  51156.747962 -50862.398486  1601.300000 -52263.748535     700.90  700.450049      700.450000     2.0    -52863.310986         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14009/20.[0m
[08/10 16:50:04]  --------------------------------------------------------------------------------
[08/10 16:50:04]  Iteration: 210 (21 solution, 188 counterexamples)
[08/10 16:51:17]  Generator returned sat in 66.721281 secs.
[08/10 16:51:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:51:18]  Improved gap from 0 to 14.0625
[08/10 16:51:19]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 16:51:19]  Verifer returned sat in 1.982478 secs.
[08/10 16:51:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -52881.568486  -52981.573730  51002.945462 -52881.568486    0.005127 -52981.573730     0.0025  100.002744        100.0025     2.0    -52981.573730            -1             -1     -1
1  -52881.568486  -52881.573486  51002.945462 -52881.568486    0.002686 -52881.573486     0.0025    0.002500          0.0025     2.0    -52881.570986         False          False   True
2  -52549.435986  -52781.576172  51002.945462 -52549.435986  332.135000 -52781.576172     0.0025  232.137686        232.1350     1.0    -52881.570986         False          False   True
3  -52549.435986  -52781.573486  51002.945462 -52549.435986  232.135010 -52781.573486     0.0025  232.135000        132.1350     2.0    -52549.438486         False          False   True
4  -52549.435986  -52581.573730  51002.945462 -52549.435986    0.500000 -52581.573730     0.0025   32.135244         32.1350     3.0    -52549.438486         False          False   True
5  -52549.435986  -52563.501221  51070.810462 -52549.435986    0.500000 -52563.501221     0.0025   14.062734          0.0000     4.0    -52549.438486         False          False   True
6  -52549.435986  -52549.438486  51156.747962 -52549.435986    0.500000 -52549.438486     0.0025    0.000000        -14.0625     5.0    -52549.438486         False          False   True
7  -52203.233486  -52535.375977  51156.747962 -52203.233486  346.202500 -52535.375977     0.0050  332.137490        232.1375     1.0    -52549.438486         False           True  False
8  -52203.233486  -52435.375977  51156.747962 -52203.233486    0.010000 -52435.375977     0.0050  232.137490        132.1375     2.0    -52549.438486         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=18571/80.[0m
[08/10 16:51:20]  --------------------------------------------------------------------------------
[08/10 16:51:20]  Iteration: 211 (21 solution, 189 counterexamples)
[08/10 16:53:17]  Generator returned sat in 111.581385 secs.
[08/10 16:53:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:53:19]  Improved gap from 0 to 23.4375
[08/10 16:53:20]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 16:53:20]  Verifer returned sat in 1.780832 secs.
[08/10 16:53:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -53672.294678  -53974.427002  51080.185303 -53672.294678    0.001465 -53974.427002   0.002441  302.129883      223.436279     2.0    -53974.427002            -1             -1   False
1  -53672.294678  -53895.733398  51080.185303 -53672.294678  302.128750 -53895.733398   0.002441  223.436279      123.436279     2.0    -53974.427002         False          False   False
2  -53672.294678  -53795.733398  51080.185303 -53672.294678  223.435059 -53795.733398   0.002441  123.436279       23.436279     3.0    -53672.297119         False          False   False
3  -53672.294678  -53673.860840  51080.185303 -53672.294678  123.435000 -53673.860840   0.002441    1.563721      -76.563721     4.0    -53672.297119         False          False   False
4  -53372.292236  -53495.733398  51080.185303 -53372.292236  301.566162 -53495.733398   0.003662  123.437500      123.437500     1.0    -53672.297119         False           True   False
5  -53372.292236  -53495.732178  51080.185303 -53372.292236    0.010000 -53495.732178   0.003662  123.436279       23.437500     2.0    -53672.297119         False          False    True
6  -53372.292236  -53395.733398  51156.747803 -53372.292236    0.010000 -53395.733398   0.003662   23.437500        0.000000     3.0    -53672.297119         False          False    True
7  -53372.292236  -53372.295898  51230.186768 -53372.292236    0.010000 -53372.295898   0.003662    0.000000      -26.561035     4.0    -53672.297119         False          False    True
8  -53247.854736  -53345.734619  51230.186768 -53247.854736  124.437500 -53345.734619   0.003662   97.876221       -2.123535     1.0    -53247.858398          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 16:53:20]  --------------------------------------------------------------------------------
[08/10 16:53:20]  Iteration: 212 (21 solution, 190 counterexamples)
[08/10 16:55:08]  Generator returned sat in 101.897737 secs.
[08/10 16:55:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:55:11]  Improved gap from 13/10240 to 3.125
[08/10 16:55:13]  Improved number of small numbers from 60 to 72 out of a max of 114
[08/10 16:55:13]  Verifer returned sat in 3.645907 secs.
[08/10 16:55:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -53228.951904  -53237.124264  50421.575928 -53228.951904    0.100000 -53237.124264     0.0000    8.172360        8.172119     1.0    -53237.124264            -1             -1   False
1  -53228.951904  -53228.952042  50510.278946 -53228.951904    8.172119 -53228.952042     0.0000    0.000138       -3.124862     2.0    -53237.124264         False          False   False
2  -53222.802042  -53225.827042  50607.153946 -53222.802042    6.150000 -53225.827042     0.0000    3.025000       -0.100000     1.0    -53222.802042         False          False   False
3  -53199.268709  -53222.702042  50683.620850 -53199.268709   26.558333 -53222.702042     0.0000   23.433333       -0.099763     1.0    -53222.802042         False          False   False
4  -53199.068709  -53199.168709  50780.495613 -53199.068709   23.633333 -53199.168709     0.0000    0.100000       -3.025000     1.0    -53222.802042         False          False   False
5  -53152.493709  -53196.043709  50836.945557 -53152.493709   46.675000 -53196.043709     0.0000   43.550000       -0.000056     1.0    -53222.802042         False          False   False
6  -53149.368709  -53152.393709  50933.720613 -53149.368709   46.675000 -53152.393709     0.0000    3.025000       -0.100000     1.0    -53222.802042         False          False   False
7  -53044.931209  -53149.268555  50933.720613 -53044.931209  107.462500 -53149.268555     4.1375  100.199846        0.200000     1.0    -53222.802042         False          False   False
8  -53044.931209  -53049.268555  50933.720703 -53044.931209    2.000000 -53049.268555     4.1375    0.199846      -99.799910     2.0    -53222.802042         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 16:55:13]  --------------------------------------------------------------------------------
[08/10 16:55:13]  Iteration: 213 (21 solution, 191 counterexamples)
[08/10 16:57:27]  Generator returned sat in 127.679146 secs.
[08/10 16:57:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:57:28]  Improved gap from 0 to 0
[08/10 16:57:28]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:57:28]  Verifer returned sat in 0.751175 secs.
[08/10 16:57:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -53611.302246  -53813.001953  50807.753906 -53611.302246    0.100098 -53813.001953        0.0  201.699707      101.699707     2.0    -53813.001953            -1             -1   False
1  -53611.302246  -53613.602051  50807.753906 -53611.302246  201.600098 -53613.602051        0.0    2.299805        1.699707     2.0    -53813.001953         False          False   False
2  -53412.102051  -53513.002197  50807.753906 -53412.102051  201.500000 -53513.002197        0.0  100.900146      100.899902     1.0    -53412.102051         False          False   False
3  -53311.602051  -53413.002197  50807.753906 -53311.602051  201.400146 -53413.002197        0.5  100.900146      100.899902     2.0    -53312.102051         False          False   False
4  -53211.602051  -53313.001953  50807.753906 -53211.602051  200.900146 -53313.001953        0.5  100.899902      100.899902     2.0    -53312.102051         False          False    True
5  -53211.602051  -53312.001953  50807.753906 -53211.602051    1.000000 -53312.001953        0.5   99.899902        0.899902     2.0    -53312.102051         False          False    True
6  -53211.602051  -53213.001953  50906.854004 -53211.602051    1.000000 -53213.001953        0.5    0.899902        0.000000     3.0    -53312.102051         False          False    True
7  -53211.501953  -53212.102051  51006.753906 -53211.501953    1.000000 -53212.102051        0.5    0.100098        0.000000     4.0    -53312.102051         False          False    True
8  -53210.102051  -53211.902100  51105.354004 -53210.102051    1.500000 -53211.902100        0.5    1.300049        0.000000     1.0    -53210.602051          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=206643/2048.[0m
[08/10 16:57:29]  --------------------------------------------------------------------------------
[08/10 16:57:29]  Iteration: 214 (21 solution, 192 counterexamples)
[08/10 16:58:12]  Generator returned sat in 37.227096 secs.
[08/10 16:58:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:58:15]  Verifer returned unsat in 1.729959 secs.
[08/10 16:58:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:58:15]  --------------------------------------------------------------------------------
[08/10 16:58:15]  Iteration: 215 (22 solution, 192 counterexamples)
[08/10 16:58:34]  Generator returned sat in 12.776932 secs.
[08/10 16:58:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:58:36]  Verifer returned unsat in 1.844146 secs.
[08/10 16:58:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:58:36]  --------------------------------------------------------------------------------
[08/10 16:58:36]  Iteration: 216 (23 solution, 192 counterexamples)
[08/10 17:00:06]  Generator returned sat in 83.418325 secs.
[08/10 17:00:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:09]  Verifer returned unsat in 2.309955 secs.
[08/10 17:00:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:09]  --------------------------------------------------------------------------------
[08/10 17:00:09]  Iteration: 217 (24 solution, 192 counterexamples)
[08/10 17:00:25]  Generator returned sat in 10.150988 secs.
[08/10 17:00:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:28]  Verifer returned unsat in 1.729061 secs.
[08/10 17:00:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:28]  --------------------------------------------------------------------------------
[08/10 17:00:28]  Iteration: 218 (25 solution, 192 counterexamples)
[08/10 17:00:47]  Generator returned sat in 13.592025 secs.
[08/10 17:00:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:49]  Verifer returned unsat in 1.404443 secs.
[08/10 17:00:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:50]  --------------------------------------------------------------------------------
[08/10 17:00:50]  Iteration: 219 (26 solution, 192 counterexamples)
[08/10 17:01:07]  Generator returned sat in 11.158879 secs.
[08/10 17:01:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:01:08]  Verifer returned unsat in 0.539478 secs.
[08/10 17:01:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:01:08]  --------------------------------------------------------------------------------
[08/10 17:01:08]  Iteration: 220 (27 solution, 192 counterexamples)
[08/10 17:01:24]  Generator returned sat in 10.074177 secs.
[08/10 17:01:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:01:25]  Verifer returned unsat in 0.440350 secs.
[08/10 17:01:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:01:25]  --------------------------------------------------------------------------------
[08/10 17:01:25]  Iteration: 221 (28 solution, 192 counterexamples)
[08/10 17:01:44]  Generator returned sat in 12.255520 secs.
[08/10 17:01:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:01:46]  Verifer returned unsat in 1.887083 secs.
[08/10 17:01:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:01:46]  --------------------------------------------------------------------------------
[08/10 17:01:46]  Iteration: 222 (29 solution, 192 counterexamples)
[08/10 17:02:02]  Generator returned sat in 9.680055 secs.
[08/10 17:02:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:05]  Verifer returned unsat in 2.552060 secs.
[08/10 17:02:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:06]  --------------------------------------------------------------------------------
[08/10 17:02:06]  Iteration: 223 (30 solution, 192 counterexamples)
[08/10 17:02:21]  Generator returned sat in 9.277495 secs.
[08/10 17:02:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:24]  Verifer returned unsat in 2.571383 secs.
[08/10 17:02:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:24]  --------------------------------------------------------------------------------
[08/10 17:02:24]  Iteration: 224 (31 solution, 192 counterexamples)
[08/10 17:02:40]  Generator returned sat in 9.159898 secs.
[08/10 17:02:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:42]  Verifer returned unsat in 2.061380 secs.
[08/10 17:02:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:43]  --------------------------------------------------------------------------------
[08/10 17:02:43]  Iteration: 225 (32 solution, 192 counterexamples)
[08/10 17:02:58]  Generator returned sat in 9.111066 secs.
[08/10 17:02:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:03:01]  Verifer returned unsat in 2.255489 secs.
[08/10 17:03:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:03:01]  --------------------------------------------------------------------------------
[08/10 17:03:01]  Iteration: 226 (33 solution, 192 counterexamples)
[08/10 17:03:16]  Generator returned sat in 9.176853 secs.
[08/10 17:03:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:03:19]  Verifer returned unsat in 1.994159 secs.
[08/10 17:03:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:03:19]  --------------------------------------------------------------------------------
[08/10 17:03:19]  Iteration: 227 (34 solution, 192 counterexamples)
[08/10 17:03:35]  Generator returned sat in 9.491508 secs.
[08/10 17:03:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:03:38]  Verifer returned unsat in 2.356249 secs.
[08/10 17:03:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:03:38]  --------------------------------------------------------------------------------
[08/10 17:03:38]  Iteration: 228 (35 solution, 192 counterexamples)
[08/10 17:03:54]  Generator returned sat in 9.345827 secs.
[08/10 17:03:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:03:56]  Verifer returned unsat in 1.769447 secs.
[08/10 17:03:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:03:56]  --------------------------------------------------------------------------------
[08/10 17:03:56]  Iteration: 229 (36 solution, 192 counterexamples)
[08/10 17:04:20]  Generator returned sat in 17.967918 secs.
[08/10 17:04:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:04:21]  Improved gap from 0 to 0
[08/10 17:04:22]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:04:22]  Verifer returned sat in 0.588593 secs.
[08/10 17:04:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -51886.522705  -52338.122314  50930.559082 -51886.522705    0.049805 -52338.122314   0.000000  451.599609      351.599854     7.0    -52338.122314            -1             -1     -1
1  -51838.122559  -52139.822510  50930.559082 -51838.122559  499.999756 -52139.822510   0.050049  301.649902      299.949951     3.0    -52338.122314         False           True  False
2  -51738.172607  -52138.122314  50930.559082 -51738.172607  401.599854 -52138.122314   0.050049  399.899658      299.899902     4.0    -51738.222656          True           True   True
3  -51736.522461  -51938.122559  50930.559082 -51736.522461  401.549805 -51938.122559   0.050049  201.550049      201.550049     5.0    -51736.572510         False           True  False
4  -51736.522461  -51886.472412  50930.559082 -51736.522461    1.500000 -51886.472412   0.050049  149.899902      101.550049     4.0    -51736.572510         False           True  False
5  -51736.522461  -51738.172363  50930.559082 -51736.522461    1.500000 -51738.172363   0.050049    1.599854        1.550049     3.0    -51736.572510         False           True  False
6  -51736.522461  -51738.122314  51029.009033 -51736.522461    1.500000 -51738.122314   0.050049    1.549805        0.000000     4.0    -51736.572510         False           True  False
7  -51736.522461  -51736.572510  51129.009033 -51736.522461    1.500000 -51736.572510   0.050049    0.000000        0.000000     5.0    -51736.572510         False           True  False
8  -51735.022461  -51736.522705  51227.508789 -51735.022461    1.500000 -51736.522705   0.050049    1.450195       -0.000244     1.0    -51736.572510         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1228595/4096.[0m
[08/10 17:04:22]  --------------------------------------------------------------------------------
[08/10 17:04:22]  Iteration: 230 (36 solution, 193 counterexamples)
[08/10 17:05:39]  Generator returned sat in 70.223065 secs.
[08/10 17:05:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:05:44]  Improved gap from 1/1600 to 43.75
[08/10 17:05:45]  Improved number of small numbers from 66 to 76 out of a max of 114
[08/10 17:05:45]  Verifer returned sat in 5.194477 secs.
[08/10 17:05:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -52073.557461  -52421.297363  50930.559082 -52073.557461    0.099854 -52421.297363        0.1  347.639902      247.640000     7.0    -52421.297363            -1             -1     -1
1  -52073.557461  -52321.297363  50930.559082 -52073.557461  247.640137 -52321.297363        0.1  247.639902      147.640000     3.0    -52421.297363         False           True   True
2  -52073.557461  -52124.987461  50930.559082 -52073.557461  247.540039 -52124.987461        0.1   51.330000       47.640000     3.0    -52073.657461         False          False   True
3  -51877.447461  -52021.297461  50930.559082 -51877.447461  247.440000 -52021.297461        0.1  143.750000      143.750000     1.0    -51877.547461         False          False   True
4  -51877.447461  -51939.507461  50930.559082 -51877.447461  123.720000 -51939.507461        0.1   61.960000       43.750000     2.0    -51877.547461         False          False   True
5  -51877.447461  -51921.297461  50986.809082 -51877.447461   61.860000 -51921.297461        0.1   43.750000        0.000000     3.0    -51877.547461         False          False   True
6  -51877.447461  -51877.547461  51043.059082 -51877.447461   30.930000 -51877.547461        0.1    0.000000      -43.750000     4.0    -51877.547461         False          False   True
7  -51789.607461  -51833.797461  51098.869141 -51789.607461   87.840000 -51833.797461        0.1   44.090000       -0.099941     1.0    -51877.547461         False           True  False
8  -51736.422461  -51789.607422  51098.869141 -51736.422461   97.275000 -51789.607422        0.1   53.084961      -46.914941     1.0    -51877.547461         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=605143/4096.[0m
[08/10 17:05:45]  --------------------------------------------------------------------------------
[08/10 17:05:45]  Iteration: 231 (36 solution, 194 counterexamples)
[08/10 17:06:26]  Generator returned sat in 34.043520 secs.
[08/10 17:06:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:06:27]  Verifer returned unsat in 0.888099 secs.
[08/10 17:06:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:06:27]  --------------------------------------------------------------------------------
[08/10 17:06:27]  Iteration: 232 (37 solution, 194 counterexamples)
[08/10 17:06:45]  Generator returned sat in 11.303550 secs.
[08/10 17:06:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:06:50]  Improved number of small numbers from 67 to 73 out of a max of 113
[08/10 17:06:50]  Verifer returned sat in 3.721547 secs.
[08/10 17:06:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -51461.517822  -51661.517646  50930.558838 -51461.517822    0.050000 -51661.517646       0.05  199.949824       99.949824     9.0    -51661.517646            -1             -1     -1
1  -51261.517646  -51461.517646  50930.558838 -51261.517646  399.950000 -51461.517646       0.05  199.950000      199.950000     1.0    -51661.517646         False           True   True
2  -51261.517646  -51461.517646  50930.558838 -51261.517646  199.900000 -51461.517646       0.05  199.950000       99.950000     1.0    -51261.567646         False          False   True
3  -51106.223202  -51261.517646  50930.558838 -51106.223202  355.244444 -51261.517646       0.05  155.244444      155.244444     1.0    -51261.567646         False          False   True
4  -50728.600980  -51261.517646  50930.558838 -50728.600980  532.866667 -51261.517646       0.05  532.866667      432.866667     1.0    -51261.567646         False          False   True
5  -50462.167646  -51061.517646  50930.558838 -50462.167646  799.300000 -51061.517646       0.05  599.300000      599.300000     2.0    -51261.567646         False          False   True
6  -50261.317646  -51061.467529  50930.558838 -50261.317646  800.150000 -51061.467529       0.10  800.049883      700.100000     3.0    -50261.417646          True           True  False
7  -50261.317646  -50862.261396  50930.558838 -50261.317646  402.075000 -50862.261396       0.10  600.843750      600.100000     4.0    -50261.417646         False           True   True
8  -50261.317646  -50761.517822  50930.558838 -50261.317646  600.793750 -50761.517822       0.10  500.100176      500.100000     5.0    -50261.417646         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=7001/10.[0m
[08/10 17:06:50]  --------------------------------------------------------------------------------
[08/10 17:06:50]  Iteration: 233 (37 solution, 195 counterexamples)
[08/10 17:09:14]  Generator returned sat in 137.234564 secs.
[08/10 17:09:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:09:21]  Improved gap from 0 to 0
[08/10 17:09:22]  Improved number of small numbers from 58 to 70 out of a max of 114
[08/10 17:09:22]  Verifer returned sat in 7.938041 secs.
[08/10 17:09:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50262.348633  -50262.349730  50930.558838 -50262.348633  0.000417 -50262.349730   0.000417  0.000680       -0.000570     6.0    -50262.349730            -1             -1     -1
1  -50261.359105  -50262.348480  51029.569824 -50261.359105  0.990208 -50262.348480   0.000417  0.988958       -0.000055     1.0    -50262.349730         False           True   True
2  -50261.358271  -50261.359105  51129.568848 -50261.358271  0.989792 -50261.359105   0.000417  0.000417       -0.000199     1.0    -50261.358688         False          False   True
3  -50261.348480  -50261.349313  51229.559082 -50261.348480  0.010208 -50261.349313   0.000417  0.000417       -0.000173     1.0    -50261.348896         False          False   True
4  -50261.338480  -50261.348480  51329.549072 -50261.338480  0.010417 -50261.348480   0.000417  0.009583       -0.000182     1.0    -50261.348896         False          False   True
5  -50261.337646  -50261.338480  51429.548096 -50261.337646  0.010417 -50261.338480   0.000417  0.000417       -0.000326     1.0    -50261.348896         False          False   True
6  -50261.328063  -50261.337646  51529.538818 -50261.328063  0.010000 -50261.337646   0.000417  0.009167       -0.000020     1.0    -50261.348896         False          False   True
7  -50261.327230  -50261.328063  51629.528564 -50261.327230  0.010000 -50261.328063   0.000417  0.000417       -0.009440     1.0    -50261.348896         False          False   True
8  -50261.317646  -50261.318115  51629.528564 -50261.317646  0.010000 -50261.318115   0.000417  0.000052      -99.999857     1.0    -50261.348896         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 17:09:23]  --------------------------------------------------------------------------------
[08/10 17:09:23]  Iteration: 234 (37 solution, 196 counterexamples)
[08/10 17:11:59]  Generator returned sat in 149.833943 secs.
[08/10 17:12:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:12:11]  Improved gap from 1/32 to 3.125
[08/10 17:12:12]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:12:12]  Verifer returned sat in 11.792001 secs.
[08/10 17:12:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -50094.435791  -50094.435791  51232.674072 -50094.435791    0.024414 -50094.435791   0.000000   0.000000      -25.211182     3.0    -50094.435791            -1             -1    True
1  -49966.074951  -49997.609863  51232.674072 -49966.074951  128.360840 -49997.609863   0.024658  31.510254        3.125000     1.0    -50094.435791         False          False    True
2  -49869.224365  -49869.675049  51232.674072 -49869.224365  128.360840 -49869.675049   0.024658   0.426025       -0.024414     1.0    -50094.435791         False          False    True
3  -49866.074707  -49869.224365  51329.548828 -49866.074707    3.575684 -49869.224365   0.024658   3.125000        0.000000     1.0    -49866.099365         False          False    True
4  -49754.806152  -49819.695312  51329.548828 -49754.806152  114.393555 -49819.695312   8.168213  56.720947        3.125000     1.0    -49866.099365         False          False    True
5  -49754.806152  -49766.099365  51426.423828 -49754.806152   56.696777 -49766.099365   8.168213   3.125000        0.000000     2.0    -49866.099365         False          False    True
6  -49677.794922  -49762.949951  51449.412598 -49677.794922   80.136230 -49762.949951   8.168213  76.986816        0.000000     1.0    -49866.099365         False          False    True
7  -49661.576416  -49684.113525  51533.169434 -49661.576416   93.205322 -49684.113525   8.168213  14.368896       -0.024658     1.0    -49866.099365         False          False    True
8  -49561.551758  -49669.719727  51533.169434 -49561.551758  114.393555 -49669.719727   8.168213  99.999756        0.000000     1.0    -49866.099365         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25/8.[0m
[08/10 17:12:12]  --------------------------------------------------------------------------------
[08/10 17:12:12]  Iteration: 235 (37 solution, 197 counterexamples)
[08/10 17:13:05]  Generator returned sat in 46.550203 secs.
[08/10 17:13:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:13:06]  Improved gap from 25/8192 to 100
[08/10 17:13:06]  Improved number of small numbers from 83 to 114 out of a max of 114
[08/10 17:13:06]  Verifer returned sat in 0.510811 secs.
[08/10 17:13:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -49948.556152  -49948.556396  51329.548584 -49948.556152  100.199951 -49948.556396    0.000000    0.000244       -0.100098     9.0    -49948.556396            -1             -1     -1
1  -49848.456299  -49948.456055  51329.548584 -49848.456299  100.100098 -49948.456055    0.000000   99.999756       -0.000244     1.0    -49848.456299         False           True  False
2  -49748.456299  -49848.456055  51329.548584 -49748.456299  199.999756 -49848.456055    0.000000   99.999756       -0.000244     1.0    -49848.456299         False          False  False
3  -49648.556152  -49681.689697  51329.548584 -49648.556152  199.899902 -49681.689697    0.000000   33.133545       -0.100098     1.0    -49648.556152         False          False  False
4  -49548.256348  -49548.456055  51329.548584 -49548.256348  133.433350 -49548.456055    0.000000    0.199707        0.199707     1.0    -49648.556152         False          False  False
5  -49348.456055  -49448.456299  51329.548584 -49348.456055  200.000000 -49448.456299   99.800049    0.200195        0.199951     1.0    -49648.556152         False          False  False
6  -49150.656250  -49444.156006  51329.548584 -49150.656250  198.000000 -49444.156006  197.599854   95.899902        0.199951     1.0    -49648.556152         False          False   True
7  -49050.556152  -49342.156250  51329.548584 -49050.556152  196.000000 -49342.156250  197.699951   93.900146        0.199951     1.0    -49648.556152         False          False   True
8  -48950.456299  -49248.456055  51329.548584 -48950.456299  194.000000 -49248.456055  197.799805  100.199951        0.199951     2.0    -49648.556152         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 17:13:07]  --------------------------------------------------------------------------------
[08/10 17:13:07]  Iteration: 236 (37 solution, 198 counterexamples)
[08/10 17:14:19]  Generator returned sat in 65.311763 secs.
[08/10 17:14:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:14:22]  Improved gap from 1/10 to 15.625
[08/10 17:14:23]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 17:14:23]  Verifer returned sat in 3.267408 secs.
[08/10 17:14:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -51798.554932  -52205.705078  51329.54834 -51798.554932    0.050049 -52205.705078        0.0  407.150146      307.150146     4.0    -52205.705078            -1             -1    True
1  -51798.554932  -52005.705078  51329.54834 -51798.554932  407.099854 -52005.705078        0.0  207.150146      207.150146     5.0    -52205.705078         False          False    True
2  -51598.655273  -52005.705078  51329.54834 -51598.655273  407.049805 -52005.705078        0.0  407.049805      307.049805     5.0    -51598.655273          True           True   False
3  -51598.655273  -51805.705322  51329.54834 -51598.655273  407.000000 -51805.705322        0.0  207.050049      207.049805     4.0    -51598.655273         False           True   False
4  -51598.655273  -51705.705078  51329.54834 -51598.655273  205.000000 -51705.705078        0.0  107.049805      107.049805     3.0    -51598.655273         False          False   False
5  -51598.655273  -51652.205078  51329.54834 -51598.655273  104.000000 -51652.205078        0.0   53.549805        7.049805     4.0    -51598.655273         False          False   False
6  -51598.655273  -51598.705322  51406.92334 -51598.655273   53.500000 -51598.705322        0.0    0.050049      -15.575195     5.0    -51598.655273         False          False   False
7  -51570.455322  -51583.080078  51491.29834 -51570.455322   28.250000 -51583.080078        0.0   12.624756       -3.000244     1.0    -51598.655273         False           True   False
8  -51567.455078  -51567.455078  51575.67334 -51567.455078   15.625000 -51567.455078        0.0    0.000000      -15.625000     1.0    -51598.655273         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=628941/2048.[0m
[08/10 17:14:23]  --------------------------------------------------------------------------------
[08/10 17:14:23]  Iteration: 237 (37 solution, 199 counterexamples)
[08/10 17:15:56]  Generator returned sat in 86.508975 secs.
[08/10 17:15:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:15:58]  Improved gap from 0 to 23.4375
[08/10 17:15:58]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/10 17:15:58]  Verifer returned sat in 1.504842 secs.
[08/10 17:15:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55424.080078  -55624.079834  51330.360596 -55424.080078    0.100000 -55624.079834     0.0000  199.999756      199.999756     3.0    -55624.079834            -1             -1    True
1  -55424.080078  -55524.079834  51330.360596 -55424.080078    0.100000 -55524.079834     0.0000   99.999756       99.999756     2.0    -55624.079834         False          False    True
2  -55424.080078  -55524.079834  51330.360596 -55424.080078   99.999756 -55524.079834     0.0000   99.999756       -0.000244     2.0    -55624.079834         False          False    True
3  -55027.329834  -55347.017578  51330.360596 -55027.329834  496.750000 -55347.017578    73.3125  246.375244      223.437500     1.0    -55624.079834         False          False    True
4  -55027.329834  -55224.079834  51330.360596 -55027.329834  246.375000 -55224.079834    73.3125  123.437500      123.437500     2.0    -55624.079834         False          False    True
5  -55027.329834  -55124.180176  51330.360596 -55027.329834    0.500000 -55124.180176    73.3125   23.537842       23.437500     3.0    -55624.079834         False          False    True
6  -55027.329834  -55124.079834  51406.923096 -55027.329834    0.500000 -55124.079834    73.3125   23.437500        0.000000     4.0    -55624.079834         False          False    True
7  -55027.329834  -55100.642334  51483.485596 -55027.329834    0.500000 -55100.642334    73.3125    0.000000      -23.437500     5.0    -55624.079834         False          False    True
8  -54780.954834  -55077.204834  51483.485596 -54780.954834  246.375000 -55077.204834    73.3125  222.937500      122.937500     1.0    -54854.267334          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 17:15:59]  --------------------------------------------------------------------------------
[08/10 17:15:59]  Iteration: 238 (37 solution, 200 counterexamples)
[08/10 17:16:19]  Generator returned sat in 13.669319 secs.
[08/10 17:16:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:16:21]  Improved gap from 0 to 23.4375
[08/10 17:16:22]  Improved number of small numbers from 68 to 86 out of a max of 114
[08/10 17:16:22]  Verifer returned sat in 2.118098 secs.
[08/10 17:16:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55348.477295  -55348.577393  51253.798096 -55348.477295    0.099854 -55348.577393     0.0000    0.100098        0.100039     6.0    -55348.577393            -1             -1     -1
1  -55348.477295  -55348.577334  51330.360596 -55348.477295    0.050049 -55348.577334     0.0000    0.100039      -23.337461     2.0    -55348.477295         False           True  False
2  -55201.652334  -55225.139834  51330.360596 -55201.652334  146.925000 -55225.139834     0.0500   23.437500       23.437500     1.0    -55348.477295         False          False  False
3  -54397.889834  -55201.652334  51330.360596 -54397.889834  827.200000 -55201.652334   703.8125   99.950000       23.437500     1.0    -55348.477295         False          False   True
4  -54086.239834  -55028.214834  51330.360596 -54086.239834  411.600000 -55028.214834   915.4625   26.512500       23.437500     1.0    -55348.477295         False          False   True
5  -53908.952334  -55001.652344  51330.360596 -53908.952334  203.800000 -55001.652344   992.7500   99.950010       23.437500     1.0    -55348.477295         False          False   True
6  -53908.952334  -54925.139834  51406.923096 -53908.952334   99.900000 -54925.139834   992.7500   23.437500        0.000000     2.0    -55348.477295         False          False   True
7  -53908.952334  -54901.702334  51483.485596 -53908.952334    0.500000 -54901.702334   992.7500    0.000000      -23.437500     3.0    -55348.477295         False          False   True
8  -53656.427334  -54878.264648  51483.485596 -53656.427334  252.525000 -54878.264648  1098.4000  123.437314       23.437500     1.0    -54754.827334          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=375/16.[0m
[08/10 17:16:22]  --------------------------------------------------------------------------------
[08/10 17:16:22]  Iteration: 239 (37 solution, 201 counterexamples)
[08/10 17:16:54]  Generator returned sat in 25.498149 secs.
[08/10 17:16:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:16:55]  Improved gap from 0 to 100
[08/10 17:16:56]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/10 17:16:56]  Verifer returned sat in 0.627055 secs.
[08/10 17:16:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55098.827393  -55198.777100  51330.360596 -55098.827393    0.049805 -55198.777100   0.000000   99.949707       -0.050049     2.0     -55198.77710            -1             -1   False
1  -54998.627197  -55098.777344  51330.360596 -54998.627197  200.149902 -55098.777344   0.000000  100.150146        0.150146     1.0     -55198.77710         False          False   False
2  -54898.677490  -54898.777344  51330.360596 -54898.677490  200.099854 -54898.777344   0.000000    0.099854        0.099854     1.0     -54898.67749         False          False   False
3  -54898.677490  -54898.777100  51330.360596 -54898.677490    0.050049 -54898.777100   0.000000    0.099609      -99.900146     2.0     -54898.67749         False          False   False
4  -54750.777100  -54763.943848  51330.360596 -54750.777100  148.000000 -54763.943848   0.000000   13.166748      -51.999756     1.0     -54898.67749         False          False   False
5  -54598.527100  -54662.944092  51330.360596 -54598.527100  165.416748 -54662.944092   0.050049   64.366943        0.200195     1.0     -54898.67749         False          False   False
6  -54498.477295  -54561.943848  51330.360596 -54498.477295  164.416748 -54561.943848   0.099854   63.366699        0.200195     1.0     -54898.67749         False          False    True
7  -54398.427246  -54460.943848  51330.360596 -54398.427246  163.416748 -54460.943848   0.149902   62.366699        0.200195     1.0     -54898.67749         False          False    True
8  -54298.377197  -54298.777344  51330.360596 -54298.377197  162.416748 -54298.777344   0.199951    0.200195        0.200195     1.0     -54898.67749         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=205/1024.[0m
[08/10 17:16:56]  --------------------------------------------------------------------------------
[08/10 17:16:56]  Iteration: 240 (37 solution, 202 counterexamples)
[08/10 17:18:40]  Generator returned sat in 97.608637 secs.
[08/10 17:18:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:18:41]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 17:18:41]  Verifer returned sat in 0.193631 secs.
[08/10 17:18:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55103.802246  -55203.652100  51335.360596 -55103.802246    0.049805 -55203.652100   0.000000   99.849854       -0.024902     2.0    -55203.652100            -1             -1   False
1  -54998.602051  -55103.777344  51335.360596 -54998.602051  205.050049 -55103.777344   0.000000  105.175293        5.175293     1.0    -55203.652100         False          False   False
2  -54898.752197  -54903.777344  51335.360596 -54898.752197  205.025146 -54903.777344   0.000000    5.025146        5.025146     1.0    -54898.752197         False          False   False
3  -54898.752197  -54898.777100  51335.360596 -54898.752197    5.000244 -54898.777100   0.000000    0.024902      -94.974854     2.0    -54898.752197         False          False   False
4  -54747.839600  -54765.943848  51335.360596 -54747.839600  150.937500 -54765.943848   0.000000   18.104248      -44.062256     1.0    -54898.752197         False          False   False
5  -54598.527100  -54663.944092  51335.360596 -54598.527100  167.416748 -54663.944092   0.050049   65.366943        5.200195     1.0    -54898.752197         False          False   False
6  -54498.477295  -54561.943848  51335.360596 -54498.477295  165.416748 -54561.943848   0.099854   63.366699        5.200195     1.0    -54898.752197         False          False    True
7  -54398.427246  -54459.968994  51335.360596 -54398.427246  163.416748 -54459.968994   0.149902   61.391846        5.200195     1.0    -54898.752197         False          False    True
8  -54298.402344  -54303.777344  51335.360596 -54298.402344  161.416748 -54303.777344   0.174805    5.200195        5.200195     1.0    -54898.752197         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=5325/1024.[0m
[08/10 17:18:42]  --------------------------------------------------------------------------------
[08/10 17:18:42]  Iteration: 241 (37 solution, 203 counterexamples)
[08/10 17:20:56]  Generator returned sat in 127.427075 secs.
[08/10 17:20:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:21:00]  Improved gap from 1/1400 to 48.4375
[08/10 17:21:01]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 17:21:01]  Verifer returned sat in 4.838176 secs.
[08/10 17:21:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55318.750000  -55318.949795  51684.357910 -55318.750000    0.100098 -55318.949795        0.1   0.099795        0.099609     7.0    -55318.949795            -1             -1     -1
1  -55318.549795  -55318.750000  51684.358096 -55318.549795    0.300000 -55318.750000        0.1   0.100205      -99.700000     1.0    -55318.949795         False           True   True
2  -55118.750000  -55118.949795  51684.358096 -55118.750000  199.900000 -55118.949795        0.1   0.099795        0.099795     1.0    -55318.949795         False          False   True
3  -54922.249795  -55018.949795  51684.358096 -54922.249795  196.600000 -55018.949795       96.5   0.200000        0.200000     1.0    -55018.749795         False          False   True
4  -54822.149795  -54920.312295  51684.358096 -54822.149795  100.300000 -54920.312295       96.6   1.562500        0.200000     1.0    -55018.749795         False          False   True
5  -54771.562295  -54918.949795  51733.570557 -54771.562295   52.150000 -54918.949795       96.6  50.787500       -0.000039     2.0    -55018.749795         False          False   True
6  -54722.349795  -54868.062295  51784.357910 -54722.349795  100.000000 -54868.062295       96.6  49.112500       -0.000186     1.0    -54818.949795          True           True  False
7  -54696.018545  -54818.849795  51835.820596 -54696.018545   75.443750 -54818.849795       96.6  26.231250      -22.206250     1.0    -54818.949795         False          False  False
8  -54671.518545  -54770.412295  51887.383057 -54671.518545   50.731250 -54770.412295       96.6   2.293750      -46.143789     1.0    -54818.949795         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 17:21:02]  --------------------------------------------------------------------------------
[08/10 17:21:02]  Iteration: 242 (37 solution, 204 counterexamples)
[08/10 17:22:15]  Generator returned sat in 66.594099 secs.
[08/10 17:22:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:22:20]  Improved gap from 2/39 to 0
[08/10 17:22:21]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:22:21]  Verifer returned sat in 4.942706 secs.
[08/10 17:22:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -54936.716309  -55036.688721  51684.358154 -54936.716309    0.027344 -55036.688721    0.00000   99.972412       -0.027588     9.0    -55036.688721            -1             -1     -1
1  -54910.647461  -54936.688721  51684.358154 -54910.647461  126.041260 -54936.688721    0.00000   26.041260      -73.958740     1.0    -55036.688721         False           True  False
2  -54810.647461  -54810.675049  51758.289307 -54810.647461  126.041260 -54810.675049    0.00000    0.027588       -0.027588     1.0    -55036.688721         False          False  False
3  -54810.592529  -54810.619873  51858.261719 -54810.592529    0.082520 -54810.619873    0.00000    0.027344       -0.000244     1.0    -54810.592529         False          False  False
4  -54697.044189  -54767.402588  51858.261719 -54697.044189  113.575684 -54767.402588   13.49292   56.865479        0.055176     1.0    -54810.592529         False          False  False
5  -54695.121826  -54710.509766  51956.283936 -54695.121826   58.787842 -54710.509766   13.49292    1.895020       -0.000244     1.0    -54810.592529         False          False   True
6  -54617.540283  -54708.587158  51978.702637 -54617.540283   79.476562 -54708.587158   13.49292   77.553955        0.000000     1.0    -54810.592529         False          False   True
7  -54604.339600  -54631.005859  52065.099609 -54604.339600   90.754639 -54631.005859   13.49292   13.173340       -0.402344     1.0    -54810.592529         False          False   True
8  -54503.937256  -54617.430176  52065.099609 -54503.937256  113.575684 -54617.430176   13.49292  100.000000        0.000000     1.0    -54810.592529         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=113/2048.[0m
[08/10 17:22:21]  --------------------------------------------------------------------------------
[08/10 17:22:21]  Iteration: 243 (37 solution, 205 counterexamples)
[08/10 17:23:40]  Generator returned sat in 71.964506 secs.
[08/10 17:23:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:23:46]  Improved gap from 7/512 to 48.4375
[08/10 17:23:46]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 17:23:46]  Verifer returned sat in 5.551914 secs.
[08/10 17:23:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -53846.244873  -53846.374756  52061.931152 -53846.244873    0.086670 -53846.374756   0.043213   0.086670        0.086426     8.0    -53846.374756            -1             -1     -1
1  -53846.244873  -53846.374512  52061.931152 -53846.244873    0.043457 -53846.374512   0.043213   0.086426      -99.913574     2.0    -53846.288086         False           True   True
2  -53646.288086  -53646.374756  52061.931152 -53646.288086  200.043213 -53646.374756   0.043213   0.043457        0.043213     1.0    -53846.288086         False           True  False
3  -53447.071777  -53546.374512  52061.931152 -53447.071777  199.259766 -53546.374512  99.216309   0.086426        0.086426     1.0    -53546.288086         False          False  False
4  -53347.028320  -53446.374512  52061.931152 -53347.028320  100.129883 -53446.374512  99.259766   0.086426        0.086426     1.0    -53546.288086         False          False   True
5  -53296.549805  -53446.244873  52108.849854 -53296.549805   50.564941 -53446.244873  99.259766  50.435303       -2.516357     1.0    -53546.288086         False          False   True
6  -53245.920166  -53393.292969  52160.412109 -53245.920166  101.064941 -53393.292969  99.259766  48.113037       -0.324463     1.0    -53546.288086         False          False   True
7  -53216.492432  -53344.855469  52211.974609 -53216.492432   77.540771 -53344.855469  99.259766  29.103271      -19.334229     1.0    -53546.288086         False          False   True
8  -53193.836182  -53296.417725  52211.974854 -53193.836182   51.759521 -53296.417725  99.259766   3.321777      -96.677734     1.0    -53546.288086         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=177/2048.[0m
[08/10 17:23:47]  --------------------------------------------------------------------------------
[08/10 17:23:47]  Iteration: 244 (37 solution, 206 counterexamples)
[08/10 17:24:45]  Generator returned sat in 51.641822 secs.
[08/10 17:24:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:24:46]  Verifer returned unsat in 0.613264 secs.
[08/10 17:24:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:24:46]  --------------------------------------------------------------------------------
[08/10 17:24:46]  Iteration: 245 (38 solution, 206 counterexamples)
[08/10 17:25:06]  Generator returned sat in 13.300446 secs.
[08/10 17:25:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:25:09]  Verifer returned unsat in 2.230290 secs.
[08/10 17:25:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:25:09]  --------------------------------------------------------------------------------
[08/10 17:25:09]  Iteration: 246 (39 solution, 206 counterexamples)
[08/10 17:25:29]  Generator returned sat in 12.739247 secs.
[08/10 17:25:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:25:31]  Verifer returned unsat in 1.883352 secs.
[08/10 17:25:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:25:31]  --------------------------------------------------------------------------------
[08/10 17:25:31]  Iteration: 247 (40 solution, 206 counterexamples)
[08/10 17:27:35]  Generator returned sat in 117.386719 secs.
[08/10 17:27:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:27:37]  Improved gap from 3/5 to 23.4375
[08/10 17:27:38]  Improved number of small numbers from 60 to 78 out of a max of 114
[08/10 17:27:38]  Verifer returned sat in 2.216448 secs.
[08/10 17:27:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55593.849365  -55634.924160  56075.580811 -55593.849365    0.100000 -55634.924160     0.0000   41.074795       23.437305     4.0     -55634.92416            -1             -1     -1
1  -55593.849365  -55617.286621  56152.143066 -55593.849365    0.100098 -55617.286621     0.0000   23.437256       -0.000439     4.0     -55634.92416         False           True  False
2  -55593.649170  -55593.749023  56152.143301 -55593.649170   23.637451 -55593.749023     0.0000    0.099854      -99.800010     1.0     -55634.92416          True           True  False
3  -55370.511475  -55393.849160  56152.143301 -55370.511475  223.237549 -55393.849160     0.0000   23.337686       23.337686     1.0     -55634.92416         False          False  False
4  -55150.774160  -55293.849160  56152.143301 -55150.774160  243.075000 -55293.849160   119.6375   23.437500       23.437500     1.0     -55634.92416         False          False  False
5  -55050.674160  -55270.411621  56152.143301 -55050.674160  123.537500 -55270.411621   119.7375   99.999961       23.437500     1.0     -55634.92416         False          False   True
6  -55050.674160  -55193.849160  56228.705801 -55050.674160   63.768750 -55193.849160   119.7375   23.437500        0.000000     2.0     -55634.92416         False          False   True
7  -55050.674160  -55170.411660  56305.268301 -55050.674160    0.500000 -55170.411660   119.7375    0.000000      -23.437500     3.0     -55634.92416         False          False   True
8  -54925.236660  -55146.974121  56305.268301 -54925.236660  125.437500 -55146.974121   119.7375  101.999961        2.000000     1.0     -55044.97416          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/10 17:27:39]  --------------------------------------------------------------------------------
[08/10 17:27:39]  Iteration: 248 (40 solution, 207 counterexamples)
[08/10 17:32:01]  Generator returned sat in 256.035411 secs.
[08/10 17:32:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:32:09]  Improved gap from 0 to 0
[08/10 17:32:10]  Improved number of small numbers from 49 to 63 out of a max of 114
[08/10 17:32:10]  Verifer returned sat in 7.650956 secs.
[08/10 17:32:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55150.789307  -55151.487330  55608.013672 -55150.789307  0.001465 -55151.487330        0.0  0.698023        0.430894     9.0    -55151.487330            -1             -1     -1
1  -55150.789307  -55151.220053  55707.582520 -55150.789307  0.696777 -55151.220053        0.0  0.430746       -0.000258     3.0    -55151.487330         False           True  False
2  -55150.524383  -55150.787910  55807.316650 -55150.524383  0.695670 -55150.787910        0.0  0.263527       -0.001204     1.0    -55150.524383         False          False  False
3  -55150.093491  -55150.523133  55906.886961 -55150.093491  0.694420 -55150.523133        0.0  0.429643        0.000000     1.0    -55150.093491         False          False  False
4  -55150.093491  -55150.093491  56006.885711 -55150.093491  0.428393 -55150.093491        0.0  0.000000       -0.001250     2.0    -55150.093491         False          False  False
5  -55149.340366  -55150.092041  56106.133836 -55149.340366  0.753125 -55150.092041        0.0  0.751676        0.000000     1.0    -55150.093491         False          False  False
6  -55149.340366  -55149.340366  56206.132586 -55149.340366  0.010000 -55149.340366        0.0  0.000000       -0.001250     2.0    -55150.093491         False          False  False
7  -55148.474830  -55149.339111  56305.268301 -55148.474830  0.865536 -55149.339111        0.0  0.864282        0.000000     1.0    -55150.093491         False          False  False
8  -55148.474830  -55148.474830  56305.268311 -55148.474830  0.010000 -55148.474830        0.0  0.000000      -99.999990     2.0    -55150.093491         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=11/4096.[0m
[08/10 17:32:10]  --------------------------------------------------------------------------------
[08/10 17:32:10]  Iteration: 249 (40 solution, 208 counterexamples)
[08/10 17:34:42]  Generator returned sat in 145.277054 secs.
[08/10 17:34:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:34:54]  Improved gap from 1/10 to 0
[08/10 17:34:54]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:34:54]  Verifer returned sat in 11.158455 secs.
[08/10 17:34:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55291.165283  -55420.364990  55849.295654 -55291.165283    0.050049 -55420.364990   0.049805  129.149902      101.286865     4.0    -55420.364990            -1             -1     -1
1  -55291.165283  -55292.502197  55849.295654 -55291.165283  100.099854 -55292.502197   0.049805    1.287109        1.286865     4.0    -55420.364990         False           True   True
2  -55192.352295  -55192.501953  55849.295654 -55192.352295  100.100098 -55192.501953   0.049805    0.099854        0.099854     1.0    -55420.364990          True           True  False
3  -55192.352295  -55192.501953  55949.195801 -55192.352295    0.050049 -55192.501953   0.049805    0.099854        0.000000     1.0    -55192.402100         False          False  False
4  -55078.495605  -55150.093506  55949.195801 -55078.495605  113.956543 -55150.093506  12.569336   59.028564        1.337158     1.0    -55192.402100         False          False  False
5  -55078.495605  -55092.402100  56047.858643 -55078.495605   58.978271 -55092.402100  12.569336    1.337158        0.000000     2.0    -55192.402100         False          False   True
6  -55000.293701  -55090.775879  56069.656494 -55000.293701   79.539062 -55090.775879  12.569336   77.912842       -0.000244     1.0    -55012.863037          True           True  False
7  -54987.573975  -55012.812988  56156.937012 -54987.573975   90.632568 -55012.812988  12.569336   12.669678        0.000000     1.0    -55012.863037         False          False  False
8  -54886.287109  -55000.143311  56156.937012 -54886.287109  113.956543 -55000.143311  12.569336  101.286865        1.286865     2.0    -55012.863037         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=5477/4096.[0m
[08/10 17:34:55]  --------------------------------------------------------------------------------
[08/10 17:34:55]  Iteration: 250 (40 solution, 209 counterexamples)
[08/10 17:35:24]  Generator returned sat in 22.552133 secs.
[08/10 17:35:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:35:26]  Improved gap from 0 to 35.9375
[08/10 17:35:26]  Improved number of small numbers from 83 to 104 out of a max of 114
[08/10 17:35:26]  Verifer returned sat in 1.762166 secs.
[08/10 17:35:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55212.564453  -55320.477100  55768.958496 -55212.564453    0.100098 -55320.477100        0.0  107.912646       99.600342     4.0    -55320.477100            -1             -1   False
1  -55212.364600  -55212.464600  55768.958496 -55212.364600  108.112500 -55212.464600        0.0    0.100000       -0.199805     1.0    -55320.477100         False          False   False
2  -55168.527344  -55212.164795  55825.320801 -55168.527344   43.937256 -55212.164795        0.0   43.637451       -0.000244     1.0    -55168.527344         False          False   False
3  -55168.327148  -55168.427100  55889.283203 -55168.327148   43.837646 -55168.427100        0.0    0.099951      -35.837646     1.0    -55168.327148         False          False   False
4  -55092.402100  -55132.489502  55949.195801 -55092.402100   76.025000 -55132.489502        0.0   40.087402        0.000000     1.0    -55168.327148         False          False   False
5  -55092.402100  -55092.402100  56013.258301 -55092.402100   39.987549 -55092.402100        0.0    0.000000      -35.937500     2.0    -55168.327148         False          False   False
6  -55032.520752  -55056.464600  56077.320801 -55032.520752   59.881348 -55056.464600        0.0   23.943848      -11.993652     1.0    -55168.327148         False          False   False
7  -55000.483350  -55020.527100  56139.383301 -55000.483350   55.981250 -55020.527100        0.0   20.043750      -17.893750     1.0    -55168.327148         False          False   False
8  -54964.545898  -54982.589600  56139.383301 -54964.545898   55.981201 -54982.589600        0.0   18.043701      -81.956299     1.0    -55168.327148         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/10 17:35:27]  --------------------------------------------------------------------------------
[08/10 17:35:27]  Iteration: 251 (40 solution, 210 counterexamples)
[08/10 17:37:58]  Generator returned sat in 143.887923 secs.
[08/10 17:37:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:38:01]  Improved gap from 0 to 14.0625
[08/10 17:38:02]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 17:38:02]  Verifer returned sat in 3.136716 secs.
[08/10 17:38:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55745.497559  -55745.597412  56202.191406 -55745.497559    0.100098 -55745.597412        0.0    0.099854       -0.099609     9.0    -55745.597412            -1             -1     -1
1  -55731.434814  -55745.397705  56288.128662 -55731.434814   14.162598 -55745.397705        0.0   13.962891       -0.099609     1.0    -55745.597412         False           True  False
2  -55312.235107  -55731.335205  56288.128662 -55312.235107  433.162598 -55731.335205        0.0  419.100098      319.100098     1.0    -55745.597412         False          False  False
3  -55312.235107  -55531.335205  56288.128662 -55312.235107  419.000000 -55531.335205        0.0  219.100098      219.100098     2.0    -55312.235107         False          False  False
4  -55312.235107  -55431.335205  56288.128662 -55312.235107  210.000000 -55431.335205        0.0  119.100098      119.100098     3.0    -55312.235107         False          False  False
5  -55312.235107  -55348.747559  56288.128662 -55312.235107  105.500000 -55348.747559        0.0   36.512451       19.100098     4.0    -55312.235107         False          False  False
6  -55295.497559  -55322.722412  56352.291016 -55295.497559   53.250000 -55322.722412        0.0   27.224854        0.000000     5.0    -55312.235107         False          False  False
7  -55295.497559  -55295.497559  56438.228516 -55295.497559   27.125000 -55295.497559        0.0    0.000000      -14.062500     2.0    -55312.235107         False           True  False
8  -55281.435059  -55281.435059  56524.166016 -55281.435059   14.062500 -55281.435059        0.0    0.000000      -14.062500     1.0    -55312.235107         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=326861/1024.[0m
[08/10 17:38:02]  --------------------------------------------------------------------------------
[08/10 17:38:02]  Iteration: 252 (40 solution, 211 counterexamples)
[08/10 17:40:09]  Generator returned sat in 119.862546 secs.
[08/10 17:40:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:40:20]  Improved gap from 0 to 0
[08/10 17:40:21]  Improved number of small numbers from 59 to 80 out of a max of 114
[08/10 17:40:21]  Verifer returned sat in 11.380287 secs.
[08/10 17:40:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55141.383545  -55143.714684  56190.460449 -55141.383545  0.671875 -55143.714684        0.0  2.331139        2.330947     3.0    -55143.714684            -1             -1   False
1  -55141.383545  -55142.052979  56288.128662 -55141.383545  0.671631 -55142.052979        0.0  0.669434       -0.000840     3.0    -55141.383545         False          False   False
2  -55141.382080  -55141.382705  56387.459229 -55141.382080  0.670898 -55141.382705        0.0  0.000625       -0.668809     1.0    -55141.382080         False          False   False
3  -55140.712497  -55140.713122  56487.458008 -55140.712497  0.670208 -55140.713122        0.0  0.000625       -0.000446     1.0    -55140.712497         False          False   False
4  -55139.376455  -55140.711914  56586.122412 -55139.376455  1.336667 -55140.711914        0.0  1.335459        0.000000     1.0    -55140.712497         False          False   False
5  -55139.376455  -55139.376455  56686.121826 -55139.376455  0.010000 -55139.376455        0.0  0.000000       -0.000586     2.0    -55140.712497         False          False   False
6  -55139.365205  -55139.375732  56786.111162 -55139.365205  0.011250 -55139.375732        0.0  0.010527        0.000000     1.0    -55140.712497         False          False   False
7  -55139.365205  -55139.365205  56886.101318 -55139.365205  0.010000 -55139.365205        0.0  0.000000       -0.009844     2.0    -55140.712497         False          False   False
8  -55139.355205  -55139.355225  56986.100586 -55139.355205  0.010000 -55139.355225        0.0  0.000020       -0.000576     1.0    -55140.712497         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/10 17:40:22]  --------------------------------------------------------------------------------
[08/10 17:40:22]  Iteration: 253 (40 solution, 212 counterexamples)
[08/10 17:42:19]  Generator returned sat in 110.714472 secs.
[08/10 17:42:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:42:21]  Improved gap from 0 to 23.4375
[08/10 17:42:21]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 17:42:21]  Verifer returned sat in 1.117698 secs.
[08/10 17:42:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55686.820312  -55986.620117  56709.548584 -55686.820312    0.100098 -55986.620117    0.000000  299.799805      199.799805     6.0    -55986.620117            -1             -1     -1
1  -55686.720215  -55786.620361  56709.548584 -55686.720215  299.899902 -55786.620361    0.000000   99.900146       99.899902     4.0    -55986.620117         False           True  False
2  -55563.082764  -55686.620117  56709.548584 -55563.082764  223.537598 -55686.620117    0.099854  123.437500      123.437500     1.0    -55563.182617          True           True  False
3  -55039.645264  -55686.620117  56709.548584 -55039.645264  646.875000 -55686.620117  423.537354  223.437500      123.437500     1.0    -55563.182617         False          False   True
4  -54939.645264  -55486.670166  56709.548584 -54939.645264  323.437500 -55486.670166  423.537354  123.487549      123.437500     2.0    -55563.182617         False          False   True
5  -54939.645264  -55386.720215  56709.548584 -54939.645264    0.500000 -55386.720215  423.537354   23.537598       23.437500     2.0    -55563.182617         False          False   True
6  -54939.645264  -55386.620117  56786.111084 -54939.645264    0.500000 -55386.620117  423.537354   23.437500        0.000000     3.0    -55563.182617         False          False   True
7  -54939.645264  -55363.182617  56862.673584 -54939.645264    0.500000 -55363.182617  423.537354    0.000000      -23.437500     4.0    -55563.182617         False          False   True
8  -54692.670166  -55339.745117  56862.673584 -54692.670166  246.975098 -55339.745117  423.637451  223.437500      123.437500     1.0    -55116.307617          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1975/16.[0m
[08/10 17:42:22]  --------------------------------------------------------------------------------
[08/10 17:42:22]  Iteration: 254 (40 solution, 213 counterexamples)
[08/10 17:43:22]  Generator returned sat in 53.195946 secs.
[08/10 17:43:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:24]  Verifer returned unsat in 1.433145 secs.
[08/10 17:43:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:24]  --------------------------------------------------------------------------------
[08/10 17:43:24]  Iteration: 255 (41 solution, 213 counterexamples)
[08/10 17:43:43]  Generator returned sat in 12.567771 secs.
[08/10 17:43:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:45]  Verifer returned unsat in 1.361438 secs.
[08/10 17:43:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:43:45]  --------------------------------------------------------------------------------
[08/10 17:43:45]  Iteration: 256 (42 solution, 213 counterexamples)
[08/10 17:44:07]  Generator returned sat in 14.738131 secs.
[08/10 17:44:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:44:14]  Improved gap from 0 to 0
[08/10 17:44:15]  Improved number of small numbers from 54 to 67 out of a max of 114
[08/10 17:44:15]  Verifer returned sat in 7.515276 secs.
[08/10 17:44:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -56060.909668  -56061.283086  56609.924561 -56060.909668  0.375977 -56061.283086        0.0  0.373418        0.373249     2.0    -56061.283086            -1             -1   False
1  -56060.906940  -56060.909180  56709.548584 -56060.906940  0.376146 -56060.909180        0.0  0.002240        0.000000     1.0    -56061.283086         False          False   False
2  -56060.906940  -56060.906940  56809.547607 -56060.906940  0.001953 -56060.906940        0.0  0.000000       -0.000977     2.0    -56060.906940         False          False   False
3  -56060.905482  -56060.905898  56909.303711 -56060.905482  0.001458 -56060.905898        0.0  0.000417       -0.243415     1.0    -56060.905482         False          False   False
4  -56060.651523  -56060.661865  57009.293167 -56060.651523  0.254375 -56060.661865        0.0  0.010342        0.000000     1.0    -56060.905482         False          False   False
5  -56060.651523  -56060.651523  57109.292751 -56060.651523  0.010000 -56060.651523        0.0  0.000000       -0.000417     2.0    -56060.905482         False          False   False
6  -56060.640690  -56060.651107  57209.282334 -56060.640690  0.010833 -56060.651107        0.0  0.010417        0.000000     1.0    -56060.905482         False          False   False
7  -56060.640690  -56060.640690  57309.272461 -56060.640690  0.010000 -56060.640690        0.0  0.000000       -0.009873     2.0    -56060.905482         False          False   False
8  -56060.630690  -56060.630690  57309.272461 -56060.630690  0.010000 -56060.630690        0.0  0.000000      -99.999873     1.0    -56060.905482         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 17:44:16]  --------------------------------------------------------------------------------
[08/10 17:44:16]  Iteration: 257 (42 solution, 214 counterexamples)
[08/10 17:45:17]  Generator returned sat in 54.403806 secs.
[08/10 17:45:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:45:20]  Improved gap from 0 to 14.0625
[08/10 17:45:20]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:45:20]  Verifer returned sat in 2.323381 secs.
[08/10 17:45:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55496.732910  -55927.908203  56909.537354 -55496.732910    0.049805 -55927.908203        0.0  431.175293      378.175293     7.0    -55927.908203            -1             -1    True
1  -55496.683105  -55774.908203  56909.537354 -55496.683105  431.225098 -55774.908203        0.0  278.225098      278.225098     6.0    -55927.908203         False          False    True
2  -55360.895752  -55688.970459  56909.537354 -55360.895752  414.012451 -55688.970459        0.0  328.074707      314.012451     7.0    -55360.895752         False          False    True
3  -55360.895752  -55674.908203  56909.537354 -55360.895752  328.025146 -55674.908203        0.0  314.012451      214.012451     8.0    -55360.895752         False          False    True
4  -55360.895752  -55496.732910  56909.537354 -55360.895752  253.000000 -55496.732910        0.0  135.837158      114.012451     9.0    -55360.895752         False          False    True
5  -55360.895752  -55421.195801  56909.537354 -55360.895752  124.500000 -55421.195801        0.0   60.300049       14.012451     4.0    -55360.895752         False           True   False
6  -55360.895752  -55374.908203  56995.474854 -55360.895752   60.250000 -55374.908203        0.0   14.012451       -0.050049     5.0    -55360.895752         False          False   False
7  -55346.783203  -55360.845703  57081.412354 -55346.783203   28.125000 -55360.845703        0.0   14.062500        0.000000     1.0    -55360.895752         False          False   False
8  -55346.783203  -55346.783203  57081.412354 -55346.783203   12.062500 -55346.783203        0.0    0.000000     -100.000000     2.0    -55360.895752         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5025/16.[0m
[08/10 17:45:21]  --------------------------------------------------------------------------------
[08/10 17:45:21]  Iteration: 258 (42 solution, 215 counterexamples)
[08/10 17:45:49]  Generator returned sat in 20.986372 secs.
[08/10 17:45:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:45:53]  Improved gap from 1/80 to 14.0625
[08/10 17:45:54]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:45:54]  Verifer returned sat in 4.102807 secs.
[08/10 17:45:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -60614.755859  -61120.855713  56981.422363 -60614.755859  506.199951 -61120.855713   0.000000  506.099854      463.949951     5.0    -61120.855713            -1             -1    True
1  -60614.655762  -60978.705811  56981.422363 -60614.655762  506.199951 -60978.705811   0.100098  363.949951      363.949951     5.0    -61120.855713         False          False    True
2  -60614.655762  -60978.705566  56981.422363 -60614.655762  363.850098 -60978.705566   0.100098  363.949707      263.949951     5.0    -60614.755859         False          False    True
3  -60614.655762  -60867.855713  56981.422363 -60614.655762  363.850098 -60867.855713   0.100098  253.099854      163.949951     5.0    -60614.755859         False          False    True
4  -60614.655762  -60678.705811  56981.422363 -60614.655762  253.000000 -60678.705811   0.100098   63.949951       63.949951     6.0    -60614.755859         False          False    True
5  -60554.105713  -60614.555664  56981.422363 -60554.105713  124.500000 -60614.555664   0.100098   60.349854       24.500000     1.0    -60614.755859         False           True   False
6  -60554.105713  -60568.168213  57056.822266 -60554.105713   60.250000 -60568.168213   0.100098   13.962402       -0.100098     2.0    -60614.755859         False          False   False
7  -60539.943115  -60554.105713  57142.759766 -60539.943115   28.125000 -60554.105713   0.100098   14.062500        0.000000     1.0    -60614.755859         False          False   False
8  -60539.943115  -60540.043213  57142.760010 -60539.943115   12.062500 -60540.043213   0.100098    0.000000      -99.999756     2.0    -60614.755859         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1490739/4096.[0m
[08/10 17:45:54]  --------------------------------------------------------------------------------
[08/10 17:45:54]  Iteration: 259 (42 solution, 216 counterexamples)
[08/10 17:46:50]  Generator returned sat in 48.478632 secs.
[08/10 17:46:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:46:51]  Verifer returned unsat in 0.863256 secs.
[08/10 17:46:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:46:51]  --------------------------------------------------------------------------------
[08/10 17:46:51]  Iteration: 260 (43 solution, 216 counterexamples)
[08/10 17:49:34]  Generator returned sat in 155.894871 secs.
[08/10 17:49:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:49:41]  Improved gap from 1/4800 to 35.9375
[08/10 17:49:41]  Improved number of small numbers from 107 to 114 out of a max of 114
[08/10 17:49:41]  Verifer returned sat in 6.524910 secs.
[08/10 17:49:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -60763.255859  -60784.699707  56666.072266 -60763.255859   0.099854 -60784.699707        0.0  21.443848        0.100098     9.0    -60784.699707            -1             -1     -1
1  -60763.255859  -60763.355957  56730.134766 -60763.255859  21.443604 -60763.355957        0.0   0.100098      -35.837402     8.0    -60784.699707         False           True  False
2  -60670.837158  -60706.674805  56773.453613 -60670.837158  92.518799 -60706.674805        0.0  35.837646       -0.099854     1.0    -60784.699707          True           True  False
3  -60614.255859  -60670.737305  56816.972168 -60614.255859  92.418945 -60670.737305        0.0  56.481445        0.000000     1.0    -60614.255859         False          False  False
4  -60614.255859  -60614.255859  56881.034668 -60614.255859  56.481201 -60614.255859        0.0   0.000000      -35.937500     2.0    -60614.255859         False          False  False
5  -60540.205811  -60578.318359  56938.947510 -60540.205811  74.050049 -60578.318359        0.0  38.112549       -3.974609     1.0    -60614.255859         False          False  False
6  -60514.640137  -60536.230957  57003.009766 -60514.640137  63.678223 -60536.230957        0.0  21.590820      -14.346680     1.0    -60614.255859         False          False  False
7  -60469.477783  -60500.293457  57067.072266 -60469.477783  66.753174 -60500.293457        0.0  30.815674       -5.121826     1.0    -60614.255859         False          False  False
8  -60443.812256  -60464.355713  57067.072266 -60443.812256  56.481201 -60464.355713        0.0  20.543457      -79.456299     1.0    -60614.255859         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/10 17:49:42]  --------------------------------------------------------------------------------
[08/10 17:49:42]  Iteration: 261 (43 solution, 217 counterexamples)
[08/10 17:51:03]  Generator returned sat in 73.564961 secs.
[08/10 17:51:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:51:16]  Improved gap from 1/1600 to 0
[08/10 17:51:17]  Improved number of small numbers from 58 to 90 out of a max of 114
[08/10 17:51:17]  Verifer returned sat in 13.682545 secs.
[08/10 17:51:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -60261.690674  -60261.938082  56164.406494 -60261.690674  0.000732 -60261.938082        0.0  0.247408       -0.000488     6.0    -60261.938082            -1             -1     -1
1  -60261.435443  -60261.690186  56264.151611 -60261.435443  0.502639 -60261.690186        0.0  0.254743       -0.000140     1.0    -60261.938082         False           True  False
2  -60261.187012  -60261.187500  56363.902832 -60261.187012  0.503174 -60261.187500        0.0  0.000488       -0.000488     1.0    -60261.938082         False          False  False
3  -60261.185791  -60261.186415  56463.901611 -60261.185791  0.001709 -60261.186415        0.0  0.000624       -0.000488     1.0    -60261.185791         False          False  False
4  -60260.683082  -60261.185303  56563.399390 -60260.683082  0.503333 -60261.185303        0.0  0.502221        0.000000     1.0    -60261.185791         False          False  False
5  -60260.683082  -60260.683082  56663.398193 -60260.683082  0.010000 -60260.683082        0.0  0.000000       -0.001197     2.0    -60261.185791         False          False  False
6  -60260.673082  -60260.681137  56763.387451 -60260.673082  0.010000 -60260.681137        0.0  0.008056       -0.001939     1.0    -60261.185791         False          False  False
7  -60260.670582  -60260.671143  56863.359131 -60260.670582  0.010556 -60260.671143        0.0  0.000561       -0.027759     1.0    -60261.185791         False          False  False
8  -60260.642822  -60260.642822  56863.359131 -60260.642822  0.028320 -60260.642822        0.0  0.000000     -100.000000     1.0    -60261.185791         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 17:51:18]  --------------------------------------------------------------------------------
[08/10 17:51:18]  Iteration: 262 (43 solution, 218 counterexamples)
[08/10 17:53:27]  Generator returned sat in 122.121752 secs.
[08/10 17:53:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:53:34]  Verifer returned unsat in 6.013757 secs.
[08/10 17:53:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:53:34]  --------------------------------------------------------------------------------
[08/10 17:53:34]  Iteration: 263 (44 solution, 218 counterexamples)
[08/10 17:53:56]  Generator returned sat in 14.848167 secs.
[08/10 17:53:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:53:59]  Verifer returned unsat in 2.483349 secs.
[08/10 17:53:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:53:59]  --------------------------------------------------------------------------------
[08/10 17:53:59]  Iteration: 264 (45 solution, 218 counterexamples)
[08/10 17:54:19]  Generator returned sat in 12.790433 secs.
[08/10 17:54:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:54:21]  Verifer returned unsat in 1.806776 secs.
[08/10 17:54:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:54:21]  --------------------------------------------------------------------------------
[08/10 17:54:21]  Iteration: 265 (46 solution, 218 counterexamples)
[08/10 17:54:45]  Generator returned sat in 16.720472 secs.
[08/10 17:54:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:54:51]  Verifer returned unsat in 5.693738 secs.
[08/10 17:54:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:54:51]  --------------------------------------------------------------------------------
[08/10 17:54:51]  Iteration: 266 (47 solution, 218 counterexamples)
[08/10 17:55:11]  Generator returned sat in 12.820910 secs.
[08/10 17:55:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:55:15]  Verifer returned unsat in 3.303082 secs.
[08/10 17:55:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:55:15]  --------------------------------------------------------------------------------
[08/10 17:55:15]  Iteration: 267 (48 solution, 218 counterexamples)
[08/10 17:55:35]  Generator returned sat in 12.963196 secs.
[08/10 17:55:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:55:40]  Verifer returned unsat in 3.962672 secs.
[08/10 17:55:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:55:40]  --------------------------------------------------------------------------------
[08/10 17:55:40]  Iteration: 268 (49 solution, 218 counterexamples)
[08/10 17:56:03]  Generator returned sat in 15.471432 secs.
[08/10 17:56:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:56:08]  Verifer returned unsat in 5.081307 secs.
[08/10 17:56:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:56:08]  --------------------------------------------------------------------------------
[08/10 17:56:08]  Iteration: 269 (50 solution, 218 counterexamples)
[08/10 17:56:30]  Generator returned sat in 14.146493 secs.
[08/10 17:56:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:56:33]  Verifer returned unsat in 2.189484 secs.
[08/10 17:56:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:56:33]  --------------------------------------------------------------------------------
[08/10 17:56:33]  Iteration: 270 (51 solution, 218 counterexamples)
[08/10 17:56:55]  Generator returned sat in 15.404907 secs.
[08/10 17:56:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:56:59]  Verifer returned unsat in 2.667776 secs.
[08/10 17:56:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:56:59]  --------------------------------------------------------------------------------
[08/10 17:56:59]  Iteration: 271 (52 solution, 218 counterexamples)
[08/10 17:57:18]  Generator returned sat in 12.418089 secs.
[08/10 17:57:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:57:21]  Verifer returned unsat in 2.458891 secs.
[08/10 17:57:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:57:21]  --------------------------------------------------------------------------------
[08/10 17:57:21]  Iteration: 272 (53 solution, 218 counterexamples)
[08/10 17:57:41]  Generator returned sat in 12.401710 secs.
[08/10 17:57:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:57:44]  Verifer returned unsat in 1.959326 secs.
[08/10 17:57:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:57:44]  --------------------------------------------------------------------------------
[08/10 17:57:44]  Iteration: 273 (54 solution, 218 counterexamples)
[08/10 17:58:03]  Generator returned sat in 12.426004 secs.
[08/10 17:58:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:58:06]  Verifer returned unsat in 2.466778 secs.
[08/10 17:58:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:58:06]  --------------------------------------------------------------------------------
[08/10 17:58:06]  Iteration: 274 (55 solution, 218 counterexamples)
[08/10 17:58:27]  Generator returned sat in 13.377004 secs.
[08/10 17:58:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:58:30]  Verifer returned unsat in 2.093618 secs.
[08/10 17:58:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:58:30]  --------------------------------------------------------------------------------
[08/10 17:58:30]  Iteration: 275 (56 solution, 218 counterexamples)
[08/10 17:58:50]  Generator returned sat in 13.023874 secs.
[08/10 17:58:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:58:53]  Verifer returned unsat in 1.888453 secs.
[08/10 17:58:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:58:53]  --------------------------------------------------------------------------------
[08/10 17:58:53]  Iteration: 276 (57 solution, 218 counterexamples)
[08/10 17:59:12]  Generator returned sat in 12.759295 secs.
[08/10 17:59:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:59:16]  Verifer returned unsat in 2.424122 secs.
[08/10 17:59:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:59:16]  --------------------------------------------------------------------------------
[08/10 17:59:16]  Iteration: 277 (58 solution, 218 counterexamples)
[08/10 17:59:36]  Generator returned sat in 12.816051 secs.
[08/10 17:59:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:59:39]  Verifer returned unsat in 3.031027 secs.
[08/10 17:59:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:59:39]  --------------------------------------------------------------------------------
[08/10 17:59:39]  Iteration: 278 (59 solution, 218 counterexamples)
[08/10 17:59:59]  Generator returned sat in 12.879362 secs.
[08/10 18:00:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:00:03]  Verifer returned unsat in 3.399078 secs.
[08/10 18:00:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:00:03]  --------------------------------------------------------------------------------
[08/10 18:00:03]  Iteration: 279 (60 solution, 218 counterexamples)
[08/10 18:00:24]  Generator returned sat in 13.767246 secs.
[08/10 18:00:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:00:26]  Verifer returned unsat in 1.010653 secs.
[08/10 18:00:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:00:26]  --------------------------------------------------------------------------------
[08/10 18:00:26]  Iteration: 280 (61 solution, 218 counterexamples)
[08/10 18:00:46]  Generator returned sat in 13.148242 secs.
[08/10 18:00:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:00:48]  Verifer returned unsat in 0.845713 secs.
[08/10 18:00:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:00:48]  --------------------------------------------------------------------------------
[08/10 18:00:48]  Iteration: 281 (62 solution, 218 counterexamples)
[08/10 18:01:08]  Generator returned sat in 12.934964 secs.
[08/10 18:01:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:01:09]  Verifer returned unsat in 0.890144 secs.
[08/10 18:01:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:01:10]  --------------------------------------------------------------------------------
[08/10 18:01:10]  Iteration: 282 (63 solution, 218 counterexamples)
[08/10 18:01:29]  Generator returned sat in 12.806224 secs.
[08/10 18:01:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:01:31]  Verifer returned unsat in 0.877808 secs.
[08/10 18:01:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:01:31]  --------------------------------------------------------------------------------
[08/10 18:01:31]  Iteration: 283 (64 solution, 218 counterexamples)
[08/10 18:01:51]  Generator returned sat in 13.137924 secs.
[08/10 18:01:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:01:53]  Verifer returned unsat in 0.828671 secs.
[08/10 18:01:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:01:53]  --------------------------------------------------------------------------------
[08/10 18:01:53]  Iteration: 284 (65 solution, 218 counterexamples)
[08/10 18:02:15]  Generator returned sat in 15.371629 secs.
[08/10 18:02:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:02:17]  Verifer returned unsat in 0.548070 secs.
[08/10 18:02:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:02:17]  --------------------------------------------------------------------------------
[08/10 18:02:17]  Iteration: 285 (66 solution, 218 counterexamples)
[08/10 18:02:37]  Generator returned sat in 12.869093 secs.
[08/10 18:02:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:02:38]  Verifer returned unsat in 0.458948 secs.
[08/10 18:02:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:02:38]  --------------------------------------------------------------------------------
[08/10 18:02:38]  Iteration: 286 (67 solution, 218 counterexamples)
[08/10 18:02:58]  Generator returned sat in 13.318247 secs.
[08/10 18:02:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:03:01]  Verifer returned unsat in 1.770727 secs.
[08/10 18:03:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:03:01]  --------------------------------------------------------------------------------
[08/10 18:03:01]  Iteration: 287 (68 solution, 218 counterexamples)
[08/10 18:03:22]  Generator returned sat in 14.058534 secs.
[08/10 18:03:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:03:24]  Verifer returned unsat in 1.438570 secs.
[08/10 18:03:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:03:24]  --------------------------------------------------------------------------------
[08/10 18:03:24]  Iteration: 288 (69 solution, 218 counterexamples)
[08/10 18:05:11]  Generator returned sat in 99.136212 secs.
[08/10 18:05:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:05:13]  Improved gap from 1/20 to 46.875
[08/10 18:05:14]  Improved number of small numbers from 59 to 84 out of a max of 114
[08/10 18:05:14]  Verifer returned sat in 3.169184 secs.
[08/10 18:05:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -63819.842529  -63967.017090  56030.885254 -63819.842529  147.175049 -63967.017090       0.00  147.174561       99.999678     5.0    -63967.017090            -1             -1     -1
1  -63819.842529  -63866.717529  56030.885362 -63819.842529  147.075000 -63866.717529       0.00   46.875000       -0.000214     2.0    -63819.842529         False           True  False
2  -63719.742432  -63720.792316  56030.885362 -63719.742432  146.975098 -63720.792316       0.00    1.049884        0.099884     1.0    -63719.742432         False          False  False
3  -63499.592316  -63619.842316  56030.885362 -63499.592316  221.200000 -63619.842316     120.05    0.200000        0.200000     1.0    -63719.742432         False          False  False
4  -63388.692316  -63519.842316  56030.885362 -63388.692316  111.100000 -63519.842316     130.95    0.200000        0.200000     1.0    -63719.742432         False          False   True
5  -63332.842316  -63519.542316  56074.735596 -63332.842316   56.050000 -63519.542316     130.95   55.750000       -0.099767     1.0    -63719.742432         False          False   True
6  -63285.967316  -63463.692316  56127.860362 -63285.967316  102.625000 -63463.692316     130.95   46.775000       -0.100000     1.0    -63719.742432         False          False   True
7  -63252.667316  -63416.817316  56180.985352 -63252.667316   80.075000 -63416.817316     130.95   33.200000      -13.675011     1.0    -63719.742432         False          False   True
8  -63232.354816  -63369.942139  56180.985596 -63232.354816   53.512500 -63369.942139     130.95    6.637323      -93.362267     1.0    -63719.742432         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 18:05:15]  --------------------------------------------------------------------------------
[08/10 18:05:15]  Iteration: 289 (69 solution, 219 counterexamples)
[08/10 18:06:18]  Generator returned sat in 55.233063 secs.
[08/10 18:06:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:06:18]  Improved gap from 0 to 100
[08/10 18:06:19]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 18:06:19]  Verifer returned sat in 0.430687 secs.
[08/10 18:06:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -64103.492188  -64503.292236  56127.860352 -64103.492188  400.099854 -64503.292236    0.000000  399.800049      399.800049     2.0    -64503.292236            -1             -1   False
1  -64103.292236  -64503.292236  56127.860352 -64103.292236  400.000000 -64503.292236    0.000000  400.000000      300.000000     2.0    -64103.292236         False          False   False
2  -63903.392090  -64303.292236  56127.860352 -63903.392090  599.900146 -64303.292236    0.000000  399.900146      399.900146     3.0    -64103.292236         False          False   False
3  -63402.092285  -64303.292236  56127.860352 -63402.092285  901.199951 -64303.292236  101.000000  800.199951      700.199951     3.0    -64103.292236         False          False   False
4  -63302.092285  -64103.392334  56127.860352 -63302.092285  900.199951 -64103.392334  101.000000  700.300049      700.199951     4.0    -64103.292236         False          False    True
5  -63101.192383  -64103.292236  56127.860352 -63101.192383  901.199951 -64103.292236  201.899902  800.199951      700.199951     5.0    -64103.292236         False          False    True
6  -63001.192383  -63903.292236  56127.860352 -63001.192383  900.199951 -63903.292236  201.899902  700.199951      700.199951     4.0    -64103.292236         False           True    True
7  -62800.192383  -63903.192139  56127.860352 -62800.192383  901.199951 -63903.192139  302.899902  800.099854      700.199951     5.0    -64103.292236         False          False    True
8  -62700.092285  -63703.292480  56127.860352 -62700.092285  900.199951 -63703.292480  303.000000  700.200195      700.199951     6.0    -63003.092285          True           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=2868019/4096.[0m
[08/10 18:06:19]  --------------------------------------------------------------------------------
[08/10 18:06:19]  Iteration: 290 (69 solution, 220 counterexamples)
[08/10 18:08:32]  Generator returned sat in 125.430785 secs.
[08/10 18:08:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:08:40]  Improved gap from 0 to 1.5625
[08/10 18:08:42]  Improved number of small numbers from 34 to 42 out of a max of 114
[08/10 18:08:42]  Verifer returned sat in 8.953402 secs.
[08/10 18:08:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -42504.562988  -64531.137601  56127.860352 -42504.562988    0.021412 -64531.137601  21898.750877  127.823735       99.978371     9.0    -64531.137601            -1             -1     -1
1  -42503.021683  -64403.292236  56127.860352 -42503.021683  129.365040 -64403.292236  21898.750877    1.519676        1.519676     1.0    -64531.137601         False           True  False
2  -42404.562771  -64303.335060  56127.860352 -42404.562771   99.978588 -64303.335060  21898.750877    0.021412       -0.021412     1.0    -64303.313648         False          False  False
3  -42404.519947  -64303.292236  56226.297852 -42404.519947    0.064236 -64303.292236  21898.750877    0.021412       -1.541088     1.0    -64303.270824         False          False  False
4  -42290.086559  -64257.437460  56226.297852 -42290.086559  114.454800 -64257.437460  21910.102089   57.248812        1.541088     1.0    -64303.270824         False          False  False
5  -42290.086559  -64201.729736  56324.735352 -42290.086559   57.227400 -64201.729736  21910.102089    1.541088       -0.021412     2.0    -64303.270824         False          False   True
6  -42211.711285  -64200.167236  56346.381348 -42211.711285   79.916362 -64200.167236  21910.102089   78.353862       -0.000142     1.0    -64121.813374          True           True  False
7  -42198.044466  -64121.791962  56432.026855 -42198.044466   92.020681 -64121.791962  21910.102089   13.645407       -0.687815     1.0    -64121.813374         False          False  False
8  -42097.356783  -64107.458740  56432.026855 -42097.356783  114.333090 -64107.458740  21910.102089   99.999868       -0.000132     1.0    -64121.813374         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=2663/1728.[0m
[08/10 18:08:42]  --------------------------------------------------------------------------------
[08/10 18:08:42]  Iteration: 291 (69 solution, 221 counterexamples)
[08/10 18:09:52]  Generator returned sat in 62.140020 secs.
[08/10 18:09:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:09:56]  Improved gap from 0 to 14.0625
[08/10 18:09:56]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/10 18:09:56]  Verifer returned sat in 3.724361 secs.
[08/10 18:09:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -43791.721436  -64878.743652  56503.311768 -43791.721436    0.099854 -64878.743652  20706.572021  380.450195      380.450195     4.0    -64878.743652            -1             -1    True
1  -43791.721436  -64878.693359  56503.311768 -43791.721436    0.050049 -64878.693359  20706.572021  380.399902      280.450195     4.0    -64498.293457         False          False    True
2  -43791.671387  -64678.743652  56503.311768 -43791.671387  380.449951 -64678.743652  20706.572021  180.500244      180.500244     5.0    -64498.293457         False          False    True
3  -43791.671387  -64626.743652  56503.311768 -43791.671387  180.449951 -64626.743652  20706.572021  128.500244       80.500244     6.0    -64498.243408         False          False    True
4  -43667.171631  -64498.293701  56503.311768 -43667.171631  253.000000 -64498.293701  20706.572021  124.550049      105.000000     7.0    -64498.243408         False          False    True
5  -43667.171631  -64434.043701  56503.311768 -43667.171631  124.500000 -64434.043701  20706.572021   60.300049        5.000000     2.0    -64498.243408         False           True   False
6  -43667.171631  -64378.743408  56589.249023 -43667.171631   60.250000 -64378.743408  20706.572021    4.999756       -9.062744     3.0    -64498.243408         False          False   False
7  -43644.046387  -64364.680908  56675.186523 -43644.046387   28.125000 -64364.680908  20706.572021   14.062500        0.000000     1.0    -64498.243408         False          False   False
8  -43644.046387  -64350.618408  56675.186768 -43644.046387   12.062500 -64350.618408  20706.572021    0.000000      -99.999756     2.0    -64498.243408         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=287181/1024.[0m
[08/10 18:09:57]  --------------------------------------------------------------------------------
[08/10 18:09:57]  Iteration: 292 (69 solution, 222 counterexamples)
[08/10 18:10:19]  Generator returned sat in 14.898048 secs.
[08/10 18:10:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:10:23]  Improved gap from 1139/704 to 14.0625
[08/10 18:10:24]  Improved number of small numbers from 32 to 114 out of a max of 114
[08/10 18:10:24]  Verifer returned sat in 4.416788 secs.
[08/10 18:10:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -46681.486572  -67911.808838  58482.126709 -46681.486572    0.100098 -67911.808838  20789.271973  441.050293      400.000000     3.0    -67911.808838            -1             -1    True
1  -46681.486572  -67847.758545  58482.126709 -46681.486572  441.050049 -67847.758545  20789.271973  377.000000      300.000000     3.0    -67911.808838         False          False    True
2  -46617.436523  -67770.758545  58482.126709 -46617.436523  441.050049 -67770.758545  20789.271973  364.050049      264.050049     4.0    -67911.808838         False          False    True
3  -46617.436523  -67659.808838  58482.126709 -46617.436523    0.100000 -67659.808838  20789.271973  253.100342      164.050049     5.0    -67406.708496         False          False    True
4  -46617.436523  -67470.758789  58482.126709 -46617.436523  253.000000 -67470.758789  20789.271973   64.050293       64.050049     6.0    -67406.708496         False          False    True
5  -46556.986816  -67406.608887  58482.126709 -46556.986816  124.500000 -67406.608887  20789.271973   60.350098       24.499756     1.0    -67406.708496         False           True   False
6  -46556.986816  -67360.220947  58557.526611 -46556.986816   60.250000 -67360.220947  20789.271973   13.962158       -0.100342     2.0    -67406.708496         False          False   False
7  -46542.823975  -67346.158447  58643.464111 -46542.823975   28.125000 -67346.158447  20789.271973   14.062500        0.000000     1.0    -67406.708496         False          False   False
8  -46542.823975  -67332.095947  58729.401611 -46542.823975   12.062500 -67332.095947  20789.271973    0.000000      -14.062500     2.0    -67406.708496         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=614605/2048.[0m
[08/10 18:10:24]  --------------------------------------------------------------------------------
[08/10 18:10:24]  Iteration: 293 (69 solution, 223 counterexamples)
[08/10 18:11:51]  Generator returned sat in 79.237738 secs.
[08/10 18:11:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:11:56]  Improved gap from 3/3800 to 0
[08/10 18:11:57]  Improved number of small numbers from 47 to 65 out of a max of 114
[08/10 18:11:57]  Verifer returned sat in 5.812545 secs.
[08/10 18:11:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t     losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -46618.187182  -67408.006059  58382.673584 -46618.187182  0.545166 -67408.006059  20789.271973  0.546905        0.546875     7.0    -67408.006059            -1             -1     -1
1  -46618.187182  -67408.005256  58482.126709 -46618.187182  0.545410 -67408.005256  20789.271973  0.546101        0.000000     8.0    -67408.006059         False           True   True
2  -46618.187182  -67407.459155  58582.126709 -46618.187182  0.545410 -67407.459155  20789.271973  0.000000        0.000000     3.0    -67408.006059          True           True  False
3  -46618.179860  -67407.459155  58682.118652 -46618.179860  0.007321 -67407.459155  20789.271973  0.007321       -0.000735     3.0    -67407.451833         False          False  False
4  -46617.866825  -67407.451030  58781.805664 -46617.866825  0.320357 -67407.451030  20789.271973  0.312232       -0.000688     1.0    -67407.451833         False          False  False
5  -46617.847718  -67407.137939  58881.787245 -46617.847718  0.331339 -67407.137939  20789.271973  0.018249        0.000000     1.0    -67407.451833         False          False  False
6  -46617.847718  -67407.119690  58981.778076 -46617.847718  0.010000 -67407.119690  20789.271973  0.000000       -0.009169     2.0    -67407.451833         False          False  False
7  -46617.837718  -67407.110494  59081.777100 -46617.837718  0.010000 -67407.110494  20789.271973  0.000804       -0.000145     1.0    -67407.451833         False          False  False
8  -46617.827718  -67407.099854  59081.777344 -46617.827718  0.010804 -67407.099854  20789.271973  0.000163      -99.989901     1.0    -67407.451833         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=7/4096.[0m
[08/10 18:11:58]  --------------------------------------------------------------------------------
[08/10 18:11:58]  Iteration: 294 (69 solution, 224 counterexamples)
[08/10 18:13:24]  Generator returned sat in 79.001230 secs.
[08/10 18:13:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:13:28]  Improved gap from 0 to 48.4375
[08/10 18:13:30]  Improved number of small numbers from 32 to 53 out of a max of 114
[08/10 18:13:30]  Verifer returned sat in 4.735093 secs.
[08/10 18:13:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -46945.850342  -67410.269531  58435.845703 -46945.850342    0.050049 -67410.269531  20264.469473  199.949717       99.950001     2.0    -67410.269531            -1             -1     -1
1  -46945.850342  -67210.369690  58435.845703 -46945.850342    0.050049 -67210.369690  20264.469473    0.049876       -0.049999     3.0    -67410.269531         False          False   True
2  -46897.362718  -67210.269690  58487.408078 -46897.362718   48.537500 -67210.269690  20264.469473   48.437500        0.000000     1.0    -67410.269531          True           True  False
3  -46548.150218  -67110.719690  58487.408078 -46548.150218  397.650000 -67110.719690  20465.194473   97.375000       48.487500     1.0    -67410.269531         False          False  False
4  -46448.200218  -66961.882190  58487.408078 -46448.200218  197.325000 -66961.882190  20465.194473   48.487500       48.437500     1.0    -67410.269531         False          False   True
5  -46448.200218  -66961.832190  58538.970578 -46448.200218    1.500000 -66961.832190  20465.194473   48.437500        0.000000     2.0    -67410.269531         False          False   True
6  -46448.200218  -66913.394690  58590.532959 -46448.200218    1.500000 -66913.394690  20465.194473    0.000000      -48.437619     3.0    -67410.269531         False          False   True
7  -46346.787718  -66860.369690  58637.508057 -46346.787718  101.412500 -66860.369690  20465.194473   48.387500       -0.050021     1.0    -66811.982190          True           True  False
8  -46291.712718  -66811.932129  58682.482910 -46291.712718  103.462500 -66811.932129  20465.194473   55.024939       -0.000168     1.0    -66811.982190         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3879/80.[0m
[08/10 18:13:30]  --------------------------------------------------------------------------------
[08/10 18:13:30]  Iteration: 295 (69 solution, 225 counterexamples)
[08/10 18:15:13]  Generator returned sat in 95.562355 secs.
[08/10 18:15:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:15:14]  Improved gap from 1/1200 to 100
[08/10 18:15:14]  Improved number of small numbers from 32 to 114 out of a max of 114
[08/10 18:15:14]  Verifer returned sat in 0.700432 secs.
[08/10 18:15:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -47445.360107  -67960.769775  58487.407959 -47445.360107    0.100000 -67960.769775  20315.409180  200.000488      200.000488     9.0    -67960.769775            -1             -1     -1
1  -47445.360107  -67860.769775  58487.407959 -47445.360107    0.100098 -67860.769775  20315.409180  100.000488      100.000488     6.0    -67960.769775         False           True   True
2  -47445.360107  -67761.069580  58487.407959 -47445.360107  100.000000 -67761.069580  20315.409180    0.300293        0.000488     3.0    -67960.769775          True           True  False
3  -46645.160400  -67760.769531  58487.407959 -46645.160400  800.500000 -67760.769531  20315.509277  800.099854      700.100098     4.0    -67960.769775         False          False  False
4  -46645.160400  -67561.269775  58487.407959 -46645.160400  800.000000 -67561.269775  20315.509277  600.600098      600.100098     2.0    -66960.669678          True           True   True
5  -46445.260498  -67461.569580  58487.407959 -46445.260498  800.500000 -67461.569580  20315.509277  700.799805      700.000000     3.0    -66960.669678         False          False   True
6  -46345.060303  -67361.069824  58487.407959 -46345.060303  801.000000 -67361.069824  20315.609375  700.400146      700.100098     4.0    -66960.669678         False          False   True
7  -46244.960449  -67360.769531  58487.407959 -46244.960449  800.500000 -67360.769531  20315.709229  800.099854      700.100098     5.0    -66960.669678         False           True   True
8  -46244.960449  -67260.769531  58487.407959 -46244.960449  800.000000 -67260.769531  20315.709229  700.099854      600.100098     6.0    -66960.669678         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1433805/2048.[0m
[08/10 18:15:15]  --------------------------------------------------------------------------------
[08/10 18:15:15]  Iteration: 296 (69 solution, 226 counterexamples)
[08/10 18:18:27]  Generator returned sat in 184.453832 secs.
[08/10 18:18:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:18:30]  Improved gap from 0 to 0
[08/10 18:18:31]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/10 18:18:31]  Verifer returned sat in 3.122028 secs.
[08/10 18:18:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -45945.260498  -66460.669434  56887.307861 -45945.260498    0.099854 -66460.669434  20315.408936  200.000000      100.000244     2.0    -66460.669434            -1             -1   False
1  -45945.260498  -66360.669434  56887.307861 -45945.260498  199.899902 -66360.669434  20315.408936  100.000000        0.000244     2.0    -66460.669434         False          False   False
2  -45945.260498  -66260.669678  56987.307617 -45945.260498   99.900000 -66260.669678  20315.408936    0.000244        0.000000     3.0    -66260.669434         False          False   False
3  -45645.160645  -66260.569824  56987.307617 -45645.160645  300.100098 -66260.569824  20315.408936  300.000244      200.099854     1.0    -66260.669434         False          False   False
4  -45645.160645  -66109.469727  56987.307617 -45645.160645    1.000000 -66109.469727  20315.408936  148.900146      100.099854     2.0    -66260.669434         False          False   False
5  -45645.160645  -65961.669678  56987.307617 -45645.160645    1.000000 -65961.669678  20315.408936    1.100098        0.099854     3.0    -66260.669434         False          False   False
6  -45645.160645  -65960.669434  57087.207764 -45645.160645    1.000000 -65960.669434  20315.408936    0.099854        0.000000     4.0    -66260.669434         False          False   False
7  -45644.260498  -65959.769531  57186.207764 -45644.260498    1.000000 -65959.769531  20315.408936    0.100098       -0.099854     1.0    -66260.669434         False          False   False
8  -45643.360596  -65959.569580  57186.207764 -45643.360596    1.000000 -65959.569580  20315.408936    0.800049      -99.199951     1.0    -66260.669434         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205005/1024.[0m
[08/10 18:18:31]  --------------------------------------------------------------------------------
[08/10 18:18:31]  Iteration: 297 (69 solution, 227 counterexamples)
[08/10 18:19:08]  Generator returned sat in 28.852701 secs.
[08/10 18:19:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:19:09]  Verifer returned unsat in 0.913313 secs.
[08/10 18:19:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:19:09]  --------------------------------------------------------------------------------
[08/10 18:19:09]  Iteration: 298 (70 solution, 227 counterexamples)
[08/10 18:19:32]  Generator returned sat in 14.709044 secs.
[08/10 18:19:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:19:33]  Verifer returned unsat in 0.703482 secs.
[08/10 18:19:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:19:33]  --------------------------------------------------------------------------------
[08/10 18:19:33]  Iteration: 299 (71 solution, 227 counterexamples)
[08/10 18:23:03]  Generator returned sat in 202.694048 secs.
[08/10 18:23:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:23:05]  Improved gap from 1/40 to 23.4375
[08/10 18:23:05]  Improved number of small numbers from 43 to 114 out of a max of 114
[08/10 18:23:05]  Verifer returned sat in 1.344465 secs.
[08/10 18:23:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -46607.350830  -67022.659668  57549.297852 -46607.350830    0.100098 -67022.659668  20315.408691   99.900146       99.900146     2.0    -67022.659668            -1             -1   False
1  -46607.051025  -66922.659668  57549.297852 -46607.051025  100.199951 -66922.659668  20315.408691    0.199951        0.199951     1.0    -67022.659668         False          False   False
2  -46607.051025  -66922.659668  57549.297852 -46607.051025    0.100098 -66922.659668  20315.408691    0.199951      -99.800049     1.0    -66922.459717         False          False   False
3  -46160.175781  -66820.734863  57549.297852 -46160.175781  447.075195 -66820.734863  20462.483887  198.075195      100.000000     1.0    -66922.459717         False          False   False
4  -46134.713379  -66622.659668  57549.297852 -46134.713379  223.537598 -66622.659668  20462.483887   25.462402       25.462402     2.0    -66922.459717         False          False    True
5  -46134.713379  -66622.659668  57623.835449 -46134.713379    0.500000 -66622.659668  20462.483887   25.462402        0.000000     2.0    -66922.459717         False          False    True
6  -46134.713379  -66597.197266  57699.397949 -46134.713379    0.500000 -66597.197266  20462.483887    0.000000      -24.437500     3.0    -66922.459717         False          False    True
7  -45910.175781  -66572.759766  57699.397949 -45910.175781  224.537598 -66572.759766  20462.583984  200.000000      100.000000     1.0    -66372.759766          True           True   False
8  -45910.175781  -66472.759521  57699.397949 -45910.175781  112.268799 -66472.759521  20462.583984   99.999756        0.000000     2.0    -66372.759766         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=100.[0m
[08/10 18:23:06]  --------------------------------------------------------------------------------
[08/10 18:23:06]  Iteration: 300 (71 solution, 228 counterexamples)
[08/10 18:25:22]  Generator returned sat in 129.248120 secs.
[08/10 18:25:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:25:23]  Improved gap from 0 to 100
[08/10 18:25:24]  Improved number of small numbers from 51 to 114 out of a max of 114
[08/10 18:25:24]  Verifer returned sat in 0.601111 secs.
[08/10 18:25:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -47060.775635  -66923.459717  57450.097656 -47060.775635    0.099854 -66923.459717  19762.783936   99.900146       99.900146     9.0    -66923.459717            -1             -1     -1
1  -46959.275635  -66823.459717  57450.097656 -46959.275635  201.400146 -66823.459717  19762.783936  101.400146      101.400146     1.0    -66923.459717         False           True  False
2  -46959.275635  -66823.459717  57450.097656 -46959.275635    0.100098 -66823.459717  19762.783936  101.400146        1.400146     1.0    -66722.059570         False          False  False
3  -46160.176025  -66721.959473  57450.097656 -46160.176025  900.499756 -66721.959473  19763.183838  798.599609      700.099854     1.0    -66722.059570         False          False  False
4  -46060.275879  -66622.359619  57450.097656 -46060.275879  898.499756 -66622.359619  19763.183838  798.899902      700.000000     2.0    -66722.059570         False          False   True
5  -45960.176025  -66522.959473  57450.097656 -45960.176025  898.999756 -66522.959473  19763.183838  799.599609      700.099854     3.0    -66722.059570         False          False   True
6  -45860.275879  -66423.459473  57450.097656 -45860.275879  899.499756 -66423.459473  19763.183838  799.999756      700.000000     4.0    -66722.059570         False          False   True
7  -45760.275879  -66323.459473  57450.097656 -45760.275879  899.999756 -66323.459473  19763.183838  799.999756      700.000000     5.0    -66722.059570         False          False   True
8  -45659.775879  -66223.459473  57450.097656 -45659.775879  900.499756 -66223.459473  19763.583984  800.099609      700.099854     6.0    -66722.059570         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2867609/4096.[0m
[08/10 18:25:24]  --------------------------------------------------------------------------------
[08/10 18:25:24]  Iteration: 301 (71 solution, 229 counterexamples)
[08/10 18:26:30]  Generator returned sat in 58.586172 secs.
[08/10 18:26:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:26:32]  Improved number of small numbers from 44 to 113 out of a max of 113
[08/10 18:26:32]  Verifer returned sat in 0.625304 secs.
[08/10 18:26:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -47358.226074  -67121.059814  57547.697754 -47358.226074    0.050000 -67121.059814  19762.783691    0.050049      -99.949951     9.0    -67121.059814            -1             -1     -1
1  -46958.325928  -66921.059814  57547.697754 -46958.325928  399.950195 -66921.059814  19762.783691  199.950195      199.950195     1.0    -67121.059814         False           True  False
2  -46758.376221  -66821.059814  57547.697754 -46758.376221  399.899902 -66821.059814  19762.783691  299.899902      299.899902     2.0    -66521.159912         False          False  False
3  -46160.176270  -66721.059814  57547.697754 -46160.176270  898.099854 -66721.059814  19762.833740  798.049805      798.049805     2.0    -66521.159912         False          False  False
4  -46061.126221  -66721.009766  57547.697754 -46061.126221  897.099854 -66721.009766  19762.833740  897.049805      797.099854     3.0    -66521.159912         False          False   True
5  -46059.076172  -66521.059814  57547.697754 -46059.076172  899.099854 -66521.059814  19762.833740  699.149902      699.149902     3.0    -66521.159912         False          False   True
6  -45857.126221  -66423.059814  57547.697754 -45857.126221  901.099854 -66423.059814  19765.883789  800.049805      798.049805     4.0    -66521.159912         False          False   True
7  -45757.076172  -66323.059814  57547.697754 -45757.076172  900.099854 -66323.059814  19765.933838  800.049805      798.049805     5.0    -65523.010010          True           True   True
8  -45658.026123  -66321.059814  57547.697754 -45658.026123  899.099854 -66321.059814  19765.933838  897.099854      797.099854     6.0    -65523.010010         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=817203/1024.[0m
[08/10 18:26:32]  --------------------------------------------------------------------------------
[08/10 18:26:32]  Iteration: 302 (71 solution, 230 counterexamples)
[08/10 18:27:10]  Generator returned sat in 30.352515 secs.
[08/10 18:27:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:27:11]  Improved number of small numbers from 77 to 113 out of a max of 113
[08/10 18:27:11]  Verifer returned sat in 0.275808 secs.
[08/10 18:27:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -47358.226318  -67121.059814  57547.697754 -47358.226318    0.049805 -67121.059814  19762.808838    0.024658      -99.975342     9.0    -67121.059814            -1             -1     -1
1  -46959.276123  -66921.059814  57547.697754 -46959.276123  398.974854 -66921.059814  19762.808838  198.974854      198.974854     1.0    -67121.059814         False           True   True
2  -46759.301025  -66822.084961  57547.697754 -46759.301025  398.949951 -66822.084961  19762.808838  299.975098      298.949951     2.0    -66522.109863         False          False   True
3  -46160.176514  -66722.059814  57547.697754 -46160.176514  899.099609 -66722.059814  19762.833740  799.049561      798.049561     2.0    -66522.109863         False          False   True
4  -46061.126465  -66721.059814  57547.697754 -46061.126465  898.099609 -66721.059814  19762.833740  897.099609      797.099609     3.0    -66522.109863         False          False   True
5  -46058.626465  -66521.059814  57547.697754 -46058.626465  899.599609 -66521.059814  19762.833740  699.599609      699.599609     3.0    -66522.109863         False          False   True
6  -45857.126465  -66423.034912  57547.697754 -45857.126465  901.099609 -66423.034912  19765.883789  800.024658      798.049561     4.0    -66522.109863         False          False   True
7  -45757.051514  -66323.059814  57547.697754 -45757.051514  900.099609 -66323.059814  19765.958740  800.049561      798.049561     5.0    -65523.010254          True           True   True
8  -45658.001465  -66321.059814  57547.697754 -45658.001465  899.099609 -66321.059814  19765.958740  897.099609      797.099609     6.0    -65523.010254         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=3268811/4096.[0m
[08/10 18:27:12]  --------------------------------------------------------------------------------
[08/10 18:27:12]  Iteration: 303 (71 solution, 231 counterexamples)
[08/10 18:30:35]  Generator returned sat in 195.640949 secs.
[08/10 18:30:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:30:36]  Verifer returned unsat in 0.817753 secs.
[08/10 18:30:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:30:37]  --------------------------------------------------------------------------------
[08/10 18:30:37]  Iteration: 304 (72 solution, 231 counterexamples)
[08/10 18:31:00]  Generator returned sat in 16.090863 secs.
[08/10 18:31:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:31:01]  Verifer returned unsat in 0.672198 secs.
[08/10 18:31:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:31:01]  --------------------------------------------------------------------------------
[08/10 18:31:01]  Iteration: 305 (73 solution, 231 counterexamples)
[08/10 18:31:30]  Generator returned sat in 21.147219 secs.
[08/10 18:31:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:31:32]  Verifer returned unsat in 0.657278 secs.
[08/10 18:31:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:31:32]  --------------------------------------------------------------------------------
[08/10 18:31:32]  Iteration: 306 (74 solution, 231 counterexamples)
[08/10 18:33:20]  Generator returned sat in 100.987124 secs.
[08/10 18:33:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:33:30]  Improved gap from 1/1000 to 0
[08/10 18:33:32]  Improved number of small numbers from 33 to 47 out of a max of 114
[08/10 18:33:32]  Verifer returned sat in 11.195203 secs.
[08/10 18:33:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t     losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50877.356445  -65757.768587  55858.670654 -50877.356445  0.000833 -65757.768587  14880.158185  0.253957        0.253925     1.0    -65757.768587            -1             -1     -1
1  -50877.354153  -65757.514004  55958.413818 -50877.354153  0.256250 -65757.514004  14880.158185  0.001667       -0.000618     1.0    -65757.768587         False          False   True
2  -50877.100403  -65757.511504  56058.159912 -50877.100403  0.255417 -65757.511504  14880.158185  0.252917       -0.000775     1.0    -65757.258587         False          False   True
3  -50877.098736  -65757.257754  56158.149902 -50877.098736  0.254583 -65757.257754  14880.158185  0.000833       -0.009118     1.0    -65757.256921         False          False   True
4  -50877.088736  -65757.247754  56258.148193 -50877.088736  0.010833 -65757.247754  14880.158185  0.000833       -0.000827     1.0    -65757.256921         False          False   True
5  -50877.079569  -65757.246087  56358.139160 -50877.079569  0.010000 -65757.246087  14880.158185  0.008333       -0.000693     1.0    -65757.256921         False          False   True
6  -50877.077903  -65757.236921  56458.129883 -50877.077903  0.010000 -65757.236921  14880.158185  0.000833       -0.008304     1.0    -65757.256921         False          False   True
7  -50877.068736  -65757.227754  56558.128906 -50877.068736  0.010000 -65757.227754  14880.158185  0.000833       -0.000114     1.0    -65757.256921         False          False   True
8  -50877.059569  -65757.226074  56558.129150 -50877.059569  0.010000 -65757.226074  14880.158185  0.008320      -99.990703     1.0    -65757.256921         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/10 18:33:33]  --------------------------------------------------------------------------------
[08/10 18:33:33]  Iteration: 307 (74 solution, 232 counterexamples)
[08/10 18:34:40]  Generator returned sat in 59.679593 secs.
[08/10 18:34:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:34:43]  Verifer returned unsat in 2.028611 secs.
[08/10 18:34:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:34:43]  --------------------------------------------------------------------------------
[08/10 18:34:43]  Iteration: 308 (75 solution, 232 counterexamples)
[08/10 18:35:05]  Generator returned sat in 14.881192 secs.
[08/10 18:35:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:35:06]  Verifer returned unsat in 0.495504 secs.
[08/10 18:35:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:35:06]  --------------------------------------------------------------------------------
[08/10 18:35:06]  Iteration: 309 (76 solution, 232 counterexamples)
[08/10 18:35:29]  Generator returned sat in 15.103124 secs.
[08/10 18:35:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:35:31]  Verifer returned unsat in 1.261171 secs.
[08/10 18:35:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:35:31]  --------------------------------------------------------------------------------
[08/10 18:35:31]  Iteration: 310 (77 solution, 232 counterexamples)
[08/10 18:35:54]  Generator returned sat in 15.369875 secs.
[08/10 18:35:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:35:57]  Verifer returned unsat in 2.658220 secs.
[08/10 18:35:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:35:57]  --------------------------------------------------------------------------------
[08/10 18:35:57]  Iteration: 311 (78 solution, 232 counterexamples)
[08/10 18:36:20]  Generator returned sat in 14.733467 secs.
[08/10 18:36:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:36:22]  Verifer returned unsat in 1.888910 secs.
[08/10 18:36:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:36:22]  --------------------------------------------------------------------------------
[08/10 18:36:22]  Iteration: 312 (79 solution, 232 counterexamples)
[08/10 18:36:45]  Generator returned sat in 15.356476 secs.
[08/10 18:36:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:36:48]  Verifer returned unsat in 2.181998 secs.
[08/10 18:36:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:36:48]  --------------------------------------------------------------------------------
[08/10 18:36:48]  Iteration: 313 (80 solution, 232 counterexamples)
[08/10 18:37:11]  Generator returned sat in 15.409359 secs.
[08/10 18:37:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:37:15]  Verifer returned unsat in 2.554172 secs.
[08/10 18:37:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:37:15]  --------------------------------------------------------------------------------
[08/10 18:37:15]  Iteration: 314 (81 solution, 232 counterexamples)
[08/10 18:37:39]  Generator returned sat in 17.008379 secs.
[08/10 18:37:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:37:42]  Verifer returned unsat in 2.473699 secs.
[08/10 18:37:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:37:42]  --------------------------------------------------------------------------------
[08/10 18:37:42]  Iteration: 315 (82 solution, 232 counterexamples)
[08/10 18:38:05]  Generator returned sat in 14.864490 secs.
[08/10 18:38:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:38:07]  Verifer returned unsat in 1.893905 secs.
[08/10 18:38:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:38:07]  --------------------------------------------------------------------------------
[08/10 18:38:07]  Iteration: 316 (83 solution, 232 counterexamples)
[08/10 18:38:30]  Generator returned sat in 15.131545 secs.
[08/10 18:38:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:38:33]  Verifer returned unsat in 2.232058 secs.
[08/10 18:38:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:38:33]  --------------------------------------------------------------------------------
[08/10 18:38:33]  Iteration: 317 (84 solution, 232 counterexamples)
[08/10 18:38:56]  Generator returned sat in 15.028469 secs.
[08/10 18:38:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:38:59]  Verifer returned unsat in 2.596283 secs.
[08/10 18:38:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:38:59]  --------------------------------------------------------------------------------
[08/10 18:38:59]  Iteration: 318 (85 solution, 232 counterexamples)
[08/10 18:39:22]  Generator returned sat in 14.960264 secs.
[08/10 18:39:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:39:24]  Verifer returned unsat in 2.219979 secs.
[08/10 18:39:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:39:25]  --------------------------------------------------------------------------------
[08/10 18:39:25]  Iteration: 319 (86 solution, 232 counterexamples)
[08/10 18:39:49]  Generator returned sat in 17.195616 secs.
[08/10 18:39:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:39:53]  Verifer returned unsat in 3.028738 secs.
[08/10 18:39:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:39:53]  --------------------------------------------------------------------------------
[08/10 18:39:53]  Iteration: 320 (87 solution, 232 counterexamples)
[08/10 18:40:19]  Generator returned sat in 18.428299 secs.
[08/10 18:40:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:40:21]  Verifer returned unsat in 1.686176 secs.
[08/10 18:40:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:40:22]  --------------------------------------------------------------------------------
[08/10 18:40:22]  Iteration: 321 (88 solution, 232 counterexamples)
[08/10 18:40:47]  Generator returned sat in 18.268146 secs.
[08/10 18:40:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:40:49]  Verifer returned unsat in 0.894251 secs.
[08/10 18:40:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:40:49]  --------------------------------------------------------------------------------
[08/10 18:40:49]  Iteration: 322 (89 solution, 232 counterexamples)
[08/10 18:41:12]  Generator returned sat in 14.961696 secs.
[08/10 18:41:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:41:13]  Verifer returned unsat in 0.867856 secs.
[08/10 18:41:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:41:13]  --------------------------------------------------------------------------------
[08/10 18:41:13]  Iteration: 323 (90 solution, 232 counterexamples)
[08/10 18:41:57]  Generator returned sat in 36.416552 secs.
[08/10 18:41:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:42:01]  Verifer returned unsat in 2.540046 secs.
[08/10 18:42:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:42:01]  --------------------------------------------------------------------------------
[08/10 18:42:01]  Iteration: 324 (91 solution, 232 counterexamples)
[08/10 18:42:23]  Generator returned sat in 15.238161 secs.
[08/10 18:42:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:42:27]  Verifer returned unsat in 2.302974 secs.
[08/10 18:42:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:42:27]  --------------------------------------------------------------------------------
[08/10 18:42:27]  Iteration: 325 (92 solution, 232 counterexamples)
[08/10 18:42:51]  Generator returned sat in 16.715046 secs.
[08/10 18:42:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:42:52]  Verifer returned unsat in 0.698497 secs.
[08/10 18:42:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:42:52]  --------------------------------------------------------------------------------
[08/10 18:42:52]  Iteration: 326 (93 solution, 232 counterexamples)
[08/10 18:43:16]  Generator returned sat in 16.510512 secs.
[08/10 18:43:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:43:18]  Verifer returned unsat in 0.580848 secs.
[08/10 18:43:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:43:18]  --------------------------------------------------------------------------------
[08/10 18:43:18]  Iteration: 327 (94 solution, 232 counterexamples)
[08/10 18:43:42]  Generator returned sat in 17.156399 secs.
[08/10 18:43:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:43:45]  Verifer returned unsat in 1.815211 secs.
[08/10 18:43:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:43:45]  --------------------------------------------------------------------------------
[08/10 18:43:45]  Iteration: 328 (95 solution, 232 counterexamples)
[08/10 18:44:11]  Generator returned sat in 18.831465 secs.
[08/10 18:44:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:44:13]  Verifer returned unsat in 1.363913 secs.
[08/10 18:44:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:44:13]  --------------------------------------------------------------------------------
[08/10 18:44:13]  Iteration: 329 (96 solution, 232 counterexamples)
[08/10 18:44:37]  Generator returned sat in 16.194083 secs.
[08/10 18:44:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:44:39]  Verifer returned unsat in 1.427400 secs.
[08/10 18:44:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:44:39]  --------------------------------------------------------------------------------
[08/10 18:44:39]  Iteration: 330 (97 solution, 232 counterexamples)
[08/10 18:46:17]  Generator returned sat in 89.329705 secs.
[08/10 18:46:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:46:29]  Improved gap from 1/2400 to 0
[08/10 18:46:31]  Improved number of small numbers from 59 to 76 out of a max of 114
[08/10 18:46:31]  Verifer returned sat in 12.982100 secs.
[08/10 18:46:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -58599.530029  -58649.261994  54397.907715 -58599.530029    0.017822 -58649.261994   0.000000   49.731965        0.017665     9.0    -58649.261994            -1             -1     -1
1  -58599.530029  -58599.547607  54497.889648 -58599.530029    0.018066 -58599.547607   0.000000    0.017578       -0.000402     9.0    -58649.261994         False           True  False
2  -58548.690430  -58548.708422  54497.889893 -58548.690430   50.857178 -58548.708422   0.000000    0.017993      -49.160558     1.0    -58649.261994          True           True  False
3  -58499.511994  -58499.529851  54597.872015 -58499.511994   49.196429 -58499.529851   0.000000    0.017857        0.000000     1.0    -58499.511994         False          False  False
4  -58398.565565  -58448.494137  54597.872015 -58398.565565  100.964286 -58448.494137   0.464286   49.464286        0.482143     1.0    -58499.511994         False          False  False
5  -58398.547708  -58399.404851  54697.372015 -58398.547708   49.482143 -58399.404851   0.464286    0.392857        0.000000     2.0    -58499.511994         False          False   True
6  -58298.047708  -58347.993896  54697.372015 -58298.047708  100.892857 -58347.993896   0.482143   49.464046        0.482143     1.0    -58298.529851          True           True  False
7  -58298.047708  -58299.011994  54796.872070 -58298.047708   49.446429 -58299.011994   0.482143    0.482143       -0.017802     2.0    -58298.529851         False          False   True
8  -58197.565565  -58298.511963  54796.872070 -58197.565565  100.964286 -58298.511963   0.482143  100.464255        0.464341     1.0    -58298.529851         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=27/56.[0m
[08/10 18:46:31]  --------------------------------------------------------------------------------
[08/10 18:46:31]  Iteration: 331 (97 solution, 233 counterexamples)
[08/10 18:50:32]  Generator returned sat in 233.567794 secs.
[08/10 18:50:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:50:35]  Improved gap from 0 to 0
[08/10 18:50:35]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 18:50:35]  Verifer returned sat in 1.858102 secs.
[08/10 18:50:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -58549.769287  -58649.769287  54497.875488 -58549.769287    0.001221 -58649.769287   0.000000  100.000000        0.000000     9.0    -58649.769287            -1             -1     -1
1  -58549.766846  -58549.768311  54497.875488 -58549.766846  100.002441 -58549.768311   0.000000    0.001465      -99.997559     1.0    -58649.769287         False           True  False
2  -58449.766846  -58449.768311  54597.873047 -58449.766846  100.001465 -58449.768311   0.000000    0.001465        0.000000     1.0    -58449.766846         False          False  False
3  -58349.766846  -58449.016846  54597.873047 -58349.766846  100.001465 -58449.016846   0.000000   99.250000        0.000000     1.0    -58449.766846         False          False  False
4  -58249.264404  -58249.768311  54597.873047 -58249.264404  199.752441 -58249.768311   0.001221    0.502686        0.501221     1.0    -58449.766846         False          False  False
5  -58249.264404  -58249.766846  54697.371826 -58249.264404    0.010000 -58249.766846   0.001221    0.501221        0.000000     2.0    -58449.766846         False          False   True
6  -58249.264404  -58249.265625  54796.873291 -58249.264404    0.500000 -58249.265625   0.001221    0.000000       -0.498535     3.0    -58449.766846         False          False   True
7  -58248.764404  -58248.767090  54896.871826 -58248.764404    0.500000 -58248.767090   0.001221    0.001465        0.000000     1.0    -58449.766846         False          False   True
8  -58248.265869  -58248.765625  54896.871826 -58248.265869    0.500000 -58248.765625   0.001221    0.498535      -99.501465     2.0    -58449.766846         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2053/4096.[0m
[08/10 18:50:36]  --------------------------------------------------------------------------------
[08/10 18:50:36]  Iteration: 332 (97 solution, 234 counterexamples)
[08/10 18:52:18]  Generator returned sat in 94.841229 secs.
[08/10 18:52:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:52:24]  Improved gap from 0 to 35.9375
[08/10 18:52:25]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 18:52:25]  Verifer returned sat in 5.886887 secs.
[08/10 18:52:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -58718.014404  -58850.576660  54417.185303 -58718.014404   0.049805 -58850.576660        0.0  132.562256      100.049805     9.0    -58850.576660            -1             -1     -1
1  -58718.014404  -58718.064209  54417.185303 -58718.014404   0.199951 -58718.064209        0.0    0.049805        0.049805     5.0    -58850.576660         False           True  False
2  -58717.914307  -58717.964355  54481.147949 -58717.914307   0.149902 -58717.964355        0.0    0.050049      -35.887451     1.0    -58717.914307         False          False  False
3  -58681.977051  -58682.026855  54545.210449 -58681.977051  35.987305 -58682.026855        0.0    0.049805      -35.887695     1.0    -58717.914307         False          False  False
4  -58598.751953  -58637.889404  54597.873047 -58598.751953  83.274902 -58637.889404        0.0   39.137451        0.000000     1.0    -58717.914307         False          False  False
5  -58598.751953  -58598.751953  54661.935547 -58598.751953  39.087402 -58598.751953        0.0    0.000000      -35.937500     2.0    -58717.914307         False          False  False
6  -58540.145752  -58559.814453  54722.998047 -58540.145752  58.606201 -58559.814453        0.0   19.668701      -16.268799     1.0    -58717.914307         False          False  False
7  -58499.708252  -58523.876709  54787.060303 -58499.708252  60.106201 -58523.876709        0.0   24.168457      -11.769043     1.0    -58717.914307         False          False  False
8  -58467.870361  -58487.939209  54787.060303 -58467.870361  56.006348 -58487.939209        0.0   20.068848      -79.931152     1.0    -58717.914307         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409/4096.[0m
[08/10 18:52:25]  --------------------------------------------------------------------------------
[08/10 18:52:25]  Iteration: 333 (97 solution, 235 counterexamples)
[08/10 18:55:33]  Generator returned sat in 179.725489 secs.
[08/10 18:55:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:55:35]  Improved gap from 1/2400 to 48.4375
[08/10 18:55:36]  Improved number of small numbers from 60 to 79 out of a max of 114
[08/10 18:55:36]  Verifer returned sat in 2.571580 secs.
[08/10 18:55:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -64615.302979  -64615.307617  56524.856445 -64615.302979    0.004883 -64615.307617   0.000000   0.004639       -0.005127     5.0    -64615.307617            -1             -1   False
1  -64515.298096  -64615.297852  56524.856605 -64515.298096  100.009521 -64615.297852   0.000000  99.999756       -0.000085     1.0    -64615.307617         False          False   False
2  -64415.292969  -64415.298011  56524.856605 -64415.292969  200.004883 -64415.298011   0.000000   0.005042        0.005042     1.0    -64615.307617         False          False   False
3  -64218.269165  -64315.298011  56524.856605 -64218.269165  197.028846 -64315.298011  97.019231   0.009615        0.009615     1.0    -64315.288395         False          False   False
4  -64118.264357  -64215.298011  56524.856605 -64118.264357  100.014423 -64215.298011  97.024038   0.009615        0.009615     1.0    -64315.288395         False          False    True
5  -64066.766761  -64215.283588  56573.349365 -64066.766761   51.507212 -64215.283588  97.024038  51.492788       -0.000028     1.0    -64315.288395         False          False    True
6  -64016.752338  -64162.209069  56623.330162 -64016.752338  101.507212 -64162.209069  97.024038  48.432692       -0.004808     1.0    -64315.288395         False          False    True
7  -63987.140559  -64113.771569  56674.861328 -63987.140559   78.044471 -64113.771569  97.024038  29.606971      -18.861863     1.0    -64315.288395         False          False    True
8  -63964.484309  -64065.302734  56674.861572 -63964.484309   52.263221 -64065.302734  97.024038   3.794387      -96.205369     1.0    -64315.288395         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/104.[0m
[08/10 18:55:37]  --------------------------------------------------------------------------------
[08/10 18:55:37]  Iteration: 334 (97 solution, 236 counterexamples)
[08/10 18:56:17]  Generator returned sat in 33.190758 secs.
[08/10 18:56:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 18:56:21]  Improved gap from 1/10 to 0
[08/10 18:56:21]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 18:56:21]  Verifer returned sat in 2.776045 secs.
[08/10 18:56:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -64320.701660  -64574.001465  56775.949951 -64320.701660    0.100098 -64574.001465        0.0  253.299805      253.299805     4.0    -64574.001465            -1             -1    True
1  -64320.701660  -64474.001465  56775.949951 -64320.701660  153.200195 -64474.001465        0.0  153.299805      153.299805     4.0    -64574.001465         False          False    True
2  -64320.701660  -64474.001465  56775.949951 -64320.701660  153.200195 -64474.001465        0.0  153.299805       53.299805     4.0    -64574.001465         False          False    True
3  -64320.701660  -64374.001465  56822.650146 -64320.701660  153.100098 -64374.001465        0.0   53.299805        0.000000     5.0    -64320.701660         False          False    True
4  -64172.501465  -64320.701660  56822.650146 -64172.501465  201.500000 -64320.701660        0.0  148.200195       48.200195     6.0    -64320.701660         False          False    True
5  -64172.501465  -64173.801514  56874.350342 -64172.501465    1.500000 -64173.801514        0.0    1.300049       -0.099609     2.0    -64320.701660         False           True   False
6  -64172.301514  -64172.401611  56972.850098 -64172.301514    1.500000 -64172.401611        0.0    0.100098       -1.399902     1.0    -64320.701660         False          False   False
7  -64170.901611  -64170.901611  57072.850098 -64170.901611    1.500000 -64170.901611        0.0    0.000000        0.000000     1.0    -64320.701660         False          False   False
8  -64169.401611  -64170.801758  57072.850098 -64169.401611    1.500000 -64170.801758        0.0    1.400146      -98.500000     1.0    -64320.701660         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=767/5.[0m
[08/10 18:56:22]  --------------------------------------------------------------------------------
[08/10 18:56:22]  Iteration: 335 (97 solution, 237 counterexamples)
[08/10 19:00:13]  Generator returned sat in 223.800002 secs.
[08/10 19:00:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:00:15]  Verifer returned unsat in 1.641449 secs.
[08/10 19:00:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:00:16]  --------------------------------------------------------------------------------
[08/10 19:00:16]  Iteration: 336 (98 solution, 237 counterexamples)
[08/10 19:00:39]  Generator returned sat in 15.599969 secs.
[08/10 19:00:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:00:41]  Verifer returned unsat in 1.664502 secs.
[08/10 19:00:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:00:41]  --------------------------------------------------------------------------------
[08/10 19:00:41]  Iteration: 337 (99 solution, 237 counterexamples)
[08/10 19:01:57]  Generator returned sat in 68.333858 secs.
[08/10 19:01:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:02:03]  Improved gap from 0 to 1.5625
[08/10 19:02:03]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 19:02:03]  Verifer returned sat in 4.722348 secs.
[08/10 19:02:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -64324.364258  -64325.489258  56430.462402 -64324.364258  0.100098 -64325.489258        0.0  1.125000        1.124756     2.0    -64325.489258            -1             -1   False
1  -64322.383057  -64324.264160  56527.356445 -64322.383057  3.106201 -64324.264160        0.0  1.881104        0.000000     1.0    -64325.489258         False          False   False
2  -64322.383057  -64322.383057  56625.793945 -64322.383057  1.781250 -64322.383057        0.0  0.000000       -1.562500     2.0    -64322.383057         False          False   False
3  -64320.701904  -64320.801758  56724.212646 -64320.701904  1.681152 -64320.801758        0.0  0.099854       -1.462646     1.0    -64320.701904         False          False   False
4  -64318.114258  -64319.239258  56822.650146 -64318.114258  2.687500 -64319.239258        0.0  1.125000       -0.437500     1.0    -64320.701904         False          False   False
5  -64316.214355  -64317.676758  56921.087646 -64316.214355  3.024902 -64317.676758        0.0  1.462402       -0.100098     1.0    -64320.701904         False          False   False
6  -64314.970459  -64316.114258  57019.525146 -64314.970459  2.706299 -64316.114258        0.0  1.143799       -0.418701     1.0    -64320.701904         False          False   False
7  -64313.426758  -64314.551758  57117.962646 -64313.426758  2.687500 -64314.551758        0.0  1.125000       -0.437500     1.0    -64320.701904         False          False   False
8  -64311.864258  -64312.989014  57117.962646 -64311.864258  2.687500 -64312.989014        0.0  1.124756      -98.875000     1.0    -64320.701904         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/10 19:02:03]  --------------------------------------------------------------------------------
[08/10 19:02:03]  Iteration: 338 (99 solution, 238 counterexamples)
[08/10 19:04:12]  Generator returned sat in 120.592798 secs.
[08/10 19:04:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:04:17]  Improved gap from 0 to 0
[08/10 19:04:18]  Improved number of small numbers from 50 to 79 out of a max of 114
[08/10 19:04:18]  Verifer returned sat in 5.688674 secs.
[08/10 19:04:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -65057.520752  -65057.521484  57135.260986 -65057.520752  0.000488 -65057.521484        0.0  0.000732        0.000660     9.0    -65057.521484            -1             -1     -1
1  -65057.518066  -65057.518160  57235.255615 -65057.518066  0.003418 -65057.518160        0.0  0.000093       -0.002025     1.0    -65057.521484         False           True  False
2  -65057.515418  -65057.515869  57335.254883 -65057.515418  0.002742 -65057.515869        0.0  0.000451       -0.000109     1.0    -65057.515418         False          False  False
3  -65056.852783  -65056.853375  57434.592285 -65056.852783  0.663086 -65056.853375        0.0  0.000592       -0.000072     1.0    -65057.515418         False          False  False
4  -65056.843375  -65056.843859  57534.582764 -65056.843375  0.010000 -65056.843859        0.0  0.000484       -0.000185     1.0    -65057.515418         False          False  False
5  -65056.832407  -65056.842773  57634.571981 -65056.832407  0.011452 -65056.842773        0.0  0.010366        0.000000     1.0    -65057.515418         False          False  False
6  -65056.832407  -65056.832407  57734.571777 -65056.832407  0.010000 -65056.832407        0.0  0.000000       -0.000204     2.0    -65057.515418         False          False  False
7  -65056.822407  -65056.831923  57834.561768 -65056.822407  0.010000 -65056.831923        0.0  0.009516       -0.000214     1.0    -65057.515418         False          False  False
8  -65056.821923  -65056.822021  57834.562012 -65056.821923  0.010000 -65056.822021        0.0  0.000098      -99.999486     1.0    -65057.515418         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 19:04:19]  --------------------------------------------------------------------------------
[08/10 19:04:19]  Iteration: 339 (99 solution, 239 counterexamples)
[08/10 19:06:58]  Generator returned sat in 150.950749 secs.
[08/10 19:06:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:06:59]  Improved gap from 0 to 100
[08/10 19:07:01]  Improved number of small numbers from 59 to 76 out of a max of 114
[08/10 19:07:01]  Verifer returned sat in 2.115447 secs.
[08/10 19:07:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -67130.146973  -67230.046875  60653.711497 -67130.146973    0.099854 -67230.046875      0.000   99.899902       -0.100049     8.0    -67230.046875            -1             -1     -1
1  -67029.846924  -67130.046875  60653.711497 -67029.846924  200.199951 -67130.046875      0.000  100.199951        0.199999     1.0    -67230.046875         False           True  False
2  -66929.946777  -66930.046923  60653.711497 -66929.946777  200.100098 -66930.046923      0.000    0.100146        0.100146     1.0    -66929.946777         False          False  False
3  -66138.646923  -66830.046923  60653.711497 -66138.646923  791.400000 -66830.046923    691.200    0.200000        0.200000     1.0    -66929.946777         False          False  False
4  -65741.646923  -66829.846923  60653.711497 -65741.646923  397.200000 -66829.846923    988.200  100.000000        0.200000     2.0    -66929.946777         False          False   True
5  -65641.546923  -66630.046923  60653.711497 -65641.546923  200.100000 -66630.046923    988.300    0.200000        0.200000     1.0    -66629.846923          True           True   True
6  -65540.196923  -66530.046923  60653.711497 -65540.196923  101.550000 -66530.046923    989.650    0.200000        0.200000     1.0    -66629.846923         False          False   True
7  -65488.121923  -66477.871923  60653.711497 -65488.121923   52.275000 -66477.871923    989.650    0.100000      -47.725000     1.0    -66629.846923         False          False   True
8  -65084.471923  -66430.046875  60653.711497 -65084.471923  403.750000 -66430.046875   1245.375  100.199952        0.200000     1.0    -66629.846923         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 19:07:01]  --------------------------------------------------------------------------------
[08/10 19:07:01]  Iteration: 340 (99 solution, 240 counterexamples)
[08/10 19:12:25]  Generator returned sat in 315.397747 secs.
[08/10 19:12:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:12:27]  Improved gap from 0 to 12.5
[08/10 19:12:27]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 19:12:27]  Verifer returned sat in 2.144760 secs.
[08/10 19:12:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -66041.646729  -66241.546875  60853.411621 -66041.646729  200.000000 -66241.546875        0.0  199.900146       99.900146     8.0    -66241.546875            -1             -1     -1
1  -66041.646729  -66041.746826  60853.411621 -66041.646729  199.900146 -66041.746826        0.0    0.100098       -0.099854     3.0    -66041.646729         False           True  False
2  -65841.946777  -66041.546875  60853.411621 -65841.946777  199.800049 -66041.546875        0.0  199.600098       99.600098     1.0    -65841.946777         False          False  False
3  -65641.546875  -65841.546875  60853.411621 -65641.546875  400.000000 -65841.546875        0.0  200.000000      200.000000     1.0    -65841.946777         False          False  False
4  -65641.546875  -65741.646973  60853.411621 -65641.546875  200.000000 -65741.646973        0.0  100.100098      100.000000     2.0    -65841.946777         False          False  False
5  -65641.546875  -65741.546875  60853.411621 -65641.546875  100.000000 -65741.546875        0.0  100.000000        0.000000     3.0    -65841.946777         False          False  False
6  -65641.546875  -65641.546875  60940.911621 -65641.546875   50.000000 -65641.546875        0.0    0.000000      -12.500000     4.0    -65841.946777         False          False  False
7  -65616.546875  -65629.046875  61028.411621 -65616.546875   25.000000 -65629.046875        0.0   12.500000        0.000000     1.0    -65841.946777         False          False  False
8  -65616.546875  -65616.546875  61115.911621 -65616.546875   12.500000 -65616.546875        0.0    0.000000      -12.500000     2.0    -65841.946777         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409805/2048.[0m
[08/10 19:12:28]  --------------------------------------------------------------------------------
[08/10 19:12:28]  Iteration: 341 (99 solution, 241 counterexamples)
[08/10 19:14:30]  Generator returned sat in 114.465579 secs.
[08/10 19:14:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:14:31]  Improved gap from 499/5 to 100
[08/10 19:14:32]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 19:14:32]  Verifer returned sat in 0.447193 secs.
[08/10 19:14:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -65941.646729  -66042.046631  60653.911377 -65941.646729  199.999756 -66042.046631   0.100098  100.299805        0.300049     2.0    -66042.046631            -1             -1     -1
1  -65941.646729  -65942.046631  60653.911377 -65941.646729  100.200195 -65942.046631   0.100098    0.299805      -99.699951     2.0    -65941.746826         False          False   True
2  -65841.846680  -65842.046875  60653.911377 -65841.846680  100.099854 -65842.046875   0.100098    0.100098      -99.899902     1.0    -65841.946777         False          False   True
3  -64949.146973  -65742.046631  60653.911377 -64949.146973  892.799805 -65742.046631   0.100098  792.799561      692.799805     1.0    -65841.946777         False          False   True
4  -64847.646729  -65542.046875  60653.911377 -64847.646729  894.299805 -65542.046875   0.100098  694.300049      694.300049     2.0    -65841.946777         False          False   True
5  -64646.146973  -65541.946777  60653.911377 -64646.146973  895.799805 -65541.946777   0.100098  895.699707      795.799805     3.0    -65841.946777         False          False   True
6  -64644.546875  -65342.046875  60653.911377 -64644.546875  897.299805 -65342.046875   0.100098  697.399902      697.399902     4.0    -65841.946777         False          False   True
7  -64443.146973  -65243.346680  60653.911377 -64443.146973  898.799805 -65243.346680   0.100098  800.099609      798.799805     5.0    -65841.946777         False          False   True
8  -64342.946777  -65142.046875  60653.911377 -64342.946777  900.299805 -65142.046875   0.200195  798.899902      798.899902     6.0    -65841.946777         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1636147/2048.[0m
[08/10 19:14:32]  --------------------------------------------------------------------------------
[08/10 19:14:32]  Iteration: 342 (99 solution, 242 counterexamples)
[08/10 19:16:35]  Generator returned sat in 114.842685 secs.
[08/10 19:16:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:16:37]  Improved gap from 0 to 23.4375
[08/10 19:16:39]  Improved number of small numbers from 46 to 68 out of a max of 114
[08/10 19:16:39]  Verifer returned sat in 3.033189 secs.
[08/10 19:16:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -61694.882080  -61695.182070  56407.046387 -61694.882080    0.100098 -61695.182070   0.100098    0.199893        0.199707     4.0    -61695.182070            -1             -1     -1
1  -61694.781973  -61695.082031  56483.509033 -61694.781973    0.300000 -61695.082031   0.100098    0.199961      -23.237539     4.0    -61695.182070         False           True   True
2  -61566.619385  -61671.644531  56483.509033 -61566.619385  128.362549 -61671.644531   0.100098  104.925049        4.925049     1.0    -61695.182070          True           True  False
3  -61566.619385  -61566.819570  56545.496572 -61566.619385  104.825195 -61566.819570   0.100098    0.100088      -33.087412     2.0    -61566.719482         False          False  False
4  -61309.994473  -61436.657070  56545.496572 -61309.994473  256.725000 -61436.657070   0.200098  126.462500      123.437500     1.0    -61566.719482         False          False  False
5  -61309.994473  -61433.631836  56545.496572 -61309.994473  126.362500 -61433.631836   0.200098  123.437266       23.437500     2.0    -61566.719482         False          False   True
6  -61309.994473  -61333.632070  56622.059072 -61309.994473   63.681250 -61333.632070   0.200098   23.437500        0.000000     3.0    -61566.719482         False          False   True
7  -61301.091348  -61310.194570  56698.621572 -61301.091348   32.340625 -61310.194570   0.200098    8.903125      -14.534375     4.0    -61566.719482         False          False   True
8  -61057.069473  -61286.756836  56698.621572 -61057.069473  252.925000 -61286.756836   6.250098  223.437266      123.437500     1.0    -61063.319570          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1975/16.[0m
[08/10 19:16:39]  --------------------------------------------------------------------------------
[08/10 19:16:39]  Iteration: 343 (99 solution, 243 counterexamples)
[08/10 19:18:22]  Generator returned sat in 95.129038 secs.
[08/10 19:18:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:18:24]  Improved gap from 0 to 23.4375
[08/10 19:18:24]  Improved number of small numbers from 46 to 114 out of a max of 114
[08/10 19:18:24]  Verifer returned sat in 1.211608 secs.
[08/10 19:18:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -61610.003418  -61810.103271  56421.967773 -61610.003418    0.002686 -61810.103271   0.099854  200.000000      100.000000     6.0    -61810.103271            -1             -1     -1
1  -61610.003418  -61710.103271  56421.967773 -61610.003418    0.001221 -61710.103271   0.099854  100.000000        0.000000     5.0    -61610.103271         False           True   True
2  -61498.532715  -61610.103271  56421.967773 -61498.532715  211.470703 -61610.103271   0.099854  111.470703       11.470703     3.0    -61610.103271         False           True  False
3  -61498.532715  -61498.633789  56421.967773 -61498.532715  111.469482 -61498.633789   0.099854    0.001221      -88.529297     2.0    -61498.632568         False          False  False
4  -61186.564453  -61311.415039  56421.967773 -61186.564453  311.969482 -61311.415039   0.101318  124.749268      123.437500     1.0    -61498.632568         False          False  False
5  -61186.564453  -61310.103271  56421.967773 -61186.564453    0.010000 -61310.103271   0.101318  123.437500       23.437500     2.0    -61498.632568         False          False   True
6  -61186.564453  -61210.103271  56498.530273 -61186.564453    0.510000 -61210.103271   0.101318   23.437500        0.000000     3.0    -61498.632568         False          False   True
7  -61186.564453  -61186.665771  56573.280762 -61186.564453    1.010000 -61186.665771   0.101318    0.000000      -25.249512     4.0    -61498.632568         False          False   True
8  -61061.315186  -61161.416260  56573.280762 -61061.315186  125.249268 -61161.416260   0.101318   99.999756       -0.000244     1.0    -61061.416504          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 19:18:25]  --------------------------------------------------------------------------------
[08/10 19:18:25]  Iteration: 344 (99 solution, 244 counterexamples)
[08/10 19:20:44]  Generator returned sat in 130.446031 secs.
[08/10 19:20:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:20:45]  Verifer returned unsat in 0.952556 secs.
[08/10 19:20:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:20:45]  --------------------------------------------------------------------------------
[08/10 19:20:45]  Iteration: 345 (100 solution, 244 counterexamples)
[08/10 19:21:11]  Generator returned sat in 17.620654 secs.
[08/10 19:21:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:21:13]  Verifer returned unsat in 1.039806 secs.
[08/10 19:21:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:21:13]  --------------------------------------------------------------------------------
[08/10 19:21:13]  Iteration: 346 (101 solution, 244 counterexamples)
[08/10 19:21:44]  Generator returned sat in 23.041350 secs.
[08/10 19:21:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:21:45]  Verifer returned unsat in 0.881965 secs.
[08/10 19:21:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:21:45]  --------------------------------------------------------------------------------
[08/10 19:21:45]  Iteration: 347 (102 solution, 244 counterexamples)
[08/10 19:22:11]  Generator returned sat in 17.450409 secs.
[08/10 19:22:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:22:12]  Verifer returned unsat in 0.853334 secs.
[08/10 19:22:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:22:12]  --------------------------------------------------------------------------------
[08/10 19:22:12]  Iteration: 348 (103 solution, 244 counterexamples)
[08/10 19:22:38]  Generator returned sat in 17.969325 secs.
[08/10 19:22:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:22:40]  Verifer returned unsat in 0.706660 secs.
[08/10 19:22:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:22:40]  --------------------------------------------------------------------------------
[08/10 19:22:40]  Iteration: 349 (104 solution, 244 counterexamples)
[08/10 19:23:05]  Generator returned sat in 17.528063 secs.
[08/10 19:23:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:23:07]  Verifer returned unsat in 0.894433 secs.
[08/10 19:23:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:23:07]  --------------------------------------------------------------------------------
[08/10 19:23:07]  Iteration: 350 (105 solution, 244 counterexamples)
[08/10 19:23:33]  Generator returned sat in 18.034687 secs.
[08/10 19:23:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:23:35]  Verifer returned unsat in 0.881656 secs.
[08/10 19:23:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:23:35]  --------------------------------------------------------------------------------
[08/10 19:23:35]  Iteration: 351 (106 solution, 244 counterexamples)
[08/10 19:24:02]  Generator returned sat in 19.396283 secs.
[08/10 19:24:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:24:05]  Verifer returned unsat in 2.362652 secs.
[08/10 19:24:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:24:05]  --------------------------------------------------------------------------------
[08/10 19:24:05]  Iteration: 352 (107 solution, 244 counterexamples)
[08/10 19:24:33]  Generator returned sat in 19.260473 secs.
[08/10 19:24:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:24:35]  Verifer returned unsat in 1.619980 secs.
[08/10 19:24:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:24:35]  --------------------------------------------------------------------------------
[08/10 19:24:35]  Iteration: 353 (108 solution, 244 counterexamples)
[08/10 19:25:01]  Generator returned sat in 17.687832 secs.
[08/10 19:25:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:25:03]  Verifer returned unsat in 1.585301 secs.
[08/10 19:25:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:25:03]  --------------------------------------------------------------------------------
[08/10 19:25:03]  Iteration: 354 (109 solution, 244 counterexamples)
[08/10 19:27:20]  Generator returned sat in 129.159903 secs.
[08/10 19:27:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:27:22]  Improved gap from 1/4800 to 23.4375
[08/10 19:27:22]  Improved number of small numbers from 51 to 114 out of a max of 114
[08/10 19:27:22]  Verifer returned sat in 1.146746 secs.
[08/10 19:27:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -69128.937256  -69329.034424  56621.960449 -69128.937256    0.002500 -69329.034424   0.099854  199.997314       99.997559     5.0    -69329.034424            -1             -1     -1
1  -69128.937256  -69229.034668  56621.960449 -69128.937256  199.994873 -69229.034668   0.099854   99.997559       -0.002441     5.0    -69329.034424         False           True  False
2  -69028.942383  -69129.034668  56621.960449 -69028.942383  199.992432 -69129.034668   0.099854   99.992432       -0.007568     1.0    -69029.042236          True           True  False
3  -68928.942139  -69016.818115  56621.967773 -68928.942139  199.992676 -69016.818115   0.099854   87.776123        0.000000     1.0    -69029.042236         False          False  False
4  -68705.501953  -68829.041992  56621.967773 -68705.501953  311.216309 -68829.041992   0.102539  123.437500      123.437500     1.0    -69029.042236         False          False  False
5  -68705.501953  -68729.044434  56621.967773 -68705.501953    0.010000 -68729.044434   0.102539   23.439941       23.437500     2.0    -69029.042236         False          False   True
6  -68705.501953  -68729.041992  56698.530273 -68705.501953    1.500000 -68729.041992   0.102539   23.437500        0.000000     3.0    -69029.042236         False          False   True
7  -68705.501953  -68705.604492  56775.092773 -68705.501953    1.500000 -68705.604492   0.102539    0.000000      -23.437500     4.0    -69029.042236         False          False   True
8  -68583.064453  -68682.166992  56775.092773 -68583.064453  122.437500 -68682.166992   0.102539   99.000000       -1.000000     1.0    -68583.166992          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 19:27:23]  --------------------------------------------------------------------------------
[08/10 19:27:23]  Iteration: 355 (109 solution, 245 counterexamples)
[08/10 19:27:51]  Generator returned sat in 20.144157 secs.
[08/10 19:27:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:27:53]  Improved gap from 375/16 to 23.4375
[08/10 19:27:53]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 19:27:53]  Verifer returned sat in 1.064579 secs.
[08/10 19:27:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -67890.618164  -68067.180664  56621.967773 -67890.618164    0.002441 -68067.180664   0.000000  176.562500       76.562744     4.0    -68067.180664            -1             -1     -1
1  -67890.618164  -67890.618164  56621.967773 -67890.618164  176.561250 -67890.618164   0.000000    0.000000      -23.437256     4.0    -68067.180664         False           True  False
2  -67767.180908  -67867.180664  56621.967773 -67767.180908  123.437256 -67867.180664   0.000000   99.999756        0.000000     1.0    -67767.180908          True           True  False
3  -67743.743164  -67754.711426  56621.967773 -67743.743164  123.437500 -67754.711426   0.000000   10.968262      -76.562256     1.0    -67767.180908         False          False  False
4  -67443.742188  -67567.180908  56621.967773 -67443.742188  310.969238 -67567.180908   0.001221  123.437500      123.437500     1.0    -67767.180908         False          False  False
5  -67443.742188  -67567.179443  56621.967773 -67443.742188    0.010000 -67567.179443   0.001221  123.436035       23.437500     2.0    -67767.180908         False          False   True
6  -67443.742188  -67467.180908  56698.530273 -67443.742188    1.500000 -67467.180908   0.001221   23.437500        0.000000     3.0    -67767.180908         False          False   True
7  -67443.742188  -67443.743408  56775.092773 -67443.742188    1.500000 -67443.743408   0.001221    0.000000      -23.437500     4.0    -67767.180908         False          False   True
8  -67321.804688  -67420.305664  56776.592773 -67321.804688  121.937500 -67420.305664   0.001221   98.499756        0.000000     1.0    -67321.805908          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 19:27:54]  --------------------------------------------------------------------------------
[08/10 19:27:54]  Iteration: 356 (109 solution, 246 counterexamples)
[08/10 19:28:51]  Generator returned sat in 49.091038 secs.
[08/10 19:28:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:28:54]  Improved gap from 0 to 35.9375
[08/10 19:28:54]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 19:28:54]  Verifer returned sat in 2.531792 secs.
[08/10 19:28:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -67717.642334  -67836.354736  56557.905273 -67717.642334  118.812256 -67836.354736        0.0  118.712402       99.899902     9.0    -67836.354736            -1             -1     -1
1  -67717.642334  -67717.842041  56557.905273 -67717.642334  118.712402 -67717.842041        0.0    0.199707       -0.100098     9.0    -67717.642334         False           True  False
2  -67681.704590  -67717.542236  56621.967773 -67681.704590   36.137451 -67717.542236        0.0   35.837646       -0.099854     1.0    -67681.704590         False           True  False
3  -67681.504639  -67681.604736  56682.530273 -67681.504639   36.037598 -67681.604736        0.0    0.100098      -39.337402     1.0    -67681.504639         False          False  False
4  -67606.229736  -67642.167236  56746.592773 -67606.229736   75.375000 -67642.167236        0.0   35.937500        0.000000     1.0    -67681.504639         False          False  False
5  -67606.229736  -67606.229736  56810.655273 -67606.229736   35.837402 -67606.229736        0.0    0.000000      -35.937500     2.0    -67681.504639         False          False  False
6  -67552.573486  -67566.292236  56870.717773 -67552.573486   53.656250 -67566.292236        0.0   13.718750      -22.218750     1.0    -67681.504639         False          False  False
7  -67510.635986  -67530.354736  56934.780029 -67510.635986   55.656250 -67530.354736        0.0   19.718750      -16.218994     1.0    -67681.504639         False          False  False
8  -67476.448486  -67494.416992  56934.780273 -67476.448486   53.906250 -67494.416992        0.0   17.968506      -82.031250     1.0    -67681.504639         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/10 19:28:55]  --------------------------------------------------------------------------------
[08/10 19:28:55]  Iteration: 357 (109 solution, 247 counterexamples)
[08/10 19:31:48]  Generator returned sat in 165.537719 secs.
[08/10 19:31:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:31:53]  Improved gap from 0 to 48.4375
[08/10 19:31:53]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 19:31:53]  Verifer returned sat in 3.741951 secs.
[08/10 19:31:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -67637.229980  -67885.717285  56526.080322 -67637.229980    0.049805 -67885.717285    0.050049  248.437256      148.437500     9.0    -67885.717285            -1             -1     -1
1  -67637.229980  -67685.717529  56526.080322 -67637.229980    0.050000 -67685.717529    0.050049   48.437500       48.437500     9.0    -67885.717285         False           True   True
2  -67537.129883  -67637.280029  56526.080322 -67537.129883  148.537598 -67637.280029    0.100098  100.050049       48.487549     4.0    -67885.717285          True           True  False
3  -67241.429932  -67534.155029  56526.080322 -67241.429932  395.750000 -67534.155029  195.800049   96.925049       48.487549     1.0    -67885.717285          True           True   True
4  -67141.479980  -67386.492188  56526.080322 -67141.479980  196.875000 -67386.492188  195.800049   49.212158       48.437500     1.0    -67885.717285         False          False   True
5  -67141.479980  -67385.717529  56577.642822 -67141.479980    0.500000 -67385.717529  195.800049   48.437500        0.000000     2.0    -67885.717285         False          False   True
6  -67141.479980  -67337.280029  56629.205322 -67141.479980    0.500000 -67337.280029  195.800049    0.000000      -48.437500     3.0    -67885.717285         False          False   True
7  -67040.792480  -67288.842285  56676.955322 -67040.792480  100.687500 -67288.842285  195.800049   52.249756        0.000000     1.0    -67236.592529          True           True  False
8  -66991.873535  -67236.542236  56676.955322 -66991.873535  101.168701 -67236.542236  195.800049   48.868652      -51.081055     1.0    -67236.592529         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=198605/4096.[0m
[08/10 19:31:54]  --------------------------------------------------------------------------------
[08/10 19:31:54]  Iteration: 358 (109 solution, 248 counterexamples)
[08/10 19:35:24]  Generator returned sat in 201.741036 secs.
[08/10 19:35:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:35:25]  Verifer returned unsat in 0.801390 secs.
[08/10 19:35:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:35:25]  --------------------------------------------------------------------------------
[08/10 19:35:25]  Iteration: 359 (110 solution, 248 counterexamples)
[08/10 19:35:57]  Generator returned sat in 23.759307 secs.
[08/10 19:35:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:36:00]  Verifer returned unsat in 1.296977 secs.
[08/10 19:36:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:36:00]  --------------------------------------------------------------------------------
[08/10 19:36:00]  Iteration: 360 (111 solution, 248 counterexamples)
[08/10 19:36:26]  Generator returned sat in 18.749733 secs.
[08/10 19:36:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:36:28]  Verifer returned unsat in 0.735284 secs.
[08/10 19:36:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:36:28]  --------------------------------------------------------------------------------
[08/10 19:36:28]  Iteration: 361 (112 solution, 248 counterexamples)
[08/10 19:37:38]  Generator returned sat in 61.592717 secs.
[08/10 19:37:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:37:40]  Improved gap from 0 to 4.6875
[08/10 19:37:41]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/10 19:37:41]  Verifer returned sat in 2.480059 secs.
[08/10 19:37:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -60650.194824  -60654.882432  56403.229004 -60650.194824    0.0500 -60654.882432       0.00   4.687607        4.687539     4.0    -60654.882432            -1             -1   False
1  -60645.507432  -60650.144932  56493.804072 -60645.507432    9.3750 -60650.144932       0.00   4.637500       -0.050000     1.0    -60654.882432         False          False   False
2  -60640.819932  -60645.457432  56589.116572 -60640.819932    9.3250 -60645.457432       0.00   4.637500       -0.050000     1.0    -60640.819932         False          False   False
3  -60636.182432  -60640.769932  56675.860352 -60636.182432    9.2750 -60640.769932       0.00   4.587500       -8.668721     1.0    -60636.182432         False          False   False
4  -60612.544932  -60627.513682  56760.891357 -60612.544932   28.2250 -60627.513682       0.00  14.968750       -0.000215     1.0    -60636.182432         False          False   False
5  -60582.251182  -60589.476182  56830.597822 -60582.251182   45.2625 -60589.476182       0.00   7.225000        0.000000     1.0    -60636.182432         False          False   False
6  -60477.513682  -60482.301270  56830.597822 -60477.513682  111.9625 -60482.301270       0.05   4.737588        4.687500     1.0    -60636.182432         False          False   False
7  -60477.513682  -60482.251182  56925.910322 -60477.513682    1.0000 -60482.251182       0.05   4.687500        0.000000     2.0    -60636.182432         False          False    True
8  -60477.513682  -60477.563682  56925.910400 -60477.513682    0.5000 -60477.563682       0.05   0.000000      -99.999922     3.0    -60636.182432         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=75/16.[0m
[08/10 19:37:42]  --------------------------------------------------------------------------------
[08/10 19:37:42]  Iteration: 362 (112 solution, 249 counterexamples)
[08/10 19:40:47]  Generator returned sat in 176.754339 secs.
[08/10 19:40:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:40:50]  Improved gap from 0 to 0
[08/10 19:40:52]  Improved number of small numbers from 55 to 94 out of a max of 114
[08/10 19:40:52]  Verifer returned sat in 4.016546 secs.
[08/10 19:40:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -60484.753418  -60484.753906  56333.067627 -60484.753418  1.464111 -60484.753906        0.0  0.000488        0.000485     2.0    -60484.753906            -1             -1   False
1  -60483.290283  -60484.752952  56431.603760 -60483.290283  1.463623 -60484.752952        0.0  1.462669       -0.000247     1.0    -60483.290283         False          False   False
2  -60483.289307  -60483.289795  56531.603027 -60483.289307  1.463646 -60483.289795        0.0  0.000488       -0.000003     1.0    -60483.290283         False          False   False
3  -60483.255615  -60483.264404  56631.569092 -60483.255615  0.034180 -60483.264404        0.0  0.008789       -0.000247     1.0    -60483.255615         False          False   False
4  -60482.285400  -60483.255140  56730.599121 -60482.285400  0.979004 -60483.255140        0.0  0.969740       -0.000003     1.0    -60483.255615         False          False   False
5  -60482.259515  -60482.285156  56830.573239 -60482.259515  0.995625 -60482.285156        0.0  0.025641        0.000000     1.0    -60483.255615         False          False   False
6  -60482.259515  -60482.259515  56930.572998 -60482.259515  0.010000 -60482.259515        0.0  0.000000       -0.000241     2.0    -60483.255615         False          False   False
7  -60482.249515  -60482.249932  57030.563232 -60482.249515  0.010000 -60482.249932        0.0  0.000417       -0.000007     1.0    -60483.255615         False          False   False
8  -60482.239515  -60482.249023  57030.563477 -60482.239515  0.010417 -60482.249023        0.0  0.009508      -99.989762     1.0    -60483.255615         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 19:40:52]  --------------------------------------------------------------------------------
[08/10 19:40:52]  Iteration: 363 (112 solution, 250 counterexamples)
[08/10 19:43:18]  Generator returned sat in 137.717954 secs.
[08/10 19:43:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:43:20]  Verifer returned unsat in 0.659976 secs.
[08/10 19:43:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:43:20]  --------------------------------------------------------------------------------
[08/10 19:43:20]  Iteration: 364 (113 solution, 250 counterexamples)
[08/10 19:43:46]  Generator returned sat in 18.143832 secs.
[08/10 19:43:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:43:47]  Verifer returned unsat in 0.555548 secs.
[08/10 19:43:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:43:47]  --------------------------------------------------------------------------------
[08/10 19:43:47]  Iteration: 365 (114 solution, 250 counterexamples)
[08/10 19:44:13]  Generator returned sat in 17.757873 secs.
[08/10 19:44:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:44:15]  Verifer returned unsat in 0.576516 secs.
[08/10 19:44:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:44:15]  --------------------------------------------------------------------------------
[08/10 19:44:15]  Iteration: 366 (115 solution, 250 counterexamples)
[08/10 19:44:40]  Generator returned sat in 17.719228 secs.
[08/10 19:44:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:44:42]  Verifer returned unsat in 0.437615 secs.
[08/10 19:44:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:44:42]  --------------------------------------------------------------------------------
[08/10 19:44:42]  Iteration: 367 (116 solution, 250 counterexamples)
[08/10 19:45:08]  Generator returned sat in 17.771446 secs.
[08/10 19:45:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:45:09]  Verifer returned unsat in 0.721523 secs.
[08/10 19:45:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:45:09]  --------------------------------------------------------------------------------
[08/10 19:45:09]  Iteration: 368 (117 solution, 250 counterexamples)
[08/10 19:45:37]  Generator returned sat in 19.319685 secs.
[08/10 19:45:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:45:40]  Verifer returned unsat in 2.564888 secs.
[08/10 19:45:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:45:40]  --------------------------------------------------------------------------------
[08/10 19:45:40]  Iteration: 369 (118 solution, 250 counterexamples)
[08/10 19:46:08]  Generator returned sat in 19.328295 secs.
[08/10 19:46:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:46:09]  Verifer returned unsat in 0.561783 secs.
[08/10 19:46:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:46:09]  --------------------------------------------------------------------------------
[08/10 19:46:09]  Iteration: 370 (119 solution, 250 counterexamples)
[08/10 19:46:36]  Generator returned sat in 18.137587 secs.
[08/10 19:46:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:46:37]  Verifer returned unsat in 1.046412 secs.
[08/10 19:46:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:46:38]  --------------------------------------------------------------------------------
[08/10 19:46:38]  Iteration: 371 (120 solution, 250 counterexamples)
[08/10 19:47:06]  Generator returned sat in 20.480212 secs.
[08/10 19:47:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:47:09]  Verifer returned unsat in 2.007796 secs.
[08/10 19:47:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:47:09]  --------------------------------------------------------------------------------
[08/10 19:47:09]  Iteration: 372 (121 solution, 250 counterexamples)
[08/10 19:47:35]  Generator returned sat in 17.386337 secs.
[08/10 19:47:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:47:37]  Verifer returned unsat in 1.119589 secs.
[08/10 19:47:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:47:37]  --------------------------------------------------------------------------------
[08/10 19:47:37]  Iteration: 373 (122 solution, 250 counterexamples)
[08/10 19:48:03]  Generator returned sat in 17.950934 secs.
[08/10 19:48:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:48:05]  Verifer returned unsat in 1.271806 secs.
[08/10 19:48:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:48:05]  --------------------------------------------------------------------------------
[08/10 19:48:05]  Iteration: 374 (123 solution, 250 counterexamples)
[08/10 19:48:31]  Generator returned sat in 17.999237 secs.
[08/10 19:48:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:48:34]  Verifer returned unsat in 2.220974 secs.
[08/10 19:48:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:48:34]  --------------------------------------------------------------------------------
[08/10 19:48:34]  Iteration: 375 (124 solution, 250 counterexamples)
[08/10 19:49:01]  Generator returned sat in 18.196735 secs.
[08/10 19:49:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:49:04]  Verifer returned unsat in 2.017538 secs.
[08/10 19:49:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:49:04]  --------------------------------------------------------------------------------
[08/10 19:49:04]  Iteration: 376 (125 solution, 250 counterexamples)
[08/10 19:49:39]  Generator returned sat in 27.241698 secs.
[08/10 19:49:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:49:40]  Verifer returned unsat in 0.598020 secs.
[08/10 19:49:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:49:40]  --------------------------------------------------------------------------------
[08/10 19:49:40]  Iteration: 377 (126 solution, 250 counterexamples)
[08/10 19:50:07]  Generator returned sat in 18.693191 secs.
[08/10 19:50:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:50:09]  Verifer returned unsat in 1.213901 secs.
[08/10 19:50:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:50:09]  --------------------------------------------------------------------------------
[08/10 19:50:09]  Iteration: 378 (127 solution, 250 counterexamples)
[08/10 19:50:39]  Generator returned sat in 21.117153 secs.
[08/10 19:50:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:50:41]  Verifer returned unsat in 1.661142 secs.
[08/10 19:50:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:50:41]  --------------------------------------------------------------------------------
[08/10 19:50:41]  Iteration: 379 (128 solution, 250 counterexamples)
[08/10 19:51:08]  Generator returned sat in 18.567820 secs.
[08/10 19:51:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:51:10]  Verifer returned unsat in 1.482574 secs.
[08/10 19:51:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:51:10]  --------------------------------------------------------------------------------
[08/10 19:51:10]  Iteration: 380 (129 solution, 250 counterexamples)
[08/10 19:51:38]  Generator returned sat in 19.976416 secs.
[08/10 19:51:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:51:40]  Verifer returned unsat in 0.993954 secs.
[08/10 19:51:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:51:40]  --------------------------------------------------------------------------------
[08/10 19:51:40]  Iteration: 381 (130 solution, 250 counterexamples)
[08/10 19:52:22]  Generator returned sat in 33.601168 secs.
[08/10 19:52:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:52:24]  Improved gap from 0 to 23.4375
[08/10 19:52:25]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 19:52:25]  Verifer returned sat in 1.830881 secs.
[08/10 19:52:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55239.613473  -55263.250732  56406.306396 -55239.613473    0.200195 -55263.250732     0.1000   23.537259       23.437533     5.0    -55263.250732            -1             -1     -1
1  -55239.613473  -55263.150973  56482.868652 -55239.613473    0.100098 -55263.150973     0.1000   23.437500       -0.000212     5.0    -55239.713473         False           True   True
2  -55195.038473  -55195.138473  56482.868864 -55195.038473   68.012500 -55195.138473     0.1000    0.000000      -55.425000     1.0    -55239.713473         False           True  False
3  -54990.838473  -55039.713473  56482.868864 -54990.838473  204.200000 -55039.713473    48.6750    0.200000        0.200000     1.0    -55239.713473         False          False  False
4  -54890.938473  -54940.213379  56482.868864 -54890.938473  100.100000 -54940.213379    48.6750    0.599906        0.100000     1.0    -55239.713473         False          False   True
5  -54890.938473  -54939.713473  56559.431364 -54890.938473    0.500000 -54939.713473    48.6750    0.100000      -23.337500     2.0    -55239.713473         False          False   True
6  -54635.113473  -54916.275973  56559.431364 -54635.113473  255.925000 -54916.275973   180.9625  100.200000        0.200000     1.0    -54816.075973          True           True  False
7  -54609.350973  -54815.975830  56633.468864 -54609.350973  125.962500 -54815.975830   180.9625   25.662357        0.000000     1.0    -54816.075973         False          False   True
8  -54609.350973  -54790.313473  56710.031250 -54609.350973    0.500000 -54790.313473   180.9625    0.000000      -23.437614     2.0    -54816.075973         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 19:52:25]  --------------------------------------------------------------------------------
[08/10 19:52:25]  Iteration: 382 (130 solution, 251 counterexamples)
[08/10 19:54:56]  Generator returned sat in 141.723021 secs.
[08/10 19:54:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:54:59]  Improved gap from 1/40 to 0
[08/10 19:55:00]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 19:55:00]  Verifer returned sat in 3.326501 secs.
[08/10 19:55:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55133.882080  -55134.007080  56335.018799 -55133.882080    0.025000 -55134.007080   0.099854    0.025146      -99.974609     9.0    -55134.007080            -1             -1     -1
1  -54933.932373  -54934.057373  56335.018799 -54933.932373  199.974854 -54934.057373   0.099854    0.025146       -0.024902     1.0    -55134.007080         False           True  False
2  -54933.882324  -54934.007080  56434.993652 -54933.882324    0.075195 -54934.007080   0.099854    0.024902        0.000000     1.0    -54933.982178         False          False  False
3  -54632.357178  -54933.957275  56434.993652 -54632.357178  301.550049 -54933.957275   0.099854  301.500244      201.525146     1.0    -54933.982178         False          False  False
4  -54632.357178  -54734.007324  56434.993652 -54632.357178    1.500000 -54734.007324   0.099854  101.550293      101.525146     2.0    -54933.982178         False          False  False
5  -54632.357178  -54733.982178  56434.993652 -54632.357178    1.500000 -54733.982178   0.099854  101.525146        1.525146     3.0    -54933.982178         False          False  False
6  -54632.357178  -54633.982178  56533.468506 -54632.357178    1.500000 -54633.982178   0.099854    1.525146        0.000000     4.0    -54933.982178         False          False  False
7  -54632.357178  -54632.457031  56633.468506 -54632.357178    1.500000 -54632.457031   0.099854    0.000000        0.000000     5.0    -54933.982178         False          False  False
8  -54630.857178  -54632.432373  56633.468506 -54630.857178    1.500000 -54632.432373   0.099854    1.475342      -98.500000     1.0    -54933.982178         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=825549/4096.[0m
[08/10 19:55:00]  --------------------------------------------------------------------------------
[08/10 19:55:00]  Iteration: 383 (130 solution, 252 counterexamples)
[08/10 19:56:28]  Generator returned sat in 79.139373 secs.
[08/10 19:56:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:56:28]  Improved gap from 0 to 100
[08/10 19:56:29]  Improved number of small numbers from 84 to 114 out of a max of 114
[08/10 19:56:29]  Verifer returned sat in 0.377163 secs.
[08/10 19:56:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -55034.082275  -55133.982178  56434.993652 -55034.082275    0.100098 -55133.982178   0.000000   99.899902       -0.099854     2.0    -55133.982178            -1             -1    True
1  -55033.782227  -55033.982178  56434.993652 -55033.782227  100.199951 -55033.982178   0.000000    0.199951      -99.799805     1.0    -55133.982178         False          False    True
2  -54933.882324  -54933.982422  56434.993652 -54933.882324  100.099854 -54933.982422   0.000000    0.100098      -99.899902     1.0    -54933.882324         False          False    True
3  -54043.782227  -54833.982422  56434.993652 -54043.782227  890.200195 -54833.982422   0.000000  790.200195      690.200195     1.0    -54933.882324         False          False    True
4  -53941.782227  -54728.082520  56434.993652 -53941.782227  892.200195 -54728.082520   0.000000  786.300293      692.200195     2.0    -54933.882324         False          False    True
5  -53833.882324  -54630.082520  56434.993652 -53833.882324  894.200195 -54630.082520   0.000000  796.200195      700.100098     3.0    -54933.882324         False          False    True
6  -53733.882324  -54532.082520  56434.993652 -53733.882324  896.200195 -54532.082520   0.000000  798.200195      700.100098     4.0    -54933.882324         False          False    True
7  -53633.882324  -54433.982422  56434.993652 -53633.882324  898.200195 -54433.982422   0.000000  800.100098      700.100098     5.0    -54933.882324         False          False    True
8  -53533.782227  -54233.982422  56434.993652 -53533.782227  900.200195 -54233.982422   0.100098  700.100098      700.100098     6.0    -54933.882324         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=1433805/2048.[0m
[08/10 19:56:29]  --------------------------------------------------------------------------------
[08/10 19:56:29]  Iteration: 384 (130 solution, 253 counterexamples)
[08/10 19:59:17]  Generator returned sat in 159.630613 secs.
[08/10 19:59:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 19:59:26]  Improved gap from 0 to 1.5625
[08/10 19:59:27]  Improved number of small numbers from 81 to 88 out of a max of 114
[08/10 19:59:27]  Verifer returned sat in 8.690983 secs.
[08/10 19:59:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55130.320557  -55133.982178  56241.800781 -55130.320557  0.020752 -55133.982178        0.0  3.661621        3.661458     9.0    -55133.982178            -1             -1     -1
1  -55128.758301  -55130.299886  56336.556152 -55128.758301  5.223877 -55130.299886        0.0  1.541585       -0.020915     1.0    -55133.982178         False           True  False
2  -55127.195719  -55128.737386  56434.993652 -55127.195719  3.104167 -55128.737386        0.0  1.541667       -0.020833     1.0    -55127.195719         False          False  False
3  -55121.763428  -55127.174886  56529.582194 -55121.763428  6.973958 -55127.174886        0.0  5.411458        0.000000     1.0    -55127.195719         False          False  False
4  -55121.763428  -55121.763428  56628.019694 -55121.763428  5.390625 -55121.763428        0.0  0.000000       -1.562500     2.0    -55127.195719         False          False  False
5  -55116.299886  -55120.200928  56724.097900 -55116.299886  5.463542 -55120.200928        0.0  3.901042       -0.020752     1.0    -55127.195719         False          False  False
6  -55114.700928  -55116.279053  56822.519531 -55114.700928  5.500000 -55116.279053        0.0  1.578125       -0.000163     1.0    -55127.195719         False          False  False
7  -55109.581136  -55114.680094  56917.399902 -55109.581136  6.697917 -55114.680094        0.0  5.098958        0.000000     1.0    -55127.195719         False          False  False
8  -55109.289469  -55109.560303  56917.399902 -55109.289469  5.390625 -55109.560303        0.0  0.270833      -99.708333     1.0    -55127.195719         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1/24.[0m
[08/10 19:59:27]  --------------------------------------------------------------------------------
[08/10 19:59:27]  Iteration: 385 (130 solution, 254 counterexamples)
[08/10 20:00:58]  Generator returned sat in 82.051750 secs.
[08/10 20:00:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:01:09]  Improved gap from 0 to 3.125
[08/10 20:01:11]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 20:01:11]  Verifer returned sat in 12.427761 secs.
[08/10 20:01:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -55415.190430  -55422.315544  56546.819336 -55415.190430  7.245536 -55422.315544        0.0  7.125114        7.124990     7.0    -55422.315544            -1             -1     -1
1  -55415.110187  -55415.150365  56636.529281 -55415.110187  7.205357 -55415.150365        0.0  0.040179       -3.084821     1.0    -55415.110187         False           True  False
2  -55408.900365  -55412.025365  56733.404281 -55408.900365  6.250000 -55412.025365        0.0  3.125000        0.000000     1.0    -55408.900365         False          False  False
3  -55408.900365  -55408.900365  56830.279281 -55408.900365  3.084821 -55408.900365        0.0  0.000000       -3.125000     2.0    -55408.900365         False          False  False
4  -55402.650365  -55405.775365  56927.154053 -55402.650365  6.250000 -55405.775365        0.0  3.125000       -0.000229     1.0    -55408.900365         False          False  False
5  -55399.962865  -55402.610187  57023.989014 -55399.962865  5.812500 -55402.610187        0.0  2.647321       -0.477768     1.0    -55408.900365         False          False  False
6  -55396.996347  -55398.485187  57119.864014 -55396.996347  5.613839 -55398.485187        0.0  1.488839       -1.636250     1.0    -55408.900365         False          False  False
7  -55392.470678  -55395.289874  57216.668701 -55392.470678  6.014509 -55395.289874        0.0  2.819196       -0.305893     1.0    -55408.900365         False          False  False
8  -55389.039874  -55389.040039  57216.668945 -55389.039874  6.250000 -55389.040039        0.0  0.000165      -96.874845     1.0    -55408.900365         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=9/112.[0m
[08/10 20:01:12]  --------------------------------------------------------------------------------
[08/10 20:01:12]  Iteration: 386 (130 solution, 255 counterexamples)
[08/10 20:03:49]  Generator returned sat in 149.330360 secs.
[08/10 20:03:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:03:53]  Verifer returned unsat in 2.811675 secs.
[08/10 20:03:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:03:53]  --------------------------------------------------------------------------------
[08/10 20:03:53]  Iteration: 387 (131 solution, 255 counterexamples)
[08/10 20:04:21]  Generator returned sat in 19.507175 secs.
[08/10 20:04:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:04:24]  Verifer returned unsat in 1.982721 secs.
[08/10 20:04:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:04:24]  --------------------------------------------------------------------------------
[08/10 20:04:24]  Iteration: 388 (132 solution, 255 counterexamples)
[08/10 20:04:55]  Generator returned sat in 22.950222 secs.
[08/10 20:04:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:04:58]  Verifer returned unsat in 1.990712 secs.
[08/10 20:04:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:04:58]  --------------------------------------------------------------------------------
[08/10 20:04:58]  Iteration: 389 (133 solution, 255 counterexamples)
[08/10 20:05:25]  Generator returned sat in 19.194339 secs.
[08/10 20:05:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:05:28]  Verifer returned unsat in 1.715472 secs.
[08/10 20:05:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:05:28]  --------------------------------------------------------------------------------
[08/10 20:05:28]  Iteration: 390 (134 solution, 255 counterexamples)
[08/10 20:05:56]  Generator returned sat in 19.239488 secs.
[08/10 20:05:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:05:58]  Verifer returned unsat in 1.773357 secs.
[08/10 20:05:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:05:58]  --------------------------------------------------------------------------------
[08/10 20:05:58]  Iteration: 391 (135 solution, 255 counterexamples)
[08/10 20:06:26]  Generator returned sat in 19.097165 secs.
[08/10 20:06:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:06:28]  Verifer returned unsat in 1.659029 secs.
[08/10 20:06:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:06:28]  --------------------------------------------------------------------------------
[08/10 20:06:28]  Iteration: 392 (136 solution, 255 counterexamples)
[08/10 20:07:00]  Generator returned sat in 23.464562 secs.
[08/10 20:07:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:07:03]  Verifer returned unsat in 2.189923 secs.
[08/10 20:07:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:07:03]  --------------------------------------------------------------------------------
[08/10 20:07:03]  Iteration: 393 (137 solution, 255 counterexamples)
[08/10 20:07:51]  Generator returned sat in 39.352439 secs.
[08/10 20:07:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:07:54]  Verifer returned unsat in 2.434607 secs.
[08/10 20:07:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:07:54]  --------------------------------------------------------------------------------
[08/10 20:07:54]  Iteration: 394 (138 solution, 255 counterexamples)
[08/10 20:08:22]  Generator returned sat in 19.588137 secs.
[08/10 20:08:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:08:25]  Verifer returned unsat in 1.540338 secs.
[08/10 20:08:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:08:25]  --------------------------------------------------------------------------------
[08/10 20:08:25]  Iteration: 395 (139 solution, 255 counterexamples)
[08/10 20:08:57]  Generator returned sat in 23.881652 secs.
[08/10 20:08:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:08:59]  Verifer returned unsat in 1.249226 secs.
[08/10 20:08:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:08:59]  --------------------------------------------------------------------------------
[08/10 20:08:59]  Iteration: 396 (140 solution, 255 counterexamples)
[08/10 20:09:34]  Generator returned sat in 26.444127 secs.
[08/10 20:09:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:09:38]  Verifer returned unsat in 3.173095 secs.
[08/10 20:09:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:09:38]  --------------------------------------------------------------------------------
[08/10 20:09:38]  Iteration: 397 (141 solution, 255 counterexamples)
[08/10 20:10:08]  Generator returned sat in 21.567780 secs.
[08/10 20:10:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:10:12]  Verifer returned unsat in 3.159970 secs.
[08/10 20:10:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:10:12]  --------------------------------------------------------------------------------
[08/10 20:10:12]  Iteration: 398 (142 solution, 255 counterexamples)
[08/10 20:14:29]  Generator returned sat in 248.659910 secs.
[08/10 20:14:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:14:31]  Improved gap from 0 to 0
[08/10 20:14:31]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 20:14:31]  Verifer returned sat in 1.419815 secs.
[08/10 20:14:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -48278.466797  -48378.469238  56814.470215 -48278.466797  100.005127 -48378.469238   0.000000  100.002441      100.002441     3.0    -48378.469238            -1             -1   False
1  -48278.465332  -48378.468994  56814.470215 -48278.465332  100.003906 -48378.468994   0.001465  100.002197        0.002441     4.0    -48278.466797         False          False   False
2  -48277.967773  -48278.469238  56913.968994 -48277.967773  100.499756 -48278.469238   0.001465    0.500000       -0.001221     5.0    -48278.466797         False          False    True
3  -48277.965088  -48277.968018  57013.967529 -48277.965088    0.502686 -48277.968018   0.001465    0.001465        0.000000     1.0    -48277.966553         False           True   False
4  -48177.965332  -48226.962891  57013.967529 -48177.965332  100.001221 -48226.962891   0.001465   48.996094       -0.000244     1.0    -48277.966553         False          False   False
5  -48075.955322  -48177.966553  57013.967529 -48075.955322  151.006104 -48177.966553   2.008789  100.002441        0.002441     1.0    -48277.966553         False          False   False
6  -48075.955322  -48077.965332  57113.965088 -48075.955322    0.010000 -48077.965332   2.008789    0.001221        0.000000     2.0    -48277.966553         False          False    True
7  -48074.956543  -48077.962891  57212.966309 -48074.956543    1.000000 -48077.962891   2.008789    0.997559        0.000000     1.0    -48277.966553         False          False    True
8  -48074.954102  -48076.963867  57212.966309 -48074.954102    1.000000 -48076.963867   2.008789    0.000977      -99.997559     1.0    -48277.966553         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=5/2048.[0m
[08/10 20:14:32]  --------------------------------------------------------------------------------
[08/10 20:14:32]  Iteration: 399 (142 solution, 256 counterexamples)
[08/10 20:17:29]  Generator returned sat in 168.726228 secs.
[08/10 20:17:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:17:32]  Verifer returned unsat in 1.772038 secs.
[08/10 20:17:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:17:32]  --------------------------------------------------------------------------------
[08/10 20:17:32]  Iteration: 400 (143 solution, 256 counterexamples)
[08/10 20:18:03]  Generator returned sat in 23.492056 secs.
[08/10 20:18:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:18:07]  Verifer returned unsat in 2.453659 secs.
[08/10 20:18:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:18:07]  --------------------------------------------------------------------------------
[08/10 20:18:07]  Iteration: 401 (144 solution, 256 counterexamples)
[08/10 20:23:07]  Generator returned sat in 291.770786 secs.
[08/10 20:23:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:23:17]  Improved gap from 1/600 to 15.625
[08/10 20:23:18]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/10 20:23:18]  Verifer returned sat in 9.807030 secs.
[08/10 20:23:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -48212.490479  -48612.490234  57048.239990 -48212.490479    0.100098 -48612.490234   0.000000  399.999756      399.999756     6.0    -48612.490234            -1             -1   False
1  -48212.190430  -48512.590332  57048.239990 -48212.190430  400.299805 -48512.590332   0.299805  300.100098      300.000000     6.0    -48612.490234         False          False   False
2  -48112.090332  -48512.490234  57048.239990 -48112.090332  400.200195 -48512.490234   0.399902  400.000000      300.000000     7.0    -48112.490234         False          False    True
3  -48112.090332  -48349.315430  57048.239990 -48112.090332  277.825195 -48349.315430   0.399902  236.825195      200.000000     8.0    -48112.490234         False          False    True
4  -48077.915527  -48212.490479  57048.239990 -48077.915527  271.000000 -48212.490479   0.399902  134.175049      134.174805     9.0    -48112.490234         False          False    True
5  -48077.915527  -48143.915283  57048.239990 -48077.915527  134.000000 -48143.915283   0.399902   65.599854       34.174805     4.0    -48112.490234         False           True   False
6  -48077.915527  -48093.840332  57113.965088 -48077.915527   65.500000 -48093.840332   0.399902   15.524902       -0.100098     3.0    -48112.490234         False          False   False
7  -48062.190430  -48078.215332  57198.340088 -48062.190430   31.250000 -48078.215332   0.399902   15.625000        0.000000     1.0    -48112.490234         False          False   False
8  -48062.190430  -48062.590332  57282.715088 -48062.190430   14.125000 -48062.590332   0.399902    0.000000      -15.625000     2.0    -48112.490234         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/10 20:23:18]  --------------------------------------------------------------------------------
[08/10 20:23:18]  Iteration: 402 (144 solution, 257 counterexamples)
[08/10 20:25:34]  Generator returned sat in 127.792865 secs.
[08/10 20:25:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:25:38]  Improved gap from 0 to 0
[08/10 20:25:38]  Improved number of small numbers from 70 to 106 out of a max of 114
[08/10 20:25:38]  Verifer returned sat in 3.205730 secs.
[08/10 20:25:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -48112.710205  -48112.712891  56948.250000 -48112.710205  0.000488 -48112.712891        0.0  0.002686        0.000244     5.0    -48112.712891            -1             -1   False
1  -48112.700439  -48112.710205  57048.239990 -48112.700439  0.012451 -48112.710205        0.0  0.009766        0.000000     3.0    -48112.712891         False          False   False
2  -48112.698242  -48112.699951  57147.741455 -48112.698242  0.011963 -48112.699951        0.0  0.001709       -0.496338     1.0    -48112.698242         False          False   False
3  -48112.201416  -48112.201660  57247.740479 -48112.201416  0.498535 -48112.201660        0.0  0.000244       -0.000488     1.0    -48112.698242         False          False   False
4  -48112.190430  -48112.200846  57347.729980 -48112.190430  0.011230 -48112.200846        0.0  0.010417        0.000000     1.0    -48112.698242         False          False   False
5  -48112.190430  -48112.190430  57447.729248 -48112.190430  0.010000 -48112.190430        0.0  0.000000       -0.000732     2.0    -48112.698242         False          False   False
6  -48112.180430  -48112.189596  57547.719971 -48112.180430  0.010000 -48112.189596        0.0  0.009167       -0.000010     1.0    -48112.698242         False          False   False
7  -48112.179596  -48112.180013  57647.718994 -48112.179596  0.010000 -48112.180013        0.0  0.000417       -0.000153     1.0    -48112.698242         False          False   False
8  -48112.170013  -48112.178955  57647.719238 -48112.170013  0.010000 -48112.178955        0.0  0.008942      -99.990326     1.0    -48112.698242         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 20:25:39]  --------------------------------------------------------------------------------
[08/10 20:25:39]  Iteration: 403 (144 solution, 258 counterexamples)
[08/10 20:27:44]  Generator returned sat in 115.997994 secs.
[08/10 20:27:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:27:47]  Improved gap from 0 to 3.125
[08/10 20:27:48]  Improved number of small numbers from 66 to 72 out of a max of 114
[08/10 20:27:48]  Verifer returned sat in 3.281298 secs.
[08/10 20:27:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -47943.533529  -47954.919640  56790.458984 -47943.533529   11.486084 -47954.919640   0.000000  11.386111       11.385905     5.0    -47954.919640            -1             -1     -1
1  -47943.483529  -47948.725195  56879.023079 -47943.483529   11.436111 -47948.725195   0.000000   5.241667        0.000000     4.0    -47943.483529         False           True  False
2  -47940.358529  -47943.483529  56975.897949 -47940.358529    8.366667 -47943.483529   0.000000   3.125000       -0.000130     2.0    -47940.358529         False          False  False
3  -47935.166862  -47940.308529  57053.481445 -47935.166862    8.316667 -47940.308529   0.000000   5.141667      -17.224967     1.0    -47935.166862         False          False  False
4  -47917.891862  -47917.941862  57150.356413 -47917.891862   22.416667 -47917.941862   0.000000   0.050000       -3.075000     1.0    -47935.166862         False          False  False
5  -47871.266862  -47914.816862  57206.806413 -47871.266862   46.675000 -47914.816862   0.000000  43.550000        0.000000     1.0    -47935.166862         False          False  False
6  -47871.266862  -47871.266862  57303.681413 -47871.266862   43.500000 -47871.266862   0.000000   0.000000       -3.125000     2.0    -47935.166862         False          False  False
7  -47767.204362  -47769.991699  57303.681413 -47767.204362  104.062500 -47769.991699   0.837402   1.949935        0.100098     1.0    -47935.166862         False          False  False
8  -47767.154297  -47767.991943  57303.681641 -47767.154297    2.000000 -47767.991943   0.837402   0.000244      -99.849609     1.0    -47935.166862         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=205/2048.[0m
[08/10 20:27:48]  --------------------------------------------------------------------------------
[08/10 20:27:48]  Iteration: 404 (144 solution, 259 counterexamples)
[08/10 20:28:41]  Generator returned sat in 43.742927 secs.
[08/10 20:28:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:28:44]  Improved gap from 1/10 to 3.125
[08/10 20:28:45]  Improved number of small numbers from 72 to 79 out of a max of 114
[08/10 20:28:45]  Verifer returned sat in 3.245668 secs.
[08/10 20:28:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -47942.950195  -47955.364084  56790.903564 -47942.950195    0.200195 -47955.364084   0.100000  12.313889       12.313818     4.0    -47955.364084            -1             -1     -1
1  -47942.950195  -47948.225195  56878.489746 -47942.950195    0.100000 -47948.225195   0.100000   5.175000       -0.100000     5.0    -47943.050195         False          False   True
2  -47939.825195  -47942.950195  56975.364746 -47939.825195    8.300000 -47942.950195   0.100000   3.025000       -0.100000     1.0    -47943.050195         False           True  False
3  -47934.650195  -47939.825195  57053.581543 -47934.650195    8.200000 -47939.825195   0.100000   5.075000      -16.708203     1.0    -47934.750195         False          False  False
4  -47914.916862  -47918.041862  57150.456413 -47914.916862   24.808333 -47918.041862   0.100000   3.025000       -0.100000     1.0    -47934.750195         False          False  False
5  -47871.166862  -47914.916862  57206.806413 -47871.166862   46.775000 -47914.916862   0.100000  43.650000        0.000000     1.0    -47934.750195         False          False  False
6  -47871.166862  -47871.266862  57303.681413 -47871.166862   43.550000 -47871.266862   0.100000   0.000000       -3.125000     2.0    -47934.750195         False          False  False
7  -47766.829362  -47771.266846  57303.681413 -47766.829362  104.337500 -47771.266846   0.200195   4.237288        1.112305     1.0    -47934.750195         False          False  False
8  -47766.829362  -47768.141846  57303.681641 -47766.829362    2.000000 -47768.141846   0.200195   1.112288      -98.887467     2.0    -47934.750195         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1139/1024.[0m
[08/10 20:28:45]  --------------------------------------------------------------------------------
[08/10 20:28:45]  Iteration: 405 (144 solution, 260 counterexamples)
[08/10 20:29:18]  Generator returned sat in 23.772243 secs.
[08/10 20:29:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:29:20]  Improved gap from 25/8 to 3.125
[08/10 20:29:21]  Improved number of small numbers from 65 to 83 out of a max of 114
[08/10 20:29:21]  Verifer returned sat in 3.210886 secs.
[08/10 20:29:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -45820.920898  -45828.276584  54589.240967 -45820.920898    0.200195 -45828.276584        0.0    7.355686        7.355518     6.0    -45828.276584            -1             -1     -1
1  -45820.920898  -45820.921029  54678.760579 -45820.920898    0.100098 -45820.921029        0.0    0.000130       -3.124870     6.0    -45820.920898         False           True  False
2  -45814.771029  -45817.796029  54775.635579 -45814.771029    6.150000 -45817.796029        0.0    3.025000       -0.100000     1.0    -45820.920898         False           True  False
3  -45793.162695  -45814.671029  54854.127246 -45793.162695   24.633333 -45814.671029        0.0   21.508333        0.000000     1.0    -45820.920898         False          False  False
4  -45793.162695  -45793.162695  54951.002197 -45793.162695   21.408333 -45793.162695        0.0    0.000000       -3.125049     2.0    -45820.920898         False          False  False
5  -45750.525195  -45788.382695  55007.352295 -45750.525195   42.637500 -45788.382695        0.0   37.857500       -4.137451     1.0    -45820.920898         False          False  False
6  -45743.262695  -45746.387695  55104.227246 -45743.262695   45.120000 -45746.387695        0.0    3.125000        0.000000     1.0    -45820.920898         False          False  False
7  -45642.962695  -45743.162598  55104.227246 -45642.962695  103.425000 -45743.162598        0.1  100.099902        0.200000     1.0    -45820.920898         False          False  False
8  -45642.962695  -45643.262695  55104.227295 -45642.962695    2.000000 -45643.262695        0.1    0.200000      -99.799951     2.0    -45820.920898         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 20:29:22]  --------------------------------------------------------------------------------
[08/10 20:29:22]  Iteration: 406 (144 solution, 261 counterexamples)
[08/10 20:31:36]  Generator returned sat in 125.159182 secs.
[08/10 20:31:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:31:38]  Improved gap from 0 to 23.4375
[08/10 20:31:38]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 20:31:38]  Verifer returned sat in 1.606053 secs.
[08/10 20:31:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -44396.200439  -44496.250244  53257.164795 -44396.200439    0.049805 -44496.250244   0.000000  100.049805      100.000000     4.0    -44496.250244            -1             -1   False
1  -44396.200439  -44496.200195  53257.164795 -44396.200439    0.050049 -44496.200195   0.000000   99.999756        0.000000     2.0    -44496.250244         False          False   False
2  -44219.787842  -44396.200439  53257.164795 -44219.787842  276.412354 -44396.200439   0.000000  176.412598       76.412598     3.0    -44496.250244         False          False   False
3  -43902.350342  -44219.737793  53257.164795 -43902.350342  493.850098 -44219.737793  70.412598  246.974854      223.437500     1.0    -44496.250244         False          False   False
4  -43902.350342  -44096.200439  53257.164795 -43902.350342  246.925049 -44096.200439  70.412598  123.437500      123.437500     2.0    -44496.250244         False          False    True
5  -43902.350342  -43996.250244  53257.164795 -43902.350342    0.500000 -43996.250244  70.412598   23.487305       23.437500     3.0    -44496.250244         False          False    True
6  -43902.350342  -43996.200439  53333.727295 -43902.350342    0.500000 -43996.200439  70.412598   23.437500        0.000000     4.0    -44496.250244         False          False    True
7  -43902.350342  -43972.762939  53410.289795 -43902.350342    0.500000 -43972.762939  70.412598    0.000000      -23.437500     5.0    -44496.250244         False          False    True
8  -43655.475342  -43949.325195  53410.289795 -43655.475342  246.875000 -43949.325195  70.412598  223.437256      123.437500     1.0    -43725.887939          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/10 20:31:39]  --------------------------------------------------------------------------------
[08/10 20:31:39]  Iteration: 407 (144 solution, 262 counterexamples)
[08/10 20:33:23]  Generator returned sat in 95.987068 secs.
[08/10 20:33:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:33:27]  Improved gap from 1/20 to 23.4375
[08/10 20:33:27]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 20:33:27]  Verifer returned sat in 3.257324 secs.
[08/10 20:33:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -44653.143066  -44753.140625  53514.104980 -44653.143066   99.999756 -44753.140625   0.002441   99.995117       99.995117     7.0    -44753.140625            -1             -1     -1
1  -44653.140625  -44729.697998  53514.104980 -44653.140625   99.997559 -44729.697998   0.002441   76.554932       -0.002441     7.0    -44653.143066         False           True   True
2  -44629.700684  -44653.140381  53590.667236 -44629.700684   99.994873 -44653.140381   0.002441   23.437256       -0.000244     1.0    -44629.703125         False           True  False
3  -44429.703125  -44529.702881  53590.667236 -44429.703125  223.434814 -44529.702881   0.002441   99.997314       99.997314     1.0    -44629.703125         False          False  False
4  -44304.264160  -44429.702881  53590.667236 -44304.264160  225.436279 -44429.702881   2.001221  123.437500      123.437500     1.0    -44629.703125         False          False  False
5  -44304.264160  -44329.705322  53590.667236 -44304.264160    0.010000 -44329.705322   2.001221   23.439941       23.437500     2.0    -44629.703125         False          False   True
6  -44304.264160  -44329.702881  53667.229736 -44304.264160    0.500000 -44329.702881   2.001221   23.437500        0.000000     3.0    -44629.703125         False          False   True
7  -44304.264160  -44306.265381  53743.792236 -44304.264160    0.500000 -44306.265381   2.001221    0.000000      -23.437500     4.0    -44629.703125         False          False   True
8  -44240.295410  -44282.827881  53743.792480 -44240.295410   63.968750 -44282.827881   2.001221   40.531250      -59.468506     1.0    -44242.296631          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 20:33:28]  --------------------------------------------------------------------------------
[08/10 20:33:28]  Iteration: 408 (144 solution, 263 counterexamples)
[08/10 20:37:12]  Generator returned sat in 215.675004 secs.
[08/10 20:37:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:37:19]  Improved gap from 3/118 to 0
[08/10 20:37:20]  Improved number of small numbers from 85 to 97 out of a max of 114
[08/10 20:37:20]  Verifer returned sat in 7.218919 secs.
[08/10 20:37:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -44184.926758  -44241.739160  53294.885742 -44184.926758    0.100098 -44241.739160      0.000  56.812402       56.812158     5.0     -44241.73916            -1             -1   False
1  -44184.926758  -44185.026855  53338.073486 -44184.926758   56.812256 -44185.026855      0.000   0.100098       -0.000098     2.0     -44241.73916         False          False   False
2  -44184.826660  -44184.926660  53437.873535 -44184.826660    0.200195 -44184.926660      0.000   0.100000       -0.099951     1.0     -44184.82666         False          False   False
3  -44184.626660  -44184.726660  53537.773438 -44184.626660    0.300000 -44184.726660      0.000   0.100000       -0.000049     1.0     -44184.82666         False          False   False
4  -44070.701660  -44140.545410  53537.773438 -44070.701660  114.025000 -44140.545410     13.725  56.118750        0.199951     1.0     -44184.82666         False          False   False
5  -44069.307910  -44084.326660  53636.179688 -44069.307910   57.512500 -44084.326660     13.725   1.293750       -0.000049     1.0     -44184.82666         False          False    True
6  -43991.045410  -44082.932910  53657.916992 -43991.045410   79.556250 -44082.932910     13.725  78.162500       -0.000244     1.0     -44184.82666         False          False    True
7  -43978.032910  -44004.670410  53743.792236 -43978.032910   91.175000 -44004.670410     13.725  12.912500       -1.112500     1.0     -44184.82666         False          False    True
8  -43876.920410  -43990.645264  53743.792236 -43876.920410  114.025000 -43990.645264     13.725  99.999854        0.000000     1.0     -44184.82666         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 20:37:21]  --------------------------------------------------------------------------------
[08/10 20:37:21]  Iteration: 409 (144 solution, 264 counterexamples)
[08/10 20:38:50]  Generator returned sat in 80.178240 secs.
[08/10 20:38:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:38:52]  Verifer returned unsat in 1.553503 secs.
[08/10 20:38:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:38:52]  --------------------------------------------------------------------------------
[08/10 20:38:52]  Iteration: 410 (145 solution, 264 counterexamples)
[08/10 20:39:20]  Generator returned sat in 19.031833 secs.
[08/10 20:39:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:39:23]  Verifer returned unsat in 2.544360 secs.
[08/10 20:39:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:39:23]  --------------------------------------------------------------------------------
[08/10 20:39:23]  Iteration: 411 (146 solution, 264 counterexamples)
[08/10 20:39:54]  Generator returned sat in 22.066842 secs.
[08/10 20:39:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:39:56]  Verifer returned unsat in 1.686839 secs.
[08/10 20:39:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:39:56]  --------------------------------------------------------------------------------
[08/10 20:39:56]  Iteration: 412 (147 solution, 264 counterexamples)
[08/10 20:40:24]  Generator returned sat in 19.020440 secs.
[08/10 20:40:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:40:27]  Verifer returned unsat in 1.784962 secs.
[08/10 20:40:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:40:27]  --------------------------------------------------------------------------------
[08/10 20:40:27]  Iteration: 413 (148 solution, 264 counterexamples)
[08/10 20:41:09]  Generator returned sat in 33.983088 secs.
[08/10 20:41:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:41:21]  Improved gap from 0 to 15.625
[08/10 20:41:22]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 20:41:22]  Verifer returned sat in 11.564148 secs.
[08/10 20:41:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -49062.030624  -49494.730624  58521.128438 -49062.030624    0.099854 -49494.730624       0.10  432.600000      381.550000     7.0    -49494.730624            -1             -1     -1
1  -49012.880624  -49443.680624  58521.128438 -49012.880624  481.750000 -49443.680624      49.25  381.550000      281.550000     8.0    -49494.730624         False          False   True
2  -48912.780624  -49243.680664  58521.128438 -48912.780624  481.650000 -49243.680664      49.35  281.550040      281.550000     9.0    -48962.130624          True           True   True
3  -48912.780624  -49243.680624  58521.128438 -48912.780624    0.100000 -49243.680624      49.35  281.550000      181.550000     7.0    -48962.130624         False           True   True
4  -48912.780624  -49062.130624  58521.128438 -48912.780624  251.600000 -49062.130624      49.35  100.000000       81.550000     8.0    -48962.130624         False          False   True
5  -48886.980624  -48991.055420  58521.128438 -48886.980624  125.800000 -48991.055420      49.35   54.724796        7.350000     4.0    -48962.130624         False           True  False
6  -48878.805420  -48943.680624  58605.503438 -48878.805420   62.900000 -48943.680624      49.35   15.525204       -0.099796     2.0    -48962.130624         False          False  False
7  -48862.880624  -48928.055420  58689.678437 -48862.880624   31.450000 -48928.055420      49.35   15.824796        0.000000     1.0    -48962.130624         False          False  False
8  -48862.880624  -48912.230624  58689.678467 -48862.880624   15.725000 -48912.230624      49.35    0.000000      -99.999971     2.0    -48962.130624         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5631/20.[0m
[08/10 20:41:23]  --------------------------------------------------------------------------------
[08/10 20:41:23]  Iteration: 414 (148 solution, 265 counterexamples)
[08/10 20:44:14]  Generator returned sat in 162.438375 secs.
[08/10 20:44:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:44:19]  Improved gap from 2388893/167936 to 15.625
[08/10 20:44:20]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 20:44:20]  Verifer returned sat in 5.020555 secs.
[08/10 20:44:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -50406.233154  -50881.308105  58716.845947 -50406.233154  475.000000 -50881.308105   0.099854  474.975098      468.475098     5.0    -50881.308105            -1             -1     -1
1  -50406.233154  -50774.808350  58716.845947 -50406.233154  474.975098 -50774.808350   0.099854  368.475342      368.475098     5.0    -50406.333008         False          False   True
2  -50340.683350  -50774.808105  58716.845947 -50340.683350  434.025146 -50774.808105   0.099854  434.024902      334.024902     6.0    -50340.783203         False          False   True
3  -50340.683350  -50611.808105  58716.845947 -50340.683350  434.000000 -50611.808105   0.099854  271.024902      234.024902     7.0    -50340.783203         False          False   True
4  -50340.683350  -50474.808350  58716.845947 -50340.683350  271.000000 -50474.808350   0.099854  134.025146      134.024902     8.0    -50340.783203         False          False   True
5  -50340.683350  -50406.308105  58716.845947 -50340.683350  134.000000 -50406.308105   0.099854   65.524902       34.024902     4.0    -50340.783203         False           True  False
6  -50340.683350  -50356.083008  58782.495850 -50340.683350   65.500000 -50356.083008   0.099854   15.299805       -0.325195     5.0    -50340.783203         False          False  False
7  -50324.733154  -50340.458008  58866.870850 -50324.733154   31.250000 -50340.458008   0.099854   15.625000        0.000000     1.0    -50340.783203         False          False  False
8  -50324.733154  -50324.833008  58866.870850 -50324.733154   14.125000 -50324.833008   0.099854    0.000000     -100.000000     2.0    -50340.783203         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=737/2.[0m
[08/10 20:44:20]  --------------------------------------------------------------------------------
[08/10 20:44:20]  Iteration: 415 (148 solution, 266 counterexamples)
[08/10 20:45:04]  Generator returned sat in 34.871295 secs.
[08/10 20:45:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:45:09]  Improved gap from 125/8 to 15.625
[08/10 20:45:09]  Improved number of small numbers from 81 to 114 out of a max of 114
[08/10 20:45:09]  Verifer returned sat in 4.757896 secs.
[08/10 20:45:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -49199.308350  -49668.907959  58716.845703 -49199.308350    0.099854 -49668.907959   0.099854  469.499756      399.999756     6.0    -49668.907959            -1             -1     -1
1  -49199.308350  -49570.508301  58716.845703 -49199.308350  469.499756 -49570.508301   0.099854  371.100098      299.999756     6.0    -49668.907959         False          False   True
2  -49199.308350  -49499.407959  58716.845703 -49199.308350  371.100000 -49499.407959   0.099854  299.999756      199.999756     7.0    -49199.408203         False          False   True
3  -49128.208008  -49399.407959  58716.845703 -49128.208008  371.100098 -49399.407959   0.099854  271.100098      171.100098     8.0    -49199.408203         False          False   True
4  -49128.208008  -49199.408203  58716.845703 -49128.208008  271.000000 -49199.408203   0.099854   71.100342       71.100098     9.0    -49199.408203         False          False   True
5  -49065.308350  -49131.008057  58716.845703 -49065.308350  134.000000 -49131.008057   0.099854   65.599854       33.999756     3.0    -49199.408203         False           True  False
6  -49065.308350  -49080.933105  58782.745850 -49065.308350   65.500000 -49080.933105   0.099854   15.524902       -0.100098     2.0    -49199.408203         False          False  False
7  -49049.583252  -49065.308105  58867.120850 -49049.583252   31.250000 -49065.308105   0.099854   15.625000        0.000000     1.0    -49199.408203         False          False  False
8  -49049.583252  -49049.683105  58951.495850 -49049.583252   14.125000 -49049.683105   0.099854    0.000000      -15.625000     2.0    -49199.408203         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=614605/2048.[0m
[08/10 20:45:10]  --------------------------------------------------------------------------------
[08/10 20:45:10]  Iteration: 416 (148 solution, 267 counterexamples)
[08/10 20:46:07]  Generator returned sat in 47.903286 secs.
[08/10 20:46:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:46:12]  Improved gap from 0 to 15.625
[08/10 20:46:12]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 20:46:12]  Verifer returned sat in 4.338105 secs.
[08/10 20:46:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -69055.743164  -69530.743164  57818.317383 -69055.743164  540.600000 -69530.743164   0.050049  474.949951      468.450195     6.0    -69530.743164            -1             -1     -1
1  -68990.143066  -69524.243164  57818.317383 -68990.143066  540.550049 -69524.243164   0.050049  534.050049      434.050293     5.0    -68990.193115         False           True   True
2  -68990.143066  -69424.243408  57818.317383 -68990.143066  534.000000 -69424.243408   0.050049  434.050293      334.050293     4.0    -68990.193115         False          False   True
3  -68990.143066  -69261.243164  57818.317383 -68990.143066  433.999756 -69261.243164   0.050049  271.050049      234.050293     5.0    -68990.193115         False          False   True
4  -68990.143066  -69124.243408  57818.317383 -68990.143066  271.000000 -69124.243408   0.050049  134.050293      134.050293     6.0    -68990.193115         False          False   True
5  -68990.143066  -69055.743164  57818.317383 -68990.143066  134.000000 -69055.743164   0.050049   65.550049       34.050293     5.0    -68990.193115         False           True  False
6  -68990.143066  -69005.768311  57884.217285 -68990.143066   65.500000 -69005.768311   0.050049   15.575195       -0.049805     6.0    -68990.193115         False          False  False
7  -68974.468262  -68990.143311  57968.592285 -68974.468262   31.250000 -68990.143311   0.050049   15.625000        0.000000     1.0    -68990.193115         False           True  False
8  -68974.468262  -68974.518311  57968.592285 -68974.468262   14.125000 -68974.518311   0.050049    0.000000     -100.000000     2.0    -68990.193115         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=889037/2048.[0m
[08/10 20:46:13]  --------------------------------------------------------------------------------
[08/10 20:46:13]  Iteration: 417 (148 solution, 268 counterexamples)
[08/10 20:46:47]  Generator returned sat in 25.460423 secs.
[08/10 20:46:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:46:52]  Improved gap from 249/16 to 15.625
[08/10 20:46:52]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 20:46:52]  Verifer returned sat in 4.664038 secs.
[08/10 20:46:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -74591.353516  -75061.353516  57818.317383 -74591.353516  770.000000 -75061.353516    0.000000  470.000000           400.0     5.0    -75061.353516            -1             -1   False
1  -74291.403564  -74891.353516  57818.317383 -74291.403564  769.949951 -74891.353516  299.949951  300.000000           300.0     5.0    -74591.353516         False          False   False
2  -74291.403564  -74891.353271  57818.317383 -74291.403564  299.999756 -74891.353271  299.949951  299.999756           200.0     5.0    -74591.353516         False          False    True
3  -74291.403564  -74791.353516  57818.317383 -74291.403564  299.950195 -74791.353516  299.949951  200.000000           100.0     5.0    -74591.353516         False          False    True
4  -74220.403564  -74591.353516  57818.317383 -74220.403564  271.000000 -74591.353516  299.949951   71.000000            71.0     6.0    -74591.353516         False          False    True
5  -74157.403564  -74522.528320  57818.317383 -74157.403564  134.000000 -74522.528320  299.949951   65.174805            34.0     2.0    -74591.353516         False           True   False
6  -74157.078369  -74472.653320  57883.992188 -74157.078369   65.500000 -74472.653320  299.949951   15.625000             0.0     2.0    -74591.353516         False          False   False
7  -74141.453369  -74457.028320  57968.367188 -74141.453369   31.250000 -74457.028320  299.949951   15.625000             0.0     2.0    -74591.353516         False          False   False
8  -74141.453369  -74441.403320  57968.367188 -74141.453369   14.125000 -74441.403320  299.949951    0.000000          -100.0     2.0    -74591.353516         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/10 20:46:53]  --------------------------------------------------------------------------------
[08/10 20:46:53]  Iteration: 418 (148 solution, 269 counterexamples)
[08/10 20:48:34]  Generator returned sat in 92.154601 secs.
[08/10 20:48:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:48:42]  Improved gap from 0 to 0
[08/10 20:48:43]  Improved number of small numbers from 75 to 96 out of a max of 114
[08/10 20:48:43]  Verifer returned sat in 7.919716 secs.
[08/10 20:48:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -78686.865234  -78689.850391  61516.814209 -78686.865234  769.999756 -78689.850391        0.0  2.985156        2.985107     8.0    -78689.850391            -1             -1     -1
1  -78686.865234  -78689.828613  61613.829102 -78686.865234    2.984863 -78689.828613        0.0  2.963379        0.000000     3.0    -78686.865234         False           True  False
2  -78686.843750  -78686.844141  61713.807373 -78686.843750    2.984863 -78686.844141        0.0  0.000391       -0.000244     1.0    -78686.865234         False          False  False
3  -78686.831641  -78686.841641  61813.794922 -78686.831641    0.012500 -78686.841641        0.0  0.010000       -0.000586     1.0    -78686.831641         False          False  False
4  -78685.332891  -78686.831055  61912.296758 -78685.332891    1.508750 -78686.831055        0.0  1.498164        0.000000     1.0    -78686.831641         False          False  False
5  -78685.332891  -78685.332891  62012.296631 -78685.332891    1.497559 -78685.332891        0.0  0.000000       -0.000127     2.0    -78686.831641         False          False  False
6  -78685.321641  -78685.332031  62112.285508 -78685.321641    0.011250 -78685.332031        0.0  0.010391        0.000000     1.0    -78686.831641         False          False  False
7  -78685.321641  -78685.321641  62212.275635 -78685.321641    0.010000 -78685.321641        0.0  0.000000       -0.009873     2.0    -78686.831641         False          False  False
8  -78685.311641  -78685.311768  62312.275391 -78685.311641    0.010000 -78685.311768        0.0  0.000127       -0.000117     1.0    -78686.831641         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5/4096.[0m
[08/10 20:48:43]  --------------------------------------------------------------------------------
[08/10 20:48:43]  Iteration: 419 (148 solution, 270 counterexamples)
[08/10 20:51:12]  Generator returned sat in 139.543792 secs.
[08/10 20:51:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:51:15]  Verifer returned unsat in 1.992649 secs.
[08/10 20:51:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:51:15]  --------------------------------------------------------------------------------
[08/10 20:51:15]  Iteration: 420 (149 solution, 270 counterexamples)
[08/10 20:51:44]  Generator returned sat in 20.737961 secs.
[08/10 20:51:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:51:47]  Verifer returned unsat in 1.754038 secs.
[08/10 20:51:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:51:47]  --------------------------------------------------------------------------------
[08/10 20:51:47]  Iteration: 421 (150 solution, 270 counterexamples)
[08/10 20:53:02]  Generator returned sat in 66.072795 secs.
[08/10 20:53:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:53:12]  Improved gap from 1/80 to 3.125
[08/10 20:53:12]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 20:53:12]  Verifer returned sat in 9.379652 secs.
[08/10 20:53:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -79504.112305  -79515.306641  62626.939941 -79504.112305  769.999756 -79515.306641   0.000000  11.194336       11.194092     9.0    -79515.306641            -1             -1     -1
1  -79504.112305  -79507.237305  62715.745850 -79504.112305    0.100098 -79507.237305   0.000000   3.125000        0.000000     3.0    -79504.112305         False           True  False
2  -79401.187500  -79404.212402  62715.745850 -79401.187500  106.049805 -79404.212402   0.000000   3.024902        2.924805     1.0    -79504.112305         False          False  False
3  -79400.987305  -79404.112305  62812.620850 -79400.987305    3.225098 -79404.112305   0.000000   3.125000        0.000000     2.0    -79400.987305         False          False  False
4  -79290.917969  -79353.159424  62812.620850 -79290.917969  113.194336 -79353.159424   7.044434  55.197021        3.024902     1.0    -79400.987305         False          False  False
5  -79290.917969  -79300.987305  62909.495850 -79290.917969   55.097168 -79300.987305   7.044434   3.024902       -0.100098     2.0    -79400.987305         False          False   True
6  -79214.281738  -79297.862305  62932.959473 -79214.281738   79.661133 -79297.862305   7.044434  76.536133       -0.000244     1.0    -79400.987305         False          False   True
7  -79197.362305  -79221.226318  63016.040283 -79197.362305   93.455566 -79221.226318   7.044434  16.819580        0.000000     1.0    -79400.987305         False          False   True
8  -79100.987549  -79204.306641  63019.665039 -79100.987549  113.194336 -79204.306641   7.044434  96.274658       -0.000488     1.0    -79400.987305         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=6195/2048.[0m
[08/10 20:53:13]  --------------------------------------------------------------------------------
[08/10 20:53:13]  Iteration: 422 (150 solution, 271 counterexamples)
[08/10 20:57:02]  Generator returned sat in 220.310272 secs.
[08/10 20:57:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:57:15]  Improved gap from 0 to 14.0625
[08/10 20:57:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 20:57:15]  Verifer returned sat in 12.337675 secs.
[08/10 20:57:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -70184.000977  -70584.100830  63903.384521 -70184.000977    0.099854 -70584.100830   0.099854  400.000000      400.000000     9.0    -70584.100830            -1             -1     -1
1  -70108.613281  -70534.788574  63903.384521 -70108.613281  475.387695 -70534.788574   0.099854  426.075439      375.387695     3.0    -70584.100830         False           True   True
2  -70059.401123  -70484.100830  63903.384521 -70059.401123  475.287598 -70484.100830   0.099854  424.599854      324.599854     4.0    -70059.500977         False          False   True
3  -70059.401123  -70384.100830  63903.384521 -70059.401123  305.000000 -70384.100830   0.099854  324.599854      224.599854     5.0    -70059.500977         False          False   True
4  -70059.401123  -70184.100830  63903.384521 -70059.401123  253.000000 -70184.100830   0.099854  124.599854      124.599854     6.0    -70059.500977         False          False   True
5  -70059.401123  -70108.613525  63903.384521 -70059.401123  124.500000 -70108.613525   0.099854   49.112549       24.599854     4.0    -70059.500977         False           True  False
6  -70048.263672  -70062.325928  63967.547119 -70048.263672   60.250000 -70062.325928   0.099854   13.962402       -0.100098     5.0    -70059.500977         False          False  False
7  -70034.101074  -70048.263428  64053.484619 -70034.101074   28.125000 -70048.263428   0.099854   14.062500        0.000000     1.0    -70059.500977         False          False  False
8  -70034.101074  -70034.200928  64139.421875 -70034.101074   12.062500 -70034.200928   0.099854    0.000000      -14.062744     2.0    -70059.500977         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=30039/80.[0m
[08/10 20:57:16]  --------------------------------------------------------------------------------
[08/10 20:57:16]  Iteration: 423 (150 solution, 272 counterexamples)
[08/10 20:58:36]  Generator returned sat in 71.388172 secs.
[08/10 20:58:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 20:58:40]  Improved gap from 72089/8192 to 14.0625
[08/10 20:58:42]  Improved number of small numbers from 60 to 74 out of a max of 114
[08/10 20:58:42]  Verifer returned sat in 4.905002 secs.
[08/10 20:58:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -70696.791016  -71164.490928  64416.174619 -70696.791016    0.100098 -71164.490928        0.1  467.599912      399.999912     6.0    -71164.490928            -1             -1     -1
1  -70696.690928  -70996.890928  64416.174619 -70696.690928  467.700000 -70996.890928        0.2  300.000000      300.000000     6.0    -71164.490928         False          False   True
2  -70628.990928  -70996.890928  64416.174619 -70628.990928  367.700000 -70996.890928        0.2  367.700000      267.700000     6.0    -70629.190928         False          False   True
3  -70628.990928  -70896.890928  64416.174619 -70628.990928  367.699951 -70896.890928        0.2  267.700000      167.700000     7.0    -70629.190928         False          False   True
4  -70628.990928  -70696.891113  64416.174619 -70628.990928  267.600000 -70696.891113        0.2   67.700186       67.700000     8.0    -70629.190928         False          False   True
5  -70564.891113  -70629.090820  64416.174619 -70564.891113  131.800000 -70629.090820        0.2   63.999707       31.799814     1.0    -70629.190928         False           True  False
6  -70564.891113  -70580.878428  64484.274658 -70564.891113   63.900000 -70580.878428        0.2   15.787314       -0.100146     2.0    -70629.190928         False          False  False
7  -70550.728428  -70564.990967  64570.212119 -70550.728428   29.950000 -70564.990967        0.2   14.062539        0.000000     1.0    -70629.190928         False          False  False
8  -70550.728428  -70550.928428  64656.149414 -70550.728428   12.975000 -70550.928428        0.2    0.000000      -14.062705     2.0    -70629.190928         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/10 20:58:43]  --------------------------------------------------------------------------------
[08/10 20:58:43]  Iteration: 424 (150 solution, 273 counterexamples)
[08/10 21:02:24]  Generator returned sat in 212.144577 secs.
[08/10 21:02:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:02:28]  Verifer returned unsat in 2.842562 secs.
[08/10 21:02:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:02:28]  --------------------------------------------------------------------------------
[08/10 21:02:28]  Iteration: 425 (151 solution, 273 counterexamples)
[08/10 21:02:58]  Generator returned sat in 21.792075 secs.
[08/10 21:02:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:03:01]  Verifer returned unsat in 1.711752 secs.
[08/10 21:03:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:03:01]  --------------------------------------------------------------------------------
[08/10 21:03:01]  Iteration: 426 (152 solution, 273 counterexamples)
[08/10 21:03:38]  Generator returned sat in 28.239027 secs.
[08/10 21:03:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:03:43]  Improved gap from 0 to 48.4375
[08/10 21:03:43]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 21:03:43]  Verifer returned sat in 3.835242 secs.
[08/10 21:03:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -70151.874268  -70200.311768  63519.595459 -70151.874268   48.437256 -70200.311768   0.000000  48.437500       48.437500     1.0    -70200.311768            -1             -1    True
1  -70151.874268  -70200.311768  63571.157715 -70151.874268   48.387500 -70200.311768   0.000000  48.437500       -0.000244     1.0    -70151.874268         False          False    True
2  -70051.824219  -70055.773926  63571.157715 -70051.824219  148.487549 -70055.773926   0.000000   3.949707        0.049805     1.0    -70151.874268         False          False    True
3  -69953.724121  -69953.773926  63571.157715 -69953.724121  102.049805 -69953.773926   0.000000   0.049805       -1.850098     1.0    -69953.724121         False          False    True
4  -69851.724121  -69851.874023  63571.157715 -69851.724121  102.049805 -69851.874023   0.050049   0.099854        0.099854     1.0    -69953.724121         False          False    True
5  -69798.799072  -69851.723877  63618.082764 -69798.799072   53.024902 -69851.723877   0.050049  52.874756       -0.050049     1.0    -69953.724121         False          False    True
6  -69798.648926  -69798.799072  63669.645264 -69798.648926   53.024902 -69798.799072   0.050049   0.100098      -48.337402     1.0    -69953.724121         False          False    True
7  -69745.724121  -69750.361572  63721.207764 -69745.724121   53.024902 -69750.361572   0.050049   4.587402      -43.850098     1.0    -69953.724121         False          False    True
8  -69697.286621  -69701.924072  63721.207764 -69697.286621   53.024902 -69701.924072   0.050049   4.587402      -95.412598     1.0    -69953.724121         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=409/4096.[0m
[08/10 21:03:44]  --------------------------------------------------------------------------------
[08/10 21:03:44]  Iteration: 427 (152 solution, 274 counterexamples)
[08/10 21:04:50]  Generator returned sat in 56.809359 secs.
[08/10 21:04:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:04:53]  Verifer returned unsat in 2.295811 secs.
[08/10 21:04:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:04:53]  --------------------------------------------------------------------------------
[08/10 21:04:53]  Iteration: 428 (153 solution, 274 counterexamples)
[08/10 21:05:38]  Generator returned sat in 35.649911 secs.
[08/10 21:05:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:05:43]  Verifer returned unsat in 3.840606 secs.
[08/10 21:05:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:05:43]  --------------------------------------------------------------------------------
[08/10 21:05:43]  Iteration: 429 (154 solution, 274 counterexamples)
[08/10 21:06:12]  Generator returned sat in 20.409512 secs.
[08/10 21:06:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:06:17]  Verifer returned unsat in 3.774639 secs.
[08/10 21:06:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:06:17]  --------------------------------------------------------------------------------
[08/10 21:06:17]  Iteration: 430 (155 solution, 274 counterexamples)
[08/10 21:06:46]  Generator returned sat in 20.146651 secs.
[08/10 21:06:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:06:50]  Verifer returned unsat in 2.883228 secs.
[08/10 21:06:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:06:50]  --------------------------------------------------------------------------------
[08/10 21:06:50]  Iteration: 431 (156 solution, 274 counterexamples)
[08/10 21:07:19]  Generator returned sat in 20.039887 secs.
[08/10 21:07:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:07:23]  Verifer returned unsat in 3.098623 secs.
[08/10 21:07:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:07:23]  --------------------------------------------------------------------------------
[08/10 21:07:23]  Iteration: 432 (157 solution, 274 counterexamples)
[08/10 21:07:53]  Generator returned sat in 20.470639 secs.
[08/10 21:07:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:07:57]  Verifer returned unsat in 2.957376 secs.
[08/10 21:07:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:07:57]  --------------------------------------------------------------------------------
[08/10 21:07:57]  Iteration: 433 (158 solution, 274 counterexamples)
[08/10 21:08:30]  Generator returned sat in 24.174535 secs.
[08/10 21:08:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:08:31]  Verifer returned unsat in 0.688412 secs.
[08/10 21:08:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:08:32]  --------------------------------------------------------------------------------
[08/10 21:08:32]  Iteration: 434 (159 solution, 274 counterexamples)
[08/10 21:09:02]  Generator returned sat in 21.576059 secs.
[08/10 21:09:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:09:06]  Verifer returned unsat in 2.790052 secs.
[08/10 21:09:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:09:06]  --------------------------------------------------------------------------------
[08/10 21:09:06]  Iteration: 435 (160 solution, 274 counterexamples)
[08/10 21:09:55]  Generator returned sat in 39.646471 secs.
[08/10 21:09:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:10:01]  Improved gap from 0 to 18.75
[08/10 21:10:02]  Improved number of small numbers from 68 to 80 out of a max of 114
[08/10 21:10:02]  Verifer returned sat in 6.282434 secs.
[08/10 21:10:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -65028.477295  -65416.113531  63571.157715 -65028.477295    0.011364 -65416.113531   0.000000  387.636236      387.636236     7.0    -65416.113531            -1             -1   False
1  -65028.465804  -65416.113525  63571.157715 -65028.465804  387.647727 -65416.113525   0.011364  387.636358      287.636364     7.0    -65416.113531         False          False   False
2  -65028.465804  -65316.113525  63571.157715 -65028.465804    0.011364 -65316.113525   0.011364  287.636358      187.636364     7.0    -65028.477167         False          False    True
3  -65028.465804  -65156.681713  63571.157715 -65028.465804  287.625000 -65156.681713   0.011364  128.204545       87.636364     8.0    -65028.477167         False          False    True
4  -64897.238531  -65028.477295  63571.157715 -64897.238531  259.431818 -65028.477295   0.011364  131.227400      118.863636     9.0    -65028.477167         False          False    True
5  -64897.238531  -64964.369141  63571.157715 -64897.238531  131.215909 -64964.369141   0.011364   67.119246       18.863636     2.0    -65028.477167         False           True   False
6  -64897.238531  -64915.988531  63652.282715 -64897.238531   67.107955 -64915.988531   0.011364   18.738636       -0.011364     3.0    -65028.477167         False          False   False
7  -64880.923190  -64897.238531  63733.532715 -64880.923190   35.053977 -64897.238531   0.011364   16.303977       -2.446023     1.0    -65028.477167         False          False   False
8  -64878.200179  -64878.488525  63814.782471 -64878.200179   19.026989 -64878.488525   0.011364    0.276983      -18.473256     1.0    -65028.477167         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3164/11.[0m
[08/10 21:10:02]  --------------------------------------------------------------------------------
[08/10 21:10:02]  Iteration: 436 (160 solution, 275 counterexamples)
[08/10 21:12:33]  Generator returned sat in 140.949845 secs.
[08/10 21:12:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:12:36]  Improved gap from 0 to 15.625
[08/10 21:12:37]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 21:12:37]  Verifer returned sat in 3.280645 secs.
[08/10 21:12:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -66474.329590  -66882.142090  63571.157471 -66474.329590    0.046631 -66882.142090   0.046875  407.765625      381.296631     3.0    -66882.142090            -1             -1     -1
1  -66432.017090  -66855.673096  63571.157471 -66432.017090  450.078125 -66855.673096  42.359375  381.296631      281.296631     3.0    -66882.142090         False          False   True
2  -66363.282471  -66655.673096  63571.157471 -66363.282471  450.031250 -66655.673096  42.359375  250.031250      250.031250     4.0    -66405.641846         False          False   True
3  -66363.282471  -66611.142090  63571.157471 -66363.282471  249.984131 -66611.142090  42.359375  205.500244      150.031250     5.0    -66405.641846         False          False   True
4  -66297.782715  -66474.376465  63571.157471 -66297.782715  271.000000 -66474.376465  42.359375  134.234375      115.531006     6.0    -66405.641846         False          False   True
5  -66297.782715  -66405.595215  63571.157471 -66297.782715  134.000000 -66405.595215  42.359375   65.453125       15.531006     2.0    -66405.641846         False           True  False
6  -66297.735840  -66355.673096  63655.532471 -66297.735840   65.500000 -66355.673096  42.359375   15.577881       -0.047119     3.0    -66405.641846         False          False  False
7  -66282.063721  -66340.048096  63739.907471 -66282.063721   31.250000 -66340.048096  42.359375   15.625000        0.000000     1.0    -66405.641846         False          False  False
8  -66282.063721  -66324.423096  63824.282471 -66282.063721   14.125000 -66324.423096  42.359375    0.000000      -15.625000     2.0    -66405.641846         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1152191/4096.[0m
[08/10 21:12:38]  --------------------------------------------------------------------------------
[08/10 21:12:38]  Iteration: 437 (160 solution, 276 counterexamples)
[08/10 21:16:34]  Generator returned sat in 227.377467 secs.
[08/10 21:16:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:16:36]  Improved gap from 0 to 100
[08/10 21:16:37]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 21:16:37]  Verifer returned sat in 1.788082 secs.
[08/10 21:16:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -67898.032715  -68097.982666  63739.907227 -67898.032715     0.050000 -68097.982666   0.050049   199.899902       99.899902     9.0    -68097.982666            -1             -1     -1
1  -67397.982666  -67898.032959  63739.907227 -67397.982666   699.949951 -67898.032959   0.050049   500.000244      499.949951     1.0    -68097.982666         False           True   True
2  -66897.882812  -67897.982666  63739.907227 -66897.882812  1000.100098 -67897.982666   0.050049  1000.049805      900.049805     2.0    -68097.982666         False          False   True
3  -66897.882812  -67797.570312  63739.907227 -66897.882812   798.049805 -67797.570312   0.050049   899.637451      800.049805     3.0    -66897.932861         False          False   True
4  -66897.882812  -67697.982666  63739.907227 -66897.882812   800.049805 -67697.982666   0.050049   800.049805      700.049805     4.0    -66897.932861         False          False   True
5  -66895.882812  -67497.982666  63739.907227 -66895.882812   802.049805 -67497.982666   0.050049   602.049805      602.049805     5.0    -66897.932861         False          False   True
6  -66696.907715  -67397.982666  63739.907227 -66696.907715   801.024902 -67397.982666   0.050049   701.024902      701.024902     5.0    -66897.932861         False           True  False
7  -66597.832520  -67297.982666  63739.907227 -66597.832520   800.100098 -67297.982666   0.050049   700.100098      700.100098     6.0    -66897.932861         False           True  False
8  -66497.882568  -67197.982910  63739.907227 -66497.882568   800.050049 -67197.982910   0.050049   700.050293      700.050049     7.0    -66897.932861         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=3686809/4096.[0m
[08/10 21:16:37]  --------------------------------------------------------------------------------
[08/10 21:16:37]  Iteration: 438 (160 solution, 277 counterexamples)
[08/10 21:19:53]  Generator returned sat in 186.359334 secs.
[08/10 21:19:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:19:55]  Improved gap from 1/40 to 23.4375
[08/10 21:19:55]  Improved number of small numbers from 84 to 114 out of a max of 114
[08/10 21:19:55]  Verifer returned sat in 1.309915 secs.
[08/10 21:19:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -67045.807617  -67045.907715  63663.344482 -67045.807617    0.100098 -67045.907715   0.000000    0.100098       -0.100098     9.0    -67045.907715            -1             -1     -1
1  -66945.807617  -67045.707520  63663.344727 -66945.807617  100.100098 -67045.707520   0.000000   99.899902       -0.099854     1.0    -67045.907715         False           True  False
2  -66922.270264  -66945.707764  63739.906982 -66922.270264  123.437256 -66945.707764   0.000000   23.437500       -0.000244     1.0    -67045.907715         False          False  False
3  -66699.832764  -66822.270020  63739.906982 -66699.832764  245.875000 -66822.270020   1.924805  120.512451      120.512451     1.0    -67045.907715         False          False  False
4  -66696.907715  -66722.270020  63739.906982 -66696.907715  123.437500 -66722.270020   1.924805   23.437500       23.437500     2.0    -67045.907715         False          False   True
5  -66696.907715  -66722.270020  63816.469482 -66696.907715    0.500000 -66722.270020   1.924805   23.437500        0.000000     2.0    -67045.907715         False          False   True
6  -66696.907715  -66698.832520  63890.007324 -66696.907715    0.500000 -66698.832520   1.924805    0.000000      -26.462158     3.0    -67045.907715         False          False   True
7  -66450.032715  -66672.370117  63890.007324 -66450.032715  246.875000 -66672.370117   1.924805  220.412598      120.412842     1.0    -66451.957520          True           True  False
8  -66450.032715  -66572.370117  63890.007324 -66450.032715   99.799805 -66572.370117   1.924805  120.412598       20.412842     2.0    -66451.957520         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=493619/4096.[0m
[08/10 21:19:56]  --------------------------------------------------------------------------------
[08/10 21:19:56]  Iteration: 439 (160 solution, 278 counterexamples)
[08/10 21:27:48]  Generator returned sat in 463.067989 secs.
[08/10 21:27:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:27:54]  Improved gap from 1/10 to 0
[08/10 21:27:56]  Improved number of small numbers from 71 to 83 out of a max of 114
[08/10 21:27:56]  Verifer returned sat in 7.101326 secs.
[08/10 21:27:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -66922.520264  -66997.920117  63540.257080 -66922.520264    0.049805 -66997.920117    0.05000  75.349854        0.049854     9.0    -66997.920117            -1             -1     -1
1  -66922.520264  -66922.620117  63640.107178 -66922.520264    0.249756 -66922.620117    0.05000   0.049854       -0.100049     6.0    -66997.920117         False           True   True
2  -66922.370117  -66922.470117  63740.056885 -66922.370117    0.200000 -66922.470117    0.05000   0.050000       -0.000195     1.0    -66922.420117          True           True  False
3  -66922.270117  -66922.370117  63839.957080 -66922.270117    0.150000 -66922.370117    0.05000   0.050000        0.000000     1.0    -66922.320117         False          False  False
4  -66808.995117  -66879.738867  63839.957080 -66808.995117  113.325000 -66879.738867   12.53125  58.212500        0.793750     1.0    -66922.320117         False          False  False
5  -66808.995117  -66822.320117  63939.113525 -66808.995117   58.162500 -66822.320117   12.53125   0.793750       -0.049805     2.0    -66922.320117         False          False   True
6  -66730.632617  -66821.476367  63960.800781 -66730.632617   79.156250 -66821.476367   12.53125  78.312500       -0.000049     1.0    -66922.320117         False          False   True
7  -66718.920117  -66743.113867  64047.426025 -66718.920117   90.025000 -66743.113867   12.53125  11.662500       -1.662305     1.0    -66922.320117         False          False   True
8  -66617.257617  -66729.788818  64047.426025 -66617.257617  113.325000 -66729.788818   12.53125  99.999951        0.000195     1.0    -66922.320117         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=127/160.[0m
[08/10 21:27:57]  --------------------------------------------------------------------------------
[08/10 21:27:57]  Iteration: 440 (160 solution, 279 counterexamples)
[08/10 21:29:06]  Generator returned sat in 59.753104 secs.
[08/10 21:29:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:29:10]  Improved gap from 0 to 0
[08/10 21:29:11]  Improved number of small numbers from 66 to 76 out of a max of 114
[08/10 21:29:11]  Verifer returned sat in 4.534373 secs.
[08/10 21:29:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -68197.954346  -68198.333018  64815.969971 -68197.954346  0.751221 -68198.333018        0.0  0.378672        0.378662     8.0    -68198.333018            -1             -1   False
1  -68197.582236  -68197.953564  64915.219199 -68197.582236  0.750781 -68197.953564        0.0  0.371328        0.000000     1.0    -68197.582236         False          False   False
2  -68197.582236  -68197.582236  65015.218750 -68197.582236  0.000732 -68197.582236        0.0  0.000000       -0.000449     2.0    -68197.582236         False          False   False
3  -68197.078174  -68197.581611  65114.715137 -68197.078174  0.504062 -68197.581611        0.0  0.503437        0.000000     1.0    -68197.582236         False          False   False
4  -68197.078174  -68197.078174  65214.715088 -68197.078174  0.502812 -68197.078174        0.0  0.000000       -0.000049     2.0    -68197.582236         False          False   False
5  -68196.327393  -68197.077637  65313.964355 -68196.327393  0.750781 -68197.077637        0.0  0.750244        0.000000     1.0    -68197.582236         False          False   False
6  -68196.327393  -68196.327393  65413.964355 -68196.327393  0.010000 -68196.327393        0.0  0.000000        0.000000     2.0    -68197.582236         False          False   False
7  -68194.818955  -68196.326768  65512.455918 -68194.818955  1.508438 -68196.326768        0.0  1.507812        0.000000     1.0    -68197.582236         False          False   False
8  -68194.818955  -68194.818955  65512.456055 -68194.818955  0.502812 -68194.818955        0.0  0.000000      -99.999863     2.0    -68197.582236         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3/2048.[0m
[08/10 21:29:12]  --------------------------------------------------------------------------------
[08/10 21:29:12]  Iteration: 441 (160 solution, 280 counterexamples)
[08/10 21:30:03]  Generator returned sat in 41.664316 secs.
[08/10 21:30:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:30:07]  Improved gap from 0 to 0
[08/10 21:30:08]  Improved number of small numbers from 58 to 85 out of a max of 114
[08/10 21:30:08]  Verifer returned sat in 4.566431 secs.
[08/10 21:30:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -68197.953613  -68197.964480  64815.220703 -68197.953613  0.011963 -68197.964480        0.0  0.010867       -0.000029     2.0    -68197.964480            -1             -1   False
1  -68197.952952  -68197.953369  64915.219238 -68197.952952  0.011528 -68197.953369        0.0  0.000417       -0.000833     1.0    -68197.952952         False          False   False
2  -68196.624023  -68197.951904  65013.890869 -68196.624023  1.329346 -68197.951904        0.0  1.327881       -0.000273     1.0    -68197.952952         False          False   False
3  -68196.623047  -68196.623647  65113.890137 -68196.623047  1.328857 -68196.623647        0.0  0.000600       -0.000029     1.0    -68196.623047         False          False   False
4  -68196.612397  -68196.622803  65213.879516 -68196.612397  0.011250 -68196.622803        0.0  0.010406        0.000000     1.0    -68196.623047         False          False   False
5  -68196.612397  -68196.612397  65313.878906 -68196.612397  0.010000 -68196.612397        0.0  0.000000       -0.000610     2.0    -68196.623047         False          False   False
6  -68196.602397  -68196.602814  65413.860352 -68196.602397  0.010000 -68196.602814        0.0  0.000417       -0.009164     1.0    -68196.623047         False          False   False
7  -68196.592814  -68196.593230  65513.859863 -68196.592814  0.010000 -68196.593230        0.0  0.000417       -0.000069     1.0    -68196.623047         False          False   False
8  -68196.583230  -68196.592285  65613.850342 -68196.583230  0.010000 -68196.592285        0.0  0.009055       -0.000008     1.0    -68196.623047         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 21:30:09]  --------------------------------------------------------------------------------
[08/10 21:30:09]  Iteration: 442 (160 solution, 281 counterexamples)
[08/10 21:31:16]  Generator returned sat in 58.217584 secs.
[08/10 21:31:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:31:27]  Improved gap from 1499/7372800 to 14.0625
[08/10 21:31:28]  Improved number of small numbers from 59 to 87 out of a max of 114
[08/10 21:31:28]  Verifer returned sat in 10.737993 secs.
[08/10 21:31:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -68381.350830  -68762.360343  65379.627462 -68381.350830   67.706055 -68762.360343        0.0  381.009513      381.009513     6.0    -68762.360343            -1             -1    True
1  -68381.350830  -68762.360107  65379.627462 -68381.350830   67.606445 -68762.360107        0.0  381.009277      281.009513     5.0    -68381.350830         False          False    True
2  -68381.350830  -68562.360352  65379.627462 -68381.350830   67.606250 -68562.360352        0.0  181.009521      181.009513     5.0    -68381.350830         False          False    True
3  -68381.350830  -68520.888468  65379.627462 -68381.350830   67.606250 -68520.888468        0.0  139.537638       81.009513     6.0    -68381.350830         False          False    True
4  -68245.613468  -68381.350830  65379.627462 -68245.613468  275.275000 -68381.350830        0.0  135.737362      116.746875     7.0    -68381.350830         False          False    True
5  -68245.613468  -68311.531982  65379.627462 -68245.613468  135.637500 -68311.531982        0.0   65.918514       16.746875     2.0    -68381.350830         False           True   False
6  -68245.613468  -68262.360343  65462.880371 -68245.613468   65.818750 -68262.360343        0.0   16.746875       -0.000216     3.0    -68381.350830         False          False   False
7  -68231.450968  -68245.513672  65548.718087 -68231.450968   30.909375 -68245.513672        0.0   14.062704        0.000000     1.0    -68381.350830         False          False   False
8  -68231.450968  -68231.450968  65548.718262 -68231.450968   13.454688 -68231.450968        0.0    0.000000      -99.999826     2.0    -68381.350830         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1151423/4096.[0m
[08/10 21:31:29]  --------------------------------------------------------------------------------
[08/10 21:31:29]  Iteration: 443 (160 solution, 282 counterexamples)
[08/10 21:34:11]  Generator returned sat in 153.373149 secs.
[08/10 21:34:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:34:14]  Improved gap from 0 to 46.875
[08/10 21:34:15]  Improved number of small numbers from 59 to 79 out of a max of 114
[08/10 21:34:15]  Verifer returned sat in 2.859050 secs.
[08/10 21:34:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -69221.617676  -69268.492920  65345.593018 -69221.617676   47.075195 -69268.492920       0.00  46.875244       46.874995     3.0    -69268.492920            -1             -1   False
1  -69221.517822  -69268.392741  65398.618087 -69221.517822   46.975098 -69268.392741       0.00  46.874919       -0.000081     2.0    -69221.517822         False          False   False
2  -69121.217741  -69122.467741  65398.618087 -69121.217741  147.175000 -69122.467741       0.10   1.150000        0.200000     1.0    -69221.517822         False          False   False
3  -68904.167741  -69031.317741  65398.618087 -68904.167741  218.200000 -69031.317741     117.15  10.000000        0.200000     1.0    -69221.517822         False          False    True
4  -68804.067741  -68921.517741  65398.618087 -68804.067741  110.100000 -68921.517741     117.25   0.200000        0.200000     1.0    -69221.517822         False          False    True
5  -68748.217741  -68921.217741  65442.468262 -68748.217741   56.050000 -68921.217741     117.25  55.750000       -0.099826     1.0    -69221.517822         False          False    True
6  -68701.342741  -68865.367741  65495.593087 -68701.342741  102.625000 -68865.367741     117.25  46.775000       -0.100000     1.0    -69221.517822         False          False    True
7  -68663.142741  -68818.492741  65548.718087 -68663.142741   84.975000 -68818.492741     117.25  38.100000       -8.775000     1.0    -69221.517822         False          False    True
8  -68647.730241  -68771.617676  65548.718262 -68647.730241   53.512500 -68771.617676     117.25   6.637435      -93.362326     1.0    -69221.517822         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 21:34:16]  --------------------------------------------------------------------------------
[08/10 21:34:16]  Iteration: 444 (160 solution, 283 counterexamples)
[08/10 21:35:51]  Generator returned sat in 85.462216 secs.
[08/10 21:35:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:36:03]  Improved gap from 1/10 to 0
[08/10 21:36:04]  Improved number of small numbers from 59 to 78 out of a max of 114
[08/10 21:36:04]  Verifer returned sat in 12.594616 secs.
[08/10 21:36:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -66092.874512  -66092.886332  64493.483887 -66092.874512  0.000488 -66092.886332        0.0  0.011821        0.008884     2.0    -66092.886332            -1             -1   False
1  -66092.874512  -66092.883301  64593.474854 -66092.874512  0.000500 -66092.883301        0.0  0.008789       -0.000149     3.0    -66092.886332         False          False   False
2  -66091.882812  -66092.874332  64692.475342 -66091.882812  1.000488 -66092.874332        0.0  0.991520       -0.007961     1.0    -66092.886332         False          False   False
3  -66091.874332  -66091.874832  64792.474609 -66091.874332  1.000000 -66091.874832        0.0  0.000500       -0.000213     1.0    -66091.874332         False          False   False
4  -66091.863332  -66091.874023  64892.463823 -66091.863332  0.011500 -66091.874023        0.0  0.010691        0.000000     1.0    -66091.874332         False          False   False
5  -66091.863332  -66091.863332  64992.463623 -66091.863332  0.010000 -66091.863332        0.0  0.000000       -0.000200     2.0    -66091.874332         False          False   False
6  -66091.852332  -66091.862793  65092.452823 -66091.852332  0.011000 -66091.862793        0.0  0.010461        0.000000     1.0    -66091.874332         False          False   False
7  -66091.852332  -66091.852332  65192.442871 -66091.852332  0.010000 -66091.852332        0.0  0.000000       -0.009952     2.0    -66091.874332         False          False   False
8  -66091.842332  -66091.842332  65192.442871 -66091.842332  0.010000 -66091.842332        0.0  0.000000      -99.999952     1.0    -66091.874332         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 21:36:05]  --------------------------------------------------------------------------------
[08/10 21:36:05]  Iteration: 445 (160 solution, 284 counterexamples)
[08/10 21:38:36]  Generator returned sat in 141.626747 secs.
[08/10 21:38:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:38:50]  Improved gap from 1/600 to 15.625
[08/10 21:38:50]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 21:38:50]  Verifer returned sat in 12.957454 secs.
[08/10 21:38:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -66208.946533  -66608.946533  64692.475342 -66208.946533  468.775146 -66608.946533   0.000000  400.000000      400.000000     6.0    -66608.946533            -1             -1   False
1  -66140.271729  -66509.046631  64692.475342 -66140.271729  468.674805 -66509.046631   0.099854  368.675049      368.574951     6.0    -66140.371582         False          False   False
2  -66137.746582  -66508.946533  64692.475342 -66137.746582  371.200195 -66508.946533   0.099854  371.100098      271.100098     6.0    -66137.846436         False          False    True
3  -66137.746582  -66408.946289  64692.475342 -66137.746582  340.999756 -66408.946289   0.099854  271.099854      171.100098     6.0    -66137.846436         False          False    True
4  -66137.746582  -66208.946533  64692.475342 -66137.746582  271.000000 -66208.946533   0.099854   71.100098       71.100098     7.0    -66137.846436         False          False    True
5  -66074.846680  -66140.271484  64692.475342 -66074.846680  134.000000 -66140.271484   0.099854   65.324951       34.000000     4.0    -66137.846436         False           True   False
6  -66074.671631  -66090.296387  64758.200195 -66074.671631   65.500000 -66090.296387   0.099854   15.524902       -0.100098     2.0    -66137.846436         False          False   False
7  -66058.946533  -66074.671387  64842.575195 -66058.946533   31.250000 -66074.671387   0.099854   15.625000        0.000000     1.0    -66137.846436         False          False   False
8  -66058.946533  -66059.046387  64842.575195 -66058.946533   14.125000 -66059.046387   0.099854    0.000000     -100.000000     2.0    -66137.846436         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1509683/4096.[0m
[08/10 21:38:50]  --------------------------------------------------------------------------------
[08/10 21:38:50]  Iteration: 446 (160 solution, 285 counterexamples)
[08/10 21:40:30]  Generator returned sat in 90.644100 secs.
[08/10 21:40:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:40:35]  Improved gap from 0 to 0
[08/10 21:40:36]  Improved number of small numbers from 65 to 80 out of a max of 114
[08/10 21:40:36]  Verifer returned sat in 4.192271 secs.
[08/10 21:40:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -66140.271729  -66141.394979  64144.468262 -66140.271729  0.000977 -66141.394979        0.0  1.123250        1.123066     3.0    -66141.394979            -1             -1   False
1  -66140.271729  -66140.272705  64243.344971 -66140.271729  0.000977 -66140.272705        0.0  0.000977       -0.000225     3.0    -66141.394979         False          False   False
2  -66140.269287  -66140.270729  64343.341797 -66140.269287  0.003418 -66140.270729        0.0  0.001441       -0.000957     1.0    -66141.394979         False          False   False
3  -66139.526729  -66140.268229  64442.599365 -66139.526729  0.744000 -66140.268229        0.0  0.741500       -0.000830     1.0    -66141.394979         False          False   False
4  -66139.514729  -66139.525635  64542.588195 -66139.514729  0.753500 -66139.525635        0.0  0.010906        0.000000     1.0    -66141.394979         False          False   False
5  -66139.514729  -66139.514729  64642.587158 -66139.514729  0.010000 -66139.514729        0.0  0.000000       -0.001037     2.0    -66141.394979         False          False   False
6  -66139.502729  -66139.513672  64742.576195 -66139.502729  0.012000 -66139.513672        0.0  0.010943        0.000000     1.0    -66141.394979         False          False   False
7  -66139.502729  -66139.502729  64842.575195 -66139.502729  0.010000 -66139.502729        0.0  0.000000       -0.001000     2.0    -66141.394979         False          False   False
8  -66139.492729  -66139.501709  64842.575195 -66139.492729  0.010000 -66139.501709        0.0  0.008980      -99.991000     1.0    -66141.394979         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/500.[0m
[08/10 21:40:36]  --------------------------------------------------------------------------------
[08/10 21:40:36]  Iteration: 447 (160 solution, 286 counterexamples)
[08/10 21:46:49]  Generator returned sat in 363.418175 secs.
[08/10 21:46:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:46:58]  Improved gap from 0 to 4.6875
[08/10 21:46:59]  Improved number of small numbers from 59 to 88 out of a max of 114
[08/10 21:46:59]  Verifer returned sat in 8.506791 secs.
[08/10 21:46:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -66584.812500  -66735.157729  64638.231201 -66584.812500  199.999756 -66735.157729     0.0000  150.345229       50.345234     9.0    -66735.157729            -1             -1     -1
1  -66535.160229  -66584.810303  64638.231201 -66535.160229  199.997500 -66584.810303     0.0000   49.650074       -0.002494     1.0    -66535.160229         False           True  False
2  -66384.812744  -66535.157715  64638.231201 -66384.812744  199.997559 -66535.157715     0.0000  150.344971       50.344990     1.0    -66535.160229         False          False  False
3  -66384.812744  -66389.500229  64687.886195 -66384.812744  150.342500 -66389.500229     0.0000    4.687484       -0.000016     2.0    -66384.812744         False          False  False
4  -66139.500229  -66284.812744  64687.886195 -66139.500229  250.000000 -66284.812744     0.0025  145.310016      145.310000     1.0    -66384.812744         False          False  False
5  -66139.500229  -66184.815430  64687.886195 -66139.500229    0.010000 -66184.815430     0.0025   45.312701       45.310000     2.0    -66384.812744         False          False   True
6  -66139.500229  -66184.812500  64742.576195 -66139.500229    2.010000 -66184.812500     0.0025   45.309771        0.000000     3.0    -66384.812744         False          False   True
7  -66139.500229  -66139.502729  64837.888672 -66139.500229    4.010000 -66139.502729     0.0025    0.000000       -4.687523     4.0    -66384.812744         False          False   True
8  -66133.490229  -66134.815186  64837.888672 -66133.490229    6.010000 -66134.815186     0.0025    1.322457      -98.677523     1.0    -66384.812744         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=14531/100.[0m
[08/10 21:46:59]  --------------------------------------------------------------------------------
[08/10 21:46:59]  Iteration: 448 (160 solution, 287 counterexamples)
[08/10 21:50:14]  Generator returned sat in 185.095875 secs.
[08/10 21:50:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:50:19]  Improved gap from 1/2000 to 40.625
[08/10 21:50:21]  Improved number of small numbers from 59 to 76 out of a max of 114
[08/10 21:50:21]  Verifer returned sat in 5.718398 secs.
[08/10 21:50:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -67288.642578  -67333.107666  64687.886195 -67288.642578    0.050049 -67333.107666        0.0   44.465088       -0.049850     3.0    -67333.107666            -1             -1    True
1  -67090.487793  -67288.592529  64687.886195 -67090.487793  242.619873 -67288.592529        0.0  198.104736       98.104936     1.0    -67333.107666         False          False    True
2  -67046.022705  -67090.487729  64687.886195 -67046.022705  242.569824 -67090.487729        0.0   44.465023       42.570023     1.0    -67046.022705         False          False    True
3  -66847.967729  -66988.592729  64687.886195 -66847.967729  242.520000 -66988.592729        0.0  140.625000      140.625000     1.0    -66847.967729         False          False    True
4  -66847.967729  -66911.647729  64687.886195 -66847.967729  123.260000 -66911.647729        0.0   63.680000       40.625000     2.0    -66847.967729         False          False    True
5  -66847.967729  -66888.592729  64747.261195 -66847.967729   63.630000 -66888.592729        0.0   40.625000        0.000000     3.0    -66847.967729         False          False    True
6  -66847.967729  -66847.967729  64806.636195 -66847.967729   33.815000 -66847.967729        0.0    0.000000      -40.625000     4.0    -66847.967729         False          False    True
7  -66761.747729  -66807.342729  64861.041016 -66761.747729   86.220000 -66807.342729        0.0   45.595000       -0.000180     1.0    -66847.967729         False           True   False
8  -66713.080229  -66761.697754  64861.041016 -66713.080229   94.262500 -66761.697754        0.0   48.617525      -51.332680     1.0    -66847.967729         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=144051/1024.[0m
[08/10 21:50:21]  --------------------------------------------------------------------------------
[08/10 21:50:21]  Iteration: 449 (160 solution, 288 counterexamples)
[08/10 21:54:46]  Generator returned sat in 255.364958 secs.
[08/10 21:54:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:54:48]  Verifer returned unsat in 0.830971 secs.
[08/10 21:54:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:54:48]  --------------------------------------------------------------------------------
[08/10 21:54:48]  Iteration: 450 (161 solution, 288 counterexamples)
[08/10 21:55:55]  Generator returned sat in 57.241022 secs.
[08/10 21:55:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:55:56]  Verifer returned unsat in 0.664500 secs.
[08/10 21:55:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:55:56]  --------------------------------------------------------------------------------
[08/10 21:55:56]  Iteration: 451 (162 solution, 288 counterexamples)
[08/10 21:56:30]  Generator returned sat in 24.030277 secs.
[08/10 21:56:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:56:32]  Verifer returned unsat in 0.885501 secs.
[08/10 21:56:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:56:32]  --------------------------------------------------------------------------------
[08/10 21:56:32]  Iteration: 452 (163 solution, 288 counterexamples)
[08/10 21:57:06]  Generator returned sat in 24.865448 secs.
[08/10 21:57:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:57:08]  Verifer returned unsat in 1.062860 secs.
[08/10 21:57:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:57:08]  --------------------------------------------------------------------------------
[08/10 21:57:08]  Iteration: 453 (164 solution, 288 counterexamples)
[08/10 21:57:43]  Generator returned sat in 25.084480 secs.
[08/10 21:57:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:57:45]  Verifer returned unsat in 0.772748 secs.
[08/10 21:57:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:57:45]  --------------------------------------------------------------------------------
[08/10 21:57:45]  Iteration: 454 (165 solution, 288 counterexamples)
[08/10 21:58:23]  Generator returned sat in 29.016522 secs.
[08/10 21:58:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:58:25]  Verifer returned unsat in 0.880449 secs.
[08/10 21:58:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:58:25]  --------------------------------------------------------------------------------
[08/10 21:58:25]  Iteration: 455 (166 solution, 288 counterexamples)
[08/10 21:58:59]  Generator returned sat in 23.825995 secs.
[08/10 21:59:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:59:01]  Verifer returned unsat in 0.830699 secs.
[08/10 21:59:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:59:01]  --------------------------------------------------------------------------------
[08/10 21:59:01]  Iteration: 456 (167 solution, 288 counterexamples)
[08/10 21:59:34]  Generator returned sat in 23.942817 secs.
[08/10 21:59:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:59:36]  Verifer returned unsat in 0.614122 secs.
[08/10 21:59:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 21:59:36]  --------------------------------------------------------------------------------
[08/10 21:59:36]  Iteration: 457 (168 solution, 288 counterexamples)
[08/10 22:00:14]  Generator returned sat in 28.525537 secs.
[08/10 22:00:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:00:16]  Verifer returned unsat in 0.648478 secs.
[08/10 22:00:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:00:16]  --------------------------------------------------------------------------------
[08/10 22:00:16]  Iteration: 458 (169 solution, 288 counterexamples)
[08/10 22:00:54]  Generator returned sat in 28.819318 secs.
[08/10 22:00:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:00:56]  Verifer returned unsat in 1.036987 secs.
[08/10 22:00:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:00:56]  --------------------------------------------------------------------------------
[08/10 22:00:56]  Iteration: 459 (170 solution, 288 counterexamples)
[08/10 22:01:32]  Generator returned sat in 25.921924 secs.
[08/10 22:01:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:01:33]  Verifer returned unsat in 0.659470 secs.
[08/10 22:01:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:01:33]  --------------------------------------------------------------------------------
[08/10 22:01:33]  Iteration: 460 (171 solution, 288 counterexamples)
[08/10 22:02:08]  Generator returned sat in 24.845958 secs.
[08/10 22:02:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:02:09]  Verifer returned unsat in 0.794628 secs.
[08/10 22:02:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:02:10]  --------------------------------------------------------------------------------
[08/10 22:02:10]  Iteration: 461 (172 solution, 288 counterexamples)
[08/10 22:03:22]  Generator returned sat in 62.579088 secs.
[08/10 22:03:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:03:31]  Improved gap from 1/37 to 0
[08/10 22:03:33]  Improved number of small numbers from 59 to 75 out of a max of 114
[08/10 22:03:33]  Verifer returned sat in 10.391531 secs.
[08/10 22:03:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -53699.292725  -53765.661642  64473.981672 -53699.292725    0.071533 -53765.661642   0.000000   66.368917       66.368917     2.0    -53765.661642            -1             -1   False
1  -53699.292725  -53765.661621  64507.577148 -53699.292725    0.035889 -53765.661621   0.000000   66.368896       -0.035606     3.0    -53699.292725         False          False   False
2  -53699.221191  -53699.256880  64607.505615 -53699.221191   66.440430 -53699.256880   0.000000    0.035688       -0.035606     1.0    -53699.292725         False          False   False
3  -53697.578308  -53699.185451  64705.898338 -53697.578308    1.678571 -53699.185451   0.000000    1.607143        0.000000     1.0    -53697.578308         False          False   False
4  -53597.471165  -53602.649737  64705.898338 -53597.471165  101.714286 -53602.649737   0.035714    5.142857        0.071429     1.0    -53697.578308         False          False   False
5  -53552.756880  -53552.828308  64761.112624 -53552.756880   49.857143 -53552.828308   0.035714    0.035714        0.000000     1.0    -53697.578308         False          False    True
6  -53452.649737  -53552.756836  64761.112624 -53452.649737  100.142857 -53552.756836   0.071429  100.035671        0.071429     1.0    -53697.578308         False          False    True
7  -53452.649737  -53452.792594  64861.041195 -53452.649737   49.071429 -53452.792594   0.071429    0.071429        0.000000     2.0    -53697.578308         False          False    True
8  -53351.256880  -53452.685547  64861.041195 -53351.256880  101.464286 -53452.685547   1.392857  100.035810        0.071429     1.0    -53697.578308         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/14.[0m
[08/10 22:03:34]  --------------------------------------------------------------------------------
[08/10 22:03:34]  Iteration: 462 (172 solution, 289 counterexamples)
[08/10 22:05:55]  Generator returned sat in 131.299904 secs.
[08/10 22:05:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:06:07]  Improved gap from 0 to 0
[08/10 22:06:07]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/10 22:06:07]  Verifer returned sat in 11.680441 secs.
[08/10 22:06:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -53541.017578  -53639.867920  64249.387695 -53541.017578   98.900146 -53639.867920   0.000000  98.850342        0.050049     2.0    -53639.867920            -1             -1   False
1  -53541.017578  -53541.067627  64349.337646 -53541.017578   98.850000 -53541.067627   0.000000   0.050049        0.000000     2.0    -53541.017578         False          False   False
2  -53441.067627  -53540.917969  64349.337891 -53441.067627  100.000000 -53540.917969   0.000000  99.850342       -0.049805     1.0    -53541.017578         False          False   False
3  -53440.967773  -53441.017822  64449.287842 -53440.967773   99.950195 -53441.017822   0.000000   0.050049        0.000000     1.0    -53440.967773         False          False   False
4  -53291.117676  -53340.967773  64449.287842 -53291.117676  149.900146 -53340.967773   0.000000  49.850098       49.850098     1.0    -53440.967773         False          False   False
5  -53165.467773  -53241.017822  64449.287842 -53165.467773  175.500000 -53241.017822  25.600098  49.949951       49.899902     1.0    -53440.967773         False          False   False
6  -53165.467773  -53240.967529  64499.387939 -53165.467773    0.500000 -53240.967529  25.600098  49.899658        0.000000     2.0    -53440.967773         False          False    True
7  -53165.467773  -53191.067871  64599.387695 -53165.467773    1.000000 -53191.067871  25.600098   0.000000       -0.000244     3.0    -53440.967773         False          False    True
8  -53164.467773  -53191.017578  64599.387695 -53164.467773    1.000000 -53191.017578  25.600098   0.949707      -99.000244     1.0    -53440.967773         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=102195/2048.[0m
[08/10 22:06:08]  --------------------------------------------------------------------------------
[08/10 22:06:08]  Iteration: 463 (172 solution, 290 counterexamples)
[08/10 22:11:37]  Generator returned sat in 318.958593 secs.
[08/10 22:11:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:11:40]  Verifer returned unsat in 2.392936 secs.
[08/10 22:11:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:11:40]  --------------------------------------------------------------------------------
[08/10 22:11:40]  Iteration: 464 (173 solution, 290 counterexamples)
[08/10 22:12:15]  Generator returned sat in 25.145101 secs.
[08/10 22:12:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:12:18]  Verifer returned unsat in 2.037106 secs.
[08/10 22:12:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:12:18]  --------------------------------------------------------------------------------
[08/10 22:12:18]  Iteration: 465 (174 solution, 290 counterexamples)
[08/10 22:12:53]  Generator returned sat in 24.828399 secs.
[08/10 22:12:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:12:55]  Verifer returned unsat in 1.761057 secs.
[08/10 22:12:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:12:55]  --------------------------------------------------------------------------------
[08/10 22:12:55]  Iteration: 466 (175 solution, 290 counterexamples)
[08/10 22:13:30]  Generator returned sat in 25.085079 secs.
[08/10 22:13:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:13:33]  Verifer returned unsat in 1.455580 secs.
[08/10 22:13:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:13:33]  --------------------------------------------------------------------------------
[08/10 22:13:33]  Iteration: 467 (176 solution, 290 counterexamples)
[08/10 22:15:54]  Generator returned sat in 131.642712 secs.
[08/10 22:15:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:15:56]  Improved gap from 1/20 to 23.4375
[08/10 22:15:56]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 22:15:56]  Verifer returned sat in 1.131840 secs.
[08/10 22:15:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -69361.601318  -69464.625977  64449.287598 -69361.601318  405.725098 -69464.625977    0.100098  102.924561      102.924561     1.0    -69464.625977            -1             -1     -1
1  -69058.900879  -69464.625977  64449.287598 -69058.900879  405.625000 -69464.625977  302.800049  102.925049        2.925049     1.0    -69361.700928         False          False   True
2  -68961.826172  -69269.275879  64449.287598 -68961.826172  199.999756 -69269.275879  302.800049    4.649658       -0.000244     1.0    -69264.626221         False          False   True
3  -68561.825928  -69264.625977  64449.287598 -68561.825928  404.649902 -69264.625977  599.875000  102.925049        2.925049     1.0    -69264.626221         False          False   True
4  -68461.926025  -69067.651123  64449.287598 -68461.926025  202.824951 -69067.651123  599.875000    5.850098        2.824951     1.0    -69264.626221         False          False   True
5  -68461.926025  -69064.625977  64525.850098 -68461.926025    2.000000 -69064.625977  599.875000    2.824951      -20.612549     2.0    -69264.626221         False          False   True
6  -68260.101074  -69041.188477  64525.850098 -68260.101074  204.649902 -69041.188477  678.162354  102.925049        2.925049     1.0    -68938.263428          True           True  False
7  -68260.101074  -68941.188477  64602.412598 -68260.101074  102.824951 -68941.188477  678.162354    2.925049      -20.512451     2.0    -68938.263428         False          False   True
8  -68136.563477  -68917.750977  64602.412598 -68136.563477  126.462646 -68917.750977  678.262451  102.925049        2.925049     1.0    -68938.263428         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=11981/4096.[0m
[08/10 22:15:57]  --------------------------------------------------------------------------------
[08/10 22:15:57]  Iteration: 468 (176 solution, 291 counterexamples)
[08/10 22:19:33]  Generator returned sat in 206.032278 secs.
[08/10 22:19:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:19:54]  Improved gap from 0 to 0
[08/10 22:19:55]  Improved number of small numbers from 60 to 70 out of a max of 114
[08/10 22:19:55]  Verifer returned sat in 21.634456 secs.
[08/10 22:19:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -69122.830811  -69125.926152  64350.047119 -69122.830811  0.000488 -69125.926152   0.100098  2.995244        0.759325     8.0    -69125.926152            -1             -1     -1
1  -69122.830811  -69123.690123  64449.287598 -69122.830811  0.760000 -69123.690123   0.100098  0.759215       -0.000197     9.0    -69125.926152         False          False   True
2  -69122.830320  -69122.930711  64549.287109 -69122.830320  0.759706 -69122.930711   0.100098  0.000294       -0.000194     1.0    -69122.930417          True           True  False
3  -69122.829731  -69122.930123  64649.285156 -69122.829731  0.000882 -69122.930123   0.100098  0.000294       -0.001559     1.0    -69122.929829         False          False  False
4  -69121.333555  -69122.928064  64747.790539 -69121.333555  1.496471 -69122.928064   0.100098  1.494412        0.000000     1.0    -69122.929829         False          False  False
5  -69121.333555  -69121.433652  64847.781006 -69121.333555  0.010294 -69121.433652   0.100098  0.000000       -0.009533     2.0    -69122.929829         False          False  False
6  -69121.323555  -69121.423947  64947.780273 -69121.323555  0.010000 -69121.423947   0.100098  0.000294       -0.000265     1.0    -69122.929829         False          False  False
7  -69121.312672  -69121.423358  65047.769656 -69121.312672  0.011176 -69121.423358   0.100098  0.010588        0.000000     1.0    -69122.929829         False          False  False
8  -69121.312672  -69121.412770  65047.769775 -69121.312672  0.010294 -69121.412770   0.100098  0.000000      -99.999881     2.0    -69122.929829         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/2048.[0m
[08/10 22:19:56]  --------------------------------------------------------------------------------
[08/10 22:19:56]  Iteration: 469 (176 solution, 292 counterexamples)
[08/10 22:23:06]  Generator returned sat in 180.086732 secs.
[08/10 22:23:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:23:09]  Verifer returned unsat in 2.262690 secs.
[08/10 22:23:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:23:09]  --------------------------------------------------------------------------------
[08/10 22:23:09]  Iteration: 470 (177 solution, 292 counterexamples)
[08/10 22:23:45]  Generator returned sat in 26.602759 secs.
[08/10 22:23:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:23:48]  Verifer returned unsat in 2.010111 secs.
[08/10 22:23:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:23:48]  --------------------------------------------------------------------------------
[08/10 22:23:48]  Iteration: 471 (178 solution, 292 counterexamples)
[08/10 22:24:24]  Generator returned sat in 25.280637 secs.
[08/10 22:24:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:24:26]  Verifer returned unsat in 1.453228 secs.
[08/10 22:24:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:24:26]  --------------------------------------------------------------------------------
[08/10 22:24:26]  Iteration: 472 (179 solution, 292 counterexamples)
[08/10 22:25:00]  Generator returned sat in 23.918307 secs.
[08/10 22:25:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:25:03]  Verifer returned unsat in 1.968689 secs.
[08/10 22:25:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:25:03]  --------------------------------------------------------------------------------
[08/10 22:25:03]  Iteration: 473 (180 solution, 292 counterexamples)
[08/10 22:25:37]  Generator returned sat in 24.020990 secs.
[08/10 22:25:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:25:39]  Verifer returned unsat in 1.290439 secs.
[08/10 22:25:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:25:39]  --------------------------------------------------------------------------------
[08/10 22:25:39]  Iteration: 474 (181 solution, 292 counterexamples)
[08/10 22:26:13]  Generator returned sat in 24.293811 secs.
[08/10 22:26:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:26:16]  Verifer returned unsat in 1.245731 secs.
[08/10 22:26:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:26:16]  --------------------------------------------------------------------------------
[08/10 22:26:16]  Iteration: 475 (182 solution, 292 counterexamples)
[08/10 22:26:50]  Generator returned sat in 24.629893 secs.
[08/10 22:26:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:26:53]  Verifer returned unsat in 1.512379 secs.
[08/10 22:26:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:26:53]  --------------------------------------------------------------------------------
[08/10 22:26:53]  Iteration: 476 (183 solution, 292 counterexamples)
[08/10 22:28:03]  Generator returned sat in 60.705559 secs.
[08/10 22:28:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:28:11]  Improved gap from 0 to 0
[08/10 22:28:12]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 22:28:12]  Verifer returned sat in 7.711820 secs.
[08/10 22:28:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -58382.685303  -58382.885498  53596.342285 -58382.685303    0.099854 -58382.885498   0.100098    0.100098      -12.799805     2.0    -58382.885498            -1             -1     -1
1  -58269.785400  -58314.685547  53596.342285 -58269.785400  113.000000 -58314.685547   0.100098   44.800049        0.100098     1.0    -58382.885498         False          False   True
2  -58269.785400  -58269.985352  53696.242188 -58269.785400   44.700195 -58269.985352   0.100098    0.099854        0.000000     2.0    -58269.885498         False          False   True
3  -58225.285400  -58225.485352  53749.142090 -58225.285400   44.599854 -58225.485352   0.100098    0.099854       -2.600098     1.0    -58225.385498         False          False   True
4  -58122.385254  -58172.185303  53749.142090 -58122.385254  103.000000 -58172.185303   0.200195   49.599854        0.199951     1.0    -58225.385498         False          False   True
5  -58122.385254  -58122.685547  53848.942139 -58122.385254   49.500000 -58122.685547   0.200195    0.100098        0.000000     2.0    -58225.385498         False          False   True
6  -58022.085449  -58122.485107  53848.942139 -58022.085449  100.399902 -58122.485107   0.300049  100.099609        0.199951     1.0    -58225.385498         False          False   True
7  -58022.085449  -58022.585449  53948.742188 -58022.085449   48.199951 -58022.585449   0.300049    0.199951        0.000000     2.0    -58225.385498         False          False   True
8  -57921.385498  -58022.285156  53948.742188 -57921.385498  100.899902 -58022.285156   0.800049  100.099609        0.199951     1.0    -58225.385498         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=819/4096.[0m
[08/10 22:28:13]  --------------------------------------------------------------------------------
[08/10 22:28:13]  Iteration: 477 (183 solution, 293 counterexamples)
[08/10 22:30:00]  Generator returned sat in 97.758966 secs.
[08/10 22:30:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:30:11]  Improved gap from 1/10 to 1.5625
[08/10 22:30:12]  Improved number of small numbers from 67 to 79 out of a max of 114
[08/10 22:30:12]  Verifer returned sat in 10.957231 secs.
[08/10 22:30:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -58340.158203  -58440.109755  53649.088135 -58340.158203  126.024170 -58440.109755   0.000000   99.951552       73.951714     3.0    -58440.109755            -1             -1    True
1  -58314.109755  -58340.134033  53649.088135 -58314.109755  126.000000 -58340.134033   0.000000   26.024278        0.000163     1.0    -58314.109755         False          False    True
2  -58214.134033  -58214.158366  53649.088135 -58214.134033  126.000000 -58214.158366   0.000000    0.024333       -0.024116     1.0    -58314.109755         False          False    True
3  -58212.547255  -58214.109755  53747.525472 -58212.547255    1.611111 -58214.109755   0.000000    1.562500        0.000000     1.0    -58212.547255         False          False    True
4  -58100.304199  -58168.936144  53747.525472 -58100.304199  113.805556 -58168.936144  10.704861   57.927083        1.538194     1.0    -58212.547255         False          False    True
5  -58100.304199  -58112.547255  53845.962972 -58100.304199   57.902778 -58112.547255  10.704861    1.538194       -0.024306     2.0    -58212.547255         False          False    True
6  -58022.085449  -58110.984755  53867.768311 -58022.085449   79.756944 -58110.984755  10.704861   78.194444       -0.000217     1.0    -58212.547255         False          False    True
7  -58008.838921  -58032.766005  53953.938721 -58008.838921   91.440972 -58032.766005  10.704861   13.222222       -0.583279     1.0    -58212.547255         False          False    True
8  -57908.255588  -58018.960449  53953.938721 -57908.255588  113.805556 -58018.960449  10.704861  100.000000        0.000054     1.0    -58212.547255         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=443/288.[0m
[08/10 22:30:13]  --------------------------------------------------------------------------------
[08/10 22:30:13]  Iteration: 478 (183 solution, 294 counterexamples)
[08/10 22:32:36]  Generator returned sat in 133.667473 secs.
[08/10 22:32:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:32:38]  Verifer returned unsat in 0.744119 secs.
[08/10 22:32:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:32:38]  --------------------------------------------------------------------------------
[08/10 22:32:38]  Iteration: 479 (184 solution, 294 counterexamples)
[08/10 22:33:13]  Generator returned sat in 25.055898 secs.
[08/10 22:33:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:15]  Verifer returned unsat in 0.871413 secs.
[08/10 22:33:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:15]  --------------------------------------------------------------------------------
[08/10 22:33:15]  Iteration: 480 (185 solution, 294 counterexamples)
[08/10 22:33:51]  Generator returned sat in 25.599047 secs.
[08/10 22:33:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:53]  Verifer returned unsat in 0.714929 secs.
[08/10 22:33:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:33:53]  --------------------------------------------------------------------------------
[08/10 22:33:53]  Iteration: 481 (186 solution, 294 counterexamples)
[08/10 22:34:41]  Generator returned sat in 37.919212 secs.
[08/10 22:34:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:34:43]  Verifer returned unsat in 1.637800 secs.
[08/10 22:34:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:34:43]  --------------------------------------------------------------------------------
[08/10 22:34:43]  Iteration: 482 (187 solution, 294 counterexamples)
[08/10 22:35:18]  Generator returned sat in 24.878887 secs.
[08/10 22:35:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:35:22]  Verifer returned unsat in 2.521625 secs.
[08/10 22:35:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:35:22]  --------------------------------------------------------------------------------
[08/10 22:35:22]  Iteration: 483 (188 solution, 294 counterexamples)
[08/10 22:36:01]  Generator returned sat in 28.997943 secs.
[08/10 22:36:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:36:04]  Verifer returned unsat in 1.763665 secs.
[08/10 22:36:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:36:04]  --------------------------------------------------------------------------------
[08/10 22:36:04]  Iteration: 484 (189 solution, 294 counterexamples)
[08/10 22:36:45]  Generator returned sat in 31.748979 secs.
[08/10 22:36:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:36:48]  Verifer returned unsat in 1.573776 secs.
[08/10 22:36:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:36:48]  --------------------------------------------------------------------------------
[08/10 22:36:48]  Iteration: 485 (190 solution, 294 counterexamples)
[08/10 22:37:22]  Generator returned sat in 24.409087 secs.
[08/10 22:37:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:37:26]  Verifer returned unsat in 2.480935 secs.
[08/10 22:37:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:37:26]  --------------------------------------------------------------------------------
[08/10 22:37:26]  Iteration: 486 (191 solution, 294 counterexamples)
[08/10 22:38:00]  Generator returned sat in 24.353545 secs.
[08/10 22:38:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:38:03]  Verifer returned unsat in 1.981183 secs.
[08/10 22:38:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:38:03]  --------------------------------------------------------------------------------
[08/10 22:38:03]  Iteration: 487 (192 solution, 294 counterexamples)
[08/10 22:38:40]  Generator returned sat in 26.298208 secs.
[08/10 22:38:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:38:42]  Verifer returned unsat in 1.701027 secs.
[08/10 22:38:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:38:43]  --------------------------------------------------------------------------------
[08/10 22:38:43]  Iteration: 488 (193 solution, 294 counterexamples)
[08/10 22:39:20]  Generator returned sat in 27.210413 secs.
[08/10 22:39:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:39:23]  Verifer returned unsat in 2.034080 secs.
[08/10 22:39:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:39:23]  --------------------------------------------------------------------------------
[08/10 22:39:23]  Iteration: 489 (194 solution, 294 counterexamples)
[08/10 22:40:40]  Generator returned sat in 67.481937 secs.
[08/10 22:40:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:40:42]  Verifer returned unsat in 0.673070 secs.
[08/10 22:40:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:40:42]  --------------------------------------------------------------------------------
[08/10 22:40:42]  Iteration: 490 (195 solution, 294 counterexamples)
[08/10 22:42:24]  Generator returned sat in 91.852057 secs.
[08/10 22:42:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:42:29]  Improved gap from 3/3320 to 0
[08/10 22:42:31]  Improved number of small numbers from 53 to 76 out of a max of 114
[08/10 22:42:31]  Verifer returned sat in 5.721964 secs.
[08/10 22:42:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -42448.040527  -42448.713379  46128.790039 -42448.040527  0.671631 -42448.713379        0.0  0.672852        0.672520     2.0    -42448.713379            -1             -1   False
1  -42448.040527  -42448.711372  46228.117432 -42448.040527  0.671631 -42448.711372        0.0  0.670845       -0.000087     2.0    -42448.713379         False          False   False
2  -42448.040392  -42448.040392  46328.117384 -42448.040392  0.670980 -42448.040392        0.0  0.000000        0.000000     1.0    -42448.040392         False          False   False
3  -42448.039510  -42448.040392  46428.111328 -42448.039510  0.000882 -42448.040392        0.0  0.000882       -0.005173     1.0    -42448.039510         False          False   False
4  -42448.030392  -42448.034274  46528.107178 -42448.030392  0.010000 -42448.034274        0.0  0.003882       -0.000206     1.0    -42448.039510         False          False   False
5  -42448.018627  -42448.029541  46628.095619 -42448.018627  0.015647 -42448.029541        0.0  0.010914        0.000000     1.0    -42448.039510         False          False   False
6  -42448.018627  -42448.018627  46728.095459 -42448.018627  0.010000 -42448.018627        0.0  0.000000       -0.000160     2.0    -42448.039510         False          False   False
7  -42448.008627  -42448.017745  46828.084961 -42448.008627  0.010000 -42448.017745        0.0  0.009118       -0.000658     1.0    -42448.039510         False          False   False
8  -42448.007745  -42448.007812  46928.084717 -42448.007745  0.010000 -42448.007812        0.0  0.000068       -0.000020     1.0    -42448.039510         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=7/4096.[0m
[08/10 22:42:31]  --------------------------------------------------------------------------------
[08/10 22:42:31]  Iteration: 491 (195 solution, 295 counterexamples)
[08/10 22:44:31]  Generator returned sat in 109.908000 secs.
[08/10 22:44:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:44:34]  Verifer returned unsat in 2.253109 secs.
[08/10 22:44:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:44:35]  --------------------------------------------------------------------------------
[08/10 22:44:35]  Iteration: 492 (196 solution, 295 counterexamples)
[08/10 22:48:48]  Generator returned sat in 243.764005 secs.
[08/10 22:48:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:48:53]  Improved gap from 1/2400 to 0
[08/10 22:48:55]  Improved number of small numbers from 57 to 71 out of a max of 114
[08/10 22:48:55]  Verifer returned sat in 5.342036 secs.
[08/10 22:48:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -41398.545898  -41399.036596  46128.610463 -41398.545898  0.000244 -41399.036596   0.000313  0.490385        0.490385     1.0    -41399.036596            -1             -1     -1
1  -41398.545898  -41399.036596  46228.119873 -41398.545898  0.000244 -41399.036596   0.000313  0.490385       -0.000205     1.0    -41399.036596         False          False   True
2  -41398.533002  -41398.545815  46328.106934 -41398.533002  0.503281 -41398.545815   0.000313  0.012500       -0.000248     1.0    -41399.036596         False          False   True
3  -41398.532065  -41398.533002  46428.105957 -41398.532065  0.013437 -41398.533002   0.000313  0.000625       -0.000287     1.0    -41398.532377         False          False   True
4  -41398.522377  -41398.532065  46528.096436 -41398.522377  0.010313 -41398.532065   0.000313  0.009375       -0.000121     1.0    -41398.532377         False          False   True
5  -41398.521752  -41398.522377  46628.095703 -41398.521752  0.010000 -41398.522377   0.000313  0.000313       -0.000228     1.0    -41398.532377         False          False   True
6  -41398.512065  -41398.521752  46728.086182 -41398.512065  0.010000 -41398.521752   0.000313  0.009375       -0.000062     1.0    -41398.532377         False          False   True
7  -41398.511440  -41398.512065  46828.076172 -41398.511440  0.010000 -41398.512065   0.000313  0.000313       -0.009447     1.0    -41398.532377         False          False   True
8  -41398.501752  -41398.502197  46828.076172 -41398.501752  0.010000 -41398.502197   0.000313  0.000132      -99.999760     1.0    -41398.532377         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/2048.[0m
[08/10 22:48:55]  --------------------------------------------------------------------------------
[08/10 22:48:55]  Iteration: 493 (196 solution, 296 counterexamples)
[08/10 22:51:01]  Generator returned sat in 116.032021 secs.
[08/10 22:51:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:51:03]  Improved gap from 1/2400 to 100
[08/10 22:51:03]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 22:51:03]  Verifer returned sat in 1.291183 secs.
[08/10 22:51:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -41799.252197  -41799.294189  46528.451172 -41799.252197    0.041667 -41799.294189   0.041748    0.000244       -0.416504     4.0    -41799.294189            -1             -1     -1
1  -41698.877441  -41700.002441  46528.451172 -41698.877441  100.375000 -41700.002441   0.041748    1.083252       -0.041748     1.0    -41799.294189         False           True   True
2  -41599.627197  -41698.877441  46528.451172 -41599.627197  100.333496 -41698.877441   0.041748   99.208496       -0.791504     1.0    -41599.668945         False          False   True
3  -41598.793945  -41598.877441  46528.451172 -41598.793945  100.041748 -41598.877441   0.041748    0.041748      -99.958252     1.0    -41598.835693         False          False   True
4  -41298.877197  -41498.877441  46528.451172 -41298.877197  299.958496 -41498.877441   0.041748  199.958496       99.958496     1.0    -41598.835693         False          False   True
5  -40998.252197  -41298.877441  46528.451172 -40998.252197  500.583496 -41298.877441   0.041748  300.583496      300.583496     1.0    -41598.835693         False          False   True
6  -40398.752197  -41298.835449  46528.451172 -40398.752197  900.083496 -41298.835449   0.083496  899.999756      800.041748     2.0    -41598.835693         False          False   True
7  -40398.752197  -41198.877441  46528.451172 -40398.752197  448.041748 -41198.877441   0.083496  800.041748      700.041748     3.0    -40398.835693          True           True   True
8  -40398.752197  -40998.877441  46528.451172 -40398.752197  300.500000 -40998.877441   0.083496  600.041748      600.041748     4.0    -40398.835693         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3276971/4096.[0m
[08/10 22:51:04]  --------------------------------------------------------------------------------
[08/10 22:51:04]  Iteration: 494 (196 solution, 297 counterexamples)
[08/10 22:55:18]  Generator returned sat in 244.017464 secs.
[08/10 22:55:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:55:21]  Improved gap from 0 to 3.125
[08/10 22:55:22]  Improved number of small numbers from 64 to 76 out of a max of 114
[08/10 22:55:22]  Verifer returned sat in 3.400406 secs.
[08/10 22:55:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -40602.377441  -40602.402100  45331.975830 -40602.377441    0.012695 -40602.402100    0.00000    0.024658        0.024658     9.0    -40602.402100            -1             -1     -1
1  -40599.252197  -40602.364697  45428.813428 -40599.252197    3.149902 -40602.364697    0.00000    3.112500       -0.012500     1.0    -40602.402100         False           True  False
2  -40599.227197  -40599.239697  45525.688232 -40599.227197    3.137500 -40599.239697    0.00000    0.012500       -3.112695     1.0    -40599.227197         False          False  False
3  -40571.456364  -40596.114502  45601.030094 -40571.456364   27.783333 -40596.114502    0.00000   24.658138        0.000000     1.0    -40599.227197         False          False  False
4  -40571.456364  -40571.456364  45657.292725 -40571.456364    9.931396 -40571.456364    0.00000    0.000000      -43.737370     2.0    -40599.227197         False          False  False
5  -40524.593864  -40527.718864  45754.167594 -40524.593864   46.862500 -40527.718864    0.00000    3.125000        0.000000     1.0    -40599.227197         False          False  False
6  -40419.937614  -40524.581299  45754.167594 -40419.937614  107.781250 -40524.581299    1.53125  103.112435        3.125000     1.0    -40599.227197         False          False  False
7  -40419.937614  -40424.593864  45851.042594 -40419.937614    1.500000 -40424.593864    1.53125    3.125000        0.000000     2.0    -40599.227197         False          False   True
8  -40419.937614  -40421.468864  45851.042725 -40419.937614    0.500000 -40421.468864    1.53125    0.000000      -99.999870     3.0    -40599.227197         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25/8.[0m
[08/10 22:55:23]  --------------------------------------------------------------------------------
[08/10 22:55:23]  Iteration: 495 (196 solution, 298 counterexamples)
[08/10 22:57:54]  Generator returned sat in 141.171164 secs.
[08/10 22:57:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 22:57:57]  Improved gap from 0 to 23.4375
[08/10 22:57:57]  Improved number of small numbers from 80 to 96 out of a max of 114
[08/10 22:57:57]  Verifer returned sat in 2.089800 secs.
[08/10 22:57:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -40924.291992  -40924.302327  45653.875977 -40924.291992    0.010417 -40924.302327    0.000000   0.010335        0.010254     7.0    -40924.302327            -1             -1     -1
1  -40827.718994  -40851.156738  45657.292725 -40827.718994   96.583333 -40851.156738    0.000000  23.437744        0.000000     1.0    -40924.302327         False           True  False
2  -40727.708740  -40827.708496  45657.292725 -40727.708740  123.447998 -40827.708496    0.000000  99.999756        0.010254     1.0    -40924.302327         False          False  False
3  -40727.708740  -40727.718994  45657.292725 -40727.708740   99.989746 -40727.718994    0.000000   0.010254      -99.989746     2.0    -40727.708740         False          False  False
4  -40334.552327  -40527.718994  45657.292725 -40334.552327  393.166667 -40527.718994  169.645833  23.520833       23.520833     1.0    -40727.708740         False          False  False
5  -40162.489827  -40504.187988  45657.292725 -40162.489827  195.583333 -40504.187988  241.708333  99.989827       23.520833     1.0    -40727.708740         False          False   True
6  -40162.489827  -40427.625244  45733.761475 -40162.489827   96.791667 -40427.625244  241.708333  23.427083       -0.010417     2.0    -40727.708740         False          False   True
7  -40136.021077  -40404.187744  45807.303141 -40136.021077   49.895833 -40404.187744  241.708333  26.458333        0.000000     1.0    -40727.708740         False          False   True
8  -40136.021077  -40377.729411  45807.303223 -40136.021077   26.447917 -40377.729411  241.708333   0.000000      -99.999919     2.0    -40727.708740         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1129/48.[0m
[08/10 22:57:58]  --------------------------------------------------------------------------------
[08/10 22:57:58]  Iteration: 496 (196 solution, 299 counterexamples)
[08/10 23:01:23]  Generator returned sat in 194.811147 secs.
[08/10 23:01:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:01:25]  Verifer returned unsat in 0.970625 secs.
[08/10 23:01:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:01:25]  --------------------------------------------------------------------------------
[08/10 23:01:25]  Iteration: 497 (197 solution, 299 counterexamples)
[08/10 23:02:03]  Generator returned sat in 28.739423 secs.
[08/10 23:02:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:02:05]  Verifer returned unsat in 0.757689 secs.
[08/10 23:02:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:02:05]  --------------------------------------------------------------------------------
[08/10 23:02:05]  Iteration: 498 (198 solution, 299 counterexamples)
[08/10 23:02:48]  Generator returned sat in 33.047655 secs.
[08/10 23:02:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:02:50]  Verifer returned unsat in 0.699442 secs.
[08/10 23:02:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:02:50]  --------------------------------------------------------------------------------
[08/10 23:02:50]  Iteration: 499 (199 solution, 299 counterexamples)
[08/10 23:03:28]  Generator returned sat in 27.802464 secs.
[08/10 23:03:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:03:30]  Verifer returned unsat in 0.765527 secs.
[08/10 23:03:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:03:30]  --------------------------------------------------------------------------------
[08/10 23:03:30]  Iteration: 500 (200 solution, 299 counterexamples)
[08/10 23:04:07]  Generator returned sat in 27.917012 secs.
[08/10 23:04:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:04:11]  Verifer returned unsat in 2.193845 secs.
[08/10 23:04:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:04:11]  --------------------------------------------------------------------------------
[08/10 23:04:11]  Iteration: 501 (201 solution, 299 counterexamples)
[08/10 23:04:46]  Generator returned sat in 25.601755 secs.
[08/10 23:04:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:04:50]  Verifer returned unsat in 2.422673 secs.
[08/10 23:04:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:04:50]  --------------------------------------------------------------------------------
[08/10 23:04:50]  Iteration: 502 (202 solution, 299 counterexamples)
[08/10 23:05:27]  Generator returned sat in 27.466652 secs.
[08/10 23:05:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:05:31]  Verifer returned unsat in 2.827909 secs.
[08/10 23:05:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:05:31]  --------------------------------------------------------------------------------
[08/10 23:05:31]  Iteration: 503 (203 solution, 299 counterexamples)
[08/10 23:06:07]  Generator returned sat in 25.946820 secs.
[08/10 23:06:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:06:10]  Verifer returned unsat in 2.134556 secs.
[08/10 23:06:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:06:10]  --------------------------------------------------------------------------------
[08/10 23:06:10]  Iteration: 504 (204 solution, 299 counterexamples)
[08/10 23:07:04]  Generator returned sat in 43.844518 secs.
[08/10 23:07:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:07:08]  Verifer returned unsat in 2.601730 secs.
[08/10 23:07:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:07:08]  --------------------------------------------------------------------------------
[08/10 23:07:08]  Iteration: 505 (205 solution, 299 counterexamples)
[08/10 23:07:45]  Generator returned sat in 27.521034 secs.
[08/10 23:07:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:07:47]  Verifer returned unsat in 0.884759 secs.
[08/10 23:07:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:07:47]  --------------------------------------------------------------------------------
[08/10 23:07:47]  Iteration: 506 (206 solution, 299 counterexamples)
[08/10 23:08:23]  Generator returned sat in 25.815996 secs.
[08/10 23:08:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:08:26]  Verifer returned unsat in 1.724024 secs.
[08/10 23:08:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:08:26]  --------------------------------------------------------------------------------
[08/10 23:08:26]  Iteration: 507 (207 solution, 299 counterexamples)
[08/10 23:09:01]  Generator returned sat in 25.147962 secs.
[08/10 23:09:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:09:04]  Verifer returned unsat in 2.019752 secs.
[08/10 23:09:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:09:04]  --------------------------------------------------------------------------------
[08/10 23:09:04]  Iteration: 508 (208 solution, 299 counterexamples)
[08/10 23:09:40]  Generator returned sat in 26.001094 secs.
[08/10 23:09:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:09:44]  Verifer returned unsat in 2.001094 secs.
[08/10 23:09:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:09:44]  --------------------------------------------------------------------------------
[08/10 23:09:44]  Iteration: 509 (209 solution, 299 counterexamples)
[08/10 23:10:20]  Generator returned sat in 26.216752 secs.
[08/10 23:10:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:10:23]  Verifer returned unsat in 1.808227 secs.
[08/10 23:10:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:10:23]  --------------------------------------------------------------------------------
[08/10 23:10:23]  Iteration: 510 (210 solution, 299 counterexamples)
[08/10 23:12:03]  Generator returned sat in 89.246028 secs.
[08/10 23:12:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:05]  Verifer returned unsat in 0.772264 secs.
[08/10 23:12:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:05]  --------------------------------------------------------------------------------
[08/10 23:12:05]  Iteration: 511 (211 solution, 299 counterexamples)
[08/10 23:12:42]  Generator returned sat in 26.897244 secs.
[08/10 23:12:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:43]  Verifer returned unsat in 0.675223 secs.
[08/10 23:12:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:12:44]  --------------------------------------------------------------------------------
[08/10 23:12:44]  Iteration: 512 (212 solution, 299 counterexamples)
[08/10 23:13:31]  Generator returned sat in 37.400204 secs.
[08/10 23:13:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:13:41]  Improved gap from 1/40 to 0
[08/10 23:13:41]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 23:13:41]  Verifer returned sat in 8.896087 secs.
[08/10 23:13:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -56721.265869  -56780.866943  43164.258301 -56721.265869    0.025146 -56780.866943   2.000000   57.601074       57.601074     8.0    -56780.866943            -1             -1     -1
1  -56721.265869  -56780.866943  43206.657227 -56721.265869    0.025146 -56780.866943   2.000000   57.601074        0.000000     8.0    -56780.866943         False           True   True
2  -56721.265869  -56723.265869  43306.657227 -56721.265869    0.025146 -56723.265869   2.000000    0.000000        0.000000     3.0    -56780.866943         False           True  False
3  -56721.216064  -56723.240967  43406.607422 -56721.216064    0.049805 -56723.240967   2.000000    0.024902        0.000000     1.0    -56780.866943         False          False  False
4  -56605.989014  -56678.958984  43406.607422 -56605.989014  115.251953 -56678.958984  16.319092   56.650879        0.907959     1.0    -56780.866943         False          False  False
5  -56605.989014  -56623.216064  43505.699219 -56605.989014   56.625977 -56623.216064  16.319092    0.907959       -0.000244     2.0    -56780.866943         False          False   True
6  -56527.059082  -56622.282959  43526.769287 -56527.059082   79.837891 -56622.282959  16.319092   78.904785       -0.000244     1.0    -56780.866943         False          False   True
7  -56514.065918  -56543.353027  43612.375488 -56514.065918   91.897949 -56543.353027  16.319092   12.968018       -1.400879     1.0    -56780.866943         False          False   True
8  -56411.781982  -56528.983643  43612.375488 -56411.781982  115.251953 -56528.983643  16.319092  100.882568        0.883057     1.0    -56780.866943         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3719/4096.[0m
[08/10 23:13:42]  --------------------------------------------------------------------------------
[08/10 23:13:42]  Iteration: 513 (212 solution, 300 counterexamples)
[08/10 23:19:06]  Generator returned sat in 313.897548 secs.
[08/10 23:19:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:19:07]  Verifer returned unsat in 0.794896 secs.
[08/10 23:19:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:19:08]  --------------------------------------------------------------------------------
[08/10 23:19:08]  Iteration: 514 (213 solution, 300 counterexamples)
[08/10 23:19:44]  Generator returned sat in 26.597696 secs.
[08/10 23:19:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:19:46]  Verifer returned unsat in 1.127889 secs.
[08/10 23:19:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:19:46]  --------------------------------------------------------------------------------
[08/10 23:19:46]  Iteration: 515 (214 solution, 300 counterexamples)
[08/10 23:20:38]  Generator returned sat in 41.748348 secs.
[08/10 23:20:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:20:41]  Verifer returned unsat in 1.125593 secs.
[08/10 23:20:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:20:41]  --------------------------------------------------------------------------------
[08/10 23:20:41]  Iteration: 516 (215 solution, 300 counterexamples)
[08/10 23:21:21]  Generator returned sat in 30.054521 secs.
[08/10 23:21:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:21:24]  Verifer returned unsat in 2.006136 secs.
[08/10 23:21:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:21:24]  --------------------------------------------------------------------------------
[08/10 23:21:24]  Iteration: 517 (216 solution, 300 counterexamples)
[08/10 23:22:36]  Generator returned sat in 62.490514 secs.
[08/10 23:22:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:22:42]  Verifer returned unsat in 4.184745 secs.
[08/10 23:22:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:22:42]  --------------------------------------------------------------------------------
[08/10 23:22:42]  Iteration: 518 (217 solution, 300 counterexamples)
[08/10 23:23:28]  Generator returned sat in 36.147877 secs.
[08/10 23:23:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:23:33]  Verifer returned unsat in 4.146021 secs.
[08/10 23:23:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:23:33]  --------------------------------------------------------------------------------
[08/10 23:23:33]  Iteration: 519 (218 solution, 300 counterexamples)
[08/10 23:26:56]  Generator returned sat in 191.859670 secs.
[08/10 23:26:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:27:06]  Improved gap from 0 to 1.5625
[08/10 23:27:06]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 23:27:06]  Verifer returned sat in 9.647255 secs.
[08/10 23:27:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -44027.161133  -44044.031006  38915.712402 -44027.161133   0.100098 -44044.031006        0.0  16.869873       16.869873     2.0    -44044.031006            -1             -1   False
1  -44027.160889  -44028.623535  38998.742432 -44027.160889  16.870117 -44028.623535        0.0   1.462646       -0.099854     2.0    -44044.031006         False          False   False
2  -44025.598389  -44027.061035  39097.179932 -44025.598389   3.025146 -44027.061035        0.0   1.462646       -0.099854     1.0    -44025.598389         False          False   False
3  -44025.398682  -44025.498535  39195.617432 -44025.398682   1.662354 -44025.498535        0.0   0.099854       -1.462646     1.0    -44025.398682         False          False   False
4  -44016.901123  -44022.740967  39288.582520 -44016.901123   8.597412 -44022.740967        0.0   5.839844        0.000000     1.0    -44025.398682         False          False   False
5  -44016.901123  -44016.901123  39385.020020 -44016.901123   5.739990 -44016.901123        0.0   0.000000       -3.562500     2.0    -44025.398682         False          False   False
6  -44010.451172  -44013.338623  39482.132568 -44010.451172   6.449951 -44013.338623        0.0   2.887451        0.000000     1.0    -44025.398682         False          False   False
7  -44005.533691  -44010.351074  39577.214844 -44005.533691   7.804932 -44010.351074        0.0   4.817383       -0.000244     1.0    -44025.398682         False          False   False
8  -44001.753662  -44001.753662  39671.872559 -44001.753662   8.597412 -44001.753662        0.0   0.000000       -1.562500     1.0    -44025.398682         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/10 23:27:07]  --------------------------------------------------------------------------------
[08/10 23:27:07]  Iteration: 520 (218 solution, 301 counterexamples)
[08/10 23:28:09]  Generator returned sat in 52.367631 secs.
[08/10 23:28:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:28:12]  Improved gap from 2047/40960 to 35.9375
[08/10 23:28:13]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 23:28:13]  Verifer returned sat in 2.204700 secs.
[08/10 23:28:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -43816.212646  -43924.125000  38787.494141 -43816.212646  108.412500 -43924.125000        0.0  107.912354       99.600098     2.0    -43924.125000            -1             -1   False
1  -43815.812744  -43816.112793  38787.494141 -43815.812744  108.312256 -43816.112793        0.0    0.300049        0.000000     1.0    -43815.812744         False          False   False
2  -43765.175293  -43815.812500  38836.756836 -43765.175293   50.937500 -43815.812500        0.0   50.637207       -0.099854     1.0    -43765.175293         False          False   False
3  -43764.975098  -43765.075195  38900.819092 -43764.975098   50.837402 -43765.075195        0.0    0.100098      -35.837402     1.0    -43764.975098         False          False   False
4  -43687.050293  -43729.137695  38958.731689 -43687.050293   78.024902 -43729.137695        0.0   42.087402        0.000000     1.0    -43764.975098         False          False   False
5  -43687.050293  -43687.050293  39022.794189 -43687.050293   41.987549 -43687.050293        0.0    0.000000      -35.937500     2.0    -43764.975098         False          False   False
6  -43624.169189  -43651.112793  39086.856689 -43624.169189   62.881104 -43651.112793        0.0   26.943604       -8.993896     1.0    -43764.975098         False          False   False
7  -43595.631592  -43615.175293  39150.918945 -43595.631592   55.481201 -43615.175293        0.0   19.543701      -16.394043     1.0    -43764.975098         False          False   False
8  -43559.694092  -43579.237549  39214.981445 -43559.694092   55.481201 -43579.237549        0.0   19.543457      -16.394043     1.0    -43764.975098         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/10 23:28:13]  --------------------------------------------------------------------------------
[08/10 23:28:13]  Iteration: 521 (218 solution, 302 counterexamples)
[08/10 23:30:27]  Generator returned sat in 123.212485 secs.
[08/10 23:30:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:30:31]  Improved gap from 143231/81920 to 14.0625
[08/10 23:30:31]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 23:30:31]  Verifer returned sat in 3.407774 secs.
[08/10 23:30:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -44263.265137  -44705.315186  38958.731689 -44263.265137  364.049805 -44705.315186        0.0  442.050049      400.000000     5.0    -44705.315186            -1             -1    True
1  -44263.265137  -44563.265381  38958.731689 -44263.265137  364.050000 -44563.265381        0.0  300.000244      300.000000     5.0    -44705.315186         False          False    True
2  -44199.215332  -44563.265137  38958.731689 -44199.215332  364.050049 -44563.265137        0.0  364.049805      264.049805     5.0    -44705.315186         False          False    True
3  -44199.215332  -44452.315186  38958.731689 -44199.215332  363.950195 -44452.315186        0.0  253.099854      164.049805     6.0    -44199.215332         False          False    True
4  -44199.215332  -44263.265381  38958.731689 -44199.215332  253.000000 -44263.265381        0.0   64.050049       64.049805     7.0    -44199.215332         False          False    True
5  -44138.765381  -44199.115234  38958.731689 -44138.765381  124.500000 -44199.115234        0.0   60.349854       24.499756     1.0    -44199.215332         False           True   False
6  -44138.765381  -44141.490234  39022.894287 -44138.765381   60.250000 -44141.490234        0.0    2.724854      -11.337646     2.0    -44199.215332         False          False   False
7  -44113.365234  -44127.427734  39108.831787 -44113.365234   28.125000 -44127.427734        0.0   14.062500        0.000000     1.0    -44199.215332         False          False   False
8  -44113.365234  -44113.365234  39108.831787 -44113.365234   12.062500 -44113.365234        0.0    0.000000     -100.000000     2.0    -44199.215332         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3001/10.[0m
[08/10 23:30:32]  --------------------------------------------------------------------------------
[08/10 23:30:32]  Iteration: 522 (218 solution, 303 counterexamples)
[08/10 23:31:57]  Generator returned sat in 74.804168 secs.
[08/10 23:31:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:32:08]  Improved gap from 0 to 14.0625
[08/10 23:32:08]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 23:32:08]  Verifer returned sat in 9.846436 secs.
[08/10 23:32:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -48390.425049  -48832.800293  38958.731689 -48390.425049  403.025000 -48832.800293        0.0  442.375244      442.375244     5.0    -48832.800293            -1             -1    True
1  -48390.425049  -48732.800293  38958.731689 -48390.425049  402.924805 -48732.800293        0.0  342.375244      342.375244     5.0    -48390.425049         False          False    True
2  -48329.975342  -48732.800293  38958.731689 -48329.975342  402.824951 -48732.800293        0.0  402.824951      302.824951     5.0    -48329.975342         False          False    True
3  -48329.975342  -48583.075195  38958.731689 -48329.975342    6.549805 -48583.075195        0.0  253.099854      202.824951     5.0    -48329.975342         False          False    True
4  -48329.975342  -48454.575195  38958.731689 -48329.975342  253.000000 -48454.575195        0.0  124.599854      102.824951     6.0    -48329.975342         False          False    True
5  -48329.975342  -48390.325195  38958.731689 -48329.975342  124.500000 -48390.325195        0.0   60.349854        2.824951     4.0    -48329.975342         False           True   False
6  -48329.975342  -48332.800293  39044.669189 -48329.975342   60.250000 -48332.800293        0.0    2.824951      -11.237549     5.0    -48329.975342         False          False   False
7  -48304.675293  -48318.737793  39130.606689 -48304.675293   28.125000 -48318.737793        0.0   14.062500        0.000000     1.0    -48329.975342         False          False   False
8  -48304.675293  -48304.675293  39216.543945 -48304.675293   12.062500 -48304.675293        0.0    0.000000      -14.062744     2.0    -48329.975342         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=701389/2048.[0m
[08/10 23:32:09]  --------------------------------------------------------------------------------
[08/10 23:32:09]  Iteration: 523 (218 solution, 304 counterexamples)
[08/10 23:36:24]  Generator returned sat in 245.001523 secs.
[08/10 23:36:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:36:33]  Improved gap from 156211/32768 to 14.0625
[08/10 23:36:34]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 23:36:34]  Verifer returned sat in 8.703301 secs.
[08/10 23:36:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -45823.360840  -46252.973633  37921.106689 -45823.360840  429.712646 -46252.973633        0.0  429.612793      378.225342     6.0    -46252.973633            -1             -1    True
1  -45823.360840  -46176.973389  37921.106689 -45823.360840  429.612305 -46176.973389        0.0  353.612549      278.225342     6.0    -45823.360840         False          False    True
2  -45747.973389  -46001.586182  37921.106689 -45747.973389  429.000000 -46001.586182        0.0  253.612793      253.612793     6.0    -45747.973389         False          False    True
3  -45747.973389  -46001.586182  37921.106689 -45747.973389  253.612549 -46001.586182        0.0  253.612793      153.612793     6.0    -45747.973389         False          False    True
4  -45747.973389  -45823.360840  37921.106689 -45747.973389  253.000000 -45823.360840        0.0   75.387451       53.612793     7.0    -45747.973389         False          False    True
5  -45698.860840  -45747.873535  37921.106689 -45698.860840  124.500000 -45747.873535        0.0   49.012695        2.725342     1.0    -45747.973389         False           True   False
6  -45687.623535  -45701.586182  38007.044189 -45687.623535   60.250000 -45701.586182        0.0   13.962646       -0.099854     2.0    -45747.973389         False          False   False
7  -45673.461182  -45687.523682  38092.981689 -45673.461182   28.125000 -45687.523682        0.0   14.062500        0.000000     1.0    -45747.973389         False          False   False
8  -45673.461182  -45673.461182  38178.919189 -45673.461182   12.062500 -45673.461182        0.0    0.000000      -14.062500     2.0    -45747.973389         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=285005/1024.[0m
[08/10 23:36:34]  --------------------------------------------------------------------------------
[08/10 23:36:34]  Iteration: 524 (218 solution, 305 counterexamples)
[08/10 23:37:33]  Generator returned sat in 48.624548 secs.
[08/10 23:37:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:37:57]  Improved gap from 1/2400 to 3.125
[08/10 23:37:59]  Improved number of small numbers from 72 to 82 out of a max of 114
[08/10 23:37:59]  Verifer returned sat in 24.540591 secs.
[08/10 23:37:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -45700.661377  -45711.271182  37834.741455 -45700.661377  6.349854 -45711.271182        0.0  10.609805       10.609570     9.0    -45711.271182            -1             -1     -1
1  -45700.661377  -45700.761182  37921.106689 -45700.661377  6.249756 -45700.761182        0.0   0.099805       -3.025195     9.0    -45700.661377         False           True  False
2  -45694.611182  -45697.636182  38017.981689 -45694.611182  6.150000 -45697.636182        0.0   3.025000       -0.100000     1.0    -45694.611182         False           True  False
3  -45691.586182  -45694.511182  38114.856689 -45691.586182  6.050000 -45694.511182        0.0   2.925000       -0.200000     1.0    -45691.586182         False          False  False
4  -45685.106182  -45691.386182  38208.576660 -45685.106182  9.405000 -45691.386182        0.0   6.280000       -0.000029     1.0    -45691.586182         False          False  False
5  -45683.996182  -45685.006182  38305.351689 -45683.996182  7.390000 -45685.006182        0.0   1.010000       -2.115000     1.0    -45691.586182         False          False  False
6  -45676.996182  -45681.881182  38400.466553 -45676.996182  8.010000 -45681.881182        0.0   4.885000       -0.000137     1.0    -45691.586182         False          False  False
7  -45673.561182  -45676.896182  38497.031494 -45673.561182  8.320000 -45676.896182        0.0   3.335000       -0.000195     1.0    -45691.586182         False          False  False
8  -45667.491182  -45673.461182  38497.031738 -45667.491182  9.405000 -45673.461182        0.0   5.970000      -93.929951     1.0    -45691.586182         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/5.[0m
[08/10 23:38:00]  --------------------------------------------------------------------------------
[08/10 23:38:00]  Iteration: 525 (218 solution, 306 counterexamples)
[08/10 23:40:47]  Generator returned sat in 157.372030 secs.
[08/10 23:40:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:40:58]  Improved gap from 0 to 15.625
[08/10 23:41:00]  Improved number of small numbers from 69 to 81 out of a max of 114
[08/10 23:41:00]  Verifer returned sat in 11.418871 secs.
[08/10 23:41:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -45565.491734  -45981.197021  38034.741455 -45565.491734  415.678571 -45981.197021   0.026786  415.678502      381.303571     4.0    -45981.197021            -1             -1     -1
1  -45565.491734  -45846.822091  38034.741455 -45565.491734  415.651855 -45846.822091   0.026786  281.303571      281.303571     4.0    -45565.518520         False          False   True
2  -45431.170306  -45746.849121  38034.741455 -45431.170306  415.625000 -45746.849121   0.026786  315.652030      315.625000     5.0    -45431.197091         False          False   True
3  -45431.170306  -45746.822021  38034.741455 -45431.170306   73.678571 -45746.822021   0.026786  315.624930      215.625000     6.0    -45431.197091         False          False   True
4  -45431.170306  -45565.518555  38034.741455 -45431.170306  271.214286 -45565.518555   0.026786  134.321463      115.625000     7.0    -45431.197091         False          False   True
5  -45431.170306  -45496.777344  38034.741455 -45431.170306  134.107143 -45496.777344   0.026786   65.580253       15.625000     4.0    -45431.197091         False           True  False
6  -45431.170306  -45446.822091  38119.116211 -45431.170306   65.553571 -45446.822091   0.026786   15.625000       -0.000244     5.0    -45431.197091         False          False  False
7  -45415.518520  -45431.170410  38203.464669 -45415.518520   31.276786 -45431.170410   0.026786   15.625105        0.000000     1.0    -45431.197091         False          False  False
8  -45415.518520  -45415.545306  38203.464844 -45415.518520   14.138393 -45415.545306   0.026786    0.000000      -99.999826     2.0    -45431.197091         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=35353/112.[0m
[08/10 23:41:00]  --------------------------------------------------------------------------------
[08/10 23:41:00]  Iteration: 526 (218 solution, 307 counterexamples)
[08/10 23:42:51]  Generator returned sat in 100.501032 secs.
[08/10 23:42:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:42:59]  Improved gap from 0 to 0
[08/10 23:43:01]  Improved number of small numbers from 56 to 93 out of a max of 114
[08/10 23:43:01]  Verifer returned sat in 8.679198 secs.
[08/10 23:43:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -45315.539062  -45315.540039  37403.458740 -45315.539062  0.000244 -45315.540039        0.0  0.000977        0.000314     9.0    -45315.540039            -1             -1     -1
1  -45315.539062  -45315.539307  37503.458252 -45315.539062  0.000833 -45315.539307        0.0  0.000244       -0.000174     4.0    -45315.540039         False           True  False
2  -45315.538574  -45315.538818  37603.457764 -45315.538574  0.000732 -45315.538818        0.0  0.000244       -0.000174     1.0    -45315.538574         False          False  False
3  -45315.538086  -45315.538311  37703.457275 -45315.538086  0.000732 -45315.538311        0.0  0.000226       -0.000174     1.0    -45315.538574         False          False  False
4  -45315.528311  -45315.537895  37803.447510 -45315.528311  0.010000 -45315.537895        0.0  0.009583       -0.000166     1.0    -45315.538574         False          False  False
5  -45315.527895  -45315.528103  37903.437744 -45315.527895  0.010000 -45315.528103        0.0  0.000208       -0.009515     1.0    -45315.538574         False          False  False
6  -45315.518103  -45315.518311  38003.437467 -45315.518103  0.010000 -45315.518311        0.0  0.000208        0.000000     1.0    -45315.538574         False          False  False
7  -45315.508311  -45315.517895  38103.427490 -45315.508311  0.010000 -45315.517895        0.0  0.009583       -0.000185     1.0    -45315.538574         False          False  False
8  -45315.507895  -45315.508057  38103.427734 -45315.507895  0.010000 -45315.508057        0.0  0.000162      -99.999524     1.0    -45315.538574         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/2400.[0m
[08/10 23:43:01]  --------------------------------------------------------------------------------
[08/10 23:43:01]  Iteration: 527 (218 solution, 308 counterexamples)
[08/10 23:51:46]  Generator returned sat in 514.862960 secs.
[08/10 23:51:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:51:52]  Improved gap from 0 to 18.75
[08/10 23:51:52]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 23:51:52]  Verifer returned sat in 4.607849 secs.
[08/10 23:51:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -45701.767822  -46101.767822  38407.237061 -45701.767822    0.050049 -46101.767822        0.0  400.000000      400.000000     6.0    -46101.767822            -1             -1    True
1  -45701.718018  -46101.767822  38407.237061 -45701.718018  400.049805 -46101.767822        0.0  400.049805      300.049805     6.0    -46101.767822         False          False    True
2  -45701.718018  -45970.617676  38407.237061 -45701.718018  400.049805 -45970.617676        0.0  268.899658      200.049805     7.0    -46101.767822         False          False    True
3  -45570.617676  -45848.767822  38407.237061 -45570.617676  400.000000 -45848.767822        0.0  278.150146      231.150146     8.0    -45570.617676         False          False    True
4  -45570.617676  -45701.768066  38407.237061 -45570.617676  255.000000 -45701.768066        0.0  131.150391      131.150146     9.0    -45570.617676         False          False    True
5  -45570.617676  -45636.667725  38407.237061 -45570.617676  129.000000 -45636.667725        0.0   66.050049       31.150146     3.0    -45570.617676         False           True   False
6  -45570.617676  -45601.767822  38476.037109 -45570.617676   66.000000 -45601.767822        0.0   31.150146       -0.049805     4.0    -45570.617676         False          False   False
7  -45567.267822  -45570.567871  38557.287109 -45567.267822   34.500000 -45570.567871        0.0    3.300049      -15.449951     1.0    -45570.617676         False          False   False
8  -45551.817871  -45551.817871  38638.537109 -45551.817871   18.750000 -45551.817871        0.0    0.000000      -18.750000     1.0    -45570.617676         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1229209/4096.[0m
[08/10 23:51:53]  --------------------------------------------------------------------------------
[08/10 23:51:53]  Iteration: 528 (218 solution, 309 counterexamples)
[08/10 23:56:08]  Generator returned sat in 244.654468 secs.
[08/10 23:56:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:56:23]  Improved gap from 175357/25600 to 18.75
[08/10 23:56:24]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/10 23:56:24]  Verifer returned sat in 15.187525 secs.
[08/10 23:56:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -43735.844727  -44123.394684  38331.387061 -43735.844727    0.0500 -44123.394684        0.0  387.549958      387.549958     9.0    -44123.394684            -1             -1     -1
1  -43671.944684  -44123.344684  38331.387061 -43671.944684  451.4500 -44123.344684       63.9  387.500000      287.550000     8.0    -44123.394684         False           True  False
2  -43607.994684  -43929.744684  38331.387061 -43607.994684  451.4500 -43929.744684       63.9  257.850000      251.500000     7.0    -44123.394684          True           True   True
3  -43607.944684  -43863.894684  38331.387061 -43607.944684  257.9000 -43863.894684       63.9  192.050000      151.550000     7.0    -43671.844684         False          False   True
4  -43540.794684  -43735.844727  38331.387061 -43540.794684  259.2000 -43735.844727       63.9  131.150042      118.700000     8.0    -43671.844684         False          False   True
5  -43540.794684  -43671.794678  38331.387061 -43540.794684  131.1000 -43671.794678       63.9   67.099993       18.700000     2.0    -43671.844684         False           True  False
6  -43540.794684  -43623.394684  38412.637061 -43540.794684   67.0500 -43623.394684       63.9   18.700000       -0.050000     3.0    -43671.844684         False          False  False
7  -43524.469684  -43604.644684  38493.887061 -43524.469684   35.0250 -43604.644684       63.9   16.275000       -2.475000     1.0    -43671.844684         False          False  False
8  -43521.732184  -43585.894684  38575.136963 -43521.732184   19.0125 -43585.894684       63.9    0.262500      -18.487598     1.0    -43671.844684         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5751/20.[0m
[08/10 23:56:25]  --------------------------------------------------------------------------------
[08/10 23:56:25]  Iteration: 529 (218 solution, 310 counterexamples)
[08/10 23:59:26]  Generator returned sat in 170.927636 secs.
[08/10 23:59:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 23:59:28]  Improved gap from 1/10 to 46.875
[08/10 23:59:30]  Improved number of small numbers from 63 to 67 out of a max of 114
[08/10 23:59:30]  Verifer returned sat in 2.554606 secs.
[08/10 23:59:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -43995.559814  -44095.759684  38331.387061 -43995.559814    0.100098 -44095.759684       0.00  100.199870       100.19987     7.0    -44095.759684            -1             -1    True
1  -43995.459684  -43995.759684  38331.387061 -43995.459684  100.300000 -43995.759684       0.10    0.200000         0.20000     8.0    -44095.759684         False          False    True
2  -43895.659684  -43896.709684  38331.387061 -43895.659684  100.000000 -43896.709684       0.10    0.950000         0.00000     1.0    -43895.759684          True           True    True
3  -43681.409684  -43804.559684  38331.387061 -43681.409684  215.200000 -43804.559684     114.15    9.000000         0.20000     1.0    -43895.759684         False          False    True
4  -43581.309684  -43695.759684  38331.387061 -43581.309684  109.100000 -43695.759684     114.25    0.200000         0.20000     1.0    -43895.759684         False          False    True
5  -43525.459684  -43695.459684  38375.237061 -43525.459684   56.050000 -43695.459684     114.25   55.750000        -0.10000     1.0    -43895.759684         False          False    True
6  -43478.584684  -43639.609684  38428.362061 -43478.584684  102.625000 -43639.609684     114.25   46.775000        -0.10000     1.0    -43895.759684         False          False    True
7  -43440.884684  -43592.734684  38481.487061 -43440.884684   84.475000 -43592.734684     114.25   37.600000        -9.27500     1.0    -43895.759684         False          False    True
8  -43424.972184  -43545.859619  38481.487061 -43424.972184   53.512500 -43545.859619     114.25    6.637435       -93.36250     1.0    -43895.759684         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 23:59:31]  --------------------------------------------------------------------------------
[08/10 23:59:31]  Iteration: 530 (218 solution, 311 counterexamples)
[08/11 00:04:41]  Generator returned sat in 299.873382 secs.
[08/11 00:04:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:04:44]  Improved gap from 1023/40960 to 23.4375
[08/11 00:04:45]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/11 00:04:45]  Verifer returned sat in 3.351711 secs.
[08/11 00:04:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -42824.618652  -43024.568613  38328.362061 -42824.618652    0.050049 -43024.568613     0.0000  199.949960       99.949960     9.0    -43024.568613            -1             -1     -1
1  -42701.081113  -42824.568848  38328.362061 -42701.081113  323.487500 -42824.568848     0.0500  123.437735      123.437500     1.0    -43024.568613         False           True  False
2  -42701.081113  -42824.568613  38328.362061 -42701.081113  123.387695 -42824.568613     0.0500  123.437500       23.437500     2.0    -42701.131113         False          False   True
3  -42334.668613  -42648.006113  38328.362061 -42334.668613  489.850000 -42648.006113   166.4625  146.875000      123.437500     1.0    -42701.131113         False          False   True
4  -42234.618613  -42526.643613  38328.362061 -42234.618613  246.925000 -42526.643613   166.5125  125.512500      123.437500     2.0    -42701.131113         False          False   True
5  -42234.618613  -42465.912598  38328.362061 -42234.618613  125.462500 -42465.912598   166.5125   64.781485       23.437500     2.0    -42701.131113         False          False   True
6  -42234.618613  -42424.568613  38404.924561 -42234.618613   64.731250 -42424.568613   166.5125   23.437500        0.000000     3.0    -42701.131113         False          False   True
7  -42223.690488  -42401.131113  38481.487061 -42223.690488   34.365625 -42401.131113   166.5125   10.928125      -12.509375     4.0    -42701.131113         False          False   True
8  -42045.849863  -42377.693604  38481.487061 -42045.849863  188.768750 -42377.693604   166.5125  165.331241       65.331250     1.0    -42212.362363          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/11 00:04:46]  --------------------------------------------------------------------------------
[08/11 00:04:46]  Iteration: 531 (218 solution, 312 counterexamples)
[08/11 00:07:56]  Generator returned sat in 179.724458 secs.
[08/11 00:07:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:07:59]  Verifer returned unsat in 2.162271 secs.
[08/11 00:07:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:08:00]  --------------------------------------------------------------------------------
[08/11 00:08:00]  Iteration: 532 (219 solution, 312 counterexamples)
[08/11 00:08:39]  Generator returned sat in 29.102098 secs.
[08/11 00:08:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:08:42]  Verifer returned unsat in 1.499383 secs.
[08/11 00:08:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:08:42]  --------------------------------------------------------------------------------
[08/11 00:08:42]  Iteration: 533 (220 solution, 312 counterexamples)
[08/11 00:09:44]  Generator returned sat in 51.904400 secs.
[08/11 00:09:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:09:47]  Verifer returned unsat in 1.467454 secs.
[08/11 00:09:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:09:47]  --------------------------------------------------------------------------------
[08/11 00:09:47]  Iteration: 534 (221 solution, 312 counterexamples)
[08/11 00:10:28]  Generator returned sat in 30.330351 secs.
[08/11 00:10:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:10:31]  Verifer returned unsat in 2.033525 secs.
[08/11 00:10:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:10:31]  --------------------------------------------------------------------------------
[08/11 00:10:31]  Iteration: 535 (222 solution, 312 counterexamples)
[08/11 00:11:11]  Generator returned sat in 29.596777 secs.
[08/11 00:11:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:11:14]  Verifer returned unsat in 1.536295 secs.
[08/11 00:11:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:11:14]  --------------------------------------------------------------------------------
[08/11 00:11:14]  Iteration: 536 (223 solution, 312 counterexamples)
[08/11 00:11:53]  Generator returned sat in 28.492954 secs.
[08/11 00:11:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:11:56]  Verifer returned unsat in 1.549214 secs.
[08/11 00:11:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:11:56]  --------------------------------------------------------------------------------
[08/11 00:11:56]  Iteration: 537 (224 solution, 312 counterexamples)
[08/11 00:12:37]  Generator returned sat in 30.391362 secs.
[08/11 00:12:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:12:40]  Verifer returned unsat in 1.605396 secs.
[08/11 00:12:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:12:40]  --------------------------------------------------------------------------------
[08/11 00:12:40]  Iteration: 538 (225 solution, 312 counterexamples)
[08/11 00:13:20]  Generator returned sat in 29.597660 secs.
[08/11 00:13:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:13:25]  Verifer returned unsat in 3.325628 secs.
[08/11 00:13:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:13:25]  --------------------------------------------------------------------------------
[08/11 00:13:25]  Iteration: 539 (226 solution, 312 counterexamples)
[08/11 00:14:05]  Generator returned sat in 30.097305 secs.
[08/11 00:14:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:14:10]  Verifer returned unsat in 2.967582 secs.
[08/11 00:14:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:14:10]  --------------------------------------------------------------------------------
[08/11 00:14:10]  Iteration: 540 (227 solution, 312 counterexamples)
[08/11 00:14:48]  Generator returned sat in 27.370026 secs.
[08/11 00:14:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:14:53]  Verifer returned unsat in 3.725564 secs.
[08/11 00:14:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:14:53]  --------------------------------------------------------------------------------
[08/11 00:14:53]  Iteration: 541 (228 solution, 312 counterexamples)
[08/11 00:17:16]  Generator returned sat in 132.358215 secs.
[08/11 00:17:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:17:19]  Verifer returned unsat in 2.253498 secs.
[08/11 00:17:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:17:19]  --------------------------------------------------------------------------------
[08/11 00:17:19]  Iteration: 542 (229 solution, 312 counterexamples)
[08/11 00:17:59]  Generator returned sat in 29.082454 secs.
[08/11 00:18:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:18:02]  Verifer returned unsat in 2.061289 secs.
[08/11 00:18:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:18:02]  --------------------------------------------------------------------------------
[08/11 00:18:02]  Iteration: 543 (230 solution, 312 counterexamples)
[08/11 00:18:51]  Generator returned sat in 37.767126 secs.
[08/11 00:18:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:18:53]  Verifer returned unsat in 1.457678 secs.
[08/11 00:18:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:18:53]  --------------------------------------------------------------------------------
[08/11 00:18:53]  Iteration: 544 (231 solution, 312 counterexamples)
[08/11 00:20:08]  Generator returned sat in 64.429843 secs.
[08/11 00:20:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:20:10]  Improved gap from 0 to 23.4375
[08/11 00:20:12]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/11 00:20:12]  Verifer returned sat in 2.227571 secs.
[08/11 00:20:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -36245.042236  -36571.504654  38528.852061 -36245.042236  326.662354 -36571.504654     0.0000  326.462418      226.462418     2.0    -36571.504654            -1             -1   False
1  -36244.942154  -36371.504654  38528.852061 -36244.942154  326.562500 -36371.504654     0.1000  126.462500      126.462500     2.0    -36245.042154         False          False   False
2  -36144.842154  -36371.504654  38528.852061 -36144.842154  226.562500 -36371.504654     0.2000  226.462500      126.462500     2.0    -36145.042154         False          False    True
3  -35874.454654  -36194.867154  38528.852061 -35874.454654  496.850000 -36194.867154   170.5875  149.825000      126.462500     2.0    -36145.042154         False          False    True
4  -35774.354654  -36071.504654  38528.852061 -35774.354654  249.925000 -36071.504654   170.6875  126.462500      126.462500     2.0    -36145.042154         False          False    True
5  -35774.354654  -36044.942139  38528.852061 -35774.354654  126.462500 -36044.942139   170.6875   99.899984       26.462500     2.0    -36145.042154         False          False    True
6  -35774.354654  -35971.504654  38602.389561 -35774.354654   65.231250 -35971.504654   170.6875   26.462500        0.000000     3.0    -36145.042154         False          False    True
7  -35766.201529  -35945.042154  38678.951904 -35766.201529   34.615625 -35945.042154   170.6875    8.153125      -15.284531     4.0    -36145.042154         False          False    True
8  -35584.660904  -35921.604492  38678.951904 -35584.660904  189.693750 -35921.604492   170.6875  166.256088       66.256094     1.0    -35755.348404          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=10117/80.[0m
[08/11 00:20:12]  --------------------------------------------------------------------------------
[08/11 00:20:12]  Iteration: 545 (231 solution, 313 counterexamples)
[08/11 00:25:07]  Generator returned sat in 283.912804 secs.
[08/11 00:25:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:25:13]  Improved gap from 1/40 to 1.5625
[08/11 00:25:16]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/11 00:25:16]  Verifer returned sat in 7.542419 secs.
[08/11 00:25:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -36015.197266  -36115.258590  38528.852295 -36015.197266  126.061343 -36115.258590   0.061343  99.999981       74.000216     9.0    -36115.258590            -1             -1     -1
1  -35989.197247  -36015.258590  38528.852295 -35989.197247  126.000000 -36015.258590   0.061343  26.000000        0.000234     1.0    -35989.258590         False           True   True
2  -35889.258590  -35889.381275  38528.852295 -35889.258590  125.938657 -35889.381275   0.061343   0.061343       -0.061108     1.0    -35889.319932         False          False   True
3  -35887.634747  -35889.258590  38627.289561 -35887.634747    1.685185 -35889.258590   0.061343   1.562500        0.000000     1.0    -35887.696090         False          False   True
4  -35774.354654  -35842.677571  38627.289561 -35774.354654  114.842593 -35842.677571  11.840278  56.482639        1.501157     1.0    -35887.696090         False          False   True
5  -35774.354654  -35787.696090  38725.727061 -35774.354654   56.421296 -35787.696090  11.840278   1.501157       -0.061343     2.0    -35887.696090         False          False   True
6  -35695.802571  -35786.133590  38747.236084 -35695.802571   80.053241 -35786.133590  11.840278  78.490741       -0.000236     1.0    -35887.696090         False          False   True
7  -35681.704192  -35707.581506  38832.332275 -35681.704192   92.589120 -35707.581506  11.840278  14.037037       -0.805665     1.0    -35887.696090         False          False   True
8  -35580.898636  -35692.738770  38832.332275 -35580.898636  114.842593 -35692.738770  11.840278  99.999856       -0.000109     1.0    -35887.696090         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1297/864.[0m
[08/11 00:25:16]  --------------------------------------------------------------------------------
[08/11 00:25:16]  Iteration: 546 (231 solution, 314 counterexamples)
[08/11 00:28:28]  Generator returned sat in 181.341636 secs.
[08/11 00:28:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:28:32]  Verifer returned unsat in 2.872624 secs.
[08/11 00:28:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:28:32]  --------------------------------------------------------------------------------
[08/11 00:28:32]  Iteration: 547 (232 solution, 314 counterexamples)
[08/11 00:29:15]  Generator returned sat in 32.298434 secs.
[08/11 00:29:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:29:19]  Verifer returned unsat in 2.414970 secs.
[08/11 00:29:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:29:19]  --------------------------------------------------------------------------------
[08/11 00:29:19]  Iteration: 548 (233 solution, 314 counterexamples)
[08/11 00:29:59]  Generator returned sat in 28.988239 secs.
[08/11 00:30:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:30:02]  Verifer returned unsat in 2.596369 secs.
[08/11 00:30:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:30:02]  --------------------------------------------------------------------------------
[08/11 00:30:02]  Iteration: 549 (234 solution, 314 counterexamples)
[08/11 00:30:45]  Generator returned sat in 31.334831 secs.
[08/11 00:30:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:30:47]  Verifer returned unsat in 1.544120 secs.
[08/11 00:30:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:30:48]  --------------------------------------------------------------------------------
[08/11 00:30:48]  Iteration: 550 (235 solution, 314 counterexamples)
[08/11 00:31:29]  Generator returned sat in 30.315236 secs.
[08/11 00:31:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:31:32]  Verifer returned unsat in 2.088547 secs.
[08/11 00:31:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:31:32]  --------------------------------------------------------------------------------
[08/11 00:31:32]  Iteration: 551 (236 solution, 314 counterexamples)
[08/11 00:32:14]  Generator returned sat in 30.726691 secs.
[08/11 00:32:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:32:17]  Verifer returned unsat in 1.722646 secs.
[08/11 00:32:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:32:17]  --------------------------------------------------------------------------------
[08/11 00:32:17]  Iteration: 552 (237 solution, 314 counterexamples)
[08/11 00:32:57]  Generator returned sat in 29.557933 secs.
[08/11 00:32:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:33:02]  Verifer returned unsat in 3.526595 secs.
[08/11 00:33:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:33:02]  --------------------------------------------------------------------------------
[08/11 00:33:02]  Iteration: 553 (238 solution, 314 counterexamples)
[08/11 00:33:53]  Generator returned sat in 40.594566 secs.
[08/11 00:33:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:33:56]  Verifer returned unsat in 1.781726 secs.
[08/11 00:33:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:33:56]  --------------------------------------------------------------------------------
[08/11 00:33:56]  Iteration: 554 (239 solution, 314 counterexamples)
[08/11 00:34:37]  Generator returned sat in 30.379706 secs.
[08/11 00:34:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:34:39]  Verifer returned unsat in 0.839628 secs.
[08/11 00:34:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:34:39]  --------------------------------------------------------------------------------
[08/11 00:34:39]  Iteration: 555 (240 solution, 314 counterexamples)
[08/11 00:36:45]  Generator returned sat in 114.842055 secs.
[08/11 00:36:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:36:47]  Verifer returned unsat in 1.655261 secs.
[08/11 00:36:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:36:47]  --------------------------------------------------------------------------------
[08/11 00:36:47]  Iteration: 556 (241 solution, 314 counterexamples)
[08/11 00:37:28]  Generator returned sat in 30.012785 secs.
[08/11 00:37:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:37:31]  Verifer returned unsat in 1.941827 secs.
[08/11 00:37:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:37:31]  --------------------------------------------------------------------------------
[08/11 00:37:31]  Iteration: 557 (242 solution, 314 counterexamples)
[08/11 00:38:12]  Generator returned sat in 30.344926 secs.
[08/11 00:38:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:38:15]  Verifer returned unsat in 1.854180 secs.
[08/11 00:38:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:38:15]  --------------------------------------------------------------------------------
[08/11 00:38:15]  Iteration: 558 (243 solution, 314 counterexamples)
[08/11 00:38:57]  Generator returned sat in 30.752458 secs.
[08/11 00:38:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:39:00]  Verifer returned unsat in 1.605945 secs.
[08/11 00:39:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:39:00]  --------------------------------------------------------------------------------
[08/11 00:39:00]  Iteration: 559 (244 solution, 314 counterexamples)
[08/11 00:39:44]  Generator returned sat in 32.776408 secs.
[08/11 00:39:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:39:46]  Verifer returned unsat in 1.348520 secs.
[08/11 00:39:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:39:46]  --------------------------------------------------------------------------------
[08/11 00:39:46]  Iteration: 560 (245 solution, 314 counterexamples)
[08/11 00:40:57]  Generator returned sat in 60.089070 secs.
[08/11 00:40:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:41:00]  Improved gap from 0 to 23.4375
[08/11 00:41:02]  Improved number of small numbers from 57 to 66 out of a max of 114
[08/11 00:41:02]  Verifer returned sat in 3.480913 secs.
[08/11 00:41:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -36286.099365  -36418.792359  38597.727051 -36286.099365  132.652588 -36418.792359    0.061279  132.631714      123.520603     5.0    -36418.792359            -1             -1     -1
1  -36286.088718  -36409.681152  38597.727051 -36286.088718  132.642361 -36409.681152    0.071696  123.520738       23.520833     2.0    -36286.160414         False           True  False
2  -36286.088718  -36286.170831  38597.727051 -36286.088718  123.510498 -36286.170831    0.071696    0.010417      -76.479167     3.0    -36286.160414         False          False   True
3  -36162.599135  -36162.681247  38627.289551 -36162.599135  123.500000 -36162.681247    0.071696    0.010417      -23.427083     1.0    -36162.670831         False           True  False
4  -35778.442885  -36039.243747  38627.289551 -35778.442885  384.166667 -36039.243747  237.280029   23.520833       23.520833     1.0    -36162.670831         False          False  False
5  -35609.380385  -36012.525146  38627.289551 -35609.380385  192.583333 -36012.525146  306.342529   96.802232       23.520833     1.0    -36162.670831         False          False   True
6  -35609.380385  -35939.149997  38703.758301 -35609.380385   96.791667 -35939.149997  306.342529   23.427083       -0.010417     2.0    -36162.670831         False          False   True
7  -35582.911635  -35915.712402  38777.299967 -35582.911635   49.895833 -35915.712402  306.342529   26.458238        0.000000     1.0    -36162.670831         False          False   True
8  -35582.911635  -35889.254164  38777.300049 -35582.911635   26.447917 -35889.254164  306.342529    0.000000      -99.999919     2.0    -36162.670831         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1129/48.[0m
[08/11 00:41:02]  --------------------------------------------------------------------------------
[08/11 00:41:02]  Iteration: 561 (245 solution, 315 counterexamples)
[08/11 00:45:31]  Generator returned sat in 257.843145 secs.
[08/11 00:45:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:45:38]  Improved gap from 1/40 to 0
[08/11 00:45:39]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/11 00:45:39]  Verifer returned sat in 7.005682 secs.
[08/11 00:45:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -31403.156250  -31529.631348  38597.727051 -31403.156250  127.371875 -31529.631348   0.000000  126.475098       99.949707     9.0    -31529.631348            -1             -1     -1
1  -31402.309326  -31403.105957  38597.727051 -31402.309326  127.322021 -31403.105957   0.049805    0.746826        0.746826     1.0    -31402.359131         False           True  False
2  -31302.956299  -31303.106201  38597.727051 -31302.956299  100.099854 -31303.106201   0.049805    0.100098        0.099854     1.0    -31303.006104         False          False   True
3  -31302.956299  -31303.056152  38697.627197 -31302.956299    0.049805 -31303.056152   0.049805    0.050049        0.000000     2.0    -31303.006104         False          False   True
4  -31189.693848  -31260.465332  38697.627197 -31189.693848  113.312500 -31260.465332  12.565430   58.206055        0.746826     1.0    -31303.006104         False          False   True
5  -31189.693848  -31203.006104  38796.880127 -31189.693848   58.156250 -31203.006104  12.565430    0.746826       -0.000244     2.0    -31303.006104         False          False   True
6  -31111.312500  -31202.209229  38818.498779 -31111.312500   79.128174 -31202.209229  12.565430   78.331299       -0.000244     1.0    -31303.006104         False          False   True
7  -31099.656250  -31123.827881  38905.136475 -31099.656250   89.987549 -31123.827881  12.565430   11.606201       -1.706299     1.0    -31303.006104         False          False   True
8  -30997.949951  -31110.515381  38905.136475 -30997.949951  113.312500 -31110.515381  12.565430  100.000000        0.000000     1.0    -31303.006104         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3059/4096.[0m
[08/11 00:45:40]  --------------------------------------------------------------------------------
[08/11 00:45:40]  Iteration: 562 (245 solution, 316 counterexamples)
[08/11 00:48:10]  Generator returned sat in 139.811173 secs.
[08/11 00:48:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:48:12]  Verifer returned unsat in 1.308383 secs.
[08/11 00:48:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:48:12]  --------------------------------------------------------------------------------
[08/11 00:48:12]  Iteration: 563 (246 solution, 316 counterexamples)
[08/11 00:48:57]  Generator returned sat in 33.981200 secs.
[08/11 00:48:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:49:00]  Verifer returned unsat in 2.033580 secs.
[08/11 00:49:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:49:00]  --------------------------------------------------------------------------------
[08/11 00:49:00]  Iteration: 564 (247 solution, 316 counterexamples)
[08/11 00:49:44]  Generator returned sat in 32.734577 secs.
[08/11 00:49:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:49:45]  Verifer returned unsat in 0.529665 secs.
[08/11 00:49:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:49:45]  --------------------------------------------------------------------------------
[08/11 00:49:45]  Iteration: 565 (248 solution, 316 counterexamples)
[08/11 00:50:26]  Generator returned sat in 29.774058 secs.
[08/11 00:50:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:50:27]  Verifer returned unsat in 0.618926 secs.
[08/11 00:50:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:50:27]  --------------------------------------------------------------------------------
[08/11 00:50:27]  Iteration: 566 (249 solution, 316 counterexamples)
[08/11 00:51:09]  Generator returned sat in 31.005964 secs.
[08/11 00:51:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:51:12]  Verifer returned unsat in 1.453402 secs.
[08/11 00:51:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:51:12]  --------------------------------------------------------------------------------
[08/11 00:51:12]  Iteration: 567 (250 solution, 316 counterexamples)
[08/11 00:51:55]  Generator returned sat in 31.720933 secs.
[08/11 00:51:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:51:58]  Verifer returned unsat in 2.400501 secs.
[08/11 00:51:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:51:58]  --------------------------------------------------------------------------------
[08/11 00:51:58]  Iteration: 568 (251 solution, 316 counterexamples)
[08/11 00:52:39]  Generator returned sat in 29.898471 secs.
[08/11 00:52:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:52:42]  Verifer returned unsat in 1.844253 secs.
[08/11 00:52:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:52:42]  --------------------------------------------------------------------------------
[08/11 00:52:42]  Iteration: 569 (252 solution, 316 counterexamples)
[08/11 00:57:06]  Generator returned sat in 253.465986 secs.
[08/11 00:57:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:57:10]  Improved gap from 1/20 to 48.4375
[08/11 00:57:11]  Improved number of small numbers from 64 to 84 out of a max of 114
[08/11 00:57:11]  Verifer returned sat in 3.294245 secs.
[08/11 00:57:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -21786.797852  -21886.798096  38697.627197 -21786.797852    0.099854 -21886.798096        0.0  100.000244      100.000029     1.0    -21886.798096            -1             -1    True
1  -21786.797852  -21886.797852  38697.627197 -21786.797852    0.100098 -21886.797852        0.0  100.000000        0.000029     2.0    -21886.798096         False          False    True
2  -21686.697754  -21686.797881  38697.627197 -21686.697754  200.100098 -21686.797881        0.0    0.100127        0.100127     1.0    -21886.798096          True           True   False
3  -21489.197881  -21586.797881  38697.627197 -21489.197881  197.600000 -21586.797881       97.4    0.200000        0.200000     1.0    -21586.597881         False          False   False
4  -21389.097881  -21489.710381  38697.627197 -21389.097881  100.300000 -21489.710381       97.5    3.112500        0.200000     1.0    -21586.597881         False          False    True
5  -21340.560381  -21486.498047  38748.889697 -21340.560381   51.650000 -21486.498047       97.5   48.437666        0.000000     1.0    -21586.597881         False          False    True
6  -21340.560381  -21438.060381  38800.452148 -21340.560381    0.500000 -21438.060381       97.5    0.000000      -48.437549     2.0    -21586.597881         False          False    True
7  -21263.941631  -21388.247881  38850.639648 -21263.941631   76.618750 -21388.247881       97.5   26.806250      -21.631299     1.0    -21361.441631          True           True   False
8  -21199.707256  -21339.810303  38850.639893 -21199.707256   91.040625 -21339.810303       97.5   42.603047      -57.396680     1.0    -21361.441631         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/11 00:57:12]  --------------------------------------------------------------------------------
[08/11 00:57:12]  Iteration: 570 (252 solution, 317 counterexamples)
[08/11 00:58:30]  Generator returned sat in 67.639967 secs.
[08/11 00:58:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:58:32]  Verifer returned unsat in 1.104148 secs.
[08/11 00:58:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:58:32]  --------------------------------------------------------------------------------
[08/11 00:58:32]  Iteration: 571 (253 solution, 317 counterexamples)
[08/11 00:59:13]  Generator returned sat in 30.535753 secs.
[08/11 00:59:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:59:15]  Verifer returned unsat in 0.545456 secs.
[08/11 00:59:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 00:59:15]  --------------------------------------------------------------------------------
[08/11 00:59:15]  Iteration: 572 (254 solution, 317 counterexamples)
[08/11 01:00:00]  Generator returned sat in 34.612333 secs.
[08/11 01:00:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:00:03]  Verifer returned unsat in 1.574833 secs.
[08/11 01:00:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:00:03]  --------------------------------------------------------------------------------
[08/11 01:00:03]  Iteration: 573 (255 solution, 317 counterexamples)
[08/11 01:00:57]  Generator returned sat in 43.090990 secs.
[08/11 01:00:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:01:00]  Verifer returned unsat in 1.971642 secs.
[08/11 01:01:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:01:00]  --------------------------------------------------------------------------------
[08/11 01:01:00]  Iteration: 574 (256 solution, 317 counterexamples)
[08/11 01:01:43]  Generator returned sat in 32.519983 secs.
[08/11 01:01:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:01:47]  Verifer returned unsat in 2.747250 secs.
[08/11 01:01:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:01:47]  --------------------------------------------------------------------------------
[08/11 01:01:47]  Iteration: 575 (257 solution, 317 counterexamples)
[08/11 01:02:35]  Generator returned sat in 36.970111 secs.
[08/11 01:02:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:02:37]  Verifer returned unsat in 0.670012 secs.
[08/11 01:02:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:02:37]  --------------------------------------------------------------------------------
[08/11 01:02:37]  Iteration: 576 (258 solution, 317 counterexamples)
[08/11 01:03:17]  Generator returned sat in 29.566035 secs.
[08/11 01:03:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:03:19]  Verifer returned unsat in 0.638016 secs.
[08/11 01:03:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:03:19]  --------------------------------------------------------------------------------
[08/11 01:03:19]  Iteration: 577 (259 solution, 317 counterexamples)
[08/11 01:04:00]  Generator returned sat in 30.372467 secs.
[08/11 01:04:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:04:02]  Verifer returned unsat in 0.557613 secs.
[08/11 01:04:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:04:02]  --------------------------------------------------------------------------------
[08/11 01:04:02]  Iteration: 578 (260 solution, 317 counterexamples)
[08/11 01:05:00]  Generator returned sat in 47.351640 secs.
[08/11 01:05:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:05:07]  Improved gap from 1/88 to 0
[08/11 01:05:08]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 01:05:08]  Verifer returned sat in 6.751409 secs.
[08/11 01:05:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -414.843750    -544.843750  39096.671143  -414.843750    0.026367  -544.843750   0.026367  129.973633       99.973389     4.0      -544.843750            -1             -1     -1
1    -414.791260    -414.843750  39096.671143  -414.791260  130.026123  -414.843750   0.026367    0.026123        0.025879     1.0      -544.843750         False          False   True
2    -314.738525    -314.843750  39096.671143  -314.738525  100.078857  -314.843750   0.052490    0.052734        0.052490     1.0      -314.791016         False          False   True
3    -314.738525    -314.817383  39196.618652  -314.738525    0.026367  -314.817383   0.052490    0.026367        0.000000     2.0      -314.791016         False          False   True
4    -199.238525    -274.027832  39196.618652  -199.238525  115.526367  -274.027832  15.500000   59.289307        0.052490     1.0      -314.791016         False          False   True
5    -199.238525    -214.791016  39296.565918  -199.238525   59.263184  -214.791016  15.500000    0.052490       -0.000244     2.0      -314.791016         False          False   True
6    -119.133057    -214.712158  39316.460693  -119.133057   80.157959  -214.712158  15.500000   80.079102        0.000000     1.0      -314.791016         False          False   True
7    -108.580566    -134.606689  39405.907959  -108.580566   90.631592  -134.606689  15.500000   10.526123       -0.000244     1.0      -314.791016         False          False   True
8      -3.580322    -124.054443  39405.907959    -3.580322  115.526367  -124.054443  20.447510  100.026611        0.052490     1.0      -314.791016         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=215/4096.[0m
[08/11 01:05:09]  --------------------------------------------------------------------------------
[08/11 01:05:09]  Iteration: 579 (260 solution, 318 counterexamples)
[08/11 01:08:12]  Generator returned sat in 173.066269 secs.
[08/11 01:08:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:08:16]  Verifer returned unsat in 2.075354 secs.
[08/11 01:08:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:08:16]  --------------------------------------------------------------------------------
[08/11 01:08:16]  Iteration: 580 (261 solution, 318 counterexamples)
[08/11 01:08:58]  Generator returned sat in 31.591475 secs.
[08/11 01:08:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:09:03]  Verifer returned unsat in 3.173356 secs.
[08/11 01:09:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:09:03]  --------------------------------------------------------------------------------
[08/11 01:09:03]  Iteration: 581 (262 solution, 318 counterexamples)
[08/11 01:09:45]  Generator returned sat in 31.540938 secs.
[08/11 01:09:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:09:48]  Verifer returned unsat in 1.820197 secs.
[08/11 01:09:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:09:48]  --------------------------------------------------------------------------------
[08/11 01:09:48]  Iteration: 582 (263 solution, 318 counterexamples)
[08/11 01:10:32]  Generator returned sat in 33.083596 secs.
[08/11 01:10:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:10:36]  Verifer returned unsat in 2.212394 secs.
[08/11 01:10:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:10:36]  --------------------------------------------------------------------------------
[08/11 01:10:36]  Iteration: 583 (264 solution, 318 counterexamples)
[08/11 01:11:19]  Generator returned sat in 32.487757 secs.
[08/11 01:11:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:11:22]  Verifer returned unsat in 1.867834 secs.
[08/11 01:11:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:11:22]  --------------------------------------------------------------------------------
[08/11 01:11:22]  Iteration: 584 (265 solution, 318 counterexamples)
[08/11 01:13:28]  Generator returned sat in 115.408091 secs.
[08/11 01:13:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:13:33]  Improved gap from 1/10 to 0
[08/11 01:13:34]  Improved number of small numbers from 106 to 113 out of a max of 114
[08/11 01:13:34]  Verifer returned sat in 4.084531 secs.
[08/11 01:13:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2703.404217    2647.184705  38896.801758  2703.404217   56.329268  2647.184705   0.000000  56.219512       -0.036407     6.0      2647.184705            -1             -1     -1
1    2703.477388    2703.440803  38996.728516  2703.477388   56.292683  2703.440803   0.000000   0.036585       -0.036478     1.0      2703.477388         False           True  False
2    2703.550559    2703.513974  39096.655273  2703.550559    0.109756  2703.513974   0.000000   0.036585       -0.036550     1.0      2703.550559         False          False  False
3    2703.623730    2703.587144  39196.618652  2703.623730    0.109756  2703.587144   0.000000   0.036585        0.000000     1.0      2703.550559         False          False  False
4    2816.392022    2748.757876  39196.618652  2816.392022  112.804878  2748.757876   9.195122  58.439024        3.573171     1.0      2703.550559         False          False  False
5    2816.392022    2803.623730  39293.009033  2816.392022   58.402439  2803.623730   9.195122   3.573171       -0.036448     2.0      2703.550559         False          False   True
6    2892.074949    2807.233486  39317.326172  2892.074949   79.256098  2807.233486   9.195122  75.646341       -0.036383     1.0      2703.550559         False          False   True
7    2907.879827    2882.916413  39401.521240  2907.879827   91.451220  2882.916413   9.195122  15.768293       -0.036436     1.0      2703.550559         False          False   True
8    3004.916413    2898.721291  39401.521240  3004.916413  112.804878  2898.721291   9.195122  97.000000       -2.999851     1.0      2703.550559         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=293/82.[0m
[08/11 01:13:34]  --------------------------------------------------------------------------------
[08/11 01:13:34]  Iteration: 585 (265 solution, 319 counterexamples)
[08/11 01:14:37]  Generator returned sat in 51.991878 secs.
[08/11 01:14:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:14:39]  Verifer returned unsat in 0.773611 secs.
[08/11 01:14:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:14:39]  --------------------------------------------------------------------------------
[08/11 01:14:39]  Iteration: 586 (266 solution, 319 counterexamples)
[08/11 01:15:20]  Generator returned sat in 30.698509 secs.
[08/11 01:15:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:15:22]  Verifer returned unsat in 0.740536 secs.
[08/11 01:15:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:15:22]  --------------------------------------------------------------------------------
[08/11 01:15:22]  Iteration: 587 (267 solution, 319 counterexamples)
[08/11 01:16:09]  Generator returned sat in 35.615818 secs.
[08/11 01:16:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:16:15]  Verifer returned unsat in 4.323752 secs.
[08/11 01:16:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:16:15]  --------------------------------------------------------------------------------
[08/11 01:16:15]  Iteration: 588 (268 solution, 319 counterexamples)
[08/11 01:16:57]  Generator returned sat in 31.620131 secs.
[08/11 01:16:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:17:00]  Verifer returned unsat in 1.537809 secs.
[08/11 01:17:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:17:00]  --------------------------------------------------------------------------------
[08/11 01:17:00]  Iteration: 589 (269 solution, 319 counterexamples)
[08/11 01:17:45]  Generator returned sat in 34.222512 secs.
[08/11 01:17:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:17:48]  Verifer returned unsat in 1.744470 secs.
[08/11 01:17:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:17:49]  --------------------------------------------------------------------------------
[08/11 01:17:49]  Iteration: 590 (270 solution, 319 counterexamples)
[08/11 01:18:29]  Generator returned sat in 29.966099 secs.
[08/11 01:18:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:18:33]  Verifer returned unsat in 2.731580 secs.
[08/11 01:18:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:18:33]  --------------------------------------------------------------------------------
[08/11 01:18:33]  Iteration: 591 (271 solution, 319 counterexamples)
[08/11 01:19:25]  Generator returned sat in 40.814338 secs.
[08/11 01:19:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:19:29]  Verifer returned unsat in 3.215318 secs.
[08/11 01:19:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:19:29]  --------------------------------------------------------------------------------
[08/11 01:19:29]  Iteration: 592 (272 solution, 319 counterexamples)
[08/11 01:20:19]  Generator returned sat in 38.894519 secs.
[08/11 01:20:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:20:21]  Verifer returned unsat in 1.055153 secs.
[08/11 01:20:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:20:21]  --------------------------------------------------------------------------------
[08/11 01:20:21]  Iteration: 593 (273 solution, 319 counterexamples)
[08/11 01:21:07]  Generator returned sat in 34.959128 secs.
[08/11 01:21:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:21:10]  Verifer returned unsat in 2.094072 secs.
[08/11 01:21:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:21:10]  --------------------------------------------------------------------------------
[08/11 01:21:10]  Iteration: 594 (274 solution, 319 counterexamples)
[08/11 01:24:50]  Generator returned sat in 209.049586 secs.
[08/11 01:24:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:24:52]  Verifer returned unsat in 0.582271 secs.
[08/11 01:24:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:24:52]  --------------------------------------------------------------------------------
[08/11 01:24:52]  Iteration: 595 (275 solution, 319 counterexamples)
[08/11 01:25:33]  Generator returned sat in 30.703289 secs.
[08/11 01:25:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:25:37]  Verifer returned unsat in 2.823637 secs.
[08/11 01:25:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:25:37]  --------------------------------------------------------------------------------
[08/11 01:25:37]  Iteration: 596 (276 solution, 319 counterexamples)
[08/11 01:26:20]  Generator returned sat in 31.714316 secs.
[08/11 01:26:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:26:22]  Verifer returned unsat in 0.743422 secs.
[08/11 01:26:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:26:22]  --------------------------------------------------------------------------------
[08/11 01:26:22]  Iteration: 597 (277 solution, 319 counterexamples)
[08/11 01:27:06]  Generator returned sat in 33.095244 secs.
[08/11 01:27:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:27:09]  Verifer returned unsat in 1.870248 secs.
[08/11 01:27:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:27:09]  --------------------------------------------------------------------------------
[08/11 01:27:09]  Iteration: 598 (278 solution, 319 counterexamples)
[08/11 01:28:04]  Generator returned sat in 44.746210 secs.
[08/11 01:28:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:28:10]  Verifer returned unsat in 4.286085 secs.
[08/11 01:28:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:28:10]  --------------------------------------------------------------------------------
[08/11 01:28:10]  Iteration: 599 (279 solution, 319 counterexamples)
[08/11 01:28:55]  Generator returned sat in 34.231584 secs.
[08/11 01:28:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:29:01]  Verifer returned unsat in 5.228239 secs.
[08/11 01:29:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:29:02]  --------------------------------------------------------------------------------
[08/11 01:29:02]  Iteration: 600 (280 solution, 319 counterexamples)
[08/11 01:29:44]  Generator returned sat in 32.137758 secs.
[08/11 01:29:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:29:48]  Verifer returned unsat in 2.710433 secs.
[08/11 01:29:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:29:48]  --------------------------------------------------------------------------------
[08/11 01:29:48]  Iteration: 601 (281 solution, 319 counterexamples)
[08/11 01:30:30]  Generator returned sat in 30.760418 secs.
[08/11 01:30:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:30:32]  Verifer returned unsat in 1.199650 secs.
[08/11 01:30:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:30:32]  --------------------------------------------------------------------------------
[08/11 01:30:32]  Iteration: 602 (282 solution, 319 counterexamples)
[08/11 01:31:17]  Generator returned sat in 33.189497 secs.
[08/11 01:31:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:31:20]  Verifer returned unsat in 1.728178 secs.
[08/11 01:31:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:31:20]  --------------------------------------------------------------------------------
[08/11 01:31:20]  Iteration: 603 (283 solution, 319 counterexamples)
[08/11 01:32:19]  Generator returned sat in 48.058904 secs.
[08/11 01:32:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:32:25]  Verifer returned unsat in 4.181972 secs.
[08/11 01:32:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:32:25]  --------------------------------------------------------------------------------
[08/11 01:32:25]  Iteration: 604 (284 solution, 319 counterexamples)
[08/11 01:33:09]  Generator returned sat in 33.417971 secs.
[08/11 01:33:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:33:16]  Verifer returned unsat in 5.623055 secs.
[08/11 01:33:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:33:16]  --------------------------------------------------------------------------------
[08/11 01:33:16]  Iteration: 605 (285 solution, 319 counterexamples)
[08/11 01:33:57]  Generator returned sat in 30.676845 secs.
[08/11 01:33:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:34:03]  Verifer returned unsat in 4.449399 secs.
[08/11 01:34:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:34:03]  --------------------------------------------------------------------------------
[08/11 01:34:03]  Iteration: 606 (286 solution, 319 counterexamples)
[08/11 01:34:51]  Generator returned sat in 36.888548 secs.
[08/11 01:34:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:34:54]  Verifer returned unsat in 1.519693 secs.
[08/11 01:34:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:34:54]  --------------------------------------------------------------------------------
[08/11 01:34:54]  Iteration: 607 (287 solution, 319 counterexamples)
[08/11 01:35:38]  Generator returned sat in 33.268869 secs.
[08/11 01:35:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:35:43]  Verifer returned unsat in 4.216258 secs.
[08/11 01:35:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:35:43]  --------------------------------------------------------------------------------
[08/11 01:35:43]  Iteration: 608 (288 solution, 319 counterexamples)
[08/11 01:36:25]  Generator returned sat in 31.197255 secs.
[08/11 01:36:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:36:28]  Verifer returned unsat in 1.638353 secs.
[08/11 01:36:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:36:28]  --------------------------------------------------------------------------------
[08/11 01:36:28]  Iteration: 609 (289 solution, 319 counterexamples)
[08/11 01:37:21]  Generator returned sat in 41.470436 secs.
[08/11 01:37:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:37:23]  Verifer returned unsat in 1.486303 secs.
[08/11 01:37:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:37:23]  --------------------------------------------------------------------------------
[08/11 01:37:23]  Iteration: 610 (290 solution, 319 counterexamples)
[08/11 01:38:06]  Generator returned sat in 32.118945 secs.
[08/11 01:38:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:38:08]  Verifer returned unsat in 0.691318 secs.
[08/11 01:38:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:38:08]  --------------------------------------------------------------------------------
[08/11 01:38:08]  Iteration: 611 (291 solution, 319 counterexamples)
[08/11 01:38:53]  Generator returned sat in 34.153055 secs.
[08/11 01:38:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:38:57]  Verifer returned unsat in 2.070643 secs.
[08/11 01:38:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:38:57]  --------------------------------------------------------------------------------
[08/11 01:38:57]  Iteration: 612 (292 solution, 319 counterexamples)
[08/11 01:39:42]  Generator returned sat in 34.869805 secs.
[08/11 01:39:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:39:45]  Verifer returned unsat in 1.611502 secs.
[08/11 01:39:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:39:45]  --------------------------------------------------------------------------------
[08/11 01:39:45]  Iteration: 613 (293 solution, 319 counterexamples)
[08/11 01:40:26]  Generator returned sat in 29.954283 secs.
[08/11 01:40:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:40:29]  Verifer returned unsat in 2.035168 secs.
[08/11 01:40:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:40:29]  --------------------------------------------------------------------------------
[08/11 01:40:29]  Iteration: 614 (294 solution, 319 counterexamples)
[08/11 01:41:10]  Generator returned sat in 29.921778 secs.
[08/11 01:41:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:41:15]  Verifer returned unsat in 3.219842 secs.
[08/11 01:41:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:41:15]  --------------------------------------------------------------------------------
[08/11 01:41:15]  Iteration: 615 (295 solution, 319 counterexamples)
[08/11 01:41:56]  Generator returned sat in 30.811621 secs.
[08/11 01:41:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:41:59]  Verifer returned unsat in 1.447598 secs.
[08/11 01:41:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:41:59]  --------------------------------------------------------------------------------
[08/11 01:41:59]  Iteration: 616 (296 solution, 319 counterexamples)
[08/11 01:42:41]  Generator returned sat in 31.177357 secs.
[08/11 01:42:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:42:44]  Verifer returned unsat in 0.947754 secs.
[08/11 01:42:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:42:44]  --------------------------------------------------------------------------------
[08/11 01:42:44]  Iteration: 617 (297 solution, 319 counterexamples)
[08/11 01:43:29]  Generator returned sat in 34.585579 secs.
[08/11 01:43:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:43:31]  Verifer returned unsat in 0.621857 secs.
[08/11 01:43:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:43:31]  --------------------------------------------------------------------------------
[08/11 01:43:31]  Iteration: 618 (298 solution, 319 counterexamples)
[08/11 01:44:21]  Generator returned sat in 39.788926 secs.
[08/11 01:44:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:44:24]  Verifer returned unsat in 1.786928 secs.
[08/11 01:44:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:44:24]  --------------------------------------------------------------------------------
[08/11 01:44:24]  Iteration: 619 (299 solution, 319 counterexamples)
[08/11 01:45:05]  Generator returned sat in 29.561858 secs.
[08/11 01:45:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:45:08]  Verifer returned unsat in 2.249923 secs.
[08/11 01:45:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:45:08]  --------------------------------------------------------------------------------
[08/11 01:45:08]  Iteration: 620 (300 solution, 319 counterexamples)
[08/11 01:45:49]  Generator returned sat in 29.499895 secs.
[08/11 01:45:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:45:53]  Verifer returned unsat in 2.801696 secs.
[08/11 01:45:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:45:53]  --------------------------------------------------------------------------------
[08/11 01:45:53]  Iteration: 621 (301 solution, 319 counterexamples)
[08/11 01:46:33]  Generator returned sat in 29.668984 secs.
[08/11 01:46:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:46:36]  Verifer returned unsat in 1.515009 secs.
[08/11 01:46:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:46:36]  --------------------------------------------------------------------------------
[08/11 01:46:36]  Iteration: 622 (302 solution, 319 counterexamples)
[08/11 01:47:18]  Generator returned sat in 31.353832 secs.
[08/11 01:47:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:47:21]  Verifer returned unsat in 1.775680 secs.
[08/11 01:47:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:47:22]  --------------------------------------------------------------------------------
[08/11 01:47:22]  Iteration: 623 (303 solution, 319 counterexamples)
[08/11 01:48:08]  Generator returned sat in 35.698683 secs.
[08/11 01:48:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:48:11]  Verifer returned unsat in 1.415719 secs.
[08/11 01:48:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:48:11]  --------------------------------------------------------------------------------
[08/11 01:48:11]  Iteration: 624 (304 solution, 319 counterexamples)
[08/11 01:48:52]  Generator returned sat in 30.551517 secs.
[08/11 01:48:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:48:57]  Verifer returned unsat in 3.265622 secs.
[08/11 01:48:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:48:57]  --------------------------------------------------------------------------------
[08/11 01:48:57]  Iteration: 625 (305 solution, 319 counterexamples)
[08/11 01:49:47]  Generator returned sat in 39.430982 secs.
[08/11 01:49:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:49:50]  Verifer returned unsat in 1.547914 secs.
[08/11 01:49:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:49:50]  --------------------------------------------------------------------------------
[08/11 01:49:50]  Iteration: 626 (306 solution, 319 counterexamples)
[08/11 01:50:31]  Generator returned sat in 30.628836 secs.
[08/11 01:50:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:50:34]  Verifer returned unsat in 1.928666 secs.
[08/11 01:50:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:50:34]  --------------------------------------------------------------------------------
[08/11 01:50:34]  Iteration: 627 (307 solution, 319 counterexamples)
[08/11 01:51:18]  Generator returned sat in 32.753962 secs.
[08/11 01:51:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:51:21]  Verifer returned unsat in 2.074235 secs.
[08/11 01:51:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:51:21]  --------------------------------------------------------------------------------
[08/11 01:51:21]  Iteration: 628 (308 solution, 319 counterexamples)
[08/11 01:52:03]  Generator returned sat in 30.747679 secs.
[08/11 01:52:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:52:06]  Verifer returned unsat in 2.030960 secs.
[08/11 01:52:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:52:06]  --------------------------------------------------------------------------------
[08/11 01:52:06]  Iteration: 629 (309 solution, 319 counterexamples)
[08/11 01:52:51]  Generator returned sat in 33.372680 secs.
[08/11 01:52:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:52:53]  Verifer returned unsat in 1.297073 secs.
[08/11 01:52:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:52:53]  --------------------------------------------------------------------------------
[08/11 01:52:53]  Iteration: 630 (310 solution, 319 counterexamples)
[08/11 01:53:37]  Generator returned sat in 33.055147 secs.
[08/11 01:53:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:53:41]  Verifer returned unsat in 1.831304 secs.
[08/11 01:53:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:53:41]  --------------------------------------------------------------------------------
[08/11 01:53:41]  Iteration: 631 (311 solution, 319 counterexamples)
[08/11 01:54:25]  Generator returned sat in 33.240713 secs.
[08/11 01:54:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:54:27]  Verifer returned unsat in 1.134539 secs.
[08/11 01:54:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:54:27]  --------------------------------------------------------------------------------
[08/11 01:54:27]  Iteration: 632 (312 solution, 319 counterexamples)
[08/11 01:55:13]  Generator returned sat in 35.349024 secs.
[08/11 01:55:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:55:17]  Verifer returned unsat in 2.263188 secs.
[08/11 01:55:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:55:17]  --------------------------------------------------------------------------------
[08/11 01:55:17]  Iteration: 633 (313 solution, 319 counterexamples)
[08/11 01:58:22]  Generator returned sat in 174.264637 secs.
[08/11 01:58:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:58:25]  Verifer returned unsat in 2.003117 secs.
[08/11 01:58:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:58:25]  --------------------------------------------------------------------------------
[08/11 01:58:25]  Iteration: 634 (314 solution, 319 counterexamples)
[08/11 01:59:09]  Generator returned sat in 33.422498 secs.
[08/11 01:59:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:59:12]  Verifer returned unsat in 1.581096 secs.
[08/11 01:59:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:59:12]  --------------------------------------------------------------------------------
[08/11 01:59:12]  Iteration: 635 (315 solution, 319 counterexamples)
[08/11 01:59:55]  Generator returned sat in 31.468534 secs.
[08/11 01:59:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:59:57]  Verifer returned unsat in 1.574795 secs.
[08/11 01:59:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 01:59:58]  --------------------------------------------------------------------------------
[08/11 01:59:58]  Iteration: 636 (316 solution, 319 counterexamples)
[08/11 02:00:45]  Generator returned sat in 36.611695 secs.
[08/11 02:00:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:00:48]  Verifer returned unsat in 1.291150 secs.
[08/11 02:00:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:00:48]  --------------------------------------------------------------------------------
[08/11 02:00:48]  Iteration: 637 (317 solution, 319 counterexamples)
[08/11 02:01:35]  Generator returned sat in 36.040892 secs.
[08/11 02:01:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:01:36]  Verifer returned unsat in 0.678506 secs.
[08/11 02:01:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:01:37]  --------------------------------------------------------------------------------
[08/11 02:01:37]  Iteration: 638 (318 solution, 319 counterexamples)
[08/11 02:02:23]  Generator returned sat in 35.681048 secs.
[08/11 02:02:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:02:26]  Verifer returned unsat in 1.618557 secs.
[08/11 02:02:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:02:26]  --------------------------------------------------------------------------------
[08/11 02:02:26]  Iteration: 639 (319 solution, 319 counterexamples)
[08/11 02:03:12]  Generator returned sat in 35.212646 secs.
[08/11 02:03:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:03:15]  Verifer returned unsat in 2.123186 secs.
[08/11 02:03:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:03:16]  --------------------------------------------------------------------------------
[08/11 02:03:16]  Iteration: 640 (320 solution, 319 counterexamples)
[08/11 02:03:58]  Generator returned sat in 31.157202 secs.
[08/11 02:03:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:04:00]  Verifer returned unsat in 0.819136 secs.
[08/11 02:04:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:04:00]  --------------------------------------------------------------------------------
[08/11 02:04:00]  Iteration: 641 (321 solution, 319 counterexamples)
[08/11 02:04:57]  Generator returned sat in 46.649348 secs.
[08/11 02:04:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:05:00]  Verifer returned unsat in 1.839235 secs.
[08/11 02:05:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:05:00]  --------------------------------------------------------------------------------
[08/11 02:05:00]  Iteration: 642 (322 solution, 319 counterexamples)
[08/11 02:05:42]  Generator returned sat in 30.514854 secs.
[08/11 02:05:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:05:46]  Verifer returned unsat in 2.560871 secs.
[08/11 02:05:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:05:46]  --------------------------------------------------------------------------------
[08/11 02:05:46]  Iteration: 643 (323 solution, 319 counterexamples)
[08/11 02:06:28]  Generator returned sat in 31.610569 secs.
[08/11 02:06:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:06:31]  Verifer returned unsat in 1.644633 secs.
[08/11 02:06:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:06:31]  --------------------------------------------------------------------------------
[08/11 02:06:31]  Iteration: 644 (324 solution, 319 counterexamples)
[08/11 02:07:13]  Generator returned sat in 31.188684 secs.
[08/11 02:07:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:07:16]  Verifer returned unsat in 1.025117 secs.
[08/11 02:07:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:07:16]  --------------------------------------------------------------------------------
[08/11 02:07:16]  Iteration: 645 (325 solution, 319 counterexamples)
[08/11 02:08:39]  Generator returned sat in 71.964492 secs.
[08/11 02:08:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:08:42]  Verifer returned unsat in 1.753474 secs.
[08/11 02:08:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:08:42]  --------------------------------------------------------------------------------
[08/11 02:08:42]  Iteration: 646 (326 solution, 319 counterexamples)
[08/11 02:10:05]  Generator returned sat in 72.127328 secs.
[08/11 02:10:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:10:09]  Verifer returned unsat in 2.766455 secs.
[08/11 02:10:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:10:09]  --------------------------------------------------------------------------------
[08/11 02:10:09]  Iteration: 647 (327 solution, 319 counterexamples)
[08/11 02:10:51]  Generator returned sat in 31.158757 secs.
[08/11 02:10:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:10:54]  Verifer returned unsat in 1.784932 secs.
[08/11 02:10:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:10:54]  --------------------------------------------------------------------------------
[08/11 02:10:54]  Iteration: 648 (328 solution, 319 counterexamples)
[08/11 02:11:50]  Generator returned sat in 45.412383 secs.
[08/11 02:11:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:11:52]  Verifer returned unsat in 0.675689 secs.
[08/11 02:11:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:11:52]  --------------------------------------------------------------------------------
[08/11 02:11:52]  Iteration: 649 (329 solution, 319 counterexamples)
[08/11 02:12:40]  Generator returned sat in 36.753294 secs.
[08/11 02:12:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:12:42]  Verifer returned unsat in 0.822810 secs.
[08/11 02:12:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:12:42]  --------------------------------------------------------------------------------
[08/11 02:12:42]  Iteration: 650 (330 solution, 319 counterexamples)
[08/11 02:13:24]  Generator returned sat in 31.610327 secs.
[08/11 02:13:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:13:28]  Verifer returned unsat in 2.458858 secs.
[08/11 02:13:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:13:28]  --------------------------------------------------------------------------------
[08/11 02:13:28]  Iteration: 651 (331 solution, 319 counterexamples)
[08/11 02:14:10]  Generator returned sat in 30.871772 secs.
[08/11 02:14:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:14:13]  Verifer returned unsat in 1.538755 secs.
[08/11 02:14:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:14:13]  --------------------------------------------------------------------------------
[08/11 02:14:13]  Iteration: 652 (332 solution, 319 counterexamples)
[08/11 02:14:55]  Generator returned sat in 31.181684 secs.
[08/11 02:14:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:14:58]  Verifer returned unsat in 1.653526 secs.
[08/11 02:14:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:14:58]  --------------------------------------------------------------------------------
[08/11 02:14:58]  Iteration: 653 (333 solution, 319 counterexamples)
[08/11 02:15:40]  Generator returned sat in 30.879991 secs.
[08/11 02:15:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:15:42]  Verifer returned unsat in 0.859097 secs.
[08/11 02:15:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:15:42]  --------------------------------------------------------------------------------
[08/11 02:15:42]  Iteration: 654 (334 solution, 319 counterexamples)
[08/11 02:16:24]  Generator returned sat in 30.961388 secs.
[08/11 02:16:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:16:26]  Verifer returned unsat in 0.819074 secs.
[08/11 02:16:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:16:26]  --------------------------------------------------------------------------------
[08/11 02:16:26]  Iteration: 655 (335 solution, 319 counterexamples)
[08/11 02:17:08]  Generator returned sat in 30.995084 secs.
[08/11 02:17:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:17:10]  Verifer returned unsat in 0.674225 secs.
[08/11 02:17:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:17:10]  --------------------------------------------------------------------------------
[08/11 02:17:10]  Iteration: 656 (336 solution, 319 counterexamples)
[08/11 02:19:57]  Generator returned sat in 156.292904 secs.
[08/11 02:19:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:19:59]  Verifer returned unsat in 0.847572 secs.
[08/11 02:19:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:19:59]  --------------------------------------------------------------------------------
[08/11 02:19:59]  Iteration: 657 (337 solution, 319 counterexamples)
[08/11 02:20:42]  Generator returned sat in 31.614853 secs.
[08/11 02:20:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:20:44]  Verifer returned unsat in 0.574501 secs.
[08/11 02:20:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:20:44]  --------------------------------------------------------------------------------
[08/11 02:20:44]  Iteration: 658 (338 solution, 319 counterexamples)
[08/11 02:21:34]  Generator returned sat in 39.392528 secs.
[08/11 02:21:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:21:36]  Verifer returned unsat in 0.681376 secs.
[08/11 02:21:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:21:36]  --------------------------------------------------------------------------------
[08/11 02:21:36]  Iteration: 659 (339 solution, 319 counterexamples)
[08/11 02:22:18]  Generator returned sat in 31.246887 secs.
[08/11 02:22:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:22:20]  Verifer returned unsat in 0.831586 secs.
[08/11 02:22:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:22:20]  --------------------------------------------------------------------------------
[08/11 02:22:20]  Iteration: 660 (340 solution, 319 counterexamples)
[08/11 02:23:01]  Generator returned sat in 30.693523 secs.
[08/11 02:23:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:23:03]  Verifer returned unsat in 0.586997 secs.
[08/11 02:23:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:23:03]  --------------------------------------------------------------------------------
[08/11 02:23:03]  Iteration: 661 (341 solution, 319 counterexamples)
[08/11 02:23:46]  Generator returned sat in 31.823371 secs.
[08/11 02:23:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:23:48]  Verifer returned unsat in 0.864536 secs.
[08/11 02:23:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:23:48]  --------------------------------------------------------------------------------
[08/11 02:23:48]  Iteration: 662 (342 solution, 319 counterexamples)
[08/11 02:24:32]  Generator returned sat in 33.075990 secs.
[08/11 02:24:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:24:34]  Verifer returned unsat in 0.774726 secs.
[08/11 02:24:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:24:34]  --------------------------------------------------------------------------------
[08/11 02:24:34]  Iteration: 663 (343 solution, 319 counterexamples)
[08/11 02:25:23]  Generator returned sat in 38.194739 secs.
[08/11 02:25:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:25:25]  Verifer returned unsat in 0.631449 secs.
[08/11 02:25:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:25:25]  --------------------------------------------------------------------------------
[08/11 02:25:25]  Iteration: 664 (344 solution, 319 counterexamples)
[08/11 02:26:06]  Generator returned sat in 30.400494 secs.
[08/11 02:26:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:26:08]  Verifer returned unsat in 0.816398 secs.
[08/11 02:26:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:26:08]  --------------------------------------------------------------------------------
[08/11 02:26:08]  Iteration: 665 (345 solution, 319 counterexamples)
[08/11 02:26:51]  Generator returned sat in 31.480698 secs.
[08/11 02:26:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:26:53]  Verifer returned unsat in 0.560320 secs.
[08/11 02:26:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:26:53]  --------------------------------------------------------------------------------
[08/11 02:26:53]  Iteration: 666 (346 solution, 319 counterexamples)
[08/11 02:27:35]  Generator returned sat in 32.155705 secs.
[08/11 02:27:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:27:38]  Verifer returned unsat in 0.940251 secs.
[08/11 02:27:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:27:38]  --------------------------------------------------------------------------------
[08/11 02:27:38]  Iteration: 667 (347 solution, 319 counterexamples)
[08/11 02:28:21]  Generator returned sat in 32.385612 secs.
[08/11 02:28:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:28:23]  Verifer returned unsat in 0.761863 secs.
[08/11 02:28:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:28:23]  --------------------------------------------------------------------------------
[08/11 02:28:23]  Iteration: 668 (348 solution, 319 counterexamples)
[08/11 02:29:06]  Generator returned sat in 31.257622 secs.
[08/11 02:29:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:29:07]  Verifer returned unsat in 0.656273 secs.
[08/11 02:29:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:29:07]  --------------------------------------------------------------------------------
[08/11 02:29:07]  Iteration: 669 (349 solution, 319 counterexamples)
[08/11 02:29:50]  Generator returned sat in 31.667578 secs.
[08/11 02:29:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:29:52]  Verifer returned unsat in 0.853090 secs.
[08/11 02:29:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:29:52]  --------------------------------------------------------------------------------
[08/11 02:29:52]  Iteration: 670 (350 solution, 319 counterexamples)
[08/11 02:30:35]  Generator returned sat in 31.515210 secs.
[08/11 02:30:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:30:37]  Verifer returned unsat in 0.958375 secs.
[08/11 02:30:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:30:37]  --------------------------------------------------------------------------------
[08/11 02:30:37]  Iteration: 671 (351 solution, 319 counterexamples)
[08/11 02:31:19]  Generator returned sat in 30.651482 secs.
[08/11 02:31:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:31:21]  Verifer returned unsat in 0.646277 secs.
[08/11 02:31:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:31:21]  --------------------------------------------------------------------------------
[08/11 02:31:21]  Iteration: 672 (352 solution, 319 counterexamples)
[08/11 02:32:02]  Generator returned sat in 30.556627 secs.
[08/11 02:32:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:32:04]  Verifer returned unsat in 0.675468 secs.
[08/11 02:32:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:32:04]  --------------------------------------------------------------------------------
[08/11 02:32:04]  Iteration: 673 (353 solution, 319 counterexamples)
[08/11 02:32:47]  Generator returned sat in 31.567808 secs.
[08/11 02:32:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:32:49]  Verifer returned unsat in 0.744536 secs.
[08/11 02:32:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:32:49]  --------------------------------------------------------------------------------
[08/11 02:32:49]  Iteration: 674 (354 solution, 319 counterexamples)
[08/11 02:33:31]  Generator returned sat in 30.936716 secs.
[08/11 02:33:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:33:33]  Verifer returned unsat in 0.788911 secs.
[08/11 02:33:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:33:33]  --------------------------------------------------------------------------------
[08/11 02:33:33]  Iteration: 675 (355 solution, 319 counterexamples)
[08/11 02:34:15]  Generator returned sat in 31.438399 secs.
[08/11 02:34:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:34:17]  Verifer returned unsat in 0.671756 secs.
[08/11 02:34:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:34:17]  --------------------------------------------------------------------------------
[08/11 02:34:17]  Iteration: 676 (356 solution, 319 counterexamples)
[08/11 02:34:59]  Generator returned sat in 30.840468 secs.
[08/11 02:35:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:35:01]  Verifer returned unsat in 0.475997 secs.
[08/11 02:35:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:35:01]  --------------------------------------------------------------------------------
[08/11 02:35:01]  Iteration: 677 (357 solution, 319 counterexamples)
[08/11 02:35:43]  Generator returned sat in 30.785086 secs.
[08/11 02:35:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:35:45]  Verifer returned unsat in 0.712491 secs.
[08/11 02:35:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:35:45]  --------------------------------------------------------------------------------
[08/11 02:35:45]  Iteration: 678 (358 solution, 319 counterexamples)
[08/11 02:36:27]  Generator returned sat in 30.812567 secs.
[08/11 02:36:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:36:29]  Verifer returned unsat in 0.984743 secs.
[08/11 02:36:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:36:29]  --------------------------------------------------------------------------------
[08/11 02:36:29]  Iteration: 679 (359 solution, 319 counterexamples)
[08/11 02:37:11]  Generator returned sat in 31.420484 secs.
[08/11 02:37:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:37:13]  Verifer returned unsat in 0.603686 secs.
[08/11 02:37:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:37:13]  --------------------------------------------------------------------------------
[08/11 02:37:13]  Iteration: 680 (360 solution, 319 counterexamples)
[08/11 02:37:55]  Generator returned sat in 31.075209 secs.
[08/11 02:37:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:37:57]  Verifer returned unsat in 0.621779 secs.
[08/11 02:37:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:37:57]  --------------------------------------------------------------------------------
[08/11 02:37:57]  Iteration: 681 (361 solution, 319 counterexamples)
[08/11 02:38:40]  Generator returned sat in 32.443681 secs.
[08/11 02:38:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:38:42]  Verifer returned unsat in 0.728212 secs.
[08/11 02:38:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:38:42]  --------------------------------------------------------------------------------
[08/11 02:38:42]  Iteration: 682 (362 solution, 319 counterexamples)
[08/11 02:39:24]  Generator returned sat in 30.945810 secs.
[08/11 02:39:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:39:26]  Verifer returned unsat in 0.723494 secs.
[08/11 02:39:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:39:26]  --------------------------------------------------------------------------------
[08/11 02:39:26]  Iteration: 683 (363 solution, 319 counterexamples)
[08/11 02:40:08]  Generator returned sat in 30.985016 secs.
[08/11 02:40:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:40:10]  Verifer returned unsat in 0.698627 secs.
[08/11 02:40:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:40:10]  --------------------------------------------------------------------------------
[08/11 02:40:10]  Iteration: 684 (364 solution, 319 counterexamples)
[08/11 02:40:52]  Generator returned sat in 30.788682 secs.
[08/11 02:40:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:40:54]  Verifer returned unsat in 0.734332 secs.
[08/11 02:40:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:40:54]  --------------------------------------------------------------------------------
[08/11 02:40:54]  Iteration: 685 (365 solution, 319 counterexamples)
[08/11 02:41:37]  Generator returned sat in 31.230998 secs.
[08/11 02:41:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:41:41]  Verifer returned unsat in 2.748647 secs.
[08/11 02:41:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:41:41]  --------------------------------------------------------------------------------
[08/11 02:41:41]  Iteration: 686 (366 solution, 319 counterexamples)
[08/11 02:42:25]  Generator returned sat in 33.390677 secs.
[08/11 02:42:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:42:28]  Verifer returned unsat in 2.085012 secs.
[08/11 02:42:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:42:28]  --------------------------------------------------------------------------------
[08/11 02:42:28]  Iteration: 687 (367 solution, 319 counterexamples)
[08/11 02:43:10]  Generator returned sat in 30.727327 secs.
[08/11 02:43:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:43:13]  Verifer returned unsat in 1.832065 secs.
[08/11 02:43:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:43:13]  --------------------------------------------------------------------------------
[08/11 02:43:13]  Iteration: 688 (368 solution, 319 counterexamples)
[08/11 02:43:54]  Generator returned sat in 30.652622 secs.
[08/11 02:43:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:43:58]  Verifer returned unsat in 2.161775 secs.
[08/11 02:43:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:43:58]  --------------------------------------------------------------------------------
[08/11 02:43:58]  Iteration: 689 (369 solution, 319 counterexamples)
[08/11 02:44:40]  Generator returned sat in 30.824468 secs.
[08/11 02:44:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:44:43]  Verifer returned unsat in 1.955534 secs.
[08/11 02:44:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:44:43]  --------------------------------------------------------------------------------
[08/11 02:44:43]  Iteration: 690 (370 solution, 319 counterexamples)
[08/11 02:45:24]  Generator returned sat in 30.125340 secs.
[08/11 02:45:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:45:27]  Verifer returned unsat in 1.980077 secs.
[08/11 02:45:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:45:27]  --------------------------------------------------------------------------------
[08/11 02:45:27]  Iteration: 691 (371 solution, 319 counterexamples)
[08/11 02:47:54]  Generator returned sat in 136.042863 secs.
[08/11 02:47:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:47:58]  Verifer returned unsat in 2.211018 secs.
[08/11 02:47:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:47:58]  --------------------------------------------------------------------------------
[08/11 02:47:58]  Iteration: 692 (372 solution, 319 counterexamples)
[08/11 02:49:22]  Generator returned sat in 73.132182 secs.
[08/11 02:49:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:49:25]  Improved gap from 1/84 to 100
[08/11 02:49:26]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 02:49:26]  Verifer returned sat in 2.727543 secs.
[08/11 02:49:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22076.300049  -22176.350098  39834.42041 -22076.300049    0.049805 -22176.350098    0.050049  100.000000        0.000000     1.0    -22176.350098            -1             -1     -1
1  -22076.300049  -22076.350098  39834.42041 -22076.300049    0.050049 -22076.350098    0.050049    0.000000     -100.000000     2.0    -22176.350098         False          False   True
2  -21976.250000  -21976.349854  39834.42041 -21976.250000  100.050049 -21976.349854    0.050049    0.049805      -99.949951     1.0    -22176.350098          True           True  False
3  -21574.299805  -21876.349854  39834.42041 -21574.299805  402.000000 -21876.349854  200.100098  101.949951        1.950195     1.0    -22176.350098         False          False  False
4  -21474.249756  -21676.350098  39834.42041 -21474.249756  202.000000 -21676.350098  200.150146    1.950195        1.950195     1.0    -22176.350098         False          False   True
5  -21374.199951  -21576.350098  39834.42041 -21374.199951  102.000000 -21576.350098  200.199951    1.950195        1.950195     1.0    -22176.350098         False          False   True
6  -21324.150146  -21526.849854  39834.42041 -21324.150146   52.000000 -21526.849854  200.199951    2.499756      -48.000000     1.0    -22176.350098         False          False   True
7  -20924.649902  -21376.350098  39834.42041 -20924.649902  402.000000 -21376.350098  449.750000    1.950195        1.950195     1.0    -22176.350098         False          False   True
8  -20724.600098  -21376.350098  39834.42041 -20724.600098  202.000000 -21376.350098  549.799805  101.950195        1.950195     1.0    -22176.350098         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1997/1024.[0m
[08/11 02:49:26]  --------------------------------------------------------------------------------
[08/11 02:49:26]  Iteration: 693 (372 solution, 320 counterexamples)
[08/11 02:53:46]  Generator returned sat in 249.300318 secs.
[08/11 02:53:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:53:49]  Verifer returned unsat in 0.826074 secs.
[08/11 02:53:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:53:49]  --------------------------------------------------------------------------------
[08/11 02:53:49]  Iteration: 694 (373 solution, 320 counterexamples)
[08/11 02:54:41]  Generator returned sat in 41.429269 secs.
[08/11 02:54:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:54:43]  Verifer returned unsat in 1.275657 secs.
[08/11 02:54:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:54:43]  --------------------------------------------------------------------------------
[08/11 02:54:43]  Iteration: 695 (374 solution, 320 counterexamples)
[08/11 02:55:31]  Generator returned sat in 36.779131 secs.
[08/11 02:55:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:55:33]  Verifer returned unsat in 0.943335 secs.
[08/11 02:55:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:55:34]  --------------------------------------------------------------------------------
[08/11 02:55:34]  Iteration: 696 (375 solution, 320 counterexamples)
[08/11 02:57:05]  Generator returned sat in 80.528801 secs.
[08/11 02:57:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:57:07]  Verifer returned unsat in 0.828776 secs.
[08/11 02:57:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:57:07]  --------------------------------------------------------------------------------
[08/11 02:57:07]  Iteration: 697 (376 solution, 320 counterexamples)
[08/11 02:57:50]  Generator returned sat in 32.266618 secs.
[08/11 02:57:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 02:57:56]  Improved gap from 0 to 1.5625
[08/11 02:57:57]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/11 02:57:57]  Verifer returned sat in 5.393322 secs.
[08/11 02:57:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -21474.050781  -21585.990234  39637.872314 -21474.050781    0.099854 -21585.990234   0.000000  111.939453      100.100342     1.0    -21585.990234            -1             -1   False
1  -21474.050781  -21574.151123  39637.872314 -21474.050781    0.100098 -21574.151123   0.000000  100.100342        0.100342     2.0    -21585.990234         False          False   False
2  -21474.050781  -21474.151123  39736.309570 -21474.050781    2.089286 -21474.151123   0.000000    0.100342       -1.462402     3.0    -21585.990234          True           True   False
3  -21472.161865  -21472.261719  39834.420410 -21472.161865    1.989258 -21472.261719   0.000000    0.099854       -1.462646     1.0    -21472.161865          True           True   False
4  -21357.033203  -21424.237549  39834.420410 -21357.033203  115.228516 -21424.237549  13.466064   53.738281        0.199951     1.0    -21472.161865         False          False   False
5  -21354.657227  -21370.399170  39931.844482 -21354.657227   56.114258 -21370.399170  13.466064    2.275879        0.000000     1.0    -21472.161865         False          False    True
6  -21276.000000  -21368.023438  39953.187256 -21276.000000   80.933105 -21368.023438  13.466064   78.557373        0.000000     1.0    -21472.161865         False          False    True
7  -21260.971680  -21289.366211  40038.158936 -21260.971680   93.585693 -21289.366211  13.466064   14.928467        0.000000     1.0    -21472.161865         False          False    True
8  -21160.671631  -21274.337646  40038.158936 -21160.671631  115.228516 -21274.337646  13.566162  100.099854        0.199951     1.0    -21472.161865         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=819/4096.[0m
[08/11 02:57:57]  --------------------------------------------------------------------------------
[08/11 02:57:57]  Iteration: 698 (376 solution, 321 counterexamples)
[08/11 03:00:49]  Generator returned sat in 160.619336 secs.
[08/11 03:00:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:00:51]  Improved gap from 0 to 23.4375
[08/11 03:00:52]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/11 03:00:52]  Verifer returned sat in 1.458571 secs.
[08/11 03:00:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -21388.417480  -21638.317383  39736.309326 -21388.417480    0.100000 -21638.317383   0.000000  249.899902      224.649902     6.0    -21638.317383            -1             -1     -1
1  -21388.417480  -21613.067383  39736.309326 -21388.417480  249.800000 -21613.067383   0.000000  224.649902      124.649902     3.0    -21638.317383         False           True  False
2  -21363.367432  -21413.067627  39736.309326 -21363.367432  249.699951 -21413.067627   0.000000   49.700195       49.699951     3.0    -21363.367432         False          False  False
3  -21163.467529  -21353.717448  39736.309326 -21163.467529  249.600098 -21353.717448  24.849854  165.400065      124.750000     1.0    -21188.317383         False          False  False
4  -21163.467529  -21213.167480  39736.309326 -21163.467529  122.800049 -21213.167480  24.849854   24.850098       24.750000     2.0    -21188.317383         False          False   True
5  -21163.467529  -21213.067383  39811.559326 -21163.467529    1.500000 -21213.067383  24.849854   24.750000        0.000000     3.0    -21188.317383         False          False   True
6  -21163.467529  -21188.317383  39886.809570 -21163.467529    1.500000 -21188.317383  24.849854    0.000000      -24.749756     4.0    -21188.317383         False          False   True
7  -20913.867432  -21163.567383  39886.809570 -20913.867432  249.600098 -21163.567383  24.950195  224.749756      124.750000     1.0    -21188.317383         False           True  False
8  -20913.867432  -21063.567383  39886.809570 -20913.867432  122.800049 -21063.567383  24.950195  124.749756       24.750000     2.0    -21188.317383         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=499/4.[0m
[08/11 03:00:52]  --------------------------------------------------------------------------------
[08/11 03:00:52]  Iteration: 699 (376 solution, 322 counterexamples)
[08/11 03:04:33]  Generator returned sat in 209.927604 secs.
[08/11 03:04:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:04:36]  Improved gap from 1/10 to 35.9375
[08/11 03:04:36]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/11 03:04:36]  Verifer returned sat in 1.403862 secs.
[08/11 03:04:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -21199.505127  -21307.517334  39672.396973 -21199.505127   0.050049 -21307.517334        0.0  108.012207      100.100098     2.0    -21307.517334            -1             -1   False
1  -21199.505127  -21199.605225  39672.396973 -21199.505127   0.050049 -21199.605225        0.0    0.100098        0.100098     2.0    -21307.517334         False          False   False
2  -21163.517578  -21199.454834  39736.309082 -21163.517578  36.087646 -21199.454834        0.0   35.937256       -0.000244     1.0    -21307.517334         False          False   False
3  -21163.467529  -21163.517334  39800.371582 -21163.467529  35.987305 -21163.517334        0.0    0.049805      -35.887695     1.0    -21163.467529         False          False   False
4  -21090.517334  -21127.579834  39863.309082 -21090.517334  73.000000 -21127.579834        0.0   37.062500        0.000000     1.0    -21163.467529         False          False   False
5  -21090.517334  -21090.517334  39927.371582 -21090.517334  37.012695 -21090.517334        0.0    0.000000      -35.937500     2.0    -21163.467529         False          False   False
6  -21035.048584  -21050.505127  39987.359375 -21035.048584  55.468750 -21050.505127        0.0   15.456543      -20.480957     1.0    -21163.467529         False          False   False
7  -20992.999023  -21014.567627  40050.421875 -20992.999023  57.506104 -21014.567627        0.0   21.568604      -15.368896     1.0    -21163.467529         False          False   False
8  -20957.061523  -20977.629883  40050.421875 -20957.061523  57.506104 -20977.629883        0.0   20.568359      -79.431396     1.0    -21163.467529         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/2048.[0m
[08/11 03:04:36]  --------------------------------------------------------------------------------
[08/11 03:04:36]  Iteration: 700 (376 solution, 323 counterexamples)
[08/11 03:06:08]  Generator returned sat in 81.012535 secs.
[08/11 03:06:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:06:14]  Verifer returned unsat in 4.048420 secs.
[08/11 03:06:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:06:14]  --------------------------------------------------------------------------------
[08/11 03:06:14]  Iteration: 701 (377 solution, 323 counterexamples)
[08/11 03:06:55]  Generator returned sat in 30.937210 secs.
[08/11 03:06:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:06:59]  Verifer returned unsat in 2.038543 secs.
[08/11 03:06:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:06:59]  --------------------------------------------------------------------------------
[08/11 03:06:59]  Iteration: 702 (378 solution, 323 counterexamples)
[08/11 03:07:42]  Generator returned sat in 32.294878 secs.
[08/11 03:07:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:07:45]  Verifer returned unsat in 1.398194 secs.
[08/11 03:07:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:07:45]  --------------------------------------------------------------------------------
[08/11 03:07:45]  Iteration: 703 (379 solution, 323 counterexamples)
[08/11 03:08:29]  Generator returned sat in 32.874064 secs.
[08/11 03:08:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:08:31]  Verifer returned unsat in 1.156104 secs.
[08/11 03:08:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:08:31]  --------------------------------------------------------------------------------
[08/11 03:08:31]  Iteration: 704 (380 solution, 323 counterexamples)
[08/11 03:09:21]  Generator returned sat in 39.032073 secs.
[08/11 03:09:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:09:23]  Verifer returned unsat in 0.623386 secs.
[08/11 03:09:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:09:23]  --------------------------------------------------------------------------------
[08/11 03:09:23]  Iteration: 705 (381 solution, 323 counterexamples)
[08/11 03:10:05]  Generator returned sat in 31.927680 secs.
[08/11 03:10:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:10:08]  Verifer returned unsat in 1.484782 secs.
[08/11 03:10:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:10:08]  --------------------------------------------------------------------------------
[08/11 03:10:08]  Iteration: 706 (382 solution, 323 counterexamples)
[08/11 03:10:58]  Generator returned sat in 38.833324 secs.
[08/11 03:10:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:11:02]  Verifer returned unsat in 3.032385 secs.
[08/11 03:11:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:11:02]  --------------------------------------------------------------------------------
[08/11 03:11:02]  Iteration: 707 (383 solution, 323 counterexamples)
[08/11 03:11:48]  Generator returned sat in 34.865673 secs.
[08/11 03:11:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:11:52]  Verifer returned unsat in 2.642871 secs.
[08/11 03:11:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:11:52]  --------------------------------------------------------------------------------
[08/11 03:11:52]  Iteration: 708 (384 solution, 323 counterexamples)
[08/11 03:12:33]  Generator returned sat in 30.131544 secs.
[08/11 03:12:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:12:36]  Verifer returned unsat in 1.928992 secs.
[08/11 03:12:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:12:36]  --------------------------------------------------------------------------------
[08/11 03:12:36]  Iteration: 709 (385 solution, 323 counterexamples)
[08/11 03:13:18]  Generator returned sat in 30.464265 secs.
[08/11 03:13:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:13:23]  Verifer returned unsat in 3.487265 secs.
[08/11 03:13:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:13:23]  --------------------------------------------------------------------------------
[08/11 03:13:23]  Iteration: 710 (386 solution, 323 counterexamples)
[08/11 03:14:07]  Generator returned sat in 32.550418 secs.
[08/11 03:14:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:14:08]  Verifer returned unsat in 0.434453 secs.
[08/11 03:14:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:14:08]  --------------------------------------------------------------------------------
[08/11 03:14:08]  Iteration: 711 (387 solution, 323 counterexamples)
[08/11 03:14:51]  Generator returned sat in 31.446530 secs.
[08/11 03:14:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:14:54]  Verifer returned unsat in 1.596286 secs.
[08/11 03:14:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:14:54]  --------------------------------------------------------------------------------
[08/11 03:14:54]  Iteration: 712 (388 solution, 323 counterexamples)
[08/11 03:15:38]  Generator returned sat in 33.573915 secs.
[08/11 03:15:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:15:40]  Verifer returned unsat in 0.516335 secs.
[08/11 03:15:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:15:40]  --------------------------------------------------------------------------------
[08/11 03:15:40]  Iteration: 713 (389 solution, 323 counterexamples)
[08/11 03:16:22]  Generator returned sat in 31.584471 secs.
[08/11 03:16:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:16:24]  Verifer returned unsat in 0.464241 secs.
[08/11 03:16:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:16:24]  --------------------------------------------------------------------------------
[08/11 03:16:24]  Iteration: 714 (390 solution, 323 counterexamples)
[08/11 03:17:06]  Generator returned sat in 31.476716 secs.
[08/11 03:17:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:17:08]  Verifer returned unsat in 0.657191 secs.
[08/11 03:17:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:17:08]  --------------------------------------------------------------------------------
[08/11 03:17:08]  Iteration: 715 (391 solution, 323 counterexamples)
[08/11 03:17:51]  Generator returned sat in 32.196186 secs.
[08/11 03:17:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:17:53]  Verifer returned unsat in 0.630751 secs.
[08/11 03:17:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:17:53]  --------------------------------------------------------------------------------
[08/11 03:17:53]  Iteration: 716 (392 solution, 323 counterexamples)
[08/11 03:18:36]  Generator returned sat in 31.502738 secs.
[08/11 03:18:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:18:38]  Verifer returned unsat in 0.614756 secs.
[08/11 03:18:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:18:38]  --------------------------------------------------------------------------------
[08/11 03:18:38]  Iteration: 717 (393 solution, 323 counterexamples)
[08/11 03:19:23]  Generator returned sat in 33.650576 secs.
[08/11 03:19:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:19:25]  Verifer returned unsat in 0.686302 secs.
[08/11 03:19:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:19:25]  --------------------------------------------------------------------------------
[08/11 03:19:25]  Iteration: 718 (394 solution, 323 counterexamples)
[08/11 03:20:09]  Generator returned sat in 33.888371 secs.
[08/11 03:20:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:20:13]  Verifer returned unsat in 1.988558 secs.
[08/11 03:20:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:20:13]  --------------------------------------------------------------------------------
[08/11 03:20:13]  Iteration: 719 (395 solution, 323 counterexamples)
[08/11 03:20:54]  Generator returned sat in 30.411912 secs.
[08/11 03:20:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:20:57]  Verifer returned unsat in 2.248446 secs.
[08/11 03:20:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:20:58]  --------------------------------------------------------------------------------
[08/11 03:20:58]  Iteration: 720 (396 solution, 323 counterexamples)
[08/11 03:21:39]  Generator returned sat in 30.358691 secs.
[08/11 03:21:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:21:42]  Verifer returned unsat in 1.935567 secs.
[08/11 03:21:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:21:42]  --------------------------------------------------------------------------------
[08/11 03:21:42]  Iteration: 721 (397 solution, 323 counterexamples)
[08/11 03:22:25]  Generator returned sat in 31.839527 secs.
[08/11 03:22:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:22:28]  Verifer returned unsat in 1.656965 secs.
[08/11 03:22:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:22:28]  --------------------------------------------------------------------------------
[08/11 03:22:28]  Iteration: 722 (398 solution, 323 counterexamples)
[08/11 03:23:10]  Generator returned sat in 31.565775 secs.
[08/11 03:23:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:23:13]  Verifer returned unsat in 0.956094 secs.
[08/11 03:23:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:23:13]  --------------------------------------------------------------------------------
[08/11 03:23:13]  Iteration: 723 (399 solution, 323 counterexamples)
[08/11 03:24:00]  Generator returned sat in 36.093367 secs.
[08/11 03:24:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:24:03]  Verifer returned unsat in 2.068238 secs.
[08/11 03:24:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:24:03]  --------------------------------------------------------------------------------
[08/11 03:24:03]  Iteration: 724 (400 solution, 323 counterexamples)
[08/11 03:24:46]  Generator returned sat in 32.339176 secs.
[08/11 03:24:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:24:50]  Verifer returned unsat in 2.054333 secs.
[08/11 03:24:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:24:50]  --------------------------------------------------------------------------------
[08/11 03:24:50]  Iteration: 725 (401 solution, 323 counterexamples)
[08/11 03:25:33]  Generator returned sat in 31.660599 secs.
[08/11 03:25:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:25:37]  Verifer returned unsat in 2.689547 secs.
[08/11 03:25:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:25:37]  --------------------------------------------------------------------------------
[08/11 03:25:37]  Iteration: 726 (402 solution, 323 counterexamples)
[08/11 03:26:19]  Generator returned sat in 31.684569 secs.
[08/11 03:26:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:26:22]  Verifer returned unsat in 1.140018 secs.
[08/11 03:26:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:26:22]  --------------------------------------------------------------------------------
[08/11 03:26:22]  Iteration: 727 (403 solution, 323 counterexamples)
[08/11 03:27:05]  Generator returned sat in 32.041219 secs.
[08/11 03:27:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:27:07]  Verifer returned unsat in 0.722479 secs.
[08/11 03:27:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:27:07]  --------------------------------------------------------------------------------
[08/11 03:27:07]  Iteration: 728 (404 solution, 323 counterexamples)
[08/11 03:27:55]  Generator returned sat in 36.979466 secs.
[08/11 03:27:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:27:57]  Verifer returned unsat in 1.180540 secs.
[08/11 03:27:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:27:57]  --------------------------------------------------------------------------------
[08/11 03:27:57]  Iteration: 729 (405 solution, 323 counterexamples)
[08/11 03:28:41]  Generator returned sat in 32.439930 secs.
[08/11 03:28:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:28:43]  Verifer returned unsat in 0.853803 secs.
[08/11 03:28:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:28:43]  --------------------------------------------------------------------------------
[08/11 03:28:43]  Iteration: 730 (406 solution, 323 counterexamples)
[08/11 03:29:33]  Generator returned sat in 39.434942 secs.
[08/11 03:29:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:29:39]  Verifer returned unsat in 4.468768 secs.
[08/11 03:29:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:29:39]  --------------------------------------------------------------------------------
[08/11 03:29:39]  Iteration: 731 (407 solution, 323 counterexamples)
[08/11 03:30:22]  Generator returned sat in 32.619065 secs.
[08/11 03:30:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:30:25]  Verifer returned unsat in 1.717392 secs.
[08/11 03:30:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:30:25]  --------------------------------------------------------------------------------
[08/11 03:30:25]  Iteration: 732 (408 solution, 323 counterexamples)
[08/11 03:31:08]  Generator returned sat in 31.639133 secs.
[08/11 03:31:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:31:11]  Verifer returned unsat in 2.137344 secs.
[08/11 03:31:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:31:11]  --------------------------------------------------------------------------------
[08/11 03:31:11]  Iteration: 733 (409 solution, 323 counterexamples)
[08/11 03:31:53]  Generator returned sat in 31.557006 secs.
[08/11 03:31:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:31:57]  Verifer returned unsat in 2.243727 secs.
[08/11 03:31:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:31:57]  --------------------------------------------------------------------------------
[08/11 03:31:57]  Iteration: 734 (410 solution, 323 counterexamples)
[08/11 03:32:43]  Generator returned sat in 34.565637 secs.
[08/11 03:32:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:32:46]  Verifer returned unsat in 2.118363 secs.
[08/11 03:32:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:32:46]  --------------------------------------------------------------------------------
[08/11 03:32:46]  Iteration: 735 (411 solution, 323 counterexamples)
[08/11 03:33:28]  Generator returned sat in 31.600788 secs.
[08/11 03:33:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:33:33]  Verifer returned unsat in 2.891548 secs.
[08/11 03:33:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:33:33]  --------------------------------------------------------------------------------
[08/11 03:33:33]  Iteration: 736 (412 solution, 323 counterexamples)
[08/11 03:34:16]  Generator returned sat in 31.866602 secs.
[08/11 03:34:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:34:19]  Verifer returned unsat in 1.904211 secs.
[08/11 03:34:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:34:19]  --------------------------------------------------------------------------------
[08/11 03:34:19]  Iteration: 737 (413 solution, 323 counterexamples)
[08/11 03:35:02]  Generator returned sat in 31.571663 secs.
[08/11 03:35:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:35:04]  Verifer returned unsat in 1.504265 secs.
[08/11 03:35:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:35:04]  --------------------------------------------------------------------------------
[08/11 03:35:04]  Iteration: 738 (414 solution, 323 counterexamples)
[08/11 03:35:47]  Generator returned sat in 31.908485 secs.
[08/11 03:35:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:35:50]  Verifer returned unsat in 1.376370 secs.
[08/11 03:35:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:35:50]  --------------------------------------------------------------------------------
[08/11 03:35:50]  Iteration: 739 (415 solution, 323 counterexamples)
[08/11 03:36:44]  Generator returned sat in 42.624184 secs.
[08/11 03:36:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:36:47]  Verifer returned unsat in 1.670543 secs.
[08/11 03:36:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:36:47]  --------------------------------------------------------------------------------
[08/11 03:36:47]  Iteration: 740 (416 solution, 323 counterexamples)
[08/11 03:37:31]  Generator returned sat in 32.875465 secs.
[08/11 03:37:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:37:34]  Verifer returned unsat in 2.038229 secs.
[08/11 03:37:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:37:34]  --------------------------------------------------------------------------------
[08/11 03:37:34]  Iteration: 741 (417 solution, 323 counterexamples)
[08/11 03:38:18]  Generator returned sat in 33.116630 secs.
[08/11 03:38:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:38:22]  Verifer returned unsat in 2.972988 secs.
[08/11 03:38:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:38:22]  --------------------------------------------------------------------------------
[08/11 03:38:22]  Iteration: 742 (418 solution, 323 counterexamples)
[08/11 03:39:24]  Generator returned sat in 50.726184 secs.
[08/11 03:39:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:39:27]  Verifer returned unsat in 1.879381 secs.
[08/11 03:39:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:39:27]  --------------------------------------------------------------------------------
[08/11 03:39:27]  Iteration: 743 (419 solution, 323 counterexamples)
[08/11 03:40:10]  Generator returned sat in 31.942625 secs.
[08/11 03:40:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:40:14]  Verifer returned unsat in 2.608204 secs.
[08/11 03:40:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:40:14]  --------------------------------------------------------------------------------
[08/11 03:40:14]  Iteration: 744 (420 solution, 323 counterexamples)
[08/11 03:40:58]  Generator returned sat in 32.870409 secs.
[08/11 03:40:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:41:00]  Verifer returned unsat in 1.329013 secs.
[08/11 03:41:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:41:00]  --------------------------------------------------------------------------------
[08/11 03:41:00]  Iteration: 745 (421 solution, 323 counterexamples)
[08/11 03:41:45]  Generator returned sat in 33.057354 secs.
[08/11 03:41:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:41:48]  Verifer returned unsat in 2.295301 secs.
[08/11 03:41:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:41:48]  --------------------------------------------------------------------------------
[08/11 03:41:48]  Iteration: 746 (422 solution, 323 counterexamples)
[08/11 03:42:39]  Generator returned sat in 39.109203 secs.
[08/11 03:42:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:42:42]  Verifer returned unsat in 1.688337 secs.
[08/11 03:42:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:42:42]  --------------------------------------------------------------------------------
[08/11 03:42:42]  Iteration: 747 (423 solution, 323 counterexamples)
[08/11 03:43:27]  Generator returned sat in 34.923462 secs.
[08/11 03:43:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:43:30]  Verifer returned unsat in 1.372236 secs.
[08/11 03:43:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:43:30]  --------------------------------------------------------------------------------
[08/11 03:43:30]  Iteration: 748 (424 solution, 323 counterexamples)
[08/11 03:44:13]  Generator returned sat in 32.612390 secs.
[08/11 03:44:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:44:16]  Verifer returned unsat in 1.394280 secs.
[08/11 03:44:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:44:16]  --------------------------------------------------------------------------------
[08/11 03:44:16]  Iteration: 749 (425 solution, 323 counterexamples)
[08/11 03:45:00]  Generator returned sat in 33.165620 secs.
[08/11 03:45:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:45:07]  Verifer returned unsat in 5.725175 secs.
[08/11 03:45:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:45:07]  --------------------------------------------------------------------------------
[08/11 03:45:07]  Iteration: 750 (426 solution, 323 counterexamples)
[08/11 03:46:02]  Generator returned sat in 43.585212 secs.
[08/11 03:46:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:46:06]  Verifer returned unsat in 2.531967 secs.
[08/11 03:46:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:46:06]  --------------------------------------------------------------------------------
[08/11 03:46:06]  Iteration: 751 (427 solution, 323 counterexamples)
[08/11 03:46:49]  Generator returned sat in 32.319433 secs.
[08/11 03:46:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:46:53]  Verifer returned unsat in 2.474633 secs.
[08/11 03:46:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:46:53]  --------------------------------------------------------------------------------
[08/11 03:46:53]  Iteration: 752 (428 solution, 323 counterexamples)
[08/11 03:47:36]  Generator returned sat in 32.165689 secs.
[08/11 03:47:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:47:40]  Verifer returned unsat in 2.731207 secs.
[08/11 03:47:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:47:40]  --------------------------------------------------------------------------------
[08/11 03:47:40]  Iteration: 753 (429 solution, 323 counterexamples)
[08/11 03:48:21]  Generator returned sat in 30.938265 secs.
[08/11 03:48:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:48:28]  Verifer returned unsat in 4.863992 secs.
[08/11 03:48:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:48:28]  --------------------------------------------------------------------------------
[08/11 03:48:28]  Iteration: 754 (430 solution, 323 counterexamples)
[08/11 03:50:04]  Generator returned sat in 85.924344 secs.
[08/11 03:50:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:50:08]  Verifer returned unsat in 2.751702 secs.
[08/11 03:50:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:50:09]  --------------------------------------------------------------------------------
[08/11 03:50:09]  Iteration: 755 (431 solution, 323 counterexamples)
[08/11 03:52:55]  Generator returned sat in 155.812102 secs.
[08/11 03:52:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:53:01]  Verifer returned unsat in 3.947217 secs.
[08/11 03:53:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:53:01]  --------------------------------------------------------------------------------
[08/11 03:53:01]  Iteration: 756 (432 solution, 323 counterexamples)
[08/11 03:53:46]  Generator returned sat in 34.922498 secs.
[08/11 03:53:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:53:49]  Verifer returned unsat in 1.246858 secs.
[08/11 03:53:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:53:49]  --------------------------------------------------------------------------------
[08/11 03:53:49]  Iteration: 757 (433 solution, 323 counterexamples)
[08/11 03:54:51]  Generator returned sat in 51.520278 secs.
[08/11 03:54:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:54:53]  Verifer returned unsat in 0.716808 secs.
[08/11 03:54:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:54:53]  --------------------------------------------------------------------------------
[08/11 03:54:53]  Iteration: 758 (434 solution, 323 counterexamples)
[08/11 03:55:39]  Generator returned sat in 35.015409 secs.
[08/11 03:55:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:55:43]  Verifer returned unsat in 2.150746 secs.
[08/11 03:55:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:55:43]  --------------------------------------------------------------------------------
[08/11 03:55:43]  Iteration: 759 (435 solution, 323 counterexamples)
[08/11 03:56:29]  Generator returned sat in 35.232649 secs.
[08/11 03:56:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:56:33]  Verifer returned unsat in 3.044390 secs.
[08/11 03:56:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:56:33]  --------------------------------------------------------------------------------
[08/11 03:56:33]  Iteration: 760 (436 solution, 323 counterexamples)
[08/11 03:57:23]  Generator returned sat in 38.957020 secs.
[08/11 03:57:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:57:29]  Improved gap from 1/10 to 0
[08/11 03:57:30]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 03:57:30]  Verifer returned sat in 5.429953 secs.
[08/11 03:57:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -78293.504395  -78405.542236  41355.495361 -78293.504395  112.387451 -78405.542236   0.000000  112.037842       99.800049     9.0    -78405.542236            -1             -1     -1
1  -78293.154785  -78293.454590  41355.495361 -78293.154785  112.387451 -78293.454590   0.049805    0.250000        0.099854     1.0    -78405.542236         False           True  False
2  -78293.154785  -78293.254395  41455.395508 -78293.154785    0.200195 -78293.254395   0.049805    0.049805        0.000000     2.0    -78293.204590         False          False   True
3  -78293.054688  -78293.154541  41555.295410 -78293.054688    0.149902 -78293.154541   0.049805    0.050049        0.000000     1.0    -78293.104492         False           True  False
4  -78179.717041  -78250.220215  41555.295410 -78179.717041  113.387695 -78250.220215  13.287598   57.215576        0.099854     1.0    -78293.104492         False          False  False
5  -78178.738770  -78192.954590  41654.217285 -78178.738770   58.193848 -78192.954590  13.287598    0.928223        0.000000     1.0    -78293.104492         False          False   True
6  -78100.420166  -78191.976562  41675.898438 -78100.420166   79.246826 -78191.976562  13.287598   78.268799       -0.000244     1.0    -78293.104492         False          False   True
7  -78088.476562  -78113.657715  41762.461182 -78088.476562   90.212402 -78113.657715  13.287598   11.893555       -1.493896     1.0    -78293.104492         False          False   True
8  -77986.982666  -78100.270020  41762.461182 -77986.982666  113.387451 -78100.270020  13.287598   99.999756        0.000000     1.0    -78293.104492         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=409/4096.[0m
[08/11 03:57:30]  --------------------------------------------------------------------------------
[08/11 03:57:30]  Iteration: 761 (436 solution, 324 counterexamples)
[08/11 03:58:31]  Generator returned sat in 49.937973 secs.
[08/11 03:58:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 03:58:51]  Improved gap from 51/4096 to 0
[08/11 03:58:52]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/11 03:58:52]  Verifer returned sat in 19.290831 secs.
[08/11 03:58:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -71988.488037  -72000.759033  41367.566650 -71988.488037    0.100000 -72000.759033   0.099854   12.171143       12.171143     5.0    -72000.759033            -1             -1     -1
1  -71988.488037  -72000.659180  41455.395264 -71988.488037    0.100098 -72000.659180   0.099854   12.071289       -0.000244     4.0    -72000.759033         False           True   True
2  -71888.587891  -71889.802246  41455.395264 -71888.587891  111.971436 -71889.802246   0.099854    1.114502       -0.100098     1.0    -72000.759033          True           True  False
3  -71888.387939  -71888.587646  41555.295166 -71888.387939    1.314453 -71888.587646   0.099854    0.099854       -0.000244     1.0    -71888.487793         False          False  False
4  -71774.659180  -71844.344971  41555.295166 -71774.659180  113.828613 -71844.344971  13.628418   56.057373        0.199951     1.0    -71888.487793         False          False  False
5  -71772.302246  -71788.187744  41652.738281 -71772.302246   58.414307 -71788.187744  13.628418    2.257080        0.000000     1.0    -71888.487793         False          False   True
6  -71694.544922  -71785.830566  41674.980957 -71694.544922   80.014404 -71785.830566  13.628418   77.657227        0.000000     1.0    -71888.487793         False          False   True
7  -71680.816406  -71708.073486  41761.252441 -71680.816406   91.385742 -71708.073486  13.628418   13.628662        0.000000     1.0    -71888.487793         False          False   True
8  -71580.616455  -71694.444824  41761.252441 -71580.616455  113.828613 -71694.444824  13.628418  100.199951        0.199951     2.0    -71888.487793         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=819/4096.[0m
[08/11 03:58:52]  --------------------------------------------------------------------------------
[08/11 03:58:52]  Iteration: 762 (436 solution, 325 counterexamples)
[08/11 04:02:29]  Generator returned sat in 205.404986 secs.
[08/11 04:02:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:02:39]  Improved gap from 205/2048 to 0
[08/11 04:02:41]  Improved number of small numbers from 60 to 80 out of a max of 114
[08/11 04:02:41]  Verifer returned sat in 11.074158 secs.
[08/11 04:02:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -91505.339355  -91619.039229  63015.596924 -91505.339355  113.799805 -91619.039229   0.000000  113.699873       13.699951     9.0    -91619.039229            -1             -1     -1
1  -91505.239229  -91505.339111  63101.580322 -91505.239229  113.800000 -91505.339111   0.000000    0.099883       -0.216523     1.0    -91619.039229         False           True  False
2  -91504.922607  -91505.022562  63201.263672 -91504.922607    0.416504 -91505.022562   0.000000    0.099954       -0.216553     1.0    -91504.922607         False          False  False
3  -91504.605895  -91504.705895  63301.163512 -91504.605895    0.416667 -91504.705895   0.000000    0.100000        0.000000     1.0    -91504.922607         False          False  False
4  -91389.872562  -91463.922562  63301.163512 -91389.872562  114.833333 -91463.922562  14.533333   59.516667        0.200000     1.0    -91504.922607         False          False  False
5  -91389.872562  -91404.505895  63400.863525 -91389.872562   59.416667 -91404.505895  14.533333    0.100000       -0.099987     2.0    -91504.922607         False          False   True
6  -91310.005895  -91404.305895  63420.997070 -91310.005895   79.966667 -91404.305895  14.533333   79.766667       -0.099775     1.0    -91504.922607         False          False   True
7  -91299.589229  -91324.439229  63510.680179 -91299.589229   90.183333 -91324.439229  14.533333   10.316667        0.000000     1.0    -91504.922607         False          False   True
8  -91195.072562  -91314.022461  63510.680179 -91195.072562  114.833333 -91314.022461  18.850000  100.099899        0.200000     1.0    -91504.922607         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1/5.[0m
[08/11 04:02:42]  --------------------------------------------------------------------------------
[08/11 04:02:42]  Iteration: 763 (436 solution, 326 counterexamples)
[08/11 04:04:52]  Generator returned sat in 118.703166 secs.
[08/11 04:04:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:04:54]  Improved gap from 0 to 23.4375
[08/11 04:04:54]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 04:04:54]  Verifer returned sat in 1.511472 secs.
[08/11 04:04:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -89947.464111  -89994.539062  63191.40918 -89947.464111    0.099854 -89994.539062      0.000   47.074951       23.337402     7.0    -89994.539062            -1             -1     -1
1  -89947.464111  -89970.801514  63267.97168 -89947.464111   46.975098 -89970.801514      0.000   23.337402       -0.100098     3.0    -89994.539062         False           True  False
2  -89923.926758  -89947.364014  63344.53418 -89923.926758   46.874756 -89947.364014      0.000   23.437256       -0.000244     1.0    -89923.926758         False          False  False
3  -89451.614014  -89847.464111  63344.53418 -89451.614014  495.750000 -89847.464111    148.875  246.975098      223.437500     1.0    -89923.926758         False          False  False
4  -89451.614014  -89723.926514  63344.53418 -89451.614014  246.875000 -89723.926514    148.875  123.437500      123.437500     2.0    -89923.926758         False          False   True
5  -89451.614014  -89723.826904  63344.53418 -89451.614014    0.500000 -89723.826904    148.875  123.337891       23.437500     3.0    -89923.926758         False          False   True
6  -89451.614014  -89623.926514  63421.09668 -89451.614014    0.500000 -89623.926514    148.875   23.437500        0.000000     4.0    -89923.926758         False          False   True
7  -89451.614014  -89600.489014  63497.65918 -89451.614014    0.500000 -89600.489014    148.875    0.000000      -23.437500     5.0    -89923.926758         False          False   True
8  -89204.739014  -89577.051514  63497.65918 -89204.739014  246.875000 -89577.051514    148.875  223.437500      123.437500     1.0    -89353.614014          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/11 04:04:55]  --------------------------------------------------------------------------------
[08/11 04:04:55]  Iteration: 764 (436 solution, 327 counterexamples)
[08/11 04:06:03]  Generator returned sat in 56.801841 secs.
[08/11 04:06:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:06:05]  Verifer returned unsat in 1.476231 secs.
[08/11 04:06:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:06:06]  --------------------------------------------------------------------------------
[08/11 04:06:06]  Iteration: 765 (437 solution, 327 counterexamples)
[08/11 04:06:49]  Generator returned sat in 32.512830 secs.
[08/11 04:06:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:06:52]  Verifer returned unsat in 1.526023 secs.
[08/11 04:06:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:06:52]  --------------------------------------------------------------------------------
[08/11 04:06:52]  Iteration: 766 (438 solution, 327 counterexamples)
[08/11 04:07:35]  Generator returned sat in 32.128202 secs.
[08/11 04:07:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:07:39]  Verifer returned unsat in 2.287659 secs.
[08/11 04:07:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:07:39]  --------------------------------------------------------------------------------
[08/11 04:07:39]  Iteration: 767 (439 solution, 327 counterexamples)
[08/11 04:08:27]  Generator returned sat in 36.076065 secs.
[08/11 04:08:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:08:30]  Verifer returned unsat in 2.073798 secs.
[08/11 04:08:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:08:30]  --------------------------------------------------------------------------------
[08/11 04:08:30]  Iteration: 768 (440 solution, 327 counterexamples)
[08/11 04:09:13]  Generator returned sat in 31.293095 secs.
[08/11 04:09:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:09:15]  Verifer returned unsat in 1.434126 secs.
[08/11 04:09:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:09:15]  --------------------------------------------------------------------------------
[08/11 04:09:15]  Iteration: 769 (441 solution, 327 counterexamples)
[08/11 04:10:03]  Generator returned sat in 36.731579 secs.
[08/11 04:10:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:10:08]  Verifer returned unsat in 2.728305 secs.
[08/11 04:10:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:10:08]  --------------------------------------------------------------------------------
[08/11 04:10:08]  Iteration: 770 (442 solution, 327 counterexamples)
[08/11 04:10:50]  Generator returned sat in 31.622970 secs.
[08/11 04:10:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:10:55]  Verifer returned unsat in 3.155788 secs.
[08/11 04:10:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:10:55]  --------------------------------------------------------------------------------
[08/11 04:10:55]  Iteration: 771 (443 solution, 327 counterexamples)
[08/11 04:11:37]  Generator returned sat in 31.230099 secs.
[08/11 04:11:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:11:41]  Verifer returned unsat in 2.171314 secs.
[08/11 04:11:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:11:41]  --------------------------------------------------------------------------------
[08/11 04:11:41]  Iteration: 772 (444 solution, 327 counterexamples)
[08/11 04:12:24]  Generator returned sat in 31.392628 secs.
[08/11 04:12:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:12:27]  Verifer returned unsat in 2.400197 secs.
[08/11 04:12:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:12:27]  --------------------------------------------------------------------------------
[08/11 04:12:27]  Iteration: 773 (445 solution, 327 counterexamples)
[08/11 04:13:11]  Generator returned sat in 32.432994 secs.
[08/11 04:13:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:13:16]  Verifer returned unsat in 3.077693 secs.
[08/11 04:13:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:13:16]  --------------------------------------------------------------------------------
[08/11 04:13:16]  Iteration: 774 (446 solution, 327 counterexamples)
[08/11 04:14:04]  Generator returned sat in 37.345115 secs.
[08/11 04:14:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:14:06]  Verifer returned unsat in 0.526379 secs.
[08/11 04:14:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:14:06]  --------------------------------------------------------------------------------
[08/11 04:14:06]  Iteration: 775 (447 solution, 327 counterexamples)
[08/11 04:14:50]  Generator returned sat in 33.331793 secs.
[08/11 04:14:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:14:52]  Verifer returned unsat in 0.696314 secs.
[08/11 04:14:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:14:52]  --------------------------------------------------------------------------------
[08/11 04:14:52]  Iteration: 776 (448 solution, 327 counterexamples)
[08/11 04:16:14]  Generator returned sat in 70.516528 secs.
[08/11 04:16:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:16:18]  Verifer returned unsat in 2.548356 secs.
[08/11 04:16:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:16:18]  --------------------------------------------------------------------------------
[08/11 04:16:18]  Iteration: 777 (449 solution, 327 counterexamples)
[08/11 04:17:04]  Generator returned sat in 34.730231 secs.
[08/11 04:17:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:17:07]  Verifer returned unsat in 1.951099 secs.
[08/11 04:17:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:17:07]  --------------------------------------------------------------------------------
[08/11 04:17:07]  Iteration: 778 (450 solution, 327 counterexamples)
[08/11 04:17:55]  Generator returned sat in 36.807991 secs.
[08/11 04:17:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:17:58]  Verifer returned unsat in 1.295640 secs.
[08/11 04:17:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:17:58]  --------------------------------------------------------------------------------
[08/11 04:17:58]  Iteration: 779 (451 solution, 327 counterexamples)
[08/11 04:18:42]  Generator returned sat in 33.346697 secs.
[08/11 04:18:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:18:45]  Verifer returned unsat in 1.467130 secs.
[08/11 04:18:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:18:45]  --------------------------------------------------------------------------------
[08/11 04:18:45]  Iteration: 780 (452 solution, 327 counterexamples)
[08/11 04:19:29]  Generator returned sat in 32.541028 secs.
[08/11 04:19:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:19:33]  Verifer returned unsat in 2.396599 secs.
[08/11 04:19:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:19:33]  --------------------------------------------------------------------------------
[08/11 04:19:33]  Iteration: 781 (453 solution, 327 counterexamples)
[08/11 04:20:16]  Generator returned sat in 32.195470 secs.
[08/11 04:20:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:20:20]  Verifer returned unsat in 2.332089 secs.
[08/11 04:20:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:20:20]  --------------------------------------------------------------------------------
[08/11 04:20:20]  Iteration: 782 (454 solution, 327 counterexamples)
[08/11 04:21:05]  Generator returned sat in 33.907817 secs.
[08/11 04:21:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:21:09]  Verifer returned unsat in 2.566319 secs.
[08/11 04:21:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:21:09]  --------------------------------------------------------------------------------
[08/11 04:21:09]  Iteration: 783 (455 solution, 327 counterexamples)
[08/11 04:21:54]  Generator returned sat in 33.559247 secs.
[08/11 04:21:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:21:59]  Verifer returned unsat in 4.108340 secs.
[08/11 04:21:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:22:00]  --------------------------------------------------------------------------------
[08/11 04:22:00]  Iteration: 784 (456 solution, 327 counterexamples)
[08/11 04:25:32]  Generator returned sat in 201.409858 secs.
[08/11 04:25:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:25:41]  Improved gap from 3/109 to 0
[08/11 04:25:43]  Improved number of small numbers from 59 to 77 out of a max of 114
[08/11 04:25:43]  Verifer returned sat in 9.748926 secs.
[08/11 04:25:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -101050.097168 -101151.929625  63632.861816 -101050.097168  101.872559 -101151.929625     0.0000  101.832457      101.832401     5.0   -101151.929625            -1             -1     -1
1 -101050.097168 -101151.929443  63632.861816 -101050.097168  101.832275 -101151.929443     0.0000  101.832275        1.832401     5.0   -101050.097168         False           True  False
2 -101040.419678 -101040.459625  63721.351872 -101040.419678  111.509766 -101040.459625     0.0000    0.039947       -0.000053     1.0   -101050.097168         False           True  False
3 -101040.379625 -101040.419625  63821.311872 -101040.379625    0.080000 -101040.419625     0.0000    0.040000        0.000000     1.0   -101040.379625         False          False  False
4 -100926.869625 -100997.322125  63821.311872 -100926.869625  113.550000 -100997.322125    11.6375   58.815000        1.872500     1.0   -101040.379625         False          False  False
5 -100926.869625 -100940.379625  63919.439209 -100926.869625   58.775000 -100940.379625    11.6375    1.872500       -0.000163     2.0   -101040.379625         False          False   True
6 -100849.314625 -100938.467125  63941.884277 -100849.314625   79.427500 -100938.467125    11.6375   77.515000       -0.000095     1.0   -101040.379625         False          False   True
7 -100836.139625 -100860.912125  64028.294434 -100836.139625   90.690000 -100860.912125    11.6375   13.135000       -0.414938     1.0   -101040.379625         False          False   True
8 -100735.724625 -100847.362061  64028.294434 -100735.724625  113.550000 -100847.362061    11.6375   99.999936        0.000062     1.0   -101040.379625         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=749/400.[0m
[08/11 04:25:44]  --------------------------------------------------------------------------------
[08/11 04:25:44]  Iteration: 785 (456 solution, 328 counterexamples)
[08/11 04:28:47]  Generator returned sat in 171.916320 secs.
[08/11 04:28:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:28:51]  Verifer returned unsat in 2.773202 secs.
[08/11 04:28:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:28:51]  --------------------------------------------------------------------------------
[08/11 04:28:51]  Iteration: 786 (457 solution, 328 counterexamples)
[08/11 04:29:35]  Generator returned sat in 32.616968 secs.
[08/11 04:29:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:29:38]  Verifer returned unsat in 1.691969 secs.
[08/11 04:29:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:29:38]  --------------------------------------------------------------------------------
[08/11 04:29:38]  Iteration: 787 (458 solution, 328 counterexamples)
[08/11 04:30:23]  Generator returned sat in 33.582392 secs.
[08/11 04:30:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:30:27]  Verifer returned unsat in 2.064584 secs.
[08/11 04:30:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:30:27]  --------------------------------------------------------------------------------
[08/11 04:30:27]  Iteration: 788 (459 solution, 328 counterexamples)
[08/11 04:31:12]  Generator returned sat in 34.675704 secs.
[08/11 04:31:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:31:15]  Verifer returned unsat in 1.523618 secs.
[08/11 04:31:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:31:15]  --------------------------------------------------------------------------------
[08/11 04:31:15]  Iteration: 789 (460 solution, 328 counterexamples)
[08/11 04:32:10]  Generator returned sat in 42.849730 secs.
[08/11 04:32:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:32:13]  Verifer returned unsat in 2.187164 secs.
[08/11 04:32:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:32:13]  --------------------------------------------------------------------------------
[08/11 04:32:13]  Iteration: 790 (461 solution, 328 counterexamples)
[08/11 04:33:00]  Generator returned sat in 35.475951 secs.
[08/11 04:33:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:33:02]  Verifer returned unsat in 0.686735 secs.
[08/11 04:33:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:33:02]  --------------------------------------------------------------------------------
[08/11 04:33:02]  Iteration: 791 (462 solution, 328 counterexamples)
[08/11 04:33:46]  Generator returned sat in 32.942564 secs.
[08/11 04:33:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:33:48]  Verifer returned unsat in 0.773343 secs.
[08/11 04:33:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:33:48]  --------------------------------------------------------------------------------
[08/11 04:33:48]  Iteration: 792 (463 solution, 328 counterexamples)
[08/11 04:37:34]  Generator returned sat in 214.844720 secs.
[08/11 04:37:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:37:36]  Improved gap from 1/10 to 23.4375
[08/11 04:37:36]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 04:37:36]  Verifer returned sat in 1.364390 secs.
[08/11 04:37:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0 -104883.246826 -105030.422119  67080.991455 -104883.246826    0.100098 -105030.422119   0.000000  147.175293       99.800049     2.0   -105030.422119            -1             -1    True
1 -104706.684570 -104883.146973  67080.991455 -104706.684570  323.737549 -104883.146973   0.000000  176.462402      176.362305     1.0   -105030.422119         False          False    True
2 -104559.509521 -104883.046875  67080.991455 -104559.509521  323.637451 -104883.046875   0.099854  323.437500      223.437500     2.0   -104559.609375         False          False    True
3 -104392.197021 -104706.584473  67080.991455 -104392.197021  490.750000 -104706.584473  67.412354  246.975098      223.437500     2.0   -104559.609375         False          False    True
4 -104392.197021 -104583.046875  67080.991455 -104392.197021  246.875000 -104583.046875  67.412354  123.437500      123.437500     3.0   -104559.609375         False          False    True
5 -104392.197021 -104559.509277  67080.991455 -104392.197021    1.500000 -104559.509277  67.412354   99.899902       23.437500     3.0   -104559.609375         False          False    True
6 -104392.197021 -104483.046875  67157.553955 -104392.197021    1.500000 -104483.046875  67.412354   23.437500        0.000000     4.0   -104559.609375         False          False    True
7 -104392.197021 -104459.609375  67234.116455 -104392.197021    1.500000 -104459.609375  67.412354    0.000000      -23.437500     5.0   -104559.609375         False          False    True
8 -104145.322021 -104436.171875  67234.116455 -104145.322021  246.875000 -104436.171875  67.412354  223.437500      123.437500     1.0   -104212.734375          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/11 04:37:37]  --------------------------------------------------------------------------------
[08/11 04:37:37]  Iteration: 793 (463 solution, 329 counterexamples)
[08/11 04:41:40]  Generator returned sat in 231.870481 secs.
[08/11 04:41:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:41:43]  Verifer returned unsat in 1.034306 secs.
[08/11 04:41:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:41:43]  --------------------------------------------------------------------------------
[08/11 04:41:43]  Iteration: 794 (464 solution, 329 counterexamples)
[08/11 04:42:28]  Generator returned sat in 33.790842 secs.
[08/11 04:42:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:42:30]  Verifer returned unsat in 0.887271 secs.
[08/11 04:42:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:42:30]  --------------------------------------------------------------------------------
[08/11 04:42:30]  Iteration: 795 (465 solution, 329 counterexamples)
[08/11 04:43:15]  Generator returned sat in 33.768155 secs.
[08/11 04:43:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:43:17]  Verifer returned unsat in 1.022568 secs.
[08/11 04:43:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:43:17]  --------------------------------------------------------------------------------
[08/11 04:43:17]  Iteration: 796 (466 solution, 329 counterexamples)
[08/11 04:46:10]  Generator returned sat in 161.434954 secs.
[08/11 04:46:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:46:18]  Improved gap from 0 to 4.6875
[08/11 04:46:18]  Improved number of small numbers from 107 to 109 out of a max of 114
[08/11 04:46:18]  Verifer returned sat in 7.007716 secs.
[08/11 04:46:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0 -106257.623125 -106368.344375  67080.991455 -106257.623125    0.002686 -106368.344375     0.0000  110.721250       10.721250     4.0   -106368.344375            -1             -1   False
1 -106257.623125 -106257.625732  67080.991455 -106257.623125  110.721191 -106257.625732     0.0000    0.002607      -89.278750     4.0   -106368.344375         False          False   False
2 -106146.904541 -106168.344375  67080.991455 -106146.904541  110.721191 -106168.344375     0.0000   21.439834      -78.560166     1.0   -106368.344375         False          False   False
3 -106057.623125 -106062.310625  67170.270205 -106057.623125  110.721250 -106062.310625     0.0000    4.687500        0.000000     1.0   -106368.344375         False          False   False
4 -105852.933125 -105957.623291  67170.270205 -105852.933125  209.377500 -105957.623291     0.0025  104.687666      104.687500     1.0   -106368.344375         False          False   False
5 -105852.933125 -105857.625732  67170.270205 -105852.933125    0.010000 -105857.625732     0.0025    4.690107        4.687500     2.0   -106368.344375         False          False    True
6 -105852.933125 -105857.623125  67265.582705 -105852.933125    2.010000 -105857.623125     0.0025    4.687500        0.000000     3.0   -106368.344375         False          False    True
7 -105852.933125 -105852.935625  67360.895020 -105852.933125    4.010000 -105852.935625     0.0025    0.000000       -4.687686     4.0   -106368.344375         False          False    True
8 -105846.923125 -105846.925781  67360.895020 -105846.923125    6.010000 -105846.925781     0.0025    0.000156      -98.677686     1.0   -106368.344375         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1675/16.[0m
[08/11 04:46:19]  --------------------------------------------------------------------------------
[08/11 04:46:19]  Iteration: 797 (466 solution, 330 counterexamples)
[08/11 04:48:13]  Generator returned sat in 103.269307 secs.
[08/11 04:48:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:48:23]  Improved gap from 0 to 0
[08/11 04:48:23]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/11 04:48:23]  Verifer returned sat in 8.382569 secs.
[08/11 04:48:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -105008.220625 -105208.220459  65920.867676 -105008.220625    0.025146 -105208.220459   0.000000  199.999834      100.000078     9.0   -105208.220459            -1             -1     -1
1 -105008.220625 -105008.245850  65920.867676 -105008.220625  199.999756 -105008.245850   0.000000    0.025225        0.000078     4.0   -105208.220459         False           True  False
2 -105007.683350 -105008.170654  66020.330322 -105007.683350    0.562500 -105008.170654   0.000000    0.487305        0.000000     1.0   -105007.683350         False          False  False
3 -105007.608154 -105007.633057  66120.254883 -105007.608154    0.562500 -105007.633057   0.000000    0.024902       -0.000244     1.0   -105007.683350         False          False  False
4 -104906.058105 -104907.633125  66120.254883 -104906.058105  101.574951 -104907.633125   0.024902    1.550117        1.524902     1.0   -105007.683350         False          False  False
5 -104906.058105 -104907.607910  66218.729980 -104906.058105    0.500000 -104907.607910   0.024902    1.524902        0.000000     2.0   -105007.683350         False          False   True
6 -104906.058105 -104906.083008  66318.729980 -104906.058105    1.500000 -104906.083008   0.024902    0.000000        0.000000     3.0   -105007.683350         False          False   True
7 -104904.558105 -104906.083008  66417.229980 -104904.558105    1.500000 -104906.083008   0.024902    1.500000        0.000000     3.0   -105007.683350         False          False   True
8 -104904.558105 -104904.583008  66417.229980 -104904.558105    1.500000 -104904.583008   0.024902    0.000000     -100.000000     2.0   -105007.683350         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=3123/2048.[0m
[08/11 04:48:24]  --------------------------------------------------------------------------------
[08/11 04:48:24]  Iteration: 798 (466 solution, 331 counterexamples)
[08/11 04:50:03]  Generator returned sat in 88.190134 secs.
[08/11 04:50:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:50:07]  Improved gap from 0 to 0
[08/11 04:50:07]  Improved number of small numbers from 40 to 114 out of a max of 114
[08/11 04:50:07]  Verifer returned sat in 2.726378 secs.
[08/11 04:50:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -104264.055176 -104364.055420  67620.717529 -104264.055176    0.025146 -104364.055420    0.000000  100.000244      100.000244     6.0   -104364.055420            -1             -1     -1
1 -104264.055176 -104264.055420  67620.717529 -104264.055176   99.999756 -104264.055420    0.000000    0.000244        0.000244     3.0   -104364.055420         False           True  False
2 -104164.067871 -104264.055420  67620.717529 -104164.067871   99.987549 -104264.055420    0.000000   99.987549       -0.012451     3.0   -104164.067871         False          False  False
3 -104064.042725 -104064.055420  67620.717529 -104064.042725  200.012695 -104064.055420    0.000000    0.012695        0.012695     1.0   -104164.067871         False          False  False
4 -103763.055420 -103964.055420  67620.717529 -103763.055420  301.000000 -103964.055420  100.987549  100.012451      100.012451     1.0   -104164.067871         False          False  False
5 -103763.055420 -103864.055420  67620.717529 -103763.055420    2.000000 -103864.055420  100.987549    0.012451        0.012451     2.0   -104164.067871         False          False   True
6 -103761.567871 -103862.567871  67719.217529 -103761.567871    1.500000 -103862.567871  100.987549    0.012451        0.000000     1.0   -104164.067871         False          False   True
7 -103760.080322 -103861.080322  67817.729736 -103760.080322    1.500000 -103861.080322  100.987549    0.012451       -0.000244     1.0   -104164.067871         False          False   True
8 -103758.592773 -103861.055176  67817.729736 -103758.592773    1.500000 -103861.055176  100.987549    1.474854      -98.512695     1.0   -104164.067871         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=409651/4096.[0m
[08/11 04:50:08]  --------------------------------------------------------------------------------
[08/11 04:50:08]  Iteration: 799 (466 solution, 332 counterexamples)
[08/11 04:52:22]  Generator returned sat in 122.860866 secs.
[08/11 04:52:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:52:24]  Verifer returned unsat in 0.844240 secs.
[08/11 04:52:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:52:24]  --------------------------------------------------------------------------------
[08/11 04:52:24]  Iteration: 800 (467 solution, 332 counterexamples)
[08/11 04:53:44]  Generator returned sat in 68.478095 secs.
[08/11 04:53:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:53:46]  Verifer returned unsat in 0.863448 secs.
[08/11 04:53:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:53:46]  --------------------------------------------------------------------------------
[08/11 04:53:46]  Iteration: 801 (468 solution, 332 counterexamples)
[08/11 04:54:51]  Generator returned sat in 53.723304 secs.
[08/11 04:54:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:54:53]  Verifer returned unsat in 0.623656 secs.
[08/11 04:54:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:54:53]  --------------------------------------------------------------------------------
[08/11 04:54:53]  Iteration: 802 (469 solution, 332 counterexamples)
[08/11 04:55:38]  Generator returned sat in 34.119430 secs.
[08/11 04:55:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:55:40]  Verifer returned unsat in 0.859884 secs.
[08/11 04:55:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:55:40]  --------------------------------------------------------------------------------
[08/11 04:55:40]  Iteration: 803 (470 solution, 332 counterexamples)
[08/11 04:56:29]  Generator returned sat in 37.255128 secs.
[08/11 04:56:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:56:31]  Verifer returned unsat in 0.566256 secs.
[08/11 04:56:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:56:31]  --------------------------------------------------------------------------------
[08/11 04:56:31]  Iteration: 804 (471 solution, 332 counterexamples)
[08/11 04:57:16]  Generator returned sat in 33.361102 secs.
[08/11 04:57:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:57:18]  Verifer returned unsat in 0.670819 secs.
[08/11 04:57:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:57:18]  --------------------------------------------------------------------------------
[08/11 04:57:18]  Iteration: 805 (472 solution, 332 counterexamples)
[08/11 04:58:08]  Generator returned sat in 37.942076 secs.
[08/11 04:58:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:58:10]  Verifer returned unsat in 1.451084 secs.
[08/11 04:58:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:58:11]  --------------------------------------------------------------------------------
[08/11 04:58:11]  Iteration: 806 (473 solution, 332 counterexamples)
[08/11 04:58:55]  Generator returned sat in 33.717257 secs.
[08/11 04:58:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:58:58]  Verifer returned unsat in 1.534676 secs.
[08/11 04:58:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 04:58:58]  --------------------------------------------------------------------------------
[08/11 04:58:58]  Iteration: 807 (474 solution, 332 counterexamples)
[08/11 05:01:42]  Generator returned sat in 152.156988 secs.
[08/11 05:01:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:01:51]  Improved gap from 61/20 to 3.125
[08/11 05:01:51]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 05:01:51]  Verifer returned sat in 7.863074 secs.
[08/11 05:01:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -104428.796143 -104628.746338  67629.267578 -104428.796143  199.950000 -104628.746338   0.000000  199.950195       99.950195     9.0   -104628.746338            -1             -1     -1
1 -104428.796143 -104523.271240  67629.267578 -104428.796143  199.899902 -104523.271240   0.000000   94.475098       -0.049805     3.0   -104428.796143         False           True  False
2 -104323.421387 -104428.746094  67629.267578 -104323.421387  199.849854 -104428.746094   0.000000  105.324707        5.324951     1.0   -104323.421387         False          False  False
3 -104323.421387 -104323.421387  67720.817627 -104323.421387  105.275146 -104323.421387   0.000000    0.000000       -3.125000     2.0   -104323.421387         False          False  False
4 -104117.121338 -104263.996094  67720.817627 -104117.121338  206.300049 -104263.996094   0.050049  146.824707      103.125000     1.0   -104323.421387         False          False  False
5 -104117.121338 -104120.346436  67720.817627 -104117.121338    2.000000 -104120.346436   0.050049    3.175049        3.125000     2.0   -104323.421387         False          False   True
6 -104117.121338 -104120.296387  67817.692627 -104117.121338    2.500000 -104120.296387   0.050049    3.125000        0.000000     3.0   -104323.421387         False          False   True
7 -104117.121338 -104117.171387  67914.567627 -104117.121338    3.000000 -104117.171387   0.050049    0.000000       -3.125000     4.0   -104323.421387         False          False   True
8 -104113.621338 -104114.046387  67914.567627 -104113.621338    3.500000 -104114.046387   0.050049    0.375000      -99.625000     1.0   -104323.421387         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=825/8.[0m
[08/11 05:01:52]  --------------------------------------------------------------------------------
[08/11 05:01:52]  Iteration: 808 (474 solution, 333 counterexamples)
[08/11 05:05:59]  Generator returned sat in 235.505803 secs.
[08/11 05:06:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:06:10]  Improved gap from 1/8 to 0
[08/11 05:06:10]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 05:06:10]  Verifer returned sat in 10.656550 secs.
[08/11 05:06:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -104042.135742 -104142.186035  68096.544678 -104042.135742  200.200195 -104142.186035    0.000000  100.050293      100.050293     9.0   -104142.186035            -1             -1     -1
1 -103942.035889 -104042.186035  68096.544678 -103942.035889  200.150146 -104042.186035   99.200195    0.949951        0.949951     4.0   -104041.236084         False           True  False
2 -103941.985840 -104042.135986  68096.544678 -103941.985840    1.000000 -104042.135986   99.200195    0.949951      -99.000000     5.0   -104041.186035         False          False   True
3 -103742.985840 -103842.236084  68096.544678 -103742.985840  199.949951 -103842.236084   99.200195    0.050049        0.000000     1.0   -104041.186035         False           True  False
4 -103491.085938 -103742.186035  68096.544678 -103491.085938  251.949951 -103742.186035  250.150146    0.949951        0.949951     1.0   -104041.186035         False          False  False
5 -103491.035889 -103741.735840  68195.544678 -103491.035889    1.000000 -103741.735840  250.150146    0.549805        0.000000     2.0   -104041.186035         False          False   True
6 -103491.035889 -103741.186035  68295.544678 -103491.035889    0.500000 -103741.186035  250.150146    0.000000        0.000000     2.0   -104041.186035         False          False   True
7 -103490.535889 -103741.135986  68395.044434 -103490.535889    0.500000 -103741.135986  250.150146    0.449951       -0.000244     1.0   -104041.186035         False          False   True
8 -103490.485840 -103740.635986  68395.044434 -103490.485840    0.500000 -103740.635986  250.150146    0.000000      -99.950195     1.0   -104041.186035         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=3891/4096.[0m
[08/11 05:06:11]  --------------------------------------------------------------------------------
[08/11 05:06:11]  Iteration: 809 (474 solution, 334 counterexamples)
[08/11 05:07:17]  Generator returned sat in 54.115649 secs.
[08/11 05:07:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:07:28]  Improved gap from 0 to 0
[08/11 05:07:29]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/11 05:07:29]  Verifer returned sat in 10.869148 secs.
[08/11 05:07:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -103132.285889 -103280.310791  68044.569824 -103132.285889  148.075195 -103280.310791    0.000000  148.024902       48.025146     9.0   -103280.310791            -1             -1     -1
1 -103132.285889 -103132.335693  68096.544678 -103132.285889  148.024902 -103132.335693    0.000000    0.049805        0.000000     8.0   -103132.285889         False           True  False
2 -102984.360840 -103032.335938  68096.544678 -102984.360840  147.974854 -103032.335938    0.000000   47.975098       47.925049     1.0   -102984.360840         False           True  False
3 -102884.360840 -103032.285889  68096.544678 -102884.360840  147.975098 -103032.285889    0.000000  147.925049       47.925049     2.0   -102984.360840         False          False  False
4 -102832.285889 -102832.335693  68096.544678 -102832.285889  200.000000 -102832.335693    0.000000    0.049805        0.000000     1.0   -102984.360840         False          False  False
5 -102580.335693 -102832.285889  68096.544678 -102580.335693  252.000000 -102832.285889  102.100098  149.850098       49.850098     2.0   -102984.360840         False          False  False
6 -102580.335693 -102682.985840  68146.694580 -102580.335693    2.000000 -102682.985840  102.100098    0.550049        0.000000     2.0   -102984.360840         False          False   True
7 -102580.335693 -102682.435791  68246.694580 -102580.335693    0.500000 -102682.435791  102.100098    0.000000        0.000000     3.0   -102984.360840         False          False   True
8 -102579.835693 -102682.385986  68246.694580 -102579.835693    0.500000 -102682.385986  102.100098    0.450195      -99.500000     1.0   -102984.360840         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=102093/2048.[0m
[08/11 05:07:29]  --------------------------------------------------------------------------------
[08/11 05:07:29]  Iteration: 810 (474 solution, 335 counterexamples)
[08/11 05:09:05]  Generator returned sat in 83.715456 secs.
[08/11 05:09:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:09:10]  Verifer returned unsat in 4.093964 secs.
[08/11 05:09:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:09:10]  --------------------------------------------------------------------------------
[08/11 05:09:10]  Iteration: 811 (475 solution, 335 counterexamples)
[08/11 05:09:57]  Generator returned sat in 34.988500 secs.
[08/11 05:09:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:10:03]  Verifer returned unsat in 4.441064 secs.
[08/11 05:10:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:10:03]  --------------------------------------------------------------------------------
[08/11 05:10:03]  Iteration: 812 (476 solution, 335 counterexamples)
[08/11 05:10:53]  Generator returned sat in 39.250507 secs.
[08/11 05:10:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:10:57]  Verifer returned unsat in 2.057091 secs.
[08/11 05:10:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:10:57]  --------------------------------------------------------------------------------
[08/11 05:10:57]  Iteration: 813 (477 solution, 335 counterexamples)
[08/11 05:11:42]  Generator returned sat in 33.557993 secs.
[08/11 05:11:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:11:46]  Verifer returned unsat in 2.560879 secs.
[08/11 05:11:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:11:46]  --------------------------------------------------------------------------------
[08/11 05:11:46]  Iteration: 814 (478 solution, 335 counterexamples)
[08/11 05:12:32]  Generator returned sat in 34.429322 secs.
[08/11 05:12:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:12:36]  Verifer returned unsat in 2.151361 secs.
[08/11 05:12:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:12:36]  --------------------------------------------------------------------------------
[08/11 05:12:36]  Iteration: 815 (479 solution, 335 counterexamples)
[08/11 05:13:21]  Generator returned sat in 33.501159 secs.
[08/11 05:13:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:13:24]  Verifer returned unsat in 1.902040 secs.
[08/11 05:13:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:13:24]  --------------------------------------------------------------------------------
[08/11 05:13:24]  Iteration: 816 (480 solution, 335 counterexamples)
[08/11 05:14:24]  Generator returned sat in 47.724075 secs.
[08/11 05:14:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:14:27]  Verifer returned unsat in 2.028004 secs.
[08/11 05:14:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:14:27]  --------------------------------------------------------------------------------
[08/11 05:14:27]  Iteration: 817 (481 solution, 335 counterexamples)
[08/11 05:15:14]  Generator returned sat in 35.100625 secs.
[08/11 05:15:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:15:17]  Verifer returned unsat in 1.742117 secs.
[08/11 05:15:17]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:15:17]  --------------------------------------------------------------------------------
[08/11 05:15:17]  Iteration: 818 (482 solution, 335 counterexamples)
[08/11 05:16:02]  Generator returned sat in 32.978539 secs.
[08/11 05:16:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:16:04]  Verifer returned unsat in 0.912402 secs.
[08/11 05:16:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:16:04]  --------------------------------------------------------------------------------
[08/11 05:16:04]  Iteration: 819 (483 solution, 335 counterexamples)
[08/11 05:16:49]  Generator returned sat in 33.158086 secs.
[08/11 05:16:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:16:53]  Verifer returned unsat in 2.077962 secs.
[08/11 05:16:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:16:53]  --------------------------------------------------------------------------------
[08/11 05:16:53]  Iteration: 820 (484 solution, 335 counterexamples)
[08/11 05:17:49]  Generator returned sat in 44.354528 secs.
[08/11 05:17:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:17:53]  Verifer returned unsat in 2.898224 secs.
[08/11 05:17:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:17:53]  --------------------------------------------------------------------------------
[08/11 05:17:53]  Iteration: 821 (485 solution, 335 counterexamples)
[08/11 05:18:42]  Generator returned sat in 37.408448 secs.
[08/11 05:18:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:18:45]  Verifer returned unsat in 2.044204 secs.
[08/11 05:18:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:18:45]  --------------------------------------------------------------------------------
[08/11 05:18:45]  Iteration: 822 (486 solution, 335 counterexamples)
[08/11 05:19:32]  Generator returned sat in 35.061359 secs.
[08/11 05:19:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:19:35]  Verifer returned unsat in 1.898396 secs.
[08/11 05:19:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:19:35]  --------------------------------------------------------------------------------
[08/11 05:19:35]  Iteration: 823 (487 solution, 335 counterexamples)
[08/11 05:20:26]  Generator returned sat in 39.254853 secs.
[08/11 05:20:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:20:27]  Verifer returned unsat in 0.395746 secs.
[08/11 05:20:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:20:27]  --------------------------------------------------------------------------------
[08/11 05:20:27]  Iteration: 824 (488 solution, 335 counterexamples)
[08/11 05:21:26]  Generator returned sat in 46.718148 secs.
[08/11 05:21:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:21:27]  Verifer returned unsat in 0.446340 secs.
[08/11 05:21:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:21:27]  --------------------------------------------------------------------------------
[08/11 05:21:27]  Iteration: 825 (489 solution, 335 counterexamples)
[08/11 05:22:21]  Generator returned sat in 42.080719 secs.
[08/11 05:22:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:22:23]  Improved gap from 1/30 to 100
[08/11 05:22:23]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 05:22:23]  Verifer returned sat in 0.635174 secs.
[08/11 05:22:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -104011.220703 -104111.220703  67811.874512 -104011.220703     0.049805 -104111.220703    0.050049   99.949951       99.949951     1.0   -104111.220703            -1             -1     -1
1 -104011.220703 -104111.220703  67811.874512 -104011.220703     0.050000 -104111.220703    0.050049   99.949951       -0.050049     1.0   -104111.220703         False          False   True
2 -104011.120850 -104011.220703  67811.874512 -104011.120850   100.049805 -104011.220703    0.050049    0.049805      -99.950195     1.0   -104111.220703         False          False   True
3 -103911.120850 -103911.220703  67811.874512 -103911.120850   100.049805 -103911.220703    0.050049    0.049805      -99.950195     1.0   -104111.220703         False          False   True
4 -103610.620850 -103711.220703  67811.874512 -103610.620850   300.549805 -103711.220703    0.050049  100.549805      100.549805     1.0   -104111.220703         False          False   True
5 -103010.120850 -103711.220703  67811.874512 -103010.120850   701.049805 -103711.220703    0.050049  701.049805      601.049805     1.0   -104111.220703         False          False   True
6 -102709.620850 -103610.620850  67811.874512 -102709.620850  1001.549805 -103610.620850  100.949951  800.050049      700.649902     2.0   -104111.220703         False          False   True
7 -102709.620850 -103412.220703  67811.874512 -102709.620850   499.774902 -103412.220703  100.949951  601.649902      600.649902     3.0   -102810.570801          True           True   True
8 -102709.620850 -103311.220703  67811.874512 -102709.620850   301.000000 -103311.220703  100.949951  500.649902      500.649902     4.0   -102810.570801         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1434931/2048.[0m
[08/11 05:22:24]  --------------------------------------------------------------------------------
[08/11 05:22:24]  Iteration: 826 (489 solution, 336 counterexamples)
[08/11 05:23:14]  Generator returned sat in 38.655748 secs.
[08/11 05:23:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:23:15]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/11 05:23:15]  Verifer returned sat in 0.170600 secs.
[08/11 05:23:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -104011.220703 -104111.220703  67811.874512 -104011.220703     0.049805 -104111.220703    0.050049   99.949951       99.949951     1.0   -104111.220703            -1             -1     -1
1 -104011.220703 -104111.220703  67811.874512 -104011.220703     0.050000 -104111.220703    0.050049   99.949951       -0.050049     1.0   -104111.220703         False          False   True
2 -104011.145752 -104011.220703  67811.874512 -104011.145752   100.024902 -104011.220703    0.050049    0.024902      -99.975098     1.0   -104111.220703         False          False   True
3 -103911.145752 -103911.220703  67811.874512 -103911.145752   100.024902 -103911.220703    0.050049    0.024902      -99.975098     1.0   -104111.220703         False          False   True
4 -103610.145752 -103711.220703  67811.874512 -103610.145752   301.024902 -103711.220703    0.050049  101.024902      101.024902     1.0   -104111.220703         False          False   True
5 -103009.145752 -103711.220703  67811.874512 -103009.145752   702.024902 -103711.220703    0.050049  702.024902      602.024902     1.0   -104111.220703         False          False   True
6 -102708.145752 -103610.170898  67811.874512 -102708.145752  1003.024902 -103610.170898  102.000244  800.024902      701.074707     2.0   -104111.220703         False          False   True
7 -102708.145752 -103412.195801  67811.874512 -102708.145752   500.512451 -103412.195801  102.000244  602.049805      601.074707     3.0   -102810.145996          True           True   True
8 -102708.145752 -103311.220703  67811.874512 -102708.145752   301.024902 -103311.220703  102.000244  501.074707      501.074707     4.0   -102810.145996         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1435801/2048.[0m
[08/11 05:23:16]  --------------------------------------------------------------------------------
[08/11 05:23:16]  Iteration: 827 (489 solution, 337 counterexamples)
[08/11 05:24:06]  Generator returned sat in 37.856140 secs.
[08/11 05:24:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:24:08]  Improved gap from 1/10 to 100
[08/11 05:24:08]  Improved number of small numbers from 90 to 114 out of a max of 114
[08/11 05:24:08]  Verifer returned sat in 0.904384 secs.
[08/11 05:24:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t     cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -102002.096191 -102102.146484  67811.874268 -102002.096191     0.100098 -102102.146484    0.050049  100.000244      100.000244     1.0   -102102.146484            -1             -1     -1
1 -102002.096191 -102102.146484  67811.874268 -102002.096191     0.049805 -102102.146484    0.050049  100.000244        0.000244     1.0   -102002.146240         False          False   True
2 -101999.946289 -102000.046387  67811.874268 -101999.946289   102.150146 -102000.046387    0.050049    0.050049      -97.849854     1.0   -102002.146240         False          False   True
3 -101902.046143 -101902.146484  67811.874268 -101902.046143    97.950195 -101902.146484    0.050049    0.050293      -99.949707     1.0   -101902.096191         False          False   True
4 -101602.146240 -101802.146484  67811.874268 -101602.146240   299.950195 -101802.146484    0.050049  199.950195       99.950195     1.0   -101902.096191         False          False   True
5 -101200.146240 -101602.146484  67811.874268 -101200.146240   601.950195 -101602.146484    0.050049  401.950195      401.950195     1.0   -101902.096191         False          False   True
6 -100600.246338 -101602.096436  67811.874268 -100600.246338  1001.850098 -101602.096436  201.800049  800.050049      700.100098     2.0   -101902.096191         False          False   True
7 -100600.246338 -101402.146484  67811.874268 -100600.246338   499.925049 -101402.146484  201.800049  600.100098      600.100098     3.0   -100802.046387          True           True   True
8 -100600.246338 -101302.146484  67811.874268 -100600.246338   402.000000 -101302.146484  201.800049  500.100098      500.100098     4.0   -100802.046387         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1433805/2048.[0m
[08/11 05:24:09]  --------------------------------------------------------------------------------
[08/11 05:24:09]  Iteration: 828 (489 solution, 338 counterexamples)
[08/11 05:27:16]  Generator returned sat in 175.537793 secs.
[08/11 05:27:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:27:19]  Improved gap from 1/20 to 23.4375
[08/11 05:27:19]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/11 05:27:19]  Verifer returned sat in 1.839740 secs.
[08/11 05:27:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -100976.358887 -101023.333984  67758.949463 -100976.358887    0.099854 -101023.333984    0.000000   46.975098       46.975098     5.0   -101023.333984            -1             -1     -1
1 -100976.258789 -100999.696289  67811.874023 -100976.258789   47.075195 -100999.696289    0.000000   23.437500       -0.000244     6.0   -101023.333984         False           True  False
2 -100952.721436 -100976.158936  67888.336670 -100952.721436   46.974854 -100976.158936    0.000000   23.437500       -0.000244     1.0   -100952.721436          True           True  False
3 -100481.408936 -100876.258789  67888.336670 -100481.408936  494.750000 -100876.258789  147.874756  246.975098      223.437500     1.0   -100952.721436         False          False  False
4 -100481.408936 -100752.721191  67888.336670 -100481.408936  246.875000 -100752.721191  147.874756  123.437500      123.437500     2.0   -100952.721436         False          False   True
5 -100481.408936 -100652.821045  67888.336670 -100481.408936    1.000000 -100652.821045  147.874756   23.537354       23.437500     3.0   -100952.721436         False          False   True
6 -100481.408936 -100652.721191  67964.899170 -100481.408936    1.000000 -100652.721191  147.874756   23.437500        0.000000     4.0   -100952.721436         False          False   True
7 -100481.408936 -100629.283691  68041.461670 -100481.408936    1.000000 -100629.283691  147.874756    0.000000      -23.437500     5.0   -100952.721436         False          False   True
8 -100234.533936 -100605.846191  68041.461670 -100234.533936  246.875000 -100605.846191  147.874756  223.437500      123.437500     1.0   -100382.408691          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/11 05:27:20]  --------------------------------------------------------------------------------
[08/11 05:27:20]  Iteration: 829 (489 solution, 339 counterexamples)
[08/11 05:29:28]  Generator returned sat in 116.389329 secs.
[08/11 05:29:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:29:31]  Improved gap from 0 to 0
[08/11 05:29:32]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 05:29:32]  Verifer returned sat in 2.704544 secs.
[08/11 05:29:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -100528.615967 -100528.666260  67263.931885 -100528.615967   97.850098 -100528.666260   0.000000    0.050293       -0.099365     9.0   -100528.666260            -1             -1     -1
1 -100430.866211 -100528.516357  67266.281494 -100430.866211   97.800049 -100528.516357   0.000000   97.650146        0.000000     1.0   -100430.866211         False           True  False
2 -100430.766357 -100430.816162  67366.131836 -100430.766357   97.750000 -100430.816162   0.000000    0.049805       -0.049805     1.0   -100430.766357         False          False  False
3 -100330.716309 -100430.716064  67366.131836 -100330.716309  100.099854 -100430.716064   0.000000   99.999756        0.000244     1.0   -100430.766357         False          False  False
4 -100330.716309 -100330.716309  67466.131592 -100330.716309   99.950195 -100330.716309   0.000000    0.000000        0.000000     2.0   -100430.766357         False          False  False
5 -100130.916260 -100330.666260  67466.131592 -100130.916260  199.800049 -100330.666260  99.700195  100.049805        0.099854     1.0   -100430.766357         False          False  False
6 -100130.916260 -100230.666260  67566.031738 -100130.916260    1.500000 -100230.666260  99.700195    0.049805        0.000000     2.0   -100430.766357         False          False   True
7 -100130.466064 -100230.216309  67665.581543 -100130.466064    0.500000 -100230.216309  99.700195    0.050049        0.000000     1.0   -100430.766357         False          False   True
8 -100130.016113 -100230.116211  67665.581787 -100130.016113    0.500000 -100230.116211  99.700195    0.399902      -99.549805     1.0   -100430.766357         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=409/4096.[0m
[08/11 05:29:32]  --------------------------------------------------------------------------------
[08/11 05:29:32]  Iteration: 830 (489 solution, 340 counterexamples)
[08/11 05:30:50]  Generator returned sat in 65.603990 secs.
[08/11 05:30:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:30:59]  Improved gap from 0 to 0
[08/11 05:30:59]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/11 05:30:59]  Verifer returned sat in 8.518226 secs.
[08/11 05:30:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0 -104839.729980 -105239.679932  69446.656738 -104839.729980    0.025146 -105239.679932        0.0  399.949951      399.949951     4.0   -105239.679932            -1             -1    True
1 -104839.729980 -105239.679688  69446.656738 -104839.729980  399.899902 -105239.679688        0.0  399.949707      299.949951     3.0   -105239.679932         False          False    True
2 -104839.729980 -105139.679932  69446.656738 -104839.729980  399.899902 -105139.679932        0.0  299.949951      199.949951     3.0   -105239.679932         False          False    True
3 -104739.780029 -104939.679932  69446.656738 -104739.780029  399.899902 -104939.679932        0.0  199.899902      199.899902     4.0   -105239.679932         False          False    True
4 -104739.780029 -104839.704834  69446.656738 -104739.780029    0.500000 -104839.704834        0.0   99.924805       99.899902     2.0   -105239.679932         False          False    True
5 -104739.780029 -104839.679932  69446.756836 -104739.780029    0.500000 -104839.679932        0.0   99.899902        0.000000     3.0   -105239.679932         False          False    True
6 -104739.780029 -104739.780029  69546.756592 -104739.780029    0.500000 -104739.780029        0.0    0.000000       -0.000244     4.0   -105239.679932         False          False    True
7 -104739.280029 -104739.304932  69646.256592 -104739.280029    0.500000 -104739.304932        0.0    0.024902       -0.000244     1.0   -105239.679932         False          False    True
8 -104738.804932 -104739.255127  69745.781738 -104738.804932    0.500000 -104739.255127        0.0    0.450195        0.000000     1.0   -105239.679932         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=614349/2048.[0m
[08/11 05:31:00]  --------------------------------------------------------------------------------
[08/11 05:31:00]  Iteration: 831 (489 solution, 341 counterexamples)
[08/11 05:32:54]  Generator returned sat in 102.795781 secs.
[08/11 05:32:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:33:03]  Improved gap from 511/20480 to 42.1875
[08/11 05:33:03]  Improved number of small numbers from 103 to 114 out of a max of 114
[08/11 05:33:03]  Verifer returned sat in 7.086064 secs.
[08/11 05:33:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0 -111032.697998 -111132.647949  69576.137207 -111032.697998  379.618750 -111132.647949        0.0   99.949951       99.949951     3.0   -111132.647949            -1             -1    True
1 -110753.079346 -111032.647949  69576.137207 -110753.079346  379.568604 -111032.647949        0.0  279.568604      279.568604     1.0   -110753.079346         False          False    True
2 -110753.029053 -110932.647949  69576.137207 -110753.029053  279.618896 -110932.647949        0.0  179.618896      179.618896     2.0   -110753.029053         False          False    True
3 -110690.460449 -110832.647949  69576.137207 -110690.460449  242.187500 -110832.647949        0.0  142.187500      142.187500     3.0   -110690.460449         False          False    True
4 -110690.460449 -110752.242188  69576.137207 -110690.460449  121.593750 -110752.242188        0.0   61.781738       42.187500     2.0   -110690.460449         False          False    True
5 -110690.460449 -110732.647949  69633.949707 -110690.460449   61.296875 -110732.647949        0.0   42.187500        0.000000     3.0   -110690.460449         False          False    True
6 -110690.460449 -110690.460449  69691.762207 -110690.460449   31.148438 -110690.460449        0.0    0.000000      -42.187500     4.0   -110690.460449         False          False    True
7 -110602.292480 -110648.272949  69745.781494 -110602.292480   88.167969 -110648.272949        0.0   45.980469       -0.000244     1.0   -110690.460449         False           True   False
8 -110550.704346 -110602.292236  69745.781494 -110550.704346   97.568604 -110602.292236        0.0   51.587891      -48.412109     1.0   -110690.460449         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1145319/4096.[0m
[08/11 05:33:04]  --------------------------------------------------------------------------------
[08/11 05:33:04]  Iteration: 832 (489 solution, 342 counterexamples)
[08/11 05:35:45]  Generator returned sat in 150.266379 secs.
[08/11 05:35:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:35:48]  Improved gap from 1/144 to 0
[08/11 05:35:50]  Improved number of small numbers from 60 to 73 out of a max of 114
[08/11 05:35:50]  Verifer returned sat in 3.184954 secs.
[08/11 05:35:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -110607.622559 -110706.233554  69051.222900 -110607.622559    0.055420 -110706.233554   0.055556  98.555439        0.055528     1.0   -110706.233554            -1             -1     -1
1 -110607.622559 -110607.733554  69151.167236 -110607.622559    0.055420 -110607.733554   0.055556   0.055439       -0.000136     2.0   -110706.233554         False          False   True
2 -110607.511331 -110607.622442  69251.055908 -110607.511331    0.166667 -110607.622442   0.055556   0.055556       -0.000237     1.0   -110706.233554          True           True  False
3 -110607.400220 -110607.511331  69350.945034 -110607.400220    0.166667 -110607.511331   0.055556   0.055556        0.000000     1.0   -110706.233554         False          False  False
4 -110507.233554 -110557.011230  69350.945034 -110507.233554  100.222222 -110557.011230   0.111111  49.666566        0.111111     1.0   -110706.233554         False          False  False
5 -110507.233554 -110507.455776  69450.833923 -110507.233554   49.611111 -110507.455776   0.111111   0.111111        0.000000     2.0   -110706.233554         False          False   True
6 -110405.677998 -110457.455776  69450.833923 -110405.677998  101.666667 -110457.455776   1.555556  50.222222        0.111111     1.0   -110407.233554          True           True  False
7 -110405.566887 -110407.177998  69550.611572 -110405.566887   50.333333 -110407.177998   1.555556   0.055556       -0.000128     1.0   -110407.233554         False          False   True
8 -110329.622442 -110407.066895  69550.611572 -110329.622442   76.000000 -110407.066895   1.555556  75.888896      -24.055684     1.0   -110407.233554         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/9.[0m
[08/11 05:35:51]  --------------------------------------------------------------------------------
[08/11 05:35:51]  Iteration: 833 (489 solution, 343 counterexamples)
[08/11 05:41:28]  Generator returned sat in 325.731922 secs.
[08/11 05:41:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:41:32]  Verifer returned unsat in 3.058850 secs.
[08/11 05:41:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:41:33]  --------------------------------------------------------------------------------
[08/11 05:41:33]  Iteration: 834 (490 solution, 343 counterexamples)
[08/11 05:42:27]  Generator returned sat in 42.539130 secs.
[08/11 05:42:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:42:30]  Verifer returned unsat in 2.186733 secs.
[08/11 05:42:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:42:30]  --------------------------------------------------------------------------------
[08/11 05:42:30]  Iteration: 835 (491 solution, 343 counterexamples)
[08/11 05:43:32]  Generator returned sat in 50.408784 secs.
[08/11 05:43:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:43:35]  Verifer returned unsat in 0.874654 secs.
[08/11 05:43:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:43:35]  --------------------------------------------------------------------------------
[08/11 05:43:35]  Iteration: 836 (492 solution, 343 counterexamples)
[08/11 05:44:23]  Generator returned sat in 36.380885 secs.
[08/11 05:44:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:44:25]  Verifer returned unsat in 0.740115 secs.
[08/11 05:44:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:44:25]  --------------------------------------------------------------------------------
[08/11 05:44:25]  Iteration: 837 (493 solution, 343 counterexamples)
[08/11 05:45:14]  Generator returned sat in 36.770077 secs.
[08/11 05:45:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:45:16]  Verifer returned unsat in 1.196226 secs.
[08/11 05:45:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:45:17]  --------------------------------------------------------------------------------
[08/11 05:45:17]  Iteration: 838 (494 solution, 343 counterexamples)
[08/11 05:48:17]  Generator returned sat in 168.513372 secs.
[08/11 05:48:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:48:26]  Improved gap from 11/244 to 0
[08/11 05:48:29]  Improved number of small numbers from 59 to 74 out of a max of 114
[08/11 05:48:29]  Verifer returned sat in 10.397066 secs.
[08/11 05:48:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0 -112953.390381 -112967.923554  69398.933838 -112953.390381    0.099854 -112967.923554   0.000000  14.533173       14.533088     3.0   -112967.923554            -1             -1   False
1 -112953.390381 -112953.489990  69484.400391 -112953.390381    0.099854 -112953.489990   0.000000   0.099609       -0.000359     3.0   -112967.923554         False          False   False
2 -112853.489990 -112853.490220  69484.400635 -112853.489990  100.000000 -112853.490220   0.000000   0.000230       -0.099724     1.0   -112967.923554         False          False   False
3 -112853.290220 -112853.390220  69584.300589 -112853.290220    0.200000 -112853.390220   0.000000   0.100000        0.000000     1.0   -112853.290220         False          False   False
4 -112738.856887 -112812.456887  69584.300589 -112738.856887  114.533333 -112812.456887  14.233333  59.366667        0.200000     1.0   -112853.290220         False          False   False
5 -112738.856887 -112753.290220  69684.000732 -112738.856887   59.266667 -112753.290220  14.233333   0.200000       -0.099857     2.0   -112853.290220         False          False    True
6 -112659.323554 -112752.990220  69704.567139 -112659.323554   79.733333 -112752.990220  14.233333  79.433333       -0.000117     1.0   -112853.290220         False          False    True
7 -112648.690220 -112673.456887  69793.933923 -112648.690220   90.066667 -112673.456887  14.233333  10.533333        0.000000     1.0   -112853.290220         False          False    True
8 -112544.690220 -112662.556885  69793.933923 -112544.690220  114.533333 -112662.556885  18.033333  99.833331        0.200000     1.0   -112853.290220         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1/5.[0m
[08/11 05:48:29]  --------------------------------------------------------------------------------
[08/11 05:48:29]  Iteration: 839 (494 solution, 344 counterexamples)
[08/11 05:54:40]  Generator returned sat in 358.781109 secs.
[08/11 05:54:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 05:54:52]  Improved gap from 1/10 to 1.5625
[08/11 05:54:54]  Improved number of small numbers from 62 to 65 out of a max of 114
[08/11 05:54:54]  Verifer returned sat in 11.960724 secs.
[08/11 05:54:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -111879.193440 -112006.414747  69398.933594 -111879.193440  100.020508 -112006.414747   0.005114  127.216193      100.004869     7.0   -112006.414747            -1             -1     -1
1 -111879.193440 -111879.203667  69398.933594 -111879.193440  100.015381 -111879.203667   0.005114    0.005114        0.004869     7.0   -111879.198554         False           True   True
2 -111779.188326 -111779.250542  69398.933594 -111779.188326  100.010227 -111779.250542   0.005114    0.057102        0.009983     1.0   -111779.193440         False           True  False
3 -111777.620713 -111779.188326  69497.355997 -111777.620713    1.624716 -111779.188326   0.005114    1.562500        0.000000     1.0   -111777.625826         False          False  False
4 -111663.757645 -111733.281224  69497.355997 -111663.757645  115.425568 -111733.281224  13.857955   55.665625        0.010227     1.0   -111777.625826         False          False  False
5 -111662.210485 -111677.625826  69595.793497 -111662.210485   57.212784 -111677.625826  13.857955    1.557386       -0.005114     2.0   -111777.625826         False          False   True
6 -111583.349122 -111676.063326  69616.937012 -111583.349122   80.418750 -111676.063326  13.857955   78.856250       -0.000235     1.0   -111597.207076          True           True  False
7 -111569.433497 -111597.201963  69703.016508 -111569.433497   92.771875 -111597.201963  13.857955   13.910511       -0.005114     1.0   -111597.207076         False          False  False
8 -111467.918440 -111583.286133  69703.016508 -111467.918440  115.425568 -111583.286133  15.357670  100.010022        0.010227     1.0   -111597.207076         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=9/880.[0m
[08/11 05:54:54]  --------------------------------------------------------------------------------
[08/11 05:54:54]  Iteration: 840 (494 solution, 345 counterexamples)
[08/11 06:00:54]  Generator returned sat in 347.806826 secs.
[08/11 06:00:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:00:59]  Verifer returned unsat in 3.646440 secs.
[08/11 06:00:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:00:59]  --------------------------------------------------------------------------------
[08/11 06:00:59]  Iteration: 841 (495 solution, 345 counterexamples)
[08/11 06:01:50]  Generator returned sat in 38.521472 secs.
[08/11 06:01:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:01:53]  Verifer returned unsat in 1.695136 secs.
[08/11 06:01:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:01:53]  --------------------------------------------------------------------------------
[08/11 06:01:53]  Iteration: 842 (496 solution, 345 counterexamples)
[08/11 06:02:51]  Generator returned sat in 45.862146 secs.
[08/11 06:02:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:02:54]  Verifer returned unsat in 2.084381 secs.
[08/11 06:02:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:02:54]  --------------------------------------------------------------------------------
[08/11 06:02:54]  Iteration: 843 (497 solution, 345 counterexamples)
[08/11 06:08:21]  Generator returned sat in 314.838581 secs.
[08/11 06:08:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:08:24]  Verifer returned unsat in 1.070658 secs.
[08/11 06:08:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:08:24]  --------------------------------------------------------------------------------
[08/11 06:08:24]  Iteration: 844 (498 solution, 345 counterexamples)
[08/11 06:09:13]  Generator returned sat in 37.453646 secs.
[08/11 06:09:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:09:16]  Verifer returned unsat in 1.501639 secs.
[08/11 06:09:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:09:16]  --------------------------------------------------------------------------------
[08/11 06:09:16]  Iteration: 845 (499 solution, 345 counterexamples)
[08/11 06:10:05]  Generator returned sat in 37.022768 secs.
[08/11 06:10:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:10:08]  Verifer returned unsat in 1.790509 secs.
[08/11 06:10:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:10:08]  --------------------------------------------------------------------------------
[08/11 06:10:08]  Iteration: 846 (500 solution, 345 counterexamples)
[08/11 06:11:10]  Generator returned sat in 50.226377 secs.
[08/11 06:11:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:11:15]  Verifer returned unsat in 2.895928 secs.
[08/11 06:11:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:11:15]  --------------------------------------------------------------------------------
[08/11 06:11:15]  Iteration: 847 (501 solution, 345 counterexamples)
[08/11 06:12:07]  Generator returned sat in 40.558944 secs.
[08/11 06:12:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:12:12]  Verifer returned unsat in 3.349790 secs.
[08/11 06:12:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:12:12]  --------------------------------------------------------------------------------
[08/11 06:12:12]  Iteration: 848 (502 solution, 345 counterexamples)
[08/11 06:13:01]  Generator returned sat in 36.829164 secs.
[08/11 06:13:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:13:04]  Verifer returned unsat in 2.337359 secs.
[08/11 06:13:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:13:05]  --------------------------------------------------------------------------------
[08/11 06:13:05]  Iteration: 849 (503 solution, 345 counterexamples)
[08/11 06:13:53]  Generator returned sat in 36.944390 secs.
[08/11 06:13:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:13:57]  Verifer returned unsat in 2.519861 secs.
[08/11 06:13:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:13:58]  --------------------------------------------------------------------------------
[08/11 06:13:58]  Iteration: 850 (504 solution, 345 counterexamples)
[08/11 06:14:46]  Generator returned sat in 36.842710 secs.
[08/11 06:14:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:14:49]  Verifer returned unsat in 1.864787 secs.
[08/11 06:14:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:14:50]  --------------------------------------------------------------------------------
[08/11 06:14:50]  Iteration: 851 (505 solution, 345 counterexamples)
[08/11 06:17:29]  Generator returned sat in 147.499173 secs.
[08/11 06:17:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:17:31]  Improved gap from 0 to 23.4375
[08/11 06:17:32]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 06:17:32]  Verifer returned sat in 1.494544 secs.
[08/11 06:17:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0 -105679.466064 -105879.465820  75561.798584 -105679.466064  200.000000 -105879.465820    0.000000  199.999756       99.999756     9.0   -105879.465820            -1             -1     -1
1 -105679.466064 -105702.903564  75561.798584 -105679.466064  199.899902 -105702.903564    0.000000   23.437500       -0.000244     9.0   -105679.466064         False           True  False
2 -105503.103516 -105579.466064  75561.798584 -105503.103516  199.800049 -105579.466064    0.000000   76.362549       76.362305     1.0   -105503.103516         False           True  False
3 -105086.716064 -105503.003174  75561.798584 -105086.716064  492.750000 -105503.003174  169.312256  246.974854      223.437500     1.0   -105503.103516         False          False  False
4 -105086.716064 -105379.465820  75561.798584 -105086.716064  246.875000 -105379.465820  169.312256  123.437500      123.437500     2.0   -105503.103516         False          False   True
5 -105086.716064 -105279.565918  75561.798584 -105086.716064    1.500000 -105279.565918  169.312256   23.537598       23.437500     3.0   -105503.103516         False          False   True
6 -105086.716064 -105279.465820  75638.361084 -105086.716064    1.500000 -105279.465820  169.312256   23.437500        0.000000     4.0   -105503.103516         False          False   True
7 -105086.716064 -105256.028320  75711.898438 -105086.716064    1.500000 -105256.028320  169.312256    0.000000      -26.462646     5.0   -105503.103516         False          False   True
8 -104839.841064 -105229.565674  75711.898438 -104839.841064  246.875000 -105229.565674  169.312256  220.412354      120.412354     1.0   -105009.153320          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/11 06:17:32]  --------------------------------------------------------------------------------
[08/11 06:17:32]  Iteration: 852 (505 solution, 346 counterexamples)
[08/11 06:20:29]  Generator returned sat in 164.317579 secs.
[08/11 06:20:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:20:32]  Verifer returned unsat in 2.003803 secs.
[08/11 06:20:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:20:32]  --------------------------------------------------------------------------------
[08/11 06:20:32]  Iteration: 853 (506 solution, 346 counterexamples)
[08/11 06:21:38]  Generator returned sat in 54.356426 secs.
[08/11 06:21:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:21:42]  Verifer returned unsat in 1.754158 secs.
[08/11 06:21:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:21:42]  --------------------------------------------------------------------------------
[08/11 06:21:42]  Iteration: 854 (507 solution, 346 counterexamples)
[08/11 06:23:39]  Generator returned sat in 105.529601 secs.
[08/11 06:23:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:23:43]  Verifer returned unsat in 2.344075 secs.
[08/11 06:23:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:23:43]  --------------------------------------------------------------------------------
[08/11 06:23:43]  Iteration: 855 (508 solution, 346 counterexamples)
[08/11 06:24:36]  Generator returned sat in 40.720241 secs.
[08/11 06:24:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:24:40]  Verifer returned unsat in 2.172521 secs.
[08/11 06:24:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:24:40]  --------------------------------------------------------------------------------
[08/11 06:24:40]  Iteration: 856 (509 solution, 346 counterexamples)
[08/11 06:25:27]  Generator returned sat in 35.854707 secs.
[08/11 06:25:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:25:32]  Verifer returned unsat in 2.947161 secs.
[08/11 06:25:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:25:32]  --------------------------------------------------------------------------------
[08/11 06:25:32]  Iteration: 857 (510 solution, 346 counterexamples)
[08/11 06:26:56]  Generator returned sat in 72.092717 secs.
[08/11 06:26:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:26:59]  Verifer returned unsat in 1.718007 secs.
[08/11 06:26:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:26:59]  --------------------------------------------------------------------------------
[08/11 06:26:59]  Iteration: 858 (511 solution, 346 counterexamples)
[08/11 06:27:52]  Generator returned sat in 40.350502 secs.
[08/11 06:27:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:27:55]  Verifer returned unsat in 1.552043 secs.
[08/11 06:27:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:27:55]  --------------------------------------------------------------------------------
[08/11 06:27:55]  Iteration: 859 (512 solution, 346 counterexamples)
[08/11 06:28:45]  Generator returned sat in 37.742840 secs.
[08/11 06:28:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:28:48]  Verifer returned unsat in 1.745824 secs.
[08/11 06:28:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:28:48]  --------------------------------------------------------------------------------
[08/11 06:28:48]  Iteration: 860 (513 solution, 346 counterexamples)
[08/11 06:29:37]  Generator returned sat in 37.550945 secs.
[08/11 06:29:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:29:39]  Verifer returned unsat in 0.450193 secs.
[08/11 06:29:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:29:39]  --------------------------------------------------------------------------------
[08/11 06:29:39]  Iteration: 861 (514 solution, 346 counterexamples)
[08/11 06:30:40]  Generator returned sat in 48.819446 secs.
[08/11 06:30:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:30:43]  Verifer returned unsat in 1.744254 secs.
[08/11 06:30:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:30:44]  --------------------------------------------------------------------------------
[08/11 06:30:44]  Iteration: 862 (515 solution, 346 counterexamples)
[08/11 06:32:34]  Generator returned sat in 98.585752 secs.
[08/11 06:32:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:32:36]  Verifer returned unsat in 0.669544 secs.
[08/11 06:32:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:32:36]  --------------------------------------------------------------------------------
[08/11 06:32:36]  Iteration: 863 (516 solution, 346 counterexamples)
[08/11 06:33:25]  Generator returned sat in 36.983319 secs.
[08/11 06:33:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:33:27]  Verifer returned unsat in 0.658349 secs.
[08/11 06:33:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:33:27]  --------------------------------------------------------------------------------
[08/11 06:33:27]  Iteration: 864 (517 solution, 346 counterexamples)
[08/11 06:34:18]  Generator returned sat in 38.795309 secs.
[08/11 06:34:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:34:20]  Verifer returned unsat in 0.847503 secs.
[08/11 06:34:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:34:20]  --------------------------------------------------------------------------------
[08/11 06:34:20]  Iteration: 865 (518 solution, 346 counterexamples)
[08/11 06:35:18]  Generator returned sat in 45.907856 secs.
[08/11 06:35:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:35:20]  Verifer returned unsat in 0.505872 secs.
[08/11 06:35:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:35:20]  --------------------------------------------------------------------------------
[08/11 06:35:20]  Iteration: 866 (519 solution, 346 counterexamples)
[08/11 06:36:33]  Generator returned sat in 61.389909 secs.
[08/11 06:36:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:36:36]  Verifer returned unsat in 0.800004 secs.
[08/11 06:36:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:36:36]  --------------------------------------------------------------------------------
[08/11 06:36:36]  Iteration: 867 (520 solution, 346 counterexamples)
[08/11 06:37:27]  Generator returned sat in 39.615331 secs.
[08/11 06:37:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:37:30]  Verifer returned unsat in 1.117069 secs.
[08/11 06:37:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:37:30]  --------------------------------------------------------------------------------
[08/11 06:37:30]  Iteration: 868 (521 solution, 346 counterexamples)
[08/11 06:38:25]  Generator returned sat in 43.157247 secs.
[08/11 06:38:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:38:27]  Verifer returned unsat in 0.638868 secs.
[08/11 06:38:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:38:27]  --------------------------------------------------------------------------------
[08/11 06:38:28]  Iteration: 869 (522 solution, 346 counterexamples)
[08/11 06:39:48]  Generator returned sat in 67.973776 secs.
[08/11 06:39:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:39:51]  Verifer returned unsat in 2.073556 secs.
[08/11 06:39:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:39:51]  --------------------------------------------------------------------------------
[08/11 06:39:51]  Iteration: 870 (523 solution, 346 counterexamples)
[08/11 06:40:45]  Generator returned sat in 41.889352 secs.
[08/11 06:40:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:40:51]  Verifer returned unsat in 4.161713 secs.
[08/11 06:40:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:40:51]  --------------------------------------------------------------------------------
[08/11 06:40:51]  Iteration: 871 (524 solution, 346 counterexamples)
[08/11 06:41:41]  Generator returned sat in 38.032274 secs.
[08/11 06:41:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:41:44]  Verifer returned unsat in 1.059479 secs.
[08/11 06:41:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:41:44]  --------------------------------------------------------------------------------
[08/11 06:41:44]  Iteration: 872 (525 solution, 346 counterexamples)
[08/11 06:42:33]  Generator returned sat in 38.032295 secs.
[08/11 06:42:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:42:37]  Verifer returned unsat in 2.559762 secs.
[08/11 06:42:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:42:38]  --------------------------------------------------------------------------------
[08/11 06:42:38]  Iteration: 873 (526 solution, 346 counterexamples)
[08/11 06:43:27]  Generator returned sat in 37.753666 secs.
[08/11 06:43:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:43:31]  Verifer returned unsat in 2.262715 secs.
[08/11 06:43:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:43:31]  --------------------------------------------------------------------------------
[08/11 06:43:31]  Iteration: 874 (527 solution, 346 counterexamples)
[08/11 06:44:22]  Generator returned sat in 38.312294 secs.
[08/11 06:44:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:44:25]  Verifer returned unsat in 1.769502 secs.
[08/11 06:44:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:44:25]  --------------------------------------------------------------------------------
[08/11 06:44:25]  Iteration: 875 (528 solution, 346 counterexamples)
[08/11 06:45:34]  Generator returned sat in 56.587575 secs.
[08/11 06:45:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:45:36]  Verifer returned unsat in 0.809202 secs.
[08/11 06:45:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:45:36]  --------------------------------------------------------------------------------
[08/11 06:45:36]  Iteration: 876 (529 solution, 346 counterexamples)
[08/11 06:46:40]  Generator returned sat in 52.270715 secs.
[08/11 06:46:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:46:42]  Verifer returned unsat in 0.506880 secs.
[08/11 06:46:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:46:42]  --------------------------------------------------------------------------------
[08/11 06:46:42]  Iteration: 877 (530 solution, 346 counterexamples)
[08/11 06:47:32]  Generator returned sat in 37.274047 secs.
[08/11 06:47:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:47:34]  Verifer returned unsat in 0.462595 secs.
[08/11 06:47:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:47:34]  --------------------------------------------------------------------------------
[08/11 06:47:34]  Iteration: 878 (531 solution, 346 counterexamples)
[08/11 06:48:35]  Generator returned sat in 49.423965 secs.
[08/11 06:48:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:48:38]  Verifer returned unsat in 1.122732 secs.
[08/11 06:48:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:48:38]  --------------------------------------------------------------------------------
[08/11 06:48:38]  Iteration: 879 (532 solution, 346 counterexamples)
[08/11 06:49:29]  Generator returned sat in 39.172790 secs.
[08/11 06:49:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:49:32]  Verifer returned unsat in 1.120371 secs.
[08/11 06:49:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:49:32]  --------------------------------------------------------------------------------
[08/11 06:49:32]  Iteration: 880 (533 solution, 346 counterexamples)
[08/11 06:50:20]  Generator returned sat in 36.378776 secs.
[08/11 06:50:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:50:22]  Verifer returned unsat in 0.848649 secs.
[08/11 06:50:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:50:22]  --------------------------------------------------------------------------------
[08/11 06:50:22]  Iteration: 881 (534 solution, 346 counterexamples)
[08/11 06:51:12]  Generator returned sat in 37.595120 secs.
[08/11 06:51:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:51:15]  Verifer returned unsat in 0.857630 secs.
[08/11 06:51:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:51:15]  --------------------------------------------------------------------------------
[08/11 06:51:15]  Iteration: 882 (535 solution, 346 counterexamples)
[08/11 06:52:05]  Generator returned sat in 37.671238 secs.
[08/11 06:52:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:52:07]  Verifer returned unsat in 0.861940 secs.
[08/11 06:52:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:52:07]  --------------------------------------------------------------------------------
[08/11 06:52:07]  Iteration: 883 (536 solution, 346 counterexamples)
[08/11 06:53:09]  Generator returned sat in 49.212845 secs.
[08/11 06:53:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:53:12]  Verifer returned unsat in 2.052579 secs.
[08/11 06:53:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:53:12]  --------------------------------------------------------------------------------
[08/11 06:53:12]  Iteration: 884 (537 solution, 346 counterexamples)
[08/11 06:54:05]  Generator returned sat in 40.953989 secs.
[08/11 06:54:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:54:08]  Verifer returned unsat in 1.571543 secs.
[08/11 06:54:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:54:08]  --------------------------------------------------------------------------------
[08/11 06:54:08]  Iteration: 885 (538 solution, 346 counterexamples)
[08/11 06:54:59]  Generator returned sat in 38.676001 secs.
[08/11 06:55:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:55:03]  Verifer returned unsat in 2.088770 secs.
[08/11 06:55:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:55:03]  --------------------------------------------------------------------------------
[08/11 06:55:03]  Iteration: 886 (539 solution, 346 counterexamples)
[08/11 06:56:04]  Generator returned sat in 50.059714 secs.
[08/11 06:56:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:56:08]  Verifer returned unsat in 2.156882 secs.
[08/11 06:56:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:56:08]  --------------------------------------------------------------------------------
[08/11 06:56:08]  Iteration: 887 (540 solution, 346 counterexamples)
[08/11 06:56:59]  Generator returned sat in 38.825350 secs.
[08/11 06:57:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:57:03]  Verifer returned unsat in 2.645006 secs.
[08/11 06:57:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:57:03]  --------------------------------------------------------------------------------
[08/11 06:57:03]  Iteration: 888 (541 solution, 346 counterexamples)
[08/11 06:57:55]  Generator returned sat in 40.380768 secs.
[08/11 06:57:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:57:59]  Verifer returned unsat in 2.083292 secs.
[08/11 06:57:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:57:59]  --------------------------------------------------------------------------------
[08/11 06:57:59]  Iteration: 889 (542 solution, 346 counterexamples)
[08/11 06:58:52]  Generator returned sat in 41.468088 secs.
[08/11 06:58:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:58:55]  Verifer returned unsat in 1.668215 secs.
[08/11 06:58:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:58:55]  --------------------------------------------------------------------------------
[08/11 06:58:55]  Iteration: 890 (543 solution, 346 counterexamples)
[08/11 06:59:46]  Generator returned sat in 38.220127 secs.
[08/11 06:59:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:59:50]  Verifer returned unsat in 2.772585 secs.
[08/11 06:59:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 06:59:50]  --------------------------------------------------------------------------------
[08/11 06:59:50]  Iteration: 891 (544 solution, 346 counterexamples)
[08/11 07:00:41]  Generator returned sat in 39.406595 secs.
[08/11 07:00:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:00:45]  Verifer returned unsat in 1.720406 secs.
[08/11 07:00:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:00:45]  --------------------------------------------------------------------------------
[08/11 07:00:45]  Iteration: 892 (545 solution, 346 counterexamples)
[08/11 07:02:08]  Generator returned sat in 71.396851 secs.
[08/11 07:02:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:02:16]  Verifer returned unsat in 5.749083 secs.
[08/11 07:02:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:02:16]  --------------------------------------------------------------------------------
[08/11 07:02:16]  Iteration: 893 (546 solution, 346 counterexamples)
[08/11 07:03:07]  Generator returned sat in 39.605383 secs.
[08/11 07:03:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:03:13]  Verifer returned unsat in 4.416437 secs.
[08/11 07:03:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:03:13]  --------------------------------------------------------------------------------
[08/11 07:03:13]  Iteration: 894 (547 solution, 346 counterexamples)
[08/11 07:04:08]  Generator returned sat in 43.100631 secs.
[08/11 07:04:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:04:13]  Verifer returned unsat in 2.911074 secs.
[08/11 07:04:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:04:13]  --------------------------------------------------------------------------------
[08/11 07:04:13]  Iteration: 895 (548 solution, 346 counterexamples)
[08/11 07:05:37]  Generator returned sat in 72.465663 secs.
[08/11 07:05:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:05:43]  Verifer returned unsat in 4.581022 secs.
[08/11 07:05:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:05:43]  --------------------------------------------------------------------------------
[08/11 07:05:43]  Iteration: 896 (549 solution, 346 counterexamples)
[08/11 07:09:58]  Generator returned sat in 242.576962 secs.
[08/11 07:09:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:10:00]  Improved gap from 0 to 23.4375
[08/11 07:10:00]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/11 07:10:00]  Verifer returned sat in 1.162894 secs.
[08/11 07:10:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -71676.198242  -71876.197998  78864.328369 -71676.198242    0.099854 -71876.197998      0.000  199.999756       99.999756     2.0    -71876.197998            -1             -1   False
1  -71676.198242  -71699.635498  78864.328369 -71676.198242    0.100098 -71699.635498      0.000   23.437256       -0.000244     3.0    -71876.197998         False          False   False
2  -71576.198242  -71599.635498  78864.328369 -71576.198242  123.437256 -71599.635498      0.000   23.437256       -0.000244     1.0    -71876.197998         False          False   False
3  -71109.885498  -71499.735352  78864.328369 -71109.885498  489.750000 -71499.735352    142.875  246.974854      223.437500     1.0    -71876.197998         False          False   False
4  -71109.885498  -71376.197998  78864.328369 -71109.885498  246.875000 -71376.197998    142.875  123.437500      123.437500     2.0    -71876.197998         False          False    True
5  -71109.885498  -71376.097900  78864.328369 -71109.885498    1.000000 -71376.097900    142.875  123.337402       23.437500     3.0    -71876.197998         False          False    True
6  -71109.885498  -71276.197998  78940.890869 -71109.885498    1.000000 -71276.197998    142.875   23.437500        0.000000     4.0    -71876.197998         False          False    True
7  -71109.885498  -71252.760498  79017.453369 -71109.885498    1.000000 -71252.760498    142.875    0.000000      -23.437500     5.0    -71876.197998         False          False    True
8  -70863.010498  -71229.322998  79017.453369 -70863.010498  246.875000 -71229.322998    142.875  223.437500      123.437500     1.0    -71005.885498          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/11 07:10:01]  --------------------------------------------------------------------------------
[08/11 07:10:01]  Iteration: 897 (549 solution, 347 counterexamples)
[08/11 07:12:34]  Generator returned sat in 141.364418 secs.
[08/11 07:12:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:12:38]  Verifer returned unsat in 1.824586 secs.
[08/11 07:12:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:12:38]  --------------------------------------------------------------------------------
[08/11 07:12:38]  Iteration: 898 (550 solution, 347 counterexamples)
[08/11 07:14:54]  Generator returned sat in 124.339555 secs.
[08/11 07:14:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:14:59]  Verifer returned unsat in 3.715975 secs.
[08/11 07:14:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:14:59]  --------------------------------------------------------------------------------
[08/11 07:14:59]  Iteration: 899 (551 solution, 347 counterexamples)
[08/11 07:15:51]  Generator returned sat in 40.277647 secs.
[08/11 07:15:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:15:55]  Verifer returned unsat in 2.138109 secs.
[08/11 07:15:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:15:55]  --------------------------------------------------------------------------------
[08/11 07:15:55]  Iteration: 900 (552 solution, 347 counterexamples)
[08/11 07:16:48]  Generator returned sat in 41.518569 secs.
[08/11 07:16:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:16:52]  Verifer returned unsat in 1.658100 secs.
[08/11 07:16:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:16:52]  --------------------------------------------------------------------------------
[08/11 07:16:52]  Iteration: 901 (553 solution, 347 counterexamples)
[08/11 07:17:53]  Generator returned sat in 49.323134 secs.
[08/11 07:17:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:17:58]  Verifer returned unsat in 3.680321 secs.
[08/11 07:17:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:17:58]  --------------------------------------------------------------------------------
[08/11 07:17:58]  Iteration: 902 (554 solution, 347 counterexamples)
[08/11 07:18:58]  Generator returned sat in 47.641330 secs.
[08/11 07:19:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:19:01]  Verifer returned unsat in 1.797594 secs.
[08/11 07:19:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:19:02]  --------------------------------------------------------------------------------
[08/11 07:19:02]  Iteration: 903 (555 solution, 347 counterexamples)
[08/11 07:19:57]  Generator returned sat in 43.472196 secs.
[08/11 07:19:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:20:03]  Verifer returned unsat in 3.923117 secs.
[08/11 07:20:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:20:03]  --------------------------------------------------------------------------------
[08/11 07:20:03]  Iteration: 904 (556 solution, 347 counterexamples)
[08/11 07:20:58]  Generator returned sat in 43.404593 secs.
[08/11 07:20:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:21:02]  Verifer returned unsat in 2.630238 secs.
[08/11 07:21:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:21:02]  --------------------------------------------------------------------------------
[08/11 07:21:02]  Iteration: 905 (557 solution, 347 counterexamples)
[08/11 07:22:44]  Generator returned sat in 89.212079 secs.
[08/11 07:22:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:22:49]  Verifer returned unsat in 3.554181 secs.
[08/11 07:22:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:22:49]  --------------------------------------------------------------------------------
[08/11 07:22:49]  Iteration: 906 (558 solution, 347 counterexamples)
[08/11 07:23:38]  Generator returned sat in 37.091411 secs.
[08/11 07:23:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:23:44]  Verifer returned unsat in 4.325035 secs.
[08/11 07:23:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:23:44]  --------------------------------------------------------------------------------
[08/11 07:23:44]  Iteration: 907 (559 solution, 347 counterexamples)
[08/11 07:24:39]  Generator returned sat in 42.289980 secs.
[08/11 07:24:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:24:42]  Verifer returned unsat in 2.069683 secs.
[08/11 07:24:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:24:42]  --------------------------------------------------------------------------------
[08/11 07:24:42]  Iteration: 908 (560 solution, 347 counterexamples)
[08/11 07:25:36]  Generator returned sat in 42.130060 secs.
[08/11 07:25:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:25:40]  Verifer returned unsat in 1.554105 secs.
[08/11 07:25:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:25:40]  --------------------------------------------------------------------------------
[08/11 07:25:40]  Iteration: 909 (561 solution, 347 counterexamples)
[08/11 07:26:31]  Generator returned sat in 39.359374 secs.
[08/11 07:26:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:26:36]  Verifer returned unsat in 2.922704 secs.
[08/11 07:26:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:26:36]  --------------------------------------------------------------------------------
[08/11 07:26:36]  Iteration: 910 (562 solution, 347 counterexamples)
[08/11 07:29:31]  Generator returned sat in 163.013566 secs.
[08/11 07:29:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:29:33]  Verifer returned unsat in 0.642405 secs.
[08/11 07:29:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:29:33]  --------------------------------------------------------------------------------
[08/11 07:29:33]  Iteration: 911 (563 solution, 347 counterexamples)
[08/11 07:30:27]  Generator returned sat in 41.294564 secs.
[08/11 07:30:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:30:29]  Verifer returned unsat in 0.882288 secs.
[08/11 07:30:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:30:29]  --------------------------------------------------------------------------------
[08/11 07:30:29]  Iteration: 912 (564 solution, 347 counterexamples)
[08/11 07:31:26]  Generator returned sat in 45.290855 secs.
[08/11 07:31:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:31:30]  Verifer returned unsat in 1.959056 secs.
[08/11 07:31:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:31:30]  --------------------------------------------------------------------------------
[08/11 07:31:30]  Iteration: 913 (565 solution, 347 counterexamples)
[08/11 07:32:18]  Generator returned sat in 36.512578 secs.
[08/11 07:32:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:32:22]  Verifer returned unsat in 1.933936 secs.
[08/11 07:32:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:32:22]  --------------------------------------------------------------------------------
[08/11 07:32:22]  Iteration: 914 (566 solution, 347 counterexamples)
[08/11 07:33:25]  Generator returned sat in 50.997425 secs.
[08/11 07:33:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:33:28]  Verifer returned unsat in 1.496637 secs.
[08/11 07:33:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:33:28]  --------------------------------------------------------------------------------
[08/11 07:33:28]  Iteration: 915 (567 solution, 347 counterexamples)
[08/11 07:34:17]  Generator returned sat in 37.265903 secs.
[08/11 07:34:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:34:20]  Verifer returned unsat in 1.246626 secs.
[08/11 07:34:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:34:20]  --------------------------------------------------------------------------------
[08/11 07:34:20]  Iteration: 916 (568 solution, 347 counterexamples)
[08/11 07:35:09]  Generator returned sat in 36.995378 secs.
[08/11 07:35:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:35:13]  Verifer returned unsat in 1.771305 secs.
[08/11 07:35:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:35:13]  --------------------------------------------------------------------------------
[08/11 07:35:13]  Iteration: 917 (569 solution, 347 counterexamples)
[08/11 07:37:36]  Generator returned sat in 131.830223 secs.
[08/11 07:37:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:37:39]  Verifer returned unsat in 0.897007 secs.
[08/11 07:37:39]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:37:39]  --------------------------------------------------------------------------------
[08/11 07:37:39]  Iteration: 918 (570 solution, 347 counterexamples)
[08/11 07:38:29]  Generator returned sat in 38.311629 secs.
[08/11 07:38:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:38:32]  Verifer returned unsat in 0.909742 secs.
[08/11 07:38:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:38:32]  --------------------------------------------------------------------------------
[08/11 07:38:32]  Iteration: 919 (571 solution, 347 counterexamples)
[08/11 07:39:25]  Generator returned sat in 41.145246 secs.
[08/11 07:39:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:39:27]  Verifer returned unsat in 0.948725 secs.
[08/11 07:39:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:39:27]  --------------------------------------------------------------------------------
[08/11 07:39:27]  Iteration: 920 (572 solution, 347 counterexamples)
[08/11 07:40:21]  Generator returned sat in 41.350599 secs.
[08/11 07:40:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:40:25]  Verifer returned unsat in 2.132893 secs.
[08/11 07:40:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:40:25]  --------------------------------------------------------------------------------
[08/11 07:40:25]  Iteration: 921 (573 solution, 347 counterexamples)
[08/11 07:41:21]  Generator returned sat in 44.067600 secs.
[08/11 07:41:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:41:23]  Verifer returned unsat in 0.738441 secs.
[08/11 07:41:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:41:23]  --------------------------------------------------------------------------------
[08/11 07:41:23]  Iteration: 922 (574 solution, 347 counterexamples)
[08/11 07:42:17]  Generator returned sat in 41.528473 secs.
[08/11 07:42:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:42:19]  Verifer returned unsat in 0.550081 secs.
[08/11 07:42:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:42:19]  --------------------------------------------------------------------------------
[08/11 07:42:19]  Iteration: 923 (575 solution, 347 counterexamples)
[08/11 07:43:13]  Generator returned sat in 41.742882 secs.
[08/11 07:43:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:43:15]  Verifer returned unsat in 0.579212 secs.
[08/11 07:43:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:43:15]  --------------------------------------------------------------------------------
[08/11 07:43:15]  Iteration: 924 (576 solution, 347 counterexamples)
[08/11 07:44:12]  Generator returned sat in 44.686819 secs.
[08/11 07:44:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:44:16]  Verifer returned unsat in 2.144941 secs.
[08/11 07:44:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:44:16]  --------------------------------------------------------------------------------
[08/11 07:44:16]  Iteration: 925 (577 solution, 347 counterexamples)
[08/11 07:45:16]  Generator returned sat in 48.565026 secs.
[08/11 07:45:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:45:20]  Verifer returned unsat in 2.041199 secs.
[08/11 07:45:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:45:20]  --------------------------------------------------------------------------------
[08/11 07:45:20]  Iteration: 926 (578 solution, 347 counterexamples)
[08/11 07:46:43]  Generator returned sat in 70.942144 secs.
[08/11 07:46:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:46:48]  Verifer returned unsat in 3.055809 secs.
[08/11 07:46:48]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:46:48]  --------------------------------------------------------------------------------
[08/11 07:46:48]  Iteration: 927 (579 solution, 347 counterexamples)
[08/11 07:48:07]  Generator returned sat in 66.847190 secs.
[08/11 07:48:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:48:11]  Verifer returned unsat in 2.591684 secs.
[08/11 07:48:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:48:11]  --------------------------------------------------------------------------------
[08/11 07:48:11]  Iteration: 928 (580 solution, 347 counterexamples)
[08/11 07:49:31]  Generator returned sat in 67.640411 secs.
[08/11 07:49:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:49:35]  Verifer returned unsat in 1.823882 secs.
[08/11 07:49:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:49:35]  --------------------------------------------------------------------------------
[08/11 07:49:35]  Iteration: 929 (581 solution, 347 counterexamples)
[08/11 07:50:55]  Generator returned sat in 68.574859 secs.
[08/11 07:50:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:50:59]  Verifer returned unsat in 2.497459 secs.
[08/11 07:50:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:51:00]  --------------------------------------------------------------------------------
[08/11 07:51:00]  Iteration: 930 (582 solution, 347 counterexamples)
[08/11 07:52:33]  Generator returned sat in 81.157134 secs.
[08/11 07:52:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:52:36]  Verifer returned unsat in 1.286816 secs.
[08/11 07:52:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:52:36]  --------------------------------------------------------------------------------
[08/11 07:52:36]  Iteration: 931 (583 solution, 347 counterexamples)
[08/11 07:54:07]  Generator returned sat in 78.984454 secs.
[08/11 07:54:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:54:11]  Verifer returned unsat in 2.343422 secs.
[08/11 07:54:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:54:11]  --------------------------------------------------------------------------------
[08/11 07:54:11]  Iteration: 932 (584 solution, 347 counterexamples)
[08/11 07:57:23]  Generator returned sat in 180.672163 secs.
[08/11 07:57:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:57:26]  Verifer returned unsat in 0.923957 secs.
[08/11 07:57:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:57:26]  --------------------------------------------------------------------------------
[08/11 07:57:26]  Iteration: 933 (585 solution, 347 counterexamples)
[08/11 07:58:14]  Generator returned sat in 36.217870 secs.
[08/11 07:58:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:58:18]  Verifer returned unsat in 2.164231 secs.
[08/11 07:58:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:58:18]  --------------------------------------------------------------------------------
[08/11 07:58:18]  Iteration: 934 (586 solution, 347 counterexamples)
[08/11 07:59:07]  Generator returned sat in 37.043461 secs.
[08/11 07:59:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:59:09]  Verifer returned unsat in 1.008564 secs.
[08/11 07:59:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 07:59:10]  --------------------------------------------------------------------------------
[08/11 07:59:10]  Iteration: 935 (587 solution, 347 counterexamples)
[08/11 07:59:59]  Generator returned sat in 37.598360 secs.
[08/11 08:00:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:00:01]  Verifer returned unsat in 0.679847 secs.
[08/11 08:00:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:00:01]  --------------------------------------------------------------------------------
[08/11 08:00:01]  Iteration: 936 (588 solution, 347 counterexamples)
[08/11 08:00:51]  Generator returned sat in 37.057604 secs.
[08/11 08:00:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:00:53]  Verifer returned unsat in 0.868161 secs.
[08/11 08:00:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:00:53]  --------------------------------------------------------------------------------
[08/11 08:00:53]  Iteration: 937 (589 solution, 347 counterexamples)
[08/11 08:01:42]  Generator returned sat in 36.734357 secs.
[08/11 08:01:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:01:44]  Verifer returned unsat in 0.804221 secs.
[08/11 08:01:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:01:45]  --------------------------------------------------------------------------------
[08/11 08:01:45]  Iteration: 938 (590 solution, 347 counterexamples)
[08/11 08:02:39]  Generator returned sat in 42.677761 secs.
[08/11 08:02:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:02:43]  Verifer returned unsat in 2.264628 secs.
[08/11 08:02:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:02:43]  --------------------------------------------------------------------------------
[08/11 08:02:43]  Iteration: 939 (591 solution, 347 counterexamples)
[08/11 08:03:31]  Generator returned sat in 36.144219 secs.
[08/11 08:03:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:03:35]  Verifer returned unsat in 2.310288 secs.
[08/11 08:03:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:03:35]  --------------------------------------------------------------------------------
[08/11 08:03:35]  Iteration: 940 (592 solution, 347 counterexamples)
[08/11 08:04:46]  Generator returned sat in 58.750381 secs.
[08/11 08:04:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:04:49]  Verifer returned unsat in 0.745596 secs.
[08/11 08:04:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:04:49]  --------------------------------------------------------------------------------
[08/11 08:04:49]  Iteration: 941 (593 solution, 347 counterexamples)
[08/11 08:05:44]  Generator returned sat in 42.936260 secs.
[08/11 08:05:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:05:46]  Verifer returned unsat in 0.823511 secs.
[08/11 08:05:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:05:46]  --------------------------------------------------------------------------------
[08/11 08:05:46]  Iteration: 942 (594 solution, 347 counterexamples)
[08/11 08:06:38]  Generator returned sat in 39.602026 secs.
[08/11 08:06:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:06:40]  Verifer returned unsat in 0.745432 secs.
[08/11 08:06:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:06:40]  --------------------------------------------------------------------------------
[08/11 08:06:40]  Iteration: 943 (595 solution, 347 counterexamples)
[08/11 08:07:40]  Generator returned sat in 47.546844 secs.
[08/11 08:07:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:07:42]  Verifer returned unsat in 0.762283 secs.
[08/11 08:07:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:07:42]  --------------------------------------------------------------------------------
[08/11 08:07:42]  Iteration: 944 (596 solution, 347 counterexamples)
[08/11 08:08:34]  Generator returned sat in 39.957834 secs.
[08/11 08:08:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:08:37]  Verifer returned unsat in 0.859291 secs.
[08/11 08:08:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:08:37]  --------------------------------------------------------------------------------
[08/11 08:08:37]  Iteration: 945 (597 solution, 347 counterexamples)
[08/11 08:09:29]  Generator returned sat in 40.073256 secs.
[08/11 08:09:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:09:31]  Verifer returned unsat in 0.971383 secs.
[08/11 08:09:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:09:31]  --------------------------------------------------------------------------------
[08/11 08:09:31]  Iteration: 946 (598 solution, 347 counterexamples)
[08/11 08:10:22]  Generator returned sat in 39.311831 secs.
[08/11 08:10:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:10:25]  Verifer returned unsat in 0.827980 secs.
[08/11 08:10:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:10:25]  --------------------------------------------------------------------------------
[08/11 08:10:25]  Iteration: 947 (599 solution, 347 counterexamples)
[08/11 08:11:24]  Generator returned sat in 47.447958 secs.
[08/11 08:11:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:11:27]  Verifer returned unsat in 0.959304 secs.
[08/11 08:11:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:11:27]  --------------------------------------------------------------------------------
[08/11 08:11:27]  Iteration: 948 (600 solution, 347 counterexamples)
[08/11 08:12:18]  Generator returned sat in 39.088932 secs.
[08/11 08:12:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:12:20]  Verifer returned unsat in 0.779469 secs.
[08/11 08:12:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:12:21]  --------------------------------------------------------------------------------
[08/11 08:12:21]  Iteration: 949 (601 solution, 347 counterexamples)
[08/11 08:13:15]  Generator returned sat in 42.424029 secs.
[08/11 08:13:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:13:18]  Verifer returned unsat in 1.097341 secs.
[08/11 08:13:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:13:18]  --------------------------------------------------------------------------------
[08/11 08:13:18]  Iteration: 950 (602 solution, 347 counterexamples)
[08/11 08:14:08]  Generator returned sat in 38.752814 secs.
[08/11 08:14:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:14:11]  Verifer returned unsat in 0.760373 secs.
[08/11 08:14:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:14:11]  --------------------------------------------------------------------------------
[08/11 08:14:11]  Iteration: 951 (603 solution, 347 counterexamples)
[08/11 08:15:02]  Generator returned sat in 39.346891 secs.
[08/11 08:15:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:15:05]  Verifer returned unsat in 0.775217 secs.
[08/11 08:15:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:15:05]  --------------------------------------------------------------------------------
[08/11 08:15:05]  Iteration: 952 (604 solution, 347 counterexamples)
[08/11 08:15:55]  Generator returned sat in 38.703655 secs.
[08/11 08:15:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:15:58]  Verifer returned unsat in 0.978343 secs.
[08/11 08:15:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:15:58]  --------------------------------------------------------------------------------
[08/11 08:15:58]  Iteration: 953 (605 solution, 347 counterexamples)
[08/11 08:16:51]  Generator returned sat in 40.853770 secs.
[08/11 08:16:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:16:53]  Verifer returned unsat in 0.803694 secs.
[08/11 08:16:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:16:53]  --------------------------------------------------------------------------------
[08/11 08:16:53]  Iteration: 954 (606 solution, 347 counterexamples)
[08/11 08:17:43]  Generator returned sat in 37.922873 secs.
[08/11 08:17:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:17:46]  Verifer returned unsat in 0.910219 secs.
[08/11 08:17:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:17:46]  --------------------------------------------------------------------------------
[08/11 08:17:46]  Iteration: 955 (607 solution, 347 counterexamples)
[08/11 08:18:39]  Generator returned sat in 41.062658 secs.
[08/11 08:18:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:18:41]  Verifer returned unsat in 0.520859 secs.
[08/11 08:18:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:18:41]  --------------------------------------------------------------------------------
[08/11 08:18:41]  Iteration: 956 (608 solution, 347 counterexamples)
[08/11 08:19:32]  Generator returned sat in 38.684017 secs.
[08/11 08:19:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:19:34]  Verifer returned unsat in 0.883600 secs.
[08/11 08:19:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:19:34]  --------------------------------------------------------------------------------
[08/11 08:19:34]  Iteration: 957 (609 solution, 347 counterexamples)
[08/11 08:20:28]  Generator returned sat in 42.073436 secs.
[08/11 08:20:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:20:30]  Verifer returned unsat in 0.708293 secs.
[08/11 08:20:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:20:31]  --------------------------------------------------------------------------------
[08/11 08:20:31]  Iteration: 958 (610 solution, 347 counterexamples)
[08/11 08:21:20]  Generator returned sat in 37.631170 secs.
[08/11 08:21:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:21:22]  Verifer returned unsat in 0.622521 secs.
[08/11 08:21:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:21:22]  --------------------------------------------------------------------------------
[08/11 08:21:22]  Iteration: 959 (611 solution, 347 counterexamples)
[08/11 08:22:52]  Generator returned sat in 78.019374 secs.
[08/11 08:22:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:22:56]  Verifer returned unsat in 1.962350 secs.
[08/11 08:22:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:22:56]  --------------------------------------------------------------------------------
[08/11 08:22:56]  Iteration: 960 (612 solution, 347 counterexamples)
[08/11 08:23:48]  Generator returned sat in 39.766149 secs.
[08/11 08:23:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:23:51]  Verifer returned unsat in 1.833955 secs.
[08/11 08:23:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:23:51]  --------------------------------------------------------------------------------
[08/11 08:23:51]  Iteration: 961 (613 solution, 347 counterexamples)
[08/11 08:24:42]  Generator returned sat in 38.919497 secs.
[08/11 08:24:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:24:46]  Verifer returned unsat in 2.221834 secs.
[08/11 08:24:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:24:46]  --------------------------------------------------------------------------------
[08/11 08:24:46]  Iteration: 962 (614 solution, 347 counterexamples)
[08/11 08:25:37]  Generator returned sat in 39.080245 secs.
[08/11 08:25:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:25:41]  Verifer returned unsat in 2.203841 secs.
[08/11 08:25:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:25:41]  --------------------------------------------------------------------------------
[08/11 08:25:41]  Iteration: 963 (615 solution, 347 counterexamples)
[08/11 08:26:32]  Generator returned sat in 38.885798 secs.
[08/11 08:26:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:26:35]  Verifer returned unsat in 1.686712 secs.
[08/11 08:26:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:26:35]  --------------------------------------------------------------------------------
[08/11 08:26:35]  Iteration: 964 (616 solution, 347 counterexamples)
[08/11 08:27:25]  Generator returned sat in 37.263743 secs.
[08/11 08:27:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:27:28]  Verifer returned unsat in 1.723874 secs.
[08/11 08:27:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:27:28]  --------------------------------------------------------------------------------
[08/11 08:27:28]  Iteration: 965 (617 solution, 347 counterexamples)
[08/11 08:28:16]  Generator returned sat in 36.426471 secs.
[08/11 08:28:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:28:20]  Verifer returned unsat in 2.249413 secs.
[08/11 08:28:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:28:20]  --------------------------------------------------------------------------------
[08/11 08:28:20]  Iteration: 966 (618 solution, 347 counterexamples)
[08/11 08:29:09]  Generator returned sat in 36.582104 secs.
[08/11 08:29:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:29:13]  Verifer returned unsat in 2.698266 secs.
[08/11 08:29:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:29:13]  --------------------------------------------------------------------------------
[08/11 08:29:13]  Iteration: 967 (619 solution, 347 counterexamples)
[08/11 08:30:02]  Generator returned sat in 37.034163 secs.
[08/11 08:30:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:30:06]  Verifer returned unsat in 1.503013 secs.
[08/11 08:30:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:30:06]  --------------------------------------------------------------------------------
[08/11 08:30:06]  Iteration: 968 (620 solution, 347 counterexamples)
[08/11 08:30:54]  Generator returned sat in 36.328268 secs.
[08/11 08:30:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:30:57]  Verifer returned unsat in 1.772164 secs.
[08/11 08:30:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:30:57]  --------------------------------------------------------------------------------
[08/11 08:30:57]  Iteration: 969 (621 solution, 347 counterexamples)
[08/11 08:32:41]  Generator returned sat in 91.731259 secs.
[08/11 08:32:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:32:45]  Verifer returned unsat in 2.870260 secs.
[08/11 08:32:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:32:46]  --------------------------------------------------------------------------------
[08/11 08:32:46]  Iteration: 970 (622 solution, 347 counterexamples)
[08/11 08:35:35]  Generator returned sat in 157.948373 secs.
[08/11 08:35:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:35:41]  Verifer returned unsat in 3.788373 secs.
[08/11 08:35:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:35:41]  --------------------------------------------------------------------------------
[08/11 08:35:41]  Iteration: 971 (623 solution, 347 counterexamples)
[08/11 08:36:41]  Generator returned sat in 47.904147 secs.
[08/11 08:36:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:36:47]  Verifer returned unsat in 4.802804 secs.
[08/11 08:36:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:36:47]  --------------------------------------------------------------------------------
[08/11 08:36:47]  Iteration: 972 (624 solution, 347 counterexamples)
[08/11 08:37:43]  Generator returned sat in 43.581087 secs.
[08/11 08:37:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:37:51]  Verifer returned unsat in 6.299991 secs.
[08/11 08:37:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:37:51]  --------------------------------------------------------------------------------
[08/11 08:37:51]  Iteration: 973 (625 solution, 347 counterexamples)
[08/11 08:38:51]  Generator returned sat in 47.501802 secs.
[08/11 08:38:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:38:54]  Verifer returned unsat in 1.195750 secs.
[08/11 08:38:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:38:54]  --------------------------------------------------------------------------------
[08/11 08:38:54]  Iteration: 974 (626 solution, 347 counterexamples)
[08/11 08:39:42]  Generator returned sat in 36.583912 secs.
[08/11 08:39:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:39:45]  Verifer returned unsat in 1.268245 secs.
[08/11 08:39:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:39:45]  --------------------------------------------------------------------------------
[08/11 08:39:45]  Iteration: 975 (627 solution, 347 counterexamples)
[08/11 08:40:41]  Generator returned sat in 43.878274 secs.
[08/11 08:40:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:40:47]  Improved gap from 1/1200 to 0
[08/11 08:40:48]  Improved number of small numbers from 46 to 114 out of a max of 114
[08/11 08:40:48]  Verifer returned sat in 4.838410 secs.
[08/11 08:40:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -91595.400391  -91695.398926  79255.749268 -91595.400391  100.001221 -91695.398926    0.000000   99.998535       99.998291     9.0    -91695.398926            -1             -1     -1
1  -91595.398926  -91595.398926  79255.749268 -91595.398926  100.000000 -91595.398926    0.000000    0.000000       -0.000244     1.0    -91595.398926         False           True  False
2  -91495.397705  -91495.398926  79255.749268 -91495.397705  100.001221 -91495.398926    0.000000    0.001221        0.000977     1.0    -91595.398926         False          False  False
3  -91395.396240  -91462.733154  79255.749268 -91395.396240  100.002686 -91462.733154    0.000000   67.336914        0.002441     1.0    -91595.398926         False          False  False
4  -91295.398926  -91295.400146  79255.749512 -91295.398926  167.334229 -91295.400146    0.000000    0.001221        0.000000     1.0    -91595.398926         False          False  False
5  -91060.733643  -91295.397461  79255.749512 -91060.733643  234.666504 -91295.397461  134.662842  100.000977        0.002441     1.0    -91595.398926         False          False  False
6  -91060.733643  -91195.397705  79355.746826 -91060.733643    0.010000 -91195.397705  134.662842    0.001221       -0.000244     2.0    -91595.398926         False          False   True
7  -91059.734863  -91194.398926  79454.748047 -91059.734863    1.000000 -91194.398926  134.662842    0.001221       -0.000244     1.0    -91595.398926         False          False   True
8  -91058.736084  -91194.396484  79553.749512 -91058.736084    1.000000 -91194.396484  134.662842    0.997559        0.000000     1.0    -91595.398926         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=5/2048.[0m
[08/11 08:40:48]  --------------------------------------------------------------------------------
[08/11 08:40:48]  Iteration: 976 (627 solution, 348 counterexamples)
[08/11 08:42:04]  Generator returned sat in 63.551382 secs.
[08/11 08:42:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:42:07]  Improved gap from 1/600 to 0
[08/11 08:42:08]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/11 08:42:08]  Verifer returned sat in 2.426739 secs.
[08/11 08:42:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -91114.740967  -91214.741211  79057.754395 -91114.740967  101.003662 -91214.741211   0.000000  100.000244      100.000000     4.0    -91214.741211            -1             -1   False
1  -91113.738525  -91214.739990  79057.754395 -91113.738525  101.002686 -91214.739990   0.001221  101.000244        1.001221     5.0    -91113.739746         False          False   False
2  -91113.738525  -91114.740967  79156.752197 -91113.738525    0.001221 -91114.740967   0.001221    1.001221       -0.000977     6.0    -91113.739746         False           True    True
3  -91112.734863  -91113.738770  79255.749512 -91112.734863    2.004883 -91113.738770   0.001221    1.002686        0.000000     1.0    -91113.739746         False           True   False
4  -91011.735107  -91061.732422  79255.749512 -91011.735107  102.002441 -91061.732422   0.001221   49.996094        0.999756     1.0    -91113.739746         False          False   False
5  -90907.723633  -91011.735107  79255.749512 -90907.723633  154.007568 -91011.735107   4.011230  100.000244        1.001221     1.0    -91113.739746         False          False   False
6  -90907.723633  -90912.736084  79354.748291 -90907.723633    0.010000 -90912.736084   4.011230    1.001221        0.000000     2.0    -91113.739746         False          False    True
7  -90907.723633  -90911.734863  79454.748047 -90907.723633    1.000000 -90911.734863   4.011230    0.000000       -0.000244     3.0    -91113.739746         False          False    True
8  -90906.723633  -90911.733398  79454.748291 -90906.723633    1.000000 -90911.733398   4.011230    0.998535      -99.000000     1.0    -91113.739746         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=4101/4096.[0m
[08/11 08:42:09]  --------------------------------------------------------------------------------
[08/11 08:42:09]  Iteration: 977 (627 solution, 349 counterexamples)
[08/11 08:43:06]  Generator returned sat in 45.190510 secs.
[08/11 08:43:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:43:15]  Improved gap from 0 to 1.5625
[08/11 08:43:16]  Improved number of small numbers from 59 to 70 out of a max of 114
[08/11 08:43:16]  Verifer returned sat in 8.825278 secs.
[08/11 08:43:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -90294.687256  -90319.452192  78618.606201 -90294.687256    3.130000 -90319.452192     0.0000  24.764936       24.764868     5.0    -90319.452192            -1             -1     -1
1  -90294.687256  -90294.689692  78692.281270 -90294.687256    3.127441 -90294.689692     0.0000   0.002436       -1.560064     2.0    -90294.687256         False           True  False
2  -90291.564692  -90293.127192  78790.718770 -90291.564692    3.125000 -90293.127192     0.0000   1.562500        0.000000     1.0    -90291.564692         False          False  False
3  -90291.562192  -90291.564692  78861.243896 -90291.562192    1.565000 -90291.564692     0.0000   0.002500      -29.472373     2.0    -90291.562192         False          False  False
4  -90261.894692  -90262.089692  78914.371338 -90261.894692   29.670000 -90262.089692     0.0000   0.195000      -46.677432     1.0    -90291.562192         False          False  False
5  -90213.654692  -90215.217192  79012.808770 -90213.654692   48.435000 -90215.217192     0.0000   1.562500        0.000000     1.0    -90291.562192         False          False  False
6  -90112.089692  -90113.656982  79012.808770 -90112.089692  103.127500 -90113.656982     0.0025   1.564790        1.562500     1.0    -90291.562192         False          False  False
7  -90112.089692  -90113.654692  79111.246270 -90112.089692    0.010000 -90113.654692     0.0025   1.562500        0.000000     2.0    -90291.562192         False          False   True
8  -90112.089692  -90112.092192  79111.246338 -90112.089692    1.000000 -90112.092192     0.0025   0.000000      -99.999932     3.0    -90291.562192         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=25/16.[0m
[08/11 08:43:17]  --------------------------------------------------------------------------------
[08/11 08:43:17]  Iteration: 978 (627 solution, 350 counterexamples)
[08/11 08:46:00]  Generator returned sat in 150.788623 secs.
[08/11 08:46:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:46:03]  Improved gap from 0 to 23.4375
[08/11 08:46:03]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 08:46:03]  Verifer returned sat in 1.734602 secs.
[08/11 08:46:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -90385.727051  -90662.089844  78790.71875 -90385.727051    0.099854 -90662.089844    0.000000  276.362793      276.362793     8.0    -90662.089844            -1             -1     -1
1  -90338.552246  -90662.089600  78790.71875 -90338.552246  323.537598 -90662.089600    0.100098  323.437256      223.437500     8.0    -90662.089844         False           True  False
2  -90338.552246  -90462.089844  78790.71875 -90338.552246  323.337646 -90462.089844    0.100098  123.437500      123.437500     9.0    -90338.652344          True           True   True
3  -89970.239746  -90385.626953  78790.71875 -89970.239746  491.750000 -90385.626953  168.412598  246.974609      223.437500     3.0    -90338.652344         False           True  False
4  -89970.239746  -90262.089844  78790.71875 -89970.239746  246.875000 -90262.089844  168.412598  123.437500      123.437500     2.0    -90338.652344         False          False   True
5  -89970.239746  -90162.189453  78790.71875 -89970.239746    1.000000 -90162.189453  168.412598   23.537109       23.437500     3.0    -90338.652344         False          False   True
6  -89970.239746  -90162.089844  78867.28125 -89970.239746    1.000000 -90162.089844  168.412598   23.437500        0.000000     4.0    -90338.652344         False          False   True
7  -89970.239746  -90138.652344  78943.84375 -89970.239746    1.000000 -90138.652344  168.412598    0.000000      -23.437500     5.0    -90338.652344         False          False   True
8  -89723.364746  -90115.214600  78943.84375 -89723.364746  246.875000 -90115.214600  168.412598  223.437256      123.437500     1.0    -89891.777344          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/11 08:46:04]  --------------------------------------------------------------------------------
[08/11 08:46:04]  Iteration: 979 (627 solution, 351 counterexamples)
[08/11 08:51:41]  Generator returned sat in 325.418805 secs.
[08/11 08:51:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:51:54]  Improved gap from 1/74 to 1.5625
[08/11 08:51:54]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/11 08:51:54]  Verifer returned sat in 11.687892 secs.
[08/11 08:51:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -90273.518415  -90404.304129  78502.138393 -90273.518415    0.008929 -90404.304129   0.000000  130.785714       99.991071     7.0    -90404.304129            -1             -1     -1
1  -90271.964844  -90273.509487  78502.138393 -90271.964844  132.339286 -90273.509487   0.000000    1.544643        1.544643     1.0    -90404.304129         False           True  False
2  -90173.518415  -90173.527344  78502.138393 -90173.518415   99.991071 -90173.527344   0.000000    0.008929       -0.008929     1.0    -90173.518415         False          False  False
3  -90173.500558  -90173.509487  78600.575893 -90173.500558    0.026786 -90173.509487   0.000000    0.008929       -1.553571     1.0    -90173.500558         False          False  False
4  -90058.098772  -90127.607701  78600.575893 -90058.098772  115.410714 -90127.607701  12.294643   57.214286        1.553571     1.0    -90173.500558         False          False  False
5  -90058.098772  -90071.946987  78699.013393 -90058.098772   57.205357 -90071.946987  12.294643    1.553571       -0.008929     2.0    -90173.500558         False          False   True
6  -89979.259487  -90070.384487  78720.183036 -89979.259487   80.392857 -90070.384487  12.294643   78.830357        0.000000     1.0    -90173.500558         False          False   True
7  -89965.330915  -89991.545201  78806.245536 -89965.330915   92.758929 -89991.545201  12.294643   13.919643       -0.008929     1.0    -90173.500558         False          False   True
8  -89863.839844  -89977.616629  78806.245536 -89863.839844  115.410714 -89977.616629  12.294643  101.482143        1.482143     1.0    -90173.500558         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=87/56.[0m
[08/11 08:51:55]  --------------------------------------------------------------------------------
[08/11 08:51:55]  Iteration: 980 (627 solution, 352 counterexamples)
[08/11 08:57:31]  Generator returned sat in 323.560369 secs.
[08/11 08:57:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 08:57:40]  Improved gap from 1/40 to 0
[08/11 08:57:41]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/11 08:57:41]  Verifer returned sat in 8.256637 secs.
[08/11 08:57:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -90273.509521  -90373.509521  78372.687012 -90273.509521    0.001465 -90373.509521   0.000000  100.000000       99.999756     6.0    -90373.509521            -1             -1     -1
1  -90273.509521  -90369.504395  78372.687256 -90273.509521   95.997314 -90369.504395   0.000000   95.994873        0.000000     2.0    -90373.509521         False           True  False
2  -90273.508057  -90273.509521  78472.685791 -90273.508057   95.996338 -90273.509521   0.000000    0.001465        0.000000     3.0    -90273.508057         False          False  False
3  -90273.505615  -90273.507080  78521.182861 -90273.505615    0.003906 -90273.507080   0.000000    0.001465      -51.500488     1.0    -90273.505615         False          False  False
4  -90222.003906  -90222.005127  78621.181396 -90222.003906   51.503174 -90222.005127   0.000000    0.001221       -0.000244     1.0    -90273.505615         False          False  False
5  -90121.003906  -90122.004883  78621.181396 -90121.003906  101.001221 -90122.004883   0.001221    0.999756        0.998535     1.0    -90273.505615         False          False  False
6  -90121.003906  -90122.003662  78720.182861 -90121.003906    0.010000 -90122.003662   0.001221    0.998535        0.000000     2.0    -90273.505615         False          False   True
7  -90121.002441  -90121.004883  78819.182861 -90121.002441    1.000000 -90121.004883   0.001221    0.001221       -0.998535     1.0    -90273.505615         False          False   True
8  -90120.003662  -90120.004883  78819.182861 -90120.003662    1.000000 -90120.004883   0.001221    0.000000      -99.999756     1.0    -90273.505615         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2045/2048.[0m
[08/11 08:57:41]  --------------------------------------------------------------------------------
[08/11 08:57:41]  Iteration: 981 (627 solution, 353 counterexamples)
[08/11 09:02:30]  Generator returned sat in 275.899647 secs.
[08/11 09:02:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:02:35]  Improved gap from 1/25 to 0
[08/11 09:02:36]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/11 09:02:36]  Verifer returned sat in 4.179306 secs.
[08/11 09:02:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -90417.861328  -90617.916260  78435.976562 -90417.861328    0.055046 -90617.916260    0.00000  200.054932      100.054932     7.0    -90617.916260            -1             -1     -1
1  -90417.861328  -90417.916260  78435.976562 -90417.861328    0.027523 -90417.916260    0.00000    0.054932        0.054932     2.0    -90417.861328         False           True  False
2  -90396.375000  -90396.402588  78514.435059 -90396.375000   21.541260 -90396.402588    0.00000    0.027588       -0.000244     1.0    -90417.861328         False          False  False
3  -90396.319824  -90396.347656  78614.380127 -90396.319824    0.082764 -90396.347656    0.00000    0.027832        0.000000     1.0    -90396.319824         False          False  False
4  -90283.521973  -90351.067627  78614.380127 -90283.521973  112.825684 -90351.067627   12.74292   54.802734        0.054932     1.0    -90396.319824         False          False  False
5  -90279.911865  -90296.237305  78710.714844 -90279.911865   58.412842 -90296.237305   12.74292    3.582520       -0.000244     1.0    -90396.319824         False          False   True
6  -90204.205322  -90292.627441  78735.008545 -90204.205322   79.289062 -90292.627441   12.74292   75.679199        0.000000     1.0    -90396.319824         False          False   True
7  -90188.379883  -90216.920898  78819.182861 -90188.379883   91.504639 -90216.920898   12.74292   15.798096       -0.000244     1.0    -90396.319824         False          False   True
8  -90091.352295  -90201.095215  78819.182861 -90091.352295  112.825684 -90201.095215   12.74292   97.000000       -2.972656     1.0    -90396.319824         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=225/4096.[0m
[08/11 09:02:36]  --------------------------------------------------------------------------------
[08/11 09:02:36]  Iteration: 982 (627 solution, 354 counterexamples)
[08/11 09:06:30]  Generator returned sat in 222.127554 secs.
[08/11 09:06:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:06:47]  Improved gap from 0 to 0
[08/11 09:06:49]  Improved number of small numbers from 59 to 84 out of a max of 114
[08/11 09:06:49]  Verifer returned sat in 16.208093 secs.
[08/11 09:06:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -90802.822510  -90929.174083  78438.988037 -90802.822510    0.054932 -90929.174083   0.000000  126.351573      100.009735     4.0    -90929.174083            -1             -1   False
1  -90802.822510  -90802.832520  78438.988037 -90802.822510    0.010254 -90802.832520   0.000000    0.010010        0.009735     5.0    -90802.822510         False          False   False
2  -90702.812500  -90702.832375  78438.988037 -90702.812500  100.020020 -90702.832375   0.000000    0.019875        0.019745     1.0    -90802.822510         False          False   False
3  -90702.812500  -90702.822324  78538.968067 -90702.812500    0.010050 -90702.822324   0.000000    0.009824       -0.000226     2.0    -90702.812500         False          False   False
4  -90587.641420  -90659.229360  78538.968067 -90587.641420  115.180905 -90659.229360  13.487437   58.100503        1.683417     1.0    -90702.812500         False          False   False
5  -90587.641420  -90602.812274  78637.274658 -90587.641420   58.090452 -90602.812274  13.487437    1.683417       -0.009991     2.0    -90702.812500         False          False    True
6  -90509.269561  -90601.118807  78658.912598 -90509.269561   80.055276 -90601.118807  13.487437   78.361809       -0.000193     1.0    -90702.812500         False          False    True
7  -90495.751973  -90522.746948  78745.395202 -90495.751973   91.879397 -90522.746948  13.487437   13.507538        0.000000     1.0    -90702.812500         False          False    True
8  -90394.078606  -90509.239258  78745.395202 -90394.078606  115.180905 -90509.239258  13.487437  101.673215        1.673367     1.0    -90702.812500         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=335/199.[0m
[08/11 09:06:49]  --------------------------------------------------------------------------------
[08/11 09:06:49]  Iteration: 983 (627 solution, 355 counterexamples)
[08/11 09:12:41]  Generator returned sat in 339.493519 secs.
[08/11 09:12:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:12:43]  Improved gap from 0 to 23.4375
[08/11 09:12:44]  Improved number of small numbers from 50 to 114 out of a max of 114
[08/11 09:12:44]  Verifer returned sat in 1.228040 secs.
[08/11 09:12:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -91126.268311  -91126.277344  78662.414795 -91126.268311    0.054932 -91126.277344   0.000000    0.009033       -0.009277     6.0    -91126.277344            -1             -1     -1
1  -91126.259033  -91126.259033  78662.414795 -91126.259033    0.018311 -91126.259033   0.000000    0.000000     -100.000000     1.0    -91126.259033         False           True  False
2  -90926.259033  -90949.696777  78662.414795 -90926.259033  200.000000 -90949.696777   0.000000   23.437744        0.000000     1.0    -91126.259033         False          False  False
3  -90702.812500  -90826.263672  78662.414795 -90702.812500  246.884277 -90826.263672   0.009033  123.442139      123.437500     1.0    -91126.259033         False          False  False
4  -90702.812500  -90726.268311  78662.414795 -90702.812500  122.942139 -90726.268311   0.009033   23.446777       23.437500     2.0    -91126.259033         False          False   True
5  -90702.812500  -90726.259033  78738.977295 -90702.812500    1.000000 -90726.259033   0.009033   23.437500        0.000000     3.0    -91126.259033         False          False   True
6  -90702.812500  -90702.821533  78815.539795 -90702.812500    1.000000 -90702.821533   0.009033    0.000000      -23.437500     4.0    -91126.259033         False          False   True
7  -90455.928223  -90679.384033  78815.539795 -90455.928223  246.884277 -90679.384033   0.018311  223.437500      123.437500     1.0    -90455.946533          True           True  False
8  -90455.928223  -90579.384033  78815.539795 -90455.928223  122.942139 -90579.384033   0.018311  123.437500       23.437500     2.0    -90455.946533         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1975/16.[0m
[08/11 09:12:44]  --------------------------------------------------------------------------------
[08/11 09:12:44]  Iteration: 984 (627 solution, 356 counterexamples)
[08/11 09:21:39]  Generator returned sat in 522.119100 secs.
[08/11 09:21:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:21:41]  Verifer returned unsat in 0.668494 secs.
[08/11 09:21:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:21:41]  --------------------------------------------------------------------------------
[08/11 09:21:41]  Iteration: 985 (628 solution, 356 counterexamples)
[08/11 09:22:34]  Generator returned sat in 40.799233 secs.
[08/11 09:22:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:22:37]  Verifer returned unsat in 1.165555 secs.
[08/11 09:22:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:22:37]  --------------------------------------------------------------------------------
[08/11 09:22:37]  Iteration: 986 (629 solution, 356 counterexamples)
[08/11 09:23:30]  Generator returned sat in 40.208111 secs.
[08/11 09:23:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:23:32]  Verifer returned unsat in 1.097569 secs.
[08/11 09:23:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:23:33]  --------------------------------------------------------------------------------
[08/11 09:23:33]  Iteration: 987 (630 solution, 356 counterexamples)
[08/11 09:24:27]  Generator returned sat in 42.559662 secs.
[08/11 09:24:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:24:30]  Verifer returned unsat in 0.742431 secs.
[08/11 09:24:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:24:30]  --------------------------------------------------------------------------------
[08/11 09:24:30]  Iteration: 988 (631 solution, 356 counterexamples)
[08/11 09:25:22]  Generator returned sat in 39.952384 secs.
[08/11 09:25:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:25:25]  Verifer returned unsat in 1.102310 secs.
[08/11 09:25:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:25:25]  --------------------------------------------------------------------------------
[08/11 09:25:25]  Iteration: 989 (632 solution, 356 counterexamples)
[08/11 09:26:18]  Generator returned sat in 39.782960 secs.
[08/11 09:26:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:26:20]  Verifer returned unsat in 0.803935 secs.
[08/11 09:26:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:26:20]  --------------------------------------------------------------------------------
[08/11 09:26:20]  Iteration: 990 (633 solution, 356 counterexamples)
[08/11 09:27:13]  Generator returned sat in 40.267618 secs.
[08/11 09:27:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:27:15]  Verifer returned unsat in 0.790540 secs.
[08/11 09:27:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:27:15]  --------------------------------------------------------------------------------
[08/11 09:27:15]  Iteration: 991 (634 solution, 356 counterexamples)
[08/11 09:28:08]  Generator returned sat in 40.564430 secs.
[08/11 09:28:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:28:10]  Verifer returned unsat in 0.616087 secs.
[08/11 09:28:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:28:11]  --------------------------------------------------------------------------------
[08/11 09:28:11]  Iteration: 992 (635 solution, 356 counterexamples)
[08/11 09:29:05]  Generator returned sat in 42.198980 secs.
[08/11 09:29:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:29:08]  Verifer returned unsat in 1.053916 secs.
[08/11 09:29:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:29:08]  --------------------------------------------------------------------------------
[08/11 09:29:08]  Iteration: 993 (636 solution, 356 counterexamples)
[08/11 09:30:55]  Generator returned sat in 95.143987 secs.
[08/11 09:30:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:31:01]  Verifer returned unsat in 3.427345 secs.
[08/11 09:31:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:31:01]  --------------------------------------------------------------------------------
[08/11 09:31:01]  Iteration: 994 (637 solution, 356 counterexamples)
[08/11 09:31:57]  Generator returned sat in 44.164033 secs.
[08/11 09:31:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:32:02]  Verifer returned unsat in 3.278204 secs.
[08/11 09:32:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:32:02]  --------------------------------------------------------------------------------
[08/11 09:32:02]  Iteration: 995 (638 solution, 356 counterexamples)
[08/11 09:33:01]  Generator returned sat in 46.347894 secs.
[08/11 09:33:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:33:05]  Verifer returned unsat in 2.450865 secs.
[08/11 09:33:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:33:05]  --------------------------------------------------------------------------------
[08/11 09:33:05]  Iteration: 996 (639 solution, 356 counterexamples)
[08/11 09:33:59]  Generator returned sat in 41.209955 secs.
[08/11 09:34:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:34:03]  Verifer returned unsat in 2.315835 secs.
[08/11 09:34:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:34:03]  --------------------------------------------------------------------------------
[08/11 09:34:03]  Iteration: 997 (640 solution, 356 counterexamples)
[08/11 09:34:59]  Generator returned sat in 44.182642 secs.
[08/11 09:35:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:35:04]  Verifer returned unsat in 2.453373 secs.
[08/11 09:35:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:35:04]  --------------------------------------------------------------------------------
[08/11 09:35:04]  Iteration: 998 (641 solution, 356 counterexamples)
[08/11 09:36:23]  Generator returned sat in 67.018078 secs.
[08/11 09:36:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:36:26]  Verifer returned unsat in 0.812954 secs.
[08/11 09:36:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:36:26]  --------------------------------------------------------------------------------
[08/11 09:36:26]  Iteration: 999 (642 solution, 356 counterexamples)
[08/11 09:37:20]  Generator returned sat in 42.402025 secs.
[08/11 09:37:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:37:22]  Verifer returned unsat in 0.583643 secs.
[08/11 09:37:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:37:23]  --------------------------------------------------------------------------------
[08/11 09:37:23]  Iteration: 1000 (643 solution, 356 counterexamples)
[08/11 09:38:27]  Generator returned sat in 52.727066 secs.
[08/11 09:38:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:38:30]  Verifer returned unsat in 0.488430 secs.
[08/11 09:38:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:38:30]  --------------------------------------------------------------------------------
[08/11 09:38:30]  Iteration: 1001 (644 solution, 356 counterexamples)
[08/11 09:39:41]  Generator returned sat in 59.072814 secs.
[08/11 09:39:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:39:44]  Verifer returned unsat in 0.699967 secs.
[08/11 09:39:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:39:44]  --------------------------------------------------------------------------------
[08/11 09:39:44]  Iteration: 1002 (645 solution, 356 counterexamples)
[08/11 09:40:42]  Generator returned sat in 46.072181 secs.
[08/11 09:40:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:40:44]  Verifer returned unsat in 0.704313 secs.
[08/11 09:40:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:40:45]  --------------------------------------------------------------------------------
[08/11 09:40:45]  Iteration: 1003 (646 solution, 356 counterexamples)
[08/11 09:41:42]  Generator returned sat in 45.116457 secs.
[08/11 09:41:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:41:45]  Verifer returned unsat in 1.480808 secs.
[08/11 09:41:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:41:45]  --------------------------------------------------------------------------------
[08/11 09:41:45]  Iteration: 1004 (647 solution, 356 counterexamples)
[08/11 09:43:03]  Generator returned sat in 65.912546 secs.
[08/11 09:43:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:43:07]  Verifer returned unsat in 2.020548 secs.
[08/11 09:43:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:43:08]  --------------------------------------------------------------------------------
[08/11 09:43:08]  Iteration: 1005 (648 solution, 356 counterexamples)
[08/11 09:44:59]  Generator returned sat in 98.974788 secs.
[08/11 09:45:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:45:02]  Verifer returned unsat in 1.230910 secs.
[08/11 09:45:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:45:02]  --------------------------------------------------------------------------------
[08/11 09:45:02]  Iteration: 1006 (649 solution, 356 counterexamples)
[08/11 09:45:56]  Generator returned sat in 41.954072 secs.
[08/11 09:45:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:46:00]  Verifer returned unsat in 1.871707 secs.
[08/11 09:46:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:46:00]  --------------------------------------------------------------------------------
[08/11 09:46:00]  Iteration: 1007 (650 solution, 356 counterexamples)
[08/11 09:47:17]  Generator returned sat in 65.177049 secs.
[08/11 09:47:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:47:22]  Verifer returned unsat in 2.851389 secs.
[08/11 09:47:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:47:22]  --------------------------------------------------------------------------------
[08/11 09:47:22]  Iteration: 1008 (651 solution, 356 counterexamples)
[08/11 09:48:15]  Generator returned sat in 41.062880 secs.
[08/11 09:48:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:48:20]  Verifer returned unsat in 2.251625 secs.
[08/11 09:48:20]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:48:20]  --------------------------------------------------------------------------------
[08/11 09:48:20]  Iteration: 1009 (652 solution, 356 counterexamples)
[08/11 09:49:18]  Generator returned sat in 46.275390 secs.
[08/11 09:49:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:49:25]  Verifer returned unsat in 4.625673 secs.
[08/11 09:49:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:49:25]  --------------------------------------------------------------------------------
[08/11 09:49:25]  Iteration: 1010 (653 solution, 356 counterexamples)
[08/11 09:50:18]  Generator returned sat in 40.642370 secs.
[08/11 09:50:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:50:21]  Verifer returned unsat in 1.480536 secs.
[08/11 09:50:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:50:22]  --------------------------------------------------------------------------------
[08/11 09:50:22]  Iteration: 1011 (654 solution, 356 counterexamples)
[08/11 09:51:30]  Generator returned sat in 56.670949 secs.
[08/11 09:51:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:51:34]  Verifer returned unsat in 1.728352 secs.
[08/11 09:51:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:51:34]  --------------------------------------------------------------------------------
[08/11 09:51:34]  Iteration: 1012 (655 solution, 356 counterexamples)
[08/11 09:52:28]  Generator returned sat in 41.420460 secs.
[08/11 09:52:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:52:32]  Verifer returned unsat in 2.310585 secs.
[08/11 09:52:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:52:32]  --------------------------------------------------------------------------------
[08/11 09:52:32]  Iteration: 1013 (656 solution, 356 counterexamples)
[08/11 09:54:11]  Generator returned sat in 87.043596 secs.
[08/11 09:54:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:54:15]  Verifer returned unsat in 2.213256 secs.
[08/11 09:54:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:54:15]  --------------------------------------------------------------------------------
[08/11 09:54:15]  Iteration: 1014 (657 solution, 356 counterexamples)
[08/11 09:55:09]  Generator returned sat in 41.416376 secs.
[08/11 09:55:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:55:14]  Verifer returned unsat in 2.560679 secs.
[08/11 09:55:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:55:14]  --------------------------------------------------------------------------------
[08/11 09:55:14]  Iteration: 1015 (658 solution, 356 counterexamples)
[08/11 09:56:10]  Generator returned sat in 43.988961 secs.
[08/11 09:56:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:56:15]  Verifer returned unsat in 2.866859 secs.
[08/11 09:56:15]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:56:15]  --------------------------------------------------------------------------------
[08/11 09:56:15]  Iteration: 1016 (659 solution, 356 counterexamples)
[08/11 09:57:08]  Generator returned sat in 40.283964 secs.
[08/11 09:57:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:57:12]  Verifer returned unsat in 1.852219 secs.
[08/11 09:57:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:57:12]  --------------------------------------------------------------------------------
[08/11 09:57:12]  Iteration: 1017 (660 solution, 356 counterexamples)
[08/11 09:58:08]  Generator returned sat in 43.641896 secs.
[08/11 09:58:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:58:11]  Verifer returned unsat in 1.220967 secs.
[08/11 09:58:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 09:58:11]  --------------------------------------------------------------------------------
[08/11 09:58:11]  Iteration: 1018 (661 solution, 356 counterexamples)
[08/11 10:00:41]  Generator returned sat in 137.137573 secs.
[08/11 10:00:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:00:45]  Verifer returned unsat in 2.548656 secs.
[08/11 10:00:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:00:45]  --------------------------------------------------------------------------------
[08/11 10:00:45]  Iteration: 1019 (662 solution, 356 counterexamples)
[08/11 10:01:43]  Generator returned sat in 45.701680 secs.
[08/11 10:01:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:01:47]  Verifer returned unsat in 2.308817 secs.
[08/11 10:01:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:01:47]  --------------------------------------------------------------------------------
[08/11 10:01:47]  Iteration: 1020 (663 solution, 356 counterexamples)
[08/11 10:03:41]  Generator returned sat in 101.993127 secs.
[08/11 10:03:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:03:45]  Verifer returned unsat in 1.846652 secs.
[08/11 10:03:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:03:45]  --------------------------------------------------------------------------------
[08/11 10:03:45]  Iteration: 1021 (664 solution, 356 counterexamples)
[08/11 10:04:43]  Generator returned sat in 46.154271 secs.
[08/11 10:04:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:04:47]  Verifer returned unsat in 1.809976 secs.
[08/11 10:04:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:04:47]  --------------------------------------------------------------------------------
[08/11 10:04:47]  Iteration: 1022 (665 solution, 356 counterexamples)
[08/11 10:05:43]  Generator returned sat in 43.416196 secs.
[08/11 10:05:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:05:46]  Verifer returned unsat in 1.029696 secs.
[08/11 10:05:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:05:46]  --------------------------------------------------------------------------------
[08/11 10:05:46]  Iteration: 1023 (666 solution, 356 counterexamples)
[08/11 10:07:00]  Generator returned sat in 62.479512 secs.
[08/11 10:07:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:07:03]  Verifer returned unsat in 0.988256 secs.
[08/11 10:07:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:07:03]  --------------------------------------------------------------------------------
[08/11 10:07:03]  Iteration: 1024 (667 solution, 356 counterexamples)
[08/11 10:11:56]  Generator returned sat in 280.318922 secs.
[08/11 10:11:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:12:00]  Verifer returned unsat in 2.020150 secs.
[08/11 10:12:00]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:12:00]  --------------------------------------------------------------------------------
[08/11 10:12:00]  Iteration: 1025 (668 solution, 356 counterexamples)
[08/11 10:16:05]  Generator returned sat in 232.318841 secs.
[08/11 10:16:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:16:09]  Verifer returned unsat in 2.595849 secs.
[08/11 10:16:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:16:09]  --------------------------------------------------------------------------------
[08/11 10:16:09]  Iteration: 1026 (669 solution, 356 counterexamples)
[08/11 10:17:00]  Generator returned sat in 39.065066 secs.
[08/11 10:17:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:17:05]  Verifer returned unsat in 2.695842 secs.
[08/11 10:17:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:17:05]  --------------------------------------------------------------------------------
[08/11 10:17:05]  Iteration: 1027 (670 solution, 356 counterexamples)
[08/11 10:18:00]  Generator returned sat in 41.950565 secs.
[08/11 10:18:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:18:03]  Verifer returned unsat in 1.135231 secs.
[08/11 10:18:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:18:03]  --------------------------------------------------------------------------------
[08/11 10:18:03]  Iteration: 1028 (671 solution, 356 counterexamples)
[08/11 10:18:59]  Generator returned sat in 44.555109 secs.
[08/11 10:19:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:19:02]  Verifer returned unsat in 0.996030 secs.
[08/11 10:19:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:19:02]  --------------------------------------------------------------------------------
[08/11 10:19:02]  Iteration: 1029 (672 solution, 356 counterexamples)
[08/11 10:19:54]  Generator returned sat in 38.989828 secs.
[08/11 10:19:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:19:57]  Verifer returned unsat in 0.951268 secs.
[08/11 10:19:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:19:57]  --------------------------------------------------------------------------------
[08/11 10:19:57]  Iteration: 1030 (673 solution, 356 counterexamples)
[08/11 10:20:50]  Generator returned sat in 39.845988 secs.
[08/11 10:20:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:20:52]  Verifer returned unsat in 0.899618 secs.
[08/11 10:20:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:20:52]  --------------------------------------------------------------------------------
[08/11 10:20:52]  Iteration: 1031 (674 solution, 356 counterexamples)
[08/11 10:21:44]  Generator returned sat in 38.906258 secs.
[08/11 10:21:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:21:46]  Verifer returned unsat in 0.706795 secs.
[08/11 10:21:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:21:46]  --------------------------------------------------------------------------------
[08/11 10:21:46]  Iteration: 1032 (675 solution, 356 counterexamples)
[08/11 10:22:38]  Generator returned sat in 38.771770 secs.
[08/11 10:22:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:22:41]  Verifer returned unsat in 1.192796 secs.
[08/11 10:22:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:22:41]  --------------------------------------------------------------------------------
[08/11 10:22:41]  Iteration: 1033 (676 solution, 356 counterexamples)
[08/11 10:23:41]  Generator returned sat in 47.203430 secs.
[08/11 10:23:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:23:44]  Verifer returned unsat in 1.750064 secs.
[08/11 10:23:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:23:44]  --------------------------------------------------------------------------------
[08/11 10:23:44]  Iteration: 1034 (677 solution, 356 counterexamples)
[08/11 10:24:38]  Generator returned sat in 41.450759 secs.
[08/11 10:24:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:24:41]  Verifer returned unsat in 1.263058 secs.
[08/11 10:24:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:24:41]  --------------------------------------------------------------------------------
[08/11 10:24:41]  Iteration: 1035 (678 solution, 356 counterexamples)
[08/11 10:25:59]  Generator returned sat in 64.989061 secs.
[08/11 10:26:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:26:02]  Verifer returned unsat in 1.061721 secs.
[08/11 10:26:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:26:02]  --------------------------------------------------------------------------------
[08/11 10:26:02]  Iteration: 1036 (679 solution, 356 counterexamples)
[08/11 10:26:57]  Generator returned sat in 42.464010 secs.
[08/11 10:26:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:26:59]  Verifer returned unsat in 0.817799 secs.
[08/11 10:26:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:26:59]  --------------------------------------------------------------------------------
[08/11 10:26:59]  Iteration: 1037 (680 solution, 356 counterexamples)
[08/11 10:27:53]  Generator returned sat in 41.230110 secs.
[08/11 10:27:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:27:56]  Verifer returned unsat in 0.929344 secs.
[08/11 10:27:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:27:56]  --------------------------------------------------------------------------------
[08/11 10:27:56]  Iteration: 1038 (681 solution, 356 counterexamples)
[08/11 10:29:00]  Generator returned sat in 51.289993 secs.
[08/11 10:29:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:29:03]  Verifer returned unsat in 1.472178 secs.
[08/11 10:29:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:29:03]  --------------------------------------------------------------------------------
[08/11 10:29:03]  Iteration: 1039 (682 solution, 356 counterexamples)
[08/11 10:30:05]  Generator returned sat in 49.531621 secs.
[08/11 10:30:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:30:09]  Verifer returned unsat in 2.486817 secs.
[08/11 10:30:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:30:09]  --------------------------------------------------------------------------------
[08/11 10:30:09]  Iteration: 1040 (683 solution, 356 counterexamples)
[08/11 10:31:03]  Generator returned sat in 41.315130 secs.
[08/11 10:31:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:31:07]  Verifer returned unsat in 2.037256 secs.
[08/11 10:31:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:31:07]  --------------------------------------------------------------------------------
[08/11 10:31:07]  Iteration: 1041 (684 solution, 356 counterexamples)
[08/11 10:31:59]  Generator returned sat in 39.769222 secs.
[08/11 10:32:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:32:04]  Verifer returned unsat in 2.648370 secs.
[08/11 10:32:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:32:04]  --------------------------------------------------------------------------------
[08/11 10:32:04]  Iteration: 1042 (685 solution, 356 counterexamples)
[08/11 10:32:56]  Generator returned sat in 39.437356 secs.
[08/11 10:32:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:33:02]  Verifer returned unsat in 3.898513 secs.
[08/11 10:33:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:33:02]  --------------------------------------------------------------------------------
[08/11 10:33:02]  Iteration: 1043 (686 solution, 356 counterexamples)
[08/11 10:33:59]  Generator returned sat in 44.634394 secs.
[08/11 10:34:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:34:02]  Verifer returned unsat in 1.945964 secs.
[08/11 10:34:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:34:03]  --------------------------------------------------------------------------------
[08/11 10:34:03]  Iteration: 1044 (687 solution, 356 counterexamples)
[08/11 10:34:55]  Generator returned sat in 39.601521 secs.
[08/11 10:34:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:34:59]  Verifer returned unsat in 2.272939 secs.
[08/11 10:34:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:34:59]  --------------------------------------------------------------------------------
[08/11 10:34:59]  Iteration: 1045 (688 solution, 356 counterexamples)
[08/11 10:35:51]  Generator returned sat in 39.392939 secs.
[08/11 10:35:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:35:54]  Verifer returned unsat in 1.428098 secs.
[08/11 10:35:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:35:54]  --------------------------------------------------------------------------------
[08/11 10:35:54]  Iteration: 1046 (689 solution, 356 counterexamples)
[08/11 10:36:46]  Generator returned sat in 39.340343 secs.
[08/11 10:36:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:36:49]  Verifer returned unsat in 1.502990 secs.
[08/11 10:36:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:36:49]  --------------------------------------------------------------------------------
[08/11 10:36:49]  Iteration: 1047 (690 solution, 356 counterexamples)
[08/11 10:37:43]  Generator returned sat in 41.024544 secs.
[08/11 10:37:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:37:46]  Verifer returned unsat in 1.077382 secs.
[08/11 10:37:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:37:46]  --------------------------------------------------------------------------------
[08/11 10:37:46]  Iteration: 1048 (691 solution, 356 counterexamples)
[08/11 10:38:41]  Generator returned sat in 42.437063 secs.
[08/11 10:38:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:38:46]  Verifer returned unsat in 2.717829 secs.
[08/11 10:38:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:38:46]  --------------------------------------------------------------------------------
[08/11 10:38:46]  Iteration: 1049 (692 solution, 356 counterexamples)
[08/11 10:39:46]  Generator returned sat in 47.512046 secs.
[08/11 10:39:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:39:57]  Improved gap from 0 to 0
[08/11 10:39:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 10:39:58]  Verifer returned sat in 10.440355 secs.
[08/11 10:39:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -25940.420898  -25940.420898  77139.344727 -25940.420898   95.500000 -25940.420898   0.000000    0.000000        0.000000     6.0    -25940.420898            -1             -1     -1
1  -25845.020996  -25940.220703  77143.944580 -25845.020996   95.399902 -25940.220703   0.000000   95.199707       -0.000244     1.0    -25845.020996         False           True  False
2  -25844.820801  -25844.920898  77243.645020 -25844.820801   95.399902 -25844.920898   0.000000    0.100098       -0.099609     1.0    -25845.020996         False          False  False
3  -25744.621094  -25844.720703  77243.645020 -25744.621094  100.299805 -25844.720703   0.000000  100.099609        0.100098     1.0    -25845.020996         False          False  False
4  -25744.621094  -25744.720703  77343.544678 -25744.621094  100.000000 -25744.720703   0.000000    0.099609       -0.000244     2.0    -25845.020996         False          False  False
5  -25594.970703  -25744.520752  77343.544678 -25594.970703  149.750000 -25744.520752  49.450195  100.099854        0.199951     1.0    -25845.020996         False          False  False
6  -25594.970703  -25644.520996  77442.544922 -25594.970703    1.500000 -25644.520996  49.450195    0.100098       -0.799805     2.0    -25845.020996         False          False   True
7  -25594.070801  -25643.621094  77541.544922 -25594.070801    1.000000 -25643.621094  49.450195    0.100098       -0.899902     1.0    -25845.020996         False          False   True
8  -25593.170898  -25642.621094  77541.544922 -25593.170898    1.000000 -25642.621094  49.450195    0.000000     -100.000000     1.0    -25845.020996         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/11 10:39:59]  --------------------------------------------------------------------------------
[08/11 10:39:59]  Iteration: 1050 (692 solution, 357 counterexamples)
[08/11 10:45:51]  Generator returned sat in 340.080542 secs.
[08/11 10:45:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:46:05]  Improved gap from 0 to 18.75
[08/11 10:46:06]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/11 10:46:06]  Verifer returned sat in 12.513737 secs.
[08/11 10:46:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -25738.575928  -26155.575928  77343.544678 -25738.575928    0.100098 -26155.575928   0.100098  416.899902      387.600098     6.0    -26155.575928            -1             -1     -1
1  -25738.575928  -26026.276123  77343.544678 -25738.575928  416.899902 -26026.276123   0.100098  287.600098      287.600098     6.0    -26155.575928         False          False   True
2  -25609.375977  -25926.376221  77343.544678 -25609.375977  416.800049 -25926.376221   0.199951  316.800293      316.700195     7.0    -25609.575928         False          False   True
3  -25609.375977  -25926.275879  77343.544678 -25609.375977   51.399902 -25926.275879   0.199951  316.699951      216.700195     8.0    -25609.575928         False          False   True
4  -25609.375977  -25738.676025  77343.544678 -25609.375977  255.000000 -25738.676025   0.199951  129.100098      116.700195     9.0    -25609.575928         False          False   True
5  -25609.375977  -25726.276123  77343.544678 -25609.375977  129.000000 -25726.276123   0.199951  116.700195       16.700195     4.0    -25609.575928         False           True  False
6  -25609.375977  -25626.276123  77424.794678 -25609.375977   66.000000 -25626.276123   0.199951   16.700195       -2.049805     5.0    -25609.575928         False          False  False
7  -25591.576172  -25607.525879  77506.044434 -25591.576172   34.500000 -25607.525879   0.199951   15.749756       -3.000244     1.0    -25609.575928         False          False  False
8  -25588.575928  -25588.775879  77506.044678 -25588.575928   18.750000 -25588.775879   0.199951    0.000000      -99.999756     1.0    -25609.575928         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=324301/1024.[0m
[08/11 10:46:06]  --------------------------------------------------------------------------------
[08/11 10:46:06]  Iteration: 1051 (692 solution, 358 counterexamples)
[08/11 10:49:29]  Generator returned sat in 189.859808 secs.
[08/11 10:49:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:49:35]  Improved gap from 912999/65536 to 18.75
[08/11 10:49:35]  Improved number of small numbers from 37 to 114 out of a max of 114
[08/11 10:49:35]  Verifer returned sat in 4.539698 secs.
[08/11 10:49:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -26665.864258  -27053.514160  76298.999512 -26665.864258    0.050049 -27053.514160   0.099854  387.550049      387.550049     5.0    -27053.514160            -1             -1    True
1  -26665.814209  -27053.514160  76298.999512 -26665.814209  387.600098 -27053.514160   0.149902  387.550049      287.550049     5.0    -27053.514160         False          False    True
2  -26602.864258  -26853.514160  76298.999512 -26602.864258  450.500000 -26853.514160   0.149902  250.500000      250.500000     6.0    -27053.514160         False          False    True
3  -26536.764404  -26798.514160  76298.999512 -26536.764404  316.599854 -26798.514160   0.149902  261.599854      216.599854     7.0    -26536.914307         False          False    True
4  -26536.764404  -26665.964355  76298.999512 -26536.764404  255.000000 -26665.964355   0.149902  129.050049      116.599854     8.0    -26536.914307         False          False    True
5  -26536.764404  -26602.964355  76298.999512 -26536.764404  129.000000 -26602.964355   0.149902   66.050049       16.599854     3.0    -26536.914307         False           True   False
6  -26536.764404  -26553.514160  76380.249512 -26536.764404   66.000000 -26553.514160   0.149902   16.599854       -2.150146     4.0    -26536.914307         False          False   False
7  -26518.864258  -26534.764160  76461.499512 -26518.864258   34.500000 -26534.764160   0.149902   15.750000       -3.000000     1.0    -26536.914307         False          False   False
8  -26515.864258  -26516.014160  76542.749512 -26515.864258   18.750000 -26516.014160   0.149902    0.000000      -18.750000     1.0    -26536.914307         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1177805/4096.[0m
[08/11 10:49:36]  --------------------------------------------------------------------------------
[08/11 10:49:36]  Iteration: 1052 (692 solution, 359 counterexamples)
[08/11 10:50:57]  Generator returned sat in 69.176807 secs.
[08/11 10:50:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:51:12]  Improved gap from 1/10 to 18.75
[08/11 10:51:13]  Improved number of small numbers from 68 to 92 out of a max of 114
[08/11 10:51:13]  Verifer returned sat in 13.902099 secs.
[08/11 10:51:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -25067.345947  -25455.006796  76298.999512 -25067.345947  387.696289 -25455.006796        0.0  387.660849      387.660849     5.0    -25455.006796            -1             -1    True
1  -25067.345947  -25390.971191  76298.999512 -25067.345947  387.660645 -25390.971191        0.0  323.625244      287.660849     5.0    -25067.345947         False          False    True
2  -25003.310547  -25355.006592  76298.999512 -25003.310547  387.660645 -25355.006592        0.0  351.696045      251.696249     6.0    -25067.345947         False          False    True
3  -25003.310547  -25195.596082  76298.999512 -25003.310547    0.035714 -25195.596082        0.0  192.285535      151.696249     7.0    -25003.310547         False          False    True
4  -24936.167510  -25067.346082  76298.999512 -24936.167510  259.428571 -25067.346082        0.0  131.178571      118.839286     8.0    -25003.310547         False          False    True
5  -24936.131796  -25003.274658  76298.999512 -24936.131796  131.214286 -25003.274658        0.0   67.142862       18.875000     2.0    -25003.310547         False           True   False
6  -24936.131796  -24954.881796  76380.124512 -24936.131796   67.107143 -24954.881796        0.0   18.750000        0.000000     3.0    -25003.310547         False          False   False
7  -24919.828225  -24936.131796  76461.374512 -24919.828225   35.053571 -24936.131796        0.0   16.303571       -2.446429     3.0    -25003.310547         False          False   False
8  -24917.105010  -24917.381592  76461.374512 -24917.105010   19.026786 -24917.381592        0.0    0.276582      -99.723214     1.0    -25003.310547         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1178405/4096.[0m
[08/11 10:51:14]  --------------------------------------------------------------------------------
[08/11 10:51:14]  Iteration: 1053 (692 solution, 360 counterexamples)
[08/11 10:59:36]  Generator returned sat in 489.800338 secs.
[08/11 10:59:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 10:59:41]  Improved gap from 1/10 to 18.75
[08/11 10:59:41]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 10:59:41]  Verifer returned sat in 3.734772 secs.
[08/11 10:59:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -25020.716553  -25420.816650  76264.709229 -25020.716553  400.299805 -25420.816650   0.000000  400.100098      400.000000     9.0    -25420.816650            -1             -1     -1
1  -25020.616699  -25420.716553  76264.709229 -25020.616699  400.199951 -25420.716553   0.099854  400.000000      300.000000     7.0    -25020.716553         False           True  False
2  -25020.416748  -25289.866455  76264.709229 -25020.416748  400.199951 -25289.866455   0.099854  269.349854      200.199951     7.0    -25020.716553         False          False   True
3  -24889.666748  -25166.316650  76264.709229 -24889.666748  400.099854 -25166.316650   0.099854  276.550049      230.949951     8.0    -24889.766602         False          False   True
4  -24889.666748  -25020.716797  76264.709229 -24889.666748  255.000000 -25020.716797   0.099854  130.950195      130.949951     9.0    -24889.766602         False          False   True
5  -24889.666748  -24955.666504  76264.709229 -24889.666748  129.000000 -24955.666504   0.099854   65.899902       30.949951     3.0    -24889.766602         False           True  False
6  -24889.566650  -24908.316650  76333.559082 -24889.566650   66.000000 -24908.316650   0.099854   18.650146       -0.100098     4.0    -24889.766602         False          False  False
7  -24873.716797  -24889.566406  76414.809082 -24873.716797   34.500000 -24889.566406   0.099854   15.749756       -3.000244     1.0    -24889.766602         False          False  False
8  -24870.716553  -24870.816406  76414.809326 -24870.716553   18.750000 -24870.816406   0.099854    0.000000      -99.999756     1.0    -24889.766602         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/11 10:59:42]  --------------------------------------------------------------------------------
[08/11 10:59:42]  Iteration: 1054 (692 solution, 361 counterexamples)
[08/11 11:02:58]  Generator returned sat in 183.844228 secs.
[08/11 11:03:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:03:01]  Verifer returned unsat in 0.875169 secs.
[08/11 11:03:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:03:01]  --------------------------------------------------------------------------------
[08/11 11:03:01]  Iteration: 1055 (693 solution, 361 counterexamples)
[08/11 11:03:57]  Generator returned sat in 43.220096 secs.
[08/11 11:03:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:03:59]  Verifer returned unsat in 0.561951 secs.
[08/11 11:03:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:03:59]  --------------------------------------------------------------------------------
[08/11 11:03:59]  Iteration: 1056 (694 solution, 361 counterexamples)
[08/11 11:05:18]  Generator returned sat in 66.701785 secs.
[08/11 11:05:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:05:21]  Verifer returned unsat in 1.083045 secs.
[08/11 11:05:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:05:22]  --------------------------------------------------------------------------------
[08/11 11:05:22]  Iteration: 1057 (695 solution, 361 counterexamples)
[08/11 11:11:17]  Generator returned sat in 343.156610 secs.
[08/11 11:11:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:11:23]  Improved gap from 1/34 to 0
[08/11 11:11:23]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/11 11:11:23]  Verifer returned sat in 4.313825 secs.
[08/11 11:11:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -24483.200928  -24610.093262  75429.025879 -24483.200928  100.080078 -24610.093262   0.000000  126.892334      101.832520     8.0    -24610.093262            -1             -1     -1
1  -24483.200928  -24485.033447  75429.025879 -24483.200928  100.080078 -24485.033447   0.000000    1.832520        1.832520     8.0    -24610.093262         False           True  False
2  -24384.993652  -24385.073486  75429.025879 -24384.993652  100.039795 -24385.073486   0.000000    0.079834        0.039795     1.0    -24384.993652          True           True  False
3  -24384.993652  -24385.033447  75528.986084 -24384.993652    0.039795 -24385.033447   0.000000    0.039795        0.000000     2.0    -24384.993652         False          False  False
4  -24271.483643  -24341.935791  75528.986084 -24271.483643  113.549805 -24341.935791  11.637695   58.814453        1.872314     1.0    -24384.993652         False          False  False
5  -24271.483643  -24284.993408  75627.113525 -24271.483643   58.774902 -24284.993408  11.637695    1.872070       -0.000244     2.0    -24384.993652         False          False   True
6  -24193.928223  -24283.081055  75649.558350 -24193.928223   79.427490 -24283.081055  11.637695   77.515137        0.000000     1.0    -24384.993652         False          False   True
7  -24180.753418  -24205.526123  75735.968506 -24180.753418   90.689941 -24205.526123  11.637695   13.135010       -0.415039     1.0    -24384.993652         False          False   True
8  -24080.338623  -24191.975830  75735.968750 -24080.338623  113.549805 -24191.975830  11.637695   99.999512        0.000000     1.0    -24384.993652         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=7669/4096.[0m
[08/11 11:11:24]  --------------------------------------------------------------------------------
[08/11 11:11:24]  Iteration: 1058 (695 solution, 362 counterexamples)
[08/11 11:15:12]  Generator returned sat in 215.215159 secs.
[08/11 11:15:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:15:18]  Verifer returned unsat in 4.107218 secs.
[08/11 11:15:18]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:15:18]  --------------------------------------------------------------------------------
[08/11 11:15:18]  Iteration: 1059 (696 solution, 362 counterexamples)
[08/11 11:16:14]  Generator returned sat in 44.039625 secs.
[08/11 11:16:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:16:21]  Improved gap from 3/110 to 0
[08/11 11:16:21]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/11 11:16:21]  Verifer returned sat in 4.702558 secs.
[08/11 11:16:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23534.098389  -23645.793701  74478.063477 -23534.098389    0.027100 -23645.793701   0.000000  111.695312       99.972656     9.0    -23645.793701            -1             -1     -1
1  -23534.098389  -23534.152588  74478.063477 -23534.098389    0.027273 -23534.152588   0.000000    0.054199       -0.027344     3.0    -23645.793701         False           True  False
2  -23534.043701  -23534.071045  74578.035889 -23534.043701    0.108887 -23534.071045   0.000000    0.027344       -0.000244     1.0    -23645.793701          True           True  False
3  -23533.989014  -23534.016357  74677.981445 -23533.989014    0.082031 -23534.016357   0.000000    0.027344        0.000000     1.0    -23533.989014         False          False  False
4  -23421.197998  -23488.720947  74677.981445 -23421.197998  112.818359 -23488.720947  12.736328   54.786621        0.054688     1.0    -23533.989014         False          False  False
5  -23417.575439  -23433.907471  74774.304199 -23417.575439   58.409180 -23433.907471  12.736328    3.595703        0.000000     1.0    -23533.989014         False          False   True
6  -23341.884766  -23430.284668  74798.613525 -23341.884766   79.286377 -23430.284668  12.736328   75.663574        0.000000     1.0    -23533.989014         False          False   True
7  -23326.039307  -23354.593750  74882.767822 -23326.039307   91.509033 -23354.593750  12.736328   15.818115       -0.000244     1.0    -23533.989014         False          False   True
8  -23229.039307  -23338.748047  74885.768066 -23229.039307  112.818115 -23338.748047  12.736328   96.972412        0.000000     1.0    -23533.989014         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=7/128.[0m
[08/11 11:16:22]  --------------------------------------------------------------------------------
[08/11 11:16:22]  Iteration: 1060 (696 solution, 363 counterexamples)
[08/11 11:19:27]  Generator returned sat in 172.904317 secs.
[08/11 11:19:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:19:34]  Improved gap from 799/800 to 1.5625
[08/11 11:19:35]  Improved number of small numbers from 60 to 68 out of a max of 114
[08/11 11:19:35]  Verifer returned sat in 6.384105 secs.
[08/11 11:19:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23511.501465  -23537.334639  74381.326904 -23511.501465    0.001250 -23537.334639    0.00125   25.831924       25.831758     9.0    -23537.334639            -1             -1     -1
1  -23511.500264  -23513.062764  74455.492695 -23511.500264   25.833125 -23513.062764    0.00125    1.561250       -0.001250     9.0    -23537.334639         False           True   True
2  -23511.496514  -23511.500264  74553.930195 -23511.496514    1.565000 -23511.500264    0.00125    0.002500       -1.560000     1.0    -23511.497764          True           True  False
3  -23509.935264  -23509.937764  74652.367676 -23509.935264    1.563750 -23509.937764    0.00125    0.001250       -1.561270     1.0    -23509.936514         False          False  False
4  -23480.257764  -23480.965889  74678.084717 -23480.257764   29.678750 -23480.965889    0.00125    0.706875      -46.166729     1.0    -23509.936514         False          False  False
5  -23432.528389  -23434.092139  74776.522070 -23432.528389   48.436250 -23434.092139    0.00125    1.562500        0.000000     1.0    -23509.936514         False          False  False
6  -23330.964639  -23432.528320  74776.522070 -23330.964639  103.126250 -23432.528320    0.00250  101.561182        1.562500     1.0    -23509.936514         False          False  False
7  -23330.964639  -23332.529639  74874.959570 -23330.964639    0.010000 -23332.529639    0.00250    1.562500        0.000000     2.0    -23509.936514         False          False   True
8  -23330.964639  -23330.967139  74874.959717 -23330.964639    1.000000 -23330.967139    0.00250    0.000000      -99.999854     3.0    -23509.936514         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=25/16.[0m
[08/11 11:19:36]  --------------------------------------------------------------------------------
[08/11 11:19:36]  Iteration: 1061 (696 solution, 364 counterexamples)
[08/11 11:23:16]  Generator returned sat in 206.719952 secs.
[08/11 11:23:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:23:19]  Verifer returned unsat in 1.705189 secs.
[08/11 11:23:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:23:19]  --------------------------------------------------------------------------------
[08/11 11:23:19]  Iteration: 1062 (697 solution, 364 counterexamples)
[08/11 11:26:05]  Generator returned sat in 152.932597 secs.
[08/11 11:26:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:26:14]  Improved gap from 0 to 1.5625
[08/11 11:26:15]  Improved number of small numbers from 57 to 64 out of a max of 114
[08/11 11:26:15]  Verifer returned sat in 8.438136 secs.
[08/11 11:26:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -23847.481445  -23847.481462  74876.537109 -23847.481445    0.002441 -23847.481462     0.0000    0.000017       -0.007444     3.0    -23847.481462            -1             -1   False
1  -23845.913962  -23847.473962  74974.974570 -23845.913962    1.567500 -23847.473962     0.0000    1.560000       -0.002500     1.0    -23847.481462         False          False   False
2  -23845.908962  -23845.911462  75073.412070 -23845.908962    1.565000 -23845.911462     0.0000    0.002500       -1.560000     1.0    -23845.908962         False          False   False
3  -23811.129940  -23844.348962  75140.193049 -23811.129940   34.781522 -23844.348962     0.0000   33.219022        0.000000     1.0    -23845.908962         False          False   False
4  -23811.129940  -23811.129940  75238.630371 -23811.129940   20.523261 -23811.129940     0.0000    0.000000       -1.562677     2.0    -23845.908962         False          False   False
5  -23764.524288  -23766.086788  75293.587396 -23764.524288   46.605652 -23766.086788     0.0000    1.562500        0.000000     1.0    -23845.908962         False          False   False
6  -23662.959288  -23764.521729  75293.587396 -23662.959288  103.127500 -23764.521729     0.0025  101.559940        1.562500     1.0    -23845.908962         False          False   False
7  -23662.959288  -23664.524288  75392.024896 -23662.959288    0.010000 -23664.524288     0.0025    1.562500        0.000000     2.0    -23845.908962         False          False    True
8  -23662.959288  -23662.961788  75392.024902 -23662.959288    1.000000 -23662.961788     0.0025    0.000000      -99.999994     3.0    -23845.908962         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25/16.[0m
[08/11 11:26:16]  --------------------------------------------------------------------------------
[08/11 11:26:16]  Iteration: 1063 (697 solution, 365 counterexamples)
[08/11 11:30:38]  Generator returned sat in 249.058388 secs.
[08/11 11:30:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:30:40]  Improved gap from 0 to 23.4375
[08/11 11:30:41]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/11 11:30:41]  Verifer returned sat in 0.986342 secs.
[08/11 11:30:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23635.067627  -23734.967285  75162.337402 -23635.067627    0.100098 -23734.967285      0.000   99.899658       99.899658     5.0    -23734.967285            -1             -1     -1
1  -23611.530029  -23634.967285  75162.337402 -23611.530029  123.437256 -23634.967285      0.000   23.437256       23.437256     1.0    -23734.967285         False           True  False
2  -23611.530029  -23634.967285  75238.899902 -23611.530029    0.099854 -23634.967285      0.000   23.437256       -0.000244     1.0    -23611.530029         False          False  False
3  -23138.217285  -23535.067383  75238.899902 -23138.217285  496.750000 -23535.067383    149.875  246.975098      223.437500     1.0    -23611.530029         False          False  False
4  -23138.217285  -23411.529785  75238.899902 -23138.217285  246.875000 -23411.529785    149.875  123.437500      123.437500     2.0    -23611.530029         False          False   True
5  -23138.217285  -23411.430176  75238.899902 -23138.217285    1.000000 -23411.430176    149.875  123.337891       23.437500     3.0    -23611.530029         False          False   True
6  -23138.217285  -23311.529785  75315.462402 -23138.217285    1.000000 -23311.529785    149.875   23.437500        0.000000     4.0    -23611.530029         False          False   True
7  -23138.217285  -23288.092285  75392.024902 -23138.217285    1.000000 -23288.092285    149.875    0.000000      -23.437500     5.0    -23611.530029         False          False   True
8  -22891.342285  -23264.654785  75392.024902 -22891.342285  246.875000 -23264.654785    149.875  223.437500      123.437500     1.0    -23041.217285          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/11 11:30:41]  --------------------------------------------------------------------------------
[08/11 11:30:41]  Iteration: 1064 (697 solution, 366 counterexamples)
[08/11 11:32:20]  Generator returned sat in 86.272795 secs.
[08/11 11:32:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:32:23]  Improved gap from 0 to 23.4375
[08/11 11:32:23]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/11 11:32:23]  Verifer returned sat in 1.542314 secs.
[08/11 11:32:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -24097.838379  -24121.325928  75085.774902 -24097.838379    0.025000 -24121.325928   0.000000   23.487549       23.437500     2.0    -24121.325928            -1             -1   False
1  -24097.838379  -24121.275879  75162.337402 -24097.838379   23.487305 -24121.275879   0.000000   23.437500        0.000000     2.0    -24121.325928         False          False   False
2  -24097.813477  -24097.838379  75162.337402 -24097.813477   23.462402 -24097.838379   0.000000    0.024902      -99.975098     3.0    -24097.813477         False          False   False
3  -23797.863281  -23919.813477  75162.337402 -23797.863281  299.975098 -23919.813477   0.024902  121.925293       99.950195     1.0    -24097.813477         False           True   False
4  -23771.301025  -23797.863525  75162.337402 -23771.301025  148.487549 -23797.863525   0.024902   26.537598       26.512451     1.0    -24097.813477         False          False    True
5  -23771.301025  -23797.838379  75235.824951 -23771.301025    1.000000 -23797.838379   0.024902   26.512451        0.000000     2.0    -24097.813477         False          False    True
6  -23771.301025  -23771.325928  75312.387451 -23771.301025    1.000000 -23771.325928   0.024902    0.000000      -23.437500     3.0    -24097.813477         False          False    True
7  -23474.325928  -23694.950684  75312.387451 -23474.325928  296.975098 -23694.950684  73.612305  147.012451       99.950195     1.0    -23547.938232          True           True   False
8  -23474.325928  -23647.888184  75312.387451 -23474.325928  146.987549 -23647.888184  73.612305   99.949951       -0.049805     2.0    -23547.938232         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=102349/1024.[0m
[08/11 11:32:24]  --------------------------------------------------------------------------------
[08/11 11:32:24]  Iteration: 1065 (697 solution, 367 counterexamples)
[08/11 11:44:42]  Generator returned sat in 725.099984 secs.
[08/11 11:44:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:44:56]  Improved gap from 0 to 0
[08/11 11:44:57]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/11 11:44:57]  Verifer returned sat in 13.161291 secs.
[08/11 11:44:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -24001.021240  -24051.456658  75010.848389 -24001.021240    0.016357 -24051.456658   0.000000   50.435418       50.435276     5.0    -24051.456658            -1             -1   False
1  -24000.988917  -24001.005046  75060.380789 -24000.988917   50.467742 -24001.005046   0.000000    0.016129        0.000000     1.0    -24051.456658         False          False   False
2  -23900.940529  -23950.150207  75060.380789 -23900.940529  100.064516 -23950.150207   0.016129   49.193548        0.032258     1.0    -24051.456658         False          False   False
3  -23900.908271  -23900.940529  75160.316273 -23900.908271   49.225806 -23900.940529   0.016129    0.016129        0.000000     1.0    -23900.924400         False          False    True
4  -23799.053433  -23850.843755  75160.316273 -23799.053433  101.870968 -23850.843755   1.838710   49.951613        0.032258     1.0    -23900.924400         False          False    True
5  -23799.053433  -23800.924400  75260.284015 -23799.053433   49.935484 -23800.924400   1.838710    0.032258        0.000000     2.0    -23900.924400         False          False    True
6  -23697.505046  -23800.875977  75260.284015 -23697.505046  101.580645 -23800.875977   3.354839  100.016092        0.032258     1.0    -23900.924400         False          False    True
7  -23697.505046  -23700.892142  75360.251757 -23697.505046   49.790323 -23700.892142   3.354839    0.032258        0.000000     2.0    -23900.924400         False          False    True
8  -23595.666336  -23700.859863  75360.251757 -23595.666336  101.870968 -23700.859863   5.161290  100.032237        0.032258     1.0    -23900.924400         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/31.[0m
[08/11 11:44:58]  --------------------------------------------------------------------------------
[08/11 11:44:58]  Iteration: 1066 (697 solution, 368 counterexamples)
[08/11 11:53:34]  Generator returned sat in 503.141954 secs.
[08/11 11:53:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:53:36]  Verifer returned unsat in 0.659119 secs.
[08/11 11:53:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:53:37]  --------------------------------------------------------------------------------
[08/11 11:53:37]  Iteration: 1067 (698 solution, 368 counterexamples)
[08/11 11:54:35]  Generator returned sat in 46.151934 secs.
[08/11 11:54:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:54:38]  Verifer returned unsat in 0.611610 secs.
[08/11 11:54:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:54:38]  --------------------------------------------------------------------------------
[08/11 11:54:38]  Iteration: 1068 (699 solution, 368 counterexamples)
[08/11 11:55:35]  Generator returned sat in 44.345951 secs.
[08/11 11:55:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:55:38]  Verifer returned unsat in 0.997725 secs.
[08/11 11:55:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:55:39]  --------------------------------------------------------------------------------
[08/11 11:55:39]  Iteration: 1069 (700 solution, 368 counterexamples)
[08/11 11:56:38]  Generator returned sat in 46.488371 secs.
[08/11 11:56:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:56:44]  Verifer returned unsat in 3.183692 secs.
[08/11 11:56:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:56:44]  --------------------------------------------------------------------------------
[08/11 11:56:44]  Iteration: 1070 (701 solution, 368 counterexamples)
[08/11 11:58:10]  Generator returned sat in 73.863849 secs.
[08/11 11:58:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:58:16]  Verifer returned unsat in 2.225953 secs.
[08/11 11:58:16]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:58:16]  --------------------------------------------------------------------------------
[08/11 11:58:16]  Iteration: 1071 (702 solution, 368 counterexamples)
[08/11 11:59:15]  Generator returned sat in 47.068131 secs.
[08/11 11:59:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:59:19]  Verifer returned unsat in 1.976682 secs.
[08/11 11:59:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 11:59:20]  --------------------------------------------------------------------------------
[08/11 11:59:20]  Iteration: 1072 (703 solution, 368 counterexamples)
[08/11 12:00:19]  Generator returned sat in 46.693026 secs.
[08/11 12:00:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:00:24]  Verifer returned unsat in 2.824833 secs.
[08/11 12:00:24]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:00:24]  --------------------------------------------------------------------------------
[08/11 12:00:24]  Iteration: 1073 (704 solution, 368 counterexamples)
[08/11 12:01:23]  Generator returned sat in 47.030095 secs.
[08/11 12:01:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:01:26]  Verifer returned unsat in 0.709330 secs.
[08/11 12:01:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:01:26]  --------------------------------------------------------------------------------
[08/11 12:01:26]  Iteration: 1074 (705 solution, 368 counterexamples)
[08/11 12:02:24]  Generator returned sat in 45.688269 secs.
[08/11 12:02:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:02:27]  Verifer returned unsat in 0.688557 secs.
[08/11 12:02:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:02:27]  --------------------------------------------------------------------------------
[08/11 12:02:27]  Iteration: 1075 (706 solution, 368 counterexamples)
[08/11 12:03:25]  Generator returned sat in 45.025605 secs.
[08/11 12:03:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:03:28]  Verifer returned unsat in 0.371674 secs.
[08/11 12:03:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:03:28]  --------------------------------------------------------------------------------
[08/11 12:03:28]  Iteration: 1076 (707 solution, 368 counterexamples)
[08/11 12:04:25]  Generator returned sat in 44.322795 secs.
[08/11 12:04:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:04:27]  Verifer returned unsat in 0.548891 secs.
[08/11 12:04:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:04:27]  --------------------------------------------------------------------------------
[08/11 12:04:27]  Iteration: 1077 (708 solution, 368 counterexamples)
[08/11 12:05:31]  Generator returned sat in 51.330735 secs.
[08/11 12:05:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:05:36]  Verifer returned unsat in 2.320575 secs.
[08/11 12:05:36]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:05:36]  --------------------------------------------------------------------------------
[08/11 12:05:36]  Iteration: 1078 (709 solution, 368 counterexamples)
[08/11 12:06:54]  Generator returned sat in 65.194197 secs.
[08/11 12:06:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:06:57]  Verifer returned unsat in 1.310660 secs.
[08/11 12:06:57]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:06:57]  --------------------------------------------------------------------------------
[08/11 12:06:57]  Iteration: 1079 (710 solution, 368 counterexamples)
[08/11 12:07:55]  Generator returned sat in 44.624977 secs.
[08/11 12:07:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:07:59]  Verifer returned unsat in 1.766530 secs.
[08/11 12:07:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:07:59]  --------------------------------------------------------------------------------
[08/11 12:07:59]  Iteration: 1080 (711 solution, 368 counterexamples)
[08/11 12:08:55]  Generator returned sat in 43.367633 secs.
[08/11 12:08:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:08:58]  Verifer returned unsat in 1.476563 secs.
[08/11 12:08:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:08:58]  --------------------------------------------------------------------------------
[08/11 12:08:58]  Iteration: 1081 (712 solution, 368 counterexamples)
[08/11 12:10:28]  Generator returned sat in 77.104471 secs.
[08/11 12:10:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:10:32]  Verifer returned unsat in 2.208246 secs.
[08/11 12:10:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:10:33]  --------------------------------------------------------------------------------
[08/11 12:10:33]  Iteration: 1082 (713 solution, 368 counterexamples)
[08/11 12:11:30]  Generator returned sat in 44.709513 secs.
[08/11 12:11:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:11:35]  Verifer returned unsat in 2.858415 secs.
[08/11 12:11:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:11:35]  --------------------------------------------------------------------------------
[08/11 12:11:35]  Iteration: 1083 (714 solution, 368 counterexamples)
[08/11 12:12:30]  Generator returned sat in 42.336830 secs.
[08/11 12:12:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:12:34]  Verifer returned unsat in 1.856924 secs.
[08/11 12:12:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:12:34]  --------------------------------------------------------------------------------
[08/11 12:12:34]  Iteration: 1084 (715 solution, 368 counterexamples)
[08/11 12:13:49]  Generator returned sat in 62.213800 secs.
[08/11 12:13:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:13:54]  Verifer returned unsat in 2.871722 secs.
[08/11 12:13:54]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:13:54]  --------------------------------------------------------------------------------
[08/11 12:13:54]  Iteration: 1085 (716 solution, 368 counterexamples)
[08/11 12:15:57]  Generator returned sat in 109.872491 secs.
[08/11 12:15:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:16:03]  Verifer returned unsat in 4.075095 secs.
[08/11 12:16:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:16:03]  --------------------------------------------------------------------------------
[08/11 12:16:03]  Iteration: 1086 (717 solution, 368 counterexamples)
[08/11 12:17:00]  Generator returned sat in 44.484146 secs.
[08/11 12:17:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:17:03]  Verifer returned unsat in 1.043943 secs.
[08/11 12:17:03]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:17:03]  --------------------------------------------------------------------------------
[08/11 12:17:03]  Iteration: 1087 (718 solution, 368 counterexamples)
[08/11 12:19:23]  Generator returned sat in 127.178150 secs.
[08/11 12:19:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:19:35]  Improved gap from 4/97 to 0
[08/11 12:19:35]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 12:19:35]  Verifer returned sat in 9.671849 secs.
[08/11 12:19:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -20598.960938  -20798.970215  75085.035889 -20598.960938    0.009524 -20798.970215   0.009521  199.999756      100.000000     1.0    -20798.970215            -1             -1     -1
1  -20598.960938  -20598.970459  75085.035889 -20598.960938  199.999756 -20598.970459   0.009521    0.000000        0.000000     2.0    -20798.970215         False          False   True
2  -20572.427490  -20572.446533  75158.492920 -20572.427490   26.533447 -20572.446533   0.009521    0.009521       -0.009521     1.0    -20572.437012          True           True  False
3  -20572.408447  -20572.427490  75258.483398 -20572.408447    0.028564 -20572.427490   0.009521    0.009521        0.000000     1.0    -20572.417969         False          False  False
4  -20457.132324  -20529.022461  75258.483398 -20457.132324  115.285645 -20529.022461  15.266602   56.623535        0.019043     1.0    -20572.417969         False          False  False
5  -20455.613037  -20472.389160  75356.945068 -20455.613037   58.142822 -20472.389160  15.266602    1.509521        0.000000     1.0    -20572.417969         False          False   True
6  -20377.022461  -20470.870361  75378.345215 -20377.022461   80.100098 -20470.870361  15.266602   78.581299       -0.009277     1.0    -20572.417969         False          False   True
7  -20363.775146  -20392.279785  75465.107178 -20363.775146   91.828613 -20392.279785  15.266602   13.238037        0.000000     1.0    -20572.417969         False          False   True
8  -20261.727539  -20379.031982  75465.107178 -20261.727539  115.285645 -20379.031982  17.295166  100.009277        0.019043     1.0    -20572.417969         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=39/2048.[0m
[08/11 12:19:36]  --------------------------------------------------------------------------------
[08/11 12:19:36]  Iteration: 1088 (718 solution, 369 counterexamples)
[08/11 12:23:39]  Generator returned sat in 230.496269 secs.
[08/11 12:23:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:23:42]  Verifer returned unsat in 0.744040 secs.
[08/11 12:23:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:23:42]  --------------------------------------------------------------------------------
[08/11 12:23:42]  Iteration: 1089 (719 solution, 369 counterexamples)
[08/11 12:24:39]  Generator returned sat in 44.553660 secs.
[08/11 12:24:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:24:42]  Verifer returned unsat in 0.676223 secs.
[08/11 12:24:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:24:42]  --------------------------------------------------------------------------------
[08/11 12:24:42]  Iteration: 1090 (720 solution, 369 counterexamples)
[08/11 12:25:46]  Generator returned sat in 51.614132 secs.
[08/11 12:25:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:25:49]  Verifer returned unsat in 0.495788 secs.
[08/11 12:25:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:25:49]  --------------------------------------------------------------------------------
[08/11 12:25:49]  Iteration: 1091 (721 solution, 369 counterexamples)
[08/11 12:26:49]  Generator returned sat in 46.632933 secs.
[08/11 12:26:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:26:52]  Verifer returned unsat in 0.845473 secs.
[08/11 12:26:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:26:52]  --------------------------------------------------------------------------------
[08/11 12:26:52]  Iteration: 1092 (722 solution, 369 counterexamples)
[08/11 12:28:18]  Generator returned sat in 73.375033 secs.
[08/11 12:28:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:28:21]  Verifer returned unsat in 0.691773 secs.
[08/11 12:28:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:28:21]  --------------------------------------------------------------------------------
[08/11 12:28:21]  Iteration: 1093 (723 solution, 369 counterexamples)
[08/11 12:31:52]  Generator returned sat in 197.649473 secs.
[08/11 12:31:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:31:55]  Verifer returned unsat in 0.872695 secs.
[08/11 12:31:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:31:55]  --------------------------------------------------------------------------------
[08/11 12:31:55]  Iteration: 1094 (724 solution, 369 counterexamples)
[08/11 12:32:52]  Generator returned sat in 44.406100 secs.
[08/11 12:32:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:32:55]  Verifer returned unsat in 0.689404 secs.
[08/11 12:32:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:32:55]  --------------------------------------------------------------------------------
[08/11 12:32:55]  Iteration: 1095 (725 solution, 369 counterexamples)
[08/11 12:33:53]  Generator returned sat in 45.167934 secs.
[08/11 12:33:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:33:56]  Verifer returned unsat in 0.974407 secs.
[08/11 12:33:56]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:33:57]  --------------------------------------------------------------------------------
[08/11 12:33:57]  Iteration: 1096 (726 solution, 369 counterexamples)
[08/11 12:35:11]  Generator returned sat in 61.744355 secs.
[08/11 12:35:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:35:14]  Verifer returned unsat in 0.860631 secs.
[08/11 12:35:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:35:14]  --------------------------------------------------------------------------------
[08/11 12:35:14]  Iteration: 1097 (727 solution, 369 counterexamples)
[08/11 12:36:10]  Generator returned sat in 43.871342 secs.
[08/11 12:36:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:36:13]  Verifer returned unsat in 0.686899 secs.
[08/11 12:36:13]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:36:13]  --------------------------------------------------------------------------------
[08/11 12:36:13]  Iteration: 1098 (728 solution, 369 counterexamples)
[08/11 12:37:17]  Generator returned sat in 50.633035 secs.
[08/11 12:37:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:37:21]  Verifer returned unsat in 1.222715 secs.
[08/11 12:37:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:37:21]  --------------------------------------------------------------------------------
[08/11 12:37:21]  Iteration: 1099 (729 solution, 369 counterexamples)
[08/11 12:38:18]  Generator returned sat in 44.824916 secs.
[08/11 12:38:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:38:21]  Verifer returned unsat in 0.920514 secs.
[08/11 12:38:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:38:21]  --------------------------------------------------------------------------------
[08/11 12:38:21]  Iteration: 1100 (730 solution, 369 counterexamples)
[08/11 12:39:52]  Generator returned sat in 77.129820 secs.
[08/11 12:39:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:39:55]  Verifer returned unsat in 1.077675 secs.
[08/11 12:39:55]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:39:55]  --------------------------------------------------------------------------------
[08/11 12:39:55]  Iteration: 1101 (731 solution, 369 counterexamples)
[08/11 12:40:55]  Generator returned sat in 46.808752 secs.
[08/11 12:40:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:40:58]  Verifer returned unsat in 0.872039 secs.
[08/11 12:40:58]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:40:58]  --------------------------------------------------------------------------------
[08/11 12:40:58]  Iteration: 1102 (732 solution, 369 counterexamples)
[08/11 12:42:03]  Generator returned sat in 51.636051 secs.
[08/11 12:42:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:42:06]  Verifer returned unsat in 0.815456 secs.
[08/11 12:42:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:42:06]  --------------------------------------------------------------------------------
[08/11 12:42:06]  Iteration: 1103 (733 solution, 369 counterexamples)
[08/11 12:43:05]  Generator returned sat in 46.334977 secs.
[08/11 12:43:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:43:08]  Verifer returned unsat in 0.991473 secs.
[08/11 12:43:08]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:43:09]  --------------------------------------------------------------------------------
[08/11 12:43:09]  Iteration: 1104 (734 solution, 369 counterexamples)
[08/11 12:44:08]  Generator returned sat in 46.968771 secs.
[08/11 12:44:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:44:11]  Verifer returned unsat in 0.805021 secs.
[08/11 12:44:11]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:44:11]  --------------------------------------------------------------------------------
[08/11 12:44:11]  Iteration: 1105 (735 solution, 369 counterexamples)
[08/11 12:45:09]  Generator returned sat in 44.717552 secs.
[08/11 12:45:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:45:12]  Verifer returned unsat in 0.882550 secs.
[08/11 12:45:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:45:12]  --------------------------------------------------------------------------------
[08/11 12:45:12]  Iteration: 1106 (736 solution, 369 counterexamples)
[08/11 12:46:16]  Generator returned sat in 51.420776 secs.
[08/11 12:46:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:46:19]  Verifer returned unsat in 0.714068 secs.
[08/11 12:46:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:46:19]  --------------------------------------------------------------------------------
[08/11 12:46:19]  Iteration: 1107 (737 solution, 369 counterexamples)
[08/11 12:47:23]  Generator returned sat in 50.724522 secs.
[08/11 12:47:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:47:26]  Verifer returned unsat in 0.845773 secs.
[08/11 12:47:26]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:47:26]  --------------------------------------------------------------------------------
[08/11 12:47:26]  Iteration: 1108 (738 solution, 369 counterexamples)
[08/11 12:48:27]  Generator returned sat in 48.461379 secs.
[08/11 12:48:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:48:30]  Verifer returned unsat in 0.750200 secs.
[08/11 12:48:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:48:30]  --------------------------------------------------------------------------------
[08/11 12:48:30]  Iteration: 1109 (739 solution, 369 counterexamples)
[08/11 12:49:31]  Generator returned sat in 48.503017 secs.
[08/11 12:49:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:49:34]  Verifer returned unsat in 0.956627 secs.
[08/11 12:49:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:49:34]  --------------------------------------------------------------------------------
[08/11 12:49:34]  Iteration: 1110 (740 solution, 369 counterexamples)
[08/11 12:50:39]  Generator returned sat in 52.349134 secs.
[08/11 12:50:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:50:43]  Verifer returned unsat in 1.072057 secs.
[08/11 12:50:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:50:43]  --------------------------------------------------------------------------------
[08/11 12:50:43]  Iteration: 1111 (741 solution, 369 counterexamples)
[08/11 12:51:42]  Generator returned sat in 45.922908 secs.
[08/11 12:51:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:51:45]  Verifer returned unsat in 0.959100 secs.
[08/11 12:51:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:51:45]  --------------------------------------------------------------------------------
[08/11 12:51:45]  Iteration: 1112 (742 solution, 369 counterexamples)
[08/11 12:52:45]  Generator returned sat in 46.959281 secs.
[08/11 12:52:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:52:47]  Verifer returned unsat in 0.741928 secs.
[08/11 12:52:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:52:48]  --------------------------------------------------------------------------------
[08/11 12:52:48]  Iteration: 1113 (743 solution, 369 counterexamples)
[08/11 12:53:47]  Generator returned sat in 46.636530 secs.
[08/11 12:53:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:53:50]  Verifer returned unsat in 0.758540 secs.
[08/11 12:53:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:53:50]  --------------------------------------------------------------------------------
[08/11 12:53:50]  Iteration: 1114 (744 solution, 369 counterexamples)
[08/11 12:54:55]  Generator returned sat in 52.348781 secs.
[08/11 12:54:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:54:59]  Verifer returned unsat in 1.663682 secs.
[08/11 12:54:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:54:59]  --------------------------------------------------------------------------------
[08/11 12:54:59]  Iteration: 1115 (745 solution, 369 counterexamples)
[08/11 12:56:01]  Generator returned sat in 49.238045 secs.
[08/11 12:56:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:56:04]  Verifer returned unsat in 0.758725 secs.
[08/11 12:56:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:56:04]  --------------------------------------------------------------------------------
[08/11 12:56:04]  Iteration: 1116 (746 solution, 369 counterexamples)
[08/11 12:57:04]  Generator returned sat in 47.794910 secs.
[08/11 12:57:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:57:07]  Verifer returned unsat in 0.716111 secs.
[08/11 12:57:07]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:57:07]  --------------------------------------------------------------------------------
[08/11 12:57:07]  Iteration: 1117 (747 solution, 369 counterexamples)
[08/11 12:58:07]  Generator returned sat in 46.975911 secs.
[08/11 12:58:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:58:10]  Verifer returned unsat in 0.755291 secs.
[08/11 12:58:10]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:58:10]  --------------------------------------------------------------------------------
[08/11 12:58:10]  Iteration: 1118 (748 solution, 369 counterexamples)
[08/11 12:59:09]  Generator returned sat in 46.670114 secs.
[08/11 12:59:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:59:12]  Verifer returned unsat in 0.731041 secs.
[08/11 12:59:12]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 12:59:12]  --------------------------------------------------------------------------------
[08/11 12:59:12]  Iteration: 1119 (749 solution, 369 counterexamples)
[08/11 13:00:18]  Generator returned sat in 52.930417 secs.
[08/11 13:00:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:00:21]  Verifer returned unsat in 0.948745 secs.
[08/11 13:00:21]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:00:21]  --------------------------------------------------------------------------------
[08/11 13:00:21]  Iteration: 1120 (750 solution, 369 counterexamples)
[08/11 13:01:20]  Generator returned sat in 46.483634 secs.
[08/11 13:01:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:01:23]  Verifer returned unsat in 0.852889 secs.
[08/11 13:01:23]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:01:24]  --------------------------------------------------------------------------------
[08/11 13:01:24]  Iteration: 1121 (751 solution, 369 counterexamples)
[08/11 13:02:29]  Generator returned sat in 52.721522 secs.
[08/11 13:02:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:02:32]  Verifer returned unsat in 0.834253 secs.
[08/11 13:02:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:02:32]  --------------------------------------------------------------------------------
[08/11 13:02:32]  Iteration: 1122 (752 solution, 369 counterexamples)
[08/11 13:03:32]  Generator returned sat in 46.657836 secs.
[08/11 13:03:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:03:35]  Verifer returned unsat in 0.761774 secs.
[08/11 13:03:35]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:03:35]  --------------------------------------------------------------------------------
[08/11 13:03:35]  Iteration: 1123 (753 solution, 369 counterexamples)
[08/11 13:04:37]  Generator returned sat in 49.478264 secs.
[08/11 13:04:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:04:40]  Verifer returned unsat in 0.981087 secs.
[08/11 13:04:40]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:04:40]  --------------------------------------------------------------------------------
[08/11 13:04:40]  Iteration: 1124 (754 solution, 369 counterexamples)
[08/11 13:05:40]  Generator returned sat in 46.386828 secs.
[08/11 13:05:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:05:43]  Verifer returned unsat in 0.883451 secs.
[08/11 13:05:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:05:43]  --------------------------------------------------------------------------------
[08/11 13:05:43]  Iteration: 1125 (755 solution, 369 counterexamples)
[08/11 13:06:44]  Generator returned sat in 48.761656 secs.
[08/11 13:06:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:06:47]  Verifer returned unsat in 0.707632 secs.
[08/11 13:06:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:06:47]  --------------------------------------------------------------------------------
[08/11 13:06:47]  Iteration: 1126 (756 solution, 369 counterexamples)
[08/11 13:07:45]  Generator returned sat in 45.454856 secs.
[08/11 13:07:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:07:49]  Verifer returned unsat in 1.038961 secs.
[08/11 13:07:49]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:07:49]  --------------------------------------------------------------------------------
[08/11 13:07:49]  Iteration: 1127 (757 solution, 369 counterexamples)
[08/11 13:08:48]  Generator returned sat in 46.553202 secs.
[08/11 13:08:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:08:51]  Verifer returned unsat in 0.974153 secs.
[08/11 13:08:51]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:08:51]  --------------------------------------------------------------------------------
[08/11 13:08:51]  Iteration: 1128 (758 solution, 369 counterexamples)
[08/11 13:09:58]  Generator returned sat in 54.344668 secs.
[08/11 13:10:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:10:01]  Verifer returned unsat in 0.844429 secs.
[08/11 13:10:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:10:01]  --------------------------------------------------------------------------------
[08/11 13:10:01]  Iteration: 1129 (759 solution, 369 counterexamples)
[08/11 13:11:01]  Generator returned sat in 46.633260 secs.
[08/11 13:11:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:11:04]  Verifer returned unsat in 0.843087 secs.
[08/11 13:11:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:11:04]  --------------------------------------------------------------------------------
[08/11 13:11:04]  Iteration: 1130 (760 solution, 369 counterexamples)
[08/11 13:12:28]  Generator returned sat in 71.929074 secs.
[08/11 13:12:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:12:31]  Verifer returned unsat in 0.841555 secs.
[08/11 13:12:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:12:31]  --------------------------------------------------------------------------------
[08/11 13:12:31]  Iteration: 1131 (761 solution, 369 counterexamples)
[08/11 13:13:30]  Generator returned sat in 46.451206 secs.
[08/11 13:13:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:13:33]  Verifer returned unsat in 0.835469 secs.
[08/11 13:13:33]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:13:34]  --------------------------------------------------------------------------------
[08/11 13:13:34]  Iteration: 1132 (762 solution, 369 counterexamples)
[08/11 13:14:35]  Generator returned sat in 48.860288 secs.
[08/11 13:14:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:14:38]  Verifer returned unsat in 1.241875 secs.
[08/11 13:14:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:14:38]  --------------------------------------------------------------------------------
[08/11 13:14:38]  Iteration: 1133 (763 solution, 369 counterexamples)
[08/11 13:15:38]  Generator returned sat in 46.777177 secs.
[08/11 13:15:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:15:41]  Verifer returned unsat in 0.548400 secs.
[08/11 13:15:41]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:15:41]  --------------------------------------------------------------------------------
[08/11 13:15:41]  Iteration: 1134 (764 solution, 369 counterexamples)
[08/11 13:16:39]  Generator returned sat in 45.237826 secs.
[08/11 13:16:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:16:42]  Verifer returned unsat in 1.010223 secs.
[08/11 13:16:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:16:42]  --------------------------------------------------------------------------------
[08/11 13:16:42]  Iteration: 1135 (765 solution, 369 counterexamples)
[08/11 13:17:41]  Generator returned sat in 45.957835 secs.
[08/11 13:17:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:17:44]  Verifer returned unsat in 0.852987 secs.
[08/11 13:17:44]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:17:44]  --------------------------------------------------------------------------------
[08/11 13:17:44]  Iteration: 1136 (766 solution, 369 counterexamples)
[08/11 13:18:43]  Generator returned sat in 45.799721 secs.
[08/11 13:18:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:18:46]  Verifer returned unsat in 1.255444 secs.
[08/11 13:18:46]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:18:46]  --------------------------------------------------------------------------------
[08/11 13:18:46]  Iteration: 1137 (767 solution, 369 counterexamples)
[08/11 13:19:44]  Generator returned sat in 44.462945 secs.
[08/11 13:19:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:19:47]  Verifer returned unsat in 1.106587 secs.
[08/11 13:19:47]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:19:47]  --------------------------------------------------------------------------------
[08/11 13:19:47]  Iteration: 1138 (768 solution, 369 counterexamples)
[08/11 13:20:47]  Generator returned sat in 47.610476 secs.
[08/11 13:20:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:20:53]  Verifer returned unsat in 3.270791 secs.
[08/11 13:20:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:20:53]  --------------------------------------------------------------------------------
[08/11 13:20:53]  Iteration: 1139 (769 solution, 369 counterexamples)
[08/11 13:21:56]  Generator returned sat in 50.647886 secs.
[08/11 13:21:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:22:01]  Verifer returned unsat in 2.607083 secs.
[08/11 13:22:01]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:22:01]  --------------------------------------------------------------------------------
[08/11 13:22:01]  Iteration: 1140 (770 solution, 369 counterexamples)
[08/11 13:23:20]  Generator returned sat in 66.514487 secs.
[08/11 13:23:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:23:25]  Verifer returned unsat in 2.382150 secs.
[08/11 13:23:25]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:23:25]  --------------------------------------------------------------------------------
[08/11 13:23:25]  Iteration: 1141 (771 solution, 369 counterexamples)
[08/11 13:24:46]  Generator returned sat in 68.738451 secs.
[08/11 13:24:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:24:50]  Verifer returned unsat in 1.933634 secs.
[08/11 13:24:50]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:24:51]  --------------------------------------------------------------------------------
[08/11 13:24:51]  Iteration: 1142 (772 solution, 369 counterexamples)
[08/11 13:25:55]  Generator returned sat in 52.152550 secs.
[08/11 13:25:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:25:59]  Verifer returned unsat in 1.398989 secs.
[08/11 13:25:59]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:25:59]  --------------------------------------------------------------------------------
[08/11 13:25:59]  Iteration: 1143 (773 solution, 369 counterexamples)
[08/11 13:27:00]  Generator returned sat in 48.975878 secs.
[08/11 13:27:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:27:05]  Verifer returned unsat in 1.998085 secs.
[08/11 13:27:05]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:27:05]  --------------------------------------------------------------------------------
[08/11 13:27:05]  Iteration: 1144 (774 solution, 369 counterexamples)
[08/11 13:28:16]  Generator returned sat in 58.365959 secs.
[08/11 13:28:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:28:19]  Verifer returned unsat in 0.748678 secs.
[08/11 13:28:19]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:28:19]  --------------------------------------------------------------------------------
[08/11 13:28:19]  Iteration: 1145 (775 solution, 369 counterexamples)
[08/11 13:29:26]  Generator returned sat in 54.609626 secs.
[08/11 13:29:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:29:29]  Verifer returned unsat in 0.872002 secs.
[08/11 13:29:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:29:29]  --------------------------------------------------------------------------------
[08/11 13:29:29]  Iteration: 1146 (776 solution, 369 counterexamples)
[08/11 13:30:26]  Generator returned sat in 43.911549 secs.
[08/11 13:30:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:30:29]  Verifer returned unsat in 0.787114 secs.
[08/11 13:30:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:30:29]  --------------------------------------------------------------------------------
[08/11 13:30:29]  Iteration: 1147 (777 solution, 369 counterexamples)
[08/11 13:31:29]  Generator returned sat in 47.195464 secs.
[08/11 13:31:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:31:32]  Verifer returned unsat in 0.827554 secs.
[08/11 13:31:32]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:31:32]  --------------------------------------------------------------------------------
[08/11 13:31:32]  Iteration: 1148 (778 solution, 369 counterexamples)
[08/11 13:32:28]  Generator returned sat in 43.049848 secs.
[08/11 13:32:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:32:31]  Verifer returned unsat in 1.076962 secs.
[08/11 13:32:31]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:32:31]  --------------------------------------------------------------------------------
[08/11 13:32:31]  Iteration: 1149 (779 solution, 369 counterexamples)
[08/11 13:37:06]  Generator returned sat in 261.985989 secs.
[08/11 13:37:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:37:09]  Verifer returned unsat in 1.244201 secs.
[08/11 13:37:09]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:37:09]  --------------------------------------------------------------------------------
[08/11 13:37:09]  Iteration: 1150 (780 solution, 369 counterexamples)
[08/11 13:38:49]  Generator returned sat in 87.699005 secs.
[08/11 13:38:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:38:52]  Verifer returned unsat in 0.414442 secs.
[08/11 13:38:52]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:38:52]  --------------------------------------------------------------------------------
[08/11 13:38:52]  Iteration: 1151 (781 solution, 369 counterexamples)
[08/11 13:39:50]  Generator returned sat in 45.054567 secs.
[08/11 13:39:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:39:53]  Verifer returned unsat in 0.656628 secs.
[08/11 13:39:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:39:53]  --------------------------------------------------------------------------------
[08/11 13:39:53]  Iteration: 1152 (782 solution, 369 counterexamples)
[08/11 13:40:51]  Generator returned sat in 45.002054 secs.
[08/11 13:40:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:40:53]  Verifer returned unsat in 0.468281 secs.
[08/11 13:40:53]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:40:53]  --------------------------------------------------------------------------------
[08/11 13:40:53]  Iteration: 1153 (783 solution, 369 counterexamples)
[08/11 13:42:23]  Generator returned sat in 76.688311 secs.
[08/11 13:42:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:42:28]  Verifer returned unsat in 3.054131 secs.
[08/11 13:42:28]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:42:28]  --------------------------------------------------------------------------------
[08/11 13:42:28]  Iteration: 1154 (784 solution, 369 counterexamples)
[08/11 13:43:26]  Generator returned sat in 44.695572 secs.
[08/11 13:43:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:43:29]  Verifer returned unsat in 1.659995 secs.
[08/11 13:43:29]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:43:30]  --------------------------------------------------------------------------------
[08/11 13:43:30]  Iteration: 1155 (785 solution, 369 counterexamples)
[08/11 13:44:27]  Generator returned sat in 44.310354 secs.
[08/11 13:44:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:44:30]  Verifer returned unsat in 1.519832 secs.
[08/11 13:44:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:44:30]  --------------------------------------------------------------------------------
[08/11 13:44:30]  Iteration: 1156 (786 solution, 369 counterexamples)
[08/11 13:45:38]  Generator returned sat in 54.536654 secs.
[08/11 13:45:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:45:42]  Verifer returned unsat in 1.952471 secs.
[08/11 13:45:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:45:42]  --------------------------------------------------------------------------------
[08/11 13:45:42]  Iteration: 1157 (787 solution, 369 counterexamples)
[08/11 13:47:37]  Generator returned sat in 102.609941 secs.
[08/11 13:47:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:47:47]  Improved gap from 0 to 0
[08/11 13:47:49]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/11 13:47:49]  Verifer returned sat in 9.951666 secs.
[08/11 13:47:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7482.680420    7369.116211  72298.096191  7482.680420    0.003174  7369.116211   0.003174  113.561035       86.432617     2.0      7369.116211            -1             -1     -1
1    7482.686768    7482.680176  72298.096436  7482.686768  113.567383  7482.680176   0.003174    0.003418      -13.560791     1.0      7369.116211         False          False   True
2    7596.250977    7596.241211  72298.096436  7596.250977  113.567627  7596.241211   0.003174    0.006592        0.003418     1.0      7369.116211         False          False   True
3    7596.250977    7596.244629  72398.093018  7596.250977    0.003418  7596.244629   0.003174    0.003174        0.000000     2.0      7596.247803         False          False   True
4    7711.313721    7642.093262  72398.093018  7711.313721  115.065918  7642.093262  12.184326   57.036133        2.881592     1.0      7596.247803         False          False   True
5    7711.313721    7696.247803  72495.208252  7711.313721   57.032959  7696.247803  12.184326    2.881592       -0.003174     2.0      7596.247803         False          False   True
6    7788.451904    7699.132568  72518.073242  7788.451904   80.019775  7699.132568  12.184326   77.135010        0.000000     1.0      7596.247803         False          False   True
7    7804.270752    7776.270752  72602.254150  7804.270752   92.953857  7776.270752  12.184326   15.815674       -0.000244     1.0      7596.247803         False          False   True
8    7903.520752    7792.090088  72603.004150  7903.520752  115.065674  7792.090088  12.184326   99.246338       -0.000244     1.0      7596.247803         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=11803/4096.[0m
[08/11 13:47:50]  --------------------------------------------------------------------------------
[08/11 13:47:50]  Iteration: 1158 (787 solution, 370 counterexamples)
[08/11 13:51:10]  Generator returned sat in 187.901594 secs.
[08/11 13:51:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:51:14]  Verifer returned unsat in 0.809356 secs.
[08/11 13:51:14]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:51:14]  --------------------------------------------------------------------------------
[08/11 13:51:14]  Iteration: 1159 (788 solution, 370 counterexamples)
[08/11 13:53:44]  Generator returned sat in 138.083134 secs.
[08/11 13:53:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 13:53:48]  Improved gap from 0 to 23.4375
[08/11 13:53:48]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/11 13:53:48]  Verifer returned sat in 1.599307 secs.
[08/11 13:53:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7628.583252    7528.883301  72298.095947  7628.583252    0.100098  7528.883301      0.000   99.699951       99.699951     9.0      7528.883301            -1             -1     -1
1    7628.783203    7628.683105  72298.095947  7628.783203   99.899902  7628.683105      0.000    0.100098       -0.100098     1.0      7528.883301         False           True  False
2    7652.320557    7628.883301  72374.658447  7652.320557   23.637451  7628.883301      0.000   23.437256       -0.000244     1.0      7652.320557         False          False  False
3    8126.633301    7728.783447  72374.658447  8126.633301  497.750000  7728.783447    150.875  246.974854      223.437500     1.0      7652.320557         False          False  False
4    8126.633301    7852.320801  72374.658447  8126.633301  246.875000  7852.320801    150.875  123.437500      123.437500     2.0      7652.320557         False          False   True
5    8126.633301    7952.220947  72374.658447  8126.633301    1.000000  7952.220947    150.875   23.537354       23.437500     3.0      7652.320557         False          False   True
6    8126.633301    7952.320801  72451.220947  8126.633301    1.000000  7952.320801    150.875   23.437500        0.000000     4.0      7652.320557         False          False   True
7    8126.633301    7975.758301  72527.783447  8126.633301    1.000000  7975.758301    150.875    0.000000      -23.437500     5.0      7652.320557         False          False   True
8    8373.508301    7999.195801  72527.783447  8373.508301  246.875000  7999.195801    150.875  223.437500      123.437500     1.0      8222.633301          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3575/16.[0m
[08/11 13:53:49]  --------------------------------------------------------------------------------
[08/11 13:53:49]  Iteration: 1160 (788 solution, 371 counterexamples)
[08/11 14:00:41]  Generator returned sat in 399.544769 secs.
[08/11 14:00:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:00:45]  Verifer returned unsat in 2.117247 secs.
[08/11 14:00:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:00:46]  --------------------------------------------------------------------------------
[08/11 14:00:46]  Iteration: 1161 (789 solution, 371 counterexamples)
[08/11 14:02:02]  Generator returned sat in 63.759444 secs.
[08/11 14:02:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:02:06]  Verifer returned unsat in 1.492920 secs.
[08/11 14:02:06]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:02:06]  --------------------------------------------------------------------------------
[08/11 14:02:06]  Iteration: 1162 (790 solution, 371 counterexamples)
[08/11 14:03:18]  Generator returned sat in 59.522180 secs.
[08/11 14:03:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:03:22]  Verifer returned unsat in 1.493250 secs.
[08/11 14:03:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:03:22]  --------------------------------------------------------------------------------
[08/11 14:03:22]  Iteration: 1163 (791 solution, 371 counterexamples)
[08/11 14:07:05]  Generator returned sat in 210.726024 secs.
[08/11 14:07:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:07:10]  Improved gap from 0 to 17.1875
[08/11 14:07:11]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/11 14:07:11]  Verifer returned sat in 3.327467 secs.
[08/11 14:07:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   11326.128174   10940.790771  72363.020752  11326.128174  385.337500  10940.790771   0.050049  385.287354      385.287354     6.0     10940.790771            -1             -1     -1
1   11326.128174   10940.790771  72363.020752  11326.128174  385.287354  10940.790771   0.050049  385.287354      285.287354     6.0     11326.078125         False          False   True
2   11392.990723   11140.790527  72363.020752  11392.990723  452.149902  11140.790527   0.050049  252.150146      252.149902     7.0     11326.078125         False          False   True
3   11392.990723   11198.790771  72363.020752  11392.990723  252.100098  11198.790771   0.050049  194.149902      152.149902     8.0     11392.940674         False          False   True
4   11458.840820   11326.078125  72363.020752  11458.840820  260.000000  11326.078125   0.050049  132.712646      118.000000     9.0     11392.940674         False          False   True
5   11458.840820   11392.990723  72363.020752  11458.840820  130.500000  11392.990723   0.050049   65.800049       18.000000     2.0     11392.940674         False           True  False
6   11458.840820   11441.603027  72445.020752  11458.840820   65.750000  11441.603027   0.050049   17.187744        0.000000     3.0     11392.940674         False          False  False
7   11475.028076   11458.840820  72527.783203  11475.028076   33.375000  11458.840820   0.050049   16.137207       -1.050293     1.0     11392.940674         False          False  False
8   11476.078369   11476.028320  72527.783447  11476.078369   17.187500  11476.028320   0.050049    0.000000      -99.999756     1.0     11392.940674         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=22827/80.[0m
[08/11 14:07:11]  --------------------------------------------------------------------------------
[08/11 14:07:11]  Iteration: 1164 (791 solution, 372 counterexamples)
[08/11 14:10:40]  Generator returned sat in 196.389801 secs.
[08/11 14:10:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:10:45]  Verifer returned unsat in 2.467710 secs.
[08/11 14:10:45]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:10:45]  --------------------------------------------------------------------------------
[08/11 14:10:45]  Iteration: 1165 (792 solution, 372 counterexamples)
[08/11 14:11:57]  Generator returned sat in 59.754284 secs.
[08/11 14:12:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:12:02]  Verifer returned unsat in 1.932981 secs.
[08/11 14:12:02]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:12:02]  --------------------------------------------------------------------------------
[08/11 14:12:02]  Iteration: 1166 (793 solution, 372 counterexamples)
[08/11 14:13:00]  Generator returned sat in 45.007217 secs.
[08/11 14:13:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:13:04]  Verifer returned unsat in 2.617214 secs.
[08/11 14:13:04]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:13:04]  --------------------------------------------------------------------------------
[08/11 14:13:04]  Iteration: 1167 (794 solution, 372 counterexamples)
[08/11 14:14:16]  Generator returned sat in 59.082304 secs.
[08/11 14:14:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:14:22]  Verifer returned unsat in 3.517414 secs.
[08/11 14:14:22]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:14:22]  --------------------------------------------------------------------------------
[08/11 14:14:22]  Iteration: 1168 (795 solution, 372 counterexamples)
[08/11 14:15:22]  Generator returned sat in 46.473220 secs.
[08/11 14:15:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:15:27]  Verifer returned unsat in 2.335442 secs.
[08/11 14:15:27]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:15:27]  --------------------------------------------------------------------------------
[08/11 14:15:27]  Iteration: 1169 (796 solution, 372 counterexamples)
[08/11 14:16:26]  Generator returned sat in 46.598132 secs.
[08/11 14:16:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:16:30]  Verifer returned unsat in 1.710968 secs.
[08/11 14:16:30]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:16:30]  --------------------------------------------------------------------------------
[08/11 14:16:30]  Iteration: 1170 (797 solution, 372 counterexamples)
[08/11 14:17:29]  Generator returned sat in 46.379637 secs.
[08/11 14:17:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:17:34]  Verifer returned unsat in 2.711601 secs.
[08/11 14:17:34]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:17:35]  --------------------------------------------------------------------------------
[08/11 14:17:35]  Iteration: 1171 (798 solution, 372 counterexamples)
[08/11 14:18:34]  Generator returned sat in 46.853412 secs.
[08/11 14:18:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:18:38]  Verifer returned unsat in 2.121157 secs.
[08/11 14:18:38]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:18:39]  --------------------------------------------------------------------------------
[08/11 14:18:39]  Iteration: 1172 (799 solution, 372 counterexamples)
[08/11 14:19:40]  Generator returned sat in 47.975813 secs.
[08/11 14:19:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:19:43]  Verifer returned unsat in 0.714240 secs.
[08/11 14:19:43]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/11 14:19:43]  --------------------------------------------------------------------------------
[08/11 14:19:43]  Iteration: 1173 (800 solution, 372 counterexamples)
