[08/10 15:15:19]  --------------------------------------------------------------------------------
[08/10 15:15:19]  Iteration: 1 (0 solution, 0 counterexamples)
[08/10 15:15:19]  Generator returned sat in 0.004271 secs.
[08/10 15:15:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:19]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:19]  Verifer returned sat in 0.394382 secs.
[08/10 15:15:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0         -100.1        -1508.5    1508.1       -100.1       0.1      -1508.5        0.0   1408.4          1408.0     8.0          -1508.5            -1             -1   False
1         -100.1        -1408.1    1508.1       -100.1    1408.3      -1408.1        0.0   1308.0          1308.0     9.0          -1508.5         False          False   False
2            0.1        -1308.2    1508.1          0.1    1408.2      -1308.2        0.1   1308.2          1308.1     8.0              0.0          True           True   False
3            0.1        -1308.1    1508.1          0.1       0.1      -1308.1        0.1   1308.1          1208.1     9.0              0.0         False          False    True
4            0.1        -1208.1    1508.1          0.1     403.0      -1208.1        0.1   1208.1          1108.1     5.0              0.0         False           True   False
5            0.1        -1108.1    1508.1          0.1    1208.0      -1108.1        0.1   1108.1          1008.1     6.0              0.0         False          False   False
6         1710.2        -1008.1    1508.1       1710.2    2818.2      -1008.1     1310.2   1408.1          1308.1     7.0              0.0         False          False   False
7         6540.5         -808.1    1508.1       6540.5    6238.4       -808.1     6040.5   1308.1          1308.1     8.0              0.0         False          False    True
8        18511.2         -708.1    1508.1      18511.2   13278.8       -708.1    17911.2   1308.1          1308.1     9.0              0.0         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=13081/10.[0m
[08/10 15:15:20]  --------------------------------------------------------------------------------
[08/10 15:15:20]  Iteration: 2 (0 solution, 1 counterexamples)
[08/10 15:15:20]  Generator returned sat in 0.035892 secs.
[08/10 15:15:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:20]  Improved number of small numbers from 109 to 109 out of a max of 113
[08/10 15:15:20]  Verifer returned sat in 0.499872 secs.
[08/10 15:15:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4742.760000   -1200.430000   1100.43  4742.760000     0.050000 -1200.430000  5143.240000   799.950000          699.95     7.0         -1200.43            -1             -1   False
1    4942.960000   -1000.430000   1100.43  4942.960000  1000.150000 -1000.430000  5143.240000   800.150000          800.15     8.0         -1200.43         False          False   False
2    5142.910000   -1000.380000   1100.43  5142.910000  1000.100000 -1000.380000  5143.290000  1000.000000          900.05     3.0            -0.38          True           True   False
3    5142.910000    -900.430000   1100.43  5142.910000     0.050000  -900.430000  5143.290000   900.050000          800.05     4.0            -0.38         False          False    True
4    5142.910000    -800.430000   1100.43  5142.910000   298.575000  -800.430000  5143.290000   800.050000          700.05     5.0            -0.38         False          False    True
5    5142.910000    -600.430000   1100.43  5142.910000   646.362500  -600.430000  5143.290000   600.050000          600.05     6.0            -0.38         False          False    True
6    5910.853750    -542.403437   1100.43  5910.853750  1367.993750  -542.403437  5511.233750   942.023438          900.05     7.0            -0.38         False          False    True
7    6010.853750    -400.430000   1100.43  6010.853750  1042.023438  -400.430000  5511.233750   900.050000          900.05     7.0            -0.38         False          False    True
8    7072.338906    -300.430000   1100.43  7072.338906  1961.535156  -300.430000  6472.718906   900.050000          900.05     8.0            -0.38         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=18001/20.[0m
[08/10 15:15:21]  --------------------------------------------------------------------------------
[08/10 15:15:21]  Iteration: 3 (0 solution, 2 counterexamples)
[08/10 15:15:21]  Generator returned sat in 0.102059 secs.
[08/10 15:15:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:22]  Improved gap from 0 to 23.4375
[08/10 15:15:22]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/10 15:15:22]  Verifer returned sat in 1.099729 secs.
[08/10 15:15:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4141.447266   -1000.403809  1000.403809  4141.447266  100.003662 -1000.403809  5141.851074    0.000000        0.000000     9.0     -1000.403809            -1             -1     -1
1    4241.449707    -900.403809  1000.403809  4241.449707  100.002441  -900.403809  5141.851074    0.002441        0.002441     1.0      -900.401367         False           True   True
2    4241.449707    -900.403809  1000.403809  4241.449707    0.001465  -900.403809  5141.851074    0.002441      -99.997559     1.0      -900.401367         False          False   True
3    4363.323486    -800.403809  1076.966309  4363.323486  121.876221  -800.403809  5141.851074   21.876221       -1.561279     1.0      -900.401367         False          False   True
4    4539.947266    -676.966309  1076.966309  4539.947266  198.500000  -676.966309  5193.476074   23.437500       23.437500     1.0      -900.401367         False          False   True
5    4539.947266    -676.966309  1153.528809  4539.947266    0.010000  -676.966309  5193.476074   23.437500        0.000000     1.0      -900.401367         False          False   True
6    4738.447266    -653.527588  1153.528809  4738.447266  221.937500  -653.527588  5268.538574  123.436279       23.437500     1.0      -900.401367         False          False   True
7    4738.447266    -553.528809  1230.091309  4738.447266    0.010000  -553.528809  5268.538574   23.437500        0.000000     2.0      -900.401367         False          False   True
8    4738.447266    -530.091309  1230.091309  4738.447266    0.010000  -530.091309  5268.538574    0.000000     -100.000000     3.0      -530.091309          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/10 15:15:23]  --------------------------------------------------------------------------------
[08/10 15:15:23]  Iteration: 4 (0 solution, 3 counterexamples)
[08/10 15:15:23]  Generator returned sat in 0.013406 secs.
[08/10 15:15:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:23]  Improved gap from 144/5 to 100
[08/10 15:15:23]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 15:15:23]  Verifer returned sat in 0.360551 secs.
[08/10 15:15:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4340.699707    -900.401367  1153.528809  4340.699707    0.050000  -900.401367  5141.401123   99.699951       98.350098     9.0      -900.401367            -1             -1     -1
1    4342.849854    -800.701416  1153.528809  4342.849854  101.850098  -800.701416  5141.801270    1.750000        0.100098     3.0      -900.401367         False           True   True
2    4442.899658    -798.901611  1153.528809  4442.899658  101.799805  -798.901611  5141.851074   99.950195        0.100098     1.0      -698.951416          True           True   True
3    4542.799561    -698.901367  1153.528809  4542.799561  199.850098  -698.901367  5141.851074   99.849854        0.000000     1.0      -698.951416         False          False   True
4    4642.949707    -599.051514  1153.528809  4642.949707  200.000000  -599.051514  5141.901123  100.100098        0.100098     2.0      -698.951416         False          False   True
5    4742.999512    -399.051514  1153.528809  4742.999512  200.149902  -399.051514  5141.950928    0.100098        0.100098     1.0      -398.951416          True           True   True
6    5141.249512    -399.051270  1153.528809  5141.249512  398.350098  -399.051270  5440.200928  100.099854        0.100098     2.0      -398.951416         False          False   True
7    5339.499756    -199.051514  1153.528809  5339.499756  298.350098  -199.051514  5538.451172    0.100098        0.100098     1.0      -398.951416         False           True   True
8    5737.899658    -198.901611  1153.528809  5737.899658  398.500000  -198.901611  5836.851074   99.950195        0.100098     1.0      -398.951416         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=205/2048.[0m
[08/10 15:15:24]  --------------------------------------------------------------------------------
[08/10 15:15:24]  Iteration: 5 (0 solution, 4 counterexamples)
[08/10 15:15:24]  Generator returned sat in 0.018802 secs.
[08/10 15:15:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:25]  Improved gap from 0 to 100
[08/10 15:15:25]  Improved number of small numbers from 55 to 114 out of a max of 114
[08/10 15:15:25]  Verifer returned sat in 0.699654 secs.
[08/10 15:15:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4389.199707    -824.426514  1153.528564  4389.199707    0.049805  -824.426514  5141.401123   72.225098       62.975098     1.0      -824.426514            -1             -1   False
1    4479.299561    -752.176758  1153.528564  4479.299561  162.324951  -752.176758  5141.401123   90.075195       53.074951     1.0      -824.426514         False          False   False
2    4551.524414    -624.326660  1153.528564  4551.524414  162.300049  -624.326660  5141.401123   34.449951       25.299805     1.0      -589.876709         False          False   False
3    4679.349365    -515.176514  1153.528564  4679.349365  162.274902  -515.176514  5141.426025   53.099854       53.099854     1.0      -462.076660         False          False   False
4    4779.374512    -424.426758  1153.528564  4779.374512  153.125000  -424.426758  5141.451172   62.350098       53.099854     1.0      -462.076660         False          False    True
5    4879.399414    -362.076660  1153.528564  4879.399414  162.375000  -362.076660  5141.476074  100.000000       53.099854     2.0      -462.076660         False          False    True
6    4909.024414    -262.051514  1153.528564  4909.024414  129.625000  -262.051514  5141.476074   29.599854      -17.275146     1.0      -232.451660          True           True    True
7    5131.049561    -115.176758  1153.528564  5131.049561  251.625000  -115.176758  5193.126221   53.100098       53.099854     1.0      -232.451660         False          False    True
8    5231.074463     -62.051514  1153.528564  5231.074463  153.125000   -62.051514  5193.151123   99.974854       53.099854     1.0      -232.451660         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=217497/4096.[0m
[08/10 15:15:26]  --------------------------------------------------------------------------------
[08/10 15:15:26]  Iteration: 6 (0 solution, 5 counterexamples)
[08/10 15:15:26]  Generator returned sat in 0.203069 secs.
[08/10 15:15:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:26]  Improved gap from 0 to 100
[08/10 15:15:27]  Improved number of small numbers from 60 to 108 out of a max of 114
[08/10 15:15:27]  Verifer returned sat in 1.295895 secs.
[08/10 15:15:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5177.324707    4377.324463 -4038.972656  5177.324707    0.049805  4377.324463   0.050049  799.950195      799.950195     3.0      4377.324463            -1             -1     -1
1    5181.724609    4477.324463 -4038.972656  5181.724609  804.350098  4477.324463   0.150146  704.250000      704.250000     3.0      4377.324463         False          False   True
2    5281.774414    4477.324707 -4038.972656  5281.774414  804.299805  4477.324707   0.199951  804.249756      704.250000     4.0      5281.574463         False          False   True
3    5281.774414    4677.274414 -4038.972656  5281.774414  270.755556  4677.274414   0.199951  604.300049      604.250000     5.0      5281.574463         False          False   True
4    5281.774414    4677.324512 -4038.972656  5281.774414  404.133333  4677.324512   0.199951  604.249951      504.250000     6.0      5281.574463         False          False   True
5    5281.774414    4777.324512 -4038.972656  5281.774414  604.200000  4777.324512   0.199951  504.249951      404.250000     7.0      5281.574463         False          False   True
6    5681.824463    4881.524658 -4038.972656  5681.824463  904.300000  4881.524658   0.250000  800.049805      704.250000     8.0      5281.574463         False          False   True
7    5681.824463    5033.941178 -4038.972656  5681.824463  453.650000  5033.941178   0.250000  647.633285      604.250000     9.0      5281.574463         False          False   True
8    5681.824463    5177.324463 -4038.972656  5681.824463  404.133333  5177.324463   0.250000  504.250000      504.250000     8.0      5281.574463         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=2817/4.[0m
[08/10 15:15:28]  --------------------------------------------------------------------------------
[08/10 15:15:28]  Iteration: 7 (0 solution, 6 counterexamples)
[08/10 15:15:29]  Generator returned sat in 0.462952 secs.
[08/10 15:15:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:29]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:29]  Verifer returned sat in 0.234751 secs.
[08/10 15:15:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4776.600342    4276.600342 -4038.972656  4776.600342    0.049805  4276.600342    0.024902  499.975098      499.975098     3.0      4276.600342            -1             -1     -1
1    4876.675049    4376.575439 -4038.972656  4876.675049  600.049805  4376.575439  100.099609  400.000000      399.975098     3.0      4276.600342         False           True   True
2    5076.699951    4376.600342 -4038.972656  5076.699951  600.024902  4376.600342  200.124512  499.975098      399.975098     4.0      4876.575439          True           True   True
3    5176.724854    4476.600342 -4038.972656  5176.724854  600.000000  4476.600342  200.149414  499.975098      399.975098     5.0      4976.575439         False           True   True
4    5277.249756    4576.600342 -4038.972656  5277.249756  600.500000  4576.600342  200.674316  499.975098      399.975098     6.0      4976.575439         False           True   True
5    5378.274658    4676.600342 -4038.972656  5378.274658  601.000000  4676.600342  201.699219  499.975098      399.975098     7.0      4976.575439         False           True   True
6    5479.799561    4876.600342 -4038.972656  5479.799561  601.500000  4876.600342  203.224121  399.975098      399.975098     4.0      4976.575439         False           True   True
7    5681.824463    4976.600342 -4038.972656  5681.824463  602.000000  4976.600342  305.249023  399.975098      399.975098     4.0      4976.575439         False           True   True
8    5884.349365    4976.600342 -4038.972656  5884.349365  602.500000  4976.600342  407.773926  499.975098      399.975098     4.0      4976.575439         False           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=819149/2048.[0m
[08/10 15:15:29]  --------------------------------------------------------------------------------
[08/10 15:15:29]  Iteration: 8 (0 solution, 7 counterexamples)
[08/10 15:15:30]  Generator returned sat in 0.047475 secs.
[08/10 15:15:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:30]  Improved gap from 1/400 to 100
[08/10 15:15:30]  Improved number of small numbers from 55 to 114 out of a max of 114
[08/10 15:15:30]  Verifer returned sat in 0.616426 secs.
[08/10 15:15:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4778.049561    4777.925049 -4038.9729  4778.049561  199.900146  4777.925049   0.024658    0.099854      -73.833252     1.0      4777.925049            -1             -1   False
1    4977.749756    4851.858154 -4038.9729  4977.749756  199.800049  4851.858154  25.691650  100.199951        0.199951     1.0      4952.058105         False          False   False
2    5077.249756    4952.157959 -4038.9729  5077.249756  199.699951  4952.157959  25.691650   99.400146       -0.300049     1.0      5051.558105         False          False    True
3    5177.549805    5051.858154 -4038.9729  5177.549805  199.700195  5051.858154  25.691650  100.000000        0.000000     1.0      5051.558105         False          False    True
4    5212.516357    5186.724854 -4038.9729  5212.516357  134.966553  5186.724854  25.691650    0.099854      -65.033447     1.0      5051.558105         False          False    True
5    5377.849854    5287.224609 -4038.9729  5377.849854  165.433350  5287.224609  25.791748   64.833496        0.199951     1.0      5051.558105         False          False    True
6    5477.949707    5387.724609 -4038.9729  5477.949707  164.933350  5387.724609  25.891602   64.333496        0.199951     1.0      5051.558105         False          False    True
7    5578.049561    5551.858154 -4038.9729  5578.049561  164.433350  5551.858154  25.991455    0.199951        0.199951     1.0      5051.558105         False          False    True
8    5741.782959    5552.158203 -4038.9729  5741.782959  163.933350  5552.158203  89.724854   99.899902        0.199951     1.0      5051.558105         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:15:31]  --------------------------------------------------------------------------------
[08/10 15:15:31]  Iteration: 9 (0 solution, 8 counterexamples)
[08/10 15:15:31]  Generator returned sat in 0.038025 secs.
[08/10 15:15:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:32]  Improved number of small numbers from 89 to 91 out of a max of 113
[08/10 15:15:32]  Verifer returned sat in 0.597319 secs.
[08/10 15:15:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4778.049316    4772.224609 -4038.973145  4778.049316  205.550293  4772.224609   0.024658    5.800049      -73.833496     1.0      4772.224609            -1             -1   False
1    4977.749756    4851.858154 -4038.973145  4977.749756  205.500488  4851.858154  25.691650  100.199951        0.199951     1.0      4952.058105         False          False   False
2    5077.249756    4952.157959 -4038.973145  5077.249756  199.699951  4952.157959  25.691650   99.400146       -0.300049     1.0      5051.558105         False          False    True
3    5177.549805    5051.858154 -4038.973145  5177.549805  199.700195  5051.858154  25.691650  100.000000        0.000000     1.0      5051.558105         False          False    True
4    5215.366577    5189.625000 -4038.973145  5215.366577  137.816772  5189.625000  25.691650    0.049927      -62.183228     1.0      5051.558105         False          False    True
5    5382.200073    5287.224609 -4038.973145  5382.200073  166.883423  5287.224609  30.141968   64.833496        0.199951     1.0      5051.558105         False          False    True
6    5482.250000    5389.224609 -4038.973145  5482.250000  164.883423  5389.224609  30.191895   62.833496        0.199951     1.0      5051.558105         False          False    True
7    5582.299927    5551.857910 -4038.973145  5582.299927  162.883423  5551.857910  30.241821    0.200195        0.199951     1.0      5051.558105         False          False    True
8    5742.983154    5552.158203 -4038.973145  5742.983154  160.883423  5552.158203  90.925049   99.899902        0.199951     1.0      5051.558105         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:15:32]  --------------------------------------------------------------------------------
[08/10 15:15:32]  Iteration: 10 (0 solution, 9 counterexamples)
[08/10 15:15:33]  Generator returned sat in 0.475200 secs.
[08/10 15:15:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:34]  Improved gap from 1/40 to 100
[08/10 15:15:34]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 15:15:34]  Verifer returned sat in 0.831668 secs.
[08/10 15:15:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5434.274902    5234.274658 -4038.973145  5434.274902     0.050000  5234.274658    0.050049   199.950195       99.950195     9.0      5234.274658            -1             -1     -1
1    5434.274902    5434.174561 -4038.973145  5434.274902   199.900000  5434.174561    0.050049     0.050293       -0.049805     9.0      5234.274658         False           True   True
2    5634.074707    5434.274658 -4038.973145  5634.074707   199.850098  5434.274658    0.050049   199.750000       99.750000     1.0      5634.024658          True           True  False
3    6630.624512    5634.274658 -4038.973145  6630.624512  1196.299805  5634.274658    0.099854   996.250000      996.250000     1.0      5634.024658         False          False  False
4    6630.624512    5734.224854 -4038.973145  6630.624512   596.149902  5734.224854    0.099854   896.299805      896.250000     2.0      5634.024658         False          False   True
5    6630.624512    5734.274658 -4038.973145  6630.624512   896.200195  5734.274658    0.099854   896.250000      796.250000     3.0      5634.024658         False          False   True
6    6930.574707    5834.274658 -4038.973145  6930.574707  1196.200195  5834.274658    0.099854  1096.200195      996.200195     4.0      5634.024658         False          False   True
7    7230.574707    5934.274902 -4038.973145  7230.574707  1396.200195  5934.274902  200.050049  1096.249756      996.250000     5.0      5634.024658         False          False   True
8    7230.574707    6134.274658 -4038.973145  7230.574707   696.100098  6134.274658  200.050049   896.250000      896.250000     6.0      5634.024658         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=3985/4.[0m
[08/10 15:15:35]  --------------------------------------------------------------------------------
[08/10 15:15:35]  Iteration: 11 (0 solution, 10 counterexamples)
[08/10 15:15:35]  Generator returned sat in 0.164862 secs.
[08/10 15:15:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:35]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:35]  Verifer returned sat in 0.140880 secs.
[08/10 15:15:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5434.274902    5234.274658 -4038.973145  5434.274902     0.050000  5234.274658    0.050049   199.950195       99.950195     9.0      5234.274658            -1             -1     -1
1    5434.274902    5434.174561 -4038.973145  5434.274902   199.900000  5434.174561    0.050049     0.050293       -0.049805     9.0      5234.274658         False           True   True
2    5634.074707    5435.274658 -4038.973145  5634.074707   199.850098  5435.274658    0.050049   198.750000       99.750000     1.0      5634.024658          True           True  False
3    6630.624512    5634.274658 -4038.973145  6630.624512  1195.299805  5634.274658    0.099854   996.250000      996.250000     1.0      5634.024658         False          False  False
4    6630.624512    5734.224854 -4038.973145  6630.624512   596.149902  5734.224854    0.099854   896.299805      896.250000     2.0      5634.024658         False          False   True
5    6630.624512    5734.274658 -4038.973145  6630.624512   896.200195  5734.274658    0.099854   896.250000      796.250000     3.0      5634.024658         False          False   True
6    6929.574707    5834.274658 -4038.973145  6929.574707  1195.200195  5834.274658    0.099854  1095.200195      995.200195     4.0      5634.024658         False          False   True
7    7229.574707    5934.274902 -4038.973145  7229.574707  1395.200195  5934.274902  199.050049  1096.249756      996.250000     5.0      5634.024658         False          False   True
8    7229.574707    6134.274658 -4038.973145  7229.574707   696.100098  6134.274658  199.050049   896.250000      896.250000     6.0      5634.024658         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=3985/4.[0m
[08/10 15:15:36]  --------------------------------------------------------------------------------
[08/10 15:15:36]  Iteration: 12 (0 solution, 11 counterexamples)
[08/10 15:15:38]  Generator returned sat in 1.784101 secs.
[08/10 15:15:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:38]  Improved number of small numbers from 111 to 113 out of a max of 113
[08/10 15:15:38]  Verifer returned sat in 0.268555 secs.
[08/10 15:15:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5830.562012    5528.262207 -4038.973389  5830.562012     0.050049  5528.262207     0.049805  302.250000      300.000000     9.0      5528.262207            -1             -1     -1
1    5830.562012    5630.512207 -4038.973389  5830.562012   302.237549  5630.512207     0.049805  200.000000      200.000000     9.0      5528.262207         False           True   True
2    5830.562012    5730.512207 -4038.973389  5830.562012   199.999756  5730.512207     0.049805  100.000000      100.000000     7.0      5830.512207          True           True  False
3    6630.624268    5730.512207 -4038.973389  6630.624268   900.062256  5730.512207     0.099609  900.012451      800.012451     7.0      5830.512207         False          False  False
4    6630.624268    5830.512207 -4038.973389  6630.624268    99.125000  5830.512207     0.099609  800.012451      700.012451     8.0      5830.512207         False          False   True
5    6630.624268    5931.512207 -4038.973389  6630.624268   398.750000  5931.512207     0.099609  699.012451      600.012451     3.0      5830.512207         False           True  False
6    6930.611816    6130.512207 -4038.973389  6930.611816   999.000000  6130.512207     0.099609  800.000000      800.000000     4.0      5830.512207         False          False  False
7    8529.111816    6130.524414 -4038.973389  8529.111816  2398.500000  6130.524414  1498.587158  900.000244      800.012451     5.0      5830.512207         False          False  False
8    8529.111816    6330.512207 -4038.973389  8529.111816   148.006104  6330.512207  1498.587158  700.012451      700.012451     6.0      5830.512207         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=3276851/4096.[0m
[08/10 15:15:39]  --------------------------------------------------------------------------------
[08/10 15:15:39]  Iteration: 13 (0 solution, 12 counterexamples)
[08/10 15:15:39]  Generator returned sat in 0.135574 secs.
[08/10 15:15:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:40]  Improved number of small numbers from 111 to 113 out of a max of 113
[08/10 15:15:40]  Verifer returned sat in 0.286359 secs.
[08/10 15:15:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5830.561768    5529.012207 -4038.973389  5830.561768     0.050049  5529.012207     0.049561  301.500000      300.000000     7.0      5529.012207            -1             -1     -1
1    5830.561768    5630.512207 -4038.973389  5830.561768   301.500000  5630.512207     0.049561  200.000000      200.000000     8.0      5529.012207         False          False   True
2    5830.561768    5730.512207 -4038.973389  5830.561768   199.999756  5730.512207     0.049561  100.000000      100.000000     7.0      5830.512207          True           True  False
3    6630.624023    5730.512207 -4038.973389  6630.624023   900.062256  5730.512207     0.099365  900.012451      800.012451     7.0      5830.512207         False          False  False
4    6630.624023    5830.512207 -4038.973389  6630.624023    98.750000  5830.512207     0.099365  800.012451      700.012451     8.0      5830.512207         False          False   True
5    6630.624023    5931.512207 -4038.973389  6630.624023   398.500000  5931.512207     0.099365  699.012451      600.012451     3.0      5830.512207         False           True  False
6    6930.611572    6130.512207 -4038.973389  6930.611572   999.000000  6130.512207     0.099365  800.000000      800.000000     4.0      5830.512207         False          False  False
7    8529.611572    6130.524414 -4038.973389  8529.611572  2399.000000  6130.524414  1499.086914  900.000244      800.012451     5.0      5830.512207         False          False  False
8    8529.611572    6330.511963 -4038.973389  8529.611572   148.006104  6330.511963  1499.086914  700.012695      700.012451     6.0      5830.512207         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=3276851/4096.[0m
[08/10 15:15:40]  --------------------------------------------------------------------------------
[08/10 15:15:40]  Iteration: 14 (0 solution, 13 counterexamples)
[08/10 15:15:42]  Generator returned sat in 1.223203 secs.
[08/10 15:15:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:42]  Improved gap from 1/800 to 100
[08/10 15:15:43]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:15:43]  Verifer returned sat in 0.593629 secs.
[08/10 15:15:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6347.162354    6147.012451 -3749.043213  6347.162354  200.149902  6147.012451    0.050049  200.099854      100.100098     6.0      6147.012451            -1             -1     -1
1    6347.212402    6247.012207 -3749.043213  6347.212402  200.149902  6247.012207    0.100098  100.100098        0.100098     3.0      6147.012451         False           True   True
2    6347.212402    6347.012207 -3749.043213  6347.212402  100.049805  6347.012207    0.100098    0.100098      -99.899902     3.0      6347.112305          True           True   True
3    6547.262207    6447.512451 -3749.043213  6547.262207  200.149902  6447.512451    0.149902   99.599854        0.100098     1.0      6347.112305         False           True  False
4    6647.312256    6547.162598 -3749.043213  6647.312256  199.649902  6547.162598    0.199951   99.949707        0.100098     1.0      6347.112305         False          False   True
5    6746.512451    6746.312256 -3749.043213  6746.512451  199.149902  6746.312256    0.199951    0.000244       -0.699707     1.0      6347.112305         False          False   True
6    7246.387207    6747.012451 -3749.043213  7246.387207  499.875000  6747.012451  399.274902  100.099854        0.100098     1.0      6347.112305         False          False   True
7    7645.662354    6847.162354 -3749.043213  7645.662354  499.375000  6847.162354  698.550049   99.949951        0.100098     1.0      6347.112305         False          False   True
8    8044.587402    6947.162354 -3749.043213  8044.587402  498.875000  6947.162354  997.475098   99.949951        0.100098     1.0      6347.112305         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/2048.[0m
[08/10 15:15:43]  --------------------------------------------------------------------------------
[08/10 15:15:43]  Iteration: 15 (0 solution, 14 counterexamples)
[08/10 15:15:45]  Generator returned sat in 1.195558 secs.
[08/10 15:15:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:45]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:45]  Verifer returned sat in 0.207904 secs.
[08/10 15:15:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6372.312256    6152.312256 -3722.343262  6372.312256  220.075195  6152.312256    0.024902  219.975098      151.975098     6.0      6152.312256            -1             -1     -1
1    6372.412354    6220.312256 -3722.343262  6372.412354  220.075195  6220.312256    0.125000  151.975098       51.975098     3.0      6152.312256         False           True   True
2    6372.412354    6347.012207 -3722.343262  6372.412354  151.950195  6347.012207    0.125000   25.275146      -48.024902     3.0      6372.287354          True           True   True
3    6572.437256    6500.312256 -3722.343262  6572.437256  225.300049  6500.312256    0.149902   71.975098       51.975098     1.0      6372.287354         False           True  False
4    6672.462158    6572.312256 -3722.343262  6672.462158  172.000000  6572.312256    0.174805   99.975098       51.975098     1.0      6372.287354         False          False   True
5    6746.487061    6720.312256 -3722.343262  6746.487061  174.000000  6720.312256    0.174805   26.000000       26.000000     1.0      6372.287354         False          False   True
6    7268.287109    6816.312256 -3722.343262  7268.287109  547.800049  6816.312256  395.999756   55.975098       51.975098     1.0      6372.287354         False          False   True
7    7368.312012    6920.312256 -3722.343262  7368.312012  156.000000  6920.312256  396.024658   51.975098       51.975098     1.0      6372.287354         False          False   True
8    7488.336914    6972.312256 -3722.343262  7488.336914  172.000000  6972.312256  416.049561   99.975098       51.975098     1.0      6372.287354         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=106445/2048.[0m
[08/10 15:15:46]  --------------------------------------------------------------------------------
[08/10 15:15:46]  Iteration: 16 (0 solution, 15 counterexamples)
[08/10 15:15:47]  Generator returned sat in 0.318626 secs.
[08/10 15:15:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:47]  Improved gap from 1/1600 to 23.4375
[08/10 15:15:48]  Improved number of small numbers from 60 to 69 out of a max of 114
[08/10 15:15:48]  Verifer returned sat in 1.502315 secs.
[08/10 15:15:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6315.455078    6292.013701 -4025.470947  6315.455078   23.440000  6292.013701    0.00125  23.440127       23.436436     1.0      6292.013701            -1             -1     -1
1    6315.455078    6292.017451 -3948.908506  6315.455078   23.440000  6292.017451    0.00125  23.436377       -0.001123     2.0      6292.013701         False          False   True
2    6315.457451    6315.454951 -3872.346191  6315.457451   23.438750  6315.454951    0.00125   0.001250      -23.436436     1.0      6315.456201          True           True  False
3    6438.893701    6374.807868 -3872.346006  6438.893701  123.437500  6374.807868    0.00125  64.084583        0.000000     1.0      6315.456201         False          False  False
4    6538.897451    6538.891201 -3872.346006  6538.897451  164.088333  6538.891201    0.00250   0.003750        0.002500     1.0      6315.456201         False          False  False
5    6538.903701    6538.892451 -3795.783506  6538.903701    0.010000  6538.892451    0.00250   0.008750      -23.428750     2.0      6315.456201         False          False   True
6    6984.269951    6662.329951 -3795.783506  6984.269951  445.375000  6662.329951  321.93750   0.002500        0.002500     1.0      6662.332451          True           True  False
7    6984.277451    6662.333701 -3722.343506  6984.277451    0.010000  6662.333701  321.93750   0.006250      -26.550000     1.0      6662.332451         False          False   True
8    7109.213701    6688.890137 -3720.729980  7109.213701  124.942500  6688.890137  321.93750  98.386064       -0.000225     1.0      6662.332451         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/400.[0m
[08/10 15:15:49]  --------------------------------------------------------------------------------
[08/10 15:15:49]  Iteration: 17 (0 solution, 16 counterexamples)
[08/10 15:15:50]  Generator returned sat in 0.611448 secs.
[08/10 15:15:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:50]  Improved gap from 54611/4200 to 100
[08/10 15:15:50]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:15:50]  Verifer returned sat in 0.577097 secs.
[08/10 15:15:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5292.713867    5292.613525 -3026.067139  5292.713867     0.100098  5292.613525   0.000000     0.100342        0.100098     2.0      5292.613525            -1             -1   False
1    5692.413574    5392.613770 -3026.067139  5692.413574   399.800049  5392.613770   0.000000   299.799805      299.799805     1.0      5292.613525         False          False   False
2    6492.613770    5492.513916 -3026.067139  6492.613770  1100.000000  5492.513916   0.000000  1000.099854     1000.000000     2.0      5292.613525         False          False   False
3    6492.613770    5492.613770 -3026.067139  6492.613770   234.925926  5492.613770   0.000000  1000.000000      900.000000     3.0      6492.613770         False          False   False
4    6492.613770    5692.513916 -3026.067139  6492.613770   353.888889  5692.513916   0.000000   800.099854      800.000000     3.0      6492.613770         False          False   False
5    6492.613770    5692.613770 -3026.067139  6492.613770   532.333333  5692.613770   0.000000   800.000000      700.000000     4.0      6492.613770         False          False   False
6    6492.613770    5890.813477 -3026.067139  6492.613770   800.000000  5890.813477   0.000000   601.800293      600.000000     5.0      6492.613770         False          False   False
7    7092.313477    5892.613770 -3026.067139  7092.313477  1201.500000  5892.613770   0.099854  1199.599854     1099.599854     6.0      6492.613770         False          False   False
8    7092.313477    6092.613525 -3026.067139  7092.313477  1199.500000  6092.613525   0.099854   999.600098      999.599854     7.0      6492.613770         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=4503961/4096.[0m
[08/10 15:15:51]  --------------------------------------------------------------------------------
[08/10 15:15:51]  Iteration: 18 (0 solution, 17 counterexamples)
[08/10 15:15:52]  Generator returned sat in 0.423942 secs.
[08/10 15:15:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:53]  Improved gap from 0 to 100
[08/10 15:15:54]  Improved number of small numbers from 88 to 94 out of a max of 114
[08/10 15:15:54]  Verifer returned sat in 1.552356 secs.
[08/10 15:15:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6376.909912    6292.613770 -3026.067383  6376.909912    0.050000  6292.613770       0.00   84.296143       84.296143     8.0      6292.613770            -1             -1     -1
1    6492.613525    6376.959717 -3026.067383  6492.613525  199.999756  6376.959717       0.00  115.653809       99.999756     1.0      6292.613770         False           True  False
2    6492.613525    6392.613770 -3026.067383  6492.613525  115.604004  6392.613770       0.00   99.999756       -0.000244     2.0      6492.613525         False          False  False
3    6508.167844    6492.613770 -3026.067383  6508.167844  115.554074  6492.613770       0.00   15.554074      -84.445926     1.0      6508.167844         False          False  False
4    6667.444881    6592.613770 -3026.067383  6667.444881  174.831111  6592.613770       0.00   74.831111      -25.168889     1.0      6508.167844         False          False  False
5    6856.360436    6692.613770 -3026.067383  6856.360436  263.746667  6692.613770       0.00  163.746667       63.746667     1.0      6508.167844         False          False  False
6    7089.733770    6856.410436 -3026.067383  7089.733770  397.120000  6856.410436       0.00  233.323333      197.120000     1.0      6508.167844         False          False  False
7    7453.590436    6992.613770 -3026.067383  7453.590436  597.180000  6992.613770       0.00  460.976667      460.976667     2.0      6508.167844         False          False  False
8    7889.883770    7089.783936 -3026.067383  7889.883770  897.270000  7089.783936       0.05  800.049834      797.220000     2.0      6508.167844         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=39861/50.[0m
[08/10 15:15:54]  --------------------------------------------------------------------------------
[08/10 15:15:54]  Iteration: 19 (0 solution, 18 counterexamples)
[08/10 15:15:56]  Generator returned sat in 0.829356 secs.
[08/10 15:15:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:56]  Improved gap from 1/120 to 100
[08/10 15:15:56]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:15:56]  Verifer returned sat in 0.672721 secs.
[08/10 15:15:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6088.973877    5485.623779 -3026.067383  6088.973877  603.550049  5485.623779   0.000000  603.350098      599.700195     6.0      5485.623779            -1             -1   False
1    6089.073975    5589.273682 -3026.067383  6089.073975  603.450195  5589.273682   0.000000  499.800293      499.800293     6.0      6089.073975         False          False   False
2    6192.623779    5689.273682 -3026.067383  6192.623779  603.350098  5689.273682   3.449951  499.900146      499.900146     7.0      6189.173828         False          False   False
3    6192.623779    5787.173828 -3026.067383  6192.623779  499.800049  5787.173828   3.449951  402.000000      399.900146     8.0      6189.173828         False          False    True
4    6392.723877    5889.273682 -3026.067383  6392.723877  602.100098  5889.273682   3.550049  499.900146      499.900146     7.0      6189.173828         False           True   False
5    6494.423828    5988.073730 -3026.067383  6494.423828  601.600098  5988.073730   5.250000  501.100098      499.900146     8.0      6189.173828         False          False    True
6    6594.423828    6088.973877 -3026.067383  6594.423828  601.100098  6088.973877   5.250000  500.199951      499.900146     9.0      6189.173828         False           True    True
7    6696.823975    6189.273682 -3026.067383  6696.823975  602.600098  6189.273682   7.650146  499.900146      499.900146     4.0      6189.173828         False           True   False
8    6799.023926    6289.273682 -3026.067383  6799.023926  602.100098  6289.273682   9.850098  499.900146      499.900146     5.0      6189.173828         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=2047591/4096.[0m
[08/10 15:15:57]  --------------------------------------------------------------------------------
[08/10 15:15:57]  Iteration: 20 (0 solution, 19 counterexamples)
[08/10 15:15:58]  Generator returned sat in 0.086308 secs.
[08/10 15:15:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:58]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:58]  Verifer returned sat in 0.156160 secs.
[08/10 15:15:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6088.973877    5485.623779 -3026.067383  6088.973877  603.550049  5485.623779   0.000000  603.350098      599.700195     6.0      5485.623779            -1             -1   False
1    6089.073975    5589.273682 -3026.067383  6089.073975  603.450195  5589.273682   0.000000  499.800293      499.800293     6.0      6089.073975         False          False   False
2    6191.623779    5689.273682 -3026.067383  6191.623779  602.350098  5689.273682   2.449951  499.900146      499.900146     7.0      6189.173828         False          False   False
3    6191.623779    5787.173828 -3026.067383  6191.623779  499.800049  5787.173828   2.449951  402.000000      399.900146     8.0      6189.173828         False          False    True
4    6392.223877    5889.273682 -3026.067383  6392.223877  602.600098  5889.273682   3.050049  499.900146      499.900146     7.0      6189.173828         False           True   False
5    6494.423828    5987.573730 -3026.067383  6494.423828  602.100098  5987.573730   5.250000  501.600098      499.900146     8.0      6189.173828         False          False    True
6    6594.423828    6088.973877 -3026.067383  6594.423828  601.600098  6088.973877   5.250000  500.199951      499.900146     9.0      6189.173828         False           True    True
7    6697.323975    6189.273682 -3026.067383  6697.323975  603.100098  6189.273682   8.150146  499.900146      499.900146     4.0      6189.173828         False           True   False
8    6800.023926    6289.273682 -3026.067383  6800.023926  602.600098  6289.273682  10.850098  499.900146      499.900146     5.0      6189.173828         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=2047591/4096.[0m
[08/10 15:15:58]  --------------------------------------------------------------------------------
[08/10 15:15:58]  Iteration: 21 (0 solution, 20 counterexamples)
[08/10 15:15:59]  Generator returned sat in 0.089233 secs.
[08/10 15:15:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:15:59]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:15:59]  Verifer returned sat in 0.181940 secs.
[08/10 15:15:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6088.973877    5486.623535 -3026.067627  6088.973877  603.549805  5486.623535   0.000000  602.350342      599.700195     6.0      5486.623535            -1             -1   False
1    6089.073730    5589.273438 -3026.067627  6089.073730  602.450195  5589.273438   0.000000  499.800293      499.800049     6.0      6089.073730         False          False   False
2    6191.623535    5689.273438 -3026.067627  6191.623535  602.350098  5689.273438   2.449951  499.900146      499.899902     7.0      6189.173584         False          False   False
3    6191.623535    5787.673584 -3026.067627  6191.623535  499.800049  5787.673584   2.449951  401.500000      399.899902     8.0      6189.173584         False          False    True
4    6392.723633    5888.773438 -3026.067627  6392.723633  602.600098  5888.773438   3.550049  500.400146      499.899902     7.0      6189.173584         False           True   False
5    6494.423584    5987.573486 -3026.067627  6494.423584  602.100098  5987.573486   5.250000  501.600098      499.899902     8.0      6189.173584         False          False    True
6    6594.423584    6088.973633 -3026.067627  6594.423584  601.600098  6088.973633   5.250000  500.199951      499.899902     9.0      6189.173584         False           True    True
7    6697.323730    6189.273438 -3026.067627  6697.323730  603.100098  6189.273438   8.150146  499.900146      499.899902     4.0      6189.173584         False           True   False
8    6800.023682    6289.273682 -3026.067627  6800.023682  602.600098  6289.273682  10.850098  499.899902      499.899902     5.0      6189.173584         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1023795/2048.[0m
[08/10 15:16:00]  --------------------------------------------------------------------------------
[08/10 15:16:00]  Iteration: 22 (0 solution, 21 counterexamples)
[08/10 15:16:01]  Generator returned sat in 0.131481 secs.
[08/10 15:16:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:01]  Improved number of small numbers from 107 to 113 out of a max of 113
[08/10 15:16:01]  Verifer returned sat in 0.177561 secs.
[08/10 15:16:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6088.973877    5487.248291 -3026.067871  6088.973877  603.549561  5487.248291   0.000000  601.725586      599.125732     6.0      5487.248291            -1             -1   False
1    6089.073242    5589.848145 -3026.067871  6089.073242  601.824951  5589.848145   0.000000  499.225098      499.225098     6.0      6089.073242         False          False   False
2    6191.623047    5689.273193 -3026.067871  6191.623047  601.774902  5689.273193   2.449707  499.900146      499.325195     7.0      6189.173340         False          False   False
3    6191.623047    5787.923340 -3026.067871  6191.623047  499.799805  5787.923340   2.449707  401.250000      399.325195     8.0      6189.173340         False          False    True
4    6392.723145    5889.023193 -3026.067871  6392.723145  602.350098  5889.023193   3.549805  500.150146      499.325195     7.0      6189.173340         False           True   False
5    6494.423096    5987.823242 -3026.067871  6494.423096  601.850098  5987.823242   5.249756  501.350098      499.325195     8.0      6189.173340         False          False    True
6    6594.423096    6088.973389 -3026.067871  6594.423096  601.350098  6088.973389   5.249756  500.199951      499.325195     9.0      6189.173340         False           True    True
7    6697.323242    6189.273193 -3026.067871  6697.323242  603.100098  6189.273193   8.149902  499.900146      499.325195     4.0      6189.173340         False           True   False
8    6800.023193    6289.273682 -3026.067871  6800.023193  602.600098  6289.273682  10.849854  499.899658      499.325195     5.0      6189.173340         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=511309/1024.[0m
[08/10 15:16:02]  --------------------------------------------------------------------------------
[08/10 15:16:02]  Iteration: 23 (0 solution, 22 counterexamples)
[08/10 15:16:03]  Generator returned sat in 0.834903 secs.
[08/10 15:16:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:03]  Improved gap from 1/800 to 100
[08/10 15:16:04]  Improved number of small numbers from 72 to 79 out of a max of 114
[08/10 15:16:04]  Verifer returned sat in 1.135009 secs.
[08/10 15:16:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t  losts_0,t       queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5191.123779    4991.123877 -3026.067871   5191.123779    603.549561  4991.123877        0.0    199.999902       99.999902     2.0      4991.123877            -1             -1   False
1    5191.123779    5091.123877 -3026.067871   5191.123779    199.950000  5091.123877        0.0     99.999902       -0.000098     2.0      5191.123779         False          False   False
2    5291.023877    5191.223877 -3026.067871   5291.023877    199.900000  5191.223877        0.0     99.800000       -0.100000     1.0      5291.023877         False          False   False
3    5391.073877    5391.023877 -3026.067871   5391.073877    199.850000  5391.023877        0.0      0.050000       -0.050000     1.0      5391.073877         False          False   False
4    6389.073877    5391.123877 -3026.067871   6389.073877    998.050000  5391.123877        0.0    997.950000      897.950000     1.0      5391.073877         False          False   False
5    7835.723877    5491.123877 -3026.067871   7835.723877   2444.600000  5491.123877        0.0   2344.600000     2244.600000     2.0      5391.073877         False          False   False
6   10828.673877    5591.123877 -3026.067871  10828.673877   5337.550000  5591.123877        0.0   5237.550000     5137.550000     3.0      5391.073877         False          False   False
7   16564.873877    5791.123877 -3026.067871  16564.873877  10973.750000  5791.123877        0.0  10773.750000    10773.750000     4.0      5391.073877         False          False   False
8   28337.123877    5791.124023 -3026.067871  28337.123877  22546.000000  5791.124023        0.0  22545.999854    22446.000000     5.0      5391.073877         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=22446.[0m
[08/10 15:16:05]  --------------------------------------------------------------------------------
[08/10 15:16:05]  Iteration: 24 (0 solution, 23 counterexamples)
[08/10 15:16:07]  Generator returned sat in 1.085794 secs.
[08/10 15:16:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:07]  Improved gap from 1/1200 to 100
[08/10 15:16:07]  Improved number of small numbers from 90 to 112 out of a max of 114
[08/10 15:16:07]  Verifer returned sat in 0.712655 secs.
[08/10 15:16:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5024.423828    5024.223877 -3026.068115  5024.423828    0.100098  5024.223877   0.000000    0.199951        0.199951     7.0      5024.223877            -1             -1     -1
1    5024.423828    5024.323975 -3026.068115  5024.423828    0.100098  5024.323975   0.000000    0.099854      -99.800049     3.0      5024.223877         False           True  False
2    5273.723877    5124.223877 -3026.068115  5273.723877  249.399902  5124.223877   0.100098  149.399902       49.399902     1.0      5024.223877         False          False  False
3    5373.823730    5324.223877 -3026.068115  5373.823730  249.499756  5324.223877   0.199951   49.399902       49.399902     1.0      5024.223877         False          False   True
4    5473.923828    5391.123779 -3026.068115  5473.923828  149.500000  5391.123779   0.300049   82.500000       49.399902     1.0      5024.223877         False          False   True
5    5574.323730    5490.890544 -3026.068115  5574.323730  182.899902  5490.890544   0.699951   82.733236       49.399902     1.0      5024.223877         False          False   True
6    5674.423828    5624.223877 -3026.068115  5674.423828  182.833333  5624.223877   0.800049   49.399902       49.399902     1.0      5024.223877         False          False   True
7    5774.523926    5713.123779 -3026.068115  5774.523926  149.500000  5713.123779   0.900146   60.500000       49.399902     1.0      5024.223877         False          False   True
8    5874.523926    5724.223877 -3026.068115  5874.523926  160.500000  5724.223877   0.900146  149.399902       49.399902     2.0      5024.223877         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=101171/2048.[0m
[08/10 15:16:08]  --------------------------------------------------------------------------------
[08/10 15:16:08]  Iteration: 25 (0 solution, 24 counterexamples)
[08/10 15:16:10]  Generator returned sat in 0.741490 secs.
[08/10 15:16:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:10]  Improved gap from 1/1600 to 23.4375
[08/10 15:16:10]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:16:10]  Verifer returned sat in 0.864467 secs.
[08/10 15:16:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5670.394531    5493.831787 -3595.676025  5670.394531  200.002686  5493.831787    0.002686  176.560059       76.560059     9.0      5493.831787            -1             -1     -1
1    5693.834473    5670.394287 -3595.676025  5693.834473  200.000000  5670.394287    0.002686   23.437500        0.000000     1.0      5693.831787         False           True   True
2    5738.212158    5714.771973 -3540.053955  5738.212158   67.815186  5714.771973    0.002686   23.437500       -0.000244     1.0      5738.209473         False          False   True
3    5738.217041    5738.211914 -3540.053955  5738.217041   23.442383  5738.211914    0.002686    0.002441      -99.995361     1.0      5738.214355         False          False   True
4    5984.594727    5938.209717 -3540.053955  5984.594727  246.380127  5938.209717   46.372559    0.012451        0.012451     1.0      5738.214355         False          False   True
5    5984.594727    5938.211914 -3463.493652  5984.594727    0.010000  5938.211914   46.372559    0.010254      -23.427246     2.0      5738.214355         False          False   True
6    6430.964355    5961.649414 -3463.493652  6430.964355  446.379883  5961.649414  369.302490  100.012451        0.012451     1.0      6061.661865          True           True  False
7    6430.964355    6061.649658 -3386.931396  6430.964355    0.010000  6061.649658  369.302490    0.012207      -23.425293     2.0      6061.661865         False          False   True
8    6677.332031    6085.087158 -3386.931396  6677.332031  246.379883  6085.087158  492.232422  100.012451        0.012451     1.0      6061.661865         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=51/4096.[0m
[08/10 15:16:11]  --------------------------------------------------------------------------------
[08/10 15:16:11]  Iteration: 26 (0 solution, 25 counterexamples)
[08/10 15:16:12]  Generator returned sat in 0.175591 secs.
[08/10 15:16:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:13]  Improved gap from 375/16 to 23.4375
[08/10 15:16:13]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 15:16:13]  Verifer returned sat in 1.103407 secs.
[08/10 15:16:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5455.392090    5444.451904 -3540.056396  5455.392090    0.002441  5444.451904    0.000000   10.940186       10.939941     1.0      5444.451904            -1             -1   False
1    5455.396973    5455.394531 -3540.056396  5455.396973   10.945068  5455.394531    0.000000    0.002441      -89.055176     1.0      5444.451904         False          False   False
2    5546.014404    5546.014404 -3540.056396  5546.014404   90.619873  5546.014404    0.000000    0.000000      -98.437744     1.0      5444.451904         False          False   False
3    5649.142090    5647.056152 -3540.056152  5649.142090  103.127686  5647.056152    0.000000    2.085938      -95.309814     1.0      5444.451904         False          False   False
4    6052.264648    5843.890625 -3540.056152  6052.264648  405.208496  5843.890625  207.800049    0.573975        0.012695     1.0      5444.451904         False          False   False
5    6052.264648    5844.451904 -3463.493652  6052.264648    0.010000  5844.451904  207.800049    0.012695      -23.424805     2.0      5444.451904         False          False    True
6    6649.126953    5967.889404 -3463.493652  6649.126953  596.875000  5967.889404  681.224854    0.012695        0.012695     1.0      5967.902100          True           True   False
7    6649.126953    5967.889404 -3389.492188  6649.126953    0.010000  5967.889404  681.224854    0.012695      -25.985840     1.0      5967.902100         False          False    True
8    6775.113037    5993.887939 -3389.492188  6775.113037  125.998779  5993.887939  681.224854  100.000244        0.000244     1.0      5967.902100         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=13/1024.[0m
[08/10 15:16:14]  --------------------------------------------------------------------------------
[08/10 15:16:14]  Iteration: 27 (0 solution, 26 counterexamples)
[08/10 15:16:15]  Generator returned sat in 0.501162 secs.
[08/10 15:16:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:16]  Improved gap from 0 to 100
[08/10 15:16:16]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 15:16:16]  Verifer returned sat in 0.863561 secs.
[08/10 15:16:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5967.901855    5467.802246 -3663.156494  5967.901855  500.099854  5467.802246    0.000000  500.099609      400.349854     2.0      5467.802246            -1             -1   False
1    5967.901855    5567.552246 -3663.156494  5967.901855  500.000000  5567.552246    0.000000  400.349609      300.349854     3.0      5967.901855         False          False   False
2    6067.452148    5667.552246 -3663.156494  6067.452148  499.899902  5667.552246    0.000000  399.899902      299.900146     3.0      6067.452148         False          False   False
3    6067.452148    5767.552002 -3663.156494  6067.452148    0.100098  5767.552002    0.000000  299.900146      199.900146     4.0      6067.452148         False          False   False
4    6067.452148    5892.877197 -3663.156494  6067.452148  299.799805  5892.877197    0.000000  174.574951       99.900146     5.0      6067.452148         False          False   False
5    6368.102051    6067.552002 -3663.156494  6368.102051  475.224854  6067.552002    0.100098  300.449951      300.449951     1.0      6067.452148         False          False   False
6    6542.376953    6093.877197 -3663.156494  6542.376953  474.724854  6093.877197   74.375000  374.124756      300.449951     2.0      6067.452148         False          False    True
7    6642.477051    6267.552002 -3663.156494  6642.477051  474.224854  6267.552002   74.475098  300.449951      300.449951     3.0      6067.452148         False          False    True
8    6815.751953    6367.552002 -3663.156494  6815.751953  473.724854  6367.552002  147.750000  300.449951      300.449951     4.0      6067.452148         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1230643/4096.[0m
[08/10 15:16:17]  --------------------------------------------------------------------------------
[08/10 15:16:17]  Iteration: 28 (0 solution, 27 counterexamples)
[08/10 15:16:19]  Generator returned sat in 1.034875 secs.
[08/10 15:16:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:19]  Improved gap from 1/600 to 0
[08/10 15:16:20]  Improved number of small numbers from 74 to 84 out of a max of 114
[08/10 15:16:20]  Verifer returned sat in 0.989316 secs.
[08/10 15:16:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5667.553669    5567.548828 -3663.156494  5667.553669  500.099854  5567.548828   0.000833  100.004007      100.000833     7.0      5567.548828            -1             -1     -1
1    5667.553669    5667.552002 -3663.156494  5667.553669  100.003418  5667.552002   0.000833    0.000833        0.000833     3.0      5667.552835         False           True   True
2    5767.555335    5766.552002 -3663.156494  5767.555335  100.002500  5766.552002   0.001667    1.001667        0.001667     1.0      5767.553669         False           True  False
3    5867.556169    5867.552002 -3663.156494  5867.556169  101.002500  5867.552002   0.002500    0.001667        0.001667     1.0      5767.553669         False          False   True
4    5968.057002    5967.552002 -3663.156494  5968.057002  100.502500  5967.552002   0.503333    0.001667        0.001667     1.0      5767.553669         False          False   True
5    6068.057835    5968.050537 -3663.156494  6068.057835  100.002500  5968.050537   0.504167   99.503132        0.001667     1.0      5767.553669         False          False   True
6    6068.057835    6067.552835 -3563.158936  6068.057835   99.502500  6067.552835   0.504167    0.000833       -0.000775     2.0      5767.553669         False          False   True
7    6068.067002    6067.554502 -3463.167480  6068.067002    0.010000  6067.554502   0.504167    0.008333       -0.000153     1.0      6067.562835          True           True  False
8    6068.068669    6067.563477 -3363.169189  6068.068669    0.010000  6067.563477   0.504167    0.001025       -0.000195     1.0      6067.562835         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/600.[0m
[08/10 15:16:20]  --------------------------------------------------------------------------------
[08/10 15:16:20]  Iteration: 29 (0 solution, 28 counterexamples)
[08/10 15:16:21]  Generator returned sat in 0.404152 secs.
[08/10 15:16:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:23]  Improved gap from 0 to 23.4375
[08/10 15:16:24]  Improved number of small numbers from 60 to 67 out of a max of 114
[08/10 15:16:24]  Verifer returned sat in 2.141361 secs.
[08/10 15:16:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5667.553711    5667.553669 -3763.160645  5667.553711   42.85500  5667.553669     0.0000   0.000042       -0.002441     1.0      5667.553669            -1             -1   False
1    5710.406169    5667.556169 -3706.010661  5710.406169   42.85250  5667.556169     0.0000  42.850000        0.000000     1.0      5710.406169         False          False   False
2    5810.421169    5767.541169 -3706.010661  5810.421169  142.86500  5767.541169     0.0025  42.877500        0.012500     1.0      5710.406169         False          False   False
3    5910.408669    5886.968669 -3706.010661  5910.408669  142.86500  5886.968669     0.0025  23.437500        0.000000     1.0      5710.406169         False          False    True
4    6284.408669    6010.406169 -3706.010661  6284.408669  397.43750  6010.406169   273.9900   0.012500        0.012500     1.0      5710.406169         False          False    True
5    6284.408669    6010.406169 -3629.448161  6284.408669    0.01000  6010.406169   273.9900   0.012500      -23.425000     1.0      5710.406169         False          False    True
6    6407.848669    6133.843669 -3629.448161  6407.848669  123.45250  6133.843669   273.9925   0.012500        0.012500     1.0      5710.406169         False          False    True
7    6407.848669    6133.843669 -3552.885742  6407.848669    0.01000  6133.843669   273.9925   0.012500      -23.425081     1.0      5710.406169         False          False    True
8    6471.574919    6157.281250 -3552.885742  6471.574919   63.73875  6157.281250   273.9925  40.301169      -59.698831     1.0      5710.406169         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/80.[0m
[08/10 15:16:24]  --------------------------------------------------------------------------------
[08/10 15:16:24]  Iteration: 30 (0 solution, 29 counterexamples)
[08/10 15:16:27]  Generator returned sat in 1.607354 secs.
[08/10 15:16:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:27]  Improved gap from 0 to 1.5625
[08/10 15:16:27]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:16:27]  Verifer returned sat in 0.528032 secs.
[08/10 15:16:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5711.896240    5711.895996 -3807.500732  5711.896240    0.100098  5711.895996   0.000000    0.000244        0.000000     2.0      5711.895996            -1             -1   False
1    5861.533691    5760.958740 -3807.500732  5861.533691  149.637695  5760.958740   0.000000  100.574951       49.637451     1.0      5711.895996         False          False   False
2    5910.496338    5910.396240 -3807.500732  5910.496338  149.537598  5910.396240   0.000000    0.100098       -1.399902     1.0      5910.496338         False          False   False
3    6061.733643    6011.896240 -3807.500732  6061.733643  151.337402  6011.896240   0.100098   49.737305       49.737305     1.0      5910.496338         False          False   False
4    6161.833740    6065.658691 -3807.500732  6161.833740  149.837402  6065.658691   0.200195   95.974854       49.737305     1.0      5910.496338         False          False    True
5    6214.196289    6211.796143 -3807.500732  6214.196289  148.337402  6211.796143   0.200195    2.199951        2.099854     1.0      5910.496338         False          False    True
6    6214.196289    6211.896240 -3709.600586  6214.196289    2.000000  6211.896240   0.200195    2.099854        0.000000     2.0      5910.496338         False          False    True
7    6214.196289    6213.996094 -3611.163086  6214.196289    2.000000  6213.996094   0.200195    0.000000       -1.562500     3.0      5910.496338         False          False    True
8    6216.196289    6215.558838 -3611.163086  6216.196289    2.000000  6215.558838   0.200195    0.437256      -99.562500     1.0      5910.496338         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=50931/1024.[0m
[08/10 15:16:28]  --------------------------------------------------------------------------------
[08/10 15:16:28]  Iteration: 31 (0 solution, 30 counterexamples)
[08/10 15:16:29]  Generator returned sat in 0.190177 secs.
[08/10 15:16:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:30]  Improved gap from 25/16 to 1.5625
[08/10 15:16:30]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 15:16:30]  Verifer returned sat in 0.889042 secs.
[08/10 15:16:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7194.620850    7094.771240 -5190.375732  7194.620850    0.049805  7094.771240    0.000000   99.849609       99.849609     2.0       7094.77124            -1             -1   False
1    7194.921143    7194.670898 -5190.375732  7194.921143  100.149902  7194.670898    0.050049    0.200195        0.099854     1.0       7094.77124         False          False   False
2    7294.871094    7240.533447 -5190.375732  7294.871094  100.150146  7240.533447    0.050049   54.287598        0.049805     1.0       7094.77124         False          False    True
3    7394.970947    7394.771240 -5190.375732  7394.970947  154.387451  7394.771240    0.099854    0.099854        0.099854     1.0       7094.77124         False          False    True
4    7547.258545    7494.770996 -5190.375732  7547.258545  152.387451  7494.770996   52.387451    0.100098        0.099854     1.0       7094.77124         False          False    True
5    7697.545898    7494.771240 -5190.375732  7697.545898  150.387451  7494.771240  102.674805  100.099854        0.099854     2.0       7094.77124         False          False    True
6    7745.833496    7594.921094 -5138.763184  7745.833496  148.387451  7594.921094  102.674805   48.237598        0.000000     1.0       7094.77124         False          False    True
7    7745.833496    7643.158691 -5040.325684  7745.833496    2.000000  7643.158691  102.674805    0.000000       -1.562500     2.0       7094.77124         False          False    True
8    7747.833496    7644.721191 -4941.888184  7747.833496    2.000000  7644.721191  102.674805    0.437500       -1.125000     1.0       7094.77124         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=409/4096.[0m
[08/10 15:16:31]  --------------------------------------------------------------------------------
[08/10 15:16:31]  Iteration: 32 (0 solution, 31 counterexamples)
[08/10 15:16:33]  Generator returned sat in 1.749811 secs.
[08/10 15:16:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:34]  Improved gap from 0 to 0
[08/10 15:16:34]  Improved number of small numbers from 82 to 95 out of a max of 114
[08/10 15:16:34]  Verifer returned sat in 0.825326 secs.
[08/10 15:16:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6901.169678    6801.171143 -4896.775635  6901.169678    0.049561  6801.171143        0.0   99.998535       99.998535     7.0      6801.171143            -1             -1     -1
1    7001.169678    6901.170898 -4896.775635  7001.169678  199.998535  6901.170898        0.0   99.998779       99.998535     1.0      6801.171143         False           True  False
2    7101.169678    7001.171143 -4896.775635  7101.169678  199.998779  7001.171143        0.0   99.998535       99.998535     1.0      6801.171143         False          False  False
3    7201.172393    7101.170898 -4896.775635  7201.172393  200.001250  7101.170898        0.0  100.001494      100.001250     1.0      6801.171143         False          False  False
4    7201.172393    7201.162354 -4896.775635  7201.172393    0.010000  7201.162354        0.0    0.010039        0.001250     2.0      6801.171143         False          False  False
5    7201.172393    7201.171143 -4796.776885  7201.172393    0.010000  7201.171143        0.0    0.001250        0.000000     3.0      6801.171143         False          False  False
6    7201.181143    7201.172393 -4696.785645  7201.181143    0.010000  7201.172393        0.0    0.008750       -0.000010     4.0      6801.171143         False          False  False
7    7201.182393    7201.182393 -4596.787109  7201.182393    0.010000  7201.182393        0.0    0.000000       -0.000225     1.0      7201.182393          True           True  False
8    7201.192393    7201.192383 -4596.786865  7201.192393    0.010000  7201.192383        0.0    0.000010      -99.989980     1.0      7201.182393         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409611/4096.[0m
[08/10 15:16:35]  --------------------------------------------------------------------------------
[08/10 15:16:35]  Iteration: 33 (0 solution, 32 counterexamples)
[08/10 15:16:41]  Generator returned sat in 5.408003 secs.
[08/10 15:16:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:44]  Improved gap from 23/102400 to 0
[08/10 15:16:45]  Improved number of small numbers from 65 to 104 out of a max of 114
[08/10 15:16:45]  Verifer returned sat in 3.450039 secs.
[08/10 15:16:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5800.188965    5500.689209 -3596.293701  5800.188965    0.001465  5500.689209        0.0  299.499756      299.499756     7.0      5500.689209            -1             -1    True
1    5800.188965    5600.688965 -3596.293701  5800.188965    0.001465  5600.688965        0.0  199.500000      199.499756     5.0      5500.689209         False          False    True
2    5800.188965    5600.689209 -3596.293701  5800.188965  199.499756  5600.689209        0.0  199.499756       99.499756     6.0      5500.689209         False          False    True
3    5800.188965    5700.689209 -3595.793457  5800.188965  199.499756  5700.689209        0.0   99.499756        0.000000     7.0      5500.689209         False          False    True
4    5900.189209    5800.188965 -3595.793457  5900.189209  199.500000  5800.188965        0.0  100.000244        0.000244     8.0      5500.689209         False          False    True
5    5900.189209    5900.189049 -3495.796875  5900.189209    0.010000  5900.189049        0.0    0.000160       -0.003174     2.0      5900.189209          True           True   False
6    5900.199049    5900.192383 -3395.803711  5900.199049    0.010000  5900.192383        0.0    0.006667       -0.000169     1.0      5900.189209         False          False   False
7    5900.202383    5900.200716 -3295.806885  5900.202383    0.010000  5900.200716        0.0    0.001667       -0.000010     1.0      5900.189209         False          False   False
8    5900.210716    5900.204102 -3295.806875  5900.210716    0.010000  5900.204102        0.0    0.006615      -99.991667     1.0      5900.189209         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=408579/2048.[0m
[08/10 15:16:45]  --------------------------------------------------------------------------------
[08/10 15:16:45]  Iteration: 34 (0 solution, 33 counterexamples)
[08/10 15:16:47]  Generator returned sat in 0.939068 secs.
[08/10 15:16:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:50]  Improved gap from 103/61440 to 0
[08/10 15:16:51]  Improved number of small numbers from 67 to 112 out of a max of 114
[08/10 15:16:51]  Verifer returned sat in 3.291148 secs.
[08/10 15:16:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4838.892090    4838.892090 -4118.746826  4838.892090  2.005833  4838.892090        0.0  0.000000        0.000000     3.0      4838.892090            -1             -1    True
1    4840.897461    4840.896973 -4020.754150  4840.897461  2.005371  4840.896973        0.0  0.000488       -0.001953     1.0      4840.897461         False          False    True
2    4840.899902    4840.899414 -3920.754883  4840.899902  0.002930  4840.899414        0.0  0.000488       -0.000244     1.0      4840.899902         False          False    True
3    4841.907715    4840.900391 -3821.762695  4841.907715  1.008301  4840.900391        0.0  1.007324       -0.000244     1.0      4840.899902         False          False    True
4    4841.908691    4841.908203 -3721.763916  4841.908691  1.008301  4841.908203        0.0  0.000488       -0.000488     1.0      4840.899902         False          False    True
5    4841.919434    4841.909180 -3621.774170  4841.919434  0.011230  4841.909180        0.0  0.010254        0.000000     1.0      4840.899902         False          False    True
6    4841.919434    4841.919434 -3521.774902  4841.919434  0.010000  4841.919434        0.0  0.000000       -0.000732     2.0      4840.899902         False          False    True
7    4841.938477    4841.928965 -3421.793701  4841.938477  0.019043  4841.928965        0.0  0.009512       -0.000488     1.0      4840.899902         False          False    True
8    4841.938965    4841.938965 -3421.793457  4841.938965  0.010000  4841.938965        0.0  0.000000      -99.999756     1.0      4840.899902         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/1024.[0m
[08/10 15:16:51]  --------------------------------------------------------------------------------
[08/10 15:16:51]  Iteration: 35 (0 solution, 34 counterexamples)
[08/10 15:16:56]  Generator returned sat in 4.153047 secs.
[08/10 15:16:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:16:57]  Improved gap from 1/8192 to 100
[08/10 15:16:57]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:16:57]  Verifer returned sat in 0.427584 secs.
[08/10 15:16:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4541.452637    3841.502686 -3121.357666  4541.452637     0.050000  3841.502686        0.0   699.949951      699.949951     5.0      3841.502686            -1             -1    True
1    4541.452637    3841.502930 -3121.357666  4541.452637     0.050000  3841.502930        0.0   699.949707      599.949951     2.0      3841.502686         False          False    True
2    4941.552734    3941.502930 -3121.357666  4941.552734  1100.049805  3941.502930        0.0  1000.049805      900.050049     3.0      3841.502686         False          False    True
3    4941.552734    4041.502686 -3121.357666  4941.552734   134.308642  4041.502686        0.0   900.050049      800.050049     4.0      4941.552734         False          False    True
4    4941.552734    4141.502930 -3121.357666  4941.552734   200.962963  4141.502930        0.0   800.049805      700.050049     5.0      4941.552734         False          False    True
5    4941.552734    4241.502686 -3121.357666  4941.552734   300.944444  4241.502686        0.0   700.050049      600.050049     6.0      4941.552734         False          False    True
6    4941.552734    4441.502686 -3121.357666  4941.552734   450.916667  4441.502686        0.0   500.050049      500.050049     7.0      4941.552734         False          False    True
7    5117.377686    4541.502686 -3121.357666  5117.377686   675.875000  4541.502686        0.0   575.875000      575.875000     6.0      4941.552734         False          False    True
8    5554.815186    4541.502930 -3121.357666  5554.815186  1013.312500  4541.502930        0.0  1013.312256      913.312500     7.0      4941.552734         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=4200243/4096.[0m
[08/10 15:16:58]  --------------------------------------------------------------------------------
[08/10 15:16:58]  Iteration: 36 (0 solution, 35 counterexamples)
[08/10 15:17:01]  Generator returned sat in 2.671697 secs.
[08/10 15:17:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:02]  Improved number of small numbers from 99 to 113 out of a max of 113
[08/10 15:17:02]  Verifer returned sat in 0.274919 secs.
[08/10 15:17:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4441.502441    3841.502686 -3121.357666  4441.502441   599.999756  3841.502686        0.0   599.999756      599.999756     2.0      3841.502686            -1             -1    True
1    4441.502686    3841.502686 -3121.357666  4441.502686   600.000000  3841.502686        0.0   600.000000      500.000000     2.0      3841.502686         False          False    True
2    4941.552490    3941.502686 -3121.357666  4941.552490  1100.049805  3941.502686        0.0  1000.049805      900.049805     3.0      3841.502686         False          False    True
3    4941.552490    4041.502686 -3121.357666  4941.552490    47.916748  4041.502686        0.0   900.049805      800.049805     4.0      4941.552490         False          False    True
4    4941.552490    4141.502686 -3121.357666  4941.552490   148.916748  4141.502686        0.0   800.049805      700.049805     5.0      4941.552490         False          False    True
5    4941.552490    4241.502686 -3121.357666  4941.552490   299.916748  4241.502686        0.0   700.049805      600.049805     6.0      4941.552490         False          False    True
6    4941.552490    4441.502686 -3121.357666  4941.552490   450.916748  4441.502686        0.0   500.049805      500.049805     6.0      4941.552490         False          False    True
7    5093.419434    4541.502686 -3121.357666  5093.419434   651.916748  4541.502686        0.0   551.916748      551.916748     6.0      4941.552490         False          False    True
8    5394.419434    4541.502686 -3121.357666  5394.419434   852.916748  4541.502686        0.0   852.916748      752.916748     6.0      4941.552490         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2100121/2048.[0m
[08/10 15:17:02]  --------------------------------------------------------------------------------
[08/10 15:17:02]  Iteration: 37 (0 solution, 36 counterexamples)
[08/10 15:17:12]  Generator returned sat in 8.488706 secs.
[08/10 15:17:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:12]  Improved gap from 0 to 100
[08/10 15:17:13]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:17:13]  Verifer returned sat in 0.625231 secs.
[08/10 15:17:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4441.152588    4341.252686 -2924.077637  4441.152588    0.100098  4341.252686   0.000000  99.899902       -0.099854     9.0      4341.252686            -1             -1     -1
1    4541.252441    4441.252686 -2924.077637  4541.252441  199.999756  4441.252686   0.000000  99.999756        0.000000     1.0      4341.252686         False           True  False
2    4641.152588    4541.252441 -2924.077637  4641.152588  199.899902  4541.252441   0.000000  99.900146       -0.099854     2.0      4641.152588         False          False  False
3    4741.252441    4641.252686 -2924.077637  4741.252441  200.000000  4641.252686   0.000000  99.999756        0.000000     1.0      4641.152588         False          False  False
4    4789.752686    4775.785889 -2924.077637  4789.752686  148.500000  4775.785889   0.000000  13.966797      -51.499756     1.0      4641.152588         False          False  False
5    4941.552490    4941.252441 -2924.077637  4941.552490  165.766602  4941.252441   0.100098   0.199951        0.199951     1.0      4641.152588         False          False  False
6    5106.619141    4976.785889 -2924.077637  5106.619141  165.266602  4976.785889  65.166748  64.666504        0.199951     1.0      4641.152588         False          False   True
7    5206.719238    5077.285645 -2924.077637  5206.719238  164.766602  5077.285645  65.266846  64.166748        0.199951     1.0      4641.152588         False          False   True
8    5306.819092    5141.552246 -2924.077637  5306.819092  164.266602  5141.552246  65.366699  99.900146        0.199951     1.0      4641.152588         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:17:13]  --------------------------------------------------------------------------------
[08/10 15:17:13]  Iteration: 38 (0 solution, 37 counterexamples)
[08/10 15:17:17]  Generator returned sat in 2.861650 secs.
[08/10 15:17:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:18]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/10 15:17:18]  Verifer returned sat in 0.577084 secs.
[08/10 15:17:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4441.352539    4341.402344 -2924.077637  4441.352539   200.000000  4341.402344   0.000000   99.950195       99.950195     3.0      4341.402344            -1             -1    True
1    4541.352295    4441.402344 -2924.077637  4541.352295   199.949951  4441.402344   0.000000   99.949951       99.949951     1.0      4541.352295         False          False    True
2    4541.452393    4541.402344 -2924.077637  4541.452393   100.050049  4541.402344   0.000000    0.050049        0.050049     1.0      4541.452393         False          False    True
3    4841.402344    4541.402344 -2924.077637  4841.402344   300.000000  4541.402344   0.000000  300.000000      200.000000     1.0      4541.452393         False          False    True
4    4992.902344    4741.352295 -2924.077637  4992.902344   451.500000  4741.352295   0.000000  251.550049      251.500000     2.0      4541.452393         False          False    True
5    5420.102295    4741.402588 -2924.077637  5420.102295   678.750000  4741.402588   0.000000  678.699707      578.699951     3.0      4541.452393         False          False    True
6    5761.027588    4841.402344 -2924.077637  5761.027588  1019.625000  4841.402344   0.000000  919.625244      819.625244     4.0      4541.452393         False          False    True
7    5861.527344    5041.402344 -2924.077637  5861.527344  1020.125000  5041.402344   0.449951  819.675049      819.675049     3.0      5861.077393          True           True   False
8    5861.527344    5041.402588 -2924.077637  5861.527344   510.062500  5041.402588   0.449951  819.674805      719.675049     4.0      5861.077393         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3357389/4096.[0m
[08/10 15:17:18]  --------------------------------------------------------------------------------
[08/10 15:17:18]  Iteration: 39 (0 solution, 38 counterexamples)
[08/10 15:17:22]  Generator returned sat in 1.954000 secs.
[08/10 15:17:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:22]  Improved gap from 1/1200 to 100
[08/10 15:17:22]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 15:17:22]  Verifer returned sat in 0.528996 secs.
[08/10 15:17:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4439.952344    4439.902100 -3022.67749  4439.952344    0.050049  4439.902100    0.000000    0.050244       -0.049854     2.0        4439.9021            -1             -1   False
1    4539.952148    4440.002197 -3022.67749  4539.952148  100.050049  4440.002197    0.000000   99.949951       -0.050049     1.0        4439.9021         False          False   False
2    4640.002197    4540.002344 -3022.67749  4640.002197  200.000000  4540.002344    0.000000   99.999854        0.000000     1.0        4439.9021         False          False   False
3    4840.652344    4640.002197 -3022.67749  4840.652344  300.650000  4640.002197    0.000000  200.650146      100.650146     2.0        4439.9021         False          False   False
4    4840.652344    4740.127197 -3022.67749  4840.652344  200.600098  4740.127197    0.000000  100.525146        0.650146     2.0        4439.9021         False          False   False
5    5040.752197    4940.002197 -3022.67749  5040.752197  300.625000  4940.002197    0.050049  100.699951      100.699951     1.0        4439.9021         False          False   False
6    5240.177246    5040.002197 -3022.67749  5240.177246  300.125000  5040.002197   99.475098  100.699951      100.699951     2.0        4439.9021         False          False    True
7    5439.102295    5140.002197 -3022.67749  5439.102295  299.625000  5140.002197  198.400146  100.699951      100.699951     2.0        4439.9021         False          False    True
8    5637.527344    5240.002197 -3022.67749  5637.527344  299.125000  5240.002197  296.825195  100.699951      100.699951     2.0        4439.9021         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=412467/4096.[0m
[08/10 15:17:23]  --------------------------------------------------------------------------------
[08/10 15:17:23]  Iteration: 40 (0 solution, 39 counterexamples)
[08/10 15:17:29]  Generator returned sat in 4.502201 secs.
[08/10 15:17:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:30]  Improved gap from 1/1200 to 23.4375
[08/10 15:17:31]  Improved number of small numbers from 78 to 112 out of a max of 114
[08/10 15:17:31]  Verifer returned sat in 2.272935 secs.
[08/10 15:17:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4890.002197    4366.464600 -2949.140137  4890.002197  523.437500  4366.464600   0.100098  523.437500       523.43750     2.0        4366.4646            -1             -1     -1
1    4890.002197    4366.564453 -2949.140137  4890.002197  523.337402  4366.564453   0.100098  523.337646       423.43750     2.0        4889.9021         False          False   True
2    4890.002197    4513.202148 -2949.140137  4890.002197  376.600098  4513.202148   0.100098  376.699951       323.43750     3.0        4889.9021         False          False   True
3    4890.002197    4566.464844 -2949.140137  4890.002197  376.600000  4566.464844   0.100098  323.437256       223.43750     4.0        4889.9021         False          False   True
4    4890.002197    4766.464600 -2949.140137  4890.002197  188.300000  4766.464600   0.100098  123.437500       123.43750     5.0        4889.9021         False          False   True
5    4890.002197    4842.727051 -2949.140137  4890.002197   94.150000  4842.727051   0.100098   47.175049        23.43750     6.0        4889.9021         False          False   True
6    4890.002197    4866.464600 -2872.577637  4890.002197   47.075000  4866.464600   0.100098   23.437500         0.00000     7.0        4889.9021         False          False   True
7    4890.102197    4889.902100 -2796.015137  4890.102197   23.537500  4889.902100   0.100098    0.100000       -23.33750     8.0        4889.9021         False          False   True
8    5076.658447    4913.339844 -2796.015137  5076.658447  186.656250  4913.339844   0.100098  163.218506        63.21875     1.0        4889.9021         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1734809/4096.[0m
[08/10 15:17:32]  --------------------------------------------------------------------------------
[08/10 15:17:32]  Iteration: 41 (0 solution, 40 counterexamples)
[08/10 15:17:45]  Generator returned sat in 12.591146 secs.
[08/10 15:17:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:46]  Improved gap from 0 to 100
[08/10 15:17:47]  Improved number of small numbers from 80 to 82 out of a max of 114
[08/10 15:17:47]  Verifer returned sat in 1.209930 secs.
[08/10 15:17:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4466.564453      4366.4646 -2949.140381  4466.564453  100.099854    4366.4646      0.050  100.049854      100.049854     2.0        4366.4646            -1             -1     -1
1    4466.564600      4366.4646 -2949.140381  4466.564600  100.050000    4366.4646      0.050  100.050000        0.050000     2.0        4466.5146         False           True   True
2    4566.564600      4468.4146 -2949.140381  4566.564600  200.050000    4468.4146      0.050   98.100000        0.050000     1.0        4466.5146         False           True  False
3    4666.664600      4665.5146 -2949.140381  4666.664600  198.200000    4665.5146      0.100    1.050000        0.100000     1.0        4666.5646         False          False  False
4    4766.714600      4729.1896 -2949.140381  4766.714600  101.100000    4729.1896      0.150   37.375000        0.100000     1.0        4666.5646         False          False   True
5    4781.889600      4781.6896 -2949.140381  4781.889600   52.550000    4781.6896      0.150    0.050000      -84.725000     1.0        4666.5646         False          False   True
6    5174.439600      4868.3146 -2949.140381  5174.439600  392.600000    4868.3146    207.875   98.250000        0.100000     1.0        4666.5646         False          False   True
7    5274.489600      5066.4646 -2949.140381  5274.489600  198.300000    5066.4646    207.925    0.100000        0.100000     1.0        4666.5646         False          False   True
8    5375.539600      5066.4646 -2949.140381  5375.539600  101.150000    5066.4646    208.975  100.100000        0.100000     1.0        4666.5646         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/10 15:17:47]  --------------------------------------------------------------------------------
[08/10 15:17:47]  Iteration: 42 (0 solution, 41 counterexamples)
[08/10 15:17:49]  Generator returned sat in 0.490447 secs.
[08/10 15:17:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:50]  Improved gap from 1/80 to 100
[08/10 15:17:51]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 15:17:51]  Verifer returned sat in 1.487541 secs.
[08/10 15:17:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4794.752686    4794.690078 -2949.140381  4794.752686    0.037354  4794.690078    0.050000   0.012607       -0.012393     1.0      4794.690078            -1             -1     -1
1    4794.777578    4794.715078 -2949.140381  4794.777578    0.037500  4794.715078    0.050000   0.012500      -99.987500     1.0      4794.690078         False          False   True
2    4898.740078    4898.677578 -2949.140381  4898.740078  103.975000  4898.677578    0.050000   0.012500      -96.025000     1.0      4794.690078         False          False   True
3    5094.802578    5094.715078 -2949.140381  5094.802578  196.075000  5094.715078    0.062500   0.025000        0.025000     1.0      4794.690078         False          False   True
4    5194.815078    5194.714844 -2949.140381  5194.815078  100.037500  5194.714844    0.075000   0.025234        0.025000     1.0      4794.690078         False          False   True
5    5246.808594    5220.799453 -2949.140381  5246.808594   52.018750  5220.799453    0.075000  25.934141      -47.981484     1.0      4794.690078         False          False   True
6    5621.024453    5394.715078 -2949.140381  5621.024453  400.150000  5394.715078  226.284375   0.025000        0.025000     1.0      4794.690078         False          False   True
7    5823.074453    5491.715078 -2949.140381  5823.074453  202.075000  5491.715078  328.334375   3.025000        0.025000     1.0      4794.690078         False          False   True
8    5923.086953    5494.752686 -2949.140381  5923.086953  103.037500  5494.752686  328.346875  99.987393        0.025000     1.0      4794.690078         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/40.[0m
[08/10 15:17:51]  --------------------------------------------------------------------------------
[08/10 15:17:51]  Iteration: 43 (0 solution, 42 counterexamples)
[08/10 15:17:54]  Generator returned sat in 1.254905 secs.
[08/10 15:17:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:17:55]  Improved number of small numbers from 60 to 81 out of a max of 113
[08/10 15:17:55]  Verifer returned sat in 1.106231 secs.
[08/10 15:17:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4794.752441    4794.689941 -2949.140381  4794.752441    0.028076  4794.689941    0.059326   0.003174       -0.021963     1.0      4794.689941            -1             -1     -1
1    4794.777344    4794.715088 -2949.140381  4794.777344    0.028076  4794.715088    0.059326   0.002930      -99.997061     1.0      4794.689941         False          False   True
2    4898.749512    4898.668252 -2949.140381  4898.749512  103.975098  4898.668252    0.059326   0.021934      -96.024893     1.0      4794.689941         False          False   True
3    5094.802578    5094.715078 -2949.140381  5094.802578  196.075000  5094.715078    0.062500   0.025000        0.025000     1.0      4794.689941         False          False   True
4    5194.815078    5194.714844 -2949.140381  5194.815078  100.037500  5194.714844    0.075000   0.025234        0.025000     1.0      4794.689941         False          False   True
5    5246.808594    5221.544790 -2949.140381  5246.808594   52.018750  5221.544790    0.075000  25.188804      -47.981484     1.0      4794.689941         False          False   True
6    5621.024453    5394.715078 -2949.140381  5621.024453  399.404663  5394.715078  226.284375   0.025000        0.025000     1.0      4794.689941         False          False   True
7    5822.701785    5491.892086 -2949.140381  5822.701785  201.702332  5491.892086  327.961707   2.847992        0.025000     1.0      4794.689941         False          False   True
8    5922.704958    5494.752686 -2949.140381  5922.704958  102.851166  5494.752686  327.964880  99.987393        0.025000     1.0      4794.689941         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/40.[0m
[08/10 15:17:56]  --------------------------------------------------------------------------------
[08/10 15:17:56]  Iteration: 44 (0 solution, 43 counterexamples)
[08/10 15:18:03]  Generator returned sat in 6.132574 secs.
[08/10 15:18:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:04]  Improved gap from 0 to 0
[08/10 15:18:04]  Improved number of small numbers from 54 to 114 out of a max of 114
[08/10 15:18:04]  Verifer returned sat in 0.725675 secs.
[08/10 15:18:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5220.477539    4920.418213 -2949.140381  5220.477539  400.999756  4920.418213   0.059082  300.000244      200.000244     4.0      4920.418213            -1             -1   False
1    5321.377441    5020.418213 -2949.140381  5321.377441  400.900146  5020.418213   0.159180  300.800049      200.800049     4.0      5321.218262         False          False   False
2    5321.377441    5220.418213 -2949.140381  5321.377441  300.699951  5220.418213   0.159180  100.800049      100.800049     5.0      5321.218262         False          False    True
3    5521.177246    5320.417969 -2949.140381  5521.177246  300.599854  5320.417969   0.159180  200.600098      200.599854     3.0      5521.018066         False           True   False
4    5521.177246    5420.417969 -2949.140381  5521.177246    0.500000  5420.417969   0.159180  100.600098      100.599854     2.0      5521.018066         False          False   False
5    5521.177246    5520.318115 -2949.140381  5521.177246    0.500000  5520.318115   0.159180    0.699951        0.599854     3.0      5521.018066         False          False   False
6    5521.177246    5520.418213 -2849.740234  5521.177246    0.500000  5520.418213   0.159180    0.599854        0.000000     4.0      5521.018066         False          False   False
7    5521.177246    5521.018066 -2749.740479  5521.177246    0.500000  5521.018066   0.159180    0.000000       -0.000244     5.0      5521.018066         False          False   False
8    5521.677246    5521.018311 -2749.740479  5521.677246    0.500000  5521.018311   0.159180    0.499756      -99.500244     1.0      5521.018066         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=822477/4096.[0m
[08/10 15:18:04]  --------------------------------------------------------------------------------
[08/10 15:18:04]  Iteration: 45 (0 solution, 44 counterexamples)
[08/10 15:18:08]  Generator returned sat in 2.450543 secs.
[08/10 15:18:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:10]  Improved gap from 1/4800 to 23.4375
[08/10 15:18:10]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 15:18:10]  Verifer returned sat in 1.525068 secs.
[08/10 15:18:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1970.020508   -2347.578369 -2949.140381 -1970.020508  423.442383 -2347.578369    0.000000  377.557861      277.557861     9.0     -2347.578369            -1             -1     -1
1   -1924.138428   -2147.578369 -2949.140381 -1924.138428  423.439941 -2147.578369    0.002441  223.437500      223.437500     4.0     -1924.140869         False           True  False
2   -1924.138428   -2061.640625 -2949.140381 -1924.138428  223.435059 -2061.640625    0.002441  137.499756      123.437500     5.0     -1924.140869         False          False   True
3   -1573.888184   -1970.018311 -2949.140381 -1573.888184  487.750000 -1970.018311  150.252686  245.877441      223.437500     3.0     -1924.140869         False           True  False
4   -1573.888184   -1847.578369 -2949.140381 -1573.888184  245.875000 -1847.578369  150.252686  123.437500      123.437500     2.0     -1924.140869         False          False   True
5   -1573.888184   -1847.575684 -2949.140381 -1573.888184    0.010000 -1847.575684  150.252686  123.434814       23.437500     3.0     -1924.140869         False          False   True
6   -1573.888184   -1747.578369 -2872.577881 -1573.888184    0.010000 -1747.578369  150.252686   23.437500        0.000000     4.0     -1924.140869         False          False   True
7   -1573.888184   -1724.140869 -2796.015381 -1573.888184    0.010000 -1724.140869  150.252686    0.000000      -23.437500     5.0     -1924.140869         False          False   True
8   -1328.013184   -1700.703125 -2796.015381 -1328.013184  245.875000 -1700.703125  150.252686  222.437256      122.437500     1.0     -1478.265869          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 15:18:11]  --------------------------------------------------------------------------------
[08/10 15:18:11]  Iteration: 46 (0 solution, 45 counterexamples)
[08/10 15:18:13]  Generator returned sat in 1.044364 secs.
[08/10 15:18:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:15]  Improved gap from 1149/102400 to 23.4375
[08/10 15:18:15]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:18:15]  Verifer returned sat in 1.849408 secs.
[08/10 15:18:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2350.826172   -2361.768311 -2949.140381 -2350.826172    0.002686 -2361.768311    0.000000   10.942139       -0.002686     9.0     -2361.768311            -1             -1     -1
1   -2250.823486   -2350.823486 -2949.140381 -2250.823486  110.944824 -2350.823486    0.000000  100.000000        0.000000     1.0     -2361.768311         False           True  False
2   -2239.881104   -2250.820801 -2872.580566 -2239.881104  110.942383 -2250.820801    0.000000   10.939697      -12.497803     1.0     -2239.881104         False          False  False
3   -1762.070801   -2149.820801 -2872.580566 -1762.070801  488.750000 -2149.820801  241.872559  145.877441      123.439941     1.0     -2239.881104         False          False  False
4   -1662.073242   -2027.383301 -2872.580566 -1662.073242  245.875000 -2027.383301  241.872559  123.437500      123.437500     2.0     -2239.881104         False          False   True
5   -1662.073242   -1927.385986 -2872.580566 -1662.073242    0.010000 -1927.385986  241.872559   23.440186       23.437500     2.0     -2239.881104         False          False   True
6   -1662.073242   -1927.383301 -2796.018066 -1662.073242    0.010000 -1927.383301  241.872559   23.437500        0.000000     3.0     -2239.881104         False          False   True
7   -1662.073242   -1903.945801 -2719.455566 -1662.073242    0.010000 -1903.945801  241.872559    0.000000      -23.437500     4.0     -2239.881104         False          False   True
8   -1416.198242   -1880.508301 -2719.455566 -1416.198242  245.875000 -1880.508301  241.872559  222.437500      122.437500     1.0     -1658.070801          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=252805/2048.[0m
[08/10 15:18:16]  --------------------------------------------------------------------------------
[08/10 15:18:16]  Iteration: 47 (0 solution, 46 counterexamples)
[08/10 15:18:25]  Generator returned sat in 8.303039 secs.
[08/10 15:18:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:32]  Improved gap from 1/400 to 1.5625
[08/10 15:18:32]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:18:32]  Verifer returned sat in 6.616933 secs.
[08/10 15:18:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1304.220459   -1307.775146 -3992.188721 -1304.220459    0.005127 -1307.775146   0.000000    3.554688        3.554688     1.0     -1307.775146            -1             -1   False
1   -1304.220459   -1307.775146 -3895.745850 -1304.220459    0.002686 -1307.775146   0.000000    3.554688       -0.002441     1.0     -1304.220459         False          False   False
2   -1304.215576   -1304.218018 -3797.308594 -1304.215576    3.559570 -1304.218018   0.000000    0.002441       -1.560303     1.0     -1304.220459         False          False   False
3   -1272.680420   -1298.363281 -3727.283447 -1272.680420   31.537598 -1298.363281   0.000000   25.682861        0.000000     1.0     -1304.220459         False          False   False
4   -1272.680420   -1272.680420 -3628.845947 -1272.680420   25.680664 -1272.680420   0.000000    0.000000       -1.562500     2.0     -1304.220459         False          False   False
5   -1224.245361   -1225.807861 -3575.718506 -1224.245361   48.435059 -1225.807861   0.000000    1.562500        0.000000     1.0     -1304.220459         False          False   False
6   -1122.680176   -1224.242920 -3575.718506 -1122.680176  103.127686 -1224.242920   0.002686  101.560059        1.562500     1.0     -1304.220459         False          False   False
7   -1122.680176   -1124.245361 -3477.281006 -1122.680176    1.500000 -1124.245361   0.002686    1.562500        0.000000     2.0     -1304.220459         False          False    True
8   -1122.680176   -1122.682861 -3477.280762 -1122.680176    0.010000 -1122.682861   0.002686    0.000000      -99.999756     3.0     -1304.220459         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25/16.[0m
[08/10 15:18:33]  --------------------------------------------------------------------------------
[08/10 15:18:33]  Iteration: 48 (0 solution, 47 counterexamples)
[08/10 15:18:36]  Generator returned sat in 2.418756 secs.
[08/10 15:18:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:37]  Improved gap from 1/10 to 0
[08/10 15:18:37]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 15:18:37]  Verifer returned sat in 0.848538 secs.
[08/10 15:18:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2190.372803   -2190.423096 -3895.745850 -2190.372803    0.050049 -2190.423096   0.000000   0.050293        0.050049     7.0     -2190.423096            -1             -1     -1
1   -2090.423096   -2190.422852 -3895.745850 -2090.423096  100.000000 -2190.422852   0.000000  99.999756       -0.000244     2.0     -2190.423096         False           True  False
2   -1991.173096   -1991.222900 -3894.995850 -1991.173096  199.249756 -1991.222900   0.000000   0.049805       -0.000244     1.0     -2190.423096         False          False  False
3   -1792.022705   -1891.173096 -3894.995850 -1792.022705  199.200195 -1891.173096  97.600098   1.550293        1.550049     1.0     -1889.622803         False          False  False
4   -1691.972900   -1889.572754 -3894.995850 -1691.972900  101.600098 -1889.572754  97.649902  99.949951        1.550049     1.0     -1889.622803         False          False   True
5   -1691.972900   -1791.172852 -3796.545898 -1691.972900   52.800049 -1791.172852  97.649902   1.550049        0.000000     2.0     -1889.622803         False          False   True
6   -1691.972900   -1789.622803 -3697.995850 -1691.972900    1.500000 -1789.622803  97.649902   0.000000       -1.449951     3.0     -1889.622803         False          False   True
7   -1690.472900   -1788.172852 -3599.495850 -1690.472900    1.500000 -1788.172852  97.649902   0.050049       -1.449951     1.0     -1889.622803         False          False   True
8   -1689.022949   -1786.672852 -3599.495850 -1689.022949    1.500000 -1786.672852  97.649902   0.000000     -100.000000     1.0     -1889.622803         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=6349/4096.[0m
[08/10 15:18:38]  --------------------------------------------------------------------------------
[08/10 15:18:38]  Iteration: 49 (0 solution, 48 counterexamples)
[08/10 15:18:46]  Generator returned sat in 6.338799 secs.
[08/10 15:18:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:46]  Improved gap from 0 to 48.4375
[08/10 15:18:47]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:18:47]  Verifer returned sat in 0.624984 secs.
[08/10 15:18:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2134.085205   -2285.663330 -3845.061768 -2134.085205  351.625000 -2285.663330   0.000000  151.578125       99.952881     9.0     -2285.663330            -1             -1     -1
1   -1934.085205   -2134.038330 -3845.061768 -1934.085205  351.578125 -2134.038330   0.000000  199.953125      199.952881     1.0     -1934.085205         False           True  False
2   -1782.507080   -2134.038086 -3845.061768 -1782.507080  351.531250 -2134.038086   0.046875  351.484131      251.484131     2.0     -1782.553955         False          False  False
3   -1782.507080   -1934.038330 -3845.061768 -1782.507080   55.937500 -1934.038330   0.046875  151.484375      151.484131     2.0     -1782.553955         False          False   True
4   -1782.507080   -1835.631836 -3845.061768 -1782.507080   54.437500 -1835.631836   0.046875   53.077881       51.484131     3.0     -1782.553955         False          False   True
5   -1782.507080   -1834.038086 -3796.545898 -1782.507080   52.937500 -1834.038086   0.046875   51.484131        0.000000     4.0     -1782.553955         False          False   True
6   -1782.507080   -1782.553955 -3744.983398 -1782.507080   51.437500 -1782.553955   0.046875    0.000000      -48.437500     5.0     -1782.553955         False          False   True
7   -1732.569580   -1734.116211 -3693.421143 -1732.569580   49.937500 -1734.116211   0.046875    1.499756      -46.937744     1.0     -1782.553955         False          False   True
8   -1685.631836   -1685.678711 -3693.420898 -1685.631836   48.437500 -1685.678711   0.046875    0.000000      -99.999756     1.0     -1782.553955         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1030079/4096.[0m
[08/10 15:18:47]  --------------------------------------------------------------------------------
[08/10 15:18:47]  Iteration: 50 (0 solution, 49 counterexamples)
[08/10 15:18:57]  Generator returned sat in 8.091639 secs.
[08/10 15:18:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:18:57]  Improved gap from 0 to 100
[08/10 15:18:57]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:18:57]  Verifer returned sat in 0.561279 secs.
[08/10 15:18:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3634.259766   -3731.059570 -3845.062012 -3634.259766  200.000000 -3731.059570    0.000000   96.799805       96.799805     2.0     -3731.059570            -1             -1   False
1   -3531.109375   -3634.209473 -3845.062012 -3531.109375  199.950195 -3634.209473    0.000000  103.100098       99.950195     1.0     -3531.109375         False          False   False
2   -3431.109375   -3534.059570 -3845.062012 -3431.109375  203.100098 -3534.059570    0.000000  102.950195       99.950195     2.0     -3531.109375         False          False   False
3   -3331.009521   -3431.059570 -3845.062012 -3331.009521  203.050049 -3431.059570    0.050049  100.000000      100.000000     1.0     -3331.059570         False          False   False
4   -3229.459473   -3331.059570 -3845.062012 -3229.459473  201.550049 -3331.059570    1.600098  100.000000      100.000000     2.0     -3331.059570         False          False    True
5   -3129.409424   -3331.009521 -3845.062012 -3129.409424  200.050049 -3331.009521    1.650146  199.949951      100.000000     2.0     -3331.059570         False          False    True
6   -3129.409424   -3231.059570 -3845.062012 -3129.409424  198.550049 -3231.059570    1.650146  100.000000        0.000000     3.0     -3331.059570         False          False    True
7   -2830.909424   -3031.059570 -3845.062012 -2830.909424  398.500000 -3031.059570  100.150146  100.000000      100.000000     1.0     -2931.059570          True           True   False
8   -2533.909424   -2931.059570 -3845.062012 -2533.909424  397.000000 -2931.059570  297.150146  100.000000      100.000000     2.0     -2931.059570         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=100.[0m
[08/10 15:18:58]  --------------------------------------------------------------------------------
[08/10 15:18:58]  Iteration: 51 (0 solution, 50 counterexamples)
[08/10 15:19:05]  Generator returned sat in 5.384384 secs.
[08/10 15:19:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:06]  Improved gap from 0 to 0
[08/10 15:19:06]  Improved number of small numbers from 62 to 83 out of a max of 114
[08/10 15:19:06]  Verifer returned sat in 1.177850 secs.
[08/10 15:19:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3817.434570   -3817.436279 -3758.685303 -3817.434570    0.003174 -3817.436279    0.000000   0.001709        0.001709     2.0     -3817.436279            -1             -1   False
1   -3817.434570   -3817.436090 -3658.687158 -3817.434570    0.001667 -3817.436090    0.000000   0.001520       -0.000146     2.0     -3817.434570         False          False   False
2   -3717.429424   -3717.434424 -3658.687158 -3717.429424  100.006667 -3717.434424    0.001667   0.003333        0.003333     1.0     -3817.434570         False          False   False
3   -3329.412757   -3713.439424 -3658.687158 -3329.412757  388.020000 -3713.439424  288.018333  96.008333        0.003333     1.0     -3817.434570         False          False    True
4   -3229.411090   -3517.434424 -3658.687158 -3229.411090  196.010000 -3517.434424  288.020000   0.003333        0.003333     1.0     -3817.434570         False          False    True
5   -3129.409424   -3419.443590 -3658.687158 -3129.409424  100.005000 -3419.443590  288.021667   2.012500        0.003333     1.0     -3817.434570         False          False    True
6   -3079.419424   -3367.447757 -3608.682129 -3079.419424   52.002500 -3367.447757  288.021667   0.006667       -0.001637     1.0     -3817.434570         False          False    True
7   -3079.416090   -3367.439424 -3508.683838 -3079.416090    0.010000 -3367.439424  288.021667   0.001667       -0.000013     1.0     -3817.434570         False          False    True
8   -3079.407757   -3367.436279 -3508.683594 -3079.407757    0.010000 -3367.436279  288.021667   0.006855      -99.991436     1.0     -3817.434570         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/300.[0m
[08/10 15:19:07]  --------------------------------------------------------------------------------
[08/10 15:19:07]  Iteration: 52 (0 solution, 51 counterexamples)
[08/10 15:19:10]  Generator returned sat in 1.107530 secs.
[08/10 15:19:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:10]  Improved gap from 0 to 0
[08/10 15:19:11]  Improved number of small numbers from 67 to 89 out of a max of 114
[08/10 15:19:11]  Verifer returned sat in 0.817960 secs.
[08/10 15:19:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3329.413330   -3429.411133 -3908.659912 -3329.413330  100.000000 -3429.411133    0.00000   99.997803       99.997764     8.0     -3429.411133            -1             -1     -1
1   -3329.412354   -3429.410889 -3908.659912 -3329.412354   99.998779 -3429.410889    0.00000   99.998535       -0.001260     2.0     -3329.412354         False           True  False
2   -3329.409668   -3329.410918 -3808.661338 -3329.409668  100.001221 -3329.410918    0.00000    0.001250        0.000000     1.0     -3329.412354         False          False  False
3   -3129.409668   -3229.899043 -3808.661338 -3129.409668  200.001250 -3229.899043    0.00125  100.488125       99.998750     1.0     -3329.412354         False          False  False
4   -3129.397168   -3129.410889 -3808.661338 -3129.397168  100.500625 -3129.410889    0.00125    0.012471        0.011250     1.0     -3329.412354         False          False   True
5   -3129.397168   -3129.409668 -3708.672588 -3129.397168    0.010000 -3129.409668    0.00125    0.011250        0.000000     2.0     -3329.412354         False          False   True
6   -3129.397168   -3129.398418 -3608.673828 -3129.397168    0.010000 -3129.398418    0.00125    0.000000       -0.001240     3.0     -3329.412354         False          False   True
7   -3129.387168   -3129.397168 -3508.683838 -3129.387168    0.010000 -3129.397168    0.00125    0.008750       -0.001250     1.0     -3329.412354         False          False   True
8   -3129.385918   -3129.387168 -3508.683838 -3129.385918    0.010000 -3129.387168    0.00125    0.000000     -100.000000     1.0     -3329.412354         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=79999/800.[0m
[08/10 15:19:11]  --------------------------------------------------------------------------------
[08/10 15:19:11]  Iteration: 53 (0 solution, 52 counterexamples)
[08/10 15:19:18]  Generator returned sat in 5.547342 secs.
[08/10 15:19:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:19]  Improved gap from 0 to 48.4375
[08/10 15:19:19]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:19:19]  Verifer returned sat in 0.748023 secs.
[08/10 15:19:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4205.184082   -4705.137207 -2732.933838 -4205.184082  499.999756 -4705.137207        0.0  499.953125      399.953369     3.0     -4705.137207            -1             -1   False
1   -4205.137451   -4605.137207 -2732.933838 -4205.137451  499.999756 -4605.137207        0.0  399.999756      300.000000     3.0     -4705.137207         False          False   False
2   -4152.059326   -4405.137451 -2732.933838 -4152.059326  453.077881 -4405.137451        0.0  253.078125      253.078125     4.0     -4152.059326         False          False   False
3   -4152.059326   -4305.137451 -2732.933838 -4152.059326   55.937500 -4305.137451        0.0  153.078125      153.078125     5.0     -4152.059326         False          False   False
4   -4152.059326   -4205.137451 -2732.933838 -4152.059326   54.437500 -4205.137451        0.0   53.078125       53.078125     4.0     -4152.059326         False           True   False
5   -4152.059326   -4205.137451 -2686.011963 -4152.059326   52.937500 -4205.137451        0.0   53.078125        0.000000     4.0     -4152.059326         False          False   False
6   -4152.059326   -4152.059326 -2634.449463 -4152.059326   51.437500 -4152.059326        0.0    0.000000      -48.437500     5.0     -4152.059326         False          False   False
7   -4102.121826   -4103.621826 -2582.886963 -4102.121826   49.937500 -4103.621826        0.0    1.500000      -46.937500     1.0     -4152.059326         False           True   False
8   -4055.184326   -4055.184326 -2582.886963 -4055.184326   48.437500 -4055.184326        0.0    0.000000     -100.000000     1.0     -4152.059326         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=300.[0m
[08/10 15:19:20]  --------------------------------------------------------------------------------
[08/10 15:19:20]  Iteration: 54 (0 solution, 53 counterexamples)
[08/10 15:19:24]  Generator returned sat in 2.916659 secs.
[08/10 15:19:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:25]  Improved gap from 0 to 100
[08/10 15:19:25]  Improved number of small numbers from 84 to 114 out of a max of 114
[08/10 15:19:25]  Verifer returned sat in 0.552292 secs.
[08/10 15:19:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5052.259521   -5352.159180 -2732.934082 -5052.259521     0.100098 -5352.159180        0.0  299.899658      199.899658     2.0     -5352.159180            -1             -1   False
1   -5052.259521   -5152.159180 -2732.934082 -5052.259521   299.800000 -5152.159180        0.0   99.899658       99.899658     2.0     -5352.159180         False          False   False
2   -4152.059326   -5052.159424 -2732.934082 -4152.059326  1000.099854 -5052.159424        0.0  900.100098      900.099854     1.0     -5352.159180         False          False   False
3   -4152.059326   -4952.259521 -2732.934082 -4152.059326   790.199951 -4952.259521        0.0  800.200195      800.099854     2.0     -4152.059326         False          False   False
4   -4152.059326   -4952.159180 -2732.934082 -4152.059326   792.199951 -4952.159180        0.0  800.099854      700.099854     3.0     -4152.059326         False          False   False
5   -4152.059326   -4752.159180 -2732.934082 -4152.059326   794.199951 -4752.159180        0.0  600.099854      600.099854     4.0     -4152.059326         False          False   False
6   -3955.959229   -4652.159424 -2732.934082 -3955.959229   796.199951 -4652.159424        0.0  696.200195      696.199951     5.0     -4152.059326         False           True   False
7   -3853.959473   -4552.159180 -2732.934082 -3853.959473   798.199951 -4552.159180        0.0  698.199707      698.199707     6.0     -4152.059326         False           True   False
8   -3751.959229   -4552.059326 -2732.934082 -3751.959229   800.199951 -4552.059326        0.0  800.100098      700.199951     7.0     -4152.059326         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3687219/4096.[0m
[08/10 15:19:26]  --------------------------------------------------------------------------------
[08/10 15:19:26]  Iteration: 55 (0 solution, 54 counterexamples)
[08/10 15:19:31]  Generator returned sat in 4.217173 secs.
[08/10 15:19:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:33]  Improved gap from 1/20 to 100
[08/10 15:19:33]  Improved number of small numbers from 92 to 114 out of a max of 114
[08/10 15:19:33]  Verifer returned sat in 1.841972 secs.
[08/10 15:19:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3143.208984   -3143.409424 -2732.934082 -3143.208984    0.100000 -3143.409424    0.000000    0.200439        0.200439     9.0     -3143.409424            -1             -1     -1
1   -3143.208984   -3143.409180 -2732.934082 -3143.208984    0.100000 -3143.409180    0.000000    0.200195      -99.799561     2.0     -3143.409424         False           True  False
2   -2943.509277   -2943.609131 -2732.934082 -2943.509277  199.899902 -2943.609131    0.000000    0.099854       -0.099854     1.0     -3143.409424         False          False  False
3   -2743.709229   -2943.409424 -2732.934082 -2743.709229  199.899902 -2943.409424    0.000000  199.700195       99.700195     1.0     -3143.409424         False          False  False
4   -2743.709229   -2743.809326 -2732.934082 -2743.709229  197.949951 -2743.809326    0.000000    0.100098       -0.299805     2.0     -3143.409424         False          False  False
5   -2447.034424   -2739.684326 -2732.934082 -2447.034424  296.774902 -2739.684326   96.475098  196.174805       99.899902     1.0     -3143.409424         False          False  False
6   -2346.934326   -2543.409424 -2732.934082 -2346.934326  296.274902 -2543.409424   96.575195   99.899902       99.899902     1.0     -3143.409424         False          False   True
7   -2151.059326   -2443.409424 -2732.934082 -2151.059326  295.774902 -2443.409424  192.450195   99.899902       99.899902     1.0     -3143.409424         False          False   True
8   -1955.684326   -2343.409424 -2732.934082 -1955.684326  295.274902 -2343.409424  287.825195   99.899902       99.899902     1.0     -3143.409424         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=204595/2048.[0m
[08/10 15:19:34]  --------------------------------------------------------------------------------
[08/10 15:19:34]  Iteration: 56 (0 solution, 55 counterexamples)
[08/10 15:19:52]  Generator returned sat in 15.758709 secs.
[08/10 15:19:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:52]  Improved gap from 1/1200 to 10.9375
[08/10 15:19:52]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 15:19:52]  Verifer returned sat in 0.606192 secs.
[08/10 15:19:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2505.634521   -2505.734375 -3370.609131 -2505.634521  538.962402 -2505.734375   0.050049    0.049805        0.049805     4.0     -2505.734375            -1             -1     -1
1   -1966.721924   -2505.634277 -3370.609131 -1966.721924  538.962402 -2505.634277   0.100098  538.812256      438.912354     1.0     -2505.734375         False          False   True
2   -1966.721924   -2405.734131 -3370.609131 -1966.721924    0.050049 -2405.734131   0.100098  438.912109      338.912354     2.0     -1966.822021         False          False   True
3   -1966.721924   -2205.734375 -3370.609131 -1966.721924  410.000000 -2205.734375   0.100098  238.912354      238.912354     3.0     -1966.822021         False          False   True
4   -1966.721924   -2105.734375 -3370.609131 -1966.721924  203.000000 -2105.734375   0.100098  138.912354      138.912354     4.0     -1966.822021         False          False   True
5   -1966.721924   -2014.521729 -3370.609131 -1966.721924   99.500000 -2014.521729   0.100098   47.699707       38.912354     5.0     -1966.822021         False          False   True
6   -1966.671631   -1977.659424 -3309.621582 -1966.671631   47.750000 -1977.659424   0.100098   10.887695       -0.049805     6.0     -1966.822021         False          False   True
7   -1955.684326   -1966.721924 -3220.559082 -1955.684326   21.875000 -1966.721924   0.100098   10.937500        0.000000     1.0     -1966.822021         False          False   True
8   -1955.684326   -1955.784424 -3220.559082 -1955.684326    8.937500 -1955.784424   0.100098    0.000000     -100.000000     2.0     -1966.822021         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1797785/4096.[0m
[08/10 15:19:53]  --------------------------------------------------------------------------------
[08/10 15:19:53]  Iteration: 57 (0 solution, 56 counterexamples)
[08/10 15:19:56]  Generator returned sat in 1.513314 secs.
[08/10 15:19:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:19:59]  Improved gap from 1/1200 to 0
[08/10 15:20:00]  Improved number of small numbers from 36 to 45 out of a max of 114
[08/10 15:20:00]  Verifer returned sat in 3.643886 secs.
[08/10 15:20:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3176.148438   -3276.198723 -1171.911533 -3176.148438  100.003906 -3276.198723   0.050049  100.000236      100.000236     8.0     -3276.198723            -1             -1     -1
1   -3176.144674   -3276.198723 -1171.911533 -3176.144674  100.004000 -3276.198723   0.051049  100.003000        0.003000     8.0     -3276.198723         False           True   True
2   -3176.138674   -3176.198723 -1171.911377 -3176.138674  100.009000 -3176.198723   0.051049    0.009000      -99.990844     9.0     -3276.198723         False           True   True
3   -3076.139674   -3076.198723 -1071.920410 -3076.139674  100.008000 -3076.198723   0.051049    0.008000       -0.000877     1.0     -3076.190723          True           True  False
4   -3076.137674   -3076.189723  -971.921631 -3076.137674    0.010000 -3076.189723   0.051049    0.001000       -0.000098     1.0     -3076.190723         False          False  False
5   -3076.128674   -3076.179723  -871.930533 -3076.128674    0.010000 -3076.179723   0.051049    0.000000        0.000000     1.0     -3076.190723         False          False  False
6   -3076.118674   -3076.179723  -771.940533 -3076.118674    0.010000 -3076.179723   0.051049    0.010000        0.000000     1.0     -3076.190723         False          False  False
7   -3076.118674   -3076.169723  -671.940674 -3076.118674    0.010000 -3076.169723   0.051049    0.000000       -0.000141     2.0     -3076.190723         False          False  False
8   -3076.108674   -3076.168701  -671.940430 -3076.108674    0.010000 -3076.168701   0.051049    0.008979      -99.989896     1.0     -3076.190723         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3/1000.[0m
[08/10 15:20:00]  --------------------------------------------------------------------------------
[08/10 15:20:00]  Iteration: 58 (0 solution, 57 counterexamples)
[08/10 15:20:11]  Generator returned sat in 8.578240 secs.
[08/10 15:20:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:11]  Improved gap from 0 to 100
[08/10 15:20:12]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/10 15:20:12]  Verifer returned sat in 0.731016 secs.
[08/10 15:20:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3176.144531   -3276.207031 -1071.924072 -3176.144531    0.012451 -3276.207031    0.049805  100.012695      100.000244     9.0     -3276.207031            -1             -1     -1
1   -3176.144531   -3276.194580 -1071.924072 -3176.144531   99.987305 -3276.194580    0.049805  100.000244        0.000244     6.0     -3276.207031         False           True   True
2   -3176.144531   -3176.194580 -1071.924072 -3176.144531   99.987305 -3176.194580    0.049805    0.000244      -99.999756     3.0     -3276.207031          True           True  False
3   -2992.157227   -3058.144531 -1071.924072 -2992.157227  183.987549 -3058.144531    0.049805   65.937500      -16.012451     1.0     -3276.207031         False          False  False
4   -2876.107178   -2942.169678 -1071.924072 -2876.107178  181.987549 -2942.169678    0.062500   66.000000        0.024902     1.0     -3276.207031         False          False  False
5   -2776.094727   -2776.194580 -1071.924072 -2776.094727  166.012451 -2776.194580    0.074951    0.024902        0.024902     1.0     -3276.207031         False          False   True
6   -2577.119629   -2676.194824 -1071.924072 -2577.119629  199.000000 -2676.194824   99.050049    0.025146        0.024902     1.0     -3276.207031         False          False   True
7   -2387.169922   -2576.194580 -1071.924072 -2387.169922  189.974854 -2576.194580  188.999756    0.024902        0.024902     1.0     -3276.207031         False          False   True
8   -2205.207275   -2576.157227 -1071.924072 -2205.207275  181.987549 -2576.157227  270.962402   99.987549        0.024902     1.0     -3276.207031         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=51/2048.[0m
[08/10 15:20:12]  --------------------------------------------------------------------------------
[08/10 15:20:12]  Iteration: 59 (0 solution, 58 counterexamples)
[08/10 15:20:16]  Generator returned sat in 1.411365 secs.
[08/10 15:20:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:16]  Improved gap from 0 to 48.4375
[08/10 15:20:16]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:20:16]  Verifer returned sat in 0.455627 secs.
[08/10 15:20:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2377.772217   -2477.822021 -1870.296875 -2377.772217    0.025000 -2477.822021   0.049805  100.000000      100.000000     2.0     -2477.822021            -1             -1   False
1   -2177.797119   -2377.822021 -1870.296875 -2177.797119  299.975098 -2377.822021   0.049805  199.975098      199.975098     2.0     -2477.822021         False          False   False
2   -2024.672119   -2377.821777 -1870.296875 -2024.672119  353.100098 -2377.821777   0.049805  353.099854      253.100098     2.0     -2477.822021         False          False   False
3   -2024.672119   -2177.822021 -1870.296875 -2024.672119   55.074951 -2177.822021   0.049805  153.100098      153.100098     2.0     -2024.721924         False          False   False
4   -2024.672119   -2077.822021 -1870.296875 -2024.672119   54.074951 -2077.822021   0.049805   53.100098       53.100098     3.0     -2024.721924         False          False   False
5   -2024.672119   -2073.159424 -1823.396973 -2024.672119   53.074951 -2073.159424   0.049805   48.437500        0.000000     4.0     -2024.721924         False          False   False
6   -2021.034668   -2024.721924 -1771.834473 -2021.034668   52.074951 -2024.721924   0.049805    3.637451      -44.800049     5.0     -2024.721924         False          False   False
7   -1973.597168   -1976.284424 -1720.271973 -1973.597168   51.074951 -1976.284424   0.049805    2.637451      -45.800049     1.0     -2024.721924         False           True   False
8   -1926.159668   -1927.846680 -1720.271729 -1926.159668   50.074951 -1927.846680   0.049805    1.637207      -98.362305     1.0     -2024.721924         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2025/8.[0m
[08/10 15:20:17]  --------------------------------------------------------------------------------
[08/10 15:20:17]  Iteration: 60 (0 solution, 59 counterexamples)
[08/10 15:20:20]  Generator returned sat in 1.098763 secs.
[08/10 15:20:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:20]  Improved gap from 759/16 to 48.4375
[08/10 15:20:20]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:20:20]  Verifer returned sat in 0.721601 secs.
[08/10 15:20:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2294.124512   -2642.662354 -1926.521729 -2294.124512  348.487500 -2642.662354   0.000000  348.537842      348.337402     8.0     -2642.662354            -1             -1     -1
1   -2294.124512   -2542.462158 -1926.521729 -2294.124512  348.487549 -2542.462158   0.000000  248.337646      248.337402     4.0     -2642.662354         False           True  False
2   -2194.024658   -2442.462158 -1926.521729 -2194.024658  348.437500 -2442.462158   0.049805  248.387695      248.387451     5.0     -2194.074463         False          False  False
3   -2194.024658   -2442.461914 -1926.521729 -2194.024658   53.974854 -2442.461914   0.049805  248.387451      148.387451     6.0     -2194.074463         False           True   True
4   -2194.024658   -2247.099609 -1926.521729 -2194.024658   53.474854 -2247.099609   0.049805   53.025146       48.387451     3.0     -2194.074463         False           True  False
5   -2194.024658   -2242.461914 -1874.959229 -2194.024658   52.974854 -2242.461914   0.049805   48.387451       -0.050049     4.0     -2194.074463         False          False  False
6   -2189.937256   -2194.024414 -1823.396729 -2189.937256   52.474854 -2194.024414   0.049805    4.037354      -44.400146     1.0     -2194.074463         False          False  False
7   -2141.999756   -2145.586914 -1771.834229 -2141.999756   51.974854 -2145.586914   0.049805    3.537354      -44.900146     1.0     -2194.074463         False          False  False
8   -2094.062256   -2097.149414 -1720.271729 -2094.062256   51.474854 -2097.149414   0.049805    3.037354      -45.400146     1.0     -2194.074463         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1017395/4096.[0m
[08/10 15:20:21]  --------------------------------------------------------------------------------
[08/10 15:20:21]  Iteration: 61 (0 solution, 60 counterexamples)
[08/10 15:20:43]  Generator returned sat in 19.771793 secs.
[08/10 15:20:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:43]  Improved gap from 1/20 to 100
[08/10 15:20:44]  Improved number of small numbers from 68 to 89 out of a max of 114
[08/10 15:20:44]  Verifer returned sat in 1.356089 secs.
[08/10 15:20:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2292.251953   -2392.352051 -1720.271729 -2292.251953    0.100000 -2392.352051      0.000  100.100098      100.099961     2.0     -2392.352051            -1             -1   False
1   -2292.251953   -2292.352051 -1720.271729 -2292.251953    0.100098 -2292.352051      0.000    0.100098        0.099961     2.0     -2392.352051         False          False   False
2   -2192.352051   -2292.351914 -1720.271729 -2192.352051  100.000000 -2292.351914      0.000   99.999863       -0.000137     3.0     -2392.352051         False          False   False
3   -2082.751914   -2092.351914 -1720.271729 -2082.751914  209.600000 -2092.351914      5.400    4.200000        4.200000     1.0     -2392.352051         False          False   False
4   -1982.651914   -2001.176914 -1720.271729 -1982.651914  104.300000 -2001.176914      5.500   13.025000        4.200000     1.0     -2392.352051         False          False    True
5   -1944.026914   -1949.626914 -1720.271729 -1944.026914   51.650000 -1949.626914      5.500    0.100000      -57.175000     1.0     -2392.352051         False          False    True
6   -1523.926914   -1892.351914 -1720.271729 -1523.926914  420.200000 -1892.351914    264.225  104.200000        4.200000     1.0     -2392.352051         False          False    True
7   -1418.526914   -1692.351914 -1720.271729 -1418.526914  209.600000 -1692.351914    269.625    4.200000        4.200000     1.0     -2392.352051         False          False    True
8   -1318.426914   -1688.052002 -1720.271729 -1318.426914  104.300000 -1688.052002    269.725   99.900088        4.200000     1.0     -2392.352051         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=21/5.[0m
[08/10 15:20:45]  --------------------------------------------------------------------------------
[08/10 15:20:45]  Iteration: 62 (0 solution, 61 counterexamples)
[08/10 15:20:54]  Generator returned sat in 7.063509 secs.
[08/10 15:20:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:54]  Improved gap from 1/20 to 100
[08/10 15:20:54]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:20:54]  Verifer returned sat in 0.397779 secs.
[08/10 15:20:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2345.568359   -2345.568359 -1733.721924 -2345.568359  396.150000 -2345.568359   0.000000    0.000000        0.000000     4.0     -2345.568359            -1             -1     -1
1   -1949.468506   -2255.368408 -1733.721924 -1949.468506  396.099854 -2255.368408   0.000000  305.899902      296.099854     1.0     -1949.468506         False           True  False
2   -1847.468506   -2153.468750 -1733.721924 -1847.468506  407.899902 -2153.468750   0.000000  306.000244      298.099854     2.0     -1949.468506         False          False  False
3   -1745.568604   -2045.568359 -1733.721924 -1745.568604  407.900146 -2045.568359   0.049805  299.949951      299.949951     3.0     -1949.468506         False          False  False
4   -1639.618408   -1949.468506 -1733.721924 -1639.618408  405.900146 -1949.468506   6.000000  303.850098      299.949951     4.0     -1949.468506         False          False   True
5   -1539.568359   -1847.468750 -1733.721924 -1539.568359  403.900146 -1847.468750   6.050049  301.850342      299.949951     4.0     -1949.468506         False           True   True
6   -1439.518555   -1845.568359 -1733.721924 -1439.518555  401.900146 -1845.568359   6.099854  399.949951      299.949951     4.0     -1445.618408          True           True   True
7   -1439.518555   -1714.668457 -1733.721924 -1439.518555  399.900146 -1714.668457   6.099854  269.050049      199.949951     4.0     -1445.618408         False           True   True
8   -1239.468506   -1545.568604 -1733.721924 -1239.468506  469.100098 -1545.568604   6.149902  299.950195      299.949951     3.0     -1445.618408         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1228595/4096.[0m
[08/10 15:20:55]  --------------------------------------------------------------------------------
[08/10 15:20:55]  Iteration: 63 (0 solution, 62 counterexamples)
[08/10 15:20:58]  Generator returned sat in 1.133893 secs.
[08/10 15:20:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:20:58]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:20:58]  Verifer returned sat in 0.166401 secs.
[08/10 15:20:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2345.568359   -2345.568359 -1733.721924 -2345.568359  396.150000 -2345.568359   0.000000    0.000000        0.000000     5.0     -2345.568359            -1             -1     -1
1   -1949.468506   -2255.368408 -1733.721924 -1949.468506  396.099854 -2255.368408   0.000000  305.899902      296.099854     1.0     -1949.468506         False           True  False
2   -1847.468506   -2153.468750 -1733.721924 -1847.468506  407.899902 -2153.468750   0.000000  306.000244      298.099854     2.0     -1949.468506         False          False  False
3   -1745.568604   -2045.568359 -1733.721924 -1745.568604  407.900146 -2045.568359   0.049805  299.949951      299.949951     3.0     -1949.468506         False          False  False
4   -1639.618408   -1949.468506 -1733.721924 -1639.618408  405.900146 -1949.468506   6.000000  303.850098      299.949951     4.0     -1949.468506         False          False   True
5   -1539.568359   -1847.468750 -1733.721924 -1539.568359  403.900146 -1847.468750   6.050049  301.850342      299.949951     4.0     -1949.468506         False           True   True
6   -1439.518555   -1845.568359 -1733.721924 -1439.518555  401.900146 -1845.568359   6.099854  399.949951      299.949951     4.0     -1445.618408          True           True   True
7   -1439.518555   -1714.343506 -1733.721924 -1439.518555  399.900146 -1714.343506   6.099854  268.725098      199.949951     4.0     -1445.618408         False           True   True
8   -1239.493652   -1545.568604 -1733.721924 -1239.493652  468.750000 -1545.568604   6.124756  299.950195      299.949951     3.0     -1445.618408         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1228595/4096.[0m
[08/10 15:20:59]  --------------------------------------------------------------------------------
[08/10 15:20:59]  Iteration: 64 (0 solution, 63 counterexamples)
[08/10 15:21:07]  Generator returned sat in 6.519521 secs.
[08/10 15:21:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:21:08]  Improved gap from 967/20 to 100
[08/10 15:21:09]  Improved number of small numbers from 68 to 89 out of a max of 114
[08/10 15:21:09]  Verifer returned sat in 1.171396 secs.
[08/10 15:21:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -6673.098877   -6773.298828 -1733.721924 -6673.098877    0.099854 -6773.298828    0.00000  100.199951      100.199922     2.0     -6773.298828            -1             -1   False
1   -6673.098877   -6673.298828 -1733.721924 -6673.098877    0.100000 -6673.298828    0.00000    0.199951        0.199922     2.0     -6773.298828         False          False   False
2   -6673.098877   -6673.298799 -1733.721924 -6673.098877    0.100098 -6673.298799    0.00000    0.199922      -99.800078     3.0     -6773.298828         False          False   False
3   -6469.698799   -6473.298799 -1733.721924 -6469.698799  203.600000 -6473.298799    3.40000    0.200000        0.200000     1.0     -6773.298828          True           True   False
4   -6369.598799   -6373.298799 -1733.721924 -6369.598799  100.300000 -6373.298799    3.50000    0.200000        0.200000     1.0     -6773.298828         False          False    True
5   -6321.148799   -6372.998799 -1733.721924 -6321.148799   48.650000 -6372.998799    3.50000   48.350000      -51.350000     1.0     -6773.298828         False          False    True
6   -5895.723799   -6173.298799 -1733.721924 -5895.723799  473.775000 -6173.298799  277.37500    0.200000        0.200000     1.0     -6773.298828         False          False    True
7   -5660.536299   -6073.298799 -1733.721924 -5660.536299  235.387500 -6073.298799  412.56250    0.200000        0.200000     1.0     -6773.298828         False          False    True
8   -5544.542549   -6073.298584 -1733.721924 -5544.542549  116.193750 -6073.298584  428.55625  100.199785        0.200000     2.0     -6773.298828         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:21:09]  --------------------------------------------------------------------------------
[08/10 15:21:09]  Iteration: 65 (0 solution, 64 counterexamples)
[08/10 15:21:42]  Generator returned sat in 30.787012 secs.
[08/10 15:21:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:21:44]  Improved gap from 0 to 3.125
[08/10 15:21:45]  Improved number of small numbers from 61 to 68 out of a max of 114
[08/10 15:21:45]  Verifer returned sat in 2.556348 secs.
[08/10 15:21:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6276.039795   -6279.542161 -2227.478760 -6276.039795    6.243408 -6279.542161     3.5000   0.002367        0.002168     9.0     -6279.542161            -1             -1     -1
1   -6269.801328   -6279.537161 -2133.724365 -6269.801328    6.240833 -6279.537161     3.5000   6.235833       -0.004971     1.0     -6273.301328         False           True  False
2   -6269.796328   -6273.296328 -2036.849395 -6269.796328    6.240833 -6273.296328     3.5000   0.000000       -3.125000     1.0     -6273.301328         False          False  False
3   -6244.788828   -6270.171328 -1958.731895 -6244.788828   25.007500 -6270.171328     3.5000  21.882500        0.000000     1.0     -6273.301328         False          False  False
4   -6244.788828   -6248.288828 -1861.856895 -6244.788828   14.056250 -6248.288828     3.5000   0.000000       -3.125000     2.0     -6273.301328         False          False  False
5   -6197.916328   -6245.163828 -1805.604395 -6197.916328   46.872500 -6245.163828     3.5000  43.747500        0.000000     1.0     -6273.301328         False          False  False
6   -6197.916328   -6201.416328 -1708.729395 -6197.916328   42.198750 -6201.416328     3.5000   0.000000       -3.125000     2.0     -6273.301328         False          False  False
7   -6094.783828   -6098.299072 -1708.729395 -6094.783828  103.132500 -6098.299072     3.5025   0.012744        0.005000     1.0     -6273.301328         False          False  False
8   -6094.783828   -6098.291260 -1708.729248 -6094.783828    0.010000 -6098.291260     3.5025   0.004932      -99.994854     2.0     -6273.301328         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/200.[0m
[08/10 15:21:45]  --------------------------------------------------------------------------------
[08/10 15:21:45]  Iteration: 66 (0 solution, 65 counterexamples)
[08/10 15:21:54]  Generator returned sat in 6.570003 secs.
[08/10 15:21:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:21:58]  Improved gap from 0 to 23.4375
[08/10 15:21:59]  Improved number of small numbers from 63 to 74 out of a max of 114
[08/10 15:21:59]  Verifer returned sat in 5.179820 secs.
[08/10 15:21:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -5334.584961   -5338.087578 -2044.178223 -5334.584961  107.031006 -5338.087578     3.5000    0.002617        0.002539     2.0     -5338.087578            -1             -1   False
1   -5227.558828   -5254.002686 -2044.178223 -5227.558828  107.028750 -5254.002686     3.5000   22.943857        7.028672     1.0     -5231.058828         False          False   False
2   -5143.473877   -5231.056328 -2035.291992 -5143.473877  107.028809 -5231.056328     3.5000   84.082451       -0.000146     1.0     -5231.058828         False          False   False
3   -5120.033828   -5146.971328 -1958.731895 -5120.033828  107.522500 -5146.971328     3.5000   23.437500        0.000000     1.0     -5231.058828         False          False   False
4   -4896.593828   -5023.533828 -1958.731895 -4896.593828  246.877500 -5023.533828     3.5025  123.437500      123.437500     1.0     -5231.058828         False          False   False
5   -4896.593828   -4923.536377 -1958.731895 -4896.593828    0.010000 -4923.536377     3.5025   23.440049       23.437500     2.0     -5231.058828         False          False    True
6   -4896.593828   -4923.533828 -1882.169395 -4896.593828    0.010000 -4923.533828     3.5025   23.437500        0.000000     3.0     -5231.058828         False          False    True
7   -4896.593828   -4900.096328 -1807.611816 -4896.593828    0.010000 -4900.096328     3.5025    0.000000      -25.442422     4.0     -5231.058828         False          False    True
8   -4771.151328   -4874.653809 -1807.611816 -4771.151328  125.442500 -4874.653809     3.5025   99.999980        0.000078     1.0     -4774.653828          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/10 15:22:00]  --------------------------------------------------------------------------------
[08/10 15:22:00]  Iteration: 67 (0 solution, 66 counterexamples)
[08/10 15:22:09]  Generator returned sat in 6.776046 secs.
[08/10 15:22:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:10]  Improved gap from 0 to 23.4375
[08/10 15:22:11]  Improved number of small numbers from 45 to 49 out of a max of 114
[08/10 15:22:11]  Verifer returned sat in 2.074262 secs.
[08/10 15:22:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5744.924316   -6048.421143 -1958.731895 -5744.924316  107.031006 -6048.421143    3.499756  299.997070      199.997256     9.0     -6048.421143            -1             -1     -1
1   -5744.924316   -5848.421328 -1958.731895 -5744.924316  299.994873 -5848.421328    3.499756   99.997256       99.997256     2.0     -6048.421143         False           True  False
2   -5544.929072   -5748.421328 -1958.731895 -5544.929072  299.992500 -5748.421328  103.492256  100.000000      100.000000     1.0     -5648.421328         False          False  False
3   -5344.939072   -5674.478828 -1958.731895 -5344.939072  299.990000 -5674.478828  203.482256  126.057500      100.000000     2.0     -5548.421328         False          False   True
4   -5321.501572   -5548.421328 -1958.731895 -5321.501572  149.495000 -5548.421328  203.482256   23.437500       23.437500     2.0     -5548.421328         False          False   True
5   -5321.501572   -5548.421328 -1882.169395 -5321.501572    0.010000 -5548.421328  203.482256   23.437500        0.000000     2.0     -5548.421328         False          False   True
6   -5321.501572   -5524.983828 -1805.606895 -5321.501572    0.010000 -5524.983828  203.482256    0.000000      -23.437500     3.0     -5548.421328         False          False   True
7   -5024.511572   -5401.546328 -1805.606895 -5024.511572  296.990000 -5401.546328  277.034756  100.000000      100.000000     1.0     -5301.546328          True           True  False
8   -4976.516572   -5398.423828 -1805.606895 -4976.516572  147.995000 -5398.423828  277.034756  144.872500       47.995000     2.0     -5301.546328         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=100.[0m
[08/10 15:22:12]  --------------------------------------------------------------------------------
[08/10 15:22:12]  Iteration: 68 (0 solution, 67 counterexamples)
[08/10 15:22:31]  Generator returned sat in 17.028548 secs.
[08/10 15:22:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:32]  Improved gap from 3/3400 to 100
[08/10 15:22:33]  Improved number of small numbers from 59 to 71 out of a max of 114
[08/10 15:22:33]  Verifer returned sat in 1.778284 secs.
[08/10 15:22:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -5711.522217   -5711.622406 -2195.530817 -5711.522217  299.999756 -5711.622406       0.05    0.050189        0.050189     2.0     -5711.622406            -1             -1     -1
1   -5411.622406   -5711.522217 -2195.530817 -5411.622406  299.950000 -5711.522217       0.05  299.849811      199.950000     1.0     -5411.672406         False          False   True
2   -5411.622406   -5611.622406 -2195.530817 -5411.622406  266.683350 -5611.622406       0.05  199.950000       99.950000     2.0     -5411.672406         False          False   True
3   -5344.939072   -5411.622559 -2195.530817 -5344.939072  266.633333 -5411.622559       0.05   66.633486       66.633333     1.0     -5344.989072         False          False   True
4   -5011.622559   -5344.939072 -2195.530817 -5011.622559  399.950000 -5344.939072       0.05  333.266514      299.949847     1.0     -5344.989072         False          False   True
5   -4744.964072   -5211.622406 -2195.530817 -4744.964072  599.925000 -5211.622406       0.05  466.608333      466.608333     2.0     -5344.989072         False          False   True
6   -4311.684906   -5111.834717 -2195.530817 -4311.684906  899.887500 -5111.834717       0.10  800.049811      799.837500     3.0     -5344.989072         False          False   True
7   -4311.684906   -5011.622406 -2195.530817 -4311.684906  449.443750 -5011.622406       0.10  699.837500      699.837500     3.0     -4311.784906          True           True   True
8   -4311.684906   -4911.622559 -2195.530817 -4311.684906  499.475000 -4911.622559       0.10  599.837653      599.837500     4.0     -4311.784906         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=63987/80.[0m
[08/10 15:22:33]  --------------------------------------------------------------------------------
[08/10 15:22:33]  Iteration: 69 (0 solution, 68 counterexamples)
[08/10 15:22:37]  Generator returned sat in 1.921683 secs.
[08/10 15:22:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:39]  Improved gap from 0 to 48.4375
[08/10 15:22:39]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:22:39]  Verifer returned sat in 1.853341 secs.
[08/10 15:22:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -4656.054932   -4804.442139 -2151.290771 -4656.054932    0.099854 -4804.442139   0.050049  148.337158      100.199951     3.0     -4804.442139            -1             -1     -1
1   -4655.954834   -4756.304688 -2151.290771 -4655.954834  148.437256 -4756.304688   0.149902  100.199951        0.200195     2.0     -4804.442139         False           True  False
2   -4607.717285   -4656.304688 -2099.728516 -4607.717285  148.437500 -4656.304688   0.149902   48.437500        0.000000     3.0     -4804.442139         False          False   True
3   -4441.454590   -4507.867188 -2099.728516 -4441.454590  214.700195 -4507.867188  66.212402    0.200195        0.200195     1.0     -4804.442139          True           True  False
4   -4334.804688   -4412.154785 -2099.728516 -4334.804688  106.850098 -4412.154785  72.862305    4.487793        0.200195     1.0     -4804.442139         False          False   True
5   -4286.367432   -4407.567383 -2048.465820 -4286.367432   52.925049 -4407.567383  72.862305   48.337646       -0.099854     1.0     -4804.442139         False          False   True
6   -4279.780029   -4359.129883 -1996.903320 -4279.780029   54.925049 -4359.129883  72.862305    6.487549      -41.949951     1.0     -4804.442139         False          False   True
7   -4229.342529   -4310.692383 -1945.340820 -4229.342529   56.925049 -4310.692383  72.862305    8.487549      -39.949951     1.0     -4804.442139         False          False   True
8   -4178.905029   -4262.254883 -1893.778320 -4178.905029   58.925049 -4262.254883  72.862305   10.487549      -37.949951     1.0     -4804.442139         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=205/1024.[0m
[08/10 15:22:40]  --------------------------------------------------------------------------------
[08/10 15:22:40]  Iteration: 70 (0 solution, 69 counterexamples)
[08/10 15:22:45]  Generator returned sat in 3.321196 secs.
[08/10 15:22:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:22:46]  Improved gap from 0 to 100
[08/10 15:22:47]  Improved number of small numbers from 57 to 84 out of a max of 114
[08/10 15:22:47]  Verifer returned sat in 1.311982 secs.
[08/10 15:22:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4589.738281   -4589.788086 -2116.580782 -4589.738281  100.100098 -4589.788086       0.00    0.049805       -0.050114     1.0     -4589.788086            -1             -1    True
1   -4489.738037   -4589.687988 -2116.580782 -4489.738037  100.050049 -4589.687988       0.00   99.949951       -0.049870     1.0     -4489.738037         False          False    True
2   -4368.501465   -4489.687988 -2116.580782 -4368.501465  221.186523 -4489.687988       0.00  121.186523       21.186702     1.0     -4489.738037         False          False    True
3   -4368.501465   -4389.688167 -2116.580782 -4368.501465  121.136626 -4389.688167       0.00   21.186702      -78.813298     2.0     -4368.501465         False          False    True
4   -4209.483229   -4289.688167 -2116.580782 -4209.483229  180.204938 -4289.688167       0.00   80.204938      -19.795062     1.0     -4368.501465         False          False    True
5   -4020.880760   -4189.688167 -2116.580782 -4020.880760  268.807407 -4189.688167       0.00  168.807407       68.807407     1.0     -4368.501465         False          False    True
6   -3787.977056   -4020.830760 -2116.580782 -3787.977056  401.711111 -4020.830760       0.00  232.853704      201.711111     1.0     -4368.501465         False          False    True
7   -3419.764093   -3889.688167 -2116.580782 -3419.764093  601.066667 -3889.688167       0.00  469.924074      469.924074     2.0     -4368.501465         False          False    True
8   -2989.588167   -3789.688232 -2116.580782 -2989.588167  900.100000 -3789.688232       0.05  800.050065      800.050000     3.0     -4368.501465         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=16001/20.[0m
[08/10 15:22:47]  --------------------------------------------------------------------------------
[08/10 15:22:47]  Iteration: 71 (0 solution, 70 counterexamples)
[08/10 15:22:59]  Generator returned sat in 9.344769 secs.
[08/10 15:22:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:00]  Improved gap from 0 to 100
[08/10 15:23:00]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:23:00]  Verifer returned sat in 1.005844 secs.
[08/10 15:23:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -4589.729980   -4689.688232 -2016.580811 -4589.729980    0.041504 -4689.688232    0.000000   99.958252       99.958008     5.0     -4689.688232            -1             -1     -1
1   -4289.729980   -4589.688232 -2016.580811 -4289.729980  399.958252 -4589.688232    0.000000  299.958252      299.958008     1.0     -4689.688232         False           True  False
2   -4189.729736   -4491.396484 -2016.580811 -4189.729736  399.958496 -4491.396484    0.000000  301.666748      299.958252     2.0     -4689.688232         False          False  False
3   -4089.646484   -4389.687988 -2016.580811 -4089.646484  401.750000 -4389.687988    0.041504  300.000000      300.000000     3.0     -4689.688232         False          False  False
4   -3988.896484   -4389.479736 -2016.580811 -3988.896484  400.750000 -4389.479736    0.791504  399.791748      300.000000     4.0     -4689.688232         False          False   True
5   -3988.896484   -4189.729736 -2016.580811 -3988.896484  399.750000 -4189.729736    0.791504  200.041748      200.000000     4.0     -3989.687988          True           True   True
6   -3686.896484   -4089.687988 -2016.580811 -3686.896484  502.041748 -4089.687988  102.791504  300.000000      300.000000     4.0     -3989.687988         False           True  False
7   -3485.854736   -4089.687988 -2016.580811 -3485.854736  501.041748 -4089.687988  203.833252  400.000000      300.000000     4.0     -3989.687988         False           True   True
8   -3385.812988   -3889.687988 -2016.580811 -3385.812988  500.041748 -3889.687988  203.875000  300.000000      300.000000     3.0     -3989.687988         False           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=300.[0m
[08/10 15:23:01]  --------------------------------------------------------------------------------
[08/10 15:23:01]  Iteration: 72 (0 solution, 71 counterexamples)
[08/10 15:23:06]  Generator returned sat in 2.718003 secs.
[08/10 15:23:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:06]  Improved gap from 0 to 23.4375
[08/10 15:23:06]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:23:06]  Verifer returned sat in 0.512326 secs.
[08/10 15:23:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3315.997314   -3339.435059 -3366.833740 -3315.997314    0.001221 -3339.435059    0.000000   23.437744       23.437744     7.0     -3339.435059            -1             -1     -1
1   -3315.997314   -3339.434814 -3290.271484 -3315.997314    0.001465 -3339.434814    0.000000   23.437500        0.000000     2.0     -3339.435059         False           True  False
2   -2989.434814   -3315.996338 -3290.271484 -2989.434814  350.000000 -3315.996338    0.001221  326.560303      226.561279     1.0     -3339.435059         False          False  False
3   -2989.434814   -3215.997314 -3290.271484 -2989.434814    0.001465 -3215.997314    0.001221  226.561279      126.561279     2.0     -2989.436035         False          False   True
4   -2989.434814   -3015.997559 -3290.271484 -2989.434814    0.010000 -3015.997559    0.001221   26.561523       26.561279     3.0     -2989.436035         False          False   True
5   -2989.434814   -3012.873779 -3216.832764 -2989.434814    0.010000 -3012.873779    0.001221   23.437744        0.000000     4.0     -2989.436035         False          False   True
6   -2989.434814   -2989.436035 -3140.270264 -2989.434814    0.010000 -2989.436035    0.001221    0.000000      -23.437500     5.0     -2989.436035         False          False   True
7   -2536.812256   -2965.998535 -3140.270264 -2536.812256  452.622559 -2965.998535  102.625000  326.561279      226.561279     1.0     -2989.436035         False           True  False
8   -2536.812256   -2865.998535 -3140.270264 -2536.812256    0.010000 -2865.998535  102.625000  226.561279      126.561279     2.0     -2989.436035         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=927995/4096.[0m
[08/10 15:23:07]  --------------------------------------------------------------------------------
[08/10 15:23:07]  Iteration: 73 (0 solution, 72 counterexamples)
[08/10 15:23:19]  Generator returned sat in 10.148863 secs.
[08/10 15:23:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:20]  Improved gap from 3971/409600 to 12.5
[08/10 15:23:20]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:23:20]  Verifer returned sat in 0.979916 secs.
[08/10 15:23:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2170.482422   -2357.882080 -3290.271484 -2170.482422   12.500000 -2357.882080        0.0  187.399658       87.399658     1.0     -2357.882080            -1             -1   False
1   -1920.482178   -2170.382080 -3290.271484 -1920.482178  437.399902 -2170.382080        0.0  249.899902      237.399902     1.0     -2357.882080         False          False   False
2   -1733.082275   -2148.182129 -3290.271484 -1733.082275  437.299805 -2148.182129        0.0  415.099854      324.799805     2.0     -1733.082275         False          False   False
3   -1733.082275   -1957.882324 -3290.271484 -1733.082275  415.000000 -1957.882324        0.0  224.800049      224.799805     3.0     -1733.082275         False          False   False
4   -1733.082275   -1857.882080 -3290.271484 -1733.082275  207.000000 -1857.882080        0.0  124.799805      124.799805     3.0     -1733.082275         False          False   False
5   -1733.082275   -1783.982178 -3290.271484 -1733.082275  103.000000 -1783.982178        0.0   50.899902       24.799805     4.0     -1733.082275         False          False   False
6   -1732.982178   -1732.982178 -3227.671387 -1732.982178   51.000000 -1732.982178        0.0    0.000000      -12.500000     1.0     -1733.082275         False          False   False
7   -1707.982178   -1720.482178 -3140.171387 -1707.982178   25.000000 -1720.482178        0.0   12.500000        0.000000     1.0     -1733.082275         False          False   False
8   -1707.982178   -1707.982178 -3140.171387 -1707.982178   12.000000 -1707.982178        0.0    0.000000     -100.000000     2.0     -1733.082275         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3249/10.[0m
[08/10 15:23:21]  --------------------------------------------------------------------------------
[08/10 15:23:21]  Iteration: 74 (0 solution, 73 counterexamples)
[08/10 15:23:31]  Generator returned sat in 8.157360 secs.
[08/10 15:23:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:32]  Improved gap from 1/600 to 1.5625
[08/10 15:23:32]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 15:23:32]  Verifer returned sat in 0.461436 secs.
[08/10 15:23:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2057.883545   -2157.882080 -3390.271729 -2057.883545  202.004883 -2157.882080   0.000000   99.998535       99.998535     2.0     -2157.882080            -1             -1    True
1   -1955.877197   -2057.882080 -3390.271729 -1955.877197  202.004883 -2057.882080   0.003662  102.001221      102.001221     1.0     -2157.882080         False          False    True
2   -1855.874512   -1957.882324 -3390.271729 -1855.874512  202.003906 -1957.882324   0.006348  102.001465      102.001221     2.0     -1855.880859         False          False    True
3   -1755.873535   -1857.882080 -3390.271729 -1755.873535  202.002441 -1857.882080   0.007324  102.001221      102.001221     2.0     -1755.880859         False          False    True
4   -1755.873535   -1857.882080 -3390.271729 -1755.873535    2.000000 -1857.882080   0.007324  102.001221        2.001221     2.0     -1755.880859         False          False    True
5   -1755.873535   -1757.882080 -3292.272949 -1755.873535    0.010000 -1757.882080   0.007324    2.001221        0.000000     3.0     -1755.880859         False          False    True
6   -1755.873535   -1755.880859 -3194.271729 -1755.873535    2.000000 -1755.880859   0.007324    0.000000       -1.998779     4.0     -1755.880859         False           True   False
7   -1753.873535   -1753.882080 -3095.834229 -1753.873535    2.000000 -1753.882080   0.007324    0.001221       -1.561279     1.0     -1755.880859         False           True   False
8   -1751.874756   -1752.319580 -3095.834229 -1751.874756    2.000000 -1752.319580   0.007324    0.437500      -99.562500     1.0     -1755.880859         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=417797/4096.[0m
[08/10 15:23:33]  --------------------------------------------------------------------------------
[08/10 15:23:33]  Iteration: 75 (0 solution, 74 counterexamples)
[08/10 15:23:37]  Generator returned sat in 1.901634 secs.
[08/10 15:23:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:38]  Improved gap from 895/2048 to 0
[08/10 15:23:38]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 15:23:38]  Verifer returned sat in 0.730666 secs.
[08/10 15:23:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2150.649658   -2449.749512 -3493.784180 -2150.649658  199.099854 -2449.749512        0.0  299.099854      299.099854     5.0     -2449.749512            -1             -1     -1
1   -2150.649658   -2349.749756 -3493.784180 -2150.649658  199.099854 -2349.749756        0.0  199.100098      199.099854     3.0     -2449.749512         False           True  False
2   -2150.649658   -2349.749512 -3493.784180 -2150.649658  199.100098 -2349.749512        0.0  199.099854       99.099854     3.0     -2449.749512          True           True  False
3   -2149.699463   -2150.649658 -3493.784180 -2149.699463  200.050049 -2150.649658        0.0    0.950195        0.050049     4.0     -2449.749512          True           True  False
4   -2149.649658   -2149.749512 -3393.884277 -2149.649658    1.000000 -2149.749512        0.0    0.099854       -0.000244     2.0     -2149.649658          True           True  False
5   -2148.749512   -2149.649414 -3294.784424 -2148.749512    1.000000 -2149.649414        0.0    0.899902       -0.000244     1.0     -2149.649658         False          False  False
6   -2148.649414   -2148.699707 -3194.934326 -2148.649414    1.000000 -2148.699707        0.0    0.050293       -0.050049     1.0     -2149.649658         False          False  False
7   -2147.699707   -2148.599365 -3095.834229 -2147.699707    1.000000 -2148.599365        0.0    0.899658       -0.000244     1.0     -2149.649658         False          False  False
8   -2147.599365   -2147.599609 -2996.034180 -2147.599365    1.000000 -2147.599609        0.0    0.000244       -0.099854     1.0     -2149.649658         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=407859/2048.[0m
[08/10 15:23:38]  --------------------------------------------------------------------------------
[08/10 15:23:38]  Iteration: 76 (0 solution, 75 counterexamples)
[08/10 15:23:52]  Generator returned sat in 10.924132 secs.
[08/10 15:23:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:23:52]  Improved gap from 0 to 48.4375
[08/10 15:23:53]  Improved number of small numbers from 70 to 79 out of a max of 114
[08/10 15:23:53]  Verifer returned sat in 1.282895 secs.
[08/10 15:23:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2250.649902   -2450.650908 -3592.882568 -2250.649902    0.001465 -2450.650908    0.00125  199.999756       99.999971     1.0     -2450.650908            -1             -1     -1
1   -2250.649658   -2350.648438 -3592.882568 -2250.649658  200.000000 -2350.648438    0.00125   99.997529        0.000215     2.0     -2450.650908         False          False   True
2   -2150.648408   -2205.323408 -3592.882568 -2150.648408  199.998779 -2205.323408    0.00125   54.673750        0.001465     1.0     -2150.649658          True           True  False
3   -2150.648408   -2150.650908 -3541.320283 -2150.648408    0.001465 -2150.650908    0.00125    0.001250      -48.436250     2.0     -2150.649658         False          False  False
4   -2000.649658   -2002.219658 -3541.320283 -2000.649658  150.000000 -2002.219658    1.56125    0.008750        0.002500     1.0     -2150.649658         False           True  False
5   -2000.648408   -2002.213408 -3489.757783 -2000.648408    0.010000 -2002.213408    1.56125    0.003750      -48.433750     2.0     -2150.649658         False          False   True
6   -1899.097158   -1953.775908 -3442.875283 -1899.097158  101.555000 -1953.775908    1.56125   53.117500        0.000000     1.0     -1900.658408          True           True  False
7   -1853.777158   -1900.658408 -3391.312988 -1853.777158   98.437500 -1900.658408    1.56125   45.320000       -3.117705     2.0     -1900.658408         False          False  False
8   -1848.316533   -1852.220703 -3391.312744 -1848.316533   50.780625 -1852.220703    1.56125    2.342920      -97.656836     1.0     -1900.658408         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 15:23:54]  --------------------------------------------------------------------------------
[08/10 15:23:54]  Iteration: 77 (0 solution, 76 counterexamples)
[08/10 15:24:09]  Generator returned sat in 13.064368 secs.
[08/10 15:24:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:10]  Improved gap from 1/1600 to 23.4375
[08/10 15:24:11]  Improved number of small numbers from 70 to 76 out of a max of 114
[08/10 15:24:11]  Verifer returned sat in 1.884892 secs.
[08/10 15:24:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2250.649658   -2350.655908 -3592.881533 -2250.649658    0.001465 -2350.655908    0.001250  100.005000       100.00125     1.0     -2350.655908            -1             -1     -1
1   -2250.649658   -2250.652344 -3592.881533 -2250.649658  100.003906 -2250.652344    0.001250    0.001436         0.00125     2.0     -2350.655908         False          False   True
2   -2150.648408   -2150.652158 -3592.881533 -2150.648408  100.002686 -2150.652158    0.001250    0.002500         0.00250     1.0     -2150.649658          True           True  False
3   -2150.648408   -2150.652158 -3592.881533 -2150.648408    0.001465 -2150.652158    0.001250    0.002500       -99.99750     1.0     -2150.649658         False          False  False
4   -1852.645283   -1953.774658 -3592.881533 -1852.645283  298.005625 -1953.774658   98.004375    3.125000         0.00250     1.0     -2150.649658         False          False  False
5   -1852.645283   -1950.650908 -3516.320283 -1852.645283    0.010000 -1950.650908   98.004375    0.001250       -23.43625     2.0     -2150.649658         False          False   True
6   -1554.644658   -1827.221924 -3516.320283 -1554.644658  298.001875 -1827.221924  272.566250    0.011016         0.00250     1.0     -1827.210908          True           True  False
7   -1554.644658   -1827.213408 -3439.757783 -1554.644658    0.010000 -1827.213408  272.566250    0.002500       -23.43500     2.0     -1827.210908         False          False   True
8   -1366.805283   -1803.775879 -3439.757783 -1366.805283  187.841875 -1803.775879  336.968125  100.002471         0.00250     1.0     -1827.210908         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/400.[0m
[08/10 15:24:12]  --------------------------------------------------------------------------------
[08/10 15:24:12]  Iteration: 78 (0 solution, 77 counterexamples)
[08/10 15:24:24]  Generator returned sat in 10.176735 secs.
[08/10 15:24:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:25]  Improved gap from 0 to 46.875
[08/10 15:24:25]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:24:25]  Verifer returned sat in 0.670922 secs.
[08/10 15:24:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2102.694824   -2402.669434 -3618.545410 -2102.694824  298.100098 -2402.669434        0.0  299.974609      199.974609     9.0     -2402.669434            -1             -1     -1
1   -2102.694824   -2202.669678 -3618.545410 -2102.694824  298.074951 -2202.669678        0.0   99.974854       99.974609     2.0     -2102.694824         False           True  False
2   -1904.619873   -2102.669434 -3618.545410 -1904.619873  298.049805 -2102.669434        0.0  198.049561      198.049561     1.0     -1904.619873         False          False  False
3   -1904.619873   -2002.669434 -3618.545410 -1904.619873   56.875000 -2002.669434        0.0   98.049561       98.049561     2.0     -1904.619873         False          False  False
4   -1904.619873   -1904.644531 -3618.545410 -1904.619873   54.875000 -1904.644531        0.0    0.024658       -1.950439     3.0     -1904.619873         False          False  False
5   -1851.769531   -1902.669434 -3569.445312 -1851.769531   52.875000 -1902.669434        0.0   50.899902        0.000000     1.0     -1904.619873         False          False  False
6   -1851.769531   -1851.769531 -3516.320312 -1851.769531   50.875000 -1851.769531        0.0    0.000000      -46.875000     2.0     -1904.619873         False          False  False
7   -1802.894531   -1804.894531 -3463.195312 -1802.894531   48.875000 -1804.894531        0.0    2.000000      -44.875000     1.0     -1904.619873         False          False  False
8   -1758.019531   -1758.019531 -3463.195068 -1758.019531   46.875000 -1758.019531        0.0    0.000000      -99.999756     1.0     -1904.619873         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=202829/1024.[0m
[08/10 15:24:26]  --------------------------------------------------------------------------------
[08/10 15:24:26]  Iteration: 79 (0 solution, 78 counterexamples)
[08/10 15:24:33]  Generator returned sat in 4.456509 secs.
[08/10 15:24:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:34]  Improved gap from 1/100 to 12.5
[08/10 15:24:34]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 15:24:34]  Verifer returned sat in 1.527463 secs.
[08/10 15:24:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16220.527100  -16752.677002  10831.412188 -16220.527100    0.050049 -16752.677002   0.050049  532.099854      532.049883     9.0    -16752.677002            -1             -1     -1
1  -16220.526855  -16752.626953  10831.412188 -16220.526855  532.100098 -16752.626953   0.050049  532.050049      432.050127     5.0    -16752.677002         False           True   True
2  -16220.526855  -16652.626953  10831.412188 -16220.526855  432.050049 -16652.626953   0.050049  432.050049      332.050127     5.0    -16220.576904         False          False   True
3  -16220.526855  -16552.626953  10831.412188 -16220.526855  432.000000 -16552.626953   0.050049  332.050049      232.050127     6.0    -16220.576904         False          False   True
4  -16220.526855  -16352.627197  10831.412188 -16220.526855  216.000000 -16352.627197   0.050049  132.050293      132.050127     7.0    -16220.576904         False          False   True
5  -16220.526855  -16274.626953  10831.412188 -16220.526855  108.000000 -16274.626953   0.050049   54.050049       32.050127     8.0    -16220.576904         False          False   True
6  -16220.526855  -16233.026855  10899.312012 -16220.526855   54.000000 -16233.026855   0.050049   12.449951       -0.050049     9.0    -16220.576904         False          False   True
7  -16207.976807  -16220.526855  10986.812012 -16207.976807   25.000000 -16220.526855   0.050049   12.500000        0.000000     1.0    -16220.576904         False           True  False
8  -16207.976807  -16208.026855  11074.312012 -16207.976807   10.500000 -16208.026855   0.050049    0.000000      -12.500000     2.0    -16220.576904         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=884941/2048.[0m
[08/10 15:24:35]  --------------------------------------------------------------------------------
[08/10 15:24:35]  Iteration: 80 (0 solution, 79 counterexamples)
[08/10 15:24:49]  Generator returned sat in 11.324909 secs.
[08/10 15:24:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:49]  Improved gap from 0 to 23.4375
[08/10 15:24:50]  Improved number of small numbers from 64 to 110 out of a max of 114
[08/10 15:24:50]  Verifer returned sat in 1.358944 secs.
[08/10 15:24:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -16904.978516  -17104.978516  10831.412354 -16904.978516    0.001709 -17104.978516    0.001709  199.998291       99.998291     1.0    -17104.978516            -1             -1     -1
1  -16904.978516  -17004.978516  10831.412354 -16904.978516  199.996826 -17004.978516    0.001709   99.998291       -0.001709     2.0    -17104.978516         False          False   True
2  -16804.981689  -16904.978271  10831.417236 -16804.981689  199.995117 -16904.978271    0.001709   99.994873        0.000000     1.0    -16804.983398          True           True  False
3  -16704.983398  -16728.422607  10831.418945 -16704.983398  199.993164 -16728.422607    0.001709   23.437500        0.000000     1.0    -16704.985107         False          False  False
4  -16353.364990  -16604.993652  10831.418945 -16353.364990  375.055908 -16604.993652  251.616699    0.011963        0.003418     1.0    -16704.985107         False          False  False
5  -16353.364990  -16604.981689  10906.493164 -16353.364990    0.010000 -16604.981689  251.616699    0.000000      -24.922363     2.0    -16704.985107         False          False   True
6  -16054.868408  -16480.064307  10906.493164 -16054.868408  298.496582 -16480.064307  425.187500    0.008398        0.003418     1.0    -16480.055908          True           True  False
7  -16054.866807  -16480.056152  10983.052187 -16054.866807    0.010000 -16480.056152  425.187500    0.001846      -23.435957     2.0    -16480.055908         False          False   True
8  -15931.431152  -16454.995117  10983.052187 -15931.431152  123.437500 -16454.995117  425.187500   98.376465       -0.000303     1.0    -16480.055908         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=7/2048.[0m
[08/10 15:24:51]  --------------------------------------------------------------------------------
[08/10 15:24:51]  Iteration: 81 (0 solution, 80 counterexamples)
[08/10 15:24:55]  Generator returned sat in 1.799140 secs.
[08/10 15:24:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:24:55]  Improved gap from 7/32768 to 100
[08/10 15:24:56]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:24:56]  Verifer returned sat in 0.459262 secs.
[08/10 15:24:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -17339.205566  -17539.255127  11265.688965 -17339.205566    0.049805 -17539.255127    0.049805  199.999756       99.999756     9.0    -17539.255127            -1             -1     -1
1  -17339.205566  -17439.005127  11265.688965 -17339.205566  199.950195 -17439.005127    0.049805   99.749756       -0.000244     3.0    -17539.255127         False           True   True
2  -17239.055176  -17338.955566  11265.688965 -17239.055176  199.900146 -17338.955566    0.100098   99.800293        0.099854     1.0    -17239.155273          True           True  False
3  -17139.005371  -17139.255127  11265.688965 -17139.005371  199.850098 -17139.255127    0.149902    0.099854        0.099854     1.0    -17139.155273         False          False   True
4  -16941.105225  -17040.705322  11265.688965 -16941.105225  198.000000 -17040.705322   98.050049    1.550049        0.099854     1.0    -17139.155273         False          False   True
5  -16745.505371  -17004.388672  11265.688965 -16745.505371  197.149902 -17004.388672  193.649902   65.233398        0.099854     1.0    -17139.155273         False          False   True
6  -16645.455322  -16937.822021  11265.688965 -16645.455322  165.283447 -16937.822021  193.699951   98.666748        0.099854     1.0    -17139.155273         False          False   True
7  -16645.405518  -16839.155273  11265.688965 -16645.405518   98.716553 -16839.155273  193.699951    0.049805      -99.850342     2.0    -17139.155273         False          False   True
8  -16445.405273  -16739.255127  11265.688965 -16445.405273  200.050049 -16739.255127  193.750000  100.099854        0.099854     1.0    -16639.155273          True           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=409/4096.[0m
[08/10 15:24:56]  --------------------------------------------------------------------------------
[08/10 15:24:56]  Iteration: 82 (0 solution, 81 counterexamples)
[08/10 15:25:20]  Generator returned sat in 21.531350 secs.
[08/10 15:25:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:25:22]  Improved number of small numbers from 65 to 77 out of a max of 113
[08/10 15:25:22]  Verifer returned sat in 1.475747 secs.
[08/10 15:25:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -18487.505615  -18687.605469  12414.039404 -18487.505615  200.099854 -18687.605469     0.000000  200.099854      100.099951     9.0    -18687.605469            -1             -1     -1
1  -18487.505615  -18587.205566  12414.039404 -18487.505615  200.000000 -18587.205566     0.000000   99.699951        0.099951     5.0    -18487.505615         False           True  False
2  -18387.305566  -18487.505566  12414.039404 -18387.305566  199.900000 -18487.505566     0.100000  100.100000        0.200000     1.0    -18387.405566         False          False  False
3  -17657.005566  -18387.305566  12414.039404 -17657.005566  830.400000 -18387.305566   630.400000   99.900000        0.200000     1.0    -18387.405566         False          False   True
4  -17343.705566  -18187.605566  12414.039404 -17343.705566  413.200000 -18187.605566   843.700000    0.200000        0.200000     1.0    -18387.405566         False          False   True
5  -17139.305566  -18087.605566  12414.039404 -17139.305566  204.600000 -18087.605566   948.100000    0.200000        0.200000     1.0    -18387.405566         False          False   True
6  -17039.205566  -17987.605566  12414.039404 -17039.205566  100.300000 -17987.605566   948.200000    0.200000        0.200000     1.0    -18387.405566         False          False   True
7  -16991.255566  -17939.555566  12414.039551 -16991.255566   48.150000 -17939.555566   948.200000    0.100000      -51.849854     1.0    -18387.405566         False          False   True
8  -16495.255566  -17887.605713  12414.039551 -16495.255566  496.100000 -17887.605713  1292.150146  100.200000        0.200000     1.0    -18387.405566         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:25:23]  --------------------------------------------------------------------------------
[08/10 15:25:23]  Iteration: 83 (0 solution, 82 counterexamples)
[08/10 15:25:39]  Generator returned sat in 14.189989 secs.
[08/10 15:25:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:25:40]  Improved gap from 1/2400 to 100
[08/10 15:25:40]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:25:40]  Verifer returned sat in 0.550365 secs.
[08/10 15:25:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -18686.205322  -18686.405518  12414.039307 -18686.205322    0.099854 -18686.405518    0.100098    0.100098      -98.899902     4.0    -18686.405518            -1             -1     -1
1  -18487.405273  -18586.305420  12414.039307 -18487.405273  198.900146 -18586.305420    0.100098   98.800049       -0.099854     1.0    -18686.405518         False           True   True
2  -18387.405273  -18487.405518  12414.039307 -18387.405273  198.800049 -18487.405518    0.100098   99.900146       -0.099854     1.0    -18387.505371         False          False   True
3  -18288.605225  -18387.405518  12414.039307 -18288.605225  198.700195 -18387.405518    0.100098   98.700195       -1.299805     1.0    -18288.705322         False          False   True
4  -18090.305420  -18235.605225  12414.039307 -18090.305420  297.000000 -18235.605225   96.899902   48.399902        0.200195     1.0    -18288.705322         False          False   True
5  -17990.205322  -18161.555420  12414.039307 -17990.205322  148.500000 -18161.555420   97.000000   74.350098        0.200195     1.0    -18288.705322         False          False   True
6  -17990.205322  -18087.305420  12414.039307 -17990.205322   74.250000 -18087.305420   97.000000    0.100098      -99.799805     2.0    -18288.705322         False          False   True
7  -17392.105225  -17987.405518  12414.039307 -17392.105225  598.200195 -17987.405518  495.100098  100.200195        0.200195     1.0    -17887.205322          True           True  False
8  -17193.205322  -17887.105225  12414.039307 -17193.205322  299.100098 -17887.105225  594.000000   99.899902        0.200195     1.0    -17887.205322         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/1024.[0m
[08/10 15:25:41]  --------------------------------------------------------------------------------
[08/10 15:25:41]  Iteration: 84 (0 solution, 83 counterexamples)
[08/10 15:25:55]  Generator returned sat in 11.391877 secs.
[08/10 15:25:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:00]  Improved gap from 1/1000 to 29.6875
[08/10 15:26:01]  Improved number of small numbers from 60 to 66 out of a max of 114
[08/10 15:26:01]  Verifer returned sat in 6.395854 secs.
[08/10 15:26:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -19906.105713  -20106.005518  13832.639307 -19906.105713    0.100000 -20106.005518    0.000000  199.899805       99.899805     5.0    -20106.005518            -1             -1     -1
1  -19905.705518  -19906.005518  13832.639307 -19905.705518  200.300000 -19906.005518    0.100000    0.200000        0.200000     1.0    -20106.005518         False           True  False
2  -19705.605518  -19806.005518  13832.639307 -19705.605518  200.300000 -19806.005518  100.200000    0.200000        0.200000     1.0    -20106.005518         False          False   True
3  -19656.690934  -19786.578434  13883.524723 -19656.690934   49.114583 -19786.578434  100.200000   29.687500        0.000000     1.0    -19756.890934         False          False   True
4  -19502.607601  -19656.890934  13883.524723 -19502.607601  183.770833 -19656.890934  154.083333    0.200000        0.200000     1.0    -19756.890934         False          False   True
5  -19412.922184  -19656.590934  13893.639307 -19412.922184   89.885417 -19656.590934  154.083333   89.585417        0.000000     1.0    -19756.890934         False          False   True
6  -19383.357601  -19567.005518  13963.951660 -19383.357601  119.150000 -19567.005518  154.083333   29.564583       -0.123063     2.0    -19756.890934         False          False   True
7  -19353.347184  -19537.317871  14034.064307 -19353.347184   59.575000 -19537.317871  154.083333   29.887354        0.000000     1.0    -19507.430518          True           True  False
8  -19353.347184  -19507.430518  14104.376709 -19353.347184   29.787500 -19507.430518  154.083333    0.000000      -29.687598     2.0    -19507.430518         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:26:02]  --------------------------------------------------------------------------------
[08/10 15:26:02]  Iteration: 85 (0 solution, 84 counterexamples)
[08/10 15:26:07]  Generator returned sat in 2.091429 secs.
[08/10 15:26:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:12]  Improved gap from 1785091/61440 to 29.6875
[08/10 15:26:13]  Improved number of small numbers from 61 to 66 out of a max of 114
[08/10 15:26:13]  Verifer returned sat in 6.308915 secs.
[08/10 15:26:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -20078.925537  -20278.825518  14334.776807 -20078.925537  200.1000 -20278.825518     0.0000  199.899980       99.899980     1.0    -20278.825518            -1             -1   False
1  -20078.725518  -20078.825518  14334.776807 -20078.725518  200.1000 -20078.825518     0.0000    0.100000        0.100000     1.0    -20278.825518         False          False   False
2  -19878.725518  -19983.963018  14334.776807 -19878.725518  200.1000 -19983.963018    83.1875   22.050000       16.912500     1.0    -20278.825518         False          False   False
3  -19848.938018  -19961.813018  14388.076807 -19848.938018   51.8375 -19961.813018    83.1875   29.687500        0.000000     1.0    -19932.125518         False          False    True
4  -19695.700518  -19832.125518  14388.076807 -19695.700518  182.9250 -19832.125518   119.5125   16.912500       16.912500     1.0    -19932.125518         False          False    True
5  -19623.150518  -19832.125518  14398.614307 -19623.150518   89.4625 -19832.125518   119.5125   89.462500        0.000000     1.0    -19932.125518         False          False    True
6  -19593.463018  -19742.663018  14468.926758 -19593.463018  119.1500 -19742.663018   119.5125   29.687500       -0.000049     2.0    -19932.125518         False          False    True
7  -19563.575518  -19712.975342  14539.039307 -19563.575518   59.5750 -19712.975342   119.5125   29.887324        0.000000     1.0    -19683.088018          True           True   False
8  -19563.575518  -19683.088018  14539.039307 -19563.575518   29.7875 -19683.088018   119.5125    0.000000     -100.000000     2.0    -19683.088018         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1353/80.[0m
[08/10 15:26:14]  --------------------------------------------------------------------------------
[08/10 15:26:14]  Iteration: 86 (0 solution, 85 counterexamples)
[08/10 15:26:18]  Generator returned sat in 2.024418 secs.
[08/10 15:26:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:24]  Improved gap from 0 to 29.6875
[08/10 15:26:25]  Improved number of small numbers from 80 to 85 out of a max of 114
[08/10 15:26:25]  Verifer returned sat in 6.072488 secs.
[08/10 15:26:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23602.238037  -23702.237842  17758.189014 -23602.238037  200.199951 -23702.237842     0.1000   99.899805       -0.100195     6.0    -23702.237842            -1             -1     -1
1  -23502.037842  -23602.237842  17758.189014 -23502.037842  200.100000 -23602.237842     0.1000  100.100000        0.100000     1.0    -23502.137842         False           True   True
2  -23402.037842  -23402.237842  17758.189014 -23402.037842  200.100000 -23402.237842     0.1000    0.100000        0.100000     1.0    -23502.137842         False          False   True
3  -23353.137842  -23379.787842  17806.051514 -23353.137842   49.000000 -23379.787842     0.1000   26.550000       -3.137500     1.0    -23353.237842         False          False   True
4  -23195.962842  -23250.100342  17806.051514 -23195.962842  183.725000 -23250.100342    53.9375    0.200000        0.200000     1.0    -23353.237842         False          False   True
5  -23106.300342  -23249.800342  17816.189014 -23106.300342   89.862500 -23249.800342    53.9375   89.562500        0.000000     1.0    -23353.237842         False          False   True
6  -23076.712842  -23160.237842  17886.501465 -23076.712842  119.150000 -23160.237842    53.9375   29.587500       -0.100049     2.0    -23353.237842         False          False   True
7  -23046.725342  -23130.550293  17956.614014 -23046.725342   59.575000 -23130.550293    53.9375   29.887451        0.000000     1.0    -23100.662842          True           True  False
8  -23046.725342  -23100.662842  17956.614014 -23046.725342   29.787500 -23100.662842    53.9375    0.000000     -100.000000     2.0    -23100.662842         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:26:25]  --------------------------------------------------------------------------------
[08/10 15:26:25]  Iteration: 87 (0 solution, 86 counterexamples)
[08/10 15:26:50]  Generator returned sat in 22.419712 secs.
[08/10 15:26:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:26:51]  Improved gap from 0 to 0
[08/10 15:26:52]  Improved number of small numbers from 65 to 75 out of a max of 114
[08/10 15:26:52]  Verifer returned sat in 1.335756 secs.
[08/10 15:26:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -23908.280762  -23908.281738  17758.189209 -23908.280762    0.001250 -23908.281738    0.00000   0.000977      -99.998975     3.0    -23908.281738            -1             -1     -1
1  -23708.280518  -23708.281787  17758.189209 -23708.280518  200.001221 -23708.281787    0.00000   0.001270        0.001270     1.0    -23908.281738         False           True  False
2  -23608.278037  -23608.281787  17758.189209 -23608.278037  100.003750 -23608.281787    0.00125   0.002500        0.002500     1.0    -23608.279287         False          False  False
3  -23457.293037  -23558.765537  17758.189209 -23457.293037  150.987500 -23558.765537   50.98625  50.486250        0.002500     1.0    -23608.279287         False          False   True
4  -23357.291787  -23508.278037  17758.189209 -23357.291787  150.487500 -23508.278037   50.98750  99.998750        0.002500     1.0    -23608.279287         False          False   True
5  -23307.303037  -23358.299287  17808.196777 -23307.303037  149.987500 -23358.299287   50.98750   0.008750       -0.001182     1.0    -23608.279287         False          False   True
6  -23307.301787  -23358.289287  17908.196709 -23307.301787    0.010000 -23358.289287   50.98750   0.000000        0.000000     1.0    -23608.279287         False          False   True
7  -23307.291787  -23358.289287  18008.186709 -23307.291787    0.010000 -23358.289287   50.98750   0.010000        0.000000     1.0    -23608.279287         False          False   True
8  -23307.291787  -23358.279287  18108.186523 -23307.291787    0.010000 -23358.279287   50.98750   0.000000       -0.000186     2.0    -23608.279287         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 15:26:53]  --------------------------------------------------------------------------------
[08/10 15:26:53]  Iteration: 88 (0 solution, 87 counterexamples)
[08/10 15:27:20]  Generator returned sat in 24.392572 secs.
[08/10 15:27:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:21]  Improved number of small numbers from 41 to 112 out of a max of 113
[08/10 15:27:21]  Verifer returned sat in 0.977528 secs.
[08/10 15:27:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -23771.626465  -23871.626221  17758.189209 -23771.626465    0.001250 -23871.626221    0.000000   99.999756       -0.000244     6.0    -23871.626221            -1             -1   False
1  -23671.625977  -23771.626221  17758.189209 -23671.625977  200.000244 -23771.626221    0.000000  100.000244        0.000244     1.0    -23871.626221         False          False   False
2  -23571.626221  -23661.294189  17758.189209 -23571.626221  200.000000 -23661.294189    0.000000   89.667969        0.000000     1.0    -23571.626221         False          False   False
3  -23457.293213  -23471.626221  17758.189209 -23457.293213  204.000977 -23471.626221   14.332764    0.000244        0.000244     1.0    -23571.626221         False          False   False
4  -23357.292969  -23471.625732  17758.189209 -23357.292969  100.000488 -23471.625732   14.333008   99.999756        0.000244     1.0    -23571.626221         False          False    True
5  -23357.292969  -23371.626221  17758.189209 -23357.292969   48.000244 -23371.626221   14.333008    0.000244      -99.999756     2.0    -23571.626221         False          False    True
6  -22921.291260  -23271.626221  17758.189209 -22921.291260  436.001953 -23271.626221  250.334717  100.000244        0.000244     1.0    -23571.626221         False          False    True
7  -22805.290527  -23071.626221  17758.189209 -22805.290527  216.000977 -23071.626221  266.335449    0.000244        0.000244     1.0    -23571.626221         False          False    True
8  -22699.290283  -23071.625977  17758.189209 -22699.290283  106.000488 -23071.625977  272.335693  100.000000        0.000244     2.0    -23571.626221         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/4096.[0m
[08/10 15:27:21]  --------------------------------------------------------------------------------
[08/10 15:27:21]  Iteration: 89 (0 solution, 88 counterexamples)
[08/10 15:27:36]  Generator returned sat in 11.701675 secs.
[08/10 15:27:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:37]  Verifer returned unsat in 0.828982 secs.
[08/10 15:27:37]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:37]  --------------------------------------------------------------------------------
[08/10 15:27:37]  Iteration: 90 (1 solution, 88 counterexamples)
[08/10 15:27:42]  Generator returned sat in 1.994788 secs.
[08/10 15:27:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:42]  Verifer returned unsat in 0.485664 secs.
[08/10 15:27:42]  Proved solution: 
[1m[92mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:42]  --------------------------------------------------------------------------------
[08/10 15:27:42]  Iteration: 91 (2 solution, 88 counterexamples)
[08/10 15:27:47]  Generator returned sat in 2.328285 secs.
[08/10 15:27:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:27:48]  Improved gap from 0 to 100
[08/10 15:27:48]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:27:48]  Verifer returned sat in 0.632980 secs.
[08/10 15:27:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -27638.906250  -28138.606201  22025.169189 -27638.906250   900.199951 -28138.606201     0.000000  499.699951      399.699951     3.0    -28138.606201            -1             -1    True
1  -27238.406250  -27938.606445  22025.169189 -27238.406250   900.199951 -27938.606445     0.100098  700.100098      700.099854     3.0    -28138.606201         False          False    True
2  -26334.006348  -27838.606201  22025.169189 -26334.006348  1604.500000 -27838.606201   804.500000  700.099854      700.099854     4.0    -28138.606201         False          False    True
3  -25429.706299  -27838.606201  22025.169189 -25429.706299  1604.399902 -27838.606201  1608.800049  800.099854      700.099854     4.0    -27038.506348          True           True    True
4  -25429.606201  -27638.806152  22025.169189 -25429.606201   800.199951 -27638.806152  1608.800049  600.399902      600.199951     4.0    -27038.506348         False           True    True
5  -25229.806152  -27538.806396  22025.169189 -25229.806152   800.199951 -27538.806396  1608.800049  700.200195      700.000000     5.0    -27038.506348         False           True   False
6  -25129.806396  -27438.806396  22025.169189 -25129.806396   800.199951 -27438.806396  1608.800049  700.199951      699.999756     6.0    -27038.506348         False           True   False
7  -25029.806396  -27338.606445  22025.169189 -25029.806396   800.199951 -27338.606445  1608.800049  700.000000      699.999756     7.0    -27038.506348         False           True   False
8  -24929.606445  -27338.606201  22025.169189 -24929.606445   800.199951 -27338.606201  1608.899902  800.099854      700.099854     8.0    -27038.506348         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2867609/4096.[0m
[08/10 15:27:49]  --------------------------------------------------------------------------------
[08/10 15:27:49]  Iteration: 92 (2 solution, 89 counterexamples)
[08/10 15:28:30]  Generator returned sat in 37.917733 secs.
[08/10 15:28:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:31]  Improved gap from 0 to 100
[08/10 15:28:31]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:28:31]  Verifer returned sat in 1.398713 secs.
[08/10 15:28:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -25763.646240  -25863.596191  19750.15918 -25763.646240     0.050049 -25863.596191        0.0    99.949951       -0.050049     2.0    -25863.596191            -1             -1    True
1  -25663.646240  -25763.596191  19750.15918 -25663.646240   199.949951 -25763.596191        0.0    99.949951       -0.050049     1.0    -25863.596191         False          False    True
2  -25563.696289  -25663.596191  19750.15918 -25563.696289   199.899902 -25663.596191        0.0    99.899902       -0.100098     1.0    -25563.696289         False          False    True
3  -25339.496094  -25478.696289  19750.15918 -25339.496094   324.100098 -25478.696289        0.0   139.200195      124.100098     1.0    -25563.696289         False          False    True
4  -24963.646240  -25363.596191  19750.15918 -24963.646240   515.050049 -25363.596191        0.0   399.949951      399.949951     2.0    -25563.696289         False          False    True
5  -24650.046143  -25271.596191  19750.15918 -24650.046143   713.550049 -25271.596191        0.0   621.550049      613.550049     2.0    -25563.696289         False          False    True
6  -24363.546143  -25163.596191  19750.15918 -24363.546143   908.050049 -25163.596191        0.0   800.050049      800.050049     3.0    -25563.696289         False          False    True
7  -24099.496094  -25163.596191  19750.15918 -24099.496094  1064.100098 -25163.596191        0.0  1064.100098      964.100098     3.0    -25563.696289         False          False    True
8  -24000.996094  -24963.596191  19750.15918 -24000.996094  1162.600098 -24963.596191        0.0   962.600098      962.600098     4.0    -25563.696289         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1974477/2048.[0m
[08/10 15:28:32]  --------------------------------------------------------------------------------
[08/10 15:28:32]  Iteration: 93 (2 solution, 90 counterexamples)
[08/10 15:28:52]  Generator returned sat in 17.712146 secs.
[08/10 15:28:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:00]  Improved gap from 0 to 3.125
[08/10 15:29:01]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 15:29:01]  Verifer returned sat in 8.258619 secs.
[08/10 15:29:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -24600.633789  -24721.333496  19784.796875 -24600.633789    0.100098 -24721.333496   0.000000  120.699707      100.000000     4.0    -24721.333496            -1             -1   False
1  -24600.533691  -24600.633789  19784.796875 -24600.533691  120.799805 -24600.633789   0.000000    0.100098        0.100098     2.0    -24721.333496         False          False   False
2  -24479.833740  -24500.733887  19784.796875 -24479.833740  120.800049 -24500.733887  20.600098    0.300049        0.199951     1.0    -24721.333496         False          False   False
3  -24479.833740  -24500.633789  19881.671875 -24479.833740    0.100098 -24500.633789  20.600098    0.199951       -2.925049     2.0    -24500.433838         False          False    True
4  -24371.133789  -24446.171143  19881.671875 -24371.133789  108.899902 -24446.171143  26.175049   48.862305        0.199951     1.0    -24500.433838         False          False    True
5  -24363.546143  -24397.208740  19973.884277 -24363.546143   56.449951 -24397.208740  26.175049    7.487549        0.000000     1.0    -24500.433838         False          False    True
6  -24292.546143  -24389.621338  20002.884277 -24292.546143   78.487549 -24389.621338  26.175049   70.900146        0.000000     1.0    -24500.433838         False          False    True
7  -24270.196289  -24318.621338  20080.434082 -24270.196289   93.250000 -24318.621338  26.175049   22.250000       -0.100342     1.0    -24500.433838         False          False    True
8  -24183.546387  -24296.270996  20080.434326 -24183.546387  108.899902 -24296.270996  26.175049   86.549561      -13.450195     1.0    -24500.433838         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 15:29:01]  --------------------------------------------------------------------------------
[08/10 15:29:01]  Iteration: 94 (2 solution, 91 counterexamples)
[08/10 15:29:15]  Generator returned sat in 10.473738 secs.
[08/10 15:29:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:17]  Improved gap from 0 to 48.4375
[08/10 15:29:17]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 15:29:17]  Verifer returned sat in 1.932714 secs.
[08/10 15:29:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -24677.946045  -24977.846191  19948.186768 -24677.946045  300.000000 -24977.846191   0.100098  299.800049      199.800293     9.0    -24977.846191            -1             -1     -1
1  -24677.846191  -24782.133789  19948.186768 -24677.846191  299.899902 -24782.133789   0.100098  104.187500       99.900146     3.0    -24677.946289         False           True   True
2  -24482.233887  -24677.846436  19948.186768 -24482.233887  299.799805 -24677.846436   0.100098  195.512451      195.512451     1.0    -24482.333984         False          False   True
3  -24482.233887  -24577.846436  19948.186768 -24482.233887   54.925049 -24577.846436   0.100098   95.512451       95.512451     2.0    -24482.333984         False          False   True
4  -24482.233887  -24482.433838  19948.186768 -24482.233887   53.925049 -24482.433838   0.100098    0.099854       -4.487549     3.0    -24482.333984         False          False   True
5  -24429.408691  -24477.846436  19999.749268 -24429.408691   52.925049 -24477.846436   0.100098   48.337646       -0.099854     1.0    -24482.333984         False          False   True
6  -24425.821289  -24429.408936  20051.311768 -24425.821289   51.925049 -24429.408936   0.100098    3.487549      -44.949951     1.0    -24482.333984         False          False   True
7  -24378.383789  -24380.971436  20102.874268 -24378.383789   50.925049 -24380.971436   0.100098    2.487549      -45.949951     1.0    -24482.333984         False          False   True
8  -24330.946289  -24332.533691  20102.874512 -24330.946289   49.925049 -24332.533691   0.100098    1.487305      -98.512207     1.0    -24482.333984         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=801229/4096.[0m
[08/10 15:29:18]  --------------------------------------------------------------------------------
[08/10 15:29:18]  Iteration: 95 (2 solution, 92 counterexamples)
[08/10 15:29:47]  Generator returned sat in 26.183058 secs.
[08/10 15:29:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:57]  Improved gap from 0 to 0
[08/10 15:29:58]  Improved number of small numbers from 55 to 82 out of a max of 114
[08/10 15:29:58]  Verifer returned sat in 11.478103 secs.
[08/10 15:29:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -22939.221924  -22940.216442  19549.677490 -22939.221924  0.000244 -22940.216442        0.0  0.994518        0.994303     2.0    -22940.216442            -1             -1   False
1  -22939.221546  -22939.221924  19648.682809 -22939.221546  0.994896 -22939.221924        0.0  0.000378        0.000000     3.0    -22940.216442         False          False   False
2  -22939.221436  -22939.221546  19748.682617 -22939.221436  0.000488 -22939.221546        0.0  0.000111       -0.000081     2.0    -22939.221436         False          False   False
3  -22939.220921  -22939.221130  19848.682129 -22939.220921  0.000625 -22939.221130        0.0  0.000208       -0.000055     1.0    -22939.221436         False          False   False
4  -22938.725505  -22939.219971  19948.186768 -22938.725505  0.495625 -22939.219971        0.0  0.494466        0.000000     1.0    -22939.221436         False          False   False
5  -22938.725505  -22938.725505  20048.186523 -22938.725505  0.010000 -22938.725505        0.0  0.000000       -0.000244     2.0    -22939.221436         False          False   False
6  -22938.715505  -22938.715713  20148.176758 -22938.715505  0.010000 -22938.715713        0.0  0.000208       -0.000010     1.0    -22939.221436         False          False   False
7  -22938.705296  -22938.715332  20248.166559 -22938.705296  0.010417 -22938.715332        0.0  0.010036        0.000000     1.0    -22939.221436         False          False   False
8  -22938.705296  -22938.705296  20248.166748 -22938.705296  0.010000 -22938.705296        0.0  0.000000      -99.999811     2.0    -22939.221436         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/2048.[0m
[08/10 15:29:59]  --------------------------------------------------------------------------------
[08/10 15:29:59]  Iteration: 96 (2 solution, 93 counterexamples)
[08/10 15:30:16]  Generator returned sat in 14.066092 secs.
[08/10 15:30:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:23]  Improved gap from 0 to 25.0
[08/10 15:30:24]  Improved number of small numbers from 60 to 78 out of a max of 114
[08/10 15:30:24]  Verifer returned sat in 8.077437 secs.
[08/10 15:30:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -22667.967773  -22967.965332  19477.426678 -22667.967773  251.977539 -22967.965332       0.00  299.997559      199.997642     3.0    -22967.965332            -1             -1   False
1  -22667.967773  -22821.927979  19477.426678 -22667.967773  251.975098 -22821.927979       0.00  153.960205       99.997642     3.0    -22667.967773         False          False   False
2  -22569.955566  -22667.965415  19477.426678 -22569.955566  251.972412 -22667.965415       0.00   98.009849       98.009849     1.0    -22569.955566         False          False   False
3  -22415.995415  -22569.952915  19477.426678 -22415.995415  251.970000 -22569.952915      26.97  126.987500      125.000000     1.0    -22442.965415         False          False   False
4  -22415.995415  -22467.967915  19477.426678 -22415.995415  126.985000 -22467.967915      26.97   25.002500       25.000000     2.0    -22442.965415         False          False    True
5  -22415.995415  -22467.965415  19552.426678 -22415.995415    0.010000 -22467.965415      26.97   25.000000        0.000000     3.0    -22442.965415         False          False    True
6  -22415.995415  -22442.965415  19627.426514 -22415.995415    0.010000 -22442.965415      26.97    0.000000      -25.000165     4.0    -22442.965415         False          False    True
7  -22291.002915  -22401.479165  19627.431641 -22291.002915  124.992500 -22401.479165      26.97   83.506250       -0.002538     1.0    -22442.965415         False           True   False
8  -22247.524165  -22317.970215  19627.431885 -22247.524165  126.985000 -22317.970215      26.97   43.476050      -56.523544     1.0    -22442.965415         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=125.[0m
[08/10 15:30:25]  --------------------------------------------------------------------------------
[08/10 15:30:25]  Iteration: 97 (2 solution, 94 counterexamples)
[08/10 15:30:57]  Generator returned sat in 29.098210 secs.
[08/10 15:30:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:58]  Improved gap from 1/20 to 100
[08/10 15:30:59]  Improved number of small numbers from 60 to 66 out of a max of 114
[08/10 15:30:59]  Verifer returned sat in 1.872834 secs.
[08/10 15:30:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22867.965332  -22892.952915  19477.426678 -22867.965332  124.987549 -22892.952915      0.050   24.937583       -0.049917     9.0    -22892.952915            -1             -1     -1
1  -22767.965415  -22867.965415  19477.426678 -22767.965415  124.937500 -22867.965415      0.050   99.950000       -0.050000     1.0    -22768.015415         False           True   True
2  -22743.027915  -22767.965415  19477.426678 -22743.027915  124.887500 -22767.965415      0.050   24.887500      -75.112500     1.0    -22743.077915         False          False   True
3  -22643.077915  -22667.965415  19477.426678 -22643.077915  124.837500 -22667.965415      0.050   24.837500      -75.162500     1.0    -22643.127915         False          False   True
4  -22268.015415  -22467.965415  19477.426678 -22268.015415  399.900000 -22467.965415      0.050  199.900000      199.900000     1.0    -22643.127915         False          False   True
5  -21667.965415  -22467.965415  19477.426678 -21667.965415  799.950000 -22467.965415      0.050  799.950000      699.950000     1.0    -22643.127915         False          False   True
6  -21617.940415  -22268.015415  19477.426678 -21617.940415  849.975000 -22268.015415      0.050  650.025000      649.975000     2.0    -22643.127915         False          False   True
7  -21417.490415  -22267.965332  19477.426678 -21417.490415  850.475000 -22267.965332     50.425  800.049917      700.050000     3.0    -21467.915415          True           True  False
8  -21417.490415  -22067.965576  19477.426678 -21417.490415  423.237500 -22067.965576     50.425  600.050161      600.050000     4.0    -21467.915415         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14001/20.[0m
[08/10 15:31:00]  --------------------------------------------------------------------------------
[08/10 15:31:00]  Iteration: 98 (2 solution, 95 counterexamples)
[08/10 15:31:12]  Generator returned sat in 9.623531 secs.
[08/10 15:31:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:14]  Improved number of small numbers from 63 to 66 out of a max of 113
[08/10 15:31:14]  Verifer returned sat in 1.546561 secs.
[08/10 15:31:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22867.965332  -22893.008471  19477.426514 -22867.965332  125.042969 -22893.008471      0.050   24.993139       -0.050081     2.0    -22893.008471            -1             -1     -1
1  -22767.927915  -22864.936249  19477.426678 -22767.927915  125.030556 -22864.936249      0.050   96.958333       -0.012500     1.0    -22767.977915         False           True   True
2  -22743.027915  -22767.965415  19477.426678 -22743.027915  121.858333 -22767.965415      0.050   24.887500      -75.112500     1.0    -22743.077915         False          False   True
3  -22646.069582  -22667.965415  19477.426678 -22646.069582  121.845833 -22667.965415      0.050   21.845833      -78.154167     1.0    -22646.119582         False          False   True
4  -22267.927915  -22467.965415  19477.426678 -22267.927915  399.987500 -22467.965415      0.050  199.987500      199.987500     1.0    -22646.119582         False          False   True
5  -21670.965415  -22467.965415  19477.426678 -21670.965415  796.950000 -22467.965415      0.050  796.950000      696.950000     1.0    -22646.119582         False          False   True
6  -21617.940415  -22267.965415  19477.426678 -21617.940415  849.975000 -22267.965415      0.050  649.975000      649.975000     2.0    -22646.119582         False          False   True
7  -21417.440415  -22267.953125  19477.426678 -21417.440415  850.475000 -22267.953125     50.475  800.037710      700.050000     3.0    -21467.915415          True           True  False
8  -21417.440415  -22067.965576  19477.426678 -21417.440415  423.237500 -22067.965576     50.475  600.050161      600.050000     4.0    -21467.915415         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14001/20.[0m
[08/10 15:31:15]  --------------------------------------------------------------------------------
[08/10 15:31:15]  Iteration: 99 (2 solution, 96 counterexamples)
[08/10 15:31:32]  Generator returned sat in 14.216321 secs.
[08/10 15:31:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:32]  Improved gap from 0 to 100
[08/10 15:31:33]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 15:31:33]  Verifer returned sat in 0.550376 secs.
[08/10 15:31:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  -22542.015381  -22542.215332  19477.426758 -22542.015381  100.100000 -22542.215332    0.100098    0.099854        0.099854     2.0    -22542.215332            -1             -1     -1
1  -22442.115479  -22542.215332  19477.426758 -22442.115479   99.999756 -22542.215332    0.100098   99.999756       -0.000244     2.0    -22442.215576         False           True   True
2  -22442.115234  -22442.215332  19477.426758 -22442.115234  100.000000 -22442.215332    0.100098    0.000000     -100.000000     1.0    -22442.215576         False           True  False
3  -22219.615234  -22251.165527  19477.426758 -22219.615234  222.500000 -22251.165527   22.400146    9.150146        0.199951     1.0    -22442.215576         False          False  False
4  -22119.515381  -22142.215332  19477.426758 -22119.515381  109.250000 -22142.215332   22.500000    0.199951        0.199951     1.0    -22442.215576         False          False   True
5  -22067.090332  -22142.215332  19477.426758 -22067.090332   52.625000 -22142.215332   22.500000   52.625000      -47.375000     1.0    -22442.215576         False          False   True
6  -21670.715332  -22042.215332  19477.426758 -21670.715332  449.000000 -22042.215332  271.300049  100.199951        0.199951     1.0    -22442.215576         False          False   True
7  -21548.415283  -21851.165527  19477.426758 -21548.415283  222.500000 -21851.165527  293.600098    9.150146        0.199951     1.0    -22442.215576         False          False   True
8  -21448.315430  -21841.915527  19477.426758 -21448.315430  109.250000 -21841.915527  293.699951   99.900146        0.199951     1.0    -22442.215576         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:31:33]  --------------------------------------------------------------------------------
[08/10 15:31:33]  Iteration: 100 (2 solution, 97 counterexamples)
[08/10 15:31:51]  Generator returned sat in 14.075601 secs.
[08/10 15:31:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:52]  Improved gap from 0 to 46.875
[08/10 15:31:53]  Improved number of small numbers from 110 to 113 out of a max of 114
[08/10 15:31:53]  Verifer returned sat in 2.171758 secs.
[08/10 15:31:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  -40271.015234  -40371.115234  19477.426758 -40271.015234  200.099854 -40371.115234       0.00  100.100000        0.100000     1.0    -40371.115234            -1             -1   False
1  -40171.115479  -40270.915234  19477.426758 -40171.115479  199.999756 -40270.915234       0.00   99.799756       -0.000244     1.0    -40171.115479         False          False   False
2  -40071.015234  -40072.065234  19477.426758 -40071.015234  199.900000 -40072.065234       0.00    1.050000        0.100000     1.0    -40071.015234         False          False   False
3  -39872.265234  -39972.715234  19477.426758 -39872.265234  199.800000 -39972.715234      98.65    1.800000        0.200000     1.0    -39970.915234         False          False   False
4  -39772.165234  -39871.115234  19477.426758 -39772.165234  101.900000 -39871.115234      98.75    0.200000        0.200000     1.0    -39970.915234         False          False    True
5  -39719.415234  -39870.815234  19521.276855 -39719.415234   52.950000 -39870.815234      98.75   52.650000       -3.199902     1.0    -39970.915234         False          False    True
6  -39669.440234  -39814.965234  19574.401758 -39669.440234  102.625000 -39814.965234      98.75   46.775000       -0.100000     1.0    -39970.915234         False          False    True
7  -39635.340234  -39768.090234  19627.526611 -39635.340234   80.875000 -39768.090234      98.75   34.000000      -12.875146     1.0    -39970.915234         False          False    True
8  -39615.827734  -39721.215088  19680.651611 -39615.827734   53.512500 -39721.215088      98.75    6.637354      -40.237646     1.0    -39970.915234         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:31:54]  --------------------------------------------------------------------------------
[08/10 15:31:54]  Iteration: 101 (2 solution, 98 counterexamples)
