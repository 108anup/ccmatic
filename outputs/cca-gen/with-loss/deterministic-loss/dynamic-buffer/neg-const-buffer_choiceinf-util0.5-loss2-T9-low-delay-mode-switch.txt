[08/10 12:51:25]  --------------------------------------------------------------------------------
[08/10 12:51:25]  Iteration: 1 (0 solution, 0 counterexamples)
[08/10 12:51:25]  Generator returned sat in 0.005643 secs.
[08/10 12:51:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:25]  Improved gap from 0 to 100
[08/10 12:51:26]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 12:51:26]  Verifer returned sat in 0.367557 secs.
[08/10 12:51:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0         100.00           0.00       0.0       100.00      0.05         0.00       0.05    99.95           99.95     9.0              0.0            -1             -1     -1
1         100.05         100.00       0.0       100.05    100.00       100.00       0.05     0.00            0.00     1.0              0.0         False           True   True
2         400.05         100.05       0.0       400.05    300.00       100.05       0.05   299.95          200.00     1.0              0.0         False          False   True
3         637.15         279.00       0.0       637.15    537.05       279.00       0.10   358.05          337.05     2.0              0.0         False          False   True
4        1913.20         400.00       0.0      1913.20   1634.10       400.00    1176.15   337.05          337.05     3.0              0.0         False          False   True
5        5446.35         400.00       0.0      5446.35   3870.20       400.00    4609.30   437.05          337.05     3.0              0.0         False          False   True
6       13351.60         500.00       0.0     13351.60   8342.30       500.00   12414.55   437.05          337.05     4.0              0.0         False          False   True
7       30043.15         637.00       0.0     30043.15  17128.60       637.00   29006.10   400.05          337.05     5.0              0.0         False          False   True
8       64376.30         800.00       0.0     64376.30  34733.20       800.00   63239.25   337.05          337.05     4.0              0.0         False          False   True
high_util=True, low_loss=False, low_delay=False, ramp_up=True, ramp_down=False, total_losses=5, buffer=6741/20.[0m
[08/10 12:51:26]  --------------------------------------------------------------------------------
[08/10 12:51:26]  Iteration: 2 (0 solution, 1 counterexamples)
[08/10 12:51:26]  Generator returned sat in 0.085301 secs.
[08/10 12:51:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:27]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 12:51:27]  Verifer returned sat in 0.342040 secs.
[08/10 12:51:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0      -11566.00      -11713.00 -0.000244    -11566.00    147.00    -11713.00       0.05   146.95           46.95     9.0        -11713.00            -1             -1     -1
1      -11565.95      -11566.00 -0.000244    -11565.95    147.00    -11566.00       0.05     0.00          -53.00     1.0        -11713.00         False           True   True
2      -11212.95      -11513.00 -0.000244    -11212.95    353.00    -11513.00       0.05   300.00          200.00     1.0        -11713.00         False          False   True
3       -2494.15      -11313.00 -0.000244     -2494.15   9018.80    -11313.00    8518.80   300.05          300.05     2.0        -11713.00         False          False   True
4        1913.20      -11213.00 -0.000244      1913.20   4707.40    -11213.00   12826.15   300.05          300.05     3.0        -11713.00         False          False   True
5        4141.35      -11213.00 -0.000244      4141.35   2528.20    -11213.00   14954.30   400.05          300.05     3.0        -11713.00         False          False   True
6        5153.40      -11113.00 -0.000244      5153.40   1412.10    -11113.00   15866.35   400.05          300.05     4.0        -11713.00         False          False   True
7        5557.40      -11012.95 -0.000244      5557.40    804.05    -11012.95   16170.35   400.00          300.05     5.0        -10612.95          True           True   True
8        5657.45      -10813.00 -0.000244      5657.45    500.05    -10813.00   16170.40   300.05          300.05     4.0        -10612.95         False           True   True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=6001/20.[0m
[08/10 12:51:27]  --------------------------------------------------------------------------------
[08/10 12:51:27]  Iteration: 3 (0 solution, 2 counterexamples)
[08/10 12:51:27]  Generator returned sat in 0.050346 secs.
[08/10 12:51:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:28]  Improved number of small numbers from 112 to 112 out of a max of 113
[08/10 12:51:28]  Verifer returned sat in 0.647994 secs.
[08/10 12:51:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4534.753333    4534.553333 -0.000244  4534.753333      0.10  4534.553333        0.1     0.10             0.1     7.0      4534.553333            -1             -1     -1
1    5037.553333    4534.753333 -0.000244  5037.553333    502.90  4534.753333        0.1   502.70           402.9     1.0      4534.553333         False           True   True
2    5037.553333    4634.553333 -0.000244  5037.553333    502.60  4634.553333        0.1   402.90           302.9     2.0      5037.453333         False          False   True
3    5685.053333    4734.553333 -0.000244  5685.053333   1050.40  4734.553333        0.2   950.30           850.3     3.0      5037.453333         False           True  False
4    5685.053333    4934.553333 -0.000244  5685.053333    298.00  4934.553333        0.2   750.30           750.3     4.0      5037.453333         False           True   True
5    5685.053333    4934.553333 -0.000244  5685.053333    750.20  4934.553333        0.2   750.30           650.3     4.0      5037.453333         False           True  False
6    5761.353333    5037.553333 -0.000244  5761.353333    826.60  5037.553333        0.2   723.60           626.6     4.0      5037.453333         False           True  False
7    5907.053333    5220.213333 -0.000244  5907.053333    869.30  5220.213333        0.2   686.64           672.3     5.0      5037.453333         False           True  False
8    6085.053333    5334.553333 -0.000244  6085.053333    864.64  5334.553333        0.2   750.30           750.3     6.0      6084.853333          True           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=8503/10.[0m
[08/10 12:51:29]  --------------------------------------------------------------------------------
[08/10 12:51:29]  Iteration: 4 (0 solution, 3 counterexamples)
[08/10 12:51:29]  Generator returned sat in 0.070761 secs.
[08/10 12:51:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:29]  Improved gap from 1/1600 to 100
[08/10 12:51:30]  Improved number of small numbers from 68 to 80 out of a max of 114
[08/10 12:51:30]  Verifer returned sat in 0.995751 secs.
[08/10 12:51:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4935.569824    4735.568779 -0.000244  4935.569824    0.001221  4735.568779    0.001250  199.999795      199.998545     9.0      4735.568779            -1             -1     -1
1    4935.569824    4735.570068 -0.000244  4935.569824    0.001250  4735.570068    0.001250  199.998506       99.998545     2.0      4735.568779         False           True   True
2    4935.569824    4835.570029 -0.000244  4935.569824  199.997314  4835.570029    0.001250   99.998545       -0.001455     3.0      4735.568779         False          False   True
3    4935.572529    4935.570029 -0.000244  4935.572529  100.001250  4935.570029    0.001250    0.001250      -99.998750     1.0      4935.571279         False          False   True
4    5387.574404    5110.568779 -0.000244  5387.574404  452.003125  5110.568779  152.004375  125.001250      100.000000     1.0      4935.571279         False          False   True
5    5387.574404    5135.570029 -0.000244  5387.574404    0.010000  5135.570029  152.004375  100.000000        0.000000     2.0      4935.571279         False          False   True
6    5889.579404    5335.568848 -0.000244  5889.579404  602.005000  5335.568848  454.009375  100.001182      100.000000     1.0      4935.571279         False          False   True
7    5889.579404    5335.570029 -0.000244  5889.579404    0.010000  5335.570029  454.009375  100.000000        0.000000     2.0      4935.571279         False          False   True
8    6241.586904    5435.571045 -0.000244  6241.586904  452.007500  5435.571045  606.016875  199.998984      100.000000     1.0      4935.571279         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=100.[0m
[08/10 12:51:30]  --------------------------------------------------------------------------------
[08/10 12:51:30]  Iteration: 5 (0 solution, 4 counterexamples)
[08/10 12:51:31]  Generator returned sat in 0.302118 secs.
[08/10 12:51:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:31]  Improved gap from 1/800 to 100
[08/10 12:51:31]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 12:51:31]  Verifer returned sat in 0.454072 secs.
[08/10 12:51:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5643.227783    5543.222900 -853.999756  5643.227783  146.346667  5543.222900    0.000000  100.004883       53.658447     4.0      5543.222900            -1             -1     -1
1    5689.564453    5643.232910 -853.999756  5689.564453  146.341553  5643.232910    0.000000   46.331543       -0.004883     1.0      5689.564453         False           True  False
2    5789.569580    5689.569580 -853.999756  5789.569580  146.336670  5689.569580    0.000000  100.000000        0.000244     1.0      5789.569580         False          False  False
3    5835.901123    5835.896240 -853.999756  5835.901123  146.331543  5835.896240    0.000000    0.004883      -53.668213     1.0      5835.901123         False          False  False
4    6128.564453    5989.564453 -853.999756  6128.564453  292.668213  5989.564453    0.000000  139.000000      138.995117     1.0      5835.901123         False          False  False
5    6455.398438    5989.569580 -853.999756  6455.398438  465.833984  5989.569580    0.000000  465.828857      365.829102     2.0      5835.901123         False          False  False
6    6605.403564    6128.569580 -853.999756  6605.403564  615.833984  6128.569580    0.000000  476.833984      415.834229     2.0      6605.403564          True           True  False
7    6890.740234    6289.569336 -853.999756  6890.740234  762.170654  6289.569336  185.331543  415.839355      415.839355     3.0      6605.403564         False           True  False
8    6890.740234    6389.569336 -853.999756  6890.740234    0.010000  6389.569336  185.331543  315.839355      315.839355     4.0      6605.403564         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=851639/2048.[0m
[08/10 12:51:32]  --------------------------------------------------------------------------------
[08/10 12:51:32]  Iteration: 6 (0 solution, 5 counterexamples)
[08/10 12:51:32]  Generator returned sat in 0.347467 secs.
[08/10 12:51:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:33]  Improved number of small numbers from 65 to 95 out of a max of 113
[08/10 12:51:33]  Verifer returned sat in 0.909204 secs.
[08/10 12:51:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5689.818115    5089.812988 -354.248535  5689.818115  600.006250  5089.812988    0.00000  600.005127      600.000000     2.0      5089.812988            -1             -1   False
1    5689.818115    5189.814453 -354.248535  5689.818115  600.004883  5189.814453    0.00000  500.003662      500.000000     2.0      5689.818115         False          False   False
2    5789.818115    5289.818086 -354.248535  5789.818115  600.003662  5289.818086    0.00000  500.000029      500.000000     3.0      5789.818115         False          False   False
3    5889.820586    5389.576836 -354.248535  5889.820586  600.002500  5389.576836    0.00125  500.242500      500.001221     4.0      5889.819336         False          False   False
4    5889.820586    5389.818115 -354.248535  5889.820586    1.500000  5389.818115    0.00125  500.001221      400.001221     5.0      5889.819336         False          False    True
5    5889.820586    5489.818115 -354.248535  5889.820586    0.010000  5489.818115    0.00125  400.001221      300.001221     6.0      5889.819336         False          False    True
6    5889.820586    5689.818086 -354.248535  5889.820586    0.010000  5689.818086    0.00125  200.001250      200.001221     7.0      5889.819336         False          False    True
7    6289.821836    5789.817871 -354.248535  6289.821836  600.002500  5789.817871    0.00250  500.001465      500.001221     6.0      5889.819336         False           True   False
8    6289.821836    5889.817871 -354.248535  6289.821836    1.500000  5889.817871    0.00250  400.001465      400.001221     6.0      5889.819336         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=2048005/4096.[0m
[08/10 12:51:34]  --------------------------------------------------------------------------------
[08/10 12:51:34]  Iteration: 7 (0 solution, 6 counterexamples)
[08/10 12:51:36]  Generator returned sat in 1.739194 secs.
[08/10 12:51:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:36]  Improved gap from 0 to 100
[08/10 12:51:37]  Improved number of small numbers from 58 to 61 out of a max of 114
[08/10 12:51:37]  Verifer returned sat in 1.325866 secs.
[08/10 12:51:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5689.818115    5089.746687 -354.248779  5689.818115     0.035889  5089.746687   600.035685     0.035744       -0.035685     9.0      5089.746687            -1             -1     -1
1    5789.853800    5089.818115 -354.248779  5789.853800   100.071429  5089.818115   600.035685   100.000000        0.000000     1.0      5089.746687         False           True   True
2    5889.889515    5189.818115 -354.248779  5889.889515   200.035714  5189.818115   600.035685   100.035714        0.035714     2.0      5089.746687         False          False   True
3    5889.889515    5289.818115 -354.248779  5889.889515     0.035714  5289.818115   600.035685     0.035714      -99.964286     2.0      5289.853830         False          False   True
4    6289.568086    5401.818115 -354.248779  6289.568086   399.714286  5401.818115   600.035685   287.714286      199.714286     1.0      5289.853830         False          False   True
5    7424.782372    5589.818115 -354.248779  7424.782372  1422.928571  5589.818115   600.035685  1234.928571     1234.928571     2.0      5289.853830         False          False   True
6    9835.210943    5689.818115 -354.248779  9835.210943  3645.357143  5689.818115  2910.464256  1234.928571     1234.928571     2.0      5289.853830         False          False   True
7    9835.210943    5789.818115 -354.248779  9835.210943   200.500000  5789.818115  2910.464256  1134.928571     1134.928571     3.0      5289.853830         False          False   True
8    9876.782372    5889.818115 -354.248779  9876.782372  1176.500000  5889.818115  2910.464256  1076.500000     1076.500000     4.0      5289.853830         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=17289/14.[0m
[08/10 12:51:38]  --------------------------------------------------------------------------------
[08/10 12:51:38]  Iteration: 8 (0 solution, 7 counterexamples)
[08/10 12:51:39]  Generator returned sat in 0.833694 secs.
[08/10 12:51:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:39]  Improved gap from 0 to 100
[08/10 12:51:40]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 12:51:40]  Verifer returned sat in 1.013404 secs.
[08/10 12:51:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1831.933350    1731.958265 -354.249023  1831.933350   125.081055  1731.958265     0.0000  99.975085       99.974841     2.0      1731.958265            -1             -1   False
1    1857.039515    1831.958265 -354.249023  1857.039515   125.081250  1831.958265     0.0500  25.031250       25.031006     1.0      1731.958265         False          False   False
2    1957.064515    1857.014515 -354.249023  1957.064515   125.056250  1857.014515     0.0750  99.975000       25.031006     1.0      1956.989515         False          False    True
3    5889.889515    1957.014515 -354.249023  5889.889515  4032.800000  1957.014515  3832.9000  99.975000       25.031006     1.0      1956.989515         False          False    True
4    7805.814515    2057.014515 -354.249023  7805.814515  2015.900000  2057.014515  5648.8250  99.975000       25.031006     1.0      1956.989515         False          False    True
5    8713.289515    2157.014515 -354.249023  8713.289515  1007.450000  2157.014515  6456.3000  99.975000       25.031006     1.0      1956.989515         False          False    True
6    9116.539515    2257.014515 -354.249023  9116.539515   503.225000  2257.014515  6759.5500  99.975000       25.031006     1.0      1956.989515         False          False    True
7    9267.677015    2431.958265 -354.249023  9267.677015   251.112500  2431.958265  6810.6875  25.031250       25.031006     1.0      1956.989515         False          False    True
8    9367.702015    2457.014404 -354.249023  9367.702015   125.056250  2457.014404  6810.7125  99.975110       25.031006     1.0      1956.989515         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=102527/4096.[0m
[08/10 12:51:41]  --------------------------------------------------------------------------------
[08/10 12:51:41]  Iteration: 9 (0 solution, 8 counterexamples)
[08/10 12:51:42]  Generator returned sat in 1.577286 secs.
[08/10 12:51:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:43]  Improved gap from 0 to 100
[08/10 12:51:43]  Improved number of small numbers from 70 to 82 out of a max of 114
[08/10 12:51:43]  Verifer returned sat in 1.076397 secs.
[08/10 12:51:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5789.884521    5589.884404 -354.249023  5789.884521    0.002441  5589.884404     0.0025  199.997617       99.997617     9.0      5589.884404            -1             -1     -1
1    5813.387529    5789.884404 -354.249023  5813.387529  223.500625  5789.884404     0.0025   23.500625       23.500625     1.0      5589.884404         False           True   True
2    5813.392529    5813.387529 -354.249023  5813.392529   23.505625  5813.387529     0.0025    0.002500      -76.494375     1.0      5813.390029         False          False   True
3    5889.889404    5889.884404 -354.249023  5889.889404   76.499375  5889.884404     0.0025    0.002500      -99.997500     1.0      5813.390029         False          False   True
4    6040.885654    5989.884521 -354.249023  6040.885654  150.998750  5989.884521     0.0025   50.998633      -49.001250     1.0      5813.390029         False          False   True
5    6289.884521    6189.884404 -354.249023  6289.884521  299.997500  6189.884404     0.0025   99.997617       99.997617     1.0      5813.390029         False          False   True
6    6787.881904    6289.884277 -354.249023  6787.881904  597.995000  6289.884277    97.9950  400.002627      400.002500     1.0      5813.390029         False          False   True
7    6787.881904    6389.884277 -354.249023  6787.881904    0.010000  6389.884277    97.9950  300.002627      300.002500     2.0      5813.390029         False          False   True
8    6787.881904    6389.884521 -354.249023  6787.881904    0.010000  6389.884521    97.9950  300.002383      200.002500     3.0      6689.886904          True           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=160001/400.[0m
[08/10 12:51:44]  --------------------------------------------------------------------------------
[08/10 12:51:44]  Iteration: 10 (0 solution, 9 counterexamples)
[08/10 12:51:44]  Generator returned sat in 0.099831 secs.
[08/10 12:51:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:45]  Improved gap from 1/400 to 100
[08/10 12:51:46]  Improved number of small numbers from 59 to 74 out of a max of 114
[08/10 12:51:46]  Verifer returned sat in 1.179660 secs.
[08/10 12:51:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6113.387695    5713.387451  145.718477  6113.387695  399.999756  5713.387451    0.00000  400.000244      400.000166     7.0      5713.387451            -1             -1   False
1    6113.387695    5813.387529  145.718477  6113.387695  399.998779  5813.387529    0.00000  300.000166      300.000166     7.0      6113.387695         False          False   False
2    6513.390029    5913.387529  145.718477  6513.390029  700.002500  5913.387529    0.00125  600.001250      600.001250     6.0      6113.387695         False          False   False
3    6513.390029    6013.387529  145.718477  6513.390029    0.001221  6013.387529    0.00125  500.001250      500.001250     7.0      6513.388779         False          False    True
4    6513.390029    6013.387695  145.718477  6513.390029    0.010000  6013.387695    0.00125  500.001084      400.001250     8.0      6513.388779         False          False    True
5    6513.390029    6113.387529  145.718477  6513.390029    0.010000  6113.387529    0.00125  400.001250      300.001250     9.0      6513.388779         False          False    True
6    6513.390029    6263.387529  145.718477  6513.390029  298.515000  6263.387529    0.00125  250.001250      200.001250     5.0      6513.388779         False           True   False
7    7084.661279    6413.387451  145.718477  7084.661279  821.272500  6413.387451   71.27250  600.001328      600.001250     6.0      6513.388779         False          False   False
8    7084.661279    6513.387451  145.718477  7084.661279    0.010000  6513.387451   71.27250  500.001328      500.001250     7.0      6513.388779         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=480001/800.[0m
[08/10 12:51:46]  --------------------------------------------------------------------------------
[08/10 12:51:46]  Iteration: 11 (0 solution, 10 counterexamples)
[08/10 12:51:47]  Generator returned sat in 0.293845 secs.
[08/10 12:51:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:47]  Improved gap from 1/600 to 100
[08/10 12:51:48]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 12:51:48]  Verifer returned sat in 0.975892 secs.
[08/10 12:51:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5813.497559    5713.297363  145.80835  5813.497559    0.100098  5713.297363    0.000000  100.200195      100.199951     8.0      5713.297363            -1             -1   False
1    5813.597412    5713.297607  145.80835  5813.597412  100.300049  5713.297607    0.099854  100.199951        0.199951     8.0      5713.297363         False          False   False
2    5913.397461    5813.297607  145.80835  5913.397461  200.000000  5813.297607    0.099854  100.000000        0.000000     9.0      5713.297363         False          False    True
3    6013.297363    5914.197754  145.80835  6013.297363  199.899902  5914.197754    0.099854   98.999756       -0.100098     1.0      6013.197510          True           True   False
4    6113.697510    6113.297607  145.80835  6113.697510  199.399902  6113.297607    0.199951    0.199951        0.199951     1.0      6013.197510         False          False   False
5    6314.497559    6164.297607  145.80835  6314.497559  201.000000  6164.297607  101.000000   49.199951        0.199951     1.0      6013.197510         False          False    True
6    6441.797607    6246.464355  145.80835  6441.797607  176.500000  6246.464355  128.300049   67.033203        0.199951     1.0      6013.197510         False          False    True
7    6541.897705    6379.497314  145.80835  6541.897705  167.133301  6379.497314  128.400146   34.000244        0.199951     1.0      6013.197510         False          False    True
8    6641.997314    6413.597412  145.80835  6641.997314  134.099854  6413.597412  128.499756   99.900146        0.199951     1.0      6013.197510         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=819/4096.[0m
[08/10 12:51:48]  --------------------------------------------------------------------------------
[08/10 12:51:48]  Iteration: 12 (0 solution, 11 counterexamples)
[08/10 12:51:49]  Generator returned sat in 0.039682 secs.
[08/10 12:51:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:50]  Improved number of small numbers from 98 to 102 out of a max of 113
[08/10 12:51:50]  Verifer returned sat in 0.621280 secs.
[08/10 12:51:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5813.497314    5713.297363  145.80835  5813.497314    0.100098  5713.297363    0.000000  100.199951      100.199707     8.0      5713.297363            -1             -1   False
1    5813.597412    5713.297607  145.80835  5813.597412  100.300049  5713.297607    0.099854  100.199951        0.199951     8.0      5713.297363         False          False   False
2    5913.597168    5813.297607  145.80835  5913.597168  200.199707  5813.297607    0.099854  100.199707        0.199707     9.0      5713.297363         False          False    True
3    6013.297363    5914.197754  145.80835  6013.297363  199.899902  5914.197754    0.099854   98.999756       -0.100098     1.0      6013.197510          True           True   False
4    6113.697510    6113.297607  145.80835  6113.697510  199.399902  6113.297607    0.199951    0.199951        0.199951     1.0      6013.197510         False          False   False
5    6313.997559    6164.297607  145.80835  6313.997559  200.500000  6164.297607  100.500000   49.199951        0.199951     1.0      6013.197510         False          False    True
6    6440.797607    6246.731038  145.80835  6440.797607  176.000000  6246.731038  127.300049   66.766520        0.199951     1.0      6013.197510         False          False    True
7    6540.797729    6379.764323  145.80835  6540.797729  166.766642  6379.764323  127.300171   33.733236        0.199951     1.0      6013.197510         False          False    True
8    6640.797852    6413.597168  145.80835  6640.797852  133.733358  6413.597168  127.300293   99.900391        0.199951     1.0      6013.197510         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=819/4096.[0m
[08/10 12:51:50]  --------------------------------------------------------------------------------
[08/10 12:51:50]  Iteration: 13 (0 solution, 12 counterexamples)
[08/10 12:51:51]  Generator returned sat in 0.061043 secs.
[08/10 12:51:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:51]  Improved gap from 1807/600 to 100
[08/10 12:51:51]  Improved number of small numbers from 89 to 114 out of a max of 114
[08/10 12:51:51]  Verifer returned sat in 0.229618 secs.
[08/10 12:51:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5713.997559    5613.697510  145.808105  5713.997559    0.100098  5613.697510    0.000000  100.300049      100.199951     8.0      5613.697510            -1             -1   False
1    5714.097656    5613.797607  145.808105  5714.097656  100.400146  5613.797607    0.100098  100.199951        0.199951     8.0      5613.697510         False          False   False
2    5813.797607    5713.797607  145.808105  5813.797607  199.899902  5713.797607    0.100098   99.899902       -0.100098     9.0      5613.697510         False          False    True
3    5913.697510    5813.797607  145.808105  5913.697510  199.799805  5813.797607    0.100098   99.799805       -0.200195     1.0      5913.597412          True           True   False
4    6012.197510    5913.797607  145.808105  6012.197510  198.299805  5913.797607    0.100098   98.299805       -1.700195     1.0      5913.597412         False          False   False
5    6110.697510    6018.797607  145.808105  6110.697510  196.799805  6018.797607    0.100098   91.799805       -3.200195     1.0      5913.597412         False          False   False
6    6214.197510    6213.797607  145.808105  6214.197510  195.299805  6213.797607    0.199951    0.199951        0.199951     1.0      5913.597412         False          False   False
7    6414.497559    6313.797607  145.808105  6414.497559  200.500000  6313.797607  100.500000    0.199951        0.199951     1.0      5913.597412         False          False    True
8    6614.797607    6413.797607  145.808105  6614.797607  200.500000  6413.797607  200.800049    0.199951        0.199951     1.0      5913.597412         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=819/4096.[0m
[08/10 12:51:51]  --------------------------------------------------------------------------------
[08/10 12:51:51]  Iteration: 14 (0 solution, 13 counterexamples)
[08/10 12:51:52]  Generator returned sat in 0.047423 secs.
[08/10 12:51:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:52]  Improved number of small numbers from 53 to 113 out of a max of 113
[08/10 12:51:52]  Verifer returned sat in 0.386369 secs.
[08/10 12:51:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5713.747559    5613.447510  146.108154  5713.747559    0.100098  5613.447510    0.050049  100.250000      100.199951     8.0      5613.447510            -1             -1   False
1    5713.797607    5613.497559  146.108154  5713.797607  100.300049  5613.497559    0.100098  100.199951        0.199951     8.0      5613.447510         False          False   False
2    5813.747559    5713.497559  146.108154  5813.747559  200.149902  5713.497559    0.100098  100.149902        0.149902     9.0      5613.447510         False          False    True
3    5913.697510    5813.697266  146.108154  5913.697510  200.099854  5813.697266    0.100098   99.900146        0.099854     1.0      5913.597412          True           True   False
4    6011.897217    5914.197266  146.108154  6011.897217  198.099854  5914.197266    0.100098   97.599854       -1.700439     1.0      5913.597412         False          False   False
5    6110.397217    6019.647461  146.108154  6110.397217  196.099854  6019.647461    0.100098   90.649658       -3.200439     1.0      5913.597412         False          False   False
6    6213.847412    6213.497559  146.108154  6213.847412  194.099854  6213.497559    0.149902    0.199951        0.199951     1.0      5913.597412         False          False   False
7    6414.047607    6313.497559  146.108154  6414.047607  200.400146  6313.497559  100.350098    0.199951        0.199951     1.0      5913.597412         False          False    True
8    6613.997803    6413.497314  146.108154  6613.997803  200.150146  6413.497314  200.300293    0.200195        0.199951     1.0      5913.597412         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=819/4096.[0m
[08/10 12:51:53]  --------------------------------------------------------------------------------
[08/10 12:51:53]  Iteration: 15 (0 solution, 14 counterexamples)
[08/10 12:51:56]  Generator returned sat in 3.138514 secs.
[08/10 12:51:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:57]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 12:51:57]  Verifer returned sat in 0.208250 secs.
[08/10 12:51:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5713.747559    5613.497559  146.108154  5713.747559    0.100098  5613.497559    0.050049  100.199951      100.199951     8.0      5613.497559            -1             -1     -1
1    5713.797607    5712.697021  146.108154  5713.797607  100.250000  5712.697021    0.100098    1.000488        0.199951     8.0      5613.497559         False           True  False
2    5813.747559    5713.497559  146.108154  5813.747559  100.950439  5713.497559    0.100098  100.149902        0.149902     9.0      5613.497559          True           True   True
3    5814.498291    5813.697266  146.108154  5814.498291  100.900635  5813.697266    0.100098    0.700928      -99.099365     1.0      5814.398193          True           True  False
4    6011.997070    5914.197266  146.108154  6011.997070  198.199707  5914.197266    0.100098   97.699707       -1.600586     1.0      5814.398193         False          False  False
5    6113.797607    6019.647461  146.108154  6113.797607  199.500244  6019.647461    0.100098   94.050049        0.199951     1.0      5814.398193         False          False  False
6    6323.897461    6213.497559  146.108154  6323.897461  304.149902  6213.497559  110.199951    0.199951        0.199951     1.0      5814.398193         False          False  False
7    6523.097656    6313.497559  146.108154  6523.097656  199.400146  6313.497559  209.400146    0.199951        0.199951     1.0      5814.398193         False          False   True
8    6722.047852    6413.497314  146.108154  6722.047852  199.150146  6413.497314  308.350342    0.200195        0.199951     1.0      5814.398193         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=819/4096.[0m
[08/10 12:51:57]  --------------------------------------------------------------------------------
[08/10 12:51:57]  Iteration: 16 (0 solution, 15 counterexamples)
[08/10 12:51:58]  Generator returned sat in 0.480498 secs.
[08/10 12:51:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:51:59]  Improved number of small numbers from 71 to 113 out of a max of 113
[08/10 12:51:59]  Verifer returned sat in 0.327031 secs.
[08/10 12:51:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5513.997559    5013.997559  146.10791  5513.997559    0.100098  5013.997559   0.000000  500.000000      500.000000     8.0      5013.997559            -1             -1     -1
1    5713.797363    5113.997559  146.10791  5713.797363  699.799805  5113.997559   0.000000  599.799805      599.799805     6.0      5013.997559         False           True  False
2    5813.997559    5213.997559  146.10791  5813.997559  700.000000  5213.997559   0.099854  599.900146      599.900146     6.0      5013.997559         False          False  False
3    5813.997559    5309.697510  146.10791  5813.997559  505.100098  5309.697510   0.099854  504.200195      499.900146     6.0      5813.897705         False          False   True
4    5813.997559    5313.997803  146.10791  5813.997559  504.100098  5313.997803   0.099854  499.899902      399.900146     5.0      5813.897705         False          False   True
5    5817.197754    5413.997559  146.10791  5817.197754  503.100098  5413.997559   0.099854  403.100342      303.100342     6.0      5813.897705         False          False   True
6    5916.197510    5513.997803  146.10791  5916.197510  502.100098  5513.997803   0.099854  402.099854      302.100098     6.0      5813.897705         False          False   True
7    6015.197754    5713.797607  146.10791  6015.197754  501.100098  5713.797607   0.099854  301.300293      301.100342     6.0      5813.897705         False          False   True
8    6213.997559    5813.997559  146.10791  6213.997559  500.100098  5813.997559   0.099854  399.900146      399.900146     4.0      5813.897705         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=2457191/4096.[0m
[08/10 12:51:59]  --------------------------------------------------------------------------------
[08/10 12:51:59]  Iteration: 17 (0 solution, 16 counterexamples)
[08/10 12:52:00]  Generator returned sat in 0.619445 secs.
[08/10 12:52:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:00]  Improved gap from 39201/1000 to 100
[08/10 12:52:01]  Improved number of small numbers from 85 to 89 out of a max of 114
[08/10 12:52:01]  Verifer returned sat in 0.626978 secs.
[08/10 12:52:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5013.995117    4948.660892  146.10791  5013.995117   65.339111  4948.660892        0.0   65.334225       -0.002441     1.0      4948.660892            -1             -1    True
1    5014.000059    5013.997559  146.10791  5014.000059   65.339167  5013.997559        0.0    0.002500      -99.997500     1.0      4948.660892         False          False    True
2    5214.000000    5213.997559  146.10791  5214.000000  200.002441  5213.997559        0.0    0.002441        0.002441     1.0      4948.660892         False          False    True
3    5313.995059    5213.997559  146.10791  5313.995059   99.997500  5213.997559        0.0   99.997500       -0.002500     1.0      5313.995059         False          False    True
4    5714.000059    5313.997559  146.10791  5714.000059  500.002500  5313.997559        0.0  400.002500      300.002500     1.0      5313.995059         False          False    True
5    6266.000059    5513.997314  146.10791  6266.000059  952.002500  5513.997314      152.0  600.002744      600.002500     2.0      5313.995059         False          False    True
6    6266.000059    5613.997314  146.10791  6266.000059    0.010000  5613.997314      152.0  500.002744      500.002500     3.0      6114.000059          True           True    True
7    6266.000059    5713.997314  146.10791  6266.000059    0.010000  5713.997314      152.0  400.002744      400.002500     4.0      6114.000059         False           True   False
8    6266.000059    5813.997314  146.10791  6266.000059    0.010000  5813.997314      152.0  300.002744      300.002500     4.0      6114.000059         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=240001/400.[0m
[08/10 12:52:02]  --------------------------------------------------------------------------------
[08/10 12:52:02]  Iteration: 18 (0 solution, 17 counterexamples)
[08/10 12:52:03]  Generator returned sat in 0.471513 secs.
[08/10 12:52:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:03]  Improved gap from 0 to 100
[08/10 12:52:03]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 12:52:03]  Verifer returned sat in 0.566525 secs.
[08/10 12:52:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5008.025391    4908.025391  146.10791  5008.025391  501.599854  4908.025391   0.025000   99.975000       -0.024756     4.0      4908.025391            -1             -1     -1
1    5409.650391    5008.025146  146.10791  5409.650391  501.600000  5008.025146   0.075195  401.550049      301.550049     1.0      4908.025391         False           True   True
2    5509.675293    5108.025391  146.10791  5509.675293  501.574951  5108.025391   0.100098  401.549805      301.550049     2.0      5509.575195         False          False   True
3    5515.650391    5302.025146  146.10791  5515.650391  407.524902  5302.025146   0.100098  213.525146      207.525146     3.0      5515.550293         False           True   True
4    5708.150146    5308.025146  146.10791  5708.150146  406.024902  5308.025146   0.100098  400.024902      300.024902     4.0      5515.550293         False           True  False
5    5712.650146    5506.550293  146.10791  5712.650146  404.524902  5506.550293   0.100098  205.999756      204.524902     4.0      5515.550293         False           True  False
6    5909.675293    5508.025391  146.10791  5909.675293  403.024902  5508.025391   0.100098  401.549805      301.550049     5.0      5515.550293         False           True  False
7    5909.675293    5708.025146  146.10791  5909.675293  401.524902  5708.025146   0.100098  201.550049      201.550049     4.0      5515.550293         False           True  False
8    6108.150146    5808.025146  146.10791  6108.150146  400.024902  5808.025146   0.100098  300.024902      300.024902     3.0      5515.550293         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1235149/4096.[0m
[08/10 12:52:04]  --------------------------------------------------------------------------------
[08/10 12:52:04]  Iteration: 19 (0 solution, 18 counterexamples)
[08/10 12:52:04]  Generator returned sat in 0.100125 secs.
[08/10 12:52:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:05]  Improved number of small numbers from 79 to 113 out of a max of 113
[08/10 12:52:05]  Verifer returned sat in 0.223539 secs.
[08/10 12:52:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5008.025146    4908.025146  146.10791  5008.025146  501.599854  4908.025146   0.025146   99.974854       -0.025146     4.0      4908.025146            -1             -1     -1
1    5410.149658    5008.025146  146.10791  5410.149658  502.099365  5008.025146   0.075195  402.049316      302.049316     1.0      4908.025146         False           True   True
2    5510.174561    5108.025146  146.10791  5510.174561  502.074219  5108.025146   0.100098  402.049316      302.049316     2.0      5510.074463         False          False   True
3    5518.149902    5300.025146  146.10791  5518.149902  410.024658  5300.025146   0.100098  218.024658      210.024658     3.0      5518.049805         False           True   True
4    5708.149902    5308.025146  146.10791  5708.149902  408.024658  5308.025146   0.100098  400.024658      300.024658     4.0      5518.049805         False           True  False
5    5714.149902    5506.049805  146.10791  5714.149902  406.024658  5506.049805   0.100098  208.000000      206.024658     4.0      5518.049805         False           True  False
6    5910.174561    5508.025146  146.10791  5910.174561  404.024658  5508.025146   0.100098  402.049316      302.049316     5.0      5518.049805         False           True  False
7    5910.174561    5708.025146  146.10791  5910.174561  402.024658  5708.025146   0.100098  202.049316      202.049316     4.0      5518.049805         False           True  False
8    6108.149902    5808.025146  146.10791  6108.149902  400.024658  5808.025146   0.100098  300.024658      300.024658     3.0      5518.049805         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=618597/2048.[0m
[08/10 12:52:05]  --------------------------------------------------------------------------------
[08/10 12:52:05]  Iteration: 20 (0 solution, 19 counterexamples)
[08/10 12:52:06]  Generator returned sat in 0.494631 secs.
[08/10 12:52:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:07]  Improved gap from 0 to 100
[08/10 12:52:08]  Improved number of small numbers from 54 to 62 out of a max of 114
[08/10 12:52:08]  Verifer returned sat in 1.122476 secs.
[08/10 12:52:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5407.391113    5407.364730  146.10791  5407.391113    0.001221  5407.364730    0.025146    0.001237        0.001237     1.0       5407.36473            -1             -1    True
1    5507.388626    5507.362305  146.10791  5507.388626   99.998750  5507.362305    0.025146    0.001175       -0.001250     1.0       5407.36473         False          False    True
2    5607.386230    5507.364730  146.10791  5607.386230   99.998779  5507.364730    0.025146   99.996354       -0.003646     1.0       5407.36473         False          False    True
3    5607.391126    5607.364730  146.10791  5607.391126  100.001250  5607.364730    0.025146    0.001250      -99.998750     1.0       5407.36473         False          False    True
4    6106.892376    5807.364730  146.10791  6106.892376  499.502500  5807.364730  299.520146    0.007500        0.007500     1.0       5407.36473         False          False    True
5    6106.894876    5807.373480  146.10791  6106.894876    0.010000  5807.373480  299.520146    0.001250      -99.990000     1.0       5407.36473         False          False    True
6    6556.426751    6007.364730  146.10791  6556.426751  449.533125  6007.364730  549.054521    0.007500        0.007500     1.0       5407.36473         False          False    True
7    6556.429251    6007.364730  146.10791  6556.429251    0.010000  6007.364730  549.054521    0.010000      -99.990000     1.0       5407.36473         False          False    True
8    6855.939251    6107.364746  146.10791  6855.939251  299.520000  6107.364746  648.567021  100.007484        0.007500     1.0       5407.36473         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=3/400.[0m
[08/10 12:52:08]  --------------------------------------------------------------------------------
[08/10 12:52:08]  Iteration: 21 (0 solution, 20 counterexamples)
[08/10 12:52:10]  Generator returned sat in 0.759851 secs.
[08/10 12:52:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:11]  Improved number of small numbers from 32 to 51 out of a max of 113
[08/10 12:52:11]  Verifer returned sat in 1.124549 secs.
[08/10 12:52:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4785.424316    4785.398682  768.073723  4785.424316    0.001221  4785.398682     0.025146    0.000488        0.000253     9.0      4785.398682            -1             -1     -1
1    4885.424072    4885.398917  768.073723  4885.424072  100.000244  4885.398917     0.025146    0.000009        0.000009     1.0      4785.398682         False           True   True
2    5085.424430    4985.398917  768.073723  5085.424430  200.000366  4985.398917   100.025269    0.000244        0.000244     1.0      4785.398682         False          False   True
3    5899.427115    5085.398917  768.073723  5899.427115  814.002930  5085.398917   814.027954    0.000244        0.000244     1.0      4785.398682         False          False   True
4    6305.428336    5085.399283  768.073723  6305.428336  406.001465  5085.399283  1120.029175   99.999878        0.000244     1.0      4785.398682         False          False   True
5    6407.429190    5285.398917  768.073723  6407.429190  202.000732  5285.398917  1122.030029    0.000244        0.000244     1.0      4785.398682         False          False   True
6    6507.429312    5385.398917  768.073723  6507.429312  100.000366  5385.398917  1122.030151    0.000244        0.000244     1.0      4785.398682         False          False   True
7    6556.429251    5385.398917  768.073723  6556.429251   49.000183  5385.398917  1122.030151   49.000183      -50.999817     1.0      4785.398682         False          False   True
8    6808.928702    5485.398926  768.073723  6808.928702  301.499634  5485.398926  1223.529541  100.000235        0.000244     1.0      4785.398682         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=4, buffer=1/4096.[0m
[08/10 12:52:11]  --------------------------------------------------------------------------------
[08/10 12:52:11]  Iteration: 22 (0 solution, 21 counterexamples)
[08/10 12:52:14]  Generator returned sat in 2.319235 secs.
[08/10 12:52:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:15]  Improved number of small numbers from 95 to 113 out of a max of 113
[08/10 12:52:15]  Verifer returned sat in 0.281021 secs.
[08/10 12:52:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5542.401123    4785.398682  768.073486  5542.401123   756.997314  4785.398682     0.002441  757.000000      757.000000     8.0      4785.398682            -1             -1     -1
1    5542.401123    4785.398682  768.073486  5542.401123   756.997500  4785.398682     0.002441  757.000000      657.000000     8.0      4785.398682         False           True   True
2    5542.403564    4885.398682  768.073486  5542.403564   757.002441  4885.398682     0.002441  657.002441      557.002441     7.0      4785.398682         False           True  False
3    5642.403564    5085.398682  768.073486  5642.403564   757.002441  5085.398682     0.002441  557.002441      557.002441     5.0      4785.398682         False          False  False
4    7048.906006    5085.398682  768.073486  7048.906006  1963.504883  5085.398682  1206.507324  757.000000      657.000000     5.0      4785.398682         False          False  False
5    7048.906006    5185.398682  768.073486  7048.906006     0.010000  5185.398682  1206.507324  657.000000      557.000000     6.0      4785.398682         False          False   True
6    7048.906006    5285.398682  768.073486  7048.906006   300.000000  5285.398682  1206.507324  557.000000      457.000000     7.0      4785.398682         False          False   True
7    7048.906006    5388.398682  768.073486  7048.906006   200.000000  5388.398682  1206.507324  454.000000      357.000000     8.0      4785.398682         False          False   True
8    7448.906006    5585.398438  768.073486  7448.906006   854.000000  5585.398438  1206.507324  657.000244      657.000000     6.0      6242.398682          True           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=657.[0m
[08/10 12:52:15]  --------------------------------------------------------------------------------
[08/10 12:52:15]  Iteration: 23 (0 solution, 22 counterexamples)
[08/10 12:52:16]  Generator returned sat in 0.231319 secs.
[08/10 12:52:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:17]  Improved number of small numbers from 112 to 112 out of a max of 113
[08/10 12:52:17]  Verifer returned sat in 0.519826 secs.
[08/10 12:52:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5284.448438    4784.348437  768.073486  5284.448438      0.10  4784.348437       0.10   500.00          500.00     4.0      4784.348437            -1             -1     -1
1    5383.798437    4884.348437  768.073486  5383.798437    599.35  4884.348437       0.20   499.25          499.25     3.0      4784.348437         False          False   True
2    5383.798437    4984.348437  768.073486  5383.798437    399.90  4984.348437       0.20   399.25          399.25     4.0      5383.598437         False          False   True
3    5384.448438    5084.248438  768.073486  5384.448438    399.90  5084.248438       0.20   300.00          299.90     5.0      5383.598437         False          False   True
4    5384.448438    5084.348437  768.073486  5384.448438    299.90  5084.348437       0.20   299.90          199.90     6.0      5383.598437         False          False   True
5    5384.448438    5184.348437  768.073486  5384.448438    200.00  5184.348437       0.20   199.90           99.90     7.0      5383.598437         False          False   True
6    5384.548437    5284.348437  768.073486  5384.548437    200.00  5284.348437       0.20   100.00            0.00     8.0      5383.598437         False          False   True
7    5983.698438    5484.348437  768.073486  5983.698438    699.15  5484.348437       0.20   499.15          499.15     1.0      5383.598437         False           True  False
8    7481.848437    5584.348437  768.073486  7481.848437   1997.30  5584.348437    1398.25   499.25          499.25     2.0      5383.598437         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=1997/4.[0m
[08/10 12:52:17]  --------------------------------------------------------------------------------
[08/10 12:52:17]  Iteration: 24 (0 solution, 23 counterexamples)
[08/10 12:52:20]  Generator returned sat in 1.759647 secs.
[08/10 12:52:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:21]  Improved number of small numbers from 73 to 107 out of a max of 113
[08/10 12:52:21]  Verifer returned sat in 0.775098 secs.
[08/10 12:52:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6190.696777   -6490.746338  768.073486 -6190.696777     0.099609 -6490.746338      0.099609  299.949951      199.949951     4.0     -6490.746338            -1             -1     -1
1   -6190.646729   -6390.696533  768.073486 -6190.646729   300.000000 -6390.696533      0.149658  199.900146       99.949951     2.0     -6490.746338         False           True   True
2   -6090.596680   -6190.746338  768.073486 -6090.596680   299.950195 -6190.746338      0.199707   99.949951       99.949951     1.0     -6090.796387          True           True   True
3     304.051025   -6090.746582  768.073486   304.051025  6494.597656 -6090.746582   6294.847412   99.950195       99.949951     1.0     -6090.796387         False          False   True
4    3449.899658   -5990.746582  768.073486  3449.899658  3245.798828 -5990.746582   9340.696045   99.950195       99.949951     1.0     -6090.796387         False          False   True
5    4971.348877   -5890.746338  768.073486  4971.348877  1621.399414 -5890.746338  10762.145264   99.949951       99.949951     1.0     -6090.796387         False          False   True
6    5680.598633   -5790.796387  768.073486  5680.598633   809.199707 -5790.796387  11371.395020  100.000000       99.949951     2.0     -6090.796387         False          False   True
7    5983.698486   -5690.796387  768.073486  5983.698486   403.099854 -5690.796387  11574.494873  100.000000       99.949951     2.0     -5590.796387          True           True   True
8    6083.748413   -5590.746338  768.073486  6083.748413   200.049927 -5590.746338  11574.544800   99.949951       99.949951     1.0     -5590.796387         False           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=409395/4096.[0m
[08/10 12:52:21]  --------------------------------------------------------------------------------
[08/10 12:52:21]  Iteration: 25 (0 solution, 24 counterexamples)
[08/10 12:52:22]  Generator returned sat in 0.126192 secs.
[08/10 12:52:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:22]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 12:52:22]  Verifer returned sat in 0.217489 secs.
[08/10 12:52:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6245.095215   -6545.169922  768.073486 -6245.095215     0.099609 -6545.169922      0.099609  299.975098      199.975098     4.0     -6545.169922            -1             -1     -1
1   -6245.045166   -6445.145020  768.073486 -6245.045166   300.025146 -6445.145020      0.149658  199.950195       99.975098     2.0     -6545.169922         False           True   True
2   -6144.995117   -6245.169922  768.073486 -6144.995117   300.000244 -6245.169922      0.199707   99.975098       99.975098     1.0     -6145.194824          True           True   True
3     279.826660   -6145.169922  768.073486   279.826660  6524.796875 -6145.169922   6325.021484   99.975098       99.975098     1.0     -6145.194824         False          False   True
4    3440.250000   -6045.169922  768.073486  3440.250000  3260.398438 -6045.169922   9385.444824   99.975098       99.975098     1.0     -6145.194824         False          False   True
5    4968.474121   -5945.169922  768.073486  4968.474121  1628.199219 -5945.169922  10813.668945   99.975098       99.975098     1.0     -6145.194824         False          False   True
6    5680.598633   -5845.194824  768.073486  5680.598633   812.099609 -5845.194824  11425.793457  100.000000       99.975098     2.0     -6145.194824         False          False   True
7    5984.648438   -5745.194824  768.073486  5984.648438   404.049805 -5745.194824  11629.843262  100.000000       99.975098     2.0     -5645.194824          True           True   True
8    6084.673340   -5645.169922  768.073486  6084.673340   200.024902 -5645.169922  11629.868164   99.975098       99.975098     1.0     -5645.194824         False           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=204749/2048.[0m
[08/10 12:52:23]  --------------------------------------------------------------------------------
[08/10 12:52:23]  Iteration: 26 (0 solution, 25 counterexamples)
[08/10 12:52:25]  Generator returned sat in 1.031803 secs.
[08/10 12:52:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:25]  Improved number of small numbers from 56 to 113 out of a max of 113
[08/10 12:52:25]  Verifer returned sat in 0.588466 secs.
[08/10 12:52:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6137.695068   -6293.884033  768.072998 -6137.695068      0.099854 -6293.884033      0.099854  156.089111       64.088623     1.0     -6293.884033            -1             -1     -1
1   -6101.784180   -6137.794922  768.073242 -6101.784180    192.000000 -6137.794922      0.099854   35.910889       -0.000244     2.0     -6293.884033         False          False   True
2   -5945.795166   -6010.861572  768.073242 -5945.795166    191.899902 -6010.861572      0.199951   64.866455       55.888672     1.0     -5945.995117          True           True  False
3    5647.314941   -5918.884033  768.073242  5647.314941  11657.976562 -5918.884033  11493.310059   72.888916       55.888672     1.0     -5945.995117         False          False   True
4    5763.426025   -5810.861816  768.073242  5763.426025    189.000000 -5810.861816  11509.421143   64.866699       55.888672     1.0     -5945.995117         False          False   True
5    5863.525879   -5701.884033  768.073242  5863.525879    164.966553 -5701.884033  11509.520996   55.888916       55.888672     1.0     -5945.995117         False          False   True
6    5963.625732   -5601.884033  768.073242  5963.625732    155.988770 -5601.884033  11509.620850   55.888916       55.888672     1.0     -5945.995117         False          False   True
7    6067.736816   -5501.883789  768.073242  6067.736816    160.000000 -5501.883789  11513.731934   55.888672       55.888672     1.0     -5945.995117         False          False   True
8    6167.837158   -5445.895020  768.073242  6167.837158    155.989014 -5445.895020  11513.832275   99.899902       55.888672     1.0     -5945.995117         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=28615/512.[0m
[08/10 12:52:26]  --------------------------------------------------------------------------------
[08/10 12:52:26]  Iteration: 27 (0 solution, 26 counterexamples)
[08/10 12:52:27]  Generator returned sat in 0.310015 secs.
[08/10 12:52:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:27]  Improved gap from 80505/2048 to 100
[08/10 12:52:28]  Improved number of small numbers from 45 to 114 out of a max of 114
[08/10 12:52:28]  Verifer returned sat in 0.321465 secs.
[08/10 12:52:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6137.695068   -6301.884033  768.073242 -6137.695068      0.099609 -6301.884033      0.012695  164.176270       64.176270     1.0     -6301.884033            -1             -1     -1
1   -6101.871338   -6201.833740  768.073242 -6101.871338    200.000000 -6201.833740      0.012695   99.949707        0.000000     2.0     -6301.884033         False          False   True
2   -6001.833740   -6011.861084  768.073242 -6001.833740    199.987305 -6011.861084      0.025146   10.002197        0.025146     1.0     -6001.858887          True           True  False
3    5577.266602   -5969.192139  768.073242  5577.266602  11589.102539 -5969.192139  11479.125488   67.333252        0.025146     1.0     -6001.858887         False          False   True
4    5677.279297   -5811.686279  768.073242  5677.279297    167.345947 -5811.686279  11479.138184    9.827393        0.025146     1.0     -6001.858887         False          False   True
5    5863.525635   -5739.126221  768.073242  5863.525635    196.073730 -5739.126221  11565.384521   37.267334        0.025146     1.0     -6001.858887         False          False   True
6    5963.625732   -5601.884033  768.073242  5963.625732    137.367432 -5601.884033  11565.484619    0.025146        0.025146     1.0     -6001.858887         False          False   True
7    6148.254639   -5501.884033  768.073242  6148.254639    184.654053 -5501.884033  11650.113525    0.025146        0.025146     1.0     -6001.858887         False          False   True
8    6304.130615   -5445.895264  768.073242  6304.130615    155.901123 -5445.895264  11705.989502   44.036377        0.025146     1.0     -6001.858887         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=103/4096.[0m
[08/10 12:52:28]  --------------------------------------------------------------------------------
[08/10 12:52:28]  Iteration: 28 (0 solution, 27 counterexamples)
[08/10 12:52:32]  Generator returned sat in 2.992894 secs.
[08/10 12:52:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:32]  Improved number of small numbers from 76 to 113 out of a max of 113
[08/10 12:52:32]  Verifer returned sat in 0.287580 secs.
[08/10 12:52:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6137.695068   -6301.884033  768.072998 -6137.695068      0.099609 -6301.884033      0.019043  164.169922       64.169922     1.0     -6301.884033            -1             -1     -1
1   -6101.865234   -6201.846436  768.072998 -6101.865234    199.999756 -6201.846436      0.019043   99.962158       -0.000244     2.0     -6301.884033         False          False   True
2   -6001.833740   -6011.861328  768.072998 -6001.833740    199.993652 -6011.861328      0.025146   10.002441        0.025146     1.0     -6001.858887          True           True  False
3    5577.266357   -5967.863037  768.072998  5577.266357  11589.102539 -5967.863037  11479.125244   66.004150        0.025146     1.0     -6001.858887         False          False   True
4    5677.272705   -5811.686279  768.072998  5677.272705    166.010498 -5811.686279  11479.131592    9.827393        0.025146     1.0     -6001.858887         False          False   True
5    5861.525391   -5737.855469  768.072998  5861.525391    194.080078 -5737.855469  11563.384277   35.996582        0.025146     1.0     -6001.858887         False          False   True
6    5961.531738   -5601.884033  768.072998  5961.531738    136.002930 -5601.884033  11563.390625    0.025146        0.025146     1.0     -6001.858887         False          False   True
7    6143.496094   -5501.884033  768.072998  6143.496094    181.989502 -5501.884033  11645.354980    0.025146        0.025146     1.0     -6001.858887         False          False   True
8    6297.372070   -5445.895264  768.072998  6297.372070    153.901123 -5445.895264  11699.230957   44.036377        0.025146     1.0     -6001.858887         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=103/4096.[0m
[08/10 12:52:33]  --------------------------------------------------------------------------------
[08/10 12:52:33]  Iteration: 29 (0 solution, 28 counterexamples)
[08/10 12:52:34]  Generator returned sat in 0.299911 secs.
[08/10 12:52:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:35]  Improved number of small numbers from 84 to 113 out of a max of 113
[08/10 12:52:35]  Verifer returned sat in 0.357632 secs.
[08/10 12:52:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6137.695312   -6301.884033  768.072998 -6137.695312      0.099365 -6301.884033      0.019043  164.169678       64.169678     8.0     -6301.884033            -1             -1     -1
1   -6101.865234   -6201.846436  768.072998 -6101.865234    199.999756 -6201.846436      0.019043   99.962158       -0.000244     2.0     -6301.884033         False           True   True
2   -6001.833740   -6011.861572  768.072998 -6001.833740    199.993652 -6011.861572      0.025146   10.002686        0.025146     1.0     -6001.858887          True           True  False
3    5577.769531   -5967.531982  768.072998  5577.769531  11589.605957 -5967.531982  11479.628418   65.673096        0.025146     1.0     -6001.858887         False          False   True
4    5677.772461   -5811.686279  768.072998  5677.772461    165.676025 -5811.686279  11479.631348    9.827393        0.025146     1.0     -6001.858887         False          False   True
5    5861.525146   -5737.524170  768.072998  5861.525146    193.580078 -5737.524170  11563.384033   35.665283        0.025146     1.0     -6001.858887         False          False   True
6    5961.528564   -5601.884033  768.072998  5961.528564    135.668701 -5601.884033  11563.387451    0.025146        0.025146     1.0     -6001.858887         False          False   True
7    6142.827393   -5501.884033  768.072998  6142.827393    181.323975 -5501.884033  11644.686279    0.025146        0.025146     1.0     -6001.858887         False          False   True
8    6296.203369   -5445.895264  768.072998  6296.203369    153.401123 -5445.895264  11698.062256   44.036377        0.025146     1.0     -6001.858887         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=103/4096.[0m
[08/10 12:52:35]  --------------------------------------------------------------------------------
[08/10 12:52:35]  Iteration: 30 (0 solution, 29 counterexamples)
[08/10 12:52:36]  Generator returned sat in 0.180073 secs.
[08/10 12:52:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:36]  Improved gap from 1/1600 to 100
[08/10 12:52:37]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 12:52:37]  Verifer returned sat in 0.553898 secs.
[08/10 12:52:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5111.480469    5061.484375 -10545.291748  5111.480469  149.993652  5061.484375   0.002441   49.993652       -0.002686     9.0      5061.484375            -1             -1     -1
1    5211.480469    5111.480713 -10545.291748  5211.480469  149.993652  5111.480713   0.002441   99.997314       -0.002686     1.0      5061.484375         False           True   True
2    5211.485596    5211.480713 -10545.291748  5211.485596  100.002441  5211.480713   0.002441    0.002441      -99.997559     1.0      5211.483154         False          False   True
3    5311.485596    5311.480713 -10545.291748  5311.485596  100.002441  5311.480713   0.002441    0.002441      -99.997559     1.0      5211.483154         False          False   True
4    5611.480713    5436.479980 -10545.291748  5611.480713  299.997559  5436.479980   0.002441  174.998291       99.997559     1.0      5211.483154         False          False   True
5    5911.480469    5611.480713 -10545.291748  5911.480469  474.998047  5611.480713   0.002441  299.997314      299.997314     1.0      5211.483154         False          False   True
6    6248.982178    5711.480469 -10545.291748  6248.982178  637.499023  5711.480469   0.002441  537.499268      537.499023     2.0      5211.483154         False          False   True
7    6248.982178    5711.480713 -10545.291748  6248.982178    0.010000  5711.480713   0.002441  537.499023      437.499023     3.0      6248.979736          True           True  False
8    6248.982178    5911.480713 -10545.291748  6248.982178    0.010000  5911.480713   0.002441  337.499023      337.499023     3.0      6248.979736         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1100803/2048.[0m
[08/10 12:52:37]  --------------------------------------------------------------------------------
[08/10 12:52:37]  Iteration: 31 (0 solution, 30 counterexamples)
[08/10 12:52:40]  Generator returned sat in 1.871669 secs.
[08/10 12:52:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:41]  Improved gap from 1/1600 to 39.0625
[08/10 12:52:41]  Improved number of small numbers from 87 to 114 out of a max of 114
[08/10 12:52:41]  Verifer returned sat in 1.112711 secs.
[08/10 12:52:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5111.555664    4911.480713 -10545.291748  5111.555664    0.025146  4911.480713        0.0  200.074951      100.074951     2.0      4911.480713            -1             -1    True
1    5111.555664    5111.480713 -10545.291748  5111.555664  200.049805  5111.480713        0.0    0.074951        0.074951     2.0      4911.480713         False          False    True
2    5311.505859    5211.480469 -10545.291748  5311.505859  200.025146  5211.480469        0.0  100.025391      100.025146     1.0      5311.505859         False          False    True
3    5311.505859    5311.480713 -10545.291748  5311.505859   75.824951  5311.480713        0.0    0.025146        0.025146     2.0      5311.505859         False          False    True
4    5385.305664    5378.693115 -10545.291748  5385.305664   73.824951  5378.693115        0.0    6.612549      -26.175049     1.0      5311.505859         False          False    True
5    5450.518066    5411.480713 -10484.354248  5450.518066   71.824951  5411.480713        0.0   39.037354       -0.025146     1.0      5311.505859         False          False    True
6    5481.305664    5450.543213 -10423.416748  5481.305664   69.824951  5450.543213        0.0   30.762451       -8.300049     1.0      5311.505859         False          False    True
7    5518.368164    5489.605713 -10362.479248  5518.368164   67.824951  5489.605713        0.0   28.762451      -10.300049     1.0      5311.505859         False          False    True
8    5555.430664    5528.668213 -10362.479248  5555.430664   65.824951  5528.668213        0.0   26.762451      -73.237549     1.0      5311.505859         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=409805/4096.[0m
[08/10 12:52:42]  --------------------------------------------------------------------------------
[08/10 12:52:42]  Iteration: 32 (0 solution, 31 counterexamples)
[08/10 12:52:44]  Generator returned sat in 0.648571 secs.
[08/10 12:52:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:45]  Improved gap from 617/16 to 39.0625
[08/10 12:52:45]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 12:52:45]  Verifer returned sat in 1.362307 secs.
[08/10 12:52:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4929.401123    4635.500488 -10545.291748  4929.401123    0.025146  4635.500488        0.0  293.900635      199.987549     2.0      4635.500488            -1             -1    True
1    4929.401123    4729.413818 -10545.291748  4929.401123  293.887939  4729.413818        0.0  199.987305       99.987549     2.0      4635.500488         False          False    True
2    5023.289307    4929.413574 -10545.291748  5023.289307  293.875488  4929.413574        0.0   93.875732       93.875732     1.0      5023.289307         False          False    True
3    5023.289307    5023.276611 -10545.291748  5023.289307   74.849854  5023.276611        0.0    0.012695       -6.124268     2.0      5023.289307         False          False    True
4    5096.626465    5096.613770 -10545.291748  5096.626465   73.349854  5096.613770        0.0    0.012695      -32.787109     1.0      5023.289307         False          False    True
5    5168.463623    5129.413574 -10484.354248  5168.463623   71.849854  5129.413574        0.0   39.050049       -0.012451     1.0      5023.289307         False          False    True
6    5199.763428    5168.476074 -10423.416748  5199.763428   70.349854  5168.476074        0.0   31.287354       -7.775146     1.0      5023.289307         False          False    True
7    5237.325928    5207.538818 -10362.479492  5237.325928   68.849854  5207.538818        0.0   29.787109       -9.275391     1.0      5023.289307         False          False    True
8    5274.888672    5246.601318 -10362.479248  5274.888672   67.349854  5246.601318        0.0   28.287354      -71.712402     1.0      5023.289307         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=100.[0m
[08/10 12:52:46]  --------------------------------------------------------------------------------
[08/10 12:52:46]  Iteration: 33 (0 solution, 32 counterexamples)
[08/10 12:52:47]  Generator returned sat in 0.762640 secs.
[08/10 12:52:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:49]  Improved gap from 1/1200 to 12.5
[08/10 12:52:49]  Improved number of small numbers from 83 to 114 out of a max of 114
[08/10 12:52:49]  Verifer returned sat in 1.384371 secs.
[08/10 12:52:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3629.676270    3617.226074 -10141.411865  3629.676270    0.049805  3617.226074        0.0   12.450195       12.450195     1.0      3617.226074            -1             -1   False
1    3629.676270    3617.226074 -10053.911865  3629.676270    0.050000  3617.226074        0.0   12.450195       -0.049805     1.0      3617.226074         False          False   False
2    4060.775879    3629.726074 -10053.911865  4060.775879  443.549805  3629.726074        0.0  431.049805      331.049805     1.0      3617.226074         False          False   False
3    4060.775879    3829.726074 -10053.911865  4060.775879  431.000000  3829.726074        0.0  231.049805      231.049805     2.0      4060.775879         False          False   False
4    4060.775879    3929.726074 -10053.911865  4060.775879  215.000000  3929.726074        0.0  131.049805      131.049805     3.0      4060.775879         False          False   False
5    4060.775879    4007.726318 -10053.911865  4060.775879  107.000000  4007.726318        0.0   53.049561       31.049805     4.0      4060.775879         False          False   False
6    4060.775879    4034.726074  -9984.961670  4060.775879   53.000000  4034.726074        0.0   26.049805        0.000000     5.0      4060.775879         False          False   False
7    4060.775879    4060.775879  -9897.461670  4060.775879   26.000000  4060.775879        0.0    0.000000      -12.500000     6.0      4060.775879         False          False   False
8    4073.275879    4073.275879  -9897.461670  4073.275879   12.500000  4073.275879        0.0    0.000000     -100.000000     1.0      4060.775879         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1356185/4096.[0m
[08/10 12:52:49]  --------------------------------------------------------------------------------
[08/10 12:52:49]  Iteration: 34 (0 solution, 33 counterexamples)
[08/10 12:52:51]  Generator returned sat in 0.636361 secs.
[08/10 12:52:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:51]  Improved gap from 1/1200 to 100
[08/10 12:52:52]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 12:52:52]  Verifer returned sat in 0.431139 secs.
[08/10 12:52:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3717.325928    3617.226074 -10141.411865  3717.325928  100.200000  3617.226074   0.000000  100.099854      100.099854     6.0      3617.226074            -1             -1   False
1    3717.375977    3617.226074 -10141.411865  3717.375977  100.149902  3617.226074   0.050049  100.099854        0.099854     6.0      3717.325928         False          False   False
2    3717.426025    3717.226074 -10141.411865  3717.426025  100.149902  3717.226074   0.050049    0.149902      -99.850098     7.0      3717.325928         False          False    True
3    3914.426025    3819.026123 -10141.411865  3914.426025  197.149902  3819.026123   0.050049   95.349854       -2.850098     1.0      3717.325928         False           True   False
4    4017.226074    3917.226074 -10141.411865  4017.226074  198.149902  3917.226074   0.050049   99.949951       -0.050049     1.0      3717.325928         False          False   False
5    4116.426025    4017.226074 -10141.411865  4116.426025  199.149902  4017.226074   0.050049   99.149902       -0.850098     1.0      3717.325928         False          False   False
6    4217.426025    4152.592529 -10141.411865  4217.426025  200.149902  4152.592529   0.100098   64.733398        0.099854     1.0      3717.325928         False          False   False
7    4317.475830    4251.992676 -10141.411865  4317.475830  164.783203  4251.992676   0.149902   65.333252        0.099854     1.0      3717.325928         False          False    True
8    4417.525879    4317.226074 -10141.411865  4417.525879  165.383301  4317.226074   0.199951  100.099854        0.099854     2.0      3717.325928         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=409/4096.[0m
[08/10 12:52:52]  --------------------------------------------------------------------------------
[08/10 12:52:52]  Iteration: 35 (0 solution, 34 counterexamples)
[08/10 12:52:54]  Generator returned sat in 0.369718 secs.
[08/10 12:52:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:54]  Improved number of small numbers from 102 to 113 out of a max of 113
[08/10 12:52:54]  Verifer returned sat in 0.270301 secs.
[08/10 12:52:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3717.325684    3617.226074 -10141.412109  3717.325684  100.199951  3617.226074   0.000000  100.099609      100.099609     6.0      3617.226074            -1             -1   False
1    3717.375977    3617.226074 -10141.412109  3717.375977  100.149902  3617.226074   0.050049  100.099854        0.099854     6.0      3717.325928         False          False   False
2    3717.426025    3717.325684 -10141.412109  3717.426025  100.149902  3717.325684   0.050049    0.050293      -99.850098     7.0      3717.325928         False          False    True
3    3914.425781    3818.625732 -10141.412109  3914.425781  197.050049  3818.625732   0.050049   95.750000       -2.850342     1.0      3717.325928         False           True   False
4    4017.225830    3917.226074 -10141.412109  4017.225830  198.550049  3917.226074   0.050049   99.949707       -0.050293     1.0      3717.325928         False          False   False
5    4117.326172    4017.226074 -10141.412109  4117.326172  200.050049  4017.226074   0.050049  100.050049        0.050049     1.0      3717.325928         False          False   False
6    4218.826172    4152.592529 -10141.412109  4218.826172  201.550049  4152.592529   1.500244   64.733398        0.099854     1.0      3717.325928         False          False   False
7    4319.076172    4251.992676 -10141.412109  4319.076172  164.983398  4251.992676   1.750244   65.333252        0.099854     1.0      3717.325928         False          False    True
8    4419.126221    4317.226074 -10141.412109  4419.126221  165.383301  4317.226074   1.800293  100.099854        0.099854     2.0      3717.325928         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=409/4096.[0m
[08/10 12:52:55]  --------------------------------------------------------------------------------
[08/10 12:52:55]  Iteration: 36 (0 solution, 35 counterexamples)
[08/10 12:52:56]  Generator returned sat in 0.220517 secs.
[08/10 12:52:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:56]  Improved number of small numbers from 82 to 113 out of a max of 113
[08/10 12:52:56]  Verifer returned sat in 0.327776 secs.
[08/10 12:52:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3717.863037    3617.226074 -10141.412354  3717.863037  101.125000  3617.226074   0.037354  100.599609      100.599609     6.0      3617.226074            -1             -1   False
1    3718.375977    3617.226074 -10141.412354  3718.375977  101.112549  3617.226074   0.050049  101.099854        1.099854     6.0      3718.325928         False          False   False
2    3718.388672    3717.825684 -10141.412354  3718.388672  101.112549  3717.825684   0.050049    0.512939      -98.887451     7.0      3718.325928         False          False    True
3    3914.425781    3818.625732 -10141.412354  3914.425781  196.550049  3818.625732   0.050049   95.750000       -2.850342     1.0      3718.325928         False           True   False
4    4017.225830    3917.226074 -10141.412354  4017.225830  198.550049  3917.226074   0.050049   99.949707       -0.050293     1.0      3718.325928         False          False   False
5    4117.826172    4017.226074 -10141.412354  4117.826172  200.550049  4017.226074   0.050049  100.550049        0.550049     1.0      3718.325928         False          False   False
6    4219.826172    4153.100830 -10141.412354  4219.826172  202.550049  4153.100830   1.500244   65.225098        1.099854     1.0      3718.325928         False          False   False
7    4319.838623    4252.634277 -10141.412354  4319.838623  165.237549  4252.634277   1.512695   65.691650        1.099854     1.0      3718.325928         False          False    True
8    4419.851074    4317.226074 -10141.412354  4419.851074  165.704102  4317.226074   1.525146  101.099854        1.099854     2.0      3718.325928         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=4505/4096.[0m
[08/10 12:52:57]  --------------------------------------------------------------------------------
[08/10 12:52:57]  Iteration: 37 (0 solution, 36 counterexamples)
[08/10 12:52:58]  Generator returned sat in 0.251451 secs.
[08/10 12:52:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:52:59]  Improved number of small numbers from 111 to 111 out of a max of 113
[08/10 12:52:59]  Verifer returned sat in 0.304535 secs.
[08/10 12:52:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3613.076172    3513.076172 -10141.412354  3613.076172  100.050000  3513.076172      0.000  100.000000      100.000000     9.0      3513.076172            -1             -1     -1
1    3613.076172    3587.909505 -10141.412354  3613.076172  100.000000  3587.909505      0.000   25.166667        0.000000     6.0      3613.076172         False           True  False
2    3717.176172    3613.076172 -10141.412354  3717.176172  129.266667  3613.076172      0.000  104.100000        4.100000     3.0      3613.076172         False          False  False
3    3742.342839    3717.176172 -10141.412354  3742.342839  129.266667  3717.176172      0.000   25.166667      -70.733333     2.0      3613.076172         False          False  False
4    3913.076172    3813.076172 -10141.412354  3913.076172  195.900000  3813.076172      0.000  100.000000        0.000000     1.0      3613.076172         False          False  False
5    4108.926172    3913.076172 -10141.412354  4108.926172  295.850000  3913.076172      0.000  195.850000       95.850000     2.0      3613.076172         False          False  False
6    4358.851172    4113.076172 -10141.412354  4358.851172  445.775000  4113.076172    149.875   95.900000       95.900000     1.0      3613.076172         False          False  False
7    4458.901172    4213.076172 -10141.412354  4458.901172  195.950000  4213.076172    149.925   95.900000       95.900000     1.0      3613.076172         False          False   True
8    4561.001172    4213.076172 -10141.412354  4561.001172  198.000000  4213.076172    152.025  195.900000       95.900000     1.0      3613.076172         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=959/10.[0m
[08/10 12:52:59]  --------------------------------------------------------------------------------
[08/10 12:52:59]  Iteration: 38 (0 solution, 37 counterexamples)
[08/10 12:53:03]  Generator returned sat in 2.927426 secs.
[08/10 12:53:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:04]  Improved number of small numbers from 77 to 101 out of a max of 113
[08/10 12:53:04]  Verifer returned sat in 0.791009 secs.
[08/10 12:53:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3386.525879    3386.426025 -10114.762451  3386.525879  299.899902  3386.426025        0.0    0.099854      -99.900146     2.0      3386.426025            -1             -1   False
1    3686.325928    3586.425781 -10114.762451  3686.325928  299.899902  3586.425781        0.0   99.900146       99.899902     1.0      3386.426025         False          False   False
2    3913.075928    3686.425781 -10114.762451  3913.075928  326.650146  3686.425781        0.0  226.650146      226.649902     1.0      3386.426025         False          False   False
3    3913.075928    3686.526123 -10114.762451  3913.075928   31.637500  3686.526123        0.0  226.549805      126.649902     2.0      3913.075928         False          False   False
4    3913.075928    3786.426025 -10114.762451  3913.075928   63.275000  3786.426025        0.0  126.649902       26.649902     3.0      3913.075928         False          False   False
5    3913.075928    3912.975928 -10114.762354  3913.075928  126.550000  3912.975928        0.0    0.100000      -73.350000     4.0      3913.075928         False           True   False
6    4166.075928    4086.425928 -10114.762354  4166.075928  253.100000  4086.425928        0.0   79.650000       79.650000     1.0      3913.075928         False           True   False
7    4592.625928    4186.425781 -10114.762354  4592.625928  506.200000  4186.425781        0.1  406.100146      406.100000     1.0      3913.075928         False          False   False
8    4592.625928    4186.426025 -10114.762354  4592.625928    0.500000  4186.426025        0.1  406.099902      306.100000     2.0      3913.075928         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=4061/10.[0m
[08/10 12:53:05]  --------------------------------------------------------------------------------
[08/10 12:53:05]  Iteration: 39 (0 solution, 38 counterexamples)
[08/10 12:53:08]  Generator returned sat in 2.115153 secs.
[08/10 12:53:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:09]  Improved gap from 1/1200 to 12.5
[08/10 12:53:09]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 12:53:09]  Verifer returned sat in 1.183023 secs.
[08/10 12:53:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4026.963379    3596.863281 -10255.350098  4026.963379    0.049805  3596.863281        0.0  430.100098      399.949951     7.0      3596.863281            -1             -1   False
1    4026.963379    3727.013428 -10255.350098  4026.963379  430.100000  3727.013428        0.0  299.949951      299.949951     3.0      3596.863281         False          False   False
2    4157.063477    3727.013428 -10255.350098  4157.063477  430.050049  3727.013428        0.0  430.050049      330.050049     3.0      4157.063477         False          False   False
3    4157.063477    3927.013428 -10255.350098  4157.063477  430.000000  3927.013428        0.0  230.050049      230.050049     4.0      4157.063477         False          False   False
4    4157.063477    4027.013184 -10255.350098  4157.063477  214.000000  4027.013184        0.0  130.050293      130.050049     3.0      4157.063477         False          False   False
5    4157.063477    4105.113525 -10255.350098  4157.063477  106.000000  4105.113525        0.0   51.949951       30.050049     4.0      4157.063477         False          False   False
6    4157.113525    4144.663330 -10185.500000  4157.113525   52.000000  4144.663330        0.0   12.450195       -0.049805     5.0      4157.063477         False          False   False
7    4169.663330    4157.163330 -10098.000000  4169.663330   25.000000  4157.163330        0.0   12.500000        0.000000     1.0      4157.063477         False          False   False
8    4169.663330    4169.663330 -10010.500000  4169.663330   11.500000  4169.663330        0.0    0.000000      -12.500000     2.0      4157.063477         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1352089/4096.[0m
[08/10 12:53:10]  --------------------------------------------------------------------------------
[08/10 12:53:10]  Iteration: 40 (0 solution, 39 counterexamples)
[08/10 12:53:17]  Generator returned sat in 5.508525 secs.
[08/10 12:53:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:17]  Improved gap from 0 to 100
[08/10 12:53:18]  Improved number of small numbers from 70 to 79 out of a max of 114
[08/10 12:53:18]  Verifer returned sat in 1.100577 secs.
[08/10 12:53:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3427.017334    3427.015928 -10255.350098  3427.017334  199.999756  3427.015928     0.0000    0.001406      -99.998594     2.0      3427.015928            -1             -1    True
1    3627.014678    3527.016113 -10255.350098  3627.014678  199.998750  3527.016113     0.0000   99.998564       -0.001250     1.0      3627.014678         False          False    True
2    3627.018555    3627.015928 -10255.350098  3627.018555  100.002441  3627.015928     0.0000    0.002627      -99.997373     1.0      3627.018555         False          False    True
3    3727.017178    3727.015928 -10255.350098  3727.017178  100.001250  3727.015928     0.0000    0.001250      -99.998750     1.0      3727.017178         False          False    True
4    4026.015928    3827.015928 -10255.350098  4026.015928  299.000000  3827.015928    98.9975  100.002500        0.002500     1.0      3727.017178         False          False    True
5    4026.015928    3927.015928 -10255.350098  4026.015928    0.010000  3927.015928    98.9975    0.002500      -99.997500     2.0      3727.017178         False          False    True
6    4325.013428    4127.015928 -10255.350098  4325.013428  299.000000  4127.015928   197.9950    0.002500        0.002500     1.0      3727.017178         False          False    True
7    4325.020928    4127.024678 -10255.350098  4325.020928    0.010000  4127.024678   197.9950    0.001250      -99.990000     1.0      3727.017178         False          False    True
8    4624.028428    4327.015869 -10255.350098  4624.028428  299.008750  4327.015869   297.0100    0.002559        0.002500     1.0      3727.017178         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=1/400.[0m
[08/10 12:53:18]  --------------------------------------------------------------------------------
[08/10 12:53:18]  Iteration: 41 (0 solution, 40 counterexamples)
[08/10 12:53:23]  Generator returned sat in 3.350308 secs.
[08/10 12:53:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:24]  Improved gap from 399/800 to 100
[08/10 12:53:25]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 12:53:25]  Verifer returned sat in 1.528051 secs.
[08/10 12:53:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3437.653320    3245.528428 -10255.350098  3437.653320    0.025146  3245.528428        0.0  192.124893       99.949893     4.0      3245.528428            -1             -1   False
1    3437.678428    3337.703428 -10255.350098  3437.678428  192.150000  3337.703428        0.0   99.975000       -0.025000     5.0      3245.528428         False          False   False
2    3529.828428    3437.703428 -10255.350098  3529.828428  192.125000  3437.703428        0.0   92.125000       -7.875000     1.0      3529.828428         False          False   False
3    3931.928428    3537.703428 -10255.350098  3931.928428  494.225000  3537.703428        0.0  394.225000      294.225000     1.0      3529.828428         False          False   False
4    3931.928428    3737.703428 -10255.350098  3931.928428  394.200000  3737.703428        0.0  194.225000      194.225000     2.0      3529.828428         False          False   False
5    4135.803428    3837.703428 -10255.350098  4135.803428  398.100000  3837.703428        0.0  298.100000      298.100000     3.0      3529.828428         False          False   False
6    4237.753428    3837.728428 -10255.350098  4237.753428  400.050000  3837.728428        0.0  400.025000      300.050000     4.0      3529.828428         False          False   False
7    4237.753428    4037.703428 -10255.350098  4237.753428  351.037500  4037.703428        0.0  200.050000      200.050000     3.0      3529.828428         False          False   False
8    4364.222178    4037.703613 -10255.350098  4364.222178  326.518750  4037.703613        0.0  326.518564      226.518750     4.0      3529.828428         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=307277/1024.[0m
[08/10 12:53:25]  --------------------------------------------------------------------------------
[08/10 12:53:25]  Iteration: 42 (0 solution, 41 counterexamples)
[08/10 12:53:28]  Generator returned sat in 1.583259 secs.
[08/10 12:53:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:29]  Improved gap from 0 to 48.4375
[08/10 12:53:29]  Improved number of small numbers from 90 to 112 out of a max of 114
[08/10 12:53:29]  Verifer returned sat in 1.206850 secs.
[08/10 12:53:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3931.928467    3383.391113 -10255.350098  3931.928467    0.100000  3383.391113        0.0  548.537354      448.537354     4.0      3383.391113            -1             -1    True
1    3931.928467    3583.390869 -10255.350098  3931.928467    0.100098  3583.390869        0.0  348.537598      348.537354     4.0      3383.391113         False          False    True
2    3931.928467    3683.391113 -10255.350098  3931.928467  348.437500  3683.391113        0.0  248.537354      248.537354     5.0      3383.391113         False          False    True
3    3931.928467    3732.203369 -10255.350098  3931.928467  102.975000  3732.203369        0.0  199.725098      148.537354     6.0      3931.928467         False          False    True
4    3931.928467    3883.390967 -10255.350098  3931.928467   49.987500  3883.390967        0.0   48.537500       48.537354     7.0      3931.928467         False          False    True
5    3931.928467    3883.490967 -10203.887451  3931.928467   23.493750  3883.490967        0.0   48.437500        0.000000     8.0      3931.928467         False          False    True
6    3931.928467    3931.928467 -10152.324951  3931.928467   10.246875  3931.928467        0.0    0.000000      -48.437500     9.0      3931.928467         False          False    True
7    4033.291016    3980.365967 -10105.250000  4033.291016  101.362549  3980.365967        0.0   52.925049        0.000000     1.0      3931.928467         False           True   False
8    4033.291016    4033.291016 -10053.687744  4033.291016   49.987500  4033.291016        0.0    0.000000      -48.437744     2.0      3931.928467         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1428019/4096.[0m
[08/10 12:53:30]  --------------------------------------------------------------------------------
[08/10 12:53:30]  Iteration: 43 (0 solution, 42 counterexamples)
[08/10 12:53:32]  Generator returned sat in 0.904753 secs.
[08/10 12:53:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:33]  Improved gap from 3/1600 to 48.4375
[08/10 12:53:33]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 12:53:33]  Verifer returned sat in 0.819643 secs.
[08/10 12:53:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3574.814453    3174.814453 -10255.302246  3574.814453    0.010498  3174.814453   0.000000  400.000000      400.000000     5.0      3174.814453            -1             -1    True
1    3627.887207    3274.814209 -10255.302246  3627.887207  453.072754  3274.814209   0.010498  353.062500      353.062256     5.0      3174.814453         False          False    True
2    3627.887207    3374.814453 -10255.302246  3627.887207  224.374756  3374.814453   0.010498  253.062256      253.062256     6.0      3627.876709         False          False    True
3    3627.887207    3474.814453 -10255.302246  3627.887207  224.375000  3474.814453   0.010498  153.062256      153.062256     7.0      3627.876709         False          False    True
4    3627.887207    3574.772461 -10255.302246  3627.887207  110.187500  3574.772461   0.010498   53.104248       53.062256     8.0      3627.876709         False          False    True
5    3627.887207    3574.814453 -10208.375000  3627.887207   53.093750  3574.814453   0.010498   53.062256       -0.010498     9.0      3627.876709         False          False    True
6    3676.324951    3627.887207 -10156.812500  3676.324951  101.500000  3627.887207   0.010498   48.427246       -0.010254     1.0      3627.876709         False           True   False
7    3705.934082    3676.324707 -10105.250244  3705.934082   78.036377  3676.324707   0.010498   29.598877      -18.838867     1.0      3627.876709         False          False   False
8    3728.611328    3724.762451 -10105.250244  3728.611328   52.276123  3724.762451   0.010498    3.838379      -96.161621     1.0      3627.876709         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1446143/4096.[0m
[08/10 12:53:34]  --------------------------------------------------------------------------------
[08/10 12:53:34]  Iteration: 44 (0 solution, 43 counterexamples)
[08/10 12:53:39]  Generator returned sat in 3.625609 secs.
[08/10 12:53:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:39]  Improved gap from 1/600 to 100
[08/10 12:53:39]  Improved number of small numbers from 83 to 114 out of a max of 114
[08/10 12:53:39]  Verifer returned sat in 0.386747 secs.
[08/10 12:53:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3574.815918    3074.814453 -10255.302246  3574.815918    0.002686  3074.814453   0.000000  500.001465      400.001465     3.0      3074.814453            -1             -1    True
1    3574.815918    3174.820801 -10255.302246  3574.815918  400.000000  3174.820801   0.000000  399.995117      300.001465     3.0      3074.814453         False          False    True
2    3574.818359    3274.814453 -10255.302246  3574.818359  399.997559  3274.814453   0.000000  300.003906      200.003906     4.0      3574.818359         False          False    True
3    3674.812012    3474.814453 -10255.302246  3674.812012  399.997559  3474.814453   0.000000  199.997559      199.997559     5.0      3574.818359         False          False    True
4    3674.812012    3474.816895 -10255.302246  3674.812012    0.010000  3474.816895   0.000000  199.995117       99.997559     6.0      3574.818359         False          False    True
5    3674.812012    3574.815674 -10255.302246  3674.812012    0.010000  3574.815674   0.000000   99.996338       -0.002441     7.0      3574.818359         False          False    True
6    3875.816895    3674.814453 -10255.302246  3875.816895  301.001221  3674.814453   0.000000  201.002441      101.002441     1.0      3574.818359         False           True   False
7    3875.816895    3874.814453 -10255.302246  3875.816895  201.000000  3874.814453   0.000000    1.002441        1.002441     2.0      3574.818359         False          False   False
8    4275.812012    3874.817139 -10255.302246  4275.812012  400.997559  3874.817139   0.992432  400.002441      300.005127     3.0      3574.818359         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=1228821/4096.[0m
[08/10 12:53:40]  --------------------------------------------------------------------------------
[08/10 12:53:40]  Iteration: 45 (0 solution, 44 counterexamples)
[08/10 12:53:44]  Generator returned sat in 3.502729 secs.
[08/10 12:53:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:45]  Improved gap from 1/1200 to 100
[08/10 12:53:45]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 12:53:45]  Verifer returned sat in 0.481804 secs.
[08/10 12:53:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3185.664307    2777.914551 -10255.302246  3185.664307  407.699951  2777.914551   0.000000  407.749756      307.750000     4.0      2777.914551            -1             -1   False
1    3185.664307    2970.364502 -10255.302246  3185.664307  407.699951  2970.364502   0.000000  215.299805      207.750000     5.0      2777.914551         False          False   False
2    3378.014404    3068.664307 -10255.302246  3378.014404  407.649902  3068.664307   0.050049  309.300049      300.050049     6.0      3377.964355          True           True   False
3    3476.314453    3077.914307 -10255.302246  3476.314453  407.600098  3077.914307   0.050049  398.350098      298.350098     7.0      3476.264404         False           True    True
4    3484.064453    3273.364258 -10255.302246  3484.064453  406.100098  3273.364258   0.050049  210.650146      206.100098     3.0      3476.264404         False           True   False
5    3678.014404    3277.914307 -10255.302246  3678.014404  404.600098  3277.914307   0.050049  400.050049      300.050049     4.0      3476.264404         False          False   False
6    3681.064453    3476.314453 -10255.302246  3681.064453  403.100098  3476.314453   0.050049  204.699951      203.100098     3.0      3476.264404         False          False   False
7    3877.964600    3577.914307 -10255.302246  3877.964600  401.600098  3577.914307   0.050049  300.000244      300.000244     3.0      3476.264404         False          False   False
8    3978.064453    3577.914307 -10255.302246  3978.064453  400.100098  3577.914307   0.100098  400.050049      300.050049     3.0      3476.264404         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1229005/4096.[0m
[08/10 12:53:46]  --------------------------------------------------------------------------------
[08/10 12:53:46]  Iteration: 46 (0 solution, 45 counterexamples)
[08/10 12:53:51]  Generator returned sat in 3.763039 secs.
[08/10 12:53:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:51]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 12:53:51]  Verifer returned sat in 0.147083 secs.
[08/10 12:53:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3185.664307    2777.914551 -10255.302246  3185.664307  407.699951  2777.914551   0.000000  407.749756      307.750000     4.0      2777.914551            -1             -1   False
1    3185.664307    2970.364502 -10255.302246  3185.664307  407.699951  2970.364502   0.000000  215.299805      207.750000     5.0      2777.914551         False          False   False
2    3378.014404    3076.614258 -10255.302246  3378.014404  407.649902  3076.614258   0.050049  301.350098      300.050049     6.0      3377.964355         False          False   False
3    3476.314453    3077.914307 -10255.302246  3476.314453  399.650146  3077.914307   0.050049  398.350098      298.350098     7.0      3476.264404         False           True    True
4    3478.114502    3277.314209 -10255.302246  3478.114502  400.150146  3277.314209   0.050049  200.750244      200.150146     3.0      3476.264404         False           True   False
5    3678.014404    3277.914307 -10255.302246  3678.014404  400.650146  3277.914307   0.050049  400.050049      300.050049     4.0      3476.264404         False          False   False
6    3679.114502    3476.289307 -10255.302246  3679.114502  401.150146  3476.289307   0.050049  202.775146      201.150146     3.0      3476.264404         False          False   False
7    3877.989502    3577.914307 -10255.302246  3877.989502  401.650146  3577.914307   0.050049  300.025146      300.025146     3.0      3476.264404         False          False   False
8    3980.114502    3577.914307 -10255.302246  3980.114502  402.150146  3577.914307   2.150146  400.050049      300.050049     3.0      3476.264404         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=1229005/4096.[0m
[08/10 12:53:52]  --------------------------------------------------------------------------------
[08/10 12:53:52]  Iteration: 47 (0 solution, 46 counterexamples)
[08/10 12:53:54]  Generator returned sat in 0.485547 secs.
[08/10 12:53:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:54]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 12:53:54]  Verifer returned sat in 0.190818 secs.
[08/10 12:53:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3185.664062    2777.939209 -10255.302246  3185.664062  407.699951  2777.939209   0.000000  407.724854      307.724854     4.0      2777.939209            -1             -1   False
1    3185.664062    2970.813721 -10255.302246  3185.664062  407.699951  2970.813721   0.000000  214.850342      207.724854     5.0      2777.939209         False          False   False
2    3378.488770    3074.139160 -10255.302246  3378.488770  407.675049  3074.139160   0.524658  303.824951      300.024902     6.0      3377.964111         False          False   False
3    3476.314209    3077.939209 -10255.302246  3476.314209  401.650391  3077.939209   0.524658  397.850342      297.850342     7.0      3475.789551         False           True    True
4    3480.114258    3276.313721 -10255.302246  3480.114258  401.650391  3276.313721   0.524658  203.275879      201.650391     3.0      3475.789551         False           True   False
5    3678.488770    3277.939209 -10255.302246  3678.488770  401.650391  3277.939209   0.524658  400.024902      300.024902     4.0      3475.789551         False          False   False
6    3680.114258    3475.814453 -10255.302246  3680.114258  401.650391  3475.814453   0.524658  203.775146      201.650391     3.0      3475.789551         False          False   False
7    3877.989502    3577.939209 -10255.302246  3877.989502  401.650391  3577.939209   0.524658  299.525635      299.525635     3.0      3475.789551         False          False   False
8    3980.114258    3577.939209 -10255.302246  3980.114258  401.650391  3577.939209   2.150146  400.024902      300.024902     3.0      3475.789551         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=614451/2048.[0m
[08/10 12:53:54]  --------------------------------------------------------------------------------
[08/10 12:53:54]  Iteration: 48 (0 solution, 47 counterexamples)
[08/10 12:53:56]  Generator returned sat in 0.595918 secs.
[08/10 12:53:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:53:57]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 12:53:57]  Verifer returned sat in 0.170765 secs.
[08/10 12:53:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3185.664062    2777.939209 -10255.302246  3185.664062  407.687500  2777.939209   0.000000  407.724854      307.724854     4.0      2777.939209            -1             -1   False
1    3185.664062    2970.813477 -10255.302246  3185.664062  407.687500  2970.813477   0.000000  214.850586      207.724854     5.0      2777.939209         False          False   False
2    3378.488525    3073.139160 -10255.302246  3378.488525  407.675049  3073.139160   0.524414  304.824951      300.024902     6.0      3377.964111         False          False   False
3    3476.313965    3077.939209 -10255.302246  3476.313965  402.650391  3077.939209   0.524414  397.850342      297.850342     6.0      3475.789551         False           True    True
4    3480.614014    3276.313721 -10255.302246  3480.614014  402.150391  3276.313721   0.524414  203.775879      202.150391     3.0      3475.789551         False           True   False
5    3678.488525    3277.939209 -10255.302246  3678.488525  401.650391  3277.939209   0.524414  400.024902      300.024902     4.0      3475.789551         False          False   False
6    3679.614014    3475.814453 -10255.302246  3679.614014  401.150391  3475.814453   0.524414  203.275146      201.150391     3.0      3475.789551         False          False   False
7    3876.989258    3577.939209 -10255.302246  3876.989258  400.650391  3577.939209   0.524414  298.525635      298.525635     3.0      3475.789551         False          False   False
8    3978.614014    3577.939209 -10255.302246  3978.614014  400.150391  3577.939209   0.649902  400.024902      300.024902     3.0      3475.789551         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=614451/2048.[0m
[08/10 12:53:57]  --------------------------------------------------------------------------------
[08/10 12:53:57]  Iteration: 49 (0 solution, 48 counterexamples)
[08/10 12:54:05]  Generator returned sat in 5.775504 secs.
[08/10 12:54:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:05]  Improved gap from 0 to 100
[08/10 12:54:06]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 12:54:06]  Verifer returned sat in 1.718663 secs.
[08/10 12:54:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2673.773926    2474.273818 -10255.302246  2673.773926  407.687012  2474.273818       0.00  199.500107       99.500107     1.0      2474.273818            -1             -1   False
1    2673.973818    2673.873818 -10255.302246  2673.973818  199.700000  2673.873818       0.00    0.100000       -0.300000     1.0      2673.973818         False          False   False
2    2822.173818    2774.273818 -10255.302246  2822.173818  148.300000  2774.273818       0.00   47.900000       47.900000     1.0      2822.173818         False          False   False
3    2922.473818    2841.073818 -10255.302246  2922.473818  148.200000  2841.073818       0.10   81.300000       48.100000     1.0      2922.373818         False          False   False
4    3022.573818    2974.273818 -10255.302246  3022.573818  181.400000  2974.273818       0.20   48.100000       48.100000     1.0      2922.373818         False          False    True
5    3122.673818    3074.273818 -10255.302246  3122.673818  148.200000  3074.273818       0.30   48.100000       48.100000     1.0      2922.373818         False          False    True
6    3222.573818    3074.273818 -10255.302246  3222.573818  148.000000  3074.273818       0.30  148.000000       48.000000     1.0      2922.373818         False          False    True
7    3263.173818    3262.773818 -10255.302246  3263.173818  188.600000  3262.773818       0.30    0.100000      -11.400000     1.0      2922.373818         False          False    True
8    3499.623818    3274.273926 -10255.302246  3499.623818  236.550000  3274.273926      77.25  148.099893       48.100000     1.0      2922.373818         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=481/10.[0m
[08/10 12:54:07]  --------------------------------------------------------------------------------
[08/10 12:54:07]  Iteration: 50 (0 solution, 49 counterexamples)
[08/10 12:54:09]  Generator returned sat in 0.994110 secs.
[08/10 12:54:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:11]  Improved gap from 0 to 34.375
[08/10 12:54:12]  Improved number of small numbers from 59 to 63 out of a max of 114
[08/10 12:54:12]  Verifer returned sat in 2.754780 secs.
[08/10 12:54:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2590.194580    2590.191943 -10635.515869  2590.194580    0.001465  2590.191943   0.001250   0.001387       -0.000986     1.0      2590.191943            -1             -1     -1
1    2590.196943    2590.194443 -10569.890996  2590.196943    0.003750  2590.194443   0.001250   0.001250      -34.373750     1.0      2590.191943         False          False   True
2    2724.571943    2724.569443 -10569.890996  2724.571943  134.376250  2724.569443   0.001250   0.001250        0.001250     1.0      2590.191943         False          False   True
3    2824.571943    2824.569443 -10569.890996  2824.571943  100.001250  2824.569443   0.001250   0.001250        0.001250     1.0      2824.570693         False          False   True
4    2989.760068    2924.569443 -10569.890996  2989.760068  165.189375  2924.569443  65.188125   0.002500        0.002500     1.0      2824.570693         False          False   True
5    2989.767568    2924.573193 -10504.269746  2989.767568    0.010000  2924.573193  65.188125   0.006250      -34.368750     1.0      2824.570693         False          False   True
6    3087.768193    2958.948193 -10467.901621  3087.768193   98.006875  2958.948193  65.188125  63.631875        0.000000     1.0      2824.570693         False          False   True
7    3138.329131    3022.580068 -10418.462559  3138.329131  114.192813  3022.580068  65.188125  50.560938        0.000000     2.0      2824.570693         False          False   True
8    3138.329131    3073.141006 -10352.837646  3138.329131    0.010000  3073.141006  65.188125   0.000000      -34.375088     2.0      3073.141006          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/400.[0m
[08/10 12:54:13]  --------------------------------------------------------------------------------
[08/10 12:54:13]  Iteration: 51 (0 solution, 50 counterexamples)
[08/10 12:54:21]  Generator returned sat in 6.082445 secs.
[08/10 12:54:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:21]  Improved gap from 0 to 100
[08/10 12:54:22]  Improved number of small numbers from 59 to 80 out of a max of 114
[08/10 12:54:22]  Verifer returned sat in 0.953109 secs.
[08/10 12:54:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2586.409912    1986.459961 -10569.890996  2586.409912   599.999756  1986.459961       0.00  599.949951      599.949844     4.0      1986.459961            -1             -1   False
1    2586.409912    1986.460068 -10569.890996  2586.409912   599.949951  1986.460068       0.00  599.949844      499.949844     5.0      2586.409912         False          False   False
2    2989.760068    2186.459961 -10569.890996  2989.760068  1003.300000  2186.459961       0.05  803.250107      803.250000     3.0      2586.409912         False          False   False
3    2989.760068    2286.459961 -10569.890996  2989.760068   404.133333  2286.459961       0.05  703.250107      703.250000     4.0      2989.710068         False          False    True
4    2989.760068    2386.409912 -10569.890996  2989.760068   403.633333  2386.409912       0.05  603.300156      603.250000     5.0      2989.710068         False          False    True
5    2989.760068    2386.460205 -10569.890996  2989.760068   403.133333  2386.460205       0.05  603.249863      503.250000     6.0      2989.710068         False          False    True
6    2989.760068    2586.460068 -10569.890996  2989.760068   603.200000  2586.460068       0.05  403.250000      403.250000     5.0      2989.710068         False           True   False
7    3489.810068    2586.510254 -10569.890996  3489.810068   903.300000  2586.510254       0.10  903.199814      803.250000     6.0      2989.710068         False          False   False
8    3489.810068    2786.459961 -10569.890996  3489.810068     1.500000  2786.459961       0.10  703.250107      703.250000     7.0      2989.710068         False           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=3213/4.[0m
[08/10 12:54:22]  --------------------------------------------------------------------------------
[08/10 12:54:22]  Iteration: 52 (0 solution, 51 counterexamples)
[08/10 12:54:28]  Generator returned sat in 4.344074 secs.
[08/10 12:54:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:29]  Improved number of small numbers from 58 to 95 out of a max of 113
[08/10 12:54:29]  Verifer returned sat in 0.929788 secs.
[08/10 12:54:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2790.435303    2590.385254 -11273.815996  2790.435303  200.099854  2590.385254        0.0  200.050049      100.050234     2.0      2590.385254            -1             -1   False
1    2790.435303    2790.385010 -11273.815996  2790.435303  200.050049  2790.385010        0.0    0.050293        0.050234     2.0      2790.435303         False          False   False
2    3290.385010    2790.385254 -11273.815996  3290.385010  500.000000  2790.385254        0.0  499.999756      399.999941     3.0      2790.435303         False          False   False
3    3290.385010    2990.385010 -11273.815996  3290.385010   59.948148  2990.385010        0.0  300.000000      299.999941     2.0      3290.385010         False          False   False
4    3290.385010    3090.334961 -11273.815996  3290.385010   89.422222  3090.334961        0.0  200.050049      199.999941     3.0      3290.385010         False          False   False
5    3290.385010    3090.385254 -11273.815996  3290.385010  133.633333  3090.385254        0.0  199.999756       99.999941     4.0      3290.385010         False          False   False
6    3290.385010    3190.385068 -11273.815996  3290.385010  199.950000  3190.385068        0.0   99.999941       -0.000059     5.0      3290.385010         False           True   False
7    3489.810068    3390.385068 -11273.815996  3489.810068  299.425000  3390.385068        0.0   99.425000       99.425000     1.0      3290.385010         False           True   False
8    3839.022568    3438.972656 -11273.815996  3839.022568  448.637500  3438.972656        0.0  400.049912      348.637500     2.0      3290.385010         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=400.[0m
[08/10 12:54:30]  --------------------------------------------------------------------------------
[08/10 12:54:30]  Iteration: 53 (0 solution, 52 counterexamples)
[08/10 12:54:32]  Generator returned sat in 0.816653 secs.
[08/10 12:54:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:33]  Improved number of small numbers from 93 to 95 out of a max of 113
[08/10 12:54:33]  Verifer returned sat in 0.410660 secs.
[08/10 12:54:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2790.435059    2590.385254 -11273.815996  2790.435059  200.099854  2590.385254        0.0  200.049805      100.049990     2.0      2590.385254            -1             -1   False
1    2790.435303    2790.384766 -11273.815996  2790.435303  200.050049  2790.384766        0.0    0.050537        0.050234     2.0      2790.435303         False          False   False
2    3290.384766    2790.385254 -11273.815996  3290.384766  500.000000  2790.385254        0.0  499.999512      399.999697     3.0      2790.435303         False          False   False
3    3290.384766    2990.384766 -11273.815996  3290.384766   60.651852  2990.384766        0.0  300.000000      299.999697     2.0      3290.384766         False          False   False
4    3290.384766    3090.334717 -11273.815996  3290.384766   89.977778  3090.334717        0.0  200.050049      199.999697     3.0      3290.384766         False          False   False
5    3290.384766    3090.385254 -11273.815996  3290.384766  133.966667  3090.385254        0.0  199.999512       99.999697     4.0      3290.384766         False          False   False
6    3290.384766    3190.385068 -11273.815996  3290.384766  199.950000  3190.385068        0.0   99.999697       -0.000303     5.0      3290.384766         False           True   False
7    3489.310068    3390.385068 -11273.815996  3489.310068  298.925000  3390.385068        0.0   98.925000       98.925000     1.0      3290.384766         False           True   False
8    3837.772568    3437.772217 -11273.815996  3837.772568  447.387500  3437.772217        0.0  400.000352      347.387500     2.0      3290.384766         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=400.[0m
[08/10 12:54:33]  --------------------------------------------------------------------------------
[08/10 12:54:33]  Iteration: 54 (0 solution, 53 counterexamples)
[08/10 12:54:36]  Generator returned sat in 1.140837 secs.
[08/10 12:54:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:36]  Improved gap from 0 to 100
[08/10 12:54:37]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 12:54:37]  Verifer returned sat in 0.395937 secs.
[08/10 12:54:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2556.043945    2456.043701 -11039.474609  2556.043945  200.099854  2456.043701   0.000000  100.000244      100.000244     3.0      2456.043701            -1             -1   False
1    2556.046387    2556.043701 -11039.474609  2556.046387  100.002686  2556.043701   0.000000    0.002686        0.002686     3.0      2556.046387         False          False   False
2    3290.384766    2556.043701 -11039.474609  3290.384766  734.341064  2556.043701   0.000000  734.341064      634.341064     3.0      2556.046387         False          False   False
3    3290.384766    2756.041504 -11039.474609  3290.384766  239.150391  2756.041504   0.000000  534.343262      534.341064     2.0      3290.384766         False          False   False
4    3290.384766    2756.043945 -11039.474609  3290.384766  357.225586  2756.043945   0.000000  534.340820      434.341064     3.0      3290.384766         False          False   False
5    3290.384766    2890.382324 -11039.474609  3290.384766  534.338379  2890.382324   0.000000  400.002441      334.341064     4.0      3290.384766         False          False   False
6    3690.389893    3056.043701 -11039.474609  3690.389893  800.007568  3056.043701   0.002686  634.343506      634.343506     5.0      3290.384766         False           True   False
7    3690.389893    3156.043701 -11039.474609  3690.389893    0.010000  3156.043701   0.002686  534.343506      534.343506     6.0      3290.384766         False           True    True
8    3690.389893    3156.043945 -11039.474609  3690.389893    0.010000  3156.043945   0.002686  534.343262      434.343506     7.0      3290.384766         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=2598271/4096.[0m
[08/10 12:54:37]  --------------------------------------------------------------------------------
[08/10 12:54:37]  Iteration: 55 (0 solution, 54 counterexamples)
[08/10 12:54:43]  Generator returned sat in 4.589057 secs.
[08/10 12:54:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:44]  Improved gap from 1/1600 to 100
[08/10 12:54:45]  Improved number of small numbers from 60 to 66 out of a max of 114
[08/10 12:54:45]  Verifer returned sat in 1.231579 secs.
[08/10 12:54:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3157.148193    3057.148226 -11640.579134  3157.148193   99.999756  3057.148226      0.000   99.999967       99.999967     2.0      3057.148226            -1             -1   False
1    3157.148193    3057.148226 -11640.579134  3157.148193   99.999756  3057.148226      0.000   99.999967       -0.000033     2.0      3057.148226         False          False   False
2    3305.148226    3157.173226 -11640.579134  3305.148226  248.000000  3157.173226      0.025  147.950000       47.975000     1.0      3057.148226         False          False   False
3    3405.198226    3357.148226 -11640.579134  3405.198226  248.000000  3357.148226      0.075   47.975000       47.975000     1.0      3057.148226         False          False    True
4    3505.223226    3446.148226 -11640.579134  3505.223226  148.000000  3446.148226      0.100   58.975000       47.975000     1.0      3057.148226         False          False    True
5    3638.748226    3523.823226 -11640.579134  3638.748226  192.500000  3523.823226     33.625   81.300000       47.975000     1.0      3057.148226         False          False    True
6    3738.773226    3657.148226 -11640.579134  3738.773226  181.325000  3657.148226     33.650   47.975000       47.975000     1.0      3057.148226         False          False    True
7    3838.798226    3753.481559 -11640.579134  3838.798226  148.000000  3753.481559     33.675   51.641667       47.975000     1.0      3057.148226         False          False    True
8    3938.823226    3805.148438 -11640.579134  3938.823226  151.666667  3805.148438     33.700   99.974788       47.975000     1.0      3057.148226         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=5, buffer=1919/40.[0m
[08/10 12:54:45]  --------------------------------------------------------------------------------
[08/10 12:54:45]  Iteration: 56 (0 solution, 55 counterexamples)
[08/10 12:54:48]  Generator returned sat in 1.037520 secs.
[08/10 12:54:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:48]  Improved gap from 1/600 to 0
[08/10 12:54:49]  Improved number of small numbers from 63 to 76 out of a max of 114
[08/10 12:54:49]  Verifer returned sat in 1.015844 secs.
[08/10 12:54:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3338.755127    3038.756559 -11640.579134  3338.755127    0.001709  3038.756559   0.000000  299.998568      299.998568     2.0      3038.756559            -1             -1   False
1    3388.771559    3138.756559 -11640.579134  3388.771559  350.015000  3138.756559   0.001667  250.013333      250.013333     2.0      3038.756559         False          False   False
2    3538.764893    3138.756559 -11640.579134  3538.764893  400.006667  3138.756559  49.995000  350.013333      250.013333     2.0      3038.756559         False          False    True
3    3588.758226    3338.756348 -11640.579134  3588.758226  400.006667  3338.756348  49.995000  200.006878      200.006667     3.0      3038.756559         False          False    True
4    3588.758226    3388.770020 -11640.579134  3588.758226    0.010000  3388.770020  49.995000  149.993206      100.006667     3.0      3038.756559         False          False    True
5    3588.758226    3488.771484 -11640.579134  3588.758226    0.010000  3488.771484  49.995000   49.991742        0.006667     3.0      3038.756559         False          False    True
6    3588.758226    3538.756559 -11540.587402  3588.758226    0.010000  3538.756559  49.995000    0.006667       -0.001602     4.0      3038.756559         False          False    True
7    3588.761559    3538.764893 -11440.589355  3588.761559    0.010000  3538.764893  49.995000    0.001667       -0.000221     1.0      3038.756559         False          False    True
8    3588.769893    3538.768311 -11440.589355  3588.769893    0.010000  3538.768311  49.995000    0.006582      -99.991888     1.0      3038.756559         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=18751/75.[0m
[08/10 12:54:50]  --------------------------------------------------------------------------------
[08/10 12:54:50]  Iteration: 57 (0 solution, 56 counterexamples)
[08/10 12:54:53]  Generator returned sat in 1.067765 secs.
[08/10 12:54:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:53]  Improved gap from 1/40 to 100
[08/10 12:54:53]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 12:54:53]  Verifer returned sat in 0.448377 secs.
[08/10 12:54:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3037.141113    2634.466553 -11640.579102  3037.141113    0.025146  2634.466553   0.000000  402.674561      399.974854     2.0      2634.466553            -1             -1   False
1    3037.141113    2737.141113 -11640.579102  3037.141113  402.650146  2737.141113   0.000000  300.000000      299.974854     2.0      2634.466553         False          False   False
2    3139.766113    2737.166260 -11640.579102  3139.766113  402.625000  2737.166260   0.024902  402.574951      302.574951     3.0      3139.741211         False          False   False
3    3139.766113    2935.091309 -11640.579102  3139.766113  402.550049  2935.091309   0.024902  204.649902      202.574951     4.0      3139.741211         False          False    True
4    3337.166260    3037.166260 -11640.579102  3337.166260  402.050049  3037.166260   0.024902  299.975098      299.975098     3.0      3139.741211         False          False    True
5    3438.741211    3037.641357 -11640.579102  3438.741211  401.550049  3037.641357   0.024902  401.074951      301.550049     4.0      3139.741211         False          False    True
6    3438.741211    3237.166260 -11640.579102  3438.741211  401.050049  3237.166260   0.024902  201.550049      201.550049     3.0      3139.741211         False          False    True
7    3637.741211    3337.166260 -11640.579102  3637.741211  400.550049  3337.166260   0.024902  300.550049      300.550049     3.0      3139.741211         False          False    True
8    3737.241211    3337.191162 -11640.579102  3737.241211  400.050049  3337.191162   0.024902  400.025146      300.050049     4.0      3139.741211         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1239347/4096.[0m
[08/10 12:54:54]  --------------------------------------------------------------------------------
[08/10 12:54:54]  Iteration: 58 (0 solution, 57 counterexamples)
[08/10 12:54:57]  Generator returned sat in 1.623327 secs.
[08/10 12:54:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:54:58]  Improved number of small numbers from 64 to 113 out of a max of 113
[08/10 12:54:58]  Verifer returned sat in 0.269321 secs.
[08/10 12:54:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3034.747559    2629.703857 -11640.579102  3034.747559    0.024902  2629.703857   0.021973  405.021729      399.993652     4.0      2629.703857            -1             -1   False
1    3034.747559    2734.728760 -11640.579102  3034.747559  405.018555  2734.728760   0.021973  299.996826      299.993652     4.0      2629.703857         False          False   False
2    3139.766113    2734.731934 -11640.579102  3139.766113  405.015381  2734.731934   0.024902  405.009277      305.009277     3.0      3139.741211         False          False   False
3    3139.766113    2930.722656 -11640.579102  3139.766113  405.006104  2930.722656   0.024902  209.018555      205.009277     4.0      3139.741211         False          False    True
4    3334.753662    3034.728760 -11640.579102  3334.753662  404.006104  3034.728760   0.024902  300.000000      299.996826     3.0      3139.741211         False          False    True
5    3437.759766    3034.731934 -11640.579102  3437.759766  403.006104  3034.731934   0.024902  403.002930      303.002930     4.0      3139.741211         False          False    True
6    3437.759766    3234.731934 -11640.579102  3437.759766  402.006104  3234.731934   0.024902  203.002930      203.002930     3.0      3139.741211         False          False    True
7    3635.762939    3334.731934 -11640.579102  3635.762939  401.006104  3334.731934   0.024902  301.006104      301.006104     3.0      3139.741211         False          False    True
8    3734.762939    3334.735107 -11640.579102  3734.762939  400.006104  3334.735107   0.024902  400.002930      300.006104     4.0      3139.741211         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=624659/2048.[0m
[08/10 12:54:58]  --------------------------------------------------------------------------------
[08/10 12:54:58]  Iteration: 59 (0 solution, 58 counterexamples)
[08/10 12:55:04]  Generator returned sat in 4.024740 secs.
[08/10 12:55:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:55:04]  Improved gap from 0 to 100
[08/10 12:55:04]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 12:55:04]  Verifer returned sat in 0.370545 secs.
[08/10 12:55:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3037.766113    2537.816162 -11640.579102  3037.766113  499.949951  2537.816162        0.0  499.949951      399.949951     3.0      2537.816162            -1             -1    True
1    3037.766113    2737.816162 -11640.579102  3037.766113  499.899902  2737.816162        0.0  299.949951      299.949951     2.0      3037.766113         False          False    True
2    3337.916016    2837.816162 -11640.579102  3337.916016  600.099854  2837.816162        0.0  500.099854      500.099854     3.0      3037.766113         False          False    True
3    3337.916016    2837.816162 -11640.579102  3337.916016  500.050049  2837.816162        0.0  500.099854      400.099854     3.0      3337.916016         False          False    True
4    3337.916016    3037.816162 -11640.579102  3337.916016  500.050049  3037.816162        0.0  300.099854      300.099854     3.0      3337.916016         False          False    True
5    3537.866211    3039.766113 -11640.579102  3537.866211  500.050049  3039.766113        0.0  498.100098      400.050049     4.0      3337.916016         False          False    True
6    3537.866211    3137.816162 -11640.579102  3537.866211  498.050049  3137.816162        0.0  400.050049      300.050049     5.0      3337.916016         False           True   False
7    3633.866211    3337.816162 -11640.579102  3633.866211  496.050049  3337.816162        0.0  296.050049      296.050049     6.0      3337.916016         False           True   False
8    3831.866211    3437.815918 -11640.579102  3831.866211  494.050049  3437.815918        0.0  394.050293      394.050049     4.0      3337.916016         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1024307/2048.[0m
[08/10 12:55:05]  --------------------------------------------------------------------------------
[08/10 12:55:05]  Iteration: 60 (0 solution, 59 counterexamples)
[08/10 12:55:10]  Generator returned sat in 3.132851 secs.
[08/10 12:55:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:55:10]  Improved gap from 1/600 to 100
[08/10 12:55:11]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 12:55:11]  Verifer returned sat in 0.557104 secs.
[08/10 12:55:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2938.865967    2738.865967 -11741.678955  2938.865967    0.050049  2738.865967        0.0  200.000000      199.949951     4.0      2738.865967            -1             -1    True
1    2938.865967    2738.916016 -11741.678955  2938.865967    0.050049  2738.916016        0.0  199.949951       99.949951     3.0      2738.865967         False          False    True
2    3437.565918    2938.916016 -11741.678955  3437.565918  698.649902  2938.916016        0.0  498.649902      498.649902     1.0      2738.865967         False          False    True
3    3437.565918    3038.866211 -11741.678955  3437.565918  397.599854  3038.866211        0.0  398.699707      398.649902     2.0      3437.565918         False          False    True
4    3437.565918    3038.916016 -11741.678955  3437.565918  398.099854  3038.916016        0.0  398.649902      298.649902     3.0      3437.565918         False          False    True
5    3437.565918    3238.916016 -11741.678955  3437.565918  398.599854  3238.916016        0.0  198.649902      198.649902     4.0      3437.565918         False          False    True
6    3638.015869    3238.916016 -11741.678955  3638.015869  399.099854  3238.916016        0.0  399.099854      299.099854     4.0      3437.565918         False          False    True
7    3638.515869    3438.916016 -11741.678955  3638.515869  399.599854  3438.916016        0.0  199.599854      199.599854     2.0      3437.565918         False          False    True
8    3839.015869    3438.966309 -11741.678955  3839.015869  400.099854  3438.966309        0.0  400.049561      300.099854     3.0      3437.565918         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=4987/10.[0m
[08/10 12:55:11]  --------------------------------------------------------------------------------
[08/10 12:55:11]  Iteration: 61 (0 solution, 60 counterexamples)
[08/10 12:55:19]  Generator returned sat in 6.322111 secs.
[08/10 12:55:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:55:21]  Improved number of small numbers from 63 to 69 out of a max of 113
[08/10 12:55:21]  Verifer returned sat in 1.591702 secs.
[08/10 12:55:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2742.923584    2654.911016 -11745.688955  2742.923584    0.002686  2654.911016     0.0000   88.012568       -0.002432     2.0      2654.911016            -1             -1    True
1    2846.916016    2742.926016 -11745.688955  2846.916016  192.005000  2742.926016     0.0000  103.990000        3.990000     1.0      2654.911016         False          False    True
2    3242.923516    2846.918516 -11745.688955  3242.923516  499.997500  2846.918516     0.0000  396.005000      299.997500     1.0      2654.911016         False          False    True
3    3342.908516    2946.911016 -11745.688955  3342.908516  495.990000  2946.911016     0.0000  395.997500      299.982500     2.0      3342.908516         False          False    True
4    3342.908516    3142.926016 -11745.688955  3342.908516  395.995000  3142.926016     0.0000  199.982500      199.982500     3.0      3342.908516         False          False    True
5    3542.923516    3242.926016 -11745.688955  3542.923516  399.997500  3242.926016     0.0000  299.997500      299.997500     3.0      3342.908516         False          False    True
6    3642.928516    3342.923516 -11745.688955  3642.928516  400.002500  3342.923516     0.0000  300.005000      300.002500     2.0      3342.908516         False          False    True
7    3742.931016    3342.926025 -11745.688955  3742.931016  400.007500  3342.926025     0.0025  400.002490      300.002500     3.0      3342.908516         False          False    True
8    3742.931016    3542.925781 -11745.688955  3742.931016    0.010000  3542.925781     0.0025  200.002734      200.002500     3.0      3342.908516         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=120001/400.[0m
[08/10 12:55:22]  --------------------------------------------------------------------------------
[08/10 12:55:22]  Iteration: 62 (0 solution, 61 counterexamples)
[08/10 12:55:26]  Generator returned sat in 1.838200 secs.
[08/10 12:55:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:55:26]  Improved gap from 0 to 100
[08/10 12:55:26]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 12:55:26]  Verifer returned sat in 0.428495 secs.
[08/10 12:55:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3342.613525    3242.813477 -12245.57666  3342.613525    0.100098  3242.813477   0.000000   99.800049       99.800049     2.0      3242.813477            -1             -1    True
1    3342.913574    3342.713379 -12245.57666  3342.913574  100.100098  3342.713379   0.000000    0.200195        0.100098     1.0      3242.813477         False          False    True
2    3342.913574    3342.813477 -12245.57666  3342.913574    0.100000  3342.813477   0.000000    0.100098      -99.899902     2.0      3342.913574         False          False    True
3    3837.013672    3442.813477 -12245.57666  3837.013672  494.200195  3442.813477   0.000000  394.200195      294.200195     1.0      3342.913574         False          False    True
4    3938.513672    3641.313477 -12245.57666  3938.513672  495.700195  3641.313477   0.000000  297.200195      295.700195     2.0      3342.913574         False          False    True
5    4138.513672    3739.813477 -12245.57666  4138.513672  497.200195  3739.813477   0.000000  398.700195      395.700195     3.0      3342.913574         False          False    True
6    4238.513672    3838.413330 -12245.57666  4238.513672  498.700195  3838.413330   0.000000  400.100342      395.700195     3.0      3342.913574         False          False    True
7    4338.613525    3842.813721 -12245.57666  4338.613525  500.200195  3842.813721   0.099854  495.699951      395.700195     4.0      3342.913574         False          False    True
8    4338.613525    4042.813477 -12245.57666  4338.613525    1.000000  4042.813477   0.099854  295.700195      295.700195     4.0      4338.513672          True           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=405197/1024.[0m
[08/10 12:55:27]  --------------------------------------------------------------------------------
[08/10 12:55:27]  Iteration: 63 (0 solution, 62 counterexamples)
[08/10 12:55:36]  Generator returned sat in 6.985008 secs.
[08/10 12:55:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:55:36]  Improved number of small numbers from 86 to 113 out of a max of 113
[08/10 12:55:36]  Verifer returned sat in 0.234048 secs.
[08/10 12:55:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3242.763672    3142.813477 -12145.576904  3242.763672    0.100098  3142.813477        0.0   99.950195       99.950195     2.0      3142.813477            -1             -1    True
1    3442.788574    3242.788330 -12145.576904  3442.788574  299.975098  3242.788330        0.0  200.000244      199.975098     1.0      3142.813477         False          False    True
2    3442.788574    3242.813477 -12145.576904  3442.788574    0.025146  3242.813477        0.0  199.975098       99.975098     2.0      3442.788574         False          False    True
3    3636.838379    3442.813477 -12145.576904  3636.838379  394.024902  3442.813477        0.0  194.024902      194.024902     1.0      3442.788574         False          False    True
4    3838.838379    3444.788574 -12145.576904  3838.838379  396.024902  3444.788574        0.0  394.049805      296.024902     2.0      3442.788574         False          False    True
5    3842.813477    3642.813477 -12145.576904  3842.813477  398.024902  3642.813477        0.0  200.000000      200.000000     2.0      3442.788574         False          False    True
6    4042.838379    3642.813477 -12145.576904  4042.838379  400.024902  3642.813477        0.0  400.024902      300.024902     2.0      3442.788574         False          False    True
7    4044.838379    3842.813477 -12145.576904  4044.838379  402.024902  3842.813477        0.0  202.024902      202.024902     3.0      3442.788574         False          False    True
8    4239.838379    3942.813477 -12145.576904  4239.838379  397.024902  3942.813477        0.0  297.024902      297.024902     3.0      4239.838379          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=614451/2048.[0m
[08/10 12:55:37]  --------------------------------------------------------------------------------
[08/10 12:55:37]  Iteration: 64 (0 solution, 63 counterexamples)
[08/10 12:55:40]  Generator returned sat in 1.481327 secs.
[08/10 12:55:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:55:40]  Improved number of small numbers from 111 to 113 out of a max of 113
[08/10 12:55:40]  Verifer returned sat in 0.152518 secs.
[08/10 12:55:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3242.763428    3142.813477 -12145.577148  3242.763428    0.099854  3142.813477        0.0   99.949951       99.949951     2.0      3142.813477            -1             -1    True
1    3442.788574    3242.807373 -12145.577148  3442.788574  299.975098  3242.807373        0.0  199.981201      199.975098     1.0      3142.813477         False          False    True
2    3442.788574    3242.813477 -12145.577148  3442.788574    0.024902  3242.813477        0.0  199.975098       99.975098     2.0      3442.788574         False          False    True
3    3638.338379    3442.813232 -12145.577148  3638.338379  395.524902  3442.813232        0.0  195.525146      195.524902     1.0      3442.788574         False          False    True
4    3839.838135    3444.288574 -12145.577148  3839.838135  397.024902  3444.288574        0.0  395.549561      297.024658     2.0      3442.788574         False          False    True
5    3842.813477    3642.813477 -12145.577148  3842.813477  398.524902  3642.813477        0.0  200.000000      200.000000     2.0      3442.788574         False          False    True
6    4042.838379    3642.813477 -12145.577148  4042.838379  400.024902  3642.813477        0.0  400.024902      300.024902     2.0      3442.788574         False          False    True
7    4044.338379    3842.813477 -12145.577148  4044.338379  401.524902  3842.813477        0.0  201.524902      201.524902     3.0      3442.788574         False          False    True
8    4240.338379    3942.813232 -12145.577148  4240.338379  397.524902  3942.813232        0.0  297.525146      297.524902     3.0      4240.338379          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=614451/2048.[0m
[08/10 12:55:41]  --------------------------------------------------------------------------------
[08/10 12:55:41]  Iteration: 65 (0 solution, 64 counterexamples)
[08/10 12:55:48]  Generator returned sat in 5.138749 secs.
[08/10 12:55:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:55:49]  Improved gap from 0 to 35.9375
[08/10 12:55:50]  Improved number of small numbers from 84 to 114 out of a max of 114
[08/10 12:55:50]  Verifer returned sat in 1.477724 secs.
[08/10 12:55:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3541.788574    3433.559570 -12336.681152  3541.788574   0.041667  3433.559570   0.041748  108.187256       95.208496     5.0      3433.559570            -1             -1     -1
1    3541.788574    3541.705078 -12336.681152  3541.788574  40.729004  3541.705078   0.041748    0.041748       -4.791504     5.0      3433.559570         False           True   True
2    3582.476074    3546.538330 -12272.618652  3582.476074  40.729248  3546.538330   0.041748   35.895996       -0.041504     1.0      3433.559570          True           True  False
3    3582.559326    3582.476074 -12208.556396  3582.559326  35.979248  3582.476074   0.041748    0.041504      -35.895996     1.0      3582.517578         False          False  False
4    3655.476074    3618.497070 -12145.577148  3655.476074  72.958252  3618.497070   0.041748   36.937256        0.000000     1.0      3582.517578         False          False  False
5    3655.476074    3655.434326 -12081.514648  3655.476074  36.895996  3655.434326   0.041748    0.000000      -35.937500     2.0      3582.517578         False          False  False
6    3708.424072    3691.455078 -12017.535400  3708.424072  52.947998  3691.455078   0.041748   16.927246      -19.010254     1.0      3582.517578         False          False  False
7    3744.486328    3727.392578 -11953.598145  3744.486328  52.989502  3727.392578   0.041748   17.052002      -19.010742     1.0      3582.517578         False          False  False
8    3780.382080    3768.455322 -11953.598145  3780.382080  52.947754  3768.455322   0.041748   11.885010      -83.114990     1.0      3582.517578         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=341/4096.[0m
[08/10 12:55:50]  --------------------------------------------------------------------------------
[08/10 12:55:50]  Iteration: 66 (0 solution, 65 counterexamples)
[08/10 12:55:57]  Generator returned sat in 5.137419 secs.
[08/10 12:55:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:55:59]  Improved gap from 0 to 14.0625
[08/10 12:55:59]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 12:55:59]  Verifer returned sat in 1.863537 secs.
[08/10 12:55:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2878.565430    2678.525879 -12336.681152  2878.565430    0.005000  2678.525879   0.041748  199.997803       99.997803     4.0      2678.525879            -1             -1    True
1    2878.565430    2778.526123 -12336.681152  2878.565430    0.002441  2778.526123   0.041748   99.997559       -0.002197     4.0      2878.523682         False          False    True
2    3078.565186    2878.526123 -12336.681152  3078.565186  299.997314  2878.526123   0.041748  199.997314       99.997559     1.0      2878.523682         False          False    True
3    3313.567871    3078.525879 -12336.681152  3313.567871  435.000000  3078.525879   0.041748  235.000244      235.000244     1.0      2878.523682         False          False    True
4    3313.567871    3178.525879 -12336.681152  3313.567871  218.000000  3178.525879   0.041748  135.000244      135.000244     2.0      2878.523682         False          False    True
5    3313.567871    3258.273438 -12336.681152  3313.567871  109.500000  3258.273438   0.041748   55.252686       35.000244     3.0      2878.523682         False          False    True
6    3313.567871    3299.463623 -12271.681396  3313.567871   55.250000  3299.463623   0.041748   14.062500        0.000000     4.0      2878.523682         False          False    True
7    3327.630371    3313.526123 -12185.743896  3327.630371   28.125000  3313.526123   0.041748   14.062500        0.000000     5.0      2878.523682         False          False    True
8    3327.630371    3327.588623 -12099.806396  3327.630371    0.010000  3327.588623   0.041748    0.000000      -14.062500     2.0      3327.588623          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=481285/2048.[0m
[08/10 12:56:00]  --------------------------------------------------------------------------------
[08/10 12:56:00]  Iteration: 67 (0 solution, 66 counterexamples)
[08/10 12:56:07]  Generator returned sat in 5.429010 secs.
[08/10 12:56:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:56:08]  Improved gap from 4101/8192 to 100
[08/10 12:56:09]  Improved number of small numbers from 42 to 58 out of a max of 114
[08/10 12:56:09]  Verifer returned sat in 1.311023 secs.
[08/10 12:56:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2779.076416    2778.534231 -12271.681396  2779.076416    0.000244  2778.534231    0.041748    0.500437        0.000254     1.0      2778.534231            -1             -1     -1
1    2779.076416    2779.034424 -12271.681396  2779.076416    0.000061  2779.034424    0.041748    0.000244      -99.999746     2.0      2779.034668         False          False   True
2    2979.076172    2879.034414 -12271.681396  2979.076172  200.000000  2879.034414    0.041748  100.000010        0.000010     1.0      2779.034668         False           True  False
3    3079.076040    2979.034414 -12271.681396  3079.076040  199.999878  2979.034414    0.041748   99.999878       -0.000122     2.0      3079.034292         False          False  False
4    3179.076345    3090.034414 -12271.681396  3179.076345  200.000183  3090.034414    0.041809   89.000122        0.000122     1.0      3079.034292         False           True  False
5    3179.076345    3179.034414 -12271.681396  3179.076345    0.500000  3179.034414    0.041809    0.000122      -99.999878     2.0      3079.034292         False          False   True
6    3478.576223    3378.534597 -12271.681396  3478.576223  299.500000  3378.534597   99.541687    0.499939        0.000122     1.0      3379.034536          True           True  False
7    3478.576284    3379.034414 -12271.681396  3478.576284    0.500000  3379.034414   99.541687    0.000183      -99.999817     2.0      3379.034536         False          False   True
8    3767.076101    3479.034424 -12271.681396  3767.076101  288.500000  3479.034424  188.041565  100.000112        0.000122     1.0      3379.034536         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=1/8192.[0m
[08/10 12:56:09]  --------------------------------------------------------------------------------
[08/10 12:56:09]  Iteration: 68 (0 solution, 67 counterexamples)
[08/10 12:56:21]  Generator returned sat in 9.609841 secs.
[08/10 12:56:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:56:23]  Improved number of small numbers from 28 to 60 out of a max of 113
[08/10 12:56:23]  Verifer returned sat in 1.438663 secs.
[08/10 12:56:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2591.033987    2391.034180 -12271.681396  2591.033987    0.000244  2391.034180   0.000061  199.999746       99.999990     7.0      2391.034180            -1             -1     -1
1    2591.033987    2491.033987 -12271.681396  2591.033987    0.000061  2491.033987   0.000061   99.999939       -0.000010     8.0      2591.033926         False          False   True
2    3081.034292    2591.033987 -12271.681396  3081.034292  590.000244  2591.033987   0.000061  490.000244      390.000295     1.0      2591.033926         False           True  False
3    3181.034231    2693.033936 -12271.681396  3181.034231  590.000183  2693.033936   0.000061  488.000234      390.000234     2.0      3181.034170         False          False  False
4    3285.034180    2891.033936 -12271.681396  3285.034180  592.000183  2891.033936   0.000061  394.000183      394.000183     3.0      3181.034170         False          False  False
5    3485.034180    2891.033936 -12271.681396  3485.034180  594.000183  2891.033936   0.000061  594.000183      494.000183     3.0      3181.034170         False          False  False
6    3487.034180    3087.034180 -12271.681396  3487.034180  596.000183  3087.034180   0.000061  399.999939      396.000183     4.0      3181.034170         False          False  False
7    3685.034424    3191.033936 -12271.681396  3685.034424  598.000183  3191.033936   0.000244  494.000244      494.000244     4.0      3181.034170         False          False  False
8    3685.034424    3291.033936 -12271.681396  3685.034424    0.500000  3291.033936   0.000244  394.000244      394.000244     4.0      3181.034170         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=2023425/4096.[0m
[08/10 12:56:23]  --------------------------------------------------------------------------------
[08/10 12:56:23]  Iteration: 69 (0 solution, 68 counterexamples)
[08/10 12:56:29]  Generator returned sat in 3.614909 secs.
[08/10 12:56:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:56:31]  Improved gap from 1/600 to 17.1875
[08/10 12:56:31]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 12:56:31]  Verifer returned sat in 1.658949 secs.
[08/10 12:56:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2942.286133    2742.335938 -12622.983398  2942.286133  400.000000  2742.335938        0.0  199.950195       99.950195     2.0      2742.335938            -1             -1    True
1    3142.286133    2942.335938 -12622.983398  3142.286133  399.950195  2942.335938        0.0  199.950195      199.950195     1.0      3142.286133         False          False    True
2    3368.385986    2942.335938 -12622.983398  3368.385986  426.050049  2942.335938        0.0  426.050049      326.050049     1.0      3142.286133         False          False    True
3    3368.385986    3142.335938 -12622.983398  3368.385986  426.000000  3142.335938        0.0  226.050049      226.050049     2.0      3368.385986         False          False    True
4    3368.385986    3242.335938 -12622.983398  3368.385986  215.000000  3242.335938        0.0  126.050049      126.050049     3.0      3368.385986         False          False    True
5    3368.385986    3318.348389 -12622.983398  3368.385986  109.500000  3318.348389        0.0   50.037598       26.050049     4.0      3368.385986         False          False    True
6    3375.098389    3344.673340 -12555.745850  3375.098389   56.750000  3344.673340        0.0   30.425049        0.000000     5.0      3368.385986         False          False    True
7    3375.098389    3375.098389 -12472.933350  3375.098389   30.375000  3375.098389        0.0    0.000000      -17.187500     2.0      3368.385986         False          False    True
8    3392.285889    3392.285889 -12390.120850  3392.285889   17.187500  3392.285889        0.0    0.000000      -17.187500     1.0      3368.385986         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1335705/4096.[0m
[08/10 12:56:31]  --------------------------------------------------------------------------------
[08/10 12:56:31]  Iteration: 70 (0 solution, 69 counterexamples)
[08/10 12:57:08]  Generator returned sat in 34.762098 secs.
[08/10 12:57:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:57:09]  Improved gap from 0 to 100
[08/10 12:57:10]  Improved number of small numbers from 81 to 95 out of a max of 114
[08/10 12:57:10]  Verifer returned sat in 1.481808 secs.
[08/10 12:57:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2942.286133    2743.385986 -12622.983398  2942.286133  399.999756  2743.385986        0.0  198.900146       99.950000     2.0      2743.385986            -1             -1    True
1    3043.335938    2842.336182 -12622.983398  3043.335938  299.949951  2842.336182        0.0  200.999756      100.999805     2.0      3043.335938         False          False    True
2    3142.286133    2942.336133 -12622.983398  3142.286133  299.949951  2942.336133        0.0  199.950000       99.950000     2.0      3043.335938         False          False    True
3    3442.286133    3043.386133 -12622.983398  3442.286133  499.950000  3043.386133        0.0  398.900000      299.950000     2.0      3043.335938         False          False    True
4    3542.336133    3142.336133 -12622.983398  3542.336133  498.950000  3142.336133        0.0  400.000000      300.000000     2.0      3043.335938         False          False    True
5    3640.286133    3261.286133 -12622.983398  3640.286133  497.950000  3261.286133        0.0  379.000000      297.950000     3.0      3043.335938         False          False    True
6    3668.736133    3442.336133 -12622.983398  3668.736133  407.450000  3442.336133        0.0  226.400000      226.400000     3.0      3668.736133          True           True   False
7    3844.536133    3542.336133 -12622.983398  3844.536133  402.200000  3542.336133        0.0  302.200000      302.200000     4.0      3668.736133         False           True   False
8    3942.436133    3542.386230 -12622.983398  3942.436133  400.100000  3542.386230        0.0  400.049902      300.100000     4.0      3668.736133         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=309453/1024.[0m
[08/10 12:57:10]  --------------------------------------------------------------------------------
[08/10 12:57:10]  Iteration: 71 (0 solution, 70 counterexamples)
[08/10 12:57:18]  Generator returned sat in 5.440361 secs.
[08/10 12:57:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:57:19]  Improved gap from 0 to 100
[08/10 12:57:20]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 12:57:20]  Verifer returned sat in 2.187486 secs.
[08/10 12:57:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2748.546143    2748.446133 -12622.983398  2748.546143  100.199951  2748.446133       0.05    0.05001        -0.04999     2.0      2748.446133            -1             -1     -1
1    2848.646133    2748.546143 -12622.983398  2848.646133  100.150000  2748.546143       0.05  100.04999         0.05000     1.0      2848.596133         False          False   True
2    2848.646133    2848.546133 -12622.983398  2848.646133    0.050049  2848.546133       0.05    0.05000       -99.95000     2.0      2848.596133         False          False   True
3    3289.996133    2951.546133 -12622.983398  3289.996133  441.400000  2951.546133       0.05  338.40000       241.40000     1.0      2848.596133         False          False   True
4    3392.496133    3053.546133 -12622.983398  3392.496133  440.900000  3053.546133       0.05  338.90000       243.90000     2.0      2848.596133         False          False   True
5    3493.996133    3248.546133 -12622.983398  3493.996133  440.400000  3248.546133       0.05  245.40000       245.40000     3.0      2848.596133         False          False   True
6    3667.796133    3348.546133 -12622.983398  3667.796133  419.200000  3348.546133       0.05  319.20000       319.20000     3.0      3667.746133          True           True  False
7    3755.696133    3448.546133 -12622.983398  3755.696133  407.100000  3448.546133       0.05  307.10000       307.10000     3.0      3667.746133         False           True  False
8    3848.646133    3448.546143 -12622.983398  3848.646133  400.050000  3448.546143       0.05  400.04999       300.05000     4.0      3667.746133         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1277/4.[0m
[08/10 12:57:21]  --------------------------------------------------------------------------------
[08/10 12:57:21]  Iteration: 72 (0 solution, 71 counterexamples)
[08/10 12:57:36]  Generator returned sat in 12.944722 secs.
[08/10 12:57:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:57:37]  Improved gap from 1/800 to 100
[08/10 12:57:37]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 12:57:37]  Verifer returned sat in 0.480783 secs.
[08/10 12:57:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3139.595947    2839.646240 -13121.183594  3139.595947    0.100098  2839.646240        0.0  299.949707      199.949707     2.0      2839.646240            -1             -1    True
1    3139.595947    2939.646240 -13121.183594  3139.595947    0.049805  2939.646240        0.0  199.949707       99.949707     2.0      3139.595947         False          False    True
2    3339.596191    3139.646240 -13121.183594  3339.596191  399.949951  3139.646240        0.0  199.949951      199.949951     1.0      3139.595947         False          False    True
3    3535.696289    3139.696045 -13121.183594  3535.696289  396.050049  3139.696045        0.0  396.000244      296.050049     2.0      3535.696289         False          False    True
4    3537.746094    3339.646240 -13121.183594  3537.746094  398.050049  3339.646240        0.0  198.099854      198.099854     2.0      3535.696289         False          False    True
5    3739.696289    3339.646240 -13121.183594  3739.696289  400.050049  3339.646240        0.0  400.050049      300.050049     2.0      3535.696289         False          False    True
6    3741.696289    3537.795898 -13121.183594  3741.696289  402.050049  3537.795898        0.0  203.900391      202.050049     2.0      3535.696289         False          False    True
7    3941.845947    3639.646240 -13121.183594  3941.845947  404.050049  3639.646240        0.0  302.199707      302.199707     3.0      3535.696289         False          False    True
8    3941.845947    3639.646240 -13121.183594  3941.845947  151.000000  3639.646240        0.0  302.199707      202.199707     3.0      3941.845947          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1511/5.[0m
[08/10 12:57:37]  --------------------------------------------------------------------------------
[08/10 12:57:37]  Iteration: 73 (0 solution, 72 counterexamples)
[08/10 12:57:44]  Generator returned sat in 4.299533 secs.
[08/10 12:57:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:57:46]  Improved gap from 1/100 to 100
[08/10 12:57:46]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 12:57:46]  Verifer returned sat in 1.863284 secs.
[08/10 12:57:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3535.836426    3535.786377 -13817.32373  3535.836426    0.049805  3535.786377   0.000000    0.050049      -99.949951     9.0      3535.786377            -1             -1     -1
1    3635.836182    3635.786377 -13817.32373  3635.836182  100.049805  3635.786377   0.000000    0.049805      -99.950195     1.0      3535.786377         False           True  False
2    4233.286377    3735.786377 -13817.32373  4233.286377  597.500000  3735.786377   0.050049  497.449951      397.449951     1.0      3535.786377         False          False  False
3    4233.286377    3835.786377 -13817.32373  4233.286377  493.799805  3835.786377   0.050049  397.449951      297.449951     2.0      4233.236328         False          False   True
4    4233.286377    4035.786377 -13817.32373  4233.286377  397.399902  4035.786377   0.050049  197.449951      197.449951     3.0      4233.236328         False           True  False
5    4435.036377    4135.786133 -13817.32373  4435.036377  399.199951  4135.786133   0.050049  299.200195      299.199951     4.0      4233.236328         False           True  False
6    4535.936035    4135.836426 -13817.32373  4535.936035  400.099854  4135.836426   0.050049  400.049561      300.099609     5.0      4233.236328         False           True  False
7    4535.936035    4324.786133 -13817.32373  4535.936035  350.574951  4324.786133   0.050049  211.099854      200.099609     3.0      4233.236328         False           True  False
8    4645.123535    4434.986328 -13817.32373  4645.123535  320.287354  4434.986328   0.050049  210.087158      209.287109     4.0      4233.236328         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1627955/4096.[0m
[08/10 12:57:47]  --------------------------------------------------------------------------------
[08/10 12:57:47]  Iteration: 74 (0 solution, 73 counterexamples)
[08/10 12:58:10]  Generator returned sat in 21.557564 secs.
[08/10 12:58:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:58:12]  Improved gap from 0 to 14.0625
[08/10 12:58:12]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/10 12:58:12]  Verifer returned sat in 1.812729 secs.
[08/10 12:58:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5009.486328    5009.286377 -13714.843506  5009.486328  100.099854  5009.286377   0.100098    0.099854      -99.899902     3.0      5009.286377            -1             -1     -1
1    5109.486572    5109.286133 -13714.843506  5109.486572  100.100098  5109.286133   0.100098    0.100342      -99.899658     1.0      5009.286377         False          False   True
2    5409.286133    5209.286133 -13714.843506  5409.286133  299.899902  5209.286133   0.100098  199.899902       99.899902     1.0      5009.286377         False          False   True
3    5628.386230    5409.286133 -13714.843506  5628.386230  419.000000  5409.286133   0.100098  219.000000      219.000000     1.0      5009.286377         False          False   True
4    5628.386230    5506.611572 -13714.843506  5628.386230  210.000000  5506.611572   0.100098  121.674561      119.000000     2.0      5009.286377         False          False   True
5    5628.386230    5575.236328 -13714.843506  5628.386230  105.500000  5575.236328   0.100098   53.049805       19.000000     3.0      5009.286377         False          False   True
6    5628.586426    5628.386475 -13648.006348  5628.586426   53.250000  5628.386475   0.100098    0.099854      -13.962646     1.0      5009.286377         False          False   True
7    5655.611572    5642.448975 -13562.068848  5655.611572   27.125000  5642.448975   0.100098   13.062500       -1.000000     1.0      5009.286377         False          False   True
8    5656.611572    5656.511475 -13562.068848  5656.611572   14.062500  5656.511475   0.100098    0.000000     -100.000000     1.0      5009.286377         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=448717/2048.[0m
[08/10 12:58:13]  --------------------------------------------------------------------------------
[08/10 12:58:13]  Iteration: 75 (0 solution, 74 counterexamples)
[08/10 12:58:18]  Generator returned sat in 2.666508 secs.
[08/10 12:58:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:58:18]  Improved gap from 1/800 to 100
[08/10 12:58:18]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 12:58:18]  Verifer returned sat in 0.430960 secs.
[08/10 12:58:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5496.423828    5396.573730 -13648.006348  5496.423828   99.999756  5396.573730        0.0   99.850098       99.850098     3.0      5396.573730            -1             -1    True
1    5496.523926    5496.473877 -13648.006348  5496.523926   99.950195  5496.473877        0.0    0.050049       -0.049805     1.0      5496.523926         False          False    True
2    5996.523926    5496.573730 -13648.006348  5996.523926  500.050049  5496.573730        0.0  499.950195      399.950195     1.0      5496.523926         False          False    True
3    5996.523926    5596.573975 -13648.006348  5996.523926  399.400146  5596.573975        0.0  399.949951      299.950195     2.0      5996.523926         False          False    True
4    5996.523926    5796.573730 -13648.006348  5996.523926  399.900146  5796.573730        0.0  199.950195      199.950195     3.0      5996.523926         False          False    True
5    6196.973877    5796.573730 -13648.006348  6196.973877  400.400146  5796.573730        0.0  400.400146      300.400146     3.0      5996.523926         False          False    True
6    6197.473877    5996.573730 -13648.006348  6197.473877  400.900146  5996.573730        0.0  200.900146      200.900146     2.0      5996.523926         False          False    True
7    6397.973877    6096.573730 -13648.006348  6397.973877  401.400146  6096.573730        0.0  301.400146      301.400146     3.0      5996.523926         False          False    True
8    6498.473877    6096.573730 -13648.006348  6498.473877  401.900146  6096.573730        0.0  401.900146      301.900146     3.0      5996.523926         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=0, buffer=400.[0m
[08/10 12:58:19]  --------------------------------------------------------------------------------
[08/10 12:58:19]  Iteration: 76 (0 solution, 75 counterexamples)
[08/10 12:58:33]  Generator returned sat in 12.048598 secs.
[08/10 12:58:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:58:34]  Improved gap from 1/20 to 0
[08/10 12:58:34]  Improved number of small numbers from 80 to 114 out of a max of 114
[08/10 12:58:34]  Verifer returned sat in 0.628621 secs.
[08/10 12:58:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5596.073486    5596.023682 -13847.506592  5596.073486  200.000000  5596.023682   0.000000    0.049805        0.049561     4.0      5596.023682            -1             -1     -1
1    5795.973877    5696.023926 -13847.506592  5795.973877  199.950195  5696.023926   0.000000   99.949951       99.949951     1.0      5795.973877         False           True  False
2    5896.023926    5795.923828 -13847.506592  5896.023926  200.000000  5795.923828   0.000000  100.100098      100.000000     2.0      5795.973877         False          False  False
3    5996.073730    5895.973633 -13847.506592  5996.073730  200.149902  5895.973633   0.049805  100.050293      100.000000     2.0      5795.973877         False          False  False
4    5996.073730    5896.023926 -13847.506592  5996.073730    1.500000  5896.023926   0.049805  100.000000        0.000000     3.0      5795.973877         False          False   True
5    5996.073730    5996.023926 -13747.506592  5996.073730    0.500000  5996.023926   0.049805    0.000000        0.000000     3.0      5996.023926          True           True  False
6    5996.573730    5996.123779 -13648.006592  5996.573730    0.500000  5996.123779   0.049805    0.400146        0.000000     1.0      5996.023926         False           True  False
7    5996.673584    5996.573730 -13548.556396  5996.673584    0.500000  5996.573730   0.049805    0.050049       -0.449951     1.0      5996.023926         False          False  False
8    5997.123535    5997.073730 -13448.556396  5997.123535    0.500000  5997.073730   0.049805    0.000000        0.000000     1.0      5996.023926         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=100.[0m
[08/10 12:58:35]  --------------------------------------------------------------------------------
[08/10 12:58:35]  Iteration: 77 (0 solution, 76 counterexamples)
[08/10 12:58:42]  Generator returned sat in 4.292883 secs.
[08/10 12:58:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:58:43]  Improved gap from 0 to 12.5
[08/10 12:58:43]  Improved number of small numbers from 85 to 95 out of a max of 114
[08/10 12:58:43]  Verifer returned sat in 1.833672 secs.
[08/10 12:58:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4852.748291    4752.748535 -13847.506592  4852.748291    0.049805  4752.748535       0.05   99.949756       99.949756     1.0      4752.748535            -1             -1     -1
1    4852.898535    4852.748535 -13847.506592  4852.898535  100.100000  4852.748535       0.05    0.100000        0.100000     1.0      4752.748535         False          False   True
2    4852.898535    4852.748535 -13847.506592  4852.898535    0.050049  4852.748535       0.05    0.100000      -99.900000     1.0      4852.848535         False          False   True
3    5152.748535    5037.817285 -13847.506592  5152.748535  299.950000  5037.817285       0.05  114.881250       99.950000     1.0      4852.848535         False          False   True
4    5189.842285    5152.748535 -13847.506592  5189.842285  151.975000  5152.748535       0.05   37.043750       37.043750     1.0      4852.848535         False          False   True
5    5230.786035    5189.842285 -13825.494141  5230.786035   77.987500  5189.842285       0.05   40.893750       -0.000049     1.0      4852.848535         False          False   True
6    5230.886035    5230.785889 -13738.044189  5230.886035   40.993750  5230.785889       0.05    0.050146      -12.450098     1.0      4852.848535         False          False   True
7    5253.332764    5253.232910 -13661.239258  5253.332764   22.496875  5253.232910       0.05    0.049854      -13.198438     1.0      4852.848535         False          False   True
8    5266.531348    5266.481201 -13661.239258  5266.531348   13.248437  5266.481201       0.05    0.000146      -99.999854     1.0      4852.848535         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=409599/4096.[0m
[08/10 12:58:44]  --------------------------------------------------------------------------------
[08/10 12:58:44]  Iteration: 78 (0 solution, 77 counterexamples)
[08/10 12:58:48]  Generator returned sat in 1.633222 secs.
[08/10 12:58:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:58:49]  Improved gap from 349037/32768 to 10.9375
[08/10 12:58:49]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 12:58:49]  Verifer returned sat in 1.096725 secs.
[08/10 12:58:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4939.852539    4839.902588 -13934.660889  4939.852539    0.050000  4839.902588        0.0  99.949951       99.949951     1.0      4839.902588            -1             -1    True
1    4939.902588    4939.902588 -13934.660889  4939.902588  100.000000  4939.902588        0.0   0.000000        0.000000     1.0      4839.902588         False          False    True
2    4939.952637    4939.902588 -13934.660889  4939.952637    0.050049  4939.902588        0.0   0.050049      -99.949951     1.0      4939.952637         False          False    True
3    5227.902588    5139.902588 -13934.660889  5227.902588  288.000000  5139.902588        0.0  88.000000       88.000000     1.0      4939.952637         False          False    True
4    5284.902588    5239.902588 -13934.660889  5284.902588  145.000000  5239.902588        0.0  45.000000       45.000000     1.0      4939.952637         False          False    True
5    5313.402588    5313.040039 -13934.660645  5313.402588   73.500000  5313.040039        0.0   0.362549      -26.499756     1.0      4939.952637         False          False    True
6    5350.790039    5339.902588 -13845.598389  5350.790039   37.750000  5339.902588        0.0  10.887451       -0.050049     1.0      4939.952637         False          False    True
7    5359.777588    5350.840088 -13756.535889  5359.777588   19.875000  5350.840088        0.0   8.937500       -2.000000     1.0      4939.952637         False          False    True
8    5361.777588    5361.777588 -13756.535645  5361.777588   10.937500  5361.777588        0.0   0.000000      -99.999756     1.0      4939.952637         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=360653/4096.[0m
[08/10 12:58:50]  --------------------------------------------------------------------------------
[08/10 12:58:50]  Iteration: 79 (0 solution, 78 counterexamples)
[08/10 12:59:09]  Generator returned sat in 16.536955 secs.
[08/10 12:59:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:59:11]  Improved gap from 175/16 to 15.625
[08/10 12:59:11]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 12:59:11]  Verifer returned sat in 1.783567 secs.
[08/10 12:59:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6033.776123    5849.400879 -15044.159424  6033.776123  199.899902  5849.400879   0.100098  184.275146       84.275146     3.0      5849.400879            -1             -1     -1
1    6049.400879    6033.775879 -15044.159424  6049.400879  199.899902  6033.775879   0.100098   15.524902       -0.100098     1.0      5849.400879         False          False   True
2    6149.500977    6049.400879 -15044.159424  6149.500977  115.625000  6049.400879   0.100098  100.000000        0.000000     1.0      6149.400879         False          False   True
3    6456.500977    6149.400879 -15044.159424  6456.500977  407.000000  6149.400879   0.100098  307.000000      207.000000     2.0      6149.400879         False          False   True
4    6456.500977    6349.400879 -15044.159424  6456.500977  205.000000  6349.400879   0.100098  107.000000      107.000000     2.0      6149.400879         False          False   True
5    6456.500977    6414.650879 -15044.159424  6456.500977  104.000000  6414.650879   0.100098   41.750000        7.000000     3.0      6149.400879         False          False   True
6    6468.250977    6468.050781 -14978.434326  6468.250977   53.500000  6468.050781   0.100098    0.100098      -15.524902     1.0      6149.400879         False          False   True
7    6496.400879    6483.675781 -14894.059326  6496.400879   28.250000  6483.675781   0.100098   12.625000       -3.000000     1.0      6149.400879         False          False   True
8    6499.400879    6499.300781 -14809.684326  6499.400879   15.625000  6499.300781   0.100098    0.000000      -15.625000     1.0      6149.400879         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=2071/10.[0m
[08/10 12:59:11]  --------------------------------------------------------------------------------
[08/10 12:59:11]  Iteration: 80 (0 solution, 79 counterexamples)
[08/10 12:59:17]  Generator returned sat in 2.877814 secs.
[08/10 12:59:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:59:19]  Improved gap from 13 to 12.5
[08/10 12:59:19]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 12:59:19]  Verifer returned sat in 1.822290 secs.
[08/10 12:59:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2572.043701    2571.943604 -15044.159424  2572.043701  199.899902  2571.943604   0.050049    0.050049      -99.949951     2.0      2571.943604            -1             -1     -1
1    2771.993652    2671.943604 -15044.159424  2771.993652  200.000000  2671.943604   0.050049  100.000000        0.000000     1.0      2571.943604         False          False   True
2    3047.143555    2771.943604 -15044.159424  3047.143555  375.149902  2771.943604   0.050049  275.149902      175.149902     2.0      2571.943604         False          False   True
3    3171.993652    2871.943604 -15044.159424  3171.993652  400.000000  2871.943604   0.050049  300.000000      200.000000     2.0      2571.943604         False          False   True
4    3171.993652    3047.093262 -15044.159424  3171.993652  200.000000  3047.093262   0.050049  124.850342      100.000000     3.0      2571.943604         False          False   True
5    3171.993652    3122.043457 -15044.159424  3171.993652  100.000000  3122.043457   0.050049   49.900146        0.000000     3.0      2571.943604         False          False   True
6    3172.093506    3171.993408 -14956.709229  3172.093506   50.000000  3171.993408   0.050049    0.050049      -12.449951     1.0      2571.943604         False          False   True
7    3197.043457    3184.543457 -14869.259277  3197.043457   25.000000  3184.543457   0.050049   12.449951       -0.050049     1.0      2571.943604         False          False   True
8    3197.093506    3197.043457 -14781.759277  3197.093506   12.500000  3197.043457   0.050049    0.000000      -12.500000     1.0      2571.943604         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=204851/1024.[0m
[08/10 12:59:19]  --------------------------------------------------------------------------------
[08/10 12:59:19]  Iteration: 81 (0 solution, 80 counterexamples)
[08/10 12:59:31]  Generator returned sat in 9.560454 secs.
[08/10 12:59:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:59:32]  Improved gap from 1/400 to 100
[08/10 12:59:33]  Improved number of small numbers from 71 to 77 out of a max of 114
[08/10 12:59:33]  Verifer returned sat in 1.090794 secs.
[08/10 12:59:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2947.142090    2847.142305 -15219.36  2947.142090    0.000488  2847.142305    0.000000   99.999785       99.997910     1.0      2847.142305            -1             -1    True
1    2947.142930    2947.142822 -15219.36  2947.142930  100.000625  2947.142822    0.000000    0.000107       -0.001250     1.0      2847.142305         False          False    True
2    3047.143555    2947.144180 -15219.36  3047.143555  100.000732  2947.144180    0.000000   99.999375       -0.000625     1.0      2847.142305         False          False    True
3    3147.144180    3047.144180 -15219.36  3147.144180  200.000000  3047.144180    0.000000  100.000000        0.000000     1.0      2847.142305         False          False    True
4    3247.146055    3247.136680 -15219.36  3247.146055  200.001875  3247.136680    0.000625    0.008750        0.001250     1.0      2847.142305         False          False    True
5    3247.147305    3247.146055 -15219.36  3247.147305    0.010000  3247.146055    0.000625    0.000625      -99.997500     1.0      2847.142305         False          False    True
6    3547.148555    3447.136680 -15219.36  3547.148555  300.001875  3447.136680  100.003125    0.008750        0.001250     1.0      2847.142305         False          False    True
7    3547.149805    3447.146055 -15219.36  3547.149805    0.010000  3447.146055  100.003125    0.000625      -99.997500     1.0      2847.142305         False          False    True
8    3747.158555    3547.144287 -15219.36  3747.158555  200.009375  3547.144287  100.013125  100.001143        0.001250     1.0      2847.142305         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=1/800.[0m
[08/10 12:59:33]  --------------------------------------------------------------------------------
[08/10 12:59:33]  Iteration: 82 (0 solution, 81 counterexamples)
[08/10 12:59:44]  Generator returned sat in 7.794402 secs.
[08/10 12:59:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 12:59:46]  Improved gap from 0 to 0
[08/10 12:59:46]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 12:59:46]  Verifer returned sat in 1.977916 secs.
[08/10 12:59:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3247.119141    3244.130371 -15616.346436  3247.119141  2.988770  3244.130371        0.0  2.988770        2.988525     5.0      3244.130371            -1             -1    True
1    3247.119141    3244.132324 -15519.334961  3247.119141  2.988281  3244.132324        0.0  2.986816        0.000000     6.0      3247.119141         False          False    True
2    3247.119629    3247.119141 -15419.345703  3247.119629  2.987305  3247.119141        0.0  0.000488       -0.010254     5.0      3247.119629         False           True   False
3    3247.136719    3247.129883 -15319.352539  3247.136719  0.017578  3247.129883        0.0  0.006836        0.000000     1.0      3247.136719         False          False   False
4    3248.629395    3247.136719 -15220.845703  3248.629395  1.499512  3247.136719        0.0  1.492676       -0.000488     2.0      3247.136719         False          False   False
5    3248.641113    3248.629883 -15120.856934  3248.641113  1.504395  3248.629883        0.0  0.011230        0.000000     1.0      3247.136719         False          False   False
6    3248.641113    3248.641113 -15020.857500  3248.641113  0.010742  3248.641113        0.0  0.000000       -0.000566     2.0      3247.136719         False          False   False
7    3248.652344    3248.641846 -14920.868164  3248.652344  0.011230  3248.641846        0.0  0.010498        0.000000     1.0      3247.136719         False          False   False
8    3248.652344    3248.652344 -14920.867920  3248.652344  0.010000  3248.652344        0.0  0.000000      -99.999756     2.0      3247.136719         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=3/2048.[0m
[08/10 12:59:46]  --------------------------------------------------------------------------------
[08/10 12:59:46]  Iteration: 83 (0 solution, 82 counterexamples)
[08/10 13:00:01]  Generator returned sat in 12.150678 secs.
[08/10 13:00:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:00:01]  Improved gap from 0 to 100
[08/10 13:00:02]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:00:02]  Verifer returned sat in 0.366098 secs.
[08/10 13:00:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2747.431641    2647.431885 -15019.747803  2747.431641  100.200195  2647.431885   0.000000   99.999756       99.899658     2.0      2647.431885            -1             -1    True
1    2747.531982    2647.531982 -15019.747803  2747.531982  100.100098  2647.531982   0.000000  100.000000        0.000000     2.0      2747.531982         False          False    True
2    2747.531982    2747.531982 -15019.747803  2747.531982    0.100098  2747.531982   0.000000    0.000000     -100.000000     2.0      2747.531982         False          False    True
3    3141.631836    2847.531982 -15019.747803  3141.631836  394.099854  2847.531982   0.000000  294.099854      194.099854     1.0      2747.531982         False          False    True
4    3243.131836    2950.231934 -15019.747803  3243.131836  395.599854  2950.231934   0.000000  292.899902      195.599854     2.0      2747.531982         False          False    True
5    3347.331787    3147.531982 -15019.747803  3347.331787  397.099854  3147.531982   0.000000  199.799805      199.799805     2.0      2747.531982         False          False    True
6    3546.131836    3247.531982 -15019.747803  3546.131836  398.599854  3247.531982   0.000000  298.599854      298.599854     2.0      2747.531982         False          False    True
7    3647.631836    3347.431885 -15019.747803  3647.631836  400.099854  3347.431885   0.000000  300.199951      300.099854     2.0      2747.531982         False          False    True
8    3749.031738    3347.531982 -15019.747803  3749.031738  401.599854  3347.531982   1.399902  400.099854      300.099854     3.0      2747.531982         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=1229209/4096.[0m
[08/10 13:00:02]  --------------------------------------------------------------------------------
[08/10 13:00:02]  Iteration: 84 (0 solution, 83 counterexamples)
[08/10 13:00:07]  Generator returned sat in 2.134902 secs.
[08/10 13:00:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:00:07]  Improved number of small numbers from 65 to 113 out of a max of 113
[08/10 13:00:07]  Verifer returned sat in 0.219468 secs.
[08/10 13:00:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2747.431641    2647.431885 -15020.572754  2747.431641  100.949951  2647.431885   0.000000   99.999756       99.074707     2.0      2647.431885            -1             -1    True
1    2748.356934    2648.356934 -15020.572754  2748.356934  100.925049  2648.356934   0.000000  100.000000        0.000000     2.0      2748.356934         False          False    True
2    2748.356934    2748.356934 -15020.572754  2748.356934    0.099854  2748.356934   0.000000    0.000000     -100.000000     2.0      2748.356934         False          False    True
3    3144.456787    2848.356934 -15020.572754  3144.456787  396.099854  2848.356934   0.000000  296.099854      196.099854     1.0      2748.356934         False          False    True
4    3245.456787    2950.231934 -15020.572754  3245.456787  397.099854  2950.231934   0.000000  295.224854      197.099854     2.0      2748.356934         False          False    True
5    3348.331787    3147.031982 -15020.572754  3348.331787  398.099854  3147.031982   0.000000  201.299805      199.974854     2.0      2748.356934         False          False    True
6    3546.131836    3248.306641 -15020.572754  3546.131836  399.099854  3248.306641   0.000000  297.825195      297.774902     2.0      2748.356934         False          False    True
7    3648.406494    3348.356934 -15020.572754  3648.406494  400.099854  3348.356934   0.000000  300.049561      300.049561     2.0      2748.356934         False          False    True
8    3749.456787    3348.381592 -15020.572754  3749.456787  401.099854  3348.381592   1.050049  400.025146      300.049805     3.0      2748.356934         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=307251/1024.[0m
[08/10 13:00:08]  --------------------------------------------------------------------------------
[08/10 13:00:08]  Iteration: 85 (0 solution, 84 counterexamples)
[08/10 13:00:17]  Generator returned sat in 6.157511 secs.
[08/10 13:00:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:00:17]  Improved gap from 1/20 to 0
[08/10 13:00:17]  Improved number of small numbers from 82 to 114 out of a max of 114
[08/10 13:00:17]  Verifer returned sat in 0.388095 secs.
[08/10 13:00:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2943.881836    2843.931641 -15020.572754  2943.881836  200.024902  2843.931641        0.0   99.950195       99.950195     1.0      2843.931641            -1             -1    True
1    3043.931641    2943.906738 -15020.572754  3043.931641  200.000000  2943.906738        0.0  100.024902      100.000000     1.0      3043.931641         False          False    True
2    3143.931641    3043.931641 -15020.572754  3143.931641  200.024902  3043.931641        0.0  100.000000      100.000000     2.0      3043.931641         False          False    True
3    3243.956543    3143.931641 -15020.572754  3243.956543  200.024902  3143.931641        0.0  100.024902      100.024902     2.0      3043.931641         False           True   False
4    3243.956543    3242.931641 -15020.572754  3243.956543    1.000000  3242.931641        0.0    1.024902        0.024902     2.0      3243.956543          True           True   False
5    3243.956543    3243.931641 -14920.597900  3243.956543    1.000000  3243.931641        0.0    0.024902       -0.000244     3.0      3243.956543         False           True   False
6    3244.931641    3244.906738 -14821.572998  3244.931641    1.000000  3244.906738        0.0    0.024902       -0.000244     1.0      3243.956543         False           True   False
7    3245.906738    3244.956787 -14722.597656  3245.906738    1.000000  3244.956787        0.0    0.949951       -0.049805     1.0      3243.956543         False          False   False
8    3245.956787    3245.956543 -14622.622803  3245.956787    1.000000  3245.956543        0.0    0.000244       -0.024902     1.0      3243.956543         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=2001/20.[0m
[08/10 13:00:18]  --------------------------------------------------------------------------------
[08/10 13:00:18]  Iteration: 86 (0 solution, 85 counterexamples)
[08/10 13:00:26]  Generator returned sat in 5.372328 secs.
[08/10 13:00:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:00:27]  Improved gap from 53/8192 to 35.9375
[08/10 13:00:27]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 13:00:27]  Verifer returned sat in 1.272606 secs.
[08/10 13:00:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3726.156641    3726.056641 -15041.110156  3726.156641     0.100  3726.056641        0.1   0.0000          0.0000     4.0      3726.056641            -1             -1     -1
1    3826.456641    3794.144141 -15041.110156  3826.456641   100.300  3794.144141        0.2  32.1125          0.2000     1.0      3726.056641         False           True   True
2    3862.494141    3826.356641 -14977.347656  3862.494141    68.150  3826.356641        0.2  35.9375          0.0000     1.0      3862.294141         False          False   True
3    3893.931641    3893.731641 -14977.347656  3893.931641    67.375  3893.731641        0.2   0.0000        -68.5625     1.0      3893.731641         False          False   True
4    3962.806641    3962.294141 -14913.285156  3962.806641    68.875  3962.294141        0.2   0.3125        -35.6250     1.0      3893.731641         False          False   True
5    4032.869141    3998.231641 -14849.222656  4032.869141    70.375  3998.231641        0.2  34.4375         -1.5000     1.0      3893.731641         False          False   True
6    4070.306641    4034.169141 -14785.160156  4070.306641    71.875  4034.169141        0.2  35.9375          0.0000     1.0      3893.731641         False          False   True
7    4107.744141    4070.106641 -14722.597656  4107.744141    73.375  4070.106641        0.2  37.4375          0.0000     2.0      3893.731641         False          False   True
8    4107.744141    4107.544141 -14722.597656  4107.744141     0.500  4107.544141        0.2   0.0000       -100.0000     2.0      4107.544141          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1/5.[0m
[08/10 13:00:28]  --------------------------------------------------------------------------------
[08/10 13:00:28]  Iteration: 87 (0 solution, 86 counterexamples)
[08/10 13:00:35]  Generator returned sat in 4.635708 secs.
[08/10 13:00:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:00:36]  Improved gap from 1/1600 to 100
[08/10 13:00:36]  Improved number of small numbers from 77 to 114 out of a max of 114
[08/10 13:00:36]  Verifer returned sat in 0.443733 secs.
[08/10 13:00:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2933.194092    2833.196777 -14849.222656  2933.194092  199.997314  2833.196777    0.000000   99.997314       -0.002441     9.0      2833.196777            -1             -1     -1
1    3033.194092    2933.196533 -14849.222656  3033.194092  199.997314  2933.196533    0.000000   99.997559       -0.002441     1.0      2833.196777         False           True  False
2    3133.191650    3033.196533 -14849.222656  3133.191650  199.995117  3033.196533    0.000000   99.995117       -0.004883     1.0      3133.191650         False          False  False
3    3133.198975    3133.196777 -14849.222656  3133.198975  100.002441  3133.196777    0.000000    0.002197      -99.997559     1.0      3133.198975         False          False  False
4    3432.196777    3233.196533 -14849.222656  3432.196777  299.000000  3233.196533    0.002686  198.997559       98.997559     1.0      3133.198975         False          False  False
5    3432.196777    3432.191406 -14849.222656  3432.196777    0.010000  3432.191406    0.002686    0.002686       -1.002441     2.0      3133.198975         False          False   True
6    3830.188965    3533.194092 -14849.222656  3830.188965  397.994873  3533.194092  197.994873   99.000000       98.997559     1.0      3632.194092          True           True  False
7    3830.188965    3533.196533 -14849.222656  3830.188965    0.010000  3533.196533  197.994873   98.997559       -1.002441     2.0      3632.194092         False          False   True
8    4030.191406    3733.196533 -14849.222656  4030.191406  299.000000  3733.196533  197.997314   98.997559       98.997559     1.0      3632.194092         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=202747/2048.[0m
[08/10 13:00:36]  --------------------------------------------------------------------------------
[08/10 13:00:36]  Iteration: 88 (0 solution, 87 counterexamples)
[08/10 13:00:48]  Generator returned sat in 9.344849 secs.
[08/10 13:00:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:00:49]  Improved gap from 0 to 0
[08/10 13:00:50]  Improved number of small numbers from 63 to 78 out of a max of 114
[08/10 13:00:50]  Verifer returned sat in 0.939589 secs.
[08/10 13:00:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3633.156494    3533.144775 -15149.205078  3633.156494    0.000732  3533.144775   0.000000  100.011719      100.008164     2.0      3533.144775            -1             -1   False
1    3633.156738    3533.148408 -15149.205078  3633.156738  100.011963  3533.148408   0.000000  100.008330        0.008408     3.0      3533.144775         False          False   False
2    3633.159658    3633.158408 -15049.216406  3633.159658  100.011250  3633.158408   0.000000    0.001250        0.000000     1.0      3633.159658          True           True   False
3    3733.169033    3733.157959 -15049.216406  3733.169033  100.010625  3733.157959   0.000625    0.010449        0.008750     1.0      3733.168408         False          False   False
4    3733.169033    3733.159658 -14949.225586  3733.169033    0.010000  3733.159658   0.000625    0.008750       -0.000430     2.0      3733.168408         False          False    True
5    3733.170283    3733.169033 -14849.235107  3733.170283    0.010000  3733.169033   0.000625    0.000625       -0.008701     1.0      3733.168408         False          False    True
6    3733.179658    3733.178408 -14749.236406  3733.179658    0.010000  3733.178408   0.000625    0.000625       -0.000625     1.0      3733.168408         False          False    True
7    3733.189033    3733.179658 -14649.245156  3733.189033    0.010000  3733.179658   0.000625    0.008750        0.000000     1.0      3733.168408         False          False    True
8    3733.190283    3733.188477 -14649.245117  3733.190283    0.010000  3733.188477   0.000625    0.001182      -99.998711     1.0      3733.168408         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=7/800.[0m
[08/10 13:00:50]  --------------------------------------------------------------------------------
[08/10 13:00:50]  Iteration: 89 (0 solution, 88 counterexamples)
[08/10 13:00:55]  Generator returned sat in 2.273810 secs.
[08/10 13:00:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:00:56]  Improved gap from 1/800 to 0
[08/10 13:00:56]  Improved number of small numbers from 36 to 114 out of a max of 114
[08/10 13:00:56]  Verifer returned sat in 0.752453 secs.
[08/10 13:00:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3633.056885    3233.078369 -14849.135010  3633.056885  100.099854  3233.078369  300.028076   99.950439       99.950439     1.0      3233.078369            -1             -1   False
1    3633.156494    3233.078369 -14849.135010  3633.156494  100.050049  3233.078369  300.028076  100.050049        0.050049     1.0      3333.128418         False          False   False
2    3633.156494    3333.078613 -14749.185303  3633.156494  100.049805  3333.078613  300.028076    0.049805       -0.000244     2.0      3333.128418         False          False   False
3    3934.706543    3433.128662 -14749.185303  3934.706543  301.599854  3433.128662  300.028076  201.549805      201.549805     1.0      3333.128418         False          False   False
4    3934.706543    3533.128418 -14749.185303  3934.706543    1.500000  3533.128418  300.028076  101.550049      101.549805     2.0      3333.128418         False          False   False
5    3934.706543    3633.078613 -14749.185303  3934.706543    1.500000  3633.078613  300.028076    1.599854        1.549805     3.0      3333.128418         False          False   False
6    3934.706543    3633.128662 -14650.735107  3934.706543    1.500000  3633.128662  300.028076    1.549805        0.000000     4.0      3634.678467          True           True   False
7    3934.706543    3634.678467 -14550.735352  3934.706543    1.500000  3634.678467  300.028076    0.000000       -0.000244     5.0      3634.678467         False           True   False
8    3936.206543    3634.728271 -14550.735352  3936.206543    1.500000  3634.728271  300.028076    1.450195      -98.500244     1.0      3634.678467         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=825753/4096.[0m
[08/10 13:00:57]  --------------------------------------------------------------------------------
[08/10 13:00:57]  Iteration: 90 (0 solution, 89 counterexamples)
[08/10 13:01:07]  Generator returned sat in 7.812234 secs.
[08/10 13:01:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:01:08]  Improved number of small numbers from 72 to 113 out of a max of 113
[08/10 13:01:08]  Verifer returned sat in 0.596318 secs.
[08/10 13:01:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3521.193604    3021.193359 -14737.250244  3521.193604    0.002686  3021.193359   0.000000  500.000244      400.000244     7.0      3021.193359            -1             -1   False
1    3521.193604    3221.193359 -14737.250244  3521.193604  413.490234  3221.193359   0.000000  300.000244      300.000244     7.0      3021.193359         False          False   False
2    3634.680908    3221.193359 -14737.250244  3634.680908  413.487549  3221.193359   0.002441  413.485107      313.485107     7.0      3634.678467         False          False   False
3    3734.678223    3325.686035 -14737.250244  3734.678223  513.482422  3325.686035   0.002441  408.989746      313.482422     8.0      3634.678467         False          False    True
4    3734.678223    3521.193359 -14737.250244  3734.678223  408.987549  3521.193359   0.002441  213.482422      213.482422     9.0      3634.678467         False          False    True
5    3931.683350    3531.678467 -14737.250244  3931.683350  410.487549  3531.678467   0.002441  400.002441      310.487549     4.0      3634.678467         False           True   False
6    3943.668457    3721.193359 -14737.250244  3943.668457  411.987549  3721.193359   0.002441  222.472656      222.472656     4.0      3634.678467         False          False   False
7    4134.683350    3734.676025 -14737.250244  4134.683350  413.487549  3734.676025   0.004883  400.002441      313.485107     3.0      3634.678467         False          False   False
8    4134.683350    3821.193604 -14737.250244  4134.683350    0.010000  3821.193604   0.004883  313.484863      213.485107     4.0      3634.678467         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1284035/4096.[0m
[08/10 13:01:09]  --------------------------------------------------------------------------------
[08/10 13:01:09]  Iteration: 91 (0 solution, 90 counterexamples)
[08/10 13:01:29]  Generator returned sat in 17.781337 secs.
[08/10 13:01:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:01:30]  Improved gap from 0 to 100
[08/10 13:01:31]  Improved number of small numbers from 52 to 60 out of a max of 114
[08/10 13:01:31]  Verifer returned sat in 1.655491 secs.
[08/10 13:01:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3134.276367    3039.467993 -14737.250244  3134.276367    0.002686  3039.467993        0.0   94.808374       -0.000623     3.0      3039.467993            -1             -1    True
1    3234.276318    3134.276990 -14737.250244  3234.276318  194.808325  3134.276990        0.0   99.999329       -0.000671     1.0      3039.467993         False          False    True
2    3335.674438    3234.276990 -14737.250244  3335.674438  201.397449  3234.276990        0.0  101.397449        1.397449     1.0      3039.467993         False          False    True
3    3734.276318    3335.675110 -14737.250244  3734.276318  499.999329  3335.675110        0.0  398.601208      299.999329     1.0      3039.467993         False          False    True
4    3734.278333    3534.276990 -14737.250244  3734.278333  398.603223  3534.276990        0.0  200.001343      200.001343     2.0      3039.467993         False          False    True
5    3934.078601    3634.276990 -14737.250244  3934.078601  399.801611  3634.276990        0.0  299.801611      299.801611     3.0      3039.467993         False          False    True
6    4034.677795    3734.276990 -14737.250244  4034.677795  400.400806  3734.276990        0.0  300.400806      300.400806     3.0      3039.467993         False          False    True
7    4134.278333    3734.277832 -14737.250244  4134.278333  400.001343  3734.277832        0.0  400.000500      300.001343     4.0      3039.467993         False          False    True
8    4134.278333    3934.276855 -14737.250244  4134.278333    0.010000  3934.276855        0.0  200.001477      200.001343     3.0      4134.278333          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1230445/4096.[0m
[08/10 13:01:32]  --------------------------------------------------------------------------------
[08/10 13:01:32]  Iteration: 92 (0 solution, 91 counterexamples)
[08/10 13:01:49]  Generator returned sat in 14.077714 secs.
[08/10 13:01:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:01:49]  Improved number of small numbers from 77 to 113 out of a max of 113
[08/10 13:01:49]  Verifer returned sat in 0.365959 secs.
[08/10 13:01:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2934.576172    2734.576172 -14737.250244  2934.576172    0.199951  2734.576172   0.000000  200.000000      200.000000     3.0      2734.576172            -1             -1   False
1    2934.576172    2834.576172 -14737.250244  2934.576172    0.100098  2834.576172   0.000000  100.000000      100.000000     3.0      2934.576172         False          False   False
2    2934.676270    2834.576172 -14737.250244  2934.676270  100.100098  2834.576172   0.000000  100.100098        0.100098     3.0      2934.576172         False          False   False
3    3232.776123    2934.576172 -14737.250244  3232.776123  398.199951  2934.576172   0.000000  298.199951      198.199951     4.0      2934.576172         False          False   False
4    3333.276123    3134.575928 -14737.250244  3333.276123  398.699951  3134.575928   0.000000  198.700195      198.699951     2.0      2934.576172         False          False   False
5    3533.775879    3232.875977 -14737.250244  3533.775879  399.199951  3232.875977   0.000000  300.899902      299.199707     2.0      2934.576172         False          False   False
6    3632.575928    3334.576172 -14737.250244  3632.575928  399.699951  3334.576172   0.000000  297.999756      297.999756     2.0      2934.576172         False          False   False
7    3734.776123    3334.576172 -14737.250244  3734.776123  400.199951  3334.576172   0.100098  400.099854      300.099854     2.0      2934.576172         False          False   False
8    3734.776123    3534.576172 -14737.250244  3734.776123    2.000000  3534.576172   0.100098  200.099854      200.099854     3.0      2934.576172         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1229209/4096.[0m
[08/10 13:01:50]  --------------------------------------------------------------------------------
[08/10 13:01:50]  Iteration: 93 (0 solution, 92 counterexamples)
[08/10 13:02:03]  Generator returned sat in 10.188552 secs.
[08/10 13:02:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:02:03]  Improved number of small numbers from 112 to 113 out of a max of 113
[08/10 13:02:03]  Verifer returned sat in 0.268032 secs.
[08/10 13:02:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3035.026367    2735.026367 -14737.250488  3035.026367  300.049805  2735.026367   0.049805  299.950195      199.950195     3.0      2735.026367            -1             -1     -1
1    3035.076172    2835.026367 -14737.250488  3035.076172  300.000000  2835.026367   0.049805  200.000000      100.000000     3.0      3035.026367         False          False   True
2    3235.075928    3034.576172 -14737.250488  3235.075928  399.999756  3034.576172   0.049805  200.449951      199.999756     3.0      3035.026367         False          False   True
3    3435.726074    3035.026367 -14737.250488  3435.726074  401.100098  3035.026367   0.049805  400.649902      300.649902     3.0      3035.026367         False          False   True
4    3435.726074    3235.026367 -14737.250488  3435.726074  400.600098  3235.026367   0.049805  200.649902      200.649902     2.0      3035.026367         False          False   True
5    3635.176270    3235.075928 -14737.250488  3635.176270  400.100098  3235.075928   0.049805  400.050537      300.100098     3.0      3035.026367         False          False   True
6    3635.176270    3435.026367 -14737.250488  3635.176270  399.600098  3435.026367   0.049805  200.100098      200.100098     4.0      3035.026367         False          False   True
7    3836.876221    3535.026123 -14737.250488  3836.876221  401.800049  3535.026123   1.199951  300.650146      300.649902     3.0      3835.676270          True           True  False
8    3836.876221    3635.026172 -14737.250488  3836.876221    2.000000  3635.026172   1.199951  200.650098      200.649902     4.0      3835.676270         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=615731/2048.[0m
[08/10 13:02:04]  --------------------------------------------------------------------------------
[08/10 13:02:04]  Iteration: 94 (0 solution, 93 counterexamples)
[08/10 13:02:20]  Generator returned sat in 12.771645 secs.
[08/10 13:02:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:02:20]  Improved gap from 1/600 to 0
[08/10 13:02:20]  Improved number of small numbers from 88 to 114 out of a max of 114
[08/10 13:02:20]  Verifer returned sat in 0.428169 secs.
[08/10 13:02:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3135.126465    3035.026123 -14737.250488  3135.126465   99.999756  3035.026123   0.100098  100.000244      100.000244     9.0      3035.026123            -1             -1     -1
1    3135.126465    3134.926270 -14737.250488  3135.126465  100.000000  3134.926270   0.100098    0.100098        0.000244     5.0      3035.026123         False           True   True
2    3235.226318    3135.026367 -14737.250488  3235.226318  100.199951  3135.026367   0.100098  100.099854        0.100098     4.0      3035.026123         False          False   True
3    3236.426270    3235.026123 -14638.650391  3236.426270  101.299805  3235.026123   0.100098    1.300049       -0.099854     2.0      3035.026123         False          False   True
4    3236.626221    3236.426270 -14540.150635  3236.626221    1.500000  3236.426270   0.100098    0.099854       -1.400146     1.0      3035.026123         False          False   True
5    3238.026367    3237.926270 -14440.150635  3238.026367    1.500000  3237.926270   0.100098    0.000000        0.000000     1.0      3035.026123         False          False   True
6    3239.526367    3237.926270 -14341.650635  3239.526367    1.500000  3237.926270   0.100098    1.500000        0.000000     1.0      3035.026123         False          False   True
7    3239.526367    3239.426270 -14241.650635  3239.526367    1.500000  3239.426270   0.100098    0.000000        0.000000     2.0      3035.026123         False          False   True
8    3241.026367    3239.526367 -14143.150635  3241.026367    1.500000  3239.526367   0.100098    1.399902        0.000000     1.0      3035.026123         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=1/5.[0m
[08/10 13:02:21]  --------------------------------------------------------------------------------
[08/10 13:02:21]  Iteration: 95 (0 solution, 94 counterexamples)
[08/10 13:02:27]  Generator returned sat in 2.797845 secs.
[08/10 13:02:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:02:27]  Improved gap from 0 to 0
[08/10 13:02:28]  Improved number of small numbers from 59 to 101 out of a max of 114
[08/10 13:02:28]  Verifer returned sat in 1.175213 secs.
[08/10 13:02:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3177.818848    2777.825195 -14737.242920  3177.818848    0.000977  2777.825195        0.0  399.993652      299.993695     8.0      2777.825195            -1             -1     -1
1    3177.818848    2877.825195 -14737.242920  3177.818848    0.001221  2877.825195        0.0  299.993652      199.993695     2.0      2777.825195         False           True  False
2    3177.818848    3077.824951 -14737.242920  3177.818848  299.993164  3077.824951        0.0   99.993896       99.993695     3.0      2777.825195         False          False  False
3    3377.816895    3177.824951 -14737.242920  3377.816895  299.991943  3177.824951        0.0  199.991943      199.991742     1.0      3377.816895         False          False  False
4    3377.816895    3277.824951 -14737.242920  3377.816895    0.010000  3277.824951        0.0   99.991943       99.991742     2.0      3377.816895         False          False  False
5    3377.816895    3377.815965 -14737.242676  3377.816895    0.010000  3377.815965        0.0    0.000930       -0.008014     3.0      3377.816895         False          False  False
6    3377.825965    3377.824965 -14637.251709  3377.825965    0.010000  3377.824965        0.0    0.001000       -0.007977     1.0      3377.816895         False          False  False
7    3377.834965    3377.833965 -14537.252930  3377.834965    0.010000  3377.833965        0.0    0.001000       -0.000197     1.0      3377.816895         False          False  False
8    3377.843965    3377.835938 -14537.252686  3377.843965    0.010000  3377.835938        0.0    0.008027      -99.990953     1.0      3377.816895         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819179/4096.[0m
[08/10 13:02:29]  --------------------------------------------------------------------------------
[08/10 13:02:29]  Iteration: 96 (0 solution, 95 counterexamples)
[08/10 13:02:48]  Generator returned sat in 16.116267 secs.
[08/10 13:02:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:02:49]  Improved gap from 0 to 23.4375
[08/10 13:02:49]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:02:49]  Verifer returned sat in 1.158159 secs.
[08/10 13:02:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3277.808838    2977.811279 -14337.251709  3277.808838    0.002441  2977.811279   0.000000  299.997559      199.997559     3.0      2977.811279            -1             -1   False
1    3277.808838    3077.811279 -14337.251709  3277.808838  299.995117  3077.811279   0.000000  199.997559       99.997559     2.0      2977.811279         False          False   False
2    3277.813721    3277.811279 -14337.251709  3277.813721  200.002441  3277.811279   0.000000    0.002441        0.002441     1.0      3277.813721         False          False   False
3    3289.533691    3289.531250 -14337.251709  3289.533691   11.722412  3289.531250   0.000000    0.002441      -88.277588     1.0      3289.533691         False          False   False
4    3601.251221    3474.688721 -14337.251709  3601.251221  311.719971  3474.688721   0.002441  126.560059      123.437500     1.0      3289.533691         False          False   False
5    3601.251221    3477.811523 -14337.251709  3601.251221    0.500000  3477.811523   0.002441  123.437256       23.437500     2.0      3289.533691         False          False    True
6    3601.251221    3577.811279 -14260.689209  3601.251221    0.010000  3577.811279   0.002441   23.437500        0.000000     3.0      3289.533691         False          False    True
7    3601.251221    3601.248779 -14184.126709  3601.251221    0.010000  3601.248779   0.002441    0.000000      -23.437500     4.0      3289.533691         False          False    True
8    3727.811279    3624.686523 -14184.126709  3727.811279  126.560059  3624.686523   0.002441  103.122314        3.122559     1.0      3727.808838          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1975/16.[0m
[08/10 13:02:50]  --------------------------------------------------------------------------------
[08/10 13:02:50]  Iteration: 97 (0 solution, 96 counterexamples)
[08/10 13:03:14]  Generator returned sat in 21.463626 secs.
[08/10 13:03:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:03:15]  Improved gap from 0 to 100
[08/10 13:03:16]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:03:16]  Verifer returned sat in 1.356716 secs.
[08/10 13:03:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2076.601074    1976.701416 -13336.141602  2076.601074  200.000000  1976.701416   0.000000   99.899658       -0.100098     1.0      1976.701416            -1             -1   False
1    2176.601318    2076.701172 -13336.141602  2176.601318  199.899902  2076.701172   0.000000   99.900146       -0.099854     1.0      2176.601318         False          False   False
2    2676.701172    2176.701416 -13336.141602  2676.701172  600.000000  2176.701416   0.100098  499.899658      399.899902     1.0      2176.601318         False          False   False
3    2676.701172    2289.701172 -13336.141602  2676.701172  499.800049  2289.701172   0.100098  386.899902      299.899902     2.0      2676.601074         False          False    True
4    2694.201172    2476.701172 -13336.141602  2694.201172  404.399902  2476.701172   0.100098  217.399902      217.399902     3.0      2676.601074         False           True   False
5    2877.001221    2476.801270 -13336.141602  2877.001221  400.199951  2476.801270   0.100098  400.099854      300.199951     4.0      2676.601074         False           True   False
6    2877.001221    2676.701172 -13336.141602  2877.001221  348.149902  2676.701172   0.100098  200.199951      200.199951     3.0      2676.601074         False           True   False
7    3042.376221    2767.776123 -13336.141602  3042.376221  365.574951  2767.776123   0.100098  274.500000      265.574951     3.0      2676.601074         False           True   False
8    3094.201172    2776.701416 -13336.141602  3094.201172  326.324951  2776.701416   0.100098  317.399658      217.399902     4.0      3094.101074          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=818995/2048.[0m
[08/10 13:03:16]  --------------------------------------------------------------------------------
[08/10 13:03:16]  Iteration: 98 (0 solution, 97 counterexamples)
[08/10 13:03:24]  Generator returned sat in 4.156288 secs.
[08/10 13:03:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:03:24]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/10 13:03:24]  Verifer returned sat in 0.368187 secs.
[08/10 13:03:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2370.698242    2370.697754 -13634.140869  2370.698242  199.999756  2370.697754   0.000000    0.000488       -4.001953     6.0      2370.697754            -1             -1     -1
1    2472.699219    2472.698730 -13634.140869  2472.699219  102.001465  2472.698730   0.000000    0.000488       -2.000977     1.0      2472.699219         False           True  False
2    2574.700195    2574.699707 -13634.140869  2574.700195  102.001465  2574.699707   0.000000    0.000488        0.000000     1.0      2472.699219         False          False  False
3    2676.701172    2574.700195 -13634.140869  2676.701172  102.001465  2574.700195   0.000000  102.000977        2.000977     2.0      2472.699219         False          False  False
4    2776.702637    2774.700195 -13634.140869  2776.702637  202.002441  2774.700195   0.000732    2.001709        2.001709     1.0      2776.701904          True           True  False
5    2776.702637    2776.701416 -13634.140869  2776.702637    0.010000  2776.701416   0.000732    0.000488      -97.998291     2.0      2776.701904         False          False   True
6    2976.703857    2974.700195 -13634.140869  2976.703857  200.001709  2974.700195   0.001953    2.001709        2.001709     1.0      2776.701904         False           True  False
7    2976.703857    2976.701416 -13634.140869  2976.703857    0.010000  2976.701416   0.001953    0.000488      -97.998291     2.0      2776.701904         False          False   True
8    3176.704590    3074.700439 -13634.140869  3176.704590  200.001221  3074.700439   0.002686  102.001465        2.001709     1.0      3176.701904          True           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=3, buffer=8199/4096.[0m
[08/10 13:03:25]  --------------------------------------------------------------------------------
[08/10 13:03:25]  Iteration: 99 (0 solution, 98 counterexamples)
[08/10 13:03:36]  Generator returned sat in 7.869186 secs.
[08/10 13:03:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:03:37]  Improved gap from 0 to 25.0
[08/10 13:03:37]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 13:03:37]  Verifer returned sat in 1.433041 secs.
[08/10 13:03:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2481.190674    2456.188232 -13709.140869  2481.190674    0.001221  2456.188232   0.001221  25.001221       25.000000     4.0      2456.188232            -1             -1     -1
1    2481.190674    2456.189453 -13634.140869  2481.190674    0.002686  2456.189453   0.001221  25.000000        0.000000     2.0      2456.188232         False           True   True
2    2481.190674    2481.189453 -13559.140869  2481.190674    0.001465  2481.189453   0.001221   0.000000      -25.000000     3.0      2481.189453         False          False   True
3    2631.190430    2605.691895 -13559.140869  2631.190430  149.999756  2605.691895   0.001221  25.497314       24.999756     1.0      2481.189453         False           True  False
4    2754.696777    2706.188232 -13559.140869  2754.696777  149.003662  2706.188232  23.507324  25.001221       25.000000     1.0      2481.189453         False          False  False
5    2754.696777    2706.189453 -13484.140869  2754.696777    2.000000  2706.189453  23.507324  25.000000        0.000000     2.0      2481.189453         False          False   True
6    2754.696777    2731.189453 -13409.140869  2754.696777    0.010000  2731.189453  23.507324   0.000000      -25.000000     3.0      2481.189453         False          False   True
7    2879.694336    2756.189453 -13409.138428  2879.694336  124.997559  2756.189453  23.507324  99.997559        0.000000     1.0      2856.187012          True           True  False
8    2879.694336    2856.187012 -13409.138428  2879.694336   49.501221  2856.187012  23.507324   0.000000     -100.000000     2.0      2856.187012         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=25.[0m
[08/10 13:03:38]  --------------------------------------------------------------------------------
[08/10 13:03:38]  Iteration: 100 (0 solution, 99 counterexamples)
[08/10 13:03:57]  Generator returned sat in 15.979970 secs.
[08/10 13:03:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:03:58]  Improved gap from 0 to 100
[08/10 13:03:58]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 13:03:58]  Verifer returned sat in 1.016800 secs.
[08/10 13:03:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2239.072021    2239.022217 -13709.140869  2239.072021    0.050000  2239.022217        0.0    0.049805      -25.469971     8.0      2239.022217            -1             -1     -1
1    2464.542236    2264.542236 -13709.140869  2464.542236  225.520020  2264.542236        0.0  200.000000      100.000244     1.0      2239.022217         False           True  False
2    2464.542236    2364.541992 -13709.140869  2464.542236  199.949951  2364.541992        0.0  100.000244        0.000244     2.0      2464.542236         False          False  False
3    2896.106934    2498.857178 -13709.140869  2896.106934  531.564941  2498.857178        0.0  397.249756      331.564941     1.0      2464.542236         False          False  False
4    2896.106934    2664.541992 -13709.140869  2896.106934  397.199951  2664.541992        0.0  231.564941      231.564941     2.0      2464.542236         False          False  False
5    3064.641846    2664.592041 -13709.140869  3064.641846  400.099854  2664.592041        0.0  400.049805      300.099854     3.0      2464.542236         False          False  False
6    3064.641846    2864.541992 -13709.140869  3064.641846  351.574951  2864.541992        0.0  200.099854      200.099854     4.0      2464.542236         False          False  False
7    3224.671875    2964.541992 -13709.140869  3224.671875  360.129883  2964.541992        0.0  260.129883      260.129883     3.0      3224.671875          True           True  False
8    3296.106934    2964.592041 -13709.140869  3296.106934  331.564941  2964.592041        0.0  331.514893      231.564941     4.0      3224.671875         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=169787/512.[0m
[08/10 13:03:59]  --------------------------------------------------------------------------------
[08/10 13:03:59]  Iteration: 101 (0 solution, 100 counterexamples)
[08/10 13:04:12]  Generator returned sat in 9.632413 secs.
[08/10 13:04:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:04:12]  Improved gap from 1/400 to 100
[08/10 13:04:12]  Improved number of small numbers from 75 to 114 out of a max of 114
[08/10 13:04:12]  Verifer returned sat in 0.423091 secs.
[08/10 13:04:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2364.591797    2264.592041 -13909.132324  2364.591797    0.049805  2264.592041   0.001221   99.998535       99.998535     8.0      2264.592041            -1             -1     -1
1    2465.088135    2364.591797 -13909.132324  2465.088135  200.494873  2364.591797   0.001221  100.495117      100.494873     1.0      2264.592041         False           True   True
2    2465.089355    2365.837158 -13909.132324  2465.089355  100.496338  2365.837158   0.001221   99.250977        0.496094     2.0      2465.088135         False          False   True
3    2764.840820    2465.089600 -13909.132324  2764.840820  399.002441  2465.089600   0.001221  299.750000      200.247559     1.0      2465.088135         False          False   True
4    2864.593262    2664.592041 -13909.132324  2864.593262  399.502441  2664.592041   0.001221  200.000000      200.000000     2.0      2465.088135         False          False   True
5    3064.595703    2664.592041 -13909.132324  3064.595703  400.002441  2664.592041   0.002441  400.001221      300.001221     2.0      2465.088135         False          False   True
6    3064.595703    2764.840820 -13909.132324  3064.595703    0.010000  2764.840820   0.002441  299.752441      200.001221     3.0      2465.088135         False          False   True
7    3064.595703    2964.592041 -13909.132324  3064.595703  299.751221  2964.592041   0.002441  100.001221      100.001221     3.0      3064.593262          True           True  False
8    3264.594482    2964.592041 -13909.132324  3264.594482  300.000000  2964.592041   0.002441  300.000000      200.000000     3.0      3064.593262         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1228805/4096.[0m
[08/10 13:04:13]  --------------------------------------------------------------------------------
[08/10 13:04:13]  Iteration: 102 (0 solution, 101 counterexamples)
[08/10 13:04:28]  Generator returned sat in 12.525921 secs.
[08/10 13:04:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:04:29]  Improved gap from 1/1200 to 23.4375
[08/10 13:04:30]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/10 13:04:30]  Verifer returned sat in 0.991658 secs.
[08/10 13:04:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1977.114502    1883.361816 -13991.944824  1977.114502    0.002500  1883.361816    0.002441   93.750244       93.750000     2.0      1883.361816            -1             -1     -1
1    1977.114502    1883.362061 -13985.694824  1977.114502   93.750000  1883.362061    0.002441   93.750000        0.000000     3.0      1883.361816         False          False   True
2    2100.549316    1977.112061 -13985.694824  2100.549316  217.184814  1977.112061    0.002441  123.434814       23.434814     4.0      1883.361816          True           True  False
3    2194.297119    2173.991943 -13985.694824  2194.297119  217.182617  2173.991943    0.002441   20.302734       17.182617     1.0      2194.294678          True           True  False
4    2464.624512    2277.109375 -13985.694824  2464.624512  290.630127  2277.109375  164.074951   23.440186       23.437500     1.0      2194.294678         False          False  False
5    2464.624512    2277.112061 -13909.132324  2464.624512    0.500000  2277.112061  164.074951   23.437500        0.000000     2.0      2194.294678         False          False   True
6    2464.624512    2300.549561 -13909.132324  2464.624512    0.010000  2300.549561  164.074951    0.000000     -100.000000     3.0      2194.294678         False          False   True
7    2591.182129    2402.108154 -13835.689941  2591.182129  126.557617  2402.108154  164.074951   24.999023        0.000000     1.0      2427.107178          True           True  False
8    2691.181885    2427.107178 -13835.689941  2691.181885  124.998779  2427.107178  164.074951   99.999756       -0.000244     2.0      2427.107178         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=375/16.[0m
[08/10 13:04:30]  --------------------------------------------------------------------------------
[08/10 13:04:30]  Iteration: 103 (0 solution, 102 counterexamples)
[08/10 13:04:50]  Generator returned sat in 16.747054 secs.
[08/10 13:04:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:04:51]  Improved gap from 1/40 to 100
[08/10 13:04:51]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/10 13:04:51]  Verifer returned sat in 0.356614 secs.
[08/10 13:04:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2036.344482    2035.744629 -13985.694824  2036.344482    0.050049  2035.744629    0.000000    0.599854       -0.050049     1.0      2035.744629            -1             -1   False
1    2193.694824    2036.394775 -13985.694824  2193.694824  157.950195  2036.394775   57.200195  100.099854        0.100098     1.0      2035.744629         False          False   False
2    2251.494873    2178.544678 -13985.694824  2251.494873  157.899902  2178.544678   57.200195   15.750000      -42.099854     1.0      2194.294678         False          False    True
3    2393.644775    2236.394531 -13985.694824  2393.644775  157.899902  2236.394531   57.200195  100.050049        0.050049     1.0      2194.294678         False          False    True
4    2493.744629    2435.594482 -13985.694824  2493.744629  200.149902  2435.594482   57.250000    0.900146        0.100098     1.0      2194.294678         False          False    True
5    2493.844482    2436.544678 -13985.694824  2493.844482    1.000000  2436.544678   57.250000    0.049805      -99.800049     1.0      2194.294678         False          False    True
6    2751.294678    2636.394531 -13985.694824  2751.294678  257.500000  2636.394531  114.800049    0.100098        0.100098     1.0      2194.294678         False          False    True
7    2752.194580    2636.544434 -13985.694824  2752.194580    1.000000  2636.544434  114.800049    0.850098      -99.000000     1.0      2194.294678         False          False    True
8    2951.794434    2736.394775 -13985.694824  2951.794434  200.449951  2736.394775  115.299805  100.099854        0.100098     1.0      2194.294678         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down=False, total_losses=3, buffer=205/2048.[0m
[08/10 13:04:51]  --------------------------------------------------------------------------------
[08/10 13:04:51]  Iteration: 104 (0 solution, 103 counterexamples)
[08/10 13:05:00]  Generator returned sat in 5.609868 secs.
[08/10 13:05:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:05:01]  Improved number of small numbers from 75 to 113 out of a max of 113
[08/10 13:05:01]  Verifer returned sat in 0.378620 secs.
[08/10 13:05:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1749.294434    1749.269775 -13985.695068  1749.294434    0.050049  1749.269775        0.0    0.024658      -99.975342     2.0      1749.269775            -1             -1    True
1    2046.244629    1949.269531 -13985.695068  2046.244629  296.974854  1949.269531        0.0   96.975098       96.974854     1.0      1749.269775         False          False    True
2    2049.244385    2046.269531 -13985.695068  2049.244385   99.974854  2046.269531        0.0    2.974854       -0.025391     1.0      2049.244385         False          False    True
3    2451.294434    2049.269775 -13985.695068  2451.294434  405.024902  2049.269775        0.0  402.024658      302.024658     1.0      2049.244385         False          False    True
4    2453.294678    2149.269775 -13985.695068  2453.294678  404.024902  2149.269775        0.0  304.024902      204.024902     2.0      2049.244385         False          False    True
5    2552.294678    2349.269775 -13985.695068  2552.294678  403.024902  2349.269775        0.0  203.024902      203.024902     3.0      2049.244385         False          False    True
6    2751.294678    2349.269775 -13985.695068  2751.294678  402.024902  2349.269775        0.0  402.024902      302.024902     3.0      2049.244385         False          False    True
7    2751.294678    2549.269531 -13985.695068  2751.294678  401.024902  2549.269531        0.0  202.025146      202.024902     3.0      2049.244385         False          False    True
8    2949.294434    2549.269775 -13985.695068  2949.294434  400.024902  2549.269775        0.0  400.024658      300.024658     4.0      2049.244385         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1237197/4096.[0m
[08/10 13:05:01]  --------------------------------------------------------------------------------
[08/10 13:05:01]  Iteration: 105 (0 solution, 104 counterexamples)
[08/10 13:05:09]  Generator returned sat in 4.221294 secs.
[08/10 13:05:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:05:09]  Improved gap from 205/8192 to 1.5625
[08/10 13:05:10]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 13:05:10]  Verifer returned sat in 0.506335 secs.
[08/10 13:05:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1749.282227    1749.269531 -13985.695068  1749.282227    0.049805  1749.269531        0.0    0.012695      -99.987305     9.0      1749.269531            -1             -1     -1
1    2049.257080    1949.269287 -13985.695068  2049.257080  299.987549  1949.269287        0.0   99.987793       99.987549     1.0      1749.269531         False           True  False
2    2149.256836    2049.269531 -13985.695068  2149.256836  199.987549  2049.269531        0.0   99.987305       99.987305     1.0      2149.256836         False          False  False
3    2351.281982    2149.269287 -13985.695068  2351.281982  302.012451  2149.269287        0.0  202.012695      202.012451     1.0      2149.256836         False          False  False
4    2351.281982    2249.269287 -13985.695068  2351.281982    2.000000  2249.269287        0.0  102.012695      102.012451     2.0      2149.256836         False          False  False
5    2351.281982    2349.257080 -13985.695068  2351.281982    2.000000  2349.257080        0.0    2.024902        2.012451     3.0      2149.256836         False          False  False
6    2351.281982    2349.269531 -13887.707520  2351.281982    2.000000  2349.269531        0.0    2.012451        0.000000     4.0      2149.256836         False          False  False
7    2351.281982    2351.281982 -13789.270264  2351.281982    2.000000  2351.281982        0.0    0.000000       -1.562744     5.0      2351.281982          True           True  False
8    2353.281982    2352.844727 -13789.270020  2353.281982    2.000000  2352.844727        0.0    0.437256      -99.562500     1.0      2351.281982         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=413747/2048.[0m
[08/10 13:05:10]  --------------------------------------------------------------------------------
[08/10 13:05:10]  Iteration: 106 (0 solution, 105 counterexamples)
[08/10 13:05:29]  Generator returned sat in 14.992564 secs.
[08/10 13:05:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:05:29]  Improved gap from 0 to 100
[08/10 13:05:29]  Improved number of small numbers from 79 to 114 out of a max of 114
[08/10 13:05:29]  Verifer returned sat in 0.491817 secs.
[08/10 13:05:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1553.332031    1553.281982 -13789.707764  1553.332031    0.049805  1553.281982   0.000000    0.050049      -99.949951     2.0      1553.281982            -1             -1   False
1    1853.131836    1653.281982 -13789.707764  1853.131836  299.849854  1653.281982   0.000000  199.849854       99.849854     1.0      1553.281982         False          False   False
2    1853.131836    1853.081787 -13789.707764  1853.131836    0.049805  1853.081787   0.000000    0.050049       -0.150146     2.0      1853.131836         False          False   False
3    2353.231934    1953.181885 -13789.707764  2353.231934  500.150146  1953.181885   0.000000  400.050049      399.949951     1.0      1853.131836         False          False   False
4    2453.332031    2053.231934 -13789.707764  2453.332031  500.150146  2053.231934   0.000000  400.100098      400.050049     2.0      1853.131836         False          False   False
5    2553.382080    2153.181885 -13789.707764  2553.382080  500.150146  2153.181885   0.000000  400.200195      400.100098     3.0      1853.131836         False          False   False
6    2653.332031    2253.181885 -13789.707764  2653.332031  500.150146  2253.181885   0.000000  400.150146      400.050049     4.0      1853.131836         False          False   False
7    2753.332031    2353.281738 -13789.707764  2753.332031  500.150146  2353.281738   0.000000  400.050293      400.050049     4.0      1853.131836         False          False   False
8    2853.431885    2353.281982 -13789.707764  2853.431885  500.150146  2353.281982   0.049805  500.100098      400.100098     5.0      1853.131836         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=819405/2048.[0m
[08/10 13:05:30]  --------------------------------------------------------------------------------
[08/10 13:05:30]  Iteration: 107 (0 solution, 106 counterexamples)
[08/10 13:05:37]  Generator returned sat in 3.689940 secs.
[08/10 13:05:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:05:37]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 13:05:37]  Verifer returned sat in 0.182892 secs.
[08/10 13:05:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1553.332031    1553.319580 -13789.707764  1553.332031    0.049805  1553.319580   0.000000    0.012451      -99.987549     2.0      1553.319580            -1             -1   False
1    1850.782227    1653.319580 -13789.707764  1850.782227  297.462646  1653.319580   0.000000  197.462646       97.462646     1.0      1553.319580         False          False   False
2    1850.782227    1850.769775 -13789.707764  1850.782227    0.049805  1850.769775   0.000000    0.012451       -2.537354     2.0      1850.782227         False          False   False
3    2353.307129    1951.294678 -13789.707764  2353.307129  502.537354  1951.294678   0.000000  402.012451      399.987549     1.0      1850.782227         False          False   False
4    2453.332031    2051.807129 -13789.707764  2453.332031  502.037354  2051.807129   0.000000  401.524902      400.012451     2.0      1850.782227         False          False   False
5    2553.344482    2150.869873 -13789.707764  2553.344482  501.537354  2150.869873   0.000000  402.474609      400.024902     3.0      1850.782227         False          False   False
6    2651.907227    2252.794678 -13789.707764  2651.907227  501.037354  2252.794678   0.000000  399.112549      398.587646     4.0      1850.782227         False          False   False
7    2753.332031    2353.319580 -13789.707764  2753.332031  500.537354  2353.319580   0.000000  400.012451      400.012451     4.0      1850.782227         False          False   False
8    2853.356934    2353.332031 -13789.707764  2853.356934  500.037354  2353.332031   0.012451  500.012451      400.024902     5.0      1850.782227         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=819251/2048.[0m
[08/10 13:05:38]  --------------------------------------------------------------------------------
[08/10 13:05:38]  Iteration: 108 (0 solution, 107 counterexamples)
[08/10 13:05:45]  Generator returned sat in 3.371477 secs.
[08/10 13:05:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:05:45]  Improved number of small numbers from 100 to 113 out of a max of 113
[08/10 13:05:45]  Verifer returned sat in 0.179113 secs.
[08/10 13:05:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1554.819336    1554.813232 -13789.707764  1554.819336    0.049561  1554.813232   0.000000    0.006104      -99.993896     8.0      1554.813232            -1             -1   False
1    1850.781982    1654.813232 -13789.707764  1850.781982  295.968750  1654.813232   0.000000  195.968750       95.968750     1.0      1554.813232         False          False   False
2    1850.781982    1843.281982 -13789.707764  1850.781982    0.049561  1843.281982   0.000000    7.500000       -4.031250     2.0      1850.781982         False          False   False
3    2353.306885    1945.307129 -13789.707764  2353.306885  510.024902  1945.307129   0.000000  407.999756      398.493652     1.0      1850.781982         False          False   False
4    2453.332031    2048.794434 -13789.707764  2453.332031  508.024902  2048.794434   0.000000  404.537598      398.518799     2.0      1850.781982         False          False   False
5    2554.819336    2150.794678 -13789.707764  2554.819336  506.024902  2150.794678   0.000000  404.024658      400.006104     3.0      1850.781982         False          False   False
6    2654.819580    2252.794434 -13789.707764  2654.819580  504.024902  2252.794434   0.000000  402.025146      400.006348     4.0      1850.781982         False          False   False
7    2754.819336    2354.813232 -13789.707764  2754.819336  502.024902  2354.813232   0.000000  400.006104      400.006104     4.0      1850.781982         False          False   False
8    2854.838135    2354.819580 -13789.707764  2854.838135  500.024902  2354.819580   0.012451  500.006104      400.012451     5.0      1850.781982         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1638451/4096.[0m
[08/10 13:05:46]  --------------------------------------------------------------------------------
[08/10 13:05:46]  Iteration: 109 (0 solution, 108 counterexamples)
[08/10 13:06:08]  Generator returned sat in 19.410312 secs.
[08/10 13:06:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:06:09]  Improved gap from 0 to 0
[08/10 13:06:09]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 13:06:09]  Verifer returned sat in 0.694028 secs.
[08/10 13:06:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2048.109619    1848.009277 -13789.707764  2048.109619  200.099854  1848.009277        0.0  200.100342      200.100098     7.0      1848.009277            -1             -1    True
1    2048.109619    1848.109375 -13789.707764  2048.109619  200.100000  1848.109375        0.0  200.000244      100.100098     2.0      1848.009277         False          False    True
2    2048.109619    2048.009277 -13789.707764  2048.109619    0.100098  2048.009277        0.0    0.100342        0.100098     3.0      2048.109619         False          False    True
3    2148.109375    2048.009521 -13789.707764  2148.109375  100.100098  2048.009521        0.0  100.099854        0.099854     4.0      2048.109619         False          False    True
4    2148.109375    2148.009521 -13689.807861  2148.109375    0.500000  2148.009521        0.0    0.099854       -0.000244     2.0      2048.109619         False          False    True
5    2148.509521    2148.409424 -13590.507568  2148.509521    0.500000  2148.409424        0.0    0.100098       -0.299805     1.0      2048.109619         False          False    True
6    2148.909424    2148.809326 -13490.607910  2148.909424    0.500000  2148.809326        0.0    0.100098       -0.000244     1.0      2048.109619         False          False    True
7    2149.309326    2149.009277 -13391.007812  2149.309326    0.500000  2149.009277        0.0    0.300049       -0.000244     1.0      2048.109619         False          False    True
8    2149.509277    2149.309570 -13391.007812  2149.509277    0.500000  2149.309570        0.0    0.199707      -99.800293     1.0      2048.109619         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=205005/2048.[0m
[08/10 13:06:10]  --------------------------------------------------------------------------------
[08/10 13:06:10]  Iteration: 110 (0 solution, 109 counterexamples)
[08/10 13:06:30]  Generator returned sat in 16.207138 secs.
[08/10 13:06:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:06:30]  Improved gap from 411/4096 to 1.5625
[08/10 13:06:31]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:06:31]  Verifer returned sat in 0.748230 secs.
[08/10 13:06:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1952.079346    1653.779541 -13695.477539  1952.079346  298.199951  1653.779541        0.0  298.299805      198.300049     7.0      1653.779541            -1             -1    True
1    1952.079346    1853.779297 -13695.477539  1952.079346  298.200195  1853.779297        0.0   98.300049       98.300049     2.0      1653.779541         False          False    True
2    1952.079346    1853.779297 -13693.777588  1952.079346    0.099854  1853.779297        0.0   98.300049        0.000000     2.0      1952.079346         False          False    True
3    2150.279297    2052.079102 -13693.777588  2150.279297  296.500000  2052.079102        0.0   98.200195       98.199951     1.0      1952.079346         False          False    True
4    2150.279297    2150.179443 -13693.777344  2150.279297    2.000000  2150.179443        0.0    0.099854       -1.799805     2.0      1952.079346         False          False    True
5    2152.179443    2152.079102 -13595.339844  2152.179443    2.000000  2152.079102        0.0    0.100342       -1.462158     1.0      1952.079346         False          False    True
6    2154.079102    2153.979248 -13497.577393  2154.079102    2.000000  2153.979248        0.0    0.099854       -1.800049     1.0      1952.079346         False          False    True
7    2155.979248    2155.879150 -13399.140137  2155.979248    2.000000  2155.879150        0.0    0.100098       -1.462646     1.0      1952.079346         False          False    True
8    2157.879150    2157.441895 -13300.702637  2157.879150    2.000000  2157.441895        0.0    0.437256       -1.125244     1.0      1952.079346         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=402637/4096.[0m
[08/10 13:06:31]  --------------------------------------------------------------------------------
[08/10 13:06:31]  Iteration: 111 (0 solution, 110 counterexamples)
[08/10 13:06:42]  Generator returned sat in 7.121920 secs.
[08/10 13:06:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:06:43]  Improved gap from 1/200 to 10.9375
[08/10 13:06:43]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 13:06:43]  Verifer returned sat in 1.138675 secs.
[08/10 13:06:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1291.429443    1091.429443 -13133.127686  1291.429443    0.050000  1091.429443   0.050049  199.949951       99.949951     2.0      1091.429443            -1             -1     -1
1    1291.429443    1280.491943 -13133.127686  1291.429443    0.050049  1280.491943   0.050049   10.887451       -0.050049     2.0      1091.429443         False          False   True
2    1701.579346    1291.429443 -13133.127686  1701.579346  421.037354  1291.429443   0.099854  410.050049      310.050049     1.0      1091.429443         False          False   True
3    1701.579346    1491.429443 -13133.127686  1701.579346  410.000000  1491.429443   0.099854  210.050049      210.050049     2.0      1701.479492         False          False   True
4    1701.579346    1591.429199 -13133.127686  1701.579346  203.000000  1591.429199   0.099854  110.050293      110.050049     3.0      1701.479492         False          False   True
5    1701.579346    1653.729248 -13133.127686  1701.579346   99.500000  1653.729248   0.099854   47.750244       10.050049     4.0      1701.479492         False          False   True
6    1701.579346    1701.479248 -13054.114990  1701.579346   47.750000  1701.479248   0.099854    0.000244      -10.937256     5.0      1701.479492         False          False   True
7    1723.454102    1712.416748 -12965.052490  1723.454102   21.875000  1712.416748   0.099854   10.937500        0.000000     1.0      1701.479492         False          False   True
8    1723.454102    1723.354248 -12965.052490  1723.454102    8.937500  1723.354248   0.099854    0.000000     -100.000000     2.0      1701.479492         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1269965/4096.[0m
[08/10 13:06:44]  --------------------------------------------------------------------------------
[08/10 13:06:44]  Iteration: 112 (0 solution, 111 counterexamples)
[08/10 13:07:24]  Generator returned sat in 36.886322 secs.
[08/10 13:07:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:07:25]  Improved gap from 0 to 48.4375
[08/10 13:07:25]  Improved number of small numbers from 88 to 114 out of a max of 114
[08/10 13:07:25]  Verifer returned sat in 1.012148 secs.
[08/10 13:07:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1301.451660    1101.453125 -13133.12793  1301.451660    0.049805  1101.453125   0.000000  199.998535       99.998535     2.0      1101.453125            -1             -1    True
1    1349.893066    1201.453125 -13133.12793  1349.893066  248.439941  1201.453125   0.001221  148.438721       48.438721     2.0      1101.453125         False          False    True
2    1449.891602    1301.453125 -13133.12793  1449.891602  248.437256  1301.453125   0.001221  148.437256       48.437256     2.0      1449.890381         False          False    True
3    1549.890381    1454.141846 -13133.12793  1549.890381  248.436035  1454.141846   0.001221   95.747314       48.436035     1.0      1549.889160         False          False    True
4    1701.579102    1601.452881 -13133.12793  1701.579102  247.436035  1601.452881  51.687256   48.438965       48.438721     1.0      1549.889160         False          False    True
5    1701.579102    1601.454102 -13081.56665  1701.579102    1.000000  1601.454102  51.687256   48.437744        0.000000     2.0      1549.889160         False          False    True
6    1701.579102    1649.891846 -13030.00415  1701.579102    0.010000  1649.891846  51.687256    0.000000      -48.437500     3.0      1549.889160         False          False    True
7    1798.454102    1698.329346 -12978.44165  1798.454102   96.875000  1698.329346  51.687256   48.437500        0.000000     1.0      1746.766846          True           True   False
8    1798.454102    1746.766846 -12978.44165  1798.454102   47.438232  1746.766846  51.687256    0.000000     -100.000000     2.0      1746.766846         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=198405/4096.[0m
[08/10 13:07:26]  --------------------------------------------------------------------------------
[08/10 13:07:26]  Iteration: 113 (0 solution, 112 counterexamples)
[08/10 13:08:12]  Generator returned sat in 42.142462 secs.
[08/10 13:08:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:08:13]  Improved gap from 0 to 12.5
[08/10 13:08:14]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 13:08:14]  Verifer returned sat in 1.742812 secs.
[08/10 13:08:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     761.598877     761.299072 -13133.12793   761.598877    0.200000   761.299072   0.099854    0.199951        0.099854     9.0       761.299072            -1             -1     -1
1     761.598877     761.399170 -13133.12793   761.598877    0.100000   761.399170   0.099854    0.099854      -99.900146     2.0       761.499023         False           True   True
2    1192.698975     861.399170 -13133.12793  1192.698975  431.199951   861.399170   0.199951  331.099854      231.099854     1.0       761.499023         False          False   True
3    1292.599121    1061.399170 -13133.12793  1292.599121  431.000000  1061.399170   0.199951  231.000000      231.000000     2.0      1292.399170         False          False   True
4    1292.599121    1161.398926 -13133.12793  1292.599121  215.000000  1161.398926   0.199951  131.000244      131.000000     3.0      1292.399170         False          False   True
5    1292.599121    1239.299072 -13133.12793  1292.599121  107.000000  1239.299072   0.199951   53.100098       31.000000     3.0      1292.399170         False          False   True
6    1292.599121    1266.299316 -13064.12793  1292.599121   53.000000  1266.299316   0.199951   26.099854        0.000000     4.0      1292.399170         False          False   True
7    1292.599121    1292.399170 -12976.62793  1292.599121   26.000000  1292.399170   0.199951    0.000000      -12.500000     5.0      1292.399170         False          False   True
8    1305.099121    1304.899170 -12889.12793  1305.099121   12.500000  1304.899170   0.199951    0.000000      -12.500000     1.0      1292.399170         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=946585/4096.[0m
[08/10 13:08:14]  --------------------------------------------------------------------------------
[08/10 13:08:14]  Iteration: 114 (0 solution, 113 counterexamples)
[08/10 13:08:34]  Generator returned sat in 15.976289 secs.
[08/10 13:08:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:08:35]  Improved gap from 0 to 10.9375
[08/10 13:08:35]  Improved number of small numbers from 89 to 114 out of a max of 114
[08/10 13:08:35]  Verifer returned sat in 1.214305 secs.
[08/10 13:08:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1998.326172   -2498.426270 -13133.12793 -1998.326172  395.100098 -2498.426270   0.050049  500.050049      500.050049     8.0     -2498.426270            -1             -1     -1
1   -1998.326172   -2398.426270 -13133.12793 -1998.326172  395.100098 -2398.426270   0.050049  400.050049      400.050049     7.0     -2498.426270         False           True   True
2   -1998.326172   -2393.426025 -13133.12793 -1998.326172  395.050049 -2393.426025   0.050049  395.049805      300.050049     7.0     -1998.376221          True           True  False
3   -1998.326172   -2198.426270 -13133.12793 -1998.326172  395.000000 -2198.426270   0.050049  200.050049      200.050049     8.0     -1998.376221         False           True  False
4   -1998.326172   -2098.426270 -13133.12793 -1998.326172  196.000000 -2098.426270   0.050049  100.050049      100.050049     6.0     -1998.376221         False           True  False
5   -1998.326172   -2045.176270 -13133.12793 -1998.326172   96.500000 -2045.176270   0.050049   46.800049        0.050049     6.0     -1998.376221         False           True  False
6   -1998.326172   -1998.426270 -13044.06543 -1998.326172   46.750000 -1998.426270   0.050049    0.050049      -10.887451     7.0     -1998.376221         False           True  False
7   -1976.501221   -1987.488770 -12955.00293 -1976.501221   21.875000 -1987.488770   0.050049   10.937500        0.000000     1.0     -1998.376221         False           True  False
8   -1976.501221   -1976.551270 -12955.00293 -1976.501221    9.437500 -1976.551270   0.050049    0.000000     -100.000000     2.0     -1998.376221         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1638809/4096.[0m
[08/10 13:08:36]  --------------------------------------------------------------------------------
[08/10 13:08:36]  Iteration: 115 (0 solution, 114 counterexamples)
[08/10 13:08:43]  Generator returned sat in 3.719736 secs.
[08/10 13:08:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:08:45]  Improved gap from 194301/20480 to 10.9375
[08/10 13:08:45]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:08:45]  Verifer returned sat in 1.778634 secs.
[08/10 13:08:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1899.218750   -1999.118896 -13162.727783 -1899.218750    0.099854 -1999.118896        0.0   99.900146       99.899902     9.0     -1999.118896            -1             -1     -1
1   -1899.218750   -1999.118652 -13162.727783 -1899.218750    0.100000 -1999.118652        0.0   99.899902       -0.100098     9.0     -1999.118896         False           True  False
2   -1489.018555   -1899.118652 -13162.727783 -1489.018555  510.100098 -1899.118652        0.0  410.100098      310.100098     1.0     -1999.118896          True           True  False
3   -1489.018555   -1699.118896 -13162.727783 -1489.018555  410.000000 -1699.118896        0.0  210.100342      210.100098     2.0     -1489.018555         False          False  False
4   -1489.018555   -1616.943604 -13162.727783 -1489.018555  203.000000 -1616.943604        0.0  127.925049      110.100098     3.0     -1489.018555         False          False  False
5   -1489.018555   -1525.831055 -13162.727783 -1489.018555   99.500000 -1525.831055        0.0   36.812500       10.100098     4.0     -1489.018555         False           True  False
6   -1478.081055   -1488.918701 -13083.865234 -1478.081055   47.750000 -1488.918701        0.0   10.837646       -0.099854     1.0     -1489.018555         False           True  False
7   -1467.043701   -1477.981201 -12994.802734 -1467.043701   21.875000 -1477.981201        0.0   10.937500        0.000000     1.0     -1489.018555         False          False  False
8   -1467.043701   -1467.043701 -12905.740234 -1467.043701    8.937500 -1467.043701        0.0    0.000000      -10.937500     2.0     -1489.018555         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=317645/1024.[0m
[08/10 13:08:46]  --------------------------------------------------------------------------------
[08/10 13:08:46]  Iteration: 116 (0 solution, 115 counterexamples)
[08/10 13:09:02]  Generator returned sat in 12.947314 secs.
[08/10 13:09:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:09:04]  Improved gap from 1/600 to 12.5
[08/10 13:09:04]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:09:04]  Verifer returned sat in 1.468019 secs.
[08/10 13:09:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1366.878662   -1896.978516 -12660.717773 -1366.878662  530.000000 -1896.978516   0.049805  530.050049      530.050049     8.0     -1896.978516            -1             -1     -1
1   -1366.878662   -1896.978516 -12660.717773 -1366.878662  530.000000 -1896.978516   0.049805  530.050049      430.050049     8.0     -1896.978516         False          False   True
2   -1366.878662   -1796.978516 -12660.717773 -1366.878662  430.050049 -1796.978516   0.049805  430.050049      330.050049     8.0     -1366.928467         False          False   True
3   -1366.878662   -1596.978760 -12660.717773 -1366.878662  430.000000 -1596.978760   0.049805  230.050293      230.050049     8.0     -1366.928467         False          False   True
4   -1366.878662   -1496.978516 -12660.717773 -1366.878662  214.000000 -1496.978516   0.049805  130.050049      130.050049     6.0     -1366.928467         False          False   True
5   -1366.878662   -1418.978760 -12660.717773 -1366.878662  106.000000 -1418.978760   0.049805   52.050293       30.050049     7.0     -1366.928467         False          False   True
6   -1366.878662   -1379.428467 -12590.767822 -1366.878662   52.000000 -1379.428467   0.049805   12.500000        0.000000     8.0     -1366.928467         False          False   True
7   -1354.378662   -1366.928467 -12503.267822 -1354.378662   25.000000 -1366.928467   0.049805   12.500000        0.000000     9.0     -1366.928467         False          False   True
8   -1354.378662   -1354.428467 -12503.267578 -1354.378662    2.000000 -1354.428467   0.049805    0.000000      -99.999756     2.0     -1366.928467         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1761485/4096.[0m
[08/10 13:09:05]  --------------------------------------------------------------------------------
[08/10 13:09:05]  Iteration: 117 (0 solution, 116 counterexamples)
[08/10 13:09:21]  Generator returned sat in 13.030138 secs.
[08/10 13:09:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:09:23]  Improved gap from 3/200 to 12.5
[08/10 13:09:24]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:09:24]  Verifer returned sat in 2.103163 secs.
[08/10 13:09:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     -93.598633    -193.498535 -12828.167969   -93.598633  430.300049  -193.498535   0.100098   99.799805       99.799805     7.0      -193.498535            -1             -1     -1
1     236.801514     -93.598877 -12828.167969   236.801514  430.199951   -93.598877   0.200195  330.200195      330.099854     1.0       236.601318         False          False   True
2     336.901367     -93.498535 -12828.167969   336.901367  430.300049   -93.498535   0.300049  430.099854      330.099854     2.0       236.601318         False          False   True
3     336.901367     106.501465 -12828.167969   336.901367  430.000000   106.501465   0.300049  230.099854      230.099854     3.0       336.601318         False          False   True
4     336.901367     206.501465 -12828.167969   336.901367  214.000000   206.501465   0.300049  130.099854      130.099854     4.0       336.601318         False          False   True
5     336.901367     284.501221 -12828.167969   336.901367  106.000000   284.501221   0.300049   52.100098       30.099854     4.0       336.601318         False          False   True
6     336.901367     331.401367 -12765.567871   336.901367   52.000000   331.401367   0.300049    5.199951       -7.300049     5.0       336.601318         False          False   True
7     356.701416     343.901367 -12678.067871   356.701416   25.000000   343.901367   0.300049   12.500000        0.000000     1.0       336.601318         False          False   True
8     356.701416     356.401367 -12678.067871   356.701416   11.500000   356.401367   0.300049    0.000000     -100.000000     2.0       336.601318         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1352089/4096.[0m
[08/10 13:09:24]  --------------------------------------------------------------------------------
[08/10 13:09:24]  Iteration: 118 (0 solution, 117 counterexamples)
[08/10 13:09:33]  Generator returned sat in 5.409674 secs.
[08/10 13:09:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:09:35]  Improved gap from 1515929/131072 to 10.9375
[08/10 13:09:35]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 13:09:35]  Verifer returned sat in 1.551458 secs.
[08/10 13:09:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1152.528564   -1549.428711 -12811.155273 -1152.528564    0.099854 -1549.428711   0.100098  396.800049      296.800293     2.0     -1549.428711            -1             -1     -1
1   -1152.528564   -1349.428955 -12811.155273 -1152.528564  396.700000 -1349.428955   0.100098  196.800293      196.800293     2.0     -1549.428711         False          False   True
2    -952.728760   -1349.328857 -12811.155273  -952.728760  396.600098 -1349.328857   0.100098  396.500000      296.600098     3.0      -952.828857         False          False   True
3    -952.728760   -1149.428955 -12811.155273  -952.728760  395.000000 -1149.428955   0.100098  196.600098      196.600098     2.0      -952.828857         False          False   True
4    -952.728760   -1049.428955 -12811.155273  -952.728760  196.000000 -1049.428955   0.100098   96.600098       96.600098     3.0      -952.828857         False          False   True
5    -952.728760    -957.316162 -12811.155273  -952.728760   96.500000  -957.316162   0.100098    4.487305       -3.399902     4.0      -952.828857         False          False   True
6    -910.466064    -921.403564 -12750.118164  -910.466064   46.750000  -921.403564   0.100098   10.837402       -0.100098     1.0      -952.828857         False          False   True
7    -899.428467    -910.466064 -12661.055664  -899.428467   21.875000  -910.466064   0.100098   10.937500        0.000000     1.0      -952.828857         False          False   True
8    -899.428467    -899.528564 -12661.055664  -899.428467    9.437500  -899.528564   0.100098    0.000000     -100.000000     2.0      -952.828857         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1215283/4096.[0m
[08/10 13:09:36]  --------------------------------------------------------------------------------
[08/10 13:09:36]  Iteration: 119 (0 solution, 118 counterexamples)
[08/10 13:09:50]  Generator returned sat in 11.015073 secs.
[08/10 13:09:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:09:52]  Improved gap from 0 to 48.4375
[08/10 13:09:52]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:09:52]  Verifer returned sat in 1.543647 secs.
[08/10 13:09:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1467.246826   -1767.296875 -12593.287354 -1467.246826    0.049805 -1767.296875   0.050049  300.000000      200.000000     2.0     -1767.296875            -1             -1     -1
1   -1467.246826   -1667.296875 -12593.287354 -1467.246826    0.050000 -1667.296875   0.050049  200.000000      100.000000     2.0     -1767.296875         False          False   True
2   -1216.184326   -1467.296875 -12593.287354 -1216.184326  451.062500 -1467.296875   0.050049  251.062500      251.062500     3.0     -1767.296875         False          False   True
3   -1216.184326   -1414.759521 -12593.287354 -1216.184326  210.250000 -1414.759521   0.050049  198.525146      151.062500     2.0     -1216.234375         False          False   True
4   -1216.184326   -1267.346924 -12593.287354 -1216.184326  104.125000 -1267.346924   0.050049   51.112549       51.062500     3.0     -1216.234375         False          False   True
5   -1216.184326   -1267.296875 -12544.399902 -1216.184326   51.062500 -1267.296875   0.050049   51.062500       -0.050049     4.0     -1216.234375         False          False   True
6   -1167.746826   -1216.184326 -12492.837402 -1167.746826   99.500000 -1216.184326   0.050049   48.387451       -0.050049     1.0     -1216.234375         False           True  False
7   -1117.346680   -1167.746826 -12443.187500 -1117.346680   98.787598 -1167.746826   0.050049   50.350098        0.000000     1.0     -1216.234375         False          False  False
8   -1117.346680   -1117.396729 -12443.187500 -1117.346680   49.300049 -1117.396729   0.050049    0.000000     -100.000000     2.0     -1216.234375         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=257139/1024.[0m
[08/10 13:09:53]  --------------------------------------------------------------------------------
[08/10 13:09:53]  Iteration: 120 (0 solution, 119 counterexamples)
[08/10 13:10:01]  Generator returned sat in 4.848787 secs.
[08/10 13:10:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:10:03]  Improved gap from 775/16 to 48.4375
[08/10 13:10:04]  Improved number of small numbers from 60 to 65 out of a max of 114
[08/10 13:10:04]  Verifer returned sat in 2.799006 secs.
[08/10 13:10:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -1238.51141   -1286.999023 -11872.924805  -1238.51141   48.437256 -1286.999023       0.05   48.437614       48.437549     3.0     -1286.999023            -1             -1     -1
1    -1238.51141   -1286.998910 -11821.362354  -1238.51141   48.387500 -1286.998910       0.05   48.437500        0.000000     4.0     -1238.561410         False          False   True
2     -938.46141   -1143.911410 -11821.362354   -938.46141  348.487500 -1143.911410       0.10  205.350000      200.000000     1.0     -1238.561410         False           True  False
3     -938.46141   -1095.573910 -11821.362354   -938.46141   98.775000 -1095.573910       0.10  157.012500      100.000000     2.0      -938.561410         False          False   True
4     -938.46141    -938.611410 -11821.362354   -938.46141   48.387500  -938.611410       0.10    0.050000        0.000000     3.0      -938.561410         False          False   True
5     -915.31766    -938.561410 -11769.799854   -915.31766   23.193750  -938.561410       0.10   23.143750      -25.293750     4.0      -938.561410         False          False   True
6     -837.78641    -890.123910 -11722.037354   -837.78641  100.675000  -890.123910       0.10   52.237500        0.000000     1.0      -938.561410         False           True  False
7     -789.29891    -837.836410 -11670.524854   -789.29891  100.725000  -837.836410       0.10   48.437500        0.000000     1.0      -938.561410         False          False  False
8     -789.29891    -789.398910 -11670.524658   -789.29891   48.387500  -789.398910       0.10    0.000000      -99.999805     2.0      -938.561410         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=200.[0m
[08/10 13:10:05]  --------------------------------------------------------------------------------
[08/10 13:10:05]  Iteration: 121 (0 solution, 120 counterexamples)
[08/10 13:10:29]  Generator returned sat in 20.655270 secs.
[08/10 13:10:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:10:30]  Improved gap from 1/300 to 14.0625
[08/10 13:10:31]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/10 13:10:31]  Verifer returned sat in 1.013145 secs.
[08/10 13:10:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1075.223877   -1473.723877 -11821.362305 -1075.223877    0.050000 -1473.723877   0.000000  398.500000      298.500000     2.0     -1473.723877            -1             -1   False
1   -1075.174072   -1273.723877 -11821.362305 -1075.174072  398.549805 -1273.723877   0.000000  198.549805      198.549805     2.0     -1473.723877         False          False   False
2    -975.073730   -1263.173828 -11821.362305  -975.073730  298.650146 -1263.173828   0.050049  288.050049      198.600098     3.0      -975.123779         False          False   False
3    -875.123779   -1075.223877 -11821.362305  -875.123779  388.000000 -1075.223877   0.050049  200.050049      198.550049     4.0      -975.123779         False          False    True
4    -875.123779    -973.724121 -11821.362305  -875.123779  195.000000  -973.724121   0.050049   98.550293       98.550049     2.0      -975.123779         False           True   False
5    -875.123779    -888.086426 -11821.362305  -875.123779   98.500000  -888.086426   0.050049   12.912598       -1.449951     3.0      -975.123779         False          False   False
6    -837.786377    -864.011230 -11757.249756  -837.786377   50.250000  -864.011230   0.050049   26.174805        0.000000     1.0      -975.123779         False          False   False
7    -837.786377    -837.836426 -11671.312256  -837.786377   26.125000  -837.836426   0.050049    0.000000      -14.062500     2.0      -975.123779         False          False   False
8    -823.723877    -823.773926 -11585.374756  -823.723877   14.062500  -823.773926   0.050049    0.000000      -14.062500     1.0      -975.123779         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=406733/2048.[0m
[08/10 13:10:31]  --------------------------------------------------------------------------------
[08/10 13:10:31]  Iteration: 122 (0 solution, 121 counterexamples)
[08/10 13:10:56]  Generator returned sat in 21.102118 secs.
[08/10 13:10:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:10:57]  Improved gap from 1/1600 to 100
[08/10 13:10:58]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 13:10:58]  Verifer returned sat in 1.156638 secs.
[08/10 13:10:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1321.698975   -1419.098877 -11671.312256 -1321.698975    0.100098 -1419.098877        0.0   97.399902       -0.100098     6.0     -1419.098877            -1             -1     -1
1   -1221.598877   -1321.598633 -11671.312256 -1221.598877  197.500000 -1321.598633        0.0   99.999756        0.000000     1.0     -1419.098877         False           True  False
2   -1124.198730   -1221.598633 -11671.312256 -1124.198730  197.399902 -1221.598633        0.0   97.399902       -2.599854     1.0     -1124.198730         False          False  False
3    -721.698730   -1121.598877 -11671.312256  -721.698730  499.899902 -1121.598877        0.0  399.900146      299.900146     1.0     -1124.198730         False          False  False
4    -721.698730    -921.598877 -11671.312256  -721.698730  399.199951  -921.598877        0.0  199.900146      199.900146     2.0     -1124.198730         False          False  False
5    -521.499023    -921.598877 -11671.312256  -521.499023  400.099854  -921.598877        0.0  400.099854      300.099854     2.0     -1124.198730         False          False  False
6    -521.499023    -721.598877 -11671.312256  -521.499023  350.549805  -721.598877        0.0  200.099854      200.099854     2.0     -1124.198730         False          False  False
7    -345.823975    -621.598877 -11671.312256  -345.823975  375.774902  -621.598877        0.0  275.774902      275.774902     3.0     -1124.198730         False          False  False
8    -283.211426    -621.598877 -11671.312256  -283.211426  338.387451  -621.598877        0.0  338.387451      238.387451     3.0      -283.211426          True           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=307405/1024.[0m
[08/10 13:10:58]  --------------------------------------------------------------------------------
[08/10 13:10:58]  Iteration: 123 (0 solution, 122 counterexamples)
[08/10 13:11:29]  Generator returned sat in 26.808146 secs.
[08/10 13:11:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:11:29]  Improved number of small numbers from 88 to 113 out of a max of 113
[08/10 13:11:29]  Verifer returned sat in 0.283895 secs.
[08/10 13:11:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1521.604004   -1621.599121 -11671.312256 -1521.604004    0.002441 -1621.599121   0.000000   99.995117       99.995117     2.0     -1621.599121            -1             -1    True
1   -1521.599121   -1521.601318 -11671.312256 -1521.599121  100.000000 -1521.601318   0.000000    0.002197        0.000000     1.0     -1621.599121         False          False    True
2   -1421.601318   -1519.608887 -11671.312256 -1421.601318  100.000000 -1519.608887   0.000000   98.007568       -0.002197     1.0     -1621.599121         False          False    True
3   -1121.601318   -1421.599121 -11671.312256 -1121.601318  398.007568 -1421.599121   0.000000  299.997803      199.997803     1.0     -1621.599121         False          False    True
4   -1023.091553   -1221.599121 -11671.312256 -1023.091553  398.507568 -1221.599121   0.000000  198.507568      198.507568     2.0     -1621.599121         False          False    True
5    -822.591553   -1121.599121 -11671.312256  -822.591553  399.007568 -1121.599121   0.000000  299.007568      299.007568     2.0     -1621.599121         False          False    True
6    -722.091553   -1021.599121 -11671.312256  -722.091553  399.507568 -1021.599121   0.000000  299.507568      299.507568     2.0     -1621.599121         False          False    True
7    -621.591553   -1021.596436 -11671.312256  -621.591553  400.007568 -1021.596436   0.002441  400.002441      300.005127     3.0     -1621.599121         False          False    True
8    -621.591553    -822.588867 -11671.312256  -621.591553    0.010000  -822.588867   0.002441  200.994873      200.005127     3.0      -621.593994          True           True    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=1228821/4096.[0m
[08/10 13:11:30]  --------------------------------------------------------------------------------
[08/10 13:11:30]  Iteration: 124 (0 solution, 123 counterexamples)
[08/10 13:11:40]  Generator returned sat in 6.321622 secs.
[08/10 13:11:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:11:41]  Improved gap from 0 to 48.4375
[08/10 13:11:42]  Improved number of small numbers from 88 to 97 out of a max of 114
[08/10 13:11:42]  Verifer returned sat in 1.470178 secs.
[08/10 13:11:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1821.599121   -2070.036621 -11671.312256 -1821.599121  148.444824 -2070.036621     0.0000  248.437500      148.437500     2.0     -2070.036621            -1             -1    True
1   -1821.599121   -1870.039062 -11671.312256 -1821.599121  148.442383 -1870.039062     0.0000   48.439941       48.437500     3.0     -1821.599121         False          False    True
2   -1721.599121   -1770.036621 -11671.312256 -1721.599121  148.439941 -1770.036621     0.0000   48.437500       48.437500     1.0     -1721.599121         False           True   False
3   -1621.599365   -1705.408288 -11671.312256 -1621.599365  148.437256 -1705.408288     0.0000   83.808923       48.437256     1.0     -1621.599365         False          False   False
4   -1521.594121   -1570.036621 -11671.312256 -1521.594121  183.814167 -1570.036621     0.0025   48.440000       48.440000     1.0     -1621.599365         False          False   False
5   -1521.594121   -1570.034180 -11619.752256 -1521.594121    0.010000 -1570.034180     0.0025   48.437559        0.000000     2.0     -1621.599365         False          False    True
6   -1521.594121   -1521.596621 -11568.189941 -1521.594121    0.500000 -1521.596621     0.0025    0.000000      -48.437686     3.0     -1621.599365         False          False    True
7   -1428.188288   -1471.038288 -11521.309570 -1428.188288   93.405833 -1471.038288     0.0025   42.847500       -8.151481     1.0     -1428.190788          True           True   False
8   -1420.036621   -1420.039307 -11469.747314 -1420.036621   50.999167 -1420.039307     0.0025    0.000186      -48.437559     1.0     -1428.190788         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1211/25.[0m
[08/10 13:11:43]  --------------------------------------------------------------------------------
[08/10 13:11:43]  Iteration: 125 (0 solution, 124 counterexamples)
[08/10 13:12:13]  Generator returned sat in 26.413303 secs.
[08/10 13:12:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:12:14]  Improved gap from 0 to 100
[08/10 13:12:15]  Improved number of small numbers from 68 to 85 out of a max of 114
[08/10 13:12:15]  Verifer returned sat in 1.753517 secs.
[08/10 13:12:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2021.546631   -2220.496621 -11469.747314 -2021.546631    0.025000 -2220.496621      0.000  198.949990       100.02499     9.0     -2220.496621            -1             -1     -1
1   -2021.546631   -2121.571621 -11469.747314 -2021.546631    0.050049 -2121.571621      0.000  100.024990         0.02499     2.0     -2220.496621         False           True  False
2   -2021.546631   -2021.571621 -11469.747314 -2021.546631    0.025146 -2021.571621      0.000    0.024990       -99.97501     3.0     -2021.546631         False          False  False
3   -1521.596621   -1921.571621 -11469.747314 -1521.596621  499.975000 -1921.571621      0.000  399.975000       299.97500     1.0     -2021.546631         False          False  False
4   -1521.596621   -1727.921621 -11469.747314 -1521.596621  399.950000 -1727.921621      0.000  206.325000       199.97500     2.0     -2021.546631         False          False  False
5   -1330.621621   -1621.571621 -11469.747314 -1330.621621  397.300000 -1621.571621      0.000  290.950000       290.95000     3.0     -2021.546631         False          False  False
6   -1222.421621   -1521.571621 -11469.747314 -1222.421621  399.150000 -1521.571621      0.000  299.150000       299.15000     2.0     -2021.546631         False          False  False
7   -1121.496621   -1521.546631 -11469.747314 -1121.496621  400.075000 -1521.546631      0.025  400.025010       300.05000     3.0     -2021.546631         False          False  False
8   -1121.496621   -1321.571777 -11469.747314 -1121.496621    0.500000 -1321.571777      0.025  200.050156       200.05000     3.0     -2021.546631         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=6001/20.[0m
[08/10 13:12:15]  --------------------------------------------------------------------------------
[08/10 13:12:15]  Iteration: 126 (0 solution, 125 counterexamples)
[08/10 13:12:32]  Generator returned sat in 13.049585 secs.
[08/10 13:12:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:12:34]  Improved gap from 0 to 14.0625
[08/10 13:12:34]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 13:12:34]  Verifer returned sat in 1.791325 secs.
[08/10 13:12:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2230.496826   -2630.446533 -10960.872314 -2230.496826    0.049805 -2630.446533   0.000000  399.949707      399.949707     4.0     -2630.446533            -1             -1   False
1   -2230.446777   -2630.446533 -10960.872314 -2230.446777  399.999756 -2630.446533   0.049805  399.949951      299.949951     4.0     -2630.446533         False          False   False
2   -2230.446777   -2530.446533 -10960.872314 -2230.446777  399.899902 -2530.446533   0.049805  299.949951      199.949951     5.0     -2230.496582         False          False    True
3   -2111.396729   -2430.446533 -10960.872314 -2111.396729  419.000000 -2430.446533   0.049805  319.000000      219.000000     4.0     -2230.496582         False           True   False
4   -2111.396729   -2230.446533 -10960.872314 -2111.396729  210.000000 -2230.446533   0.049805  119.000000      119.000000     2.0     -2230.496582         False          False   False
5   -2111.396729   -2164.746582 -10960.872314 -2111.396729  105.500000 -2164.746582   0.049805   53.300049       19.000000     3.0     -2230.496582         False          False   False
6   -2111.396729   -2130.446533 -10879.872559 -2111.396729   53.250000 -2130.446533   0.049805   19.000000       -0.000244     4.0     -2230.496582         False          False   False
7   -2103.271729   -2103.321533 -10802.059814 -2103.271729   27.125000 -2103.321533   0.049805    0.000000      -14.062500     1.0     -2230.496582         False          False   False
8   -2089.209229   -2089.259033 -10802.059814 -2089.209229   14.062500 -2089.259033   0.049805    0.000000     -100.000000     1.0     -2230.496582         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1228595/4096.[0m
[08/10 13:12:35]  --------------------------------------------------------------------------------
[08/10 13:12:35]  Iteration: 127 (0 solution, 126 counterexamples)
[08/10 13:13:01]  Generator returned sat in 21.605310 secs.
[08/10 13:13:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:13:02]  Improved gap from 0 to 48.4375
[08/10 13:13:02]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 13:13:02]  Verifer returned sat in 1.030992 secs.
[08/10 13:13:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2247.380859   -2500.501953 -10978.311523 -2247.380859  253.123750 -2500.501953   0.000000  253.121094      153.123779     2.0     -2500.501953            -1             -1   False
1   -2247.379639   -2400.504639 -10978.311523 -2247.379639  253.122314 -2400.504639   0.001221  153.123779       53.123779     2.0     -2247.380859         False          False   False
2   -2147.381104   -2247.380859 -10978.311523 -2147.381104  253.122314 -2247.380859   0.001221   99.998535       53.122314     3.0     -2247.380859         False          False    True
3   -2132.417969   -2132.420410 -10978.311523 -2132.417969  114.961670 -2132.420410   0.001221    0.001221      -31.914551     1.0     -2132.419189         False           True   False
4   -1947.378418   -2000.504883 -10978.311523 -1947.378418  185.040771 -2000.504883   0.002441   53.124023       53.123779     1.0     -2132.419189         False          False   False
5   -1947.378418   -1995.818604 -10931.435303 -1947.378418    0.500000 -1995.818604   0.002441   48.437744        0.000000     2.0     -2132.419189         False          False    True
6   -1947.378418   -1947.380859 -10879.872803 -1947.378418    0.010000 -1947.380859   0.002441    0.000000      -48.437500     3.0     -2132.419189         False          False    True
7   -1853.858643   -1898.943359 -10828.310303 -1853.858643   93.519775 -1898.943359   0.002441   45.082275       -3.355225     1.0     -1853.861084          True           True   False
8   -1847.160156   -1850.505859 -10828.310059 -1847.160156   51.780762 -1850.505859   0.002441    3.343262      -96.656494     1.0     -1853.861084         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=217595/4096.[0m
[08/10 13:13:03]  --------------------------------------------------------------------------------
[08/10 13:13:03]  Iteration: 128 (0 solution, 127 counterexamples)
[08/10 13:13:25]  Generator returned sat in 18.110441 secs.
[08/10 13:13:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:13:26]  Improved gap from 147/409600 to 23.4375
[08/10 13:13:26]  Improved number of small numbers from 70 to 114 out of a max of 114
[08/10 13:13:26]  Verifer returned sat in 1.147772 secs.
[08/10 13:13:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2294.254639   -2470.817139 -10931.435547 -2294.254639    0.001465 -2470.817139   0.001221  176.561279      176.561035     7.0     -2470.817139            -1             -1     -1
1   -2294.254639   -2470.816895 -10931.435547 -2294.254639  176.561250 -2470.816895   0.001221  176.561035       76.561035     4.0     -2470.817139         False           True   True
2   -2270.815918   -2294.254639 -10931.435547 -2270.815918  199.999756 -2294.254639   0.001221   23.437500       -0.000244     1.0     -2470.817139          True           True  False
3   -2071.817139   -2208.597656 -10931.435547 -2071.817139  222.436279 -2208.597656   0.001221  136.779297       98.998535     1.0     -2470.817139         False          False  False
4   -1947.376953   -2071.816895 -10931.435547 -1947.376953  261.219482 -2071.816895   0.002441  124.437500      123.437500     1.0     -2470.817139         False          False  False
5   -1947.376953   -1970.818604 -10931.435547 -1947.376953    0.500000 -1970.818604   0.002441   23.439209       23.437500     2.0     -2470.817139         False          False   True
6   -1947.376953   -1970.816895 -10854.873047 -1947.376953    0.010000 -1970.816895   0.002441   23.437500        0.000000     3.0     -2470.817139         False          False   True
7   -1947.376953   -1947.379395 -10778.310547 -1947.376953    0.010000 -1947.379395   0.002441    0.000000      -23.437500     4.0     -2470.817139         False          False   True
8   -1823.939453   -1923.941895 -10778.310547 -1823.939453  123.437500 -1923.941895   0.002441  100.000000        0.000000     1.0     -1823.941895          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1975/16.[0m
[08/10 13:13:27]  --------------------------------------------------------------------------------
[08/10 13:13:27]  Iteration: 129 (0 solution, 128 counterexamples)
[08/10 13:13:36]  Generator returned sat in 4.887268 secs.
[08/10 13:13:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:13:37]  Improved gap from 375/16 to 23.4375
[08/10 13:13:37]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:13:37]  Verifer returned sat in 1.172895 secs.
[08/10 13:13:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1920.359619   -2143.795654 -11258.456787 -1920.359619    0.002441 -2143.795654   0.000000  223.436035      223.436035     2.0     -2143.795654            -1             -1   False
1   -1920.359619   -2143.795654 -11258.456787 -1920.359619    0.002686 -2143.795654   0.000000  223.436035      123.436035     2.0     -2143.795654         False          False   False
2   -1920.359619   -2043.795654 -11258.456787 -1920.359619    0.001221 -2043.795654   0.000000  123.436035       23.436035     3.0     -1920.359619         False          False   False
3   -1885.543213   -1894.919434 -11230.770508 -1885.543213  158.252441 -1894.919434   0.000000    9.376221      -14.061279     1.0     -1920.359619         False          False   False
4   -1648.043213   -1771.481934 -11230.770508 -1648.043213  246.876221 -1771.481934   0.001221  123.437500      123.437500     1.0     -1920.359619         False          False   False
5   -1648.043213   -1671.483154 -11230.770508 -1648.043213    0.500000 -1671.483154   0.001221   23.438721       23.437500     2.0     -1920.359619         False          False    True
6   -1648.043213   -1671.481934 -11154.208008 -1648.043213    0.010000 -1671.481934   0.001221   23.437500        0.000000     3.0     -1920.359619         False          False    True
7   -1648.043213   -1648.044434 -11077.645508 -1648.043213    0.010000 -1648.044434   0.001221    0.000000      -23.437500     4.0     -1920.359619         False          False    True
8   -1526.605713   -1624.606934 -11077.645508 -1526.605713  121.437500 -1624.606934   0.001221   98.000000       -2.000000     1.0     -1526.606934          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1975/16.[0m
[08/10 13:13:38]  --------------------------------------------------------------------------------
[08/10 13:13:38]  Iteration: 130 (0 solution, 129 counterexamples)
[08/10 13:13:57]  Generator returned sat in 15.716282 secs.
[08/10 13:13:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:13:59]  Improved gap from 0 to 48.4375
[08/10 13:13:59]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 13:13:59]  Verifer returned sat in 1.374726 secs.
[08/10 13:13:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2063.104248   -2211.541748 -11230.770752 -2063.104248  313.574219 -2211.541748    0.000000  148.437500      148.437500     5.0     -2211.541748            -1             -1     -1
1   -1897.967529   -2111.541992 -11230.770752 -1897.967529  313.574219 -2111.541992  165.136719   48.437744       48.437500     3.0     -2211.541748         False           True  False
2   -1797.970215   -2063.104248 -11230.770752 -1797.970215  148.435059 -2063.104248  165.136719   99.997314       48.434814     4.0     -1963.106934          True           True   True
3   -1746.402588   -1911.541748 -11230.770752 -1746.402588  151.564941 -1911.541748  165.136719    0.002441        0.002441     1.0     -1963.106934         False           True  False
4   -1595.905029   -1816.226807 -11230.770752 -1595.905029  150.500000 -1816.226807  167.199219   53.122559       48.437500     1.0     -1963.106934         False          False  False
5   -1595.905029   -1811.541748 -11179.208252 -1595.905029    0.500000 -1811.541748  167.199219   48.437500        0.000000     2.0     -1963.106934         False          False   True
6   -1595.905029   -1763.104248 -11127.645752 -1595.905029    0.010000 -1763.104248  167.199219    0.000000      -48.437500     3.0     -1963.106934         False          False   True
7   -1521.186279   -1714.666748 -11076.083252 -1521.186279   74.718750 -1714.666748  167.199219   26.281250      -22.156250     1.0     -1688.385498          True           True  False
8   -1496.187500   -1666.229248 -11024.520752 -1496.187500   51.280029 -1666.229248  167.199219    2.842529      -45.594971     1.0     -1688.385498         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=775/16.[0m
[08/10 13:14:00]  --------------------------------------------------------------------------------
[08/10 13:14:00]  Iteration: 131 (0 solution, 130 counterexamples)
[08/10 13:14:14]  Generator returned sat in 10.026949 secs.
[08/10 13:14:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:14:15]  Improved gap from 0 to 35.9375
[08/10 13:14:15]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 13:14:15]  Verifer returned sat in 1.184926 secs.
[08/10 13:14:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1668.042725   -1807.492432 -11435.458252 -1668.042725   0.200195 -1807.492432        0.0  139.449707      135.837402     2.0     -1807.492432            -1             -1   False
1   -1668.042725   -1703.980225 -11435.458252 -1668.042725   0.099854 -1703.980225        0.0   35.937500       35.837402     2.0     -1668.042725         False          False   False
2   -1668.042725   -1703.880127 -11371.395752 -1668.042725   0.099854 -1703.880127        0.0   35.837402       -0.100098     3.0     -1668.042725         False          False   False
3   -1632.105225   -1667.942627 -11307.333252 -1632.105225  71.774902 -1667.942627        0.0   35.837402       -0.100098     1.0     -1668.042725         False          False   False
4   -1596.167725   -1632.005127 -11243.270752 -1596.167725  71.774902 -1632.005127        0.0   35.837402       -0.100098     1.0     -1668.042725         False          False   False
5   -1594.017578   -1596.067627 -11179.208252 -1594.017578  37.987549 -1596.067627        0.0    2.050049      -33.887451     1.0     -1668.042725         False          False   False
6   -1540.161377   -1560.130127 -11115.145752 -1540.161377  55.906250 -1560.130127        0.0   19.968750      -15.968750     1.0     -1668.042725         False          False   False
7   -1504.223877   -1524.192627 -11051.083496 -1504.223877  55.906250 -1524.192627        0.0   19.968750      -15.968994     1.0     -1668.042725         False          False   False
8   -1468.286377   -1488.254883 -11051.083496 -1468.286377  55.906250 -1488.254883        0.0   19.968506      -80.031494     1.0     -1668.042725         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=73395/2048.[0m
[08/10 13:14:16]  --------------------------------------------------------------------------------
[08/10 13:14:16]  Iteration: 132 (0 solution, 131 counterexamples)
[08/10 13:14:57]  Generator returned sat in 37.202029 secs.
[08/10 13:14:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:14:59]  Improved gap from 139009/4096 to 35.9375
[08/10 13:15:00]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 13:15:00]  Verifer returned sat in 2.180584 secs.
[08/10 13:15:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2921.385254   -3017.647705 -11311.070801 -2921.385254   0.099854 -3017.647705        0.0  96.262451       96.262451     7.0     -3017.647705            -1             -1     -1
1   -2921.385254   -2921.485107 -11311.070801 -2921.385254   0.100098 -2921.485107        0.0   0.099854       -3.737549     2.0     -3017.647705         False           True  False
2   -2867.197510   -2867.297607 -11311.070557 -2867.197510  54.287598 -2867.297607        0.0   0.100098      -49.549561     1.0     -3017.647705         False          False  False
3   -2781.710205   -2817.647705 -11247.008301 -2781.710205  85.587402 -2817.647705        0.0  35.937500        0.000000     1.0     -3017.647705         False          False  False
4   -2719.647705   -2761.635010 -11209.170898 -2719.647705  98.000000 -2761.635010        0.0  41.987305       -0.100098     1.0     -3017.647705         False          False  False
5   -2683.709961   -2719.547607 -11145.108398 -2683.709961  77.925049 -2719.547607        0.0  35.837646       -0.099854     1.0     -3017.647705         False          False  False
6   -2647.672607   -2683.610107 -11081.045898 -2647.672607  71.875000 -2683.610107        0.0  35.937500        0.000000     1.0     -3017.647705         False          False  False
7   -2618.591309   -2647.672607 -11016.983398 -2618.591309  65.018799 -2647.672607        0.0  29.081299       -6.856201     2.0     -3017.647705         False          False  False
8   -2592.691406   -2611.735107 -11016.983398 -2592.691406  54.981201 -2611.735107        0.0  19.043701      -80.956299     1.0     -3017.647705         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819/4096.[0m
[08/10 13:15:00]  --------------------------------------------------------------------------------
[08/10 13:15:00]  Iteration: 133 (0 solution, 132 counterexamples)
[08/10 13:15:43]  Generator returned sat in 38.399514 secs.
[08/10 13:15:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:15:44]  Improved gap from 528593/16384 to 35.9375
[08/10 13:15:45]  Improved number of small numbers from 64 to 90 out of a max of 114
[08/10 13:15:45]  Verifer returned sat in 2.250632 secs.
[08/10 13:15:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -3122.947754   -3211.951660 -11428.483398 -3122.947754    0.099854 -3211.951660        0.0  89.003906       35.837451     2.0      -3211.95166            -1             -1   False
1   -3122.947754   -3158.785205 -11364.420898 -3122.947754    0.100000 -3158.785205        0.0  35.837451       -0.100049     2.0      -3211.95166         False          False   False
2   -3079.885205   -3122.847705 -11307.483398 -3079.885205   78.900000 -3122.847705        0.0  42.962500       -0.100000     1.0      -3211.95166         False          False   False
3   -3014.101872   -3079.785156 -11273.166732 -3014.101872  108.745833 -3079.785156        0.0  65.683285        0.000000     1.0      -3211.95166         False          False   False
4   -3014.101872   -3014.101872 -11209.104248 -3014.101872   65.583252 -3014.101872        0.0   0.000000      -35.937516     2.0      -3211.95166         False          False   False
5   -2942.260205   -2978.097705 -11145.108398 -2942.260205   71.841667 -2978.097705        0.0  35.837500       -0.100000     1.0      -3211.95166         False          False   False
6   -2906.222705   -2942.160156 -11081.046143 -2906.222705   71.875000 -2942.160156        0.0  35.937451       -0.000244     1.0      -3211.95166         False          False   False
7   -2873.847656   -2906.122705 -11017.083496 -2873.847656   68.312500 -2906.122705        0.0  32.275049       -3.662549     1.0      -3211.95166         False          False   False
8   -2852.633122   -2864.201904 -11017.083496 -2852.633122   53.489583 -2864.201904        0.0  11.568783      -82.448014     1.0      -3211.95166         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819/4096.[0m
[08/10 13:15:46]  --------------------------------------------------------------------------------
[08/10 13:15:46]  Iteration: 134 (0 solution, 133 counterexamples)
[08/10 13:16:14]  Generator returned sat in 23.966146 secs.
[08/10 13:16:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:16:15]  Improved gap from 1/600 to 100
[08/10 13:16:16]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:16:16]  Verifer returned sat in 1.287968 secs.
[08/10 13:16:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2766.349854   -2966.449463 -10720.829102 -2766.349854    0.300000 -2966.449463        0.0  200.099609      100.099609     3.0     -2966.449463            -1             -1   False
1   -2766.349854   -2866.449463 -10720.829102 -2766.349854    0.200000 -2866.449463        0.0  100.099609        0.099609     3.0     -2766.349854         False          False   False
2   -2766.349854   -2766.449463 -10720.829102 -2766.349854    0.100000 -2766.449463        0.0    0.099609      -99.900391     4.0     -2766.349854         False          False   False
3   -2265.649658   -2666.449463 -10720.829102 -2265.649658  500.799805 -2666.449463        0.0  400.799805      300.799805     1.0     -2766.349854         False          False   False
4   -2265.649658   -2466.449463 -10720.829102 -2265.649658  400.399902 -2466.449463        0.0  200.799805      200.799805     2.0     -2766.349854         False          False   False
5   -2066.249512   -2466.349609 -10720.829102 -2066.249512  400.199951 -2466.349609        0.0  400.100098      300.199951     3.0     -2766.349854         False          False   False
6   -2066.249512   -2347.449463 -10720.829102 -2066.249512  350.149902 -2347.449463        0.0  281.199951      200.199951     4.0     -2766.349854         False          False   False
7   -2012.874512   -2166.449707 -10720.829102 -2012.874512  334.574951 -2166.449707        0.0  153.575195      153.574951     3.0     -2766.349854         False          False   False
8   -1849.162354   -2166.349609 -10720.829102 -1849.162354  317.287354 -2166.349609        0.0  317.187256      217.287109     4.0     -2766.349854         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1232487/4096.[0m
[08/10 13:16:16]  --------------------------------------------------------------------------------
[08/10 13:16:16]  Iteration: 135 (0 solution, 134 counterexamples)
[08/10 13:16:48]  Generator returned sat in 27.302926 secs.
[08/10 13:16:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:16:50]  Improved gap from 0 to 12.5
[08/10 13:16:50]  Improved number of small numbers from 89 to 105 out of a max of 114
[08/10 13:16:50]  Verifer returned sat in 2.006588 secs.
[08/10 13:16:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2669.149902   -2902.849609 -10720.829102 -2669.149902    0.100098 -2902.849609        0.0  233.699707      133.699756     2.0     -2902.849609            -1             -1   False
1   -2669.049805   -2802.849609 -10720.829102 -2669.049805  233.799805 -2802.849609        0.0  133.799805       33.799854     2.0     -2902.849609         False          False   False
2   -2265.649658   -2668.949463 -10720.829102 -2265.649658  537.199951 -2668.949463        0.0  403.299805      337.200000     1.0     -2902.849609         False          False   False
3   -2265.649658   -2502.849854 -10720.829102 -2265.649658  403.200000 -2502.849854        0.0  237.200195      237.200000     2.0     -2265.649658         False          False   False
4   -2265.649658   -2402.849854 -10720.829102 -2265.649658  201.600000 -2402.849854        0.0  137.200195      137.200000     3.0     -2265.649658         False          False   False
5   -2265.649658   -2316.149658 -10720.829102 -2265.649658  100.800000 -2316.149658        0.0   50.500000       37.200000     4.0     -2265.649658         False          False   False
6   -2265.649658   -2278.149658 -10658.029102 -2265.649658   50.400000 -2278.149658        0.0   12.500000        0.000000     5.0     -2265.649658         False           True   False
7   -2252.949658   -2265.649658 -10570.729102 -2252.949658   25.200000 -2265.649658        0.0   12.700000        0.000000     6.0     -2265.649658         False           True   False
8   -2252.949658   -2252.949658 -10570.729004 -2252.949658   12.600000 -2252.949658        0.0    0.000000      -99.999902     2.0     -2265.649658         False           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=3373/10.[0m
[08/10 13:16:51]  --------------------------------------------------------------------------------
[08/10 13:16:51]  Iteration: 136 (0 solution, 135 counterexamples)
[08/10 13:17:24]  Generator returned sat in 28.615258 secs.
[08/10 13:17:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:17:25]  Improved gap from 199/400 to 0
[08/10 13:17:26]  Improved number of small numbers from 61 to 110 out of a max of 114
[08/10 13:17:26]  Verifer returned sat in 2.166048 secs.
[08/10 13:17:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2586.659424   -2686.661133 -10720.829102 -2586.659424    0.001221 -2686.661133        0.0  100.001709      100.001465     3.0     -2686.661133            -1             -1   False
1   -2586.659424   -2686.659424 -10720.829102 -2586.659424   99.998779 -2686.659424        0.0  100.000000        0.001465     3.0     -2686.661133         False          False   False
2   -2586.659424   -2586.660889 -10620.830566 -2586.659424   99.998779 -2586.660889        0.0    0.001465        0.000000     4.0     -2686.661133         False          False   False
3   -2586.657227   -2586.658447 -10520.833008 -2586.657227    0.003662 -2586.658447        0.0    0.001221       -0.000244     1.0     -2586.657227         False          False   False
4   -2486.655762   -2486.656982 -10520.833008 -2486.655762  100.002686 -2486.656982        0.0    0.001221        0.001221     1.0     -2586.657227         False          False   False
5   -2286.654541   -2386.657158 -10520.833008 -2286.654541  200.002441 -2386.657158      100.0    0.002617        0.002441     1.0     -2586.657227         False          False   False
6   -2286.647158   -2386.653564 -10421.335205 -2286.647158    0.010000 -2386.653564      100.0    0.006406       -0.492373     1.0     -2586.657227         False          False    True
7   -2286.153564   -2386.154785 -10321.835205 -2286.153564    0.500000 -2386.154785      100.0    0.001221       -0.498779     1.0     -2586.657227         False          False    True
8   -2285.654785   -2385.654785 -10221.835205 -2285.654785    0.500000 -2385.654785      100.0    0.000000        0.000000     1.0     -2586.657227         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=5/2048.[0m
[08/10 13:17:27]  --------------------------------------------------------------------------------
[08/10 13:17:27]  Iteration: 137 (0 solution, 136 counterexamples)
[08/10 13:17:51]  Generator returned sat in 20.375369 secs.
[08/10 13:17:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:17:53]  Improved gap from 1/600 to 17.1875
[08/10 13:17:53]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:17:53]  Verifer returned sat in 1.791416 secs.
[08/10 13:17:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3041.079590   -3241.029297 -10032.952881 -3041.079590  199.950000 -3241.029297        0.0  199.949707       99.949951     4.0     -3241.029297            -1             -1     -1
1   -3041.079590   -3058.216797 -10032.952881 -3041.079590  199.900146 -3058.216797        0.0   17.137207       -0.050049     5.0     -3041.079590         False           True  False
2   -2858.366699   -3041.029541 -10032.952881 -2858.366699  199.850098 -3041.029541        0.0  182.662842       82.662842     1.0     -2858.366699         False           True  False
3   -2615.029541   -2841.029541 -10032.952881 -2615.029541  426.000000 -2841.029541        0.0  226.000000      226.000000     1.0     -2858.366699         False          False  False
4   -2615.029541   -2747.791992 -10032.952881 -2615.029541  215.000000 -2747.791992        0.0  132.762451      126.000000     2.0     -2858.366699         False          False  False
5   -2615.029541   -2741.029541 -10032.952881 -2615.029541  109.500000 -2741.029541        0.0  126.000000       26.000000     3.0     -2858.366699         False          False  False
6   -2615.029541   -2632.217041  -9958.952881 -2615.029541   56.750000 -2632.217041        0.0   17.187500        0.000000     4.0     -2615.029541          True           True  False
7   -2601.842041   -2615.029541  -9876.140381 -2601.842041   30.375000 -2615.029541        0.0   13.187500       -4.000000     5.0     -2615.029541         False           True  False
8   -2597.842041   -2597.842041  -9876.140381 -2597.842041   17.187500 -2597.842041        0.0    0.000000     -100.000000     1.0     -2615.029541         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=231475/1024.[0m
[08/10 13:17:54]  --------------------------------------------------------------------------------
[08/10 13:17:54]  Iteration: 138 (0 solution, 137 counterexamples)
[08/10 13:18:23]  Generator returned sat in 24.972995 secs.
[08/10 13:18:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:18:25]  Improved gap from 190461/19840 to 17.1875
[08/10 13:18:25]  Improved number of small numbers from 87 to 114 out of a max of 114
[08/10 13:18:25]  Verifer returned sat in 1.398094 secs.
[08/10 13:18:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2615.354736   -3089.029785 -10049.702881 -2615.354736  473.724854 -3089.029785        0.0  473.675049      473.674805     2.0     -3089.029785            -1             -1   False
1   -2615.354736   -3032.329590 -10049.702881 -2615.354736  473.674805 -3032.329590        0.0  416.974854      373.674805     2.0     -2615.354736         False          False   False
2   -2558.654541   -2984.704346 -10049.702881 -2558.654541  473.675049 -2984.704346        0.0  426.049805      330.375000     3.0     -2615.354736         False          False   False
3   -2558.654541   -2789.029785 -10049.702881 -2558.654541  426.000000 -2789.029785        0.0  230.375244      230.375000     4.0     -2558.654541         False          False   False
4   -2558.654541   -2691.367188 -10049.702881 -2558.654541  215.000000 -2691.367188        0.0  132.712646      130.375000     5.0     -2558.654541         False          False   False
5   -2558.654541   -2615.354492 -10049.702881 -2558.654541  109.500000 -2615.354492        0.0   56.699951       30.375000     4.0     -2558.654541         False          False   False
6   -2558.604492   -2589.029541  -9980.127930 -2558.604492   56.750000 -2589.029541        0.0   30.425049        0.000000     5.0     -2558.654541         False          False   False
7   -2558.604492   -2558.604492  -9897.315430 -2558.604492   30.375000 -2558.604492        0.0    0.000000      -17.187500     2.0     -2558.654541         False          False   False
8   -2541.416992   -2541.416992  -9814.502930 -2541.416992   17.187500 -2541.416992        0.0    0.000000      -17.187500     1.0     -2558.654541         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=14947/40.[0m
[08/10 13:18:26]  --------------------------------------------------------------------------------
[08/10 13:18:26]  Iteration: 139 (0 solution, 138 counterexamples)
[08/10 13:18:42]  Generator returned sat in 11.977523 secs.
[08/10 13:18:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:18:44]  Improved gap from 627/1024 to 14.0625
[08/10 13:18:44]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:18:44]  Verifer returned sat in 1.897140 secs.
[08/10 13:18:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1561.491455   -2061.441406 -10049.762939 -1561.491455  473.724609 -2061.441406   0.000000  499.949951      399.949951     5.0     -2061.441406            -1             -1   False
1   -1561.491455   -1861.441406 -10049.762939 -1561.491455    0.050000 -1861.441406   0.000000  299.949951      299.949951     6.0     -1561.491455         False          False   False
2   -1442.341309   -1861.441406 -10049.762939 -1442.341309  419.100098 -1861.441406   0.050049  419.050049      319.050049     6.0     -1561.491455         False          False   False
3   -1442.341309   -1661.441650 -10049.762939 -1442.341309  419.000000 -1661.441650   0.050049  219.050293      219.050049     7.0     -1442.391357         False          False    True
4   -1442.341309   -1561.441650 -10049.762939 -1442.341309  210.000000 -1561.441650   0.050049  119.050293      119.050049     3.0     -1442.391357         False           True   False
5   -1442.341309   -1495.591553 -10049.762939 -1442.341309  105.500000 -1495.591553   0.050049   53.200195       19.050049     4.0     -1442.391357         False          False   False
6   -1442.291504   -1442.341553  -9982.925293 -1442.291504   53.250000 -1442.341553   0.050049    0.000000      -14.062500     1.0     -1442.391357         False          False   False
7   -1415.166504   -1428.279053  -9896.987793 -1415.166504   27.125000 -1428.279053   0.050049   13.062500       -1.000000     1.0     -1442.391357         False          False   False
8   -1414.166504   -1414.216553  -9896.987793 -1414.166504   14.062500 -1414.216553   0.050049    0.000000     -100.000000     1.0     -1442.391357         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1306829/4096.[0m
[08/10 13:18:45]  --------------------------------------------------------------------------------
[08/10 13:18:45]  Iteration: 140 (0 solution, 139 counterexamples)
[08/10 13:18:56]  Generator returned sat in 6.688214 secs.
[08/10 13:18:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:18:58]  Improved gap from 225/16 to 15.625
[08/10 13:18:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:18:58]  Verifer returned sat in 2.135550 secs.
[08/10 13:18:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -371.898682    -560.448730 -12013.853027  -371.898682  188.449951  -560.448730        0.0  188.550049      188.450195     5.0      -560.448730            -1             -1    True
1    -371.898682    -560.348877 -12013.853027  -371.898682  188.450195  -560.348877        0.0  188.450195       88.450195     5.0      -560.448730         False          False    True
2    -371.898682    -460.348877 -12002.303223  -371.898682  188.450195  -460.348877        0.0   88.450195        0.000000     6.0      -560.448730         False          False    True
3     -53.348877    -371.898682 -12002.303223   -53.348877  407.000000  -371.898682        0.0  318.549805      218.549805     7.0      -560.448730         False          False    True
4     -53.348877    -171.898926 -12002.303223   -53.348877  205.000000  -171.898926        0.0  118.550049      118.549805     2.0       -53.348877          True           True   False
5     -53.348877    -106.648926 -12002.303223   -53.348877  104.000000  -106.648926        0.0   53.300049       18.549805     3.0       -53.348877         False          False   False
6     -53.148926     -53.249023 -11936.578125   -53.148926   53.500000   -53.249023        0.0    0.100098      -15.525146     1.0       -53.348877         False          False   False
7     -24.999023     -37.623779 -11852.203125   -24.999023   28.250000   -37.623779        0.0   12.624756       -3.000244     1.0       -53.348877         False          False   False
8     -21.998779     -21.998779 -11852.203125   -21.998779   15.625000   -21.998779        0.0    0.000000     -100.000000     1.0       -53.348877         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=895591/4096.[0m
[08/10 13:18:59]  --------------------------------------------------------------------------------
[08/10 13:18:59]  Iteration: 141 (0 solution, 140 counterexamples)
[08/10 13:19:30]  Generator returned sat in 26.972417 secs.
[08/10 13:19:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:19:33]  Improved gap from 0 to 100
[08/10 13:19:33]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:19:33]  Verifer returned sat in 2.299064 secs.
[08/10 13:19:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1053.279053   -1253.278809 -11420.922852 -1053.279053  200.050049 -1253.278809        0.0  199.999756      100.000000     2.0     -1253.278809            -1             -1   False
1   -1053.279053   -1153.279053 -11420.922852 -1053.279053  199.999756 -1153.279053        0.0  100.000000        0.000000     2.0     -1053.279053         False          False   False
2    -530.262451   -1053.279053 -11420.922852  -530.262451  623.016602 -1053.279053        0.0  523.016602      423.016602     3.0     -1053.279053         False          False   False
3    -530.262451    -947.645752 -11420.922852  -530.262451  522.966553  -947.645752        0.0  417.383301      323.016602     2.0      -530.262451         False          False   False
4    -530.262451    -756.578857 -11420.922852  -530.262451  412.799805  -756.578857        0.0  226.316406      223.016602     3.0      -530.262451         False          False   False
5    -353.328857    -653.328857 -11420.922852  -353.328857  403.250000  -653.328857        0.0  300.000000      299.950195     4.0      -530.262451         False          False   False
6    -253.228760    -653.279053 -11420.922852  -253.228760  400.100098  -653.279053        0.0  400.050293      300.050293     5.0      -530.262451         False           True   False
7    -253.228760    -453.279053 -11420.922852  -253.228760  345.733398  -453.279053        0.0  200.050293      200.050293     3.0      -530.262451         False           True   False
8    -130.262451    -353.279053 -11420.922852  -130.262451  323.016602  -353.279053        0.0  223.016602      223.016602     3.0      -530.262451         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1732881/4096.[0m
[08/10 13:19:33]  --------------------------------------------------------------------------------
[08/10 13:19:33]  Iteration: 142 (0 solution, 141 counterexamples)
[08/10 13:20:04]  Generator returned sat in 25.875582 secs.
[08/10 13:20:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:20:05]  Improved gap from 0 to 100
[08/10 13:20:06]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 13:20:06]  Verifer returned sat in 2.269231 secs.
[08/10 13:20:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -415.912598    -615.812386 -11420.922852  -415.912598    0.199951  -615.812386        0.0  199.899788       99.899788     2.0      -615.812386            -1             -1   False
1    -415.912598    -515.812386 -11420.922852  -415.912598    0.100098  -515.812386        0.0   99.899788       -0.100212     2.0      -415.912598         False          False   False
2      84.087614    -415.812386 -11420.922852    84.087614  599.900000  -415.812386        0.0  499.900000      399.900000     1.0      -415.912598         False          False   False
3      84.087614    -302.812386 -11420.922852    84.087614  499.800000  -302.812386        0.0  386.900000      299.900000     2.0        84.087614         False          False   False
4     101.587614    -115.812386 -11420.922852   101.587614  404.400000  -115.812386        0.0  217.400000      217.400000     3.0        84.087614         False          False   False
5     284.387614    -115.712386 -11420.922852   284.387614  400.200000  -115.712386        0.0  400.100000      300.200000     4.0        84.087614         False          False   False
6     284.387614      84.187614 -11420.922852   284.387614  348.150000    84.187614        0.0  200.200000      200.200000     3.0        84.087614         False          False   False
7     449.762614     184.187614 -11420.922852   449.762614  365.575000   184.187614        0.0  265.575000      265.575000     3.0        84.087614         False          False   False
8     514.975114     184.287598 -11420.922852   514.975114  330.787500   184.287598        0.0  330.687516      230.787500     4.0        84.087614         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1638399/4096.[0m
[08/10 13:20:07]  --------------------------------------------------------------------------------
[08/10 13:20:07]  Iteration: 143 (0 solution, 142 counterexamples)
[08/10 13:20:23]  Generator returned sat in 11.913446 secs.
[08/10 13:20:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:20:25]  Improved gap from 0 to 0
[08/10 13:20:26]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:20:26]  Verifer returned sat in 1.783555 secs.
[08/10 13:20:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -912.834717   -1012.339844 -11023.900146  -912.834717    0.001465 -1012.339844    0.000000   99.505127        0.000244     2.0     -1012.339844            -1             -1   False
1    -912.833496    -912.834961 -10923.901611  -912.833496   99.506348  -912.834961    0.000000    0.001465        0.000000     2.0     -1012.339844         False          False   False
2    -813.330078    -813.331055 -10923.901367  -813.330078   99.504883  -813.331055    0.000000    0.000977       -0.496338     1.0      -813.330078         False          False   False
3    -713.827393    -812.833496 -10922.907715  -713.827393   99.503662  -812.833496    0.000000   99.006104        0.000000     1.0      -713.827393         False          False   False
4    -613.827148    -613.828613 -10922.907715  -613.827148  199.006348  -613.828613    0.000000    0.001465        0.000244     1.0      -713.827393         False          False   False
5    -315.322266    -613.825928 -10922.907715  -315.322266  298.506348  -613.825928  198.502686  100.000977        0.002441     1.0      -713.827393         False          False   False
6    -315.322266    -513.826172 -10822.910156  -315.322266    0.010000  -513.826172  198.502686    0.001221        0.000000     2.0      -713.827393         False          False    True
7    -314.823486    -513.327393 -10723.907715  -314.823486    0.500000  -513.327393  198.502686    0.001221       -0.498779     1.0      -713.827393         False          False    True
8    -314.324707    -512.827393 -10623.907959  -314.324707    0.500000  -512.827393  198.502686    0.000000       -0.000244     1.0      -713.827393         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=5/2048.[0m
[08/10 13:20:26]  --------------------------------------------------------------------------------
[08/10 13:20:26]  Iteration: 144 (0 solution, 143 counterexamples)
[08/10 13:20:48]  Generator returned sat in 17.212546 secs.
[08/10 13:20:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:20:50]  Improved gap from 1/20 to 1.5625
[08/10 13:20:50]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:20:50]  Verifer returned sat in 2.052596 secs.
[08/10 13:20:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -831.364990    -931.264648 -11005.470459  -831.364990    0.100000  -931.264648   0.000000  99.899658       99.899658     4.0      -931.264648            -1             -1   False
1    -831.364746    -929.602295 -11005.470215  -831.364746   99.899902  -929.602295   0.000000  98.237549       -0.099854     5.0      -931.264648         False          False   False
2    -829.802490    -831.264893 -10907.032715  -829.802490   99.799805  -831.264893   0.000000   1.462402       -0.100098     1.0      -829.802490         False          False   False
3    -774.977295    -829.702148 -10861.857910  -774.977295   56.287598  -829.702148   0.000000  54.724854       -0.100098     1.0      -774.977295         False          False   False
4    -728.639648    -774.877197 -10808.095459  -728.639648  101.062500  -774.877197   0.000000  46.237549        0.000000     1.0      -774.977295         False          False   False
5    -620.652100    -628.739990 -10808.095459  -620.652100  154.225098  -628.739990   5.887695   2.200195        2.099854     1.0      -774.977295         False          False   False
6    -620.652100    -628.639648 -10710.195312  -620.652100    1.000000  -628.639648   5.887695   2.099854        0.000000     2.0      -774.977295         False          False    True
7    -620.652100    -626.539795 -10611.758057  -620.652100    2.000000  -626.539795   5.887695   0.000000       -1.562744     3.0      -774.977295         False          False    True
8    -618.652100    -624.977051 -10611.757812  -618.652100    2.000000  -624.977051   5.887695   0.437256      -99.562500     1.0      -774.977295         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=8601/4096.[0m
[08/10 13:20:51]  --------------------------------------------------------------------------------
[08/10 13:20:51]  Iteration: 145 (0 solution, 144 counterexamples)
[08/10 13:21:16]  Generator returned sat in 20.954362 secs.
[08/10 13:21:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:21:18]  Improved gap from 0 to 1.5625
[08/10 13:21:18]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:21:18]  Verifer returned sat in 1.797622 secs.
[08/10 13:21:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -877.673340   -1077.673584 -10959.061768  -877.673340  200.002441 -1077.673584   0.000000  200.000244      100.000244     2.0     -1077.673584            -1             -1   False
1    -877.673340    -879.236084 -10959.061768  -877.673340  199.999756  -879.236084   0.000000    1.562744        0.000244     2.0      -877.673340         False          False   False
2    -877.668457    -877.670654 -10959.061768  -877.668457    1.567627  -877.670654   0.000000    0.002197      -99.994873     1.0      -877.668457         False          False   False
3    -777.668213    -777.670898 -10959.061768  -777.668213  100.002441  -777.670898   0.000000    0.002686      -99.994629     1.0      -877.668457         False          False   False
4    -477.668213    -577.673584 -10959.061768  -477.668213  300.002686  -577.673584   0.002686  100.002686      100.002686     1.0      -877.668457         False          False   False
5    -477.668213    -479.673584 -10959.061768  -477.668213    0.010000  -479.673584   0.002686    2.002686        0.002686     2.0      -877.668457         False          False    True
6    -477.668213    -477.673584 -10860.624268  -477.668213    2.000000  -477.673584   0.002686    0.002686       -1.559814     3.0      -877.668457         False          False    True
7    -475.670898    -475.676025 -10762.621826  -475.670898    2.000000  -475.676025   0.002686    0.002441       -1.560059     1.0      -877.668457         False          False    True
8    -473.673340    -474.113281 -10762.621826  -473.673340    2.000000  -474.113281   0.002686    0.437256      -99.562500     1.0      -877.668457         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=409611/4096.[0m
[08/10 13:21:19]  --------------------------------------------------------------------------------
[08/10 13:21:19]  Iteration: 146 (0 solution, 145 counterexamples)
[08/10 13:21:32]  Generator returned sat in 8.277573 secs.
[08/10 13:21:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:21:34]  Improved gap from 0 to 1.5625
[08/10 13:21:34]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:21:34]  Verifer returned sat in 1.691962 secs.
[08/10 13:21:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1026.873535   -1026.904785 -10909.845947 -1026.873535    0.015381 -1026.904785        0.0    0.031250        0.015869     4.0     -1026.904785            -1             -1    True
1   -1026.873535   -1026.889160 -10811.408691 -1026.873535    0.015625 -1026.889160        0.0    0.015625       -1.546875     3.0     -1026.904785         False          False    True
2    -723.748535    -925.342529 -10811.408691  -723.748535  303.140625  -925.342529        0.0  201.593994      201.578125     1.0     -1026.904785         False          False    True
3    -723.748535    -925.326660 -10811.408691  -723.748535    0.015381  -925.326660        0.0  201.578125      101.578125     2.0      -723.748535         False          False    True
4    -723.748535    -725.326660 -10811.408691  -723.748535    1.500000  -725.326660        0.0    1.578125        1.578125     3.0      -723.748535         False          False    True
5    -723.748535    -725.311279 -10712.986816  -723.748535    1.500000  -725.311279        0.0    1.562744        0.000000     4.0      -723.748535         False          False    True
6    -723.748535    -723.748535 -10614.549316  -723.748535    1.500000  -723.748535        0.0    0.000000       -1.562500     5.0      -723.748535         False          False    True
7    -524.170410    -722.186035 -10614.549316  -524.170410  199.578125  -722.186035        0.0  198.015625       98.015625     1.0      -723.748535         False           True   False
8    -524.170410    -622.186035 -10614.549072  -524.170410    1.140625  -622.186035        0.0   98.015625       -1.984131     2.0      -723.748535         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=825727/4096.[0m
[08/10 13:21:35]  --------------------------------------------------------------------------------
[08/10 13:21:35]  Iteration: 147 (0 solution, 146 counterexamples)
[08/10 13:21:46]  Generator returned sat in 6.906460 secs.
[08/10 13:21:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:21:49]  Improved gap from 59/64 to 0
[08/10 13:21:49]  Improved number of small numbers from 60 to 98 out of a max of 114
[08/10 13:21:49]  Verifer returned sat in 2.973012 secs.
[08/10 13:21:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1802.370117   -1802.874756 -11307.262695 -1802.370117  0.015381 -1802.874756        0.0  0.504639        0.504639     7.0     -1802.874756            -1             -1     -1
1   -1802.369385   -1802.369629 -11208.272461 -1802.369385  0.505371 -1802.369629        0.0  0.000244       -0.504395     1.0     -1802.874756         False           True  False
2   -1801.864258   -1801.864746 -11108.273193 -1801.864258  0.505371 -1801.864746        0.0  0.000488        0.000000     1.0     -1802.874756         False          False  False
3   -1801.863281   -1801.864258 -11008.274170 -1801.863281  0.001465 -1801.864258        0.0  0.000977        0.000000     2.0     -1801.863281         False          False  False
4   -1801.853760   -1801.863118 -10908.283691 -1801.853760  0.010498 -1801.863118        0.0  0.009359        0.000000     1.0     -1801.863281         False          False  False
5   -1801.853118   -1801.853535 -10808.284424 -1801.853118  0.010000 -1801.853535        0.0  0.000417       -0.000091     1.0     -1801.863281         False          False  False
6   -1801.843535   -1801.852702 -10708.293945 -1801.843535  0.010000 -1801.852702        0.0  0.009167       -0.000029     1.0     -1801.863281         False          False  False
7   -1801.842702   -1801.843118 -10608.304199 -1801.842702  0.010000 -1801.843118        0.0  0.000417       -0.009450     1.0     -1801.863281         False          False  False
8   -1801.833118   -1801.833252 -10608.304199 -1801.833118  0.010000 -1801.833252        0.0  0.000133      -99.999867     1.0     -1801.863281         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1/1024.[0m
[08/10 13:21:50]  --------------------------------------------------------------------------------
[08/10 13:21:50]  Iteration: 148 (0 solution, 147 counterexamples)
[08/10 13:22:01]  Generator returned sat in 6.252163 secs.
[08/10 13:22:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:22:03]  Improved gap from 1/8192 to 0
[08/10 13:22:04]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 13:22:04]  Verifer returned sat in 2.392393 secs.
[08/10 13:22:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2250.126953   -2350.126953 -10760.010498 -2250.126953  100.049805 -2350.126953    0.000000  100.000000      100.000000     4.0     -2350.126953            -1             -1   False
1   -2250.126953   -2350.126953 -10760.010498 -2250.126953  100.000000 -2350.126953    0.000000  100.000000        0.000000     4.0     -2250.126953         False          False   False
2   -2150.126953   -2250.126953 -10760.010498 -2150.126953  200.000000 -2250.126953    0.000000  100.000000        0.000000     3.0     -2250.126953         False          False   False
3   -2150.026855   -2150.076904 -10760.010498 -2150.026855  100.100098 -2150.076904    0.000000    0.050049      -99.899902     1.0     -2150.026855         False          False   False
4   -1950.526855   -1950.576904 -10760.010498 -1950.526855  199.550049 -1950.576904    0.000000    0.050049       -0.399902     1.0     -2150.026855         False          False   False
5   -1551.526855   -1850.177002 -10760.010498 -1551.526855  399.050049 -1850.177002  297.050049    1.600098        1.550049     1.0     -2150.026855         False          False   False
6   -1551.526855   -1850.126953 -10661.560547 -1551.526855    1.000000 -1850.126953  297.050049    1.550049        0.000000     2.0     -2150.026855         False          False    True
7   -1551.526855   -1848.576904 -10561.560547 -1551.526855    1.500000 -1848.576904  297.050049    0.000000        0.000000     3.0     -2150.026855         False          False    True
8   -1550.026855   -1847.076904 -10561.560547 -1550.026855    1.500000 -1847.076904  297.050049    0.000000      -98.500000     1.0     -2150.026855         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=6349/4096.[0m
[08/10 13:22:04]  --------------------------------------------------------------------------------
[08/10 13:22:04]  Iteration: 149 (0 solution, 148 counterexamples)
[08/10 13:22:15]  Generator returned sat in 6.177655 secs.
[08/10 13:22:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:22:18]  Improved gap from 0 to 0
[08/10 13:22:18]  Improved number of small numbers from 61 to 93 out of a max of 114
[08/10 13:22:18]  Verifer returned sat in 2.941570 secs.
[08/10 13:22:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2086.002930   -2086.012695 -11139.781982 -2086.002930  0.000732 -2086.012695        0.0  0.009766        0.009206     3.0     -2086.012695            -1             -1   False
1   -2086.002930   -2086.011719 -11039.791260 -2086.002930  0.009766 -2086.011719        0.0  0.008789       -0.000072     3.0     -2086.012695         False          False   False
2   -2086.001953   -2086.002686 -10939.792969 -2086.001953  0.009766 -2086.002686        0.0  0.000732       -0.000804     1.0     -2086.012695         False          False   False
3   -2085.992676   -2086.001071 -10839.801514 -2085.992676  0.010010 -2086.001071        0.0  0.008395       -0.000072     1.0     -2086.012695         False          False   False
4   -2085.991071   -2085.991904 -10739.803223 -2085.991071  0.010000 -2085.991904        0.0  0.000833       -0.000176     1.0     -2086.012695         False          False   False
5   -2085.981904   -2085.990238 -10639.812256 -2085.981904  0.010000 -2085.990238        0.0  0.008333       -0.000042     1.0     -2086.012695         False          False   False
6   -2085.980238   -2085.981071 -10539.813965 -2085.980238  0.010000 -2085.981071        0.0  0.000833       -0.000085     1.0     -2086.012695         False          False   False
7   -2085.971071   -2085.971904 -10439.823242 -2085.971071  0.010000 -2085.971904        0.0  0.000833       -0.000195     1.0     -2086.012695         False          False   False
8   -2085.961904   -2085.970459 -10439.823242 -2085.961904  0.010000 -2085.970459        0.0  0.008555      -99.991029     1.0     -2086.012695         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1/600.[0m
[08/10 13:22:19]  --------------------------------------------------------------------------------
[08/10 13:22:19]  Iteration: 150 (0 solution, 149 counterexamples)
[08/10 13:22:32]  Generator returned sat in 8.578738 secs.
[08/10 13:22:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:22:34]  Improved gap from 1/20 to 0
[08/10 13:22:34]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 13:22:34]  Verifer returned sat in 1.775034 secs.
[08/10 13:22:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2189.980957   -2290.005859 -10935.812988 -2189.980957    0.025146 -2290.005859   0.000000  100.024902      100.000244     5.0     -2290.005859            -1             -1     -1
1   -2189.980957   -2289.981201 -10935.812988 -2189.980957    0.025146 -2289.981201   0.000000  100.000244        0.000244     4.0     -2290.005859         False           True  False
2   -2189.931152   -2189.956055 -10935.812988 -2189.931152  100.050049 -2189.956055   0.000000    0.024902      -99.949951     1.0     -2290.005859         False          False  False
3   -2089.906006   -2089.980957 -10835.913086 -2089.906006  100.050049 -2089.980957   0.000000    0.074951       -0.024902     1.0     -2290.005859         False          False  False
4   -1889.956055   -2089.880859 -10835.913086 -1889.956055  200.024902 -2089.880859  98.400146  101.524658        1.524902     1.0     -2290.005859         False          False  False
5   -1889.956055   -1989.881104 -10737.437988 -1889.956055    2.000000 -1989.881104  98.400146    1.524902        0.000000     2.0     -2290.005859         False          False   True
6   -1889.956055   -1988.356201 -10637.437988 -1889.956055    1.500000 -1988.356201  98.400146    0.000000        0.000000     3.0     -2290.005859         False          False   True
7   -1888.456055   -1986.881104 -10538.938232 -1888.456055    1.500000 -1986.881104  98.400146    0.024902       -0.000244     1.0     -2290.005859         False          False   True
8   -1886.980957   -1986.831299 -10538.938232 -1886.980957    1.500000 -1986.831299  98.400146    1.450195      -98.525146     1.0     -2290.005859         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=3123/2048.[0m
[08/10 13:22:35]  --------------------------------------------------------------------------------
[08/10 13:22:35]  Iteration: 151 (0 solution, 150 counterexamples)
[08/10 13:22:54]  Generator returned sat in 14.918257 secs.
[08/10 13:22:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:22:56]  Improved gap from 1/1000 to 23.4375
[08/10 13:22:56]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 13:22:56]  Verifer returned sat in 1.263045 secs.
[08/10 13:22:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2153.643799   -2477.380859 -10848.413330 -2153.643799  323.637500 -2477.380859   0.099854  323.637207      223.637207     2.0     -2477.380859            -1             -1     -1
1   -2153.643799   -2277.380859 -10848.413330 -2153.643799  323.537354 -2277.380859   0.099854  123.637207      123.637207     2.0     -2153.743652         False          False   True
2   -1953.843506   -2177.381104 -10848.413330 -1953.843506  323.437500 -2177.381104   0.099854  223.437744      223.437500     3.0     -1953.943359         False          False   True
3   -1953.843506   -2077.380859 -10848.413330 -1953.843506  111.450000 -2077.380859   0.099854  123.437500      123.437500     2.0     -1953.943359         False          False   True
4   -1953.843506   -1980.406006 -10848.413330 -1953.843506   54.725000 -1980.406006   0.099854   26.462646       23.437500     3.0     -1953.943359         False          False   True
5   -1953.843506   -1977.380859 -10771.850830 -1953.843506   26.362500 -1977.380859   0.099854   23.437500        0.000000     4.0     -1953.943359         False          False   True
6   -1953.843506   -1953.943359 -10695.288330 -1953.843506   12.181250 -1953.943359   0.099854    0.000000      -23.437500     5.0     -1953.943359         False          False   True
7   -1830.406006   -1930.505859 -10695.288330 -1830.406006  123.437500 -1930.505859   0.099854  100.000000        0.000000     1.0     -1953.943359         False           True  False
8   -1830.406006   -1830.505859 -10695.288086 -1830.406006   49.900146 -1830.505859   0.099854    0.000000      -99.999756     2.0     -1953.943359         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=17883/80.[0m
[08/10 13:22:57]  --------------------------------------------------------------------------------
[08/10 13:22:57]  Iteration: 152 (0 solution, 151 counterexamples)
[08/10 13:23:12]  Generator returned sat in 10.752521 secs.
[08/10 13:23:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 13:23:14]  Improved gap from 471811/20480 to 23.4375
[08/10 13:23:15]  Improved number of small numbers from 42 to 106 out of a max of 114
[08/10 13:23:15]  Verifer returned sat in 2.677301 secs.
[08/10 13:23:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2375.523682   -2575.573975 -9672.000488 -2375.523682    0.025146 -2575.573975   0.099854  199.950439      199.950439     2.0     -2575.573975            -1             -1     -1
1   -2375.499023   -2575.573730 -9672.000488 -2375.499023  199.975098 -2575.573730   0.099854  199.974854       99.975098     2.0     -2575.573975         False          False   True
2   -2152.036621   -2375.573975 -9672.000488 -2152.036621  423.437256 -2375.573975   0.099854  223.437500      223.437500     1.0     -2575.573975         False          False   True
3   -2152.036621   -2275.573975 -9672.000488 -2152.036621   94.799927 -2275.573975   0.099854  123.437500      123.437500     2.0     -2152.136475         False          False   True
4   -2152.036621   -2175.598633 -9672.000488 -2152.036621   46.899963 -2175.598633   0.099854   23.462158       23.437500     3.0     -2152.136475         False          False   True
5   -2152.036621   -2175.573975 -9595.437988 -2152.036621   22.949982 -2175.573975   0.099854   23.437500        0.000000     4.0     -2152.136475         False          False   True
6   -2152.036621   -2152.136475 -9518.875488 -2152.036621   10.974991 -2152.136475   0.099854    0.000000      -23.437500     5.0     -2152.136475         False          False   True
7   -2028.599121   -2128.698730 -9518.875488 -2028.599121  123.437500 -2128.698730   0.099854   99.999756        0.000000     1.0     -2152.136475         False           True  False
8   -2028.599121   -2028.698975 -9518.875488 -2028.599121   46.899902 -2028.698975   0.099854    0.000000     -100.000000     2.0     -2152.136475         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=457651/2048.[0m
[08/10 13:23:16]  --------------------------------------------------------------------------------
[08/10 13:23:16]  Iteration: 153 (0 solution, 152 counterexamples)
[08/10 13:23:25]  Generator returned unsat in 4.729198 secs.
[08/10 13:23:25]  [96mNo more solutions found[0m
[08/10 13:23:25]  Final solutions:
[08/10 13:23:25]  Took 1920.824270 secs.
