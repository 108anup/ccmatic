[08/10 15:28:54]  --------------------------------------------------------------------------------
[08/10 15:28:54]  Iteration: 1 (0 solution, 0 counterexamples)
[08/10 15:28:54]  Generator returned sat in 0.004806 secs.
[08/10 15:28:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:54]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:28:54]  Verifer returned sat in 0.408797 secs.
[08/10 15:28:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0          100.0            0.0       0.0        100.0     100.0          0.0        0.1     99.9            99.9     9.0              0.0            -1             -1     -1
1          100.1            0.0       0.0        100.1     100.0          0.0        0.1    100.0             0.0     9.0              0.0         False           True   True
2          200.2          200.0       0.0        200.2     200.1        200.0        0.1      0.1             0.1     1.0              0.0         False           True  False
3          400.2          200.2       0.0        400.2     200.1        200.2      100.0    100.0             0.2     1.0              0.0         False          False  False
4         1102.8          300.3       0.0       1102.8     802.6        300.3      702.6     99.9             0.2     1.0              0.0         False          False   True
5         3210.7          400.0       0.0       3210.7    2207.8        400.0     2710.5    100.2             0.2     2.0              0.0         False          False   True
6         7928.1          500.3       0.0       7928.1    4817.6        500.3     7327.9     99.9             0.2     1.0              0.0         False          False   True
7        18065.6          700.0       0.0      18065.6   10237.4        700.0    17365.4      0.2             0.2     1.0              0.0         False          False   True
8        39341.6          700.0       0.0      39341.6   21276.2        700.0    38541.4    100.2             0.2     1.0              0.0         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=1/5.[0m
[08/10 15:28:55]  --------------------------------------------------------------------------------
[08/10 15:28:55]  Iteration: 2 (0 solution, 1 counterexamples)
[08/10 15:28:55]  Generator returned sat in 0.213827 secs.
[08/10 15:28:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:56]  Improved number of small numbers from 103 to 105 out of a max of 113
[08/10 15:28:56]  Verifer returned sat in 0.772698 secs.
[08/10 15:28:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     563.753174     365.853271  428.425293   563.753174     0.099854   365.853271        0.1   197.799902      197.799663     5.0       365.853271            -1             -1     -1
1     563.753174     366.053333  428.425293   563.753174   197.799805   366.053333        0.1   197.599840       97.799663     2.0       365.853271         False           True   True
2     563.953333     563.753333  428.425470   563.953333   197.800000   563.753333        0.1     0.100000       -2.000000     1.0       365.853271         False          False   True
3     665.953333     565.853333  428.425470   665.953333   102.100000   565.853333        0.1   100.000000        0.000000     1.0       665.853333         False          False   True
4     768.153333     765.853271  428.425470   768.153333   202.200000   765.853271        0.1     2.200062        2.200000     1.0       665.853333         False          False   True
5    1168.353271     768.153333  428.425470  1168.353271   402.400000   768.153333        0.1   400.099938      302.399938     1.0       665.853333         False          False   True
6    1571.053333     865.853333  428.425470  1571.053333   802.800000   865.853333        0.1   705.100000      605.100000     2.0       665.853333         False          False   True
7    2469.553333     965.853333  428.425470  2469.553333  1603.600000   965.853333        0.1  1503.600000     1403.600000     3.0       665.853333         False          False   True
8    4171.153333    1065.853333  428.425470  4171.153333  3205.200000  1065.853333     1601.6  1503.700000     1403.700000     4.0       665.853333         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14037/10.[0m
[08/10 15:28:56]  --------------------------------------------------------------------------------
[08/10 15:28:56]  Iteration: 3 (0 solution, 2 counterexamples)
[08/10 15:28:57]  Generator returned sat in 0.135657 secs.
[08/10 15:28:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:57]  Improved gap from 0 to 100
[08/10 15:28:57]  Improved number of small numbers from 98 to 98 out of a max of 114
[08/10 15:28:57]  Verifer returned sat in 0.715927 secs.
[08/10 15:28:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     765.763333     764.913333  428.42547   765.763333  100.925000   764.913333    0.000000    0.850000          0.8500     1.0       764.913333            -1             -1    True
1     865.838333     764.913333  428.42547   865.838333  100.925000   764.913333    0.025000  100.900000          0.9000     1.0       764.913333         False          False    True
2     965.813333     864.988333  428.42547   965.813333  200.875000   864.988333    0.025000  100.800000          0.8750     2.0       764.913333         False          False    True
3    1065.863333    1064.913333  428.42547  1065.863333  200.850000  1064.913333    0.050000    0.900000          0.9000     1.0      1065.813333          True           True   False
4    1165.888333    1164.913333  428.42547  1165.888333  100.925000  1164.913333    0.075000    0.900000          0.9000     1.0      1065.813333         False          False    True
5    1215.950833    1164.913333  428.42547  1215.950833   50.962500  1164.913333    0.075000   50.962500        -49.0375     1.0      1065.813333         False          False    True
6    1839.282083    1264.913333  428.42547  1839.282083  674.293750  1264.913333  473.468750  100.900000          0.9000     1.0      1065.813333         False          False    True
7    2076.028958    1396.514896  428.42547  2076.028958  337.646875  1396.514896  610.215625   69.298438          0.9000     1.0      1065.813333         False          False    True
8    2176.053958    1465.813333  428.42547  2176.053958  169.323438  1465.813333  610.240625  100.000000          0.9000     2.0      1065.813333         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=9/10.[0m
[08/10 15:28:58]  --------------------------------------------------------------------------------
[08/10 15:28:58]  Iteration: 4 (0 solution, 3 counterexamples)
[08/10 15:28:58]  Generator returned sat in 0.214803 secs.
[08/10 15:28:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:28:59]  Improved gap from 0 to 100
[08/10 15:29:00]  Improved number of small numbers from 87 to 92 out of a max of 114
[08/10 15:29:00]  Verifer returned sat in 1.081173 secs.
[08/10 15:29:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     864.922083     864.921387  328.416095   864.922083    0.002500   864.921387    0.000000    0.000697       -0.000625     5.0       864.921387            -1             -1     -1
1     864.923096     864.922708  328.416095   864.923096    0.001709   864.922708    0.000000    0.000387      -99.999613     1.0       864.923096         False           True  False
2    1064.923958     964.922708  328.416095  1064.923958  200.001250   964.922708    0.000000  100.001250        0.001250     1.0       864.923096         False          False  False
3    1164.923333    1163.924271  328.416095  1164.923333  200.000625  1163.924271    0.000000    0.999062        0.000625     1.0      1164.923333         False          False  False
4    1264.924583    1264.922708  328.416095  1264.924583  101.000313  1264.922708    0.000625    0.001250        0.001250     1.0      1164.923333         False          False  False
5    1264.933333    1264.932083  328.416095  1264.933333    0.010000  1264.932083    0.000625    0.000625      -99.990000     1.0      1164.923333         False          False   True
6    1565.957083    1464.922708  328.416095  1565.957083  301.024375  1464.922708  101.033125    0.001250        0.001250     1.0      1164.923333         False          False   True
7    1565.965833    1464.922708  328.416095  1565.965833    0.010000  1464.922708  101.033125    0.010000      -99.990000     1.0      1164.923333         False          False   True
8    1766.970833    1564.922852  328.416095  1766.970833  201.015000  1564.922852  102.046875  100.001107        0.001250     1.0      1164.923333         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/800.[0m
[08/10 15:29:00]  --------------------------------------------------------------------------------
[08/10 15:29:00]  Iteration: 5 (0 solution, 4 counterexamples)
[08/10 15:29:01]  Generator returned sat in 0.272880 secs.
[08/10 15:29:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:01]  Improved gap from 0 to 100
[08/10 15:29:03]  Improved number of small numbers from 63 to 67 out of a max of 114
[08/10 15:29:03]  Verifer returned sat in 1.942157 secs.
[08/10 15:29:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1055.022949     964.922708  228.416095  1055.022949    0.099854   964.922708     0.000000   90.100241       90.100241     6.0       964.922708            -1             -1     -1
1    1075.122708    1055.122708  228.416095  1075.122708  110.200000  1055.122708    10.000000   10.000000        0.200000     1.0       964.922708         False           True  False
2    1175.222708    1065.222708  228.416095  1175.222708  110.100000  1065.222708    10.100000   99.900000        0.200000     1.0      1165.122708         False          False   True
3    1275.122708    1264.922708  228.416095  1275.122708  199.800000  1264.922708    10.100000    0.100000        0.100000     1.0      1165.122708         False          False   True
4    1976.922708    1264.922708  228.416095  1976.922708  701.900000  1264.922708   611.800000  100.200000        0.200000     1.0      1165.122708         False          False   True
5    1981.122708    1369.222708  228.416095  1981.122708  104.400000  1369.222708   611.800000    0.100000      -95.600000     1.0      1165.122708         False          False   True
6    2643.222708    1531.989375  228.416095  2643.222708  662.200000  1531.989375  1078.100000   33.133333        0.200000     1.0      1165.122708         False          False   True
7    2743.122708    1664.922708  228.416095  2743.122708  133.033333  1664.922708  1078.100000    0.100000        0.100000     1.0      1165.122708         False          False   True
8    3611.539375    1665.122803  228.416095  3611.539375  868.516667  1665.122803  1846.416667   99.999906        0.200000     1.0      1165.122708         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 15:29:03]  --------------------------------------------------------------------------------
[08/10 15:29:03]  Iteration: 6 (0 solution, 5 counterexamples)
[08/10 15:29:04]  Generator returned sat in 0.472110 secs.
[08/10 15:29:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:04]  Improved gap from 17/10 to 100
[08/10 15:29:05]  Improved number of small numbers from 104 to 104 out of a max of 114
[08/10 15:29:05]  Verifer returned sat in 0.806720 secs.
[08/10 15:29:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1031.989375     931.989375  228.416095   1031.989375      0.05   931.989375       0.05    99.95           99.95     6.0       931.989375            -1             -1     -1
1    1032.089375    1031.989375  228.416095   1032.089375    100.05  1031.989375       0.05     0.05            0.05     1.0       931.989375         False           True   True
2    1131.939375    1032.089375  228.416095   1131.939375     99.90  1032.089375       0.05    99.80           -0.10     1.0      1131.889375         False          False   True
3    1132.039375    1131.989375  228.416095   1132.039375     99.90  1131.989375       0.05     0.00         -100.00     1.0      1131.889375         False          False   True
4    1633.839375    1232.989375  228.416095   1633.839375    501.80  1232.989375       0.05   400.80          301.80     1.0      1131.889375         False          False   True
5    2540.139375    1431.989375  228.416095   2540.139375   1307.10  1431.989375       0.05  1108.10         1108.10     2.0      1131.889375         False          False   True
6    4648.089375    1531.989375  228.416095   4648.089375   3216.05  1531.989375       0.05  3116.05         3116.05     3.0      1131.889375         False          False   True
7    7962.139375    1631.989375  228.416095   7962.139375   6430.10  1631.989375       0.05  6330.10         6330.10     4.0      7962.089375          True           True  False
8   14490.239375    1731.989375  228.416095  14490.239375  12858.20  1731.989375    6428.10  6330.15         6330.15     4.0      7962.089375         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=126603/20.[0m
[08/10 15:29:05]  --------------------------------------------------------------------------------
[08/10 15:29:05]  Iteration: 7 (0 solution, 6 counterexamples)
[08/10 15:29:06]  Generator returned sat in 0.606831 secs.
[08/10 15:29:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:06]  Improved gap from 1/800 to 100
[08/10 15:29:07]  Improved number of small numbers from 63 to 67 out of a max of 114
[08/10 15:29:07]  Verifer returned sat in 1.166710 secs.
[08/10 15:29:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1031.983154    1031.980508  128.424962  1031.983154  100.00625  1031.980508    0.00125    0.001396        0.001396     3.0      1031.980508            -1             -1     -1
1    1131.988008    1131.980508  128.424962  1131.988008  100.00625  1131.980508    0.00125    0.006250        0.006250     1.0      1031.980508         False           True   True
2    1231.988008    1231.980508  128.424962  1231.988008  100.00625  1231.980508    0.00125    0.006250        0.006250     1.0      1031.980508         False          False   True
3    1331.988008    1231.980508  128.424962  1331.988008  100.00625  1231.980508    0.00125  100.006250        0.006250     1.0      1031.980508         False          False   True
4    1633.481758    1431.980508  128.424962  1633.481758  401.50000  1431.980508  201.49375    0.007500        0.007500     1.0      1031.980508         False          False   True
5    1633.484258    1431.989258  128.424962  1633.484258    0.01000  1431.989258  201.49375    0.001250      -99.990000     1.0      1031.980508         False          False   True
6    2035.000508    1631.980508  128.424962  2035.000508  401.51750  1631.980508  403.01250    0.007500        0.007500     1.0      1031.980508         False          False   True
7    2035.003008    1631.989258  128.424962  2035.003008    0.01000  1631.989258  403.01250    0.001250      -99.990000     1.0      1031.980508         False          False   True
8    2436.519258    1731.980713  128.424962  2436.519258  401.51750  1731.980713  604.53125  100.007295        0.007500     1.0      1031.980508         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/400.[0m
[08/10 15:29:08]  --------------------------------------------------------------------------------
[08/10 15:29:08]  Iteration: 8 (0 solution, 7 counterexamples)
[08/10 15:29:08]  Generator returned sat in 0.402287 secs.
[08/10 15:29:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:09]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 15:29:09]  Verifer returned sat in 0.415625 secs.
[08/10 15:29:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1836.561523    1031.980713  128.425049  1836.561523    0.049805  1031.980713  604.531006  200.049805      100.050049     2.0      1031.980713            -1             -1   False
1    1836.561523    1231.930420  128.425049  1836.561523    0.049805  1231.930420  604.531006    0.100098        0.050049     2.0      1031.980713         False          False   False
2    1836.561523    1231.980469  128.425049  1836.561523    0.050000  1231.980469  604.531006    0.050049      -99.949951     3.0      1031.980713         False          False   False
3    2283.611572    1384.780518  128.425049  2283.611572  447.100098  1384.780518  604.531006  294.300049      247.100098     1.0      1031.980713         False          False   False
4    2436.411621    1531.980469  128.425049  2436.411621  447.100098  1531.980469  604.531006  299.900146      299.900146     2.0      1031.980713         False          False   False
5    2583.611572    1631.930420  128.425049  2583.611572  447.100098  1631.930420  604.531006  347.150146      347.100098     3.0      1031.980713         False          False   False
6    2683.561523    1679.130615  128.425049  2683.561523  447.100098  1679.130615  604.531006  399.899902      347.050049     3.0      1031.980713         False          False   False
7    2730.761719    1831.930664  128.425049  2730.761719  447.100098  1831.930664  604.531006  294.300049      294.250244     3.0      1031.980713         False          False   False
8    2883.561768    1831.980469  128.425049  2883.561768  447.100098  1831.980469  604.531006  447.050293      347.050293     4.0      1031.980713         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=710861/2048.[0m
[08/10 15:29:10]  --------------------------------------------------------------------------------
[08/10 15:29:10]  Iteration: 9 (0 solution, 8 counterexamples)
[08/10 15:29:10]  Generator returned sat in 0.042018 secs.
[08/10 15:29:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:10]  Improved gap from 1/100 to 48.4375
[08/10 15:29:11]  Improved number of small numbers from 101 to 114 out of a max of 114
[08/10 15:29:11]  Verifer returned sat in 0.776787 secs.
[08/10 15:29:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1837.011230    1234.055420   26.349854  1837.011230  299.999756  1234.055420  602.906006    0.049805        0.049805     9.0      1234.055420            -1             -1     -1
1    2136.911377    1334.055420   26.349854  2136.911377  299.949951  1334.055420  602.906006  199.949951      199.949951     1.0      1534.005371         False           True  False
2    2236.561279    1434.055420   26.349854  2236.561279  299.599854  1434.055420  602.906006  199.599854      199.599854     2.0      1633.655273         False          False  False
3    2236.561279    1534.055420   26.349854  2236.561279   50.937500  1534.055420  602.906006   99.599854       99.599854     2.0      1633.655273         False          False  False
4    2236.561279    1633.605225   26.349854  2236.561279   50.437500  1633.605225  602.906006    0.050049       -0.400146     3.0      1633.655273         False          False  False
5    2286.448730    1634.055469   76.862549  2286.448730   49.937500  1634.055469  602.906006   49.487256        0.000000     1.0      1633.655273         False          False  False
6    2286.448730    1683.542725  128.424805  2286.448730   49.437500  1683.542725  602.906006    0.000000      -48.437744     2.0      1633.655273         False          False  False
7    2335.386230    1731.980469  179.987305  2335.386230   48.937500  1731.980469  602.906006    0.499756      -47.937744     1.0      1633.655273         False          False  False
8    2383.323975    1780.417969  179.987305  2383.323975   48.437500  1780.417969  602.906006    0.000000     -100.000000     1.0      1633.655273         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=200.[0m
[08/10 15:29:11]  --------------------------------------------------------------------------------
[08/10 15:29:11]  Iteration: 10 (0 solution, 9 counterexamples)
[08/10 15:29:12]  Generator returned sat in 0.476911 secs.
[08/10 15:29:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:13]  Improved gap from 1/300 to 0
[08/10 15:29:13]  Improved number of small numbers from 61 to 71 out of a max of 114
[08/10 15:29:13]  Verifer returned sat in 1.226058 secs.
[08/10 15:29:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0      740.01167     640.011475   26.349854    740.01167  100.00000   640.011475    0.00125  99.998945       99.998750     1.0       640.011475            -1             -1     -1
1      740.01167     640.011670   26.349854    740.01167   99.99875   640.011670    0.00125  99.998750       -0.001250     2.0       740.010420         False          False   True
2      740.01417     740.011670  126.348604    740.01417  100.00125   740.011670    0.00125   0.001250        0.000000     1.0       740.010420         False           True  False
3      840.01792     789.012695  126.348604    840.01792  100.00500   789.012695    0.00250  51.002725        0.002500     1.0       740.010420         False          False  False
4      840.01792     840.015420  226.346104    840.01792   51.00250   840.015420    0.00250   0.000000        0.000000     2.0       740.010420         False          False   True
5      840.02792     840.015420  326.336104    840.02792    0.01000   840.015420    0.00250   0.010000        0.000000     2.0       840.025420          True           True  False
6      840.02792     840.025420  426.335938    840.02792    0.01000   840.025420    0.00250   0.000000       -0.000166     2.0       840.025420         False           True  False
7      840.03792     840.034170  526.325928    840.03792    0.01000   840.034170    0.00250   0.001250       -0.000176     1.0       840.025420         False           True  False
8      840.04667     840.036865  626.317139    840.04667    0.01000   840.036865    0.00250   0.007305       -0.000215     1.0       840.025420         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1/400.[0m
[08/10 15:29:14]  --------------------------------------------------------------------------------
[08/10 15:29:14]  Iteration: 11 (0 solution, 10 counterexamples)
[08/10 15:29:14]  Generator returned sat in 0.094941 secs.
[08/10 15:29:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:15]  Improved gap from 1/600 to 100
[08/10 15:29:15]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:29:15]  Verifer returned sat in 0.397031 secs.
[08/10 15:29:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     340.017822     339.917725  326.343506   340.017822    0.100098   339.917725    0.000000    0.100098        0.000000     6.0       339.917725            -1             -1     -1
1     340.117920     340.017822  326.343506   340.117920    0.200195   340.017822    0.000000    0.100098      -99.899902     2.0       339.917725         False           True  False
2     540.017822     539.917969  326.343506   540.017822  200.000000   539.917969    0.000000    0.099854        0.000000     1.0       339.917725         False          False  False
3     739.917969     540.117920  326.343506   739.917969  200.000000   540.117920   99.699951  100.100098        0.200195     1.0       339.917725         False          False  False
4     840.018066     739.817871  326.343506   840.018066  200.200195   739.817871   99.800049    0.400146        0.200195     1.0       339.917725         False          False   True
5    1239.417969     740.218018  326.343506  1239.417969  399.800049   740.218018  399.199951  100.000000        0.200195     2.0       339.917725         False          False   True
6    1339.718018     840.317871  326.343506  1339.718018  200.300049   840.317871  399.500000   99.900146        0.200195     1.0       339.917725         False          False   True
7    1540.017822     940.018066  326.343506  1540.017822  300.199951   940.018066  499.799805  100.199951        0.200195     2.0       339.917725         False          False   True
8    1640.018066    1040.317871  326.343506  1640.018066  200.200195  1040.317871  499.800049   99.900146        0.200195     1.0       339.917725         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=205/1024.[0m
[08/10 15:29:15]  --------------------------------------------------------------------------------
[08/10 15:29:15]  Iteration: 12 (0 solution, 11 counterexamples)
[08/10 15:29:16]  Generator returned sat in 0.368581 secs.
[08/10 15:29:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:17]  Improved gap from 3/400 to 100
[08/10 15:29:17]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:29:17]  Verifer returned sat in 1.038712 secs.
[08/10 15:29:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -195.645508    -595.695312  1262.006836  -195.645508  598.099854  -595.695312   0.000000  400.049805      400.000000     8.0      -595.695312            -1             -1     -1
1       2.354736    -595.645508  1262.006836     2.354736  598.050049  -595.645508   0.000000  598.000244      498.000244     2.0         2.354736         False           True  False
2      44.209717    -477.355957  1262.006836    44.209717  639.855225  -477.355957   0.000000  521.565674      439.855225     3.0         2.354736         False          False  False
3     167.075195    -395.645264  1262.006836   167.075195  644.431152  -395.645264   0.000000  562.720459      462.720703     4.0         2.354736         False          False  False
4     167.075195    -195.645508  1262.006836   167.075195  522.765625  -195.645508   0.000000  362.720703      362.720703     5.0         2.354736         False          False  False
5     466.237305    -195.645264  1262.006836   466.237305  661.882812  -195.645264  63.832764  598.049805      498.050049     5.0         2.354736         False          False  False
6     466.237305       2.354736  1262.006836   466.237305  332.441406     2.354736  63.832764  400.049805      398.050049     6.0         2.354736         False          False   True
7     630.908203      44.259766  1262.006836   630.908203  564.720703    44.259766  63.832764  522.815674      462.720947     5.0         2.354736         False           True  False
8     630.908203     204.354492  1262.006836   630.908203  522.765625   204.354492  63.832764  362.720947      362.720947     4.0         2.354736         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2040013/4096.[0m
[08/10 15:29:18]  --------------------------------------------------------------------------------
[08/10 15:29:18]  Iteration: 13 (0 solution, 12 counterexamples)
[08/10 15:29:19]  Generator returned sat in 0.386825 secs.
[08/10 15:29:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:19]  Improved gap from 0 to 100
[08/10 15:29:20]  Improved number of small numbers from 75 to 91 out of a max of 114
[08/10 15:29:20]  Verifer returned sat in 1.068094 secs.
[08/10 15:29:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -143.895264    -243.695557  1262.006836  -143.895264    0.100098  -243.695557    0.099854   99.700439       99.700342     1.0      -243.695557            -1             -1     -1
1    -143.695557    -143.895264  1262.006836  -143.695557   99.900146  -143.895264    0.099854    0.099854       -0.099951     1.0      -243.695557         False          False   True
2    -143.495605    -143.695312  1262.006836  -143.495605    0.299805  -143.695312    0.099854    0.099854      -99.900000     1.0      -143.595459         False          False   True
3     245.604541     -39.995459  1262.006836   245.604541  389.200000   -39.995459  189.100000   96.500000        0.200000     1.0      -143.595459         False          False   True
4     345.704541     156.304541  1262.006836   345.704541  196.600000   156.304541  189.200000    0.200000        0.200000     1.0      -143.595459         False          False   True
5     445.804541     256.304541  1262.006836   445.804541  100.300000   256.304541  189.300000    0.200000        0.200000     1.0      -143.595459         False          False   True
6     497.754541     256.304541  1262.006836   497.754541   52.150000   256.304541  189.300000   52.150000      -47.850000     1.0      -143.595459         False          False   True
7     914.129541     356.304541  1262.006836   914.129541  468.525000   356.304541  457.625000  100.200000        0.200000     1.0      -143.595459         False          False   True
8    1050.192041     456.304688  1262.006836  1050.192041  236.262500   456.304688  493.687500  100.199854        0.200000     2.0      -143.595459         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:29:20]  --------------------------------------------------------------------------------
[08/10 15:29:20]  Iteration: 14 (0 solution, 13 counterexamples)
[08/10 15:29:22]  Generator returned sat in 0.736063 secs.
[08/10 15:29:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:22]  Improved gap from 0 to 100
[08/10 15:29:22]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 15:29:22]  Verifer returned sat in 0.363437 secs.
[08/10 15:29:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     -53.995605    -154.295654  1661.206787   -53.995605  200.100098  -154.295654    0.100098  100.199951      100.199951     5.0      -154.295654            -1             -1     -1
1      45.904541     -54.295654  1661.206787    45.904541  200.100098   -54.295654  100.000000    0.200195        0.200195     6.0      -154.295654         False           True   True
2     145.804443     -54.295654  1661.206787   145.804443  100.100098   -54.295654  100.000000  100.100098        0.100098     6.0        45.804443          True           True   True
3     145.804443      45.704346  1661.206787   145.804443  100.000000    45.704346  100.000000    0.100098      -99.899902     2.0        45.804443         False           True  False
4     345.704346     245.704346  1661.206787   345.704346  200.000000   245.704346  100.000000    0.000000        0.000000     1.0        45.804443         False          False  False
5     695.704346     245.704590  1661.206787   695.704346  350.000000   245.704590  349.799805  100.199951        0.200195     1.0        45.804443         False          False  False
6     943.504395     346.004639  1661.206787   943.504395  348.000000   346.004639  497.599854   99.899902        0.200195     1.0        45.804443         False          False   True
7    1189.604492     446.004639  1661.206787  1189.604492  346.000000   446.004639  643.699951   99.899902        0.200195     1.0        45.804443         False          False   True
8    1433.704590     546.004639  1661.206787  1433.704590  344.000000   546.004639  787.800049   99.899902        0.200195     1.0        45.804443         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=205/1024.[0m
[08/10 15:29:23]  --------------------------------------------------------------------------------
[08/10 15:29:23]  Iteration: 15 (0 solution, 14 counterexamples)
[08/10 15:29:23]  Generator returned sat in 0.397799 secs.
[08/10 15:29:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:24]  Improved gap from 1/600 to 0
[08/10 15:29:24]  Improved number of small numbers from 73 to 89 out of a max of 114
[08/10 15:29:24]  Verifer returned sat in 0.937941 secs.
[08/10 15:29:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     -53.995850    -153.996582  1661.206787   -53.995850  100.001465  -153.996582   0.000732  100.000000       99.999857     6.0      -153.996582            -1             -1     -1
1     -53.994873     -53.996582  1661.206787   -53.994873  100.000977   -53.996582   0.000732    0.000977        0.000833     2.0       -53.995605         False           True   True
2     146.001709     -53.996338  1661.206787   146.001709  199.997559   -53.996338   0.000732  199.997314       99.997415     2.0       -53.995605         False           True  False
3     342.002728     146.003561  1661.206787   342.002728  395.998333   146.003561  96.000833   99.998333       99.998333     1.0       -53.995605         False           True  False
4     442.003561     244.003145  1661.206787   442.003561  199.999167   244.003145  96.001667  101.998750       99.998333     2.0       -53.995605         False          False   True
5     442.004395     345.994395  1661.206787   442.004395  101.999583   345.994395  96.001667    0.008333       -0.000833     2.0       346.002728          True           True   True
6     442.006061     346.003561  1761.205811   442.006061    0.010000   346.003561  96.001667    0.000833       -0.000143     1.0       346.002728         False           True  False
7     442.015228     346.012728  1861.187744   442.015228    0.010000   346.012728  96.001667    0.000833       -0.009043     1.0       346.002728         False          False  False
8     442.024395     346.022705  1861.187744   442.024395    0.010000   346.022705  96.001667    0.000023      -99.999876     1.0       346.002728         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=59999/600.[0m
[08/10 15:29:25]  --------------------------------------------------------------------------------
[08/10 15:29:25]  Iteration: 16 (0 solution, 15 counterexamples)
[08/10 15:29:28]  Generator returned sat in 2.047221 secs.
[08/10 15:29:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:29]  Improved number of small numbers from 58 to 64 out of a max of 113
[08/10 15:29:29]  Verifer returned sat in 1.078531 secs.
[08/10 15:29:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -409.062500    -409.262272  1816.47262  -409.062500  1621.999756  -409.262272      0.100    0.099772      -99.900228     2.0      -409.262272            -1             -1     -1
1    1212.837728    -209.262272  1816.47262  1212.837728  1622.000000  -209.262272   1322.200   99.900000       99.900000     1.0      -409.262272         False          False   True
2    2734.837728    -109.262272  1816.47262  2734.837728  1621.900000  -109.262272   2744.200   99.900000       99.900000     1.0        -9.362272         False          False   True
3    4256.737728      -9.262272  1816.47262  4256.737728  1621.800000    -9.262272   4166.100   99.900000       99.900000     1.0        90.637728         False          False   True
4    4966.237728      -9.162272  1816.47262  4966.237728   809.400000    -9.162272   4775.600  199.800000       99.900000     2.0        90.637728         False          False   True
5    5169.637728     190.637728  1816.47262  5169.637728   403.200000   190.637728   4879.000  100.000000       99.900000     2.0        90.637728         False          False   True
6    5269.737728     290.737549  1816.47262  5269.737728   200.100000   290.737549   4879.100   99.900179       99.900000     1.0        90.637728         False          False   True
7    5269.737728     346.012728  1816.47262  5269.737728    98.550000   346.012728   4879.100   44.625000       -0.100000     2.0        90.637728         False          False   True
8    6034.512728     390.737793  1816.47262  6034.512728   809.400000   390.737793   5443.875  199.899935       99.900000     1.0        90.637728         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=999/10.[0m
[08/10 15:29:29]  --------------------------------------------------------------------------------
[08/10 15:29:29]  Iteration: 17 (0 solution, 16 counterexamples)
[08/10 15:29:30]  Generator returned sat in 0.136070 secs.
[08/10 15:29:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:31]  Improved number of small numbers from 64 to 64 out of a max of 113
[08/10 15:29:31]  Verifer returned sat in 1.203333 secs.
[08/10 15:29:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -409.062500    -409.262272  1816.47262  -409.062500  1621.999756  -409.262272      0.100    0.099772      -99.900228     2.0      -409.262272            -1             -1     -1
1    1219.687728    -230.037272  1816.47262  1219.687728  1628.850000  -230.037272   1329.050  120.675000       99.900000     1.0      -409.262272         False          False   True
2    2727.837728    -109.262272  1816.47262  2727.837728  1628.825000  -109.262272   2737.200   99.900000       99.900000     1.0        -9.362272         False          False   True
3    4256.737728      -9.337272  1816.47262  4256.737728  1628.800000    -9.337272   4166.100   99.975000       99.900000     1.0        90.637728         False          False   True
4    4969.162728      -9.262272  1816.47262  4969.162728   812.400000    -9.262272   4778.525  199.900000       99.900000     2.0        90.637728         False          False   True
5    5173.462728     190.637728  1816.47262  5173.462728   404.200000   190.637728   4882.825  100.000000       99.900000     2.0        90.637728         False          False   True
6    5273.562728     290.737549  1816.47262  5273.562728   200.100000   290.737549   4882.925   99.900179       99.900000     1.0        90.637728         False          False   True
7    5273.562728     347.662728  1816.47262  5273.562728    98.050000   347.662728   4882.925   42.975000       -0.100000     2.0        90.637728         False          False   True
8    6042.987728     390.737793  1816.47262  6042.987728   812.400000   390.737793   5452.350  199.899935       99.900000     1.0        90.637728         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=999/10.[0m
[08/10 15:29:32]  --------------------------------------------------------------------------------
[08/10 15:29:32]  Iteration: 18 (0 solution, 17 counterexamples)
[08/10 15:29:33]  Generator returned sat in 0.899987 secs.
[08/10 15:29:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:34]  Improved gap from 1/800 to 23.4375
[08/10 15:29:35]  Improved number of small numbers from 39 to 49 out of a max of 114
[08/10 15:29:35]  Verifer returned sat in 1.965778 secs.
[08/10 15:29:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4598.957520    3269.905273 -1737.212637  4598.957520  100.007568  3269.905273  1329.049805    0.002441       -0.002627     1.0      3269.905273            -1             -1     -1
1    4698.960205    3269.910342 -1737.212637  4698.960205  100.005127  3269.910342  1329.049805  100.000059        0.000059     1.0      3369.910400         False          False   True
2    4799.977646    3469.910342 -1737.212637  4799.977646  201.017500  3469.910342  1330.062305    0.005000        0.005000     1.0      3369.910400         False          False   True
3    5000.987646    3470.897842 -1737.212637  5000.987646  201.015000  3470.897842  1431.072305   99.017500        0.005000     1.0      3569.915342         False          False   True
4    5100.985146    3669.910342 -1737.212637  5100.985146  199.015000  3669.910342  1431.072305    0.002500        0.002500     1.0      3569.915342         False          False   True
5    5200.990146    3695.347842 -1737.212637  5200.990146  100.007500  3695.347842  1431.074805   74.567500        0.005000     1.0      3569.915342         False          False   True
6    5224.430146    3769.917842 -1660.657637  5224.430146   98.007500  3769.917842  1431.074805   23.437500        0.000000     1.0      3569.915342         False          False   True
7    5250.496396    3793.355342 -1586.723887  5250.496396   49.503750  3793.355342  1431.074805   26.066250        0.000000     2.0      3569.915342         False          False   True
8    5250.496396    3819.421592 -1586.723877  5250.496396    0.010000  3819.421592  1431.074805    0.000000      -99.999990     2.0      3819.421592          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/200.[0m
[08/10 15:29:36]  --------------------------------------------------------------------------------
[08/10 15:29:36]  Iteration: 19 (0 solution, 18 counterexamples)
[08/10 15:29:37]  Generator returned sat in 0.871180 secs.
[08/10 15:29:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:39]  Improved gap from 1/20 to 15.625
[08/10 15:29:40]  Improved number of small numbers from 59 to 85 out of a max of 114
[08/10 15:29:40]  Verifer returned sat in 2.223061 secs.
[08/10 15:29:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4633.757812    4633.557861 -1905.962402  4633.757812   15.925049  4633.557861      0.000   0.199951       -0.099600     9.0      4633.557861            -1             -1     -1
1    4649.382812    4633.857422 -1821.587637  4649.382812   15.824951  4633.857422      0.000  15.525391       -0.099834     1.0      4649.382812         False           True  False
2    4649.582520    4649.482646 -1737.212637  4649.582520   15.725098  4649.482646      0.000   0.099873      -15.525127     1.0      4649.582520         False          False  False
3    4765.407646    4765.107646 -1737.212637  4765.407646  115.925000  4765.107646      0.100   0.200000        0.200000     1.0      4649.582520         False          False  False
4    4880.632646    4789.695312 -1737.212637  4880.632646  115.425000  4789.695312     15.325  75.612334        0.200000     1.0      4649.582520         False          False   True
5    4919.945312    4865.407646 -1680.449951  4919.945312  114.925000  4865.407646     15.325  39.212666       -3.724648     1.0      4649.582520         False          False   True
6    4939.195146    4908.345146 -1596.075137  4939.195146   58.462500  4908.345146     15.325  15.525000       -0.100000     1.0      4649.582520         False          False   True
7    4953.901396    4923.970146 -1511.700137  4953.901396   30.231250  4923.970146     15.325  14.606250       -1.018750     1.0      4649.582520         False          False   True
8    4955.410771    4939.595146 -1427.325195  4955.410771   16.115625  4939.595146     15.325   0.490625      -15.134434     1.0      4649.582520         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/10 15:29:40]  --------------------------------------------------------------------------------
[08/10 15:29:40]  Iteration: 20 (0 solution, 19 counterexamples)
[08/10 15:29:41]  Generator returned sat in 0.153511 secs.
[08/10 15:29:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:43]  Improved gap from 0 to 15.625
[08/10 15:29:43]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:29:43]  Verifer returned sat in 2.161388 secs.
[08/10 15:29:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4385.026367    4184.926514 -1737.212646  4385.026367    0.100000  4184.926514   0.099854  200.000000      100.000000     6.0      4184.926514            -1             -1     -1
1    4385.026367    4284.926514 -1737.212646  4385.026367  200.000000  4284.926514   0.099854  100.000000        0.000000     5.0      4184.926514         False           True   True
2    4484.626465    4484.426514 -1737.212646  4484.626465  199.600098  4484.426514   0.099854    0.100098       -0.399902     1.0      4484.526611          True           True  False
3    4603.526367    4584.926514 -1737.212646  4603.526367  119.000000  4584.926514   0.199951   18.399902       18.399902     1.0      4603.326416         False          False  False
4    4703.626465    4684.926514 -1737.212646  4703.626465  118.500000  4684.926514   0.300049   18.399902       18.399902     1.0      4603.326416         False          False   True
5    4803.226562    4759.601562 -1737.212646  4803.226562  118.000000  4759.601562   0.300049   43.324951       18.000000     1.0      4603.326416         False          False   True
6    4819.401611    4803.026367 -1671.487549  4819.401611   59.500000  4803.026367   0.300049   16.075195       -0.099854     1.0      4603.326416         False          False   True
7    4833.576416    4819.201416 -1587.112549  4833.576416   30.250000  4819.201416   0.300049   14.074951       -1.550049     1.0      4603.326416         False          False   True
8    4835.126465    4834.826416 -1587.112549  4835.126465   15.625000  4834.826416   0.300049    0.000000     -100.000000     1.0      4603.326416         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=37683/2048.[0m
[08/10 15:29:44]  --------------------------------------------------------------------------------
[08/10 15:29:44]  Iteration: 21 (0 solution, 20 counterexamples)
[08/10 15:29:45]  Generator returned sat in 0.707272 secs.
[08/10 15:29:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:46]  Improved gap from 0 to 100
[08/10 15:29:46]  Improved number of small numbers from 57 to 114 out of a max of 114
[08/10 15:29:46]  Verifer returned sat in 0.807187 secs.
[08/10 15:29:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4703.451416    4603.326172 -2055.612549  4703.451416    0.024902  4603.326172    0.099854  100.025391      100.025391     9.0      4603.326172            -1             -1     -1
1    4703.451416    4703.301514 -2055.612549  4703.451416    0.025146  4703.301514    0.099854    0.050049        0.025391     9.0      4603.326172         False           True   True
2    4703.451416    4703.326416 -2055.612549  4703.451416    0.025146  4703.326416    0.099854    0.025146      -99.974609     4.0      4603.326172          True           True  False
3    5025.226562    4803.326172 -2055.612549  5025.226562  321.800293  4803.326172  119.850342  102.050049        2.050049     1.0      4603.326172          True           True  False
4    5183.076660    4905.401367 -2055.612549  5183.076660  259.900146  4905.401367  177.700439   99.974854        2.050049     1.0      4603.326172         False          False   True
5    5313.101807    5005.401123 -2055.612549  5313.101807  230.000000  5005.401123  207.725586   99.975098        2.050049     1.0      4603.326172         False          False   True
6    5478.164062    5105.401123 -2055.612549  5478.164062  265.037354  5105.401123  272.787842   99.975098        2.050049     1.0      4603.326172         False          False   True
7    5660.745117    5205.401367 -2055.612549  5660.745117  282.556152  5205.401367  355.368896   99.974854        2.050049     1.0      4603.326172         False          False   True
8    5851.048340    5305.401367 -2055.612549  5851.048340  290.278076  5305.401367  445.672119   99.974854        2.050049     1.0      4603.326172         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=8397/4096.[0m
[08/10 15:29:47]  --------------------------------------------------------------------------------
[08/10 15:29:47]  Iteration: 22 (0 solution, 21 counterexamples)
[08/10 15:29:48]  Generator returned sat in 0.605215 secs.
[08/10 15:29:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:48]  Improved gap from 1/10 to 0
[08/10 15:29:48]  Improved number of small numbers from 109 to 114 out of a max of 114
[08/10 15:29:48]  Verifer returned sat in 0.428790 secs.
[08/10 15:29:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5176.063965    4975.964111 -2055.612549  5176.063965  200.149902  4975.964111   0.000000  200.099854      100.099854     7.0      4975.964111            -1             -1     -1
1    5176.114258    5175.964111 -2055.612549  5176.114258  200.150146  5175.964111   0.050049    0.100098        0.100098     4.0      4975.964111         False           True  False
2    5276.164062    5275.964111 -2055.612549  5276.164062  100.149902  5275.964111   0.099854    0.100098        0.100098     1.0      5276.064209         False          False   True
3    5377.714111    5375.964111 -2055.612549  5377.714111  101.650146  5375.964111   1.649902    0.100098        0.100098     1.0      5276.064209         False          False   True
4    5477.764160    5376.114062 -2055.612549  5477.764160  100.150146  5376.114062   1.699951   99.950146        0.100098     1.0      5276.064209         False          False   True
5    5477.764160    5475.964111 -1955.712646  5477.764160   98.650146  5475.964111   1.699951    0.100098        0.000000     2.0      5276.064209         False          False   True
6    5478.164062    5476.114258 -1856.262451  5478.164062    0.500000  5476.114258   1.699951    0.349854       -0.149902     1.0      5276.064209         False          False   True
7    5478.314209    5476.614258 -1756.262695  5478.314209    0.500000  5476.614258   1.699951    0.000000        0.000000     1.0      5276.064209         False          False   True
8    5478.814209    5476.614258 -1656.762695  5478.814209    0.500000  5476.614258   1.699951    0.500000        0.000000     1.0      5276.064209         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=205/2048.[0m
[08/10 15:29:49]  --------------------------------------------------------------------------------
[08/10 15:29:49]  Iteration: 23 (0 solution, 22 counterexamples)
[08/10 15:29:51]  Generator returned sat in 1.352081 secs.
[08/10 15:29:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:51]  Improved gap from 0 to 100
[08/10 15:29:52]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/10 15:29:52]  Verifer returned sat in 0.487914 secs.
[08/10 15:29:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5275.914062    5075.964111 -2055.612549  5275.914062    0.049805  5075.964111     0.000000  199.949951      199.949951     3.0      5075.964111            -1             -1    True
1    5275.914062    5175.963867 -2055.612549  5275.914062  199.949951  5175.963867     0.000000   99.950195       99.949951     2.0      5075.964111         False          False    True
2    5275.914062    5175.964111 -2055.612549  5275.914062   99.950195  5175.964111     0.000000   99.949951       -0.050049     3.0      5275.914062         False          False    True
3    5443.880615    5275.964111 -2055.612549  5443.880615  267.916504  5275.964111     0.000000  167.916504       67.916504     1.0      5275.914062         False          False    True
4    5945.880615    5443.930664 -2055.612549  5945.880615  669.916504  5443.930664   369.916504  132.033447      100.000000     1.0      5275.914062         False          False    True
5    5945.880615    5475.964111 -2055.612549  5945.880615  131.983398  5475.964111   369.916504  100.000000        0.000000     2.0      5275.914062         False          False    True
6    6579.864014    5610.597412 -2055.612549  6579.864014  733.983398  5610.597412   803.899902  165.366699      100.000000     1.0      5275.914062         False          False    True
7    6579.864014    5775.964111 -2055.612549  6579.864014  165.316650  5775.964111   803.899902    0.000000        0.000000     2.0      5275.914062         False          False    True
8    7411.247559    5775.964111 -2055.612549  7411.247559  831.383545  5775.964111  1435.283447  200.000000      100.000000     2.0      5275.914062         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:29:52]  --------------------------------------------------------------------------------
[08/10 15:29:52]  Iteration: 24 (0 solution, 23 counterexamples)
[08/10 15:29:56]  Generator returned sat in 3.374039 secs.
[08/10 15:29:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:29:57]  Improved gap from 0 to 100
[08/10 15:29:58]  Improved number of small numbers from 60 to 69 out of a max of 114
[08/10 15:29:58]  Verifer returned sat in 1.355867 secs.
[08/10 15:29:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5371.811514    5271.806641 -2351.454951  5371.811514  100.002686  5271.806641     0.0025  100.002373          0.0025     3.0      5271.806641            -1             -1     -1
1    5371.811514    5371.806514 -2351.454951  5371.811514  100.000000  5371.806514     0.0025    0.002500        -99.9975     4.0      5371.809014         False          False   True
2    5871.809014    5571.806396 -2351.454951  5871.809014  500.000000  5571.806396     0.0025  300.000117        300.0000     1.0      5371.809014         False          False   True
3    5871.809014    5671.806514 -2351.454951  5871.809014  300.000000  5671.806514     0.0025  200.000000        200.0000     2.0      5871.806514         False          False   True
4    5871.809014    5671.809014 -2351.454951  5871.809014    0.010000  5671.809014     0.0025  199.997500        100.0000     3.0      5871.806514         False          False   True
5    5871.809014    5871.794189 -2351.454951  5871.809014    0.010000  5871.794189     0.0025    0.012324          0.0000     4.0      5871.806514         False          False   True
6    5871.809014    5871.806514 -2351.454951  5871.809014    0.010000  5871.806514     0.0025    0.000000       -100.0000     5.0      5871.806514         False          False   True
7    6073.829014    5971.806514 -2351.454951  6073.829014  202.020000  5971.806514     0.0025  102.020000          2.0200     1.0      5871.806514         False           True  False
8    6677.846514    6073.828857 -2351.454951  6677.846514  706.037500  6073.828857   204.0150  400.002656        302.0250     1.0      5871.806514         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=12081/40.[0m
[08/10 15:29:59]  --------------------------------------------------------------------------------
[08/10 15:29:59]  Iteration: 25 (0 solution, 24 counterexamples)
[08/10 15:30:00]  Generator returned sat in 0.528216 secs.
[08/10 15:30:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:00]  Improved gap from 1/10 to 100
[08/10 15:30:01]  Improved number of small numbers from 71 to 83 out of a max of 114
[08/10 15:30:01]  Verifer returned sat in 1.037687 secs.
[08/10 15:30:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5471.694092    5371.694189 -2351.454834  5471.694092  100.299805  5371.694189    0.000000   99.999902       99.899902     1.0      5371.694189            -1             -1   False
1    5471.894189    5471.794189 -2351.454834  5471.894189  100.200000  5471.794189    0.000000    0.100000        0.100000     1.0      5471.894189         False          False   False
2    5571.994189    5471.794189 -2351.454834  5571.994189  100.200000  5471.794189    0.000000  100.200000        0.200000     1.0      5471.894189         False          False   False
3    5672.094189    5638.627523 -2351.454834  5672.094189  200.300000  5638.627523    0.100000   33.366667        0.200000     1.0      5471.894189         False          False   False
4    5772.194189    5771.794189 -2351.454834  5772.194189  133.466667  5771.794189    0.200000    0.200000        0.200000     1.0      5471.894189         False          False    True
5    5921.994189    5871.794189 -2351.454834  5921.994189  150.000000  5871.794189   50.000000    0.200000        0.200000     1.0      5471.894189         False          False    True
6    6121.794189    5871.994189 -2351.454834  6121.794189  200.000000  5871.994189  149.800000  100.000000        0.200000     2.0      5471.894189         False          False    True
7    6138.477523    5972.094189 -2351.454834  6138.477523  116.683333  5972.094189  149.800000   16.583333      -83.116667     1.0      5988.677523          True           True    True
8    6581.335856    6071.794189 -2351.454834  6581.335856  459.441667  6071.794189  409.341667  100.200000        0.200000     1.0      5988.677523         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:30:02]  --------------------------------------------------------------------------------
[08/10 15:30:02]  Iteration: 26 (0 solution, 25 counterexamples)
[08/10 15:30:04]  Generator returned sat in 1.391257 secs.
[08/10 15:30:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:04]  Improved gap from 0 to 100
[08/10 15:30:04]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:30:04]  Verifer returned sat in 0.444502 secs.
[08/10 15:30:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4551.404053    4351.454346 -2351.455078  4551.404053  199.999756  4351.454346    0.000000  199.949707       99.949707     2.0      4351.454346            -1             -1   False
1    4551.404297    4451.454346 -2351.455078  4551.404297  199.949951  4451.454346    0.000000   99.949951       -0.050049     2.0      4551.404297         False          False   False
2    4651.354248    4551.454346 -2351.455078  4651.354248  199.899902  4551.454346    0.000000   99.899902       -0.100098     1.0      4651.354248         False          False   False
3    4908.504150    4680.729248 -2351.455078  4908.504150  357.049805  4680.729248    0.050049  227.724854      156.999756     1.0      4651.354248         False          False   False
4    5008.554199    4822.179199 -2351.455078  5008.554199  327.774902  4822.179199    0.100098  186.274902      156.999756     2.0      4651.354248         False          False    True
5    5191.504150    4951.454102 -2351.455078  5191.504150  369.224854  4951.454102   83.050049  157.000000      156.999756     2.0      4651.354248         False          False    True
6    5433.003906    5029.454346 -2351.455078  5433.003906  398.499756  5029.454346  224.549805  178.999756      156.999756     2.0      4651.354248         False          False    True
7    5601.229248    5151.454102 -2351.455078  5601.229248  347.225098  5151.454102  292.775146  157.000000      156.999756     2.0      4651.354248         False          False    True
8    5772.004150    5151.454346 -2351.455078  5772.004150  327.774902  5151.454346  363.550049  256.999756      156.999756     3.0      4651.354248         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=643071/4096.[0m
[08/10 15:30:05]  --------------------------------------------------------------------------------
[08/10 15:30:05]  Iteration: 27 (0 solution, 26 counterexamples)
[08/10 15:30:07]  Generator returned sat in 0.826780 secs.
[08/10 15:30:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:08]  Improved number of small numbers from 74 to 76 out of a max of 113
[08/10 15:30:08]  Verifer returned sat in 1.247716 secs.
[08/10 15:30:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4551.403809    4351.504053 -2351.455078  4551.403809  199.999756  4351.504053    0.000000  199.899756       99.899756     2.0      4351.504053            -1             -1   False
1    4551.404053    4488.504053 -2351.455078  4551.404053  199.900000  4488.504053    0.000000   62.900000       -0.100000     2.0      4551.404053         False          False   False
2    4551.604053    4551.504053 -2351.455078  4551.604053   63.100000  4551.504053    0.000000    0.100000      -99.900000     1.0      4551.604053         False          False   False
3    4751.804053    4686.037386 -2351.455078  4751.804053  200.300000  4686.037386    0.100000   65.666667        0.200000     1.0      4551.604053         False          False   False
4    4851.904053    4798.370719 -2351.455078  4851.904053  165.766667  4798.370719    0.200000   53.333333        0.200000     1.0      4551.604053         False          False    True
5    4952.004053    4951.504053 -2351.455078  4952.004053  153.433333  4951.504053    0.300000    0.200000        0.200000     1.0      4551.604053         False          False    True
6    5150.304053    4997.481831 -2351.455078  5150.304053  198.500000  4997.481831   98.600000   54.222222        0.200000     1.0      4551.604053         False          False    True
7    5250.304053    5051.704053 -2351.455078  5250.304053  154.222222  5051.704053   98.600000  100.000000        0.200000     2.0      4551.604053         False          False    True
8    5966.915164    5151.504150 -2351.455078  5966.915164  816.611111  5151.504150  715.211111  100.199902        0.200000     2.0      4551.604053         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:30:08]  --------------------------------------------------------------------------------
[08/10 15:30:08]  Iteration: 28 (0 solution, 27 counterexamples)
[08/10 15:30:10]  Generator returned sat in 0.311023 secs.
[08/10 15:30:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:10]  Improved gap from 1/40 to 100
[08/10 15:30:11]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 15:30:11]  Verifer returned sat in 1.302449 secs.
[08/10 15:30:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4506.767334    4406.867354 -2351.455078  4506.767334    0.100098  4406.867354        0.0   99.899980        -0.10002     2.0      4406.867354            -1             -1   False
1    4606.967354    4506.867354 -2351.455078  4606.967354  200.100000  4506.867354        0.0  100.100000         0.10000     1.0      4406.867354         False          False   False
2    4705.567354    4705.567354 -2351.455078  4705.567354  198.700000  4705.567354        0.0    0.000000        -1.30000     1.0      4705.567354         False          False   False
3    4767.767354    4767.667354 -2351.455078  4767.767354   62.200000  4767.667354        0.0    0.100000       -39.10000     1.0      4767.767354         False          False   False
4    4949.567354    4841.067354 -2351.455078  4949.567354  181.900000  4841.067354       42.5   66.000000         0.20000     1.0      4767.767354         False          False   False
5    5049.667354    4907.167354 -2351.455078  5049.667354  166.100000  4907.167354       42.6   99.900000         0.20000     1.0      4767.767354         False          False    True
6    5049.667354    5006.867354 -2351.455078  5049.667354   99.800000  5006.867354       42.6    0.200000       -99.80000     2.0      4767.767354         False          False    True
7    5728.967354    5206.867354 -2351.455078  5728.967354  679.500000  5206.867354      521.9    0.200000         0.20000     1.0      4767.767354         False          False    True
8    5910.667354    5306.867188 -2351.455078  5910.667354  181.900000  5306.867188      603.6    0.200166         0.20000     1.0      4767.767354         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/10 15:30:12]  --------------------------------------------------------------------------------
[08/10 15:30:12]  Iteration: 29 (0 solution, 28 counterexamples)
[08/10 15:30:13]  Generator returned sat in 0.613885 secs.
[08/10 15:30:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:13]  Improved gap from 1/1600 to 100
[08/10 15:30:14]  Improved number of small numbers from 96 to 114 out of a max of 114
[08/10 15:30:14]  Verifer returned sat in 0.527587 secs.
[08/10 15:30:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5149.057187    5048.957275 -2993.544922  5149.057187  100.100098  5048.957275     0.000000  100.099912        0.099912     6.0      5048.957275            -1             -1     -1
1    5149.057187    5148.957275 -2993.544922  5149.057187   99.999756  5148.957275     0.000000    0.099912      -99.900088     6.0      5149.057187         False           True  False
2    5398.157227    5348.857178 -2993.544922  5398.157227  249.199951  5348.857178     0.099854   49.200195       49.100098     1.0      5149.057187         False           True  False
3    5398.157227    5348.957275 -2993.544922  5398.157227    0.100098  5348.957275     0.099854   49.100098      -50.899902     2.0      5398.057373         False          False   True
4    5950.757324    5449.090576 -2993.544922  5950.757324  601.700195  5449.090576   352.699951  148.966797       49.100098     1.0      5398.057373         False          False   True
5    5950.857178    5548.957275 -2993.544922  5950.857178  149.066650  5548.957275   352.699951   49.199951      -50.800049     2.0      5398.057373         False          False   True
6    6601.490723    5648.957275 -2993.544922  6601.490723  699.833496  5648.957275   803.433350  149.100098       49.100098     1.0      5398.057373         False          False   True
7    6601.490723    5748.957275 -2993.544922  6601.490723  149.000000  5748.957275   803.433350   49.100098      -50.899902     2.0      5398.057373         False          False   True
8    7451.624023    5848.957275 -2993.544922  7451.624023  899.233398  5848.957275  1453.566650  149.100098       49.100098     1.0      5398.057373         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=100557/2048.[0m
[08/10 15:30:14]  --------------------------------------------------------------------------------
[08/10 15:30:14]  Iteration: 30 (0 solution, 29 counterexamples)
[08/10 15:30:17]  Generator returned sat in 1.485405 secs.
[08/10 15:30:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:18]  Improved number of small numbers from 79 to 86 out of a max of 113
[08/10 15:30:18]  Verifer returned sat in 0.815090 secs.
[08/10 15:30:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5249.057373    5048.957275 -2993.544922  5249.057373  200.100098  5048.957275    0.000000  200.100098      100.100098     6.0      5048.957275            -1             -1     -1
1    5249.057373    5190.357275 -2993.544922  5249.057373  200.000000  5190.357275    0.000000   58.700098        0.100098     6.0      5249.057373         False           True  False
2    5390.257275    5249.457275 -2993.544922  5390.257275  199.900000  5249.457275   41.100000   99.700000        0.200000     1.0      5349.157275         False           True  False
3    5490.357275    5402.290609 -2993.544922  5490.357275  199.800000  5402.290609   41.200000   46.866667        0.200000     1.0      5449.157275         False          False   True
4    5621.157275    5495.623942 -2993.544922  5621.157275  177.666667  5495.623942   72.000000   53.533333        0.200000     1.0      5449.157275         False          False   True
5    5721.257275    5648.957275 -2993.544922  5721.257275  153.633333  5648.957275   72.100000    0.200000        0.200000     1.0      5449.157275         False          False   True
6    5921.807275    5748.957275 -2993.544922  5921.807275  200.750000  5748.957275  172.650000    0.200000        0.200000     1.0      5449.157275         False          False   True
7    6095.940609    5848.957275 -2993.544922  6095.940609  174.333333  5848.957275  246.783333    0.200000        0.200000     1.0      5449.157275         False          False   True
8    6273.407275    5849.257080 -2993.544922  6273.407275  177.666667  5849.257080  324.250000   99.900195        0.200000     1.0      5449.157275         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=1/5.[0m
[08/10 15:30:18]  --------------------------------------------------------------------------------
[08/10 15:30:18]  Iteration: 31 (0 solution, 30 counterexamples)
[08/10 15:30:19]  Generator returned sat in 0.169259 secs.
[08/10 15:30:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:20]  Improved gap from 1/600 to 100
[08/10 15:30:20]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:30:20]  Verifer returned sat in 0.572812 secs.
[08/10 15:30:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5246.190918    5129.090820 -2976.611816  5246.190918  116.999756  5129.090820    0.000000  117.100098      117.100098     2.0       5129.09082            -1             -1     -1
1    5246.190918    5129.090820 -2976.611816  5246.190918  116.999756  5129.090820    0.000000  117.100098       17.100098     2.0       5129.09082         False           True  False
2    5246.390869    5246.290527 -2976.611816  5246.390869  117.300049  5246.290527    0.000000    0.100342      -82.699951     1.0       5129.09082         False           True  False
3    5446.390625    5406.957520 -2976.611816  5446.390625  200.100098  5406.957520    0.099854   39.333252       17.199951     1.0       5129.09082         False          False  False
4    5546.490723    5528.990723 -2976.611816  5546.490723  139.433350  5528.990723    0.199951   17.300049       17.199951     1.0       5129.09082         False          False   True
5    5729.640625    5629.090820 -2976.611816  5729.640625  200.449951  5629.090820   83.349854   17.199951       17.199951     1.0       5129.09082         False          False   True
6    5904.340820    5699.579590 -2976.611816  5904.340820  191.900146  5699.579590  158.050049   46.711182       17.199951     1.0       5129.09082         False          False   True
7    6004.440674    5806.857422 -2976.611816  6004.440674  146.811035  5806.857422  158.149902   39.433350       17.199951     1.0       5129.09082         False          False   True
8    6104.440674    5829.090820 -2976.611816  6104.440674  139.433350  5829.090820  158.149902  117.199951       17.199951     2.0       5129.09082         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=70451/4096.[0m
[08/10 15:30:21]  --------------------------------------------------------------------------------
[08/10 15:30:21]  Iteration: 32 (0 solution, 31 counterexamples)
[08/10 15:30:28]  Generator returned sat in 5.834073 secs.
[08/10 15:30:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:28]  Improved gap from 1/1200 to 0
[08/10 15:30:29]  Improved number of small numbers from 61 to 82 out of a max of 114
[08/10 15:30:29]  Verifer returned sat in 1.040966 secs.
[08/10 15:30:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5046.300293    4946.303711 -2976.611816  5046.300293  100.001465  4946.303711   0.000000  99.996582       99.996432     1.0      4946.303711            -1             -1    True
1    5046.305420    5046.302002 -2976.611816  5046.305420  100.001709  5046.302002   0.000000   0.003418        0.001559     1.0      4946.303711         False          False    True
2    5046.305420    5046.303861 -2876.613483  5046.305420    0.001709  5046.303861   0.000000   0.001559       -0.000107     2.0      5046.305420         False          False    True
3    5148.310527    5145.303861 -2876.613483  5148.310527  102.006667  5145.303861   2.001667   1.005000        0.003333     1.0      5046.305420         False           True   False
4    5248.312194    5146.310527 -2876.613483  5248.312194  101.006667  5146.310527   2.003333  99.998333        0.003333     1.0      5046.305420         False          False    True
5    5248.320527    5246.308861 -2776.625150  5248.320527  100.006667  5246.308861   2.003333   0.008333        0.000000     2.0      5046.305420         False          False    True
6    5248.322194    5246.317194 -2676.626953  5248.322194    0.010000  5246.317194   2.003333   0.001667       -0.000137     2.0      5246.318861          True           True   False
7    5248.330527    5246.320527 -2576.635254  5248.330527    0.010000  5246.320527   2.003333   0.006667       -0.000104     1.0      5246.318861         False           True   False
8    5248.333861    5246.328857 -2476.638672  5248.333861    0.010000  5246.328857   2.003333   0.001670       -0.000189     1.0      5246.318861         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/300.[0m
[08/10 15:30:29]  --------------------------------------------------------------------------------
[08/10 15:30:29]  Iteration: 33 (0 solution, 32 counterexamples)
[08/10 15:30:38]  Generator returned sat in 7.745156 secs.
[08/10 15:30:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:38]  Improved gap from 1/800 to 100
[08/10 15:30:39]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 15:30:39]  Verifer returned sat in 0.994270 secs.
[08/10 15:30:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4746.327148    4546.327298 -2576.635254  4746.327148    0.001250  4546.327298    0.00000  199.999850       199.99985     2.0      4546.327298            -1             -1    True
1    4746.327148    4646.327298 -2576.635254  4746.327148    0.001250  4646.327298    0.00000   99.999850        99.99985     2.0      4546.327298         False          False    True
2    4746.327148    4646.327298 -2576.635254  4746.327148   99.999756  4646.327298    0.00000   99.999850        -0.00015     2.0      4546.327298         False          False    True
3    4746.329798    4746.328548 -2576.635254  4746.329798  100.002500  4746.328548    0.00000    0.001250       -99.99750     1.0      4546.327298         False          False    True
4    5047.832298    4913.326048 -2576.635254  5047.832298  301.503750  4913.326048    1.50500  133.001250       100.00000     1.0      4546.327298         False          False    True
5    5047.832298    4946.327298 -2576.635254  5047.832298    0.010000  4946.327298    1.50500  100.000000         0.00000     2.0      4546.327298         False          False    True
6    5249.342298    5046.327298 -2576.635254  5249.342298  301.510000  5046.327298    3.01500  200.000000       100.00000     3.0      4546.327298         False          False    True
7    5249.342298    5246.326048 -2576.635254  5249.342298    0.010000  5246.326048    3.01500    0.001250         0.00000     2.0      5246.327298          True           True    True
8    5583.851048    5246.328613 -2576.635254  5583.851048  334.510000  5246.328613  137.52375  199.998685       100.00000     1.0      5246.327298         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:30:40]  --------------------------------------------------------------------------------
[08/10 15:30:40]  Iteration: 34 (0 solution, 33 counterexamples)
[08/10 15:30:44]  Generator returned sat in 2.842516 secs.
[08/10 15:30:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:44]  Improved gap from 1/600 to 100
[08/10 15:30:45]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 15:30:45]  Verifer returned sat in 1.175553 secs.
[08/10 15:30:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4895.529785    4761.529798 -2576.635254  4895.529785    0.100098  4761.529798      0.000  133.999987       99.899987     4.0      4761.529798            -1             -1   False
1    4895.629798    4795.629798 -2576.635254  4895.629798  134.100000  4795.629798      0.000  100.000000        0.000000     4.0      4761.529798         False          False   False
2    5046.317298    4989.854798 -2576.635254  5046.317298  250.687500  4989.854798      0.000   56.462500       50.687500     1.0      4761.529798         False          False   False
3    5146.517298    5086.854798 -2576.635254  5146.517298  156.662500  5086.854798      0.100   59.562500       50.787500     1.0      5146.417298         False          False   False
4    5247.617298    5170.304798 -2576.635254  5247.617298  160.662500  5170.304798      1.200   76.112500       50.787500     1.0      5146.417298         False          False    True
5    5356.842298    5295.629798 -2576.635254  5356.842298  185.337500  5295.629798     10.425   50.787500       50.787500     1.0      5146.417298         False          False    True
6    5456.942298    5394.629798 -2576.635254  5456.942298  150.887500  5394.629798     10.525   51.787500       50.787500     1.0      5146.417298         False          False    True
7    5557.042298    5495.629798 -2576.635254  5557.042298  151.887500  5495.629798     10.625   50.787500       50.787500     1.0      5146.417298         False          False    True
8    5666.917298    5495.729736 -2576.635254  5666.917298  160.662500  5495.729736     20.500  150.687562       50.787500     2.0      5146.417298         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=4063/80.[0m
[08/10 15:30:46]  --------------------------------------------------------------------------------
[08/10 15:30:46]  Iteration: 35 (0 solution, 34 counterexamples)
[08/10 15:30:52]  Generator returned sat in 5.079440 secs.
[08/10 15:30:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:52]  Improved number of small numbers from 79 to 113 out of a max of 113
[08/10 15:30:52]  Verifer returned sat in 0.414270 secs.
[08/10 15:30:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5095.429932    4895.429688 -2676.435303  5095.429932    0.100098  4895.429688    0.000000  200.000244      200.000000     4.0      4895.429688            -1             -1   False
1    5495.729736    4895.429932 -2676.435303  5495.729736  600.300049  4895.429932  100.199951  500.099854      400.099854     4.0      4895.429688         False          False   False
2    5595.829834    5095.429932 -2676.435303  5595.829834  600.199951  5095.429932  100.300049  400.099854      400.099854     4.0      5495.529785         False          False    True
3    5696.429932    5095.429932 -2676.435303  5696.429932  500.699951  5095.429932  100.900146  500.099854      400.099854     4.0      5595.529785         False          False    True
4    5696.429932    5295.429688 -2676.435303  5696.429932  499.199951  5295.429688  100.900146  300.100098      300.099854     4.0      5595.529785         False          False    True
5    5896.529785    5296.729980 -2676.435303  5896.529785  500.199951  5296.729980  101.000000  498.799805      400.099854     5.0      5595.529785         False          False    True
6    5896.529785    5395.429932 -2676.435303  5896.529785  498.699951  5395.429932  101.000000  400.099854      300.099854     6.0      5595.529785         False          False    True
7    5996.129883    5595.429932 -2676.435303  5996.129883  499.699951  5595.429932  101.000000  299.699951      299.699951     5.0      5595.529785         False          False    True
8    6197.129883    5595.629639 -2676.435303  6197.129883  500.699951  5595.629639  101.600098  499.900146      400.099854     4.0      5595.529785         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1638809/4096.[0m
[08/10 15:30:53]  --------------------------------------------------------------------------------
[08/10 15:30:53]  Iteration: 36 (0 solution, 35 counterexamples)
[08/10 15:30:56]  Generator returned sat in 1.753435 secs.
[08/10 15:30:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:30:56]  Improved gap from 0 to 0
[08/10 15:30:57]  Improved number of small numbers from 60 to 76 out of a max of 114
[08/10 15:30:57]  Verifer returned sat in 1.074613 secs.
[08/10 15:30:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5894.811279    5694.811084 -3575.816455  5894.811279    0.099854  5694.811084    0.00125  199.998945       99.998945     2.0      5694.811084            -1             -1     -1
1    5994.812334    5894.811035 -3575.816455  5994.812334  300.000000  5894.811035    0.00125  100.000049      100.000000     1.0      5694.811084         False          False   True
2    5994.812334    5994.811084 -3575.816455  5994.812334   99.999756  5994.811084    0.00125    0.000000        0.000000     2.0      5994.811084         False          False   True
3    6294.824834    5994.811279 -3575.816455  6294.824834  300.012500  5994.811279    0.00250  300.011055      200.011250     1.0      5994.811084         False          False   True
4    6294.824834    6144.824707 -3575.816455  6294.824834  299.512500  6144.824707    0.00250  149.997627      100.011250     2.0      5994.811084         False          False   True
5    6294.824834    6294.809814 -3575.816455  6294.824834    0.010000  6294.809814    0.00250    0.012520        0.011250     3.0      5994.811084         False          False   True
6    6294.824834    6294.811279 -3475.827705  6294.824834    0.010000  6294.811279    0.00250    0.011055        0.000000     4.0      5994.811084         False          False   True
7    6294.824834    6294.822334 -3375.827881  6294.824834    0.010000  6294.822334    0.00250    0.000000       -0.000176     5.0      5994.811084         False          False   True
8    6294.834834    6294.823730 -3275.837891  6294.834834    0.010000  6294.823730    0.00250    0.008604       -0.000186     1.0      5994.811084         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=160009/800.[0m
[08/10 15:30:58]  --------------------------------------------------------------------------------
[08/10 15:30:58]  Iteration: 37 (0 solution, 36 counterexamples)
[08/10 15:30:59]  Generator returned sat in 0.570484 secs.
[08/10 15:30:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:00]  Improved gap from 0 to 0
[08/10 15:31:01]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 15:31:01]  Verifer returned sat in 1.505073 secs.
[08/10 15:31:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5845.805908    5745.807334 -3875.809326  5845.805908    0.099609  5745.807334   0.000000  99.998574       -0.001380     2.0      5745.807334            -1             -1   False
1    5845.810667    5845.807373 -3775.812705  5845.810667  100.003333  5845.807373   0.000000   0.003294        0.000000     1.0      5745.807334         False          False   False
2    5845.810667    5845.810667 -3675.812705  5845.810667    0.001465  5845.810667   0.000000   0.000000        0.000000     2.0      5845.810667         False          False   False
3    5946.815667    5945.810667 -3675.812705  5946.815667  101.005000  5945.810667   1.001667   0.003333        0.003333     1.0      5845.810667         False          False   False
4    6047.317334    6045.810667 -3675.812705  6047.317334  100.505000  6045.810667   1.503333   0.003333        0.003333     1.0      5845.810667         False          False    True
5    6147.319001    6046.312334 -3675.812705  6147.319001  100.005000  6046.312334   1.505000  99.501667        0.003333     1.0      5845.810667         False          False    True
6    6147.322334    6145.815667 -3575.819580  6147.322334   99.505000  6145.815667   1.505000   0.001667       -0.000208     1.0      5845.810667         False          False    True
7    6147.330667    6145.819001 -3475.827881  6147.330667    0.010000  6145.819001   1.505000   0.006667       -0.000176     1.0      5845.810667         False          False    True
8    6147.334001    6145.827393 -3475.827881  6147.334001    0.010000  6145.827393   1.505000   0.001608      -99.996842     1.0      5845.810667         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/300.[0m
[08/10 15:31:01]  --------------------------------------------------------------------------------
[08/10 15:31:01]  Iteration: 38 (0 solution, 37 counterexamples)
[08/10 15:31:05]  Generator returned sat in 2.633659 secs.
[08/10 15:31:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:06]  Improved gap from 0 to 23.4375
[08/10 15:31:07]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:31:07]  Verifer returned sat in 1.312513 secs.
[08/10 15:31:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4731.143311    4631.127686 -2661.160889  4731.143311  100.062256  4631.127686    0.000000  100.015625       99.984619     1.0      4631.127686            -1             -1   False
1    4731.174561    4731.158691 -2661.160889  4731.174561  100.046875  4731.158691    0.000000    0.015869        0.015869     1.0      4731.174561         False          False   False
2    4831.205566    4831.158691 -2661.160889  4831.205566  100.046875  4831.158691    0.015625    0.031250        0.031250     1.0      4731.174561         False          False   False
3    5612.674316    4831.174316 -2661.160889  5612.674316  781.500000  4831.174316  681.484375  100.015625        0.031250     2.0      4731.174561         False          False    True
4    5902.908691    5031.096191 -2661.160889  5902.908691  390.250000  5031.096191  871.718750    0.093750        0.031250     1.0      5031.189941          True           True    True
5    6097.439941    5034.361816 -2661.160889  6097.439941  194.625000  5034.361816  966.250000   96.828125        0.031250     1.0      5031.189941         False          False    True
6    6097.439941    5131.174316 -2584.614014  6097.439941   96.812500  5131.174316  966.250000    0.015625      -23.421875     2.0      5031.189941         False          False    True
7    6147.330566    5154.612061 -2511.082764  6147.330566   49.906250  5154.612061  966.250000   26.468506        0.000000     1.0      5181.080566          True           True   False
8    6147.330566    5181.080566 -2434.520264  6147.330566   26.453125  5181.080566  966.250000    0.000000      -23.437500     2.0      5181.080566         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/32.[0m
[08/10 15:31:07]  --------------------------------------------------------------------------------
[08/10 15:31:07]  Iteration: 39 (0 solution, 38 counterexamples)
[08/10 15:31:13]  Generator returned sat in 4.128696 secs.
[08/10 15:31:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:13]  Improved gap from 1/600 to 100
[08/10 15:31:14]  Improved number of small numbers from 82 to 106 out of a max of 114
[08/10 15:31:14]  Verifer returned sat in 0.936048 secs.
[08/10 15:31:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5909.025146    5455.080566 -3585.083008  5909.025146  453.944580  5455.080566   0.000000  453.944580      353.944580     4.0      5455.080566            -1             -1   False
1    5909.025146    5655.080566 -3585.083008  5909.025146  453.844482  5655.080566   0.000000  253.944580      253.944580     2.0      5909.025146         False          False   False
2    6108.825195    5754.980713 -3585.083008  6108.825195  453.744629  5754.980713   0.000000  353.844482      353.744629     3.0      6108.825195         False          False   False
3    6108.825195    5755.080566 -3585.083008  6108.825195  235.762963  5755.080566   0.000000  353.744629      253.744629     4.0      6108.825195         False          False   False
4    6108.825195    5955.080566 -3585.083008  6108.825195  353.644444  5955.080566   0.000000  153.744629      153.744629     3.0      6108.825195         False          False   False
5    6485.547233    5955.180420 -3585.083008  6485.547233  530.466667  5955.180420  30.216667  500.150146      400.250000     4.0      6108.825195         False          False   False
6    6485.547233    6055.230469 -3585.083008  6485.547233  266.733333  6055.230469  30.216667  400.100098      300.250000     5.0      6108.825195         False          False    True
7    6485.547233    6155.080566 -3585.083008  6485.547233  400.100000  6155.080566  30.216667  300.250000      200.250000     3.0      6108.825195         False           True   False
8    6785.447233    6355.080566 -3585.083008  6785.447233  600.150000  6355.080566  30.216667  400.150000      400.150000     4.0      6108.825195         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1601/4.[0m
[08/10 15:31:14]  --------------------------------------------------------------------------------
[08/10 15:31:14]  Iteration: 40 (0 solution, 39 counterexamples)
[08/10 15:31:41]  Generator returned sat in 25.399997 secs.
[08/10 15:31:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:42]  Improved number of small numbers from 75 to 84 out of a max of 113
[08/10 15:31:42]  Verifer returned sat in 1.006482 secs.
[08/10 15:31:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5908.975098    5830.795654 -3585.083252  5908.975098   78.279541  5830.795654       0.05   78.129443       78.129337     1.0      5830.795654            -1             -1     -1
1    5909.075146    5908.975146 -3585.083008  5909.075146   78.229492  5908.975146       0.05    0.050000      -21.770370     1.0      5909.025146         False          False   True
2    5987.254639    5987.154776 -3585.083008  5987.254639   78.229492  5987.154776       0.05    0.049863      -43.590878     1.0      5909.025146         False          False   True
3    6065.434406    6065.334406 -3585.083008  6065.434406   78.229630  6065.334406       0.05    0.050000      -65.411111     1.0      5909.025146         False          False   True
4    6183.228850    6183.128850 -3585.083008  6183.228850  117.844444  6183.128850       0.05    0.050000      -47.616667     1.0      5909.025146         False          False   True
5    6360.445517    6230.795517 -3585.083008  6360.445517  177.266667  6230.795517       0.05  129.600000       29.600000     1.0      5909.025146         False          False   True
6    6497.245517    6430.795517 -3585.083008  6497.245517  266.400000  6430.795517       0.05   66.400000       66.400000     1.0      5909.025146         False          False   True
7    6830.945517    6430.795517 -3585.083008  6830.945517  400.100000  6430.795517       0.10  400.050000      300.050000     1.0      5909.025146         False          False   True
8    6830.945517    6530.795654 -3585.083008  6830.945517  202.050000  6530.795654       0.10  300.049863      200.050000     2.0      5909.025146         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6001/20.[0m
[08/10 15:31:43]  --------------------------------------------------------------------------------
[08/10 15:31:43]  Iteration: 41 (0 solution, 40 counterexamples)
[08/10 15:31:50]  Generator returned sat in 6.183046 secs.
[08/10 15:31:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:51]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 15:31:51]  Verifer returned sat in 0.368985 secs.
[08/10 15:31:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5728.495361    5428.395508 -3182.682861  5728.495361  299.799805  5428.395508   0.099854  300.000000      300.000000     4.0      5428.395508            -1             -1     -1
1    5728.495361    5428.495605 -3182.682861  5728.495361  299.799805  5428.495605   0.099854  299.899902      200.000000     4.0      5428.395508         False          False   True
2    5728.495361    5528.395752 -3182.682861  5728.495361  299.800049  5528.395752   0.099854  199.999756      100.000000     5.0      5428.395508         False          False   True
3    6028.095703    5728.395508 -3182.682861  6028.095703  499.600098  5728.395508   0.099854  299.600342      299.600342     4.0      5428.395508          True           True  False
4    6228.595459    5828.395508 -3182.682861  6228.595459  500.100098  5828.395508   0.099854  400.100098      400.100098     2.0      5428.395508         False          False  False
5    6329.095459    5828.395508 -3182.682861  6329.095459  500.600098  5828.395508   0.099854  500.600098      400.600098     2.0      5428.395508         False          False  False
6    6329.595459    6028.395508 -3182.682861  6329.595459  501.100098  6028.395508   0.099854  301.100098      301.100098     3.0      5428.395508         False          False  False
7    6530.095459    6128.395508 -3182.682861  6530.095459  501.600098  6128.395508   0.199951  401.500000      401.500000     4.0      5428.395508         False          False  False
8    6628.695557    6228.395508 -3182.682861  6628.695557  500.100098  6228.395508   0.199951  400.100098      400.100098     5.0      5428.395508         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=803/2.[0m
[08/10 15:31:51]  --------------------------------------------------------------------------------
[08/10 15:31:51]  Iteration: 42 (0 solution, 41 counterexamples)
[08/10 15:31:53]  Generator returned sat in 0.409539 secs.
[08/10 15:31:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:31:53]  Improved gap from 0 to 100
[08/10 15:31:54]  Improved number of small numbers from 87 to 114 out of a max of 114
[08/10 15:31:54]  Verifer returned sat in 0.413702 secs.
[08/10 15:31:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5528.345459    5428.395264 -3182.682861  5528.345459    0.050000  5428.395264   0.000000   99.950195       99.950195     9.0      5428.395264            -1             -1     -1
1    5827.745361    5528.395264 -3182.682861  5827.745361  399.350098  5528.395264   0.000000  299.350098      299.350098     1.0      5428.395264         False           True  False
2    5827.795410    5528.845459 -3182.682861  5827.795410  299.400146  5528.845459   0.000000  298.949951      199.400146     2.0      5827.795410         False          False  False
3    6026.895508    5728.395264 -3182.682861  6026.895508  498.050049  5728.395264   0.000000  298.500244      298.500244     3.0      5827.795410         False          False  False
4    6226.945312    5827.845459 -3182.682861  6226.945312  498.550049  5827.845459   0.000000  399.099854      398.550049     2.0      5827.795410         False          False  False
5    6326.895508    5927.395264 -3182.682861  6326.895508  499.050049  5927.395264   0.000000  399.500244      398.500244     3.0      5827.795410         False          False  False
6    6426.945312    6026.895264 -3182.682861  6426.945312  499.550049  6026.895264   0.000000  400.050049      398.550049     4.0      5827.795410         False          False  False
7    6526.945312    6126.445312 -3182.682861  6526.945312  500.050049  6126.445312   0.000000  400.500000      398.550049     4.0      5827.795410         False          False  False
8    6626.995361    6128.395264 -3182.682861  6626.995361  500.550049  6128.395264   0.050049  498.550049      398.550049     5.0      5827.795410         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1632461/4096.[0m
[08/10 15:31:54]  --------------------------------------------------------------------------------
[08/10 15:31:54]  Iteration: 43 (0 solution, 42 counterexamples)
[08/10 15:32:01]  Generator returned sat in 5.742777 secs.
[08/10 15:32:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:03]  Improved gap from 0 to 18.75
[08/10 15:32:03]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 15:32:03]  Verifer returned sat in 1.578779 secs.
[08/10 15:32:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5708.195068    5508.095459 -3362.383057  5708.195068    0.099854  5508.095459   0.000000  200.099609      100.099609     5.0      5508.095459            -1             -1   False
1    5708.195068    5708.095459 -3362.383057  5708.195068  199.999756  5708.095459   0.000000    0.099609        0.099609     2.0      5508.095459         False          False   False
2    5877.695312    5808.095215 -3362.383057  5877.695312  169.599854  5808.095215   0.000000   69.600098       69.599854     1.0      5877.695312         False          False   False
3    6049.095215    5877.795410 -3362.383057  6049.095215  241.000000  5877.795410  31.199951  140.099854      109.799805     1.0      5877.695312         False          False   False
4    6148.995361    5995.695068 -3362.383057  6148.995361  240.000000  5995.695068  31.199951  122.100342      109.699951     2.0      5877.695312         False          False    True
5    6148.995361    6054.695312 -3362.383057  6148.995361  122.000000  6054.695312  31.199951   63.100098        9.699951     2.0      5877.695312         False          False    True
6    6148.995361    6108.095459 -3281.133057  6148.995361   63.000000  6108.095459  31.199951    9.699951       -9.050049     3.0      5877.695312         False          False    True
7    6172.795410    6126.845459 -3199.883057  6172.795410   33.500000  6126.845459  31.199951   14.750000       -4.000000     1.0      5877.695312         False          False    True
8    6176.795410    6145.595459 -3118.633057  6176.795410   18.750000  6145.595459  31.199951    0.000000      -18.750000     1.0      5877.695312         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=112435/1024.[0m
[08/10 15:32:04]  --------------------------------------------------------------------------------
[08/10 15:32:04]  Iteration: 44 (0 solution, 43 counterexamples)
[08/10 15:32:08]  Generator returned sat in 2.660681 secs.
[08/10 15:32:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:09]  Improved gap from 2/37 to 100
[08/10 15:32:09]  Improved number of small numbers from 113 to 113 out of a max of 114
[08/10 15:32:09]  Verifer returned sat in 1.413334 secs.
[08/10 15:32:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5829.210313    5632.510312 -3362.383057  5829.210313    0.20000  5632.510312    0.10000  196.6000            99.9     6.0      5632.510312            -1             -1     -1
1    5829.210313    5729.210313 -3362.383057  5829.210313    0.10000  5729.210313    0.10000   99.9000            -0.1     7.0      5829.110312         False          False   True
2    5929.310312    5829.210313 -3362.383057  5929.310312  200.00000  5829.210313    0.10000  100.0000             0.0     1.0      5829.110312         False          False   True
3    5929.310312    5929.210313 -3362.383057  5929.310312   99.90000  5929.210313    0.10000    0.0000          -100.0     2.0      5929.210313         False          False   True
4    6129.610312    6029.210313 -3362.383057  6129.610312  200.30000  6029.210313    0.20000  100.2000             0.2     1.0      5929.210313         False          False   True
5    6129.610312    6129.210313 -3362.383057  6129.610312   99.15000  6129.210313    0.20000    0.2000           -99.8     2.0      5929.210313         False          False   True
6    6330.985312    6229.522813 -3362.383057  6330.985312  201.57500  6229.522813    1.57500   99.8875             0.2     1.0      5929.210313         False          False   True
7    6330.985312    6329.210313 -3362.383057  6330.985312   99.78750  6329.210313    1.57500    0.2000           -99.8     2.0      5929.210313         False          False   True
8    6532.679063    6429.210313 -3362.383057  6532.679063  201.89375  6429.210313    3.26875  100.2000             0.2     1.0      5929.210313         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 15:32:10]  --------------------------------------------------------------------------------
[08/10 15:32:10]  Iteration: 45 (0 solution, 44 counterexamples)
[08/10 15:32:25]  Generator returned sat in 13.317491 secs.
[08/10 15:32:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:25]  Improved gap from 1/20 to 100
[08/10 15:32:26]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 15:32:26]  Verifer returned sat in 1.010497 secs.
[08/10 15:32:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5336.060303    5335.910156 -3362.383057  5336.060303    0.050000  5335.910156    0.050049    0.100098        0.100098     1.0      5335.910156            -1             -1     -1
1    5336.060303    5335.910156 -3362.383057  5336.060303    0.050049  5335.910156    0.050049    0.100098      -99.899902     1.0      5335.910156         False          False   True
2    5536.060059    5535.910156 -3362.383057  5536.060059  200.099854  5535.910156    0.050049    0.099854        0.099854     1.0      5335.910156         False          False   True
3    5536.060059    5535.910156 -3362.383057  5536.060059    0.050049  5535.910156    0.050049    0.099854      -99.900146     1.0      5536.010010         False          False   True
4    5834.010254    5735.910156 -3362.383057  5834.010254  298.050049  5735.910156   96.550049    1.550049        1.550049     1.0      5536.010010         False          False   True
5    5834.010254    5735.910156 -3362.383057  5834.010254    1.500000  5735.910156   96.550049    1.550049      -98.449951     1.0      5536.010010         False          False   True
6    6131.960205    5935.910156 -3362.383057  6131.960205  299.500000  5935.910156  194.500000    1.550049        1.550049     1.0      5536.010010         False          False   True
7    6131.960205    5935.910156 -3362.383057  6131.960205    1.500000  5935.910156  194.500000    1.550049      -98.449951     1.0      5536.010010         False          False   True
8    6429.910156    6035.910156 -3362.383057  6429.910156  299.500000  6035.910156  292.449951  101.550049        1.550049     1.0      5536.010010         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=6349/4096.[0m
[08/10 15:32:26]  --------------------------------------------------------------------------------
[08/10 15:32:26]  Iteration: 46 (0 solution, 45 counterexamples)
[08/10 15:32:29]  Generator returned sat in 1.288573 secs.
[08/10 15:32:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:29]  Improved gap from 0 to 100
[08/10 15:32:30]  Improved number of small numbers from 98 to 114 out of a max of 114
[08/10 15:32:30]  Verifer returned sat in 0.449924 secs.
[08/10 15:32:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5336.060059    5236.060303 -3362.383301  5336.060059    0.049805  5236.060303   0.012695   99.987061       99.987061     1.0      5236.060303            -1             -1     -1
1    5336.060059    5236.060303 -3362.383301  5336.060059    0.049805  5236.060303   0.012695   99.987061       -0.012939     1.0      5236.060303         False          False   True
2    5337.585449    5336.060303 -3362.383301  5337.585449  101.512451  5336.060303   0.012695    1.512451      -98.487549     1.0      5236.060303         False          False   True
3    5437.572754    5437.547607 -3362.383301  5437.572754  101.499756  5437.547607   0.012695    0.012451      -98.500244     1.0      5437.560059         False          False   True
4    5637.047607    5636.060303 -3362.383301  5637.047607  199.487305  5636.060303   0.962402    0.024902        0.024902     1.0      5437.560059         False          False   True
5    5638.522705    5636.060303 -3362.383301  5638.522705    1.500000  5636.060303   0.962402    1.500000      -98.500000     1.0      5437.560059         False          False   True
6    5935.022705    5836.060303 -3362.383301  5935.022705  298.000000  5836.060303  98.937500    0.024902        0.024902     1.0      5437.560059         False          False   True
7    5936.497803    5837.547852 -3362.383301  5936.497803    1.500000  5837.547852  98.937500    0.012451      -98.500000     1.0      5437.560059         False          False   True
8    6135.972900    5936.060303 -3362.383301  6135.972900  199.487549  5936.060303  99.887695  100.024902        0.024902     1.0      5437.560059         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=51/2048.[0m
[08/10 15:32:30]  --------------------------------------------------------------------------------
[08/10 15:32:30]  Iteration: 47 (0 solution, 46 counterexamples)
[08/10 15:32:39]  Generator returned sat in 7.656223 secs.
[08/10 15:32:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:40]  Improved gap from 1/2400 to 100
[08/10 15:32:40]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:32:40]  Verifer returned sat in 0.807530 secs.
[08/10 15:32:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5287.077881    5093.077637 -3362.383301  5287.077881    0.001221  5093.077637   0.001465  193.998779       93.998779     1.0      5093.077637            -1             -1     -1
1    5287.080322    5287.077637 -3362.383301  5287.080322  194.001221  5287.077637   0.001465    0.001221       -5.998779     1.0      5093.077637         False          False   True
2    5493.077881    5393.077637 -3362.383301  5493.077881  205.998779  5393.077637   0.001465   99.998779       99.998779     1.0      5093.077637         False          False   True
3    5493.077881    5393.077637 -3362.383301  5493.077881   46.999756  5393.077637   0.001465   99.998779       -0.001221     1.0      5493.076416         False          False   True
4    5591.078857    5493.077637 -3362.383301  5591.078857  197.999756  5493.077637   0.001465   97.999756       -2.000244     1.0      5493.076416         False          False   True
5    5795.078857    5657.746094 -3362.383301  5795.078857  301.999756  5657.746094   0.001465  137.331299      101.999756     1.0      5493.076416         False          False   True
6    6093.081543    5693.077881 -3362.383301  6093.081543  435.333984  5693.077881   0.002686  400.000977      300.001221     2.0      5493.076416         False          False   True
7    6093.081543    5893.077637 -3362.383301  6093.081543    0.010000  5893.077637   0.002686  200.001221      200.001221     2.0      6093.078857          True           True   True
8    6093.081543    5993.077637 -3362.383301  6093.081543  198.000000  5993.077637   0.002686  100.001221      100.001221     3.0      6093.078857         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1228805/4096.[0m
[08/10 15:32:41]  --------------------------------------------------------------------------------
[08/10 15:32:41]  Iteration: 48 (0 solution, 47 counterexamples)
[08/10 15:32:47]  Generator returned sat in 4.144856 secs.
[08/10 15:32:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:47]  Improved gap from 5/16384 to 100
[08/10 15:32:48]  Improved number of small numbers from 23 to 45 out of a max of 114
[08/10 15:32:48]  Verifer returned sat in 1.713562 secs.
[08/10 15:32:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5327.059570    5127.059326 -3764.363759  5327.059570    0.001221  5127.059326    0.000153  200.000092      100.000347     5.0      5127.059326            -1             -1     -1
1    5327.059570    5227.059254 -3764.363759  5327.059570  100.000000  5227.059254    0.000153  100.000164        0.000347     5.0      5127.059326         False           True   True
2    5327.059570    5327.059254 -3764.363759  5327.059570  100.000000  5327.059254    0.000153    0.000164      -99.999653     3.0      5127.059326          True           True  False
3    5727.059407    5427.059254 -3764.363759  5727.059407  400.000000  5427.059254  199.999847  100.000305        0.000488     1.0      5127.059326          True           True  False
4    5827.059102    5527.059712 -3764.363759  5827.059102  200.000000  5527.059712  199.999847   99.999542        0.000183     1.0      5127.059326         False          False   True
5    6078.059788    5651.559597 -3764.363759  6078.059788  351.000229  5651.559597  351.000229   75.499962        0.000488     1.0      5127.059326         False          False   True
6    6178.059941    5739.309807 -3764.363759  6178.059941  175.500114  5739.309807  351.000381   87.749752        0.000488     1.0      5127.059326         False          False   True
7    6178.060246    5827.059712 -3764.363759  6178.060246   87.750057  5827.059712  351.000381    0.000153      -99.999207     1.0      5127.059326         False          False   True
8    6416.810151    5927.059082 -3764.363759  6416.810151  238.750057  5927.059082  389.750591  100.000477        0.000488     1.0      5127.059326         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/2048.[0m
[08/10 15:32:49]  --------------------------------------------------------------------------------
[08/10 15:32:49]  Iteration: 49 (0 solution, 48 counterexamples)
[08/10 15:32:54]  Generator returned sat in 3.517550 secs.
[08/10 15:32:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:32:56]  Improved number of small numbers from 46 to 48 out of a max of 113
[08/10 15:32:56]  Verifer returned sat in 1.597727 secs.
[08/10 15:32:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5327.059570    5127.059082 -3764.363770  5327.059570    0.001221  5127.059082    0.000153  200.000336      100.000336     8.0      5127.059082            -1             -1     -1
1    5327.059570    5227.059254 -3764.363770  5327.059570  100.000000  5227.059254    0.000153  100.000164        0.000336     6.0      5127.059082         False           True   True
2    5327.059570    5327.059254 -3764.363759  5327.059570  100.000000  5327.059254    0.000153    0.000164      -99.999653     3.0      5127.059082          True           True  False
3    5727.059407    5429.059254 -3764.363759  5727.059407  400.000000  5429.059254  199.999847   98.000305        0.000488     1.0      5127.059082          True           True  False
4    5827.059102    5527.059712 -3764.363759  5827.059102  198.000000  5527.059712  199.999847   99.999542        0.000183     1.0      5127.059082         False          False   True
5    6076.059788    5656.559597 -3764.363759  6076.059788  349.000229  5656.559597  349.000229   70.499962        0.000488     1.0      5127.059082         False          False   True
6    6178.059941    5742.809578 -3764.363759  6178.059941  172.500114  5742.809578  351.000381   84.249981        0.000488     1.0      5127.059082         False          False   True
7    6178.060017    5827.059597 -3764.363759  6178.060017   84.250057  5827.059597  351.000381    0.000038      -99.999435     1.0      5127.059082         False          False   True
8    6413.309979    5927.059082 -3764.363759  6413.309979  235.250000  5927.059082  386.250420  100.000477        0.000488     1.0      5127.059082         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/2048.[0m
[08/10 15:32:56]  --------------------------------------------------------------------------------
[08/10 15:32:56]  Iteration: 50 (0 solution, 49 counterexamples)
[08/10 15:33:25]  Generator returned sat in 26.935458 secs.
[08/10 15:33:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:33:26]  Improved gap from 1/600 to 100
[08/10 15:33:26]  Improved number of small numbers from 78 to 92 out of a max of 114
[08/10 15:33:26]  Verifer returned sat in 1.219534 secs.
[08/10 15:33:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4988.696777    4788.697021 -3764.36377  4988.696777     0.1000  4788.697021        0.1  199.899756       99.899951     1.0      4788.697021            -1             -1     -1
1    5088.697021    4988.696826 -3764.36377  5088.697021   299.9000  4988.696826        0.1   99.900195       99.900195     1.0      4788.697021         False          False   True
2    5113.071826    5088.696826 -3764.36377  5113.071826   124.2750  5088.696826        0.1   24.275000       24.275000     1.0      5112.971826         False          False   True
3    5127.159326    5113.071826 -3764.36377  5127.159326    38.3625  5113.071826        0.1   13.987500      -61.637500     1.0      5127.059326         False          False   True
4    5188.896826    5188.696826 -3764.36377  5188.896826    75.7250  5188.696826        0.1    0.100000      -99.900000     1.0      5127.059326         False          False   True
5    5339.246826    5288.697021 -3764.36377  5339.246826   150.4500  5288.697021        0.1   50.449805      -49.550000     1.0      5127.059326         False          False   True
6    5588.697021    5389.996826 -3764.36377  5588.697021   299.9000  5389.996826        0.1  198.600195       99.900195     1.0      5127.059326         False          False   True
7    5988.896826    5588.696826 -3764.36377  5988.896826   598.8000  5588.696826        0.1  400.100000      400.100000     1.0      5127.059326         False          False   True
8    6785.396826    5588.796875 -3764.36377  6785.396826  1196.6000  5588.796875      696.5  500.099951      400.200000     2.0      5127.059326         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2001/5.[0m
[08/10 15:33:27]  --------------------------------------------------------------------------------
[08/10 15:33:27]  Iteration: 51 (0 solution, 50 counterexamples)
[08/10 15:33:48]  Generator returned sat in 19.655622 secs.
[08/10 15:33:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:33:49]  Improved gap from 1/100 to 17.1875
[08/10 15:33:50]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 15:33:50]  Verifer returned sat in 1.283921 secs.
[08/10 15:33:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6437.734375    6237.684326 -5113.351318  6437.734375  200.099854  6237.684326   0.050049  200.000000      200.000000     5.0      6237.684326            -1             -1     -1
1    6437.784424    6237.684326 -5113.351318  6437.784424  200.050049  6237.684326   0.050049  200.050049      100.050049     5.0      6437.734375         False           True   True
2    6768.209473    6337.684326 -5113.351318  6768.209473  530.475098  6337.684326   0.100098  430.425049      330.425049     4.0      6437.734375         False           True  False
3    6768.209473    6437.684326 -5113.351318  6768.209473  426.000000  6437.684326   0.100098  330.425049      230.425049     5.0      6768.109375         False          False   True
4    6768.209473    6637.684082 -5113.351318  6768.209473  215.000000  6637.684082   0.100098  130.425293      130.425049     3.0      6768.109375         False           True  False
5    6768.209473    6711.309082 -5113.351318  6768.209473  109.500000  6711.309082   0.100098   56.800293       30.425049     4.0      6768.109375         False          False  False
6    6768.209473    6737.684326 -5043.776367  6768.209473   56.750000  6737.684326   0.100098   30.425049        0.000000     5.0      6768.109375         False          False  False
7    6768.209473    6768.109375 -4960.963867  6768.209473   30.375000  6768.109375   0.100098    0.000000      -17.187500     6.0      6768.109375         False           True  False
8    6785.396973    6785.296875 -4960.963623  6785.396973   17.187500  6785.296875   0.100098    0.000000      -99.999756     1.0      6768.109375         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1353421/4096.[0m
[08/10 15:33:50]  --------------------------------------------------------------------------------
[08/10 15:33:50]  Iteration: 52 (0 solution, 51 counterexamples)
[08/10 15:34:07]  Generator returned sat in 14.434083 secs.
[08/10 15:34:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:07]  Improved gap from 7887/80 to 100
[08/10 15:34:08]  Improved number of small numbers from 60 to 70 out of a max of 114
[08/10 15:34:08]  Verifer returned sat in 1.322149 secs.
[08/10 15:34:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6143.202148    6043.101973 -4918.868965  6143.202148  300.049805  6043.101973       0.05  100.050176       99.950176     2.0      6043.101973            -1             -1     -1
1    6343.151973    6143.201973 -4918.868965  6343.151973  300.000000  6143.201973       0.05  199.900000      199.900000     1.0      6343.101973         False           True   True
2    6443.251973    6143.202148 -4918.868965  6443.251973  300.000000  6143.202148       0.05  299.999824      200.000000     2.0      6343.101973         False          False   True
3    6443.251973    6343.152100 -4918.868965  6443.251973   23.243750  6343.152100       0.05  100.049873      100.000000     2.0      6443.201973         False           True  False
4    6443.251973    6343.202148 -4918.868965  6443.251973   48.487500  6343.202148       0.05   99.999824        0.000000     3.0      6443.201973         False           True  False
5    6443.251973    6443.201973 -4918.868965  6443.251973   98.975000  6443.201973       0.05    0.000000     -100.000000     4.0      6443.201973         False           True  False
6    6643.201973    6641.351973 -4918.868965  6643.201973  199.950000  6641.351973       0.05    1.800000       -0.050000     1.0      6443.201973         False           True  False
7    7043.301973    6643.201973 -4918.868965  7043.301973  401.900000  6643.201973       0.05  400.050000      300.050000     1.0      6443.201973         False          False  False
8    7449.051973    6743.202148 -4918.868965  7449.051973  805.800000  6743.202148     305.80  400.049824      300.050000     2.0      6443.201973         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6001/20.[0m
[08/10 15:34:09]  --------------------------------------------------------------------------------
[08/10 15:34:09]  Iteration: 53 (0 solution, 52 counterexamples)
[08/10 15:34:15]  Generator returned sat in 4.535288 secs.
[08/10 15:34:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:15]  Improved gap from 403/800 to 100
[08/10 15:34:16]  Improved number of small numbers from 60 to 64 out of a max of 114
[08/10 15:34:16]  Verifer returned sat in 1.352834 secs.
[08/10 15:34:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6243.203223    6043.201973 -4918.868965  6243.203223  200.001221  6043.201973    0.00125  200.000000       200.00000     7.0      6043.201973            -1             -1     -1
1    6243.204473    6043.201973 -4918.868965  6243.204473  200.001250  6043.201973    0.00250  200.000000       100.00000     7.0      6043.201973         False           True   True
2    6343.203223    6243.201973 -4918.868965  6343.203223  299.998750  6243.201973    0.00250   99.998750        99.99875     7.0      6043.201973         False           True   True
3    6343.203223    6243.201973 -4918.868965  6343.203223    1.000833  6243.201973    0.00250   99.998750        -0.00125     7.0      6343.200723          True           True  False
4    6543.205723    6343.201973 -4918.868965  6543.205723  300.001250  6343.201973    0.00375  200.000000       100.00000     1.0      6343.200723         False           True  False
5    6543.205723    6543.200723 -4918.868965  6543.205723    0.010000  6543.200723    0.00375    0.001250         0.00000     2.0      6343.200723         False          False   True
6    6842.703223    6643.201904 -4918.868965  6842.703223  299.498750  6643.201904   99.50125  100.000068       100.00000     1.0      6343.200723         False          False   True
7    6842.703223    6643.703223 -4918.868965  6842.703223    0.010000  6643.703223   99.50125   99.498750         0.00000     2.0      6343.200723         False          False   True
8    7043.205723    6843.201904 -4918.868965  7043.205723  300.001250  6843.201904  100.00375  100.000068       100.00000     1.0      6343.200723         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:34:17]  --------------------------------------------------------------------------------
[08/10 15:34:17]  Iteration: 54 (0 solution, 53 counterexamples)
[08/10 15:34:19]  Generator returned sat in 0.653399 secs.
[08/10 15:34:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:21]  Improved number of small numbers from 63 to 63 out of a max of 113
[08/10 15:34:21]  Verifer returned sat in 1.344745 secs.
[08/10 15:34:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6243.203223    6043.201973 -4918.868965  6243.203223  200.001221  6043.201973    0.00125  200.000000       200.00000     7.0      6043.201973            -1             -1     -1
1    6243.204473    6043.201973 -4918.868965  6243.204473  200.001250  6043.201973    0.00250  200.000000       100.00000     7.0      6043.201973         False           True   True
2    6343.203223    6243.201973 -4918.868965  6343.203223  299.998750  6243.201973    0.00250   99.998750        99.99875     7.0      6043.201973         False           True   True
3    6343.203223    6243.201973 -4918.868965  6343.203223    1.334167  6243.201973    0.00250   99.998750        -0.00125     7.0      6343.200723          True           True  False
4    6543.205723    6343.201973 -4918.868965  6543.205723  300.001250  6343.201973    0.00375  200.000000       100.00000     1.0      6343.200723         False           True  False
5    6543.205723    6543.200723 -4918.868965  6543.205723    0.010000  6543.200723    0.00375    0.001250         0.00000     2.0      6343.200723         False          False   True
6    6842.703223    6643.201904 -4918.868965  6842.703223  299.498750  6643.201904   99.50125  100.000068       100.00000     1.0      6343.200723         False          False   True
7    6842.703223    6643.703223 -4918.868965  6842.703223    0.010000  6643.703223   99.50125   99.498750         0.00000     2.0      6343.200723         False          False   True
8    7043.205723    6843.201904 -4918.868965  7043.205723  300.001250  6843.201904  100.00375  100.000068       100.00000     1.0      6343.200723         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:34:21]  --------------------------------------------------------------------------------
[08/10 15:34:21]  Iteration: 55 (0 solution, 54 counterexamples)
[08/10 15:34:28]  Generator returned sat in 4.757102 secs.
[08/10 15:34:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:28]  Improved gap from 1/3200 to 100
[08/10 15:34:29]  Improved number of small numbers from 105 to 105 out of a max of 114
[08/10 15:34:29]  Verifer returned sat in 0.649147 secs.
[08/10 15:34:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5843.193125    5843.191875 -4718.861611  5843.193125     0.001250  5843.191875     0.00000    0.001250       -0.001250     8.0      5843.191875            -1             -1     -1
1    5943.194375    5843.194375 -4718.861611  5943.194375   100.002500  5843.194375     0.00000  100.000000        0.000000     1.0      5843.191875         False           True  False
2    6343.203125    6043.193125 -4718.861611  6343.203125   500.008750  6043.193125     0.00125  300.008750      300.007500     1.0      5843.191875         False          False  False
3    6343.203125    6043.194375 -4718.861611  6343.203125     0.001250  6043.194375     0.00125  300.007500      200.007500     2.0      6343.201875         False          False   True
4    6343.203125    6243.194375 -4718.861611  6343.203125   300.006250  6243.194375     0.00125  100.007500      100.007500     3.0      6343.201875         False          False   True
5    7443.208125    6243.194375 -4718.861611  7443.208125  1200.012500  6243.194375   800.00625  400.007500      300.007500     3.0      6343.201875         False          False   True
6    7443.208125    6343.203125 -4718.861611  7443.208125     0.010000  6343.203125   800.00625  299.998750      200.007500     2.0      6343.201875         False          False   True
7    7593.242500    6543.194375 -4718.861611  7593.242500   450.033125  6543.194375   800.00625  250.041875      250.041875     3.0      6343.201875         False          False   True
8    8693.266875    6543.194375 -4718.861611  8693.266875  1350.066250  6543.194375  1750.06500  400.007500      300.007500     3.0      6343.201875         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=120003/400.[0m
[08/10 15:34:29]  --------------------------------------------------------------------------------
[08/10 15:34:29]  Iteration: 56 (0 solution, 55 counterexamples)
[08/10 15:34:43]  Generator returned sat in 11.555622 secs.
[08/10 15:34:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:43]  Improved number of small numbers from 104 to 113 out of a max of 113
[08/10 15:34:43]  Verifer returned sat in 0.286712 secs.
[08/10 15:34:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5473.603125    5173.603027 -4149.270508  5473.603125    0.100098  5173.603027    0.100098  299.900000      199.900000     8.0      5173.603027            -1             -1     -1
1    5774.003174    5373.603027 -4149.270508  5774.003174  600.300049  5373.603027    0.300049  400.100098      400.100098     8.0      5173.603027         False           True   True
2    5974.103271    5373.603271 -4149.270508  5974.103271  600.200195  5373.603271  100.400146  500.099854      400.100098     4.0      5873.703125          True           True   True
3    6074.103271    5473.603027 -4149.270508  6074.103271  600.099854  5473.603027  100.400146  500.100098      400.100098     3.0      5973.703125         False           True   True
4    6074.103271    5573.603271 -4149.270508  6074.103271  152.000000  5573.603271  100.400146  400.099854      300.100098     4.0      5973.703125         False          False   True
5    6074.103271    5673.603027 -4149.270508  6074.103271  228.000000  5673.603027  100.400146  300.100098      200.100098     5.0      5973.703125         False           True  False
6    6116.003174    5860.603027 -4149.270508  6116.003174  342.000000  5860.603027  100.400146  155.000000      142.000000     5.0      5973.703125         False           True  False
7    6474.003174    5973.603027 -4149.270508  6474.003174  513.000000  5973.603027  100.400146  400.000000      400.000000     5.0      5973.703125         False           True  False
8    6843.503174    6073.603027 -4149.270508  6843.503174  769.500000  6073.603027  369.800049  400.100098      400.100098     2.0      5973.703125         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=819405/2048.[0m
[08/10 15:34:44]  --------------------------------------------------------------------------------
[08/10 15:34:44]  Iteration: 57 (0 solution, 56 counterexamples)
[08/10 15:34:58]  Generator returned sat in 12.741662 secs.
[08/10 15:34:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:34:59]  Improved gap from 9/800 to 100
[08/10 15:35:00]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/10 15:35:00]  Verifer returned sat in 1.528030 secs.
[08/10 15:35:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6285.108887    6184.111396 -4149.270508  6285.108887    0.001465  6184.111396    0.00125  100.996240       100.99624     7.0      6184.111396            -1             -1     -1
1    6285.110146    6284.110352 -4149.270508  6285.110146  100.997500  6284.110352    0.00250    0.997295         0.99625     7.0      6184.111396         False           True   True
2    6285.110146    6284.111396 -4149.270508  6285.110146    0.001465  6284.111396    0.00250    0.996250       -99.00375     3.0      6285.107646          True           True   True
3    6485.108896    6484.111396 -4149.270508  6485.108896  200.995000  6484.111396    0.00250    0.995000         0.99500     1.0      6285.107646         False           True  False
4    6585.111396    6584.111396 -4149.270508  6585.111396  100.997500  6584.111396    0.00375    0.996250         0.99625     1.0      6285.107646         False          False  False
5    6585.111396    6584.111396 -4149.270508  6585.111396    0.010000  6584.111396    0.00375    0.996250       -99.00375     1.0      6285.107646         False          False   True
6    7032.135146    6784.111396 -4149.270508  7032.135146  448.020000  6784.111396  247.02750    0.996250         0.99625     1.0      6285.107646         False          False   True
7    7032.135146    6784.111396 -4149.270508  7032.135146    0.010000  6784.111396  247.02750    0.996250       -99.00375     1.0      6285.107646         False          False   True
8    7329.158896    6884.111572 -4149.270508  7329.158896  298.020000  6884.111572  344.05125  100.996074         0.99625     1.0      6285.107646         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=797/800.[0m
[08/10 15:35:00]  --------------------------------------------------------------------------------
[08/10 15:35:00]  Iteration: 58 (0 solution, 57 counterexamples)
[08/10 15:35:11]  Generator returned sat in 8.313673 secs.
[08/10 15:35:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:13]  Improved gap from 0 to 15.625
[08/10 15:35:13]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 15:35:13]  Verifer returned sat in 2.522557 secs.
[08/10 15:35:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7186.136230    7086.236328 -4170.620605  7186.136230    0.099854  7086.236328        0.0   99.899902       99.899902     6.0      7086.236328            -1             -1     -1
1    7264.886230    7186.236328 -4170.620605  7264.886230  178.649902  7186.236328        0.0   78.649902       78.649902     1.0      7086.236328         False           True  False
2    7264.886230    7186.236328 -4149.270508  7264.886230   78.550049  7186.236328        0.0   78.649902        0.000000     1.0      7264.886230         False          False  False
3    7593.236328    7264.986328 -4149.270508  7593.236328  407.000000  7264.986328        0.0  328.250000      228.350098     1.0      7264.886230         False          False  False
4    7593.236328    7458.961182 -4149.270508  7593.236328  205.000000  7458.961182        0.0  134.275146      128.350098     2.0      7264.886230         False          False  False
5    7593.236328    7464.886230 -4149.270508  7593.236328  104.000000  7464.886230        0.0  128.350098       28.350098     3.0      7264.886230         False          False  False
6    7593.236328    7564.886475 -4077.620605  7593.236328   53.500000  7564.886475        0.0   28.349854        0.000000     4.0      7264.886230         False          False  False
7    7593.236328    7593.236328 -3993.245605  7593.236328   28.250000  7593.236328        0.0    0.000000      -15.625000     5.0      7593.236328          True           True  False
8    7608.861328    7608.861328 -3993.245361  7608.861328   15.625000  7608.861328        0.0    0.000000      -99.999756     1.0      7593.236328         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=4569/20.[0m
[08/10 15:35:14]  --------------------------------------------------------------------------------
[08/10 15:35:14]  Iteration: 59 (0 solution, 58 counterexamples)
[08/10 15:35:27]  Generator returned sat in 11.635207 secs.
[08/10 15:35:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:28]  Improved gap from 1/2 to 100
[08/10 15:35:29]  Improved number of small numbers from 42 to 58 out of a max of 114
[08/10 15:35:29]  Verifer returned sat in 1.661325 secs.
[08/10 15:35:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7278.085938    7278.036035 -4170.620605  7278.085938    0.099854  7278.036035   0.000000    0.049902       -0.049951     8.0      7278.036035            -1             -1    True
1    7378.085962    7278.135986 -4170.620605  7378.085962  100.049927  7278.135986   0.000000   99.949976       -0.049927     1.0      7278.036035         False          False    True
2    7378.135986    7378.135889 -4170.620605  7378.135986  100.000000  7378.135889   0.000000    0.000098      -99.999902     1.0      7378.135986         False          False    True
3    7593.236328    7554.902799 -4170.620605  7593.236328  215.100439  7554.902799   0.000000   38.333529       15.100439     1.0      7378.135986         False          False    True
4    7693.336182    7678.135889 -4170.620605  7693.336182  138.433382  7678.135889   0.049927   15.150366       15.150366     1.0      7378.135986         False          False    True
5    7747.902507    7747.802653 -4170.620605  7747.902507   69.716691  7747.802653   0.049927    0.049927      -30.283309     1.0      7378.135986         False          False    True
6    7932.685962    7878.135889 -4170.620605  7932.685962  184.833382  7878.135889  39.399707   15.150366       15.150366     1.0      7378.135986         False          False    True
7    8010.452287    7971.002653 -4170.620605  8010.452287   92.916691  7971.002653  39.399707    0.049927       -7.083309     1.0      7378.135986         False          False    True
8    8156.835742    7978.135986 -4170.620605  8156.835742  146.433382  7978.135986  63.549487  115.150269       15.150366     1.0      7378.135986         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=620559/40960.[0m
[08/10 15:35:30]  --------------------------------------------------------------------------------
[08/10 15:35:30]  Iteration: 60 (0 solution, 59 counterexamples)
[08/10 15:35:37]  Generator returned sat in 5.573753 secs.
[08/10 15:35:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:38]  Improved gap from 0 to 100
[08/10 15:35:38]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 15:35:38]  Verifer returned sat in 0.538625 secs.
[08/10 15:35:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7577.186035    7278.111084 -4170.620605  7577.186035  300.000000  7278.111084   0.000000  299.074951      299.050049     6.0      7278.111084            -1             -1     -1
1    7578.111084    7278.135986 -4170.620605  7578.111084  300.000000  7278.135986   0.000000  299.975098      199.975098     7.0      7278.111084         False           True  False
2    7578.111084    7478.135986 -4170.620605  7578.111084  299.950195  7478.135986   0.000000   99.975098       99.975098     3.0      7578.111084          True           True  False
3    7880.635986    7577.185791 -4170.620605  7880.635986  402.500000  7577.185791   2.475098  300.975098      300.024902     4.0      7578.111084         False          False  False
4    7980.660889    7578.135986 -4170.620605  7980.660889  401.000000  7578.135986   2.500000  400.024902      300.024902     2.0      7578.111084         False          False   True
5    7980.660889    7778.135742 -4170.620605  7980.660889  399.500000  7778.135742   2.500000  200.025146      200.024902     3.0      7578.111084         False          False   True
6    8180.635742    7778.160889 -4170.620605  8180.635742  400.000000  7778.160889   2.500000  399.974854      299.999756     4.0      7578.111084         False          False   True
7    8181.160889    7978.135742 -4170.620605  8181.160889  400.500000  7978.135742   2.500000  200.525146      200.524902     4.0      7578.111084         False          False   True
8    8381.635742    7978.135986 -4170.620605  8381.635742  401.000000  7978.135986   3.474854  400.024902      300.024902     5.0      7578.111084         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=614451/2048.[0m
[08/10 15:35:39]  --------------------------------------------------------------------------------
[08/10 15:35:39]  Iteration: 61 (0 solution, 60 counterexamples)
[08/10 15:35:51]  Generator returned sat in 10.073284 secs.
[08/10 15:35:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:35:52]  Improved gap from 1/400 to 14.0625
[08/10 15:35:52]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 15:35:52]  Verifer returned sat in 1.463891 secs.
[08/10 15:35:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7542.460693    7528.198486 -4256.558105  7542.460693   14.212646  7528.198486   0.050049   14.212158       14.012207     7.0      7528.198486            -1             -1     -1
1    7542.460693    7528.398438 -4170.620605  7542.460693   14.162354  7528.398438   0.050049   14.012207       -0.050293     7.0      7542.410645         False           True   True
2    7542.560791    7542.460938 -4170.620605  7542.560791   14.112305  7542.460938   0.050049    0.049805      -99.950195     1.0      7542.510742         False           True  False
3    7930.510986    7728.398438 -4170.620605  7930.510986  388.000000  7728.398438   0.050049  202.062500      188.000000     1.0      7542.510742         False          False  False
4    7930.510986    7842.460938 -4170.620605  7930.510986  195.000000  7842.460938   0.050049   88.000000       88.000000     2.0      7542.510742         False          False  False
5    7941.010986    7890.660645 -4169.120605  7941.010986   98.500000  7890.660645   0.050049   50.300293        0.000000     3.0      7542.510742         False          False  False
6    7941.010986    7940.960938 -4095.195557  7941.010986   50.250000  7940.960938   0.050049    0.000000      -26.074951     2.0      7542.510742         False          False  False
7    7967.135986    7967.035889 -4009.258057  7967.135986   26.125000  7967.035889   0.050049    0.050049      -14.012451     1.0      7542.510742         False          False  False
8    7981.148438    7981.098389 -4009.258057  7981.148438   14.062500  7981.098389   0.050049    0.000000     -100.000000     1.0      7542.510742         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3761/20.[0m
[08/10 15:35:53]  --------------------------------------------------------------------------------
[08/10 15:35:53]  Iteration: 62 (0 solution, 61 counterexamples)
[08/10 15:36:02]  Generator returned sat in 6.700809 secs.
[08/10 15:36:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:03]  Improved number of small numbers from 85 to 93 out of a max of 113
[08/10 15:36:03]  Verifer returned sat in 0.825342 secs.
[08/10 15:36:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7671.986084    7171.785889 -3995.195557   7671.986084   500.200000  7171.785889     0.000000   500.200195      404.950195     7.0      7171.785889            -1             -1    True
1    7671.986084    7267.035889 -3995.195557   7671.986084   500.150000  7267.035889     0.000000   404.950195      304.950195     7.0      7671.986084         False          False    True
2    7767.135986    7467.035889 -3995.195557   7767.135986   500.100098  7467.035889     0.000000   300.100098      300.100098     8.0      7767.135986         False          False    True
3    7967.085889    7467.035889 -3995.195557   7967.085889   500.050000  7467.035889     0.000000   500.050000      400.050000     8.0      7967.085889         False          False    True
4    7967.085889    7567.035889 -3995.195557   7967.085889   248.025000  7567.035889     0.000000   400.050000      300.050000     9.0      7967.085889         False          False    True
5    8240.073389    7672.035889 -3995.195557   8240.073389   673.037500  7672.035889     0.000000   568.037500      473.037500     4.0      7967.085889         False           True   False
6    8887.592139    7767.185889 -3995.195557   8887.592139  1215.556250  7767.185889     0.000000  1120.406250     1020.556250     4.0      7967.085889         False          False   False
7    9891.670264    7967.035889 -3995.195557   9891.670264  2124.484375  7967.035889   904.028125  1020.606250     1020.606250     5.0      7967.085889         False          False   False
8   10993.548389    8067.035645 -3995.195557  10993.548389  2122.484375  8067.035645  1905.906250  1020.606494     1020.606250     4.0      7967.085889         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=163297/160.[0m
[08/10 15:36:03]  --------------------------------------------------------------------------------
[08/10 15:36:03]  Iteration: 63 (0 solution, 62 counterexamples)
[08/10 15:36:23]  Generator returned sat in 17.340393 secs.
[08/10 15:36:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:36:23]  Improved gap from 0 to 100
[08/10 15:36:24]  Improved number of small numbers from 68 to 91 out of a max of 114
[08/10 15:36:24]  Verifer returned sat in 1.254944 secs.
[08/10 15:36:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7549.176025    7349.275879 -3995.195557  7549.176025    0.050049  7349.275879       0.00  199.900146      199.900013     8.0      7349.275879            -1             -1     -1
1    7549.176025    7449.276012 -3995.195557  7549.176025    0.050049  7449.276012       0.00   99.900013       99.900013     8.0      7349.275879         False           True  False
2    8049.376012    7549.226074 -3995.195557  8049.376012  600.100000  7549.226074       0.05  500.099938      500.050000     1.0      7349.275879          True           True  False
3    8049.376012    7549.276123 -3995.195557  8049.376012   50.076543  7549.276123       0.05  500.049889      400.050000     2.0      8049.326012         False          False   True
4    8049.376012    7649.276123 -3995.195557  8049.376012   76.614815  7649.276123       0.05  400.049889      300.050000     3.0      8049.326012         False           True  False
5    8049.376012    7849.275879 -3995.195557  8049.376012  116.422222  7849.275879       0.05  200.050133      200.050000     4.0      8049.326012         False           True  False
6    8049.376012    7883.525879 -3995.195557  8049.376012  176.133333  7883.525879       0.05  165.800133      100.050000     5.0      8049.326012         False           True  False
7    8149.275879    8049.276012 -3995.195557  8149.275879  265.700000  8049.276012       0.05   99.949867       99.949867     6.0      8049.326012         False           True  False
8    8449.376012    8149.275879 -3995.195557  8449.376012  400.050000  8149.275879       0.05  300.050133      300.050000     1.0      8049.326012         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=10001/20.[0m
[08/10 15:36:25]  --------------------------------------------------------------------------------
[08/10 15:36:25]  Iteration: 64 (0 solution, 63 counterexamples)
[08/10 15:37:11]  Generator returned sat in 44.745853 secs.
[08/10 15:37:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:12]  Improved gap from 0 to 100
[08/10 15:37:13]  Improved number of small numbers from 59 to 73 out of a max of 114
[08/10 15:37:13]  Verifer returned sat in 1.522318 secs.
[08/10 15:37:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7825.090820    7525.141012 -4171.060557  7825.090820  401.349854  7525.141012       0.00  299.949808      299.949808     8.0      7525.141012            -1             -1    True
1    7926.441012    7574.928512 -4171.060557  7926.441012  401.300000  7574.928512       0.05  351.462500      301.250000     9.0      7926.391012         False          False    True
2    7976.278512    7725.140869 -4171.060557  7976.278512  401.300000  7725.140869       0.05  251.087643      251.087500     9.0      7926.391012         False           True    True
3    7976.278512    7825.140869 -4171.060557  7976.278512   13.509375  7825.140869       0.05  151.087643      151.087500     3.0      7976.228512         False           True   False
4    7976.278512    7925.140869 -4171.060557  7976.278512   26.018750  7925.140869       0.05   51.087643       51.087500     4.0      7976.228512         False          False   False
5    7976.278512    7925.141113 -4171.060557  7976.278512   51.037500  7925.141113       0.05   51.087399      -48.912500     5.0      7976.228512         False          False   False
6    8026.266113    8025.141012 -4171.060557  8026.266113  101.075000  8025.141012       0.05    1.075101      -98.924899     1.0      7976.228512         False          False   False
7    8226.341012    8225.141012 -4171.060557  8226.341012  201.150000  8225.141012       0.05    1.150000        1.150000     1.0      7976.228512         False          False   False
8    8626.491012    8226.340820 -4171.060557  8626.491012  401.300000  8226.340820       0.10  400.050192      301.250000     1.0      7976.228512         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1205/4.[0m
[08/10 15:37:14]  --------------------------------------------------------------------------------
[08/10 15:37:14]  Iteration: 65 (0 solution, 64 counterexamples)
[08/10 15:37:25]  Generator returned sat in 9.148331 secs.
[08/10 15:37:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:25]  Improved gap from 1/40 to 100
[08/10 15:37:26]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:37:26]  Verifer returned sat in 0.464534 secs.
[08/10 15:37:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7320.901123    7122.651123 -4171.060547  7320.901123  298.150146  7122.651123   0.049805  198.200195       99.950195     5.0      7122.651123            -1             -1     -1
1    7420.851074    7320.900879 -4171.060547  7420.851074  298.150146  7320.900879   0.100098   99.850098       99.849854     1.0      7122.651123         False           True   True
2    7520.900879    7320.950928 -4171.060547  7520.900879  199.899902  7320.950928   0.149902  199.800049       99.849854     2.0      7520.750977         False          False   True
3    7521.000977    7520.751221 -4171.060547  7521.000977  199.900146  7520.751221   0.149902    0.099854       -0.050049     1.0      7520.750977         False           True   True
4    7720.951172    7520.901123 -4171.060547  7720.951172  200.050049  7520.901123   0.200195  199.849854       99.849854     1.0      7520.750977         False          False   True
5    7720.951172    7720.700928 -4171.060547  7720.951172    0.500000  7720.700928   0.200195    0.050049       -0.150146     2.0      7520.750977         False          False   True
6    7921.776123    7820.900879 -4171.060547  7921.776123  200.875000  7820.900879   1.025146   99.850098       99.849854     1.0      7920.750977          True           True  False
7    7921.776123    7920.167725 -4171.060547  7921.776123    0.500000  7920.167725   1.025146    0.583252       -0.150146     2.0      7920.750977         False          False   True
8    8121.826172    7920.901123 -4171.060547  8121.826172  200.633301  7920.901123   1.075195  199.849854       99.849854     1.0      7920.750977         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=408985/4096.[0m
[08/10 15:37:26]  --------------------------------------------------------------------------------
[08/10 15:37:26]  Iteration: 66 (0 solution, 65 counterexamples)
[08/10 15:37:38]  Generator returned sat in 9.931008 secs.
[08/10 15:37:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:37:39]  Improved gap from 818377/16384 to 100
[08/10 15:37:39]  Improved number of small numbers from 50 to 114 out of a max of 114
[08/10 15:37:39]  Verifer returned sat in 0.340833 secs.
[08/10 15:37:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7420.700684    7320.700684 -4171.060791  7420.700684  100.050293  7320.700684    0.000000  100.000000       99.999756     2.0      7320.700684            -1             -1    True
1    7420.750977    7420.700928 -4171.060791  7420.750977  100.050293  7420.700928    0.000000    0.050049        0.050049     1.0      7320.700684         False          False    True
2    7520.750977    7420.750977 -4171.060791  7520.750977  100.050049  7420.750977    0.000000  100.000000        0.050049     2.0      7520.750977         False          False    True
3    7520.851074    7520.750977 -4171.060791  7520.851074  100.100098  7520.750977    0.000000    0.100098      -99.849854     2.0      7520.750977         False          False    True
4    7720.801270    7620.725586 -4171.060791  7720.801270  200.050293  7620.725586    0.050293  100.025391        0.050049     1.0      7520.750977         False          False    True
5    7720.801270    7720.750977 -4171.060791  7720.801270  100.025146  7720.750977    0.050293    0.000000      -99.949951     2.0      7520.750977         False          False    True
6    8020.801270    7820.700928 -4171.060791  8020.801270  300.000000  7820.700928  100.050293  100.050049        0.050049     1.0      7520.750977         False          False    True
7    8070.751221    7920.750977 -4171.060791  8070.751221  150.000000  7920.750977  100.050293   49.949951      -50.000000     2.0      7520.750977         False          False    True
8    8320.826660    8020.700928 -4171.060791  8320.826660  300.025391  8020.700928  200.075684  100.050049        0.050049     1.0      7520.750977         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/4096.[0m
[08/10 15:37:39]  --------------------------------------------------------------------------------
[08/10 15:37:39]  Iteration: 67 (0 solution, 66 counterexamples)
[08/10 15:38:33]  Generator returned sat in 50.976057 secs.
[08/10 15:38:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:38:34]  Improved number of small numbers from 91 to 91 out of a max of 113
[08/10 15:38:34]  Verifer returned sat in 0.673696 secs.
[08/10 15:38:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7320.726074    7120.853564 -4071.11084  7320.726074  100.050293  7120.853564    0.000000  199.872510       99.975098     2.0      7120.853564            -1             -1    True
1    7420.750977    7320.738525 -4071.11084  7420.750977  299.897412  7320.738525    0.000000  100.012451      100.000000     1.0      7120.853564         False          False    True
2    7520.750977    7320.750977 -4071.11084  7520.750977  200.012451  7320.750977    0.000000  200.000000      100.000000     2.0      7520.750977         False          False    True
3    7520.763428    7453.814551 -4071.11084  7520.763428  200.012451  7453.814551    0.000000   66.948877        0.012451     2.0      7520.750977         False          False    True
4    7720.801270    7520.775879 -4071.11084  7720.801270  266.986719  7520.775879    0.050293  199.975098      100.000000     1.0      7520.750977         False          False    True
5    7720.801270    7720.750977 -4071.11084  7720.801270  132.993359  7720.750977    0.050293    0.000000        0.000000     2.0      7520.750977         False          False    True
6    7987.797949    7820.700928 -4071.11084  7987.797949  266.996680  7820.700928   67.046973  100.050049      100.000000     1.0      7520.750977         False          False    True
7    8020.746240    7920.750977 -4071.11084  8020.746240  132.998340  7920.750977   67.046973   32.948291       32.948291     2.0      7520.750977         False          False    True
8    8254.784668    7953.711719 -4071.11084  8254.784668  266.986719  7953.711719  134.033691  167.039258      100.000000     1.0      7520.750977         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:38:34]  --------------------------------------------------------------------------------
[08/10 15:38:34]  Iteration: 68 (0 solution, 67 counterexamples)
[08/10 15:38:58]  Generator returned sat in 21.654956 secs.
[08/10 15:38:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:00]  Improved gap from 0 to 35.9375
[08/10 15:39:01]  Improved number of small numbers from 65 to 73 out of a max of 114
[08/10 15:39:01]  Verifer returned sat in 3.121899 secs.
[08/10 15:39:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7339.557373    7339.457227 -4261.854736  7339.557373   0.100098  7339.457227        0.0   0.100146        0.100000     2.0      7339.457227            -1             -1   False
1    7358.025977    7357.925977 -4239.879395  7358.025977  18.568750  7357.925977        0.0   0.100000      -59.456055     1.0      7339.457227         False          False   False
2    7453.319727    7417.482227 -4175.817090  7453.319727  95.393750  7417.482227        0.0  35.837500       -0.100000     1.0      7339.457227         False          False   False
3    7512.775977    7453.419727 -4135.173340  7512.775977  95.293750  7453.419727        0.0  59.356250        0.000000     1.0      7512.775977         False          False   False
4    7512.775977    7512.775977 -4071.110840  7512.775977  57.481250  7512.775977        0.0   0.000000      -35.937500     2.0      7512.775977         False          False   False
5    7590.700977    7548.713477 -4013.098389  7590.700977  77.925000  7548.713477        0.0  41.987500       -0.000049     1.0      7512.775977         False          False   False
6    7614.829102    7590.800977 -3949.135840  7614.829102  66.115625  7590.800977        0.0  24.028125      -11.909375     1.0      7512.775977         False          False   False
7    7659.991602    7626.738477 -3885.073340  7659.991602  69.190625  7626.738477        0.0  33.253125       -2.684375     1.0      7512.775977         False          False   False
8    7684.219727    7662.676025 -3885.073242  7684.219727  57.481250  7662.676025        0.0  21.543701      -78.456152     1.0      7512.775977         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/10 15:39:02]  --------------------------------------------------------------------------------
[08/10 15:39:02]  Iteration: 69 (0 solution, 68 counterexamples)
[08/10 15:39:18]  Generator returned sat in 13.466739 secs.
[08/10 15:39:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:18]  Improved gap from 7/5 to 100
[08/10 15:39:19]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 15:39:19]  Verifer returned sat in 1.256351 secs.
[08/10 15:39:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6893.697266    6893.695977 -3885.07334  6893.697266  100.002441  6893.695977    0.000000    0.001289       -0.001211     9.0      6893.695977            -1             -1     -1
1    6993.698477    6893.698477 -3885.07334  6993.698477  100.002500  6893.698477    0.000000  100.000000        0.000000     1.0      6893.695977         False           True  False
2    7193.699727    6993.699727 -3885.07334  7193.699727  300.001250  6993.699727    0.001250  199.998750      100.000000     1.0      6893.695977         False          False  False
3    7193.699727    7093.698477 -3885.07334  7193.699727    0.248750  7093.698477    0.001250  100.000000        0.000000     2.0      7193.698477         False          False   True
4    7393.700977    7193.698477 -3885.07334  7393.700977  300.001250  7193.698477    0.002500  200.000000      100.000000     3.0      7193.698477         False          False   True
5    7393.700977    7293.698477 -3885.07334  7393.700977    0.010000  7293.698477    0.002500  100.000000        0.000000     2.0      7193.698477         False           True   True
6    7743.219102    7493.698242 -3885.07334  7743.219102  449.518125  7493.698242  149.520625  100.000234      100.000000     1.0      7193.698477         False          False   True
7    7743.219102    7593.697227 -3885.07334  7743.219102    0.010000  7593.697227  149.520625    0.001250        0.000000     2.0      7193.698477         False          False   True
8    8342.735977    7593.699707 -3885.07334  8342.735977  599.518125  7593.699707  549.037500  199.998770      100.000000     1.0      7193.698477         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=100.[0m
[08/10 15:39:20]  --------------------------------------------------------------------------------
[08/10 15:39:20]  Iteration: 70 (0 solution, 69 counterexamples)
[08/10 15:39:28]  Generator returned sat in 6.243281 secs.
[08/10 15:39:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:31]  Improved gap from 1/800 to 35.9375
[08/10 15:39:32]  Improved number of small numbers from 76 to 104 out of a max of 114
[08/10 15:39:32]  Verifer returned sat in 3.967597 secs.
[08/10 15:39:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    9085.338623    8977.425977 -5977.113281  9085.338623    0.100000  8977.425977        0.0  107.912646       99.600342     4.0      8977.425977            -1             -1   False
1    9085.538477    9085.438477 -5977.113281  9085.538477  108.112500  9085.438477        0.0    0.100000       -0.199805     1.0      8977.425977         False          False   False
2    9125.375732    9085.738281 -5916.850830  9125.375732   39.937256  9085.738281        0.0   39.637451       -0.100098     1.0      9125.375732         False          False   False
3    9125.575928    9125.475977 -5852.788574  9125.575928   39.837646  9125.475977        0.0    0.099951      -35.837646     1.0      9125.575928         False          False   False
4    9201.500977    9161.413574 -5792.875977  9201.500977   76.025000  9161.413574        0.0   40.087402        0.000000     1.0      9125.575928         False          False   False
5    9201.500977    9201.500977 -5728.813477  9201.500977   39.987549  9201.500977        0.0    0.000000      -35.937500     2.0      9125.575928         False          False   False
6    9261.382324    9237.438477 -5664.750977  9261.382324   59.881348  9237.438477        0.0   23.943848      -11.993652     1.0      9125.575928         False          False   False
7    9295.419727    9273.375977 -5600.688477  9295.419727   57.981250  9273.375977        0.0   22.043750      -13.893750     1.0      9125.575928         False          False   False
8    9331.357178    9311.313477 -5600.688477  9331.357178   57.981201  9311.313477        0.0   20.043701      -77.956299     1.0      9125.575928         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1/5.[0m
[08/10 15:39:33]  --------------------------------------------------------------------------------
[08/10 15:39:33]  Iteration: 71 (0 solution, 70 counterexamples)
[08/10 15:39:44]  Generator returned sat in 8.522182 secs.
[08/10 15:39:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:39:44]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/10 15:39:44]  Verifer returned sat in 0.451323 secs.
[08/10 15:39:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8465.427246    8165.427002 -5600.688477  8465.427246    0.001221  8165.427002   0.000000  300.000244      300.000244     8.0      8165.427002            -1             -1   False
1    8465.428223    8167.427246 -5600.688477  8465.428223  300.001221  8167.427246   0.000000  298.000977      200.001221     7.0      8165.427002         False          False   False
2    8665.425781    8267.425781 -5600.688477  8665.425781  497.998535  8267.425781   0.000000  398.000000      299.998779     8.0      8165.427002         False          False   False
3    8765.429688    8367.422119 -5600.688477  8765.429688  498.003906  8367.422119   0.001465  398.006104      300.001221     9.0      8165.427002         False          False   False
4    8765.429688    8465.427246 -5600.688477  8765.429688    0.010000  8465.427246   0.001465  300.000977      200.001221     9.0      8765.428223          True           True    True
5    8765.429688    8665.427002 -5600.688477  8765.429688  300.000000  8665.427002   0.001465  100.001221      100.001221     3.0      8765.428223         False           True   False
6    9065.429688    8765.425781 -5600.688477  9065.429688  400.001221  8765.425781   0.001465  300.002441      300.001221     4.0      8765.428223         False          False   False
7    9165.430908    8765.427246 -5600.688477  9165.430908  400.003662  8765.427246   0.002686  400.000977      300.001221     5.0      8765.428223         False          False   False
8    9165.430908    8965.427002 -5600.688477  9165.430908    0.010000  8965.427002   0.002686  200.001221      200.001221     3.0      8765.428223         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=1228805/4096.[0m
[08/10 15:39:45]  --------------------------------------------------------------------------------
[08/10 15:39:45]  Iteration: 72 (0 solution, 71 counterexamples)
[08/10 15:40:08]  Generator returned sat in 20.303397 secs.
[08/10 15:40:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:08]  Improved gap from 0 to 100
[08/10 15:40:09]  Improved number of small numbers from 105 to 105 out of a max of 114
[08/10 15:40:09]  Verifer returned sat in 0.832118 secs.
[08/10 15:40:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8665.402813    8565.403437 -6000.664912  8665.402813    0.000625  8565.403437    0.000625   99.998750       99.998750     5.0      8565.403437            -1             -1     -1
1    8665.404062    8665.402813 -6000.664912  8665.404062  100.000000  8665.402813    0.000625    0.000625        0.000000     1.0      8565.403437         False           True   True
2    8765.403437    8765.402187 -6000.664912  8765.403437  100.000000  8765.402187    0.000625    0.000625       -0.000625     1.0      8565.403437         False          False   True
3    8765.429688    8765.403437 -6000.664912  8765.429688    0.026875  8765.403437    0.000625    0.025625      -99.974375     1.0      8765.429062         False          False   True
4    9066.944375    8965.395937 -6000.664912  9066.944375  301.540313  8965.395937  101.539687    0.008750        0.001250     1.0      8765.429062         False          False   True
5    9066.945625    8965.405312 -6000.664912  9066.945625    0.010000  8965.405312  101.539687    0.000625      -99.997500     1.0      8765.429062         False          False   True
6    9368.464687    9165.403437 -6000.664912  9368.464687  301.519687  9165.403437  203.060000    0.001250        0.001250     1.0      8765.429062         False          False   True
7    9368.473438    9165.412813 -6000.664912  9368.473438    0.010000  9165.412813  203.060000    0.000625      -99.990000     1.0      8765.429062         False          False   True
8    9670.013125    9265.403437 -6000.664912  9670.013125  301.540313  9265.403437  304.608437  100.001250        0.001250     1.0      8765.429062         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/800.[0m
[08/10 15:40:09]  --------------------------------------------------------------------------------
[08/10 15:40:09]  Iteration: 73 (0 solution, 72 counterexamples)
[08/10 15:40:20]  Generator returned sat in 8.409604 secs.
[08/10 15:40:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:21]  Improved number of small numbers from 104 to 113 out of a max of 113
[08/10 15:40:21]  Verifer returned sat in 0.307505 secs.
[08/10 15:40:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8663.689453    8563.689697 -6098.951172  8663.689453  300.925000  8563.689697   0.024902   99.974854       -0.025146     2.0      8563.689697            -1             -1     -1
1    8864.614746    8663.689697 -6098.951172  8864.614746  300.900146  8663.689697   0.024902  200.900146      100.900146     1.0      8864.589844         False          False   True
2    8964.589600    8763.689697 -6098.951172  8964.589600  300.875000  8763.689697   0.024902  200.875000      100.875000     2.0      8964.564697         False          False   True
3    9159.789795    8866.089600 -6098.951172  9159.789795  396.075195  8866.089600   0.024902  293.675293      196.075195     2.0      8964.564697         False          False   True
4    9263.689697    8964.589600 -6098.951172  9263.689697  397.575195  8964.589600   0.024902  299.075195      199.975098     2.0      8964.564697         False          False   True
5    9363.689697    9163.689697 -6098.951172  9363.689697  399.075195  9163.689697   0.024902  199.975098      199.975098     2.0      8964.564697         False          False   True
6    9564.289795    9263.689453 -6098.951172  9564.289795  400.575195  9263.689453   0.550049  300.050293      300.050049     2.0      8964.564697         False          False   True
7    9662.814697    9363.689453 -6098.951172  9662.814697  398.575195  9363.689453   0.550049  298.575195      298.574951     2.0      8964.564697         False          False   True
8    9764.314697    9363.714844 -6098.951172  9764.314697  400.075195  9363.714844   0.574951  400.024902      300.050049     3.0      8964.564697         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1229005/4096.[0m
[08/10 15:40:21]  --------------------------------------------------------------------------------
[08/10 15:40:21]  Iteration: 74 (0 solution, 73 counterexamples)
[08/10 15:40:43]  Generator returned sat in 19.058934 secs.
[08/10 15:40:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:43]  Improved gap from 0 to 100
[08/10 15:40:44]  Improved number of small numbers from 78 to 114 out of a max of 114
[08/10 15:40:44]  Verifer returned sat in 0.766670 secs.
[08/10 15:40:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8864.364502    8764.264893 -6199.726318  8864.364502  100.300000  8764.264893    0.000000  100.099609       99.899658     3.0      8764.264893            -1             -1   False
1    8864.464844    8864.464600 -6199.726318  8864.464844  100.199951  8864.464600    0.000000    0.000244        0.000000     1.0      8864.464844         False          False   False
2    8964.564697    8964.464600 -6199.726318  8964.564697  100.100098  8964.464600    0.000000    0.100098        0.099854     1.0      8964.564697         False          False   False
3    9226.664795    9031.664551 -6199.726318  9226.664795  262.200195  9031.664551  162.000000   33.000244        0.199951     1.0      8964.564697         False          False   False
4    9326.764648    9164.464600 -6199.726318  9326.764648  133.100098  9164.464600  162.099854    0.200195        0.199951     1.0      8964.564697         False          False    True
5    9395.114502    9232.914795 -6199.726318  9395.114502   68.550049  9232.914795  162.099854    0.099854      -31.450195     1.0      8964.564697         False          False    True
6    9528.739746    9364.464600 -6199.726318  9528.739746  133.725098  9364.464600  164.074951    0.200195        0.199951     1.0      8964.564697         False          False    True
7    9597.402100    9431.664795 -6199.726318  9597.402100   68.862549  9431.664795  164.074951    1.662354      -31.137695     1.0      8964.564697         False          False    True
8    9728.839844    9464.464844 -6199.726318  9728.839844  133.100098  9464.464844  164.175049  100.199951        0.199951     1.0      8964.564697         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=819/4096.[0m
[08/10 15:40:44]  --------------------------------------------------------------------------------
[08/10 15:40:44]  Iteration: 75 (0 solution, 74 counterexamples)
[08/10 15:40:49]  Generator returned sat in 1.714396 secs.
[08/10 15:40:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:49]  Improved number of small numbers from 71 to 113 out of a max of 113
[08/10 15:40:49]  Verifer returned sat in 0.416285 secs.
[08/10 15:40:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8864.464844    8764.264648 -6199.726562  8864.464844  100.399902  8764.264648    0.000000  100.200195       99.949707     2.0      8764.264648            -1             -1   False
1    8864.564697    8864.515137 -6199.726562  8864.564697  100.300049  8864.515137    0.000000    0.049561        0.049561     1.0      8864.564697         False          False   False
2    8964.564697    8962.464600 -6199.726562  8964.564697  100.049561  8962.464600    0.000000    2.100098        0.049561     1.0      8964.564697         False          False   False
3    9226.664795    9031.564941 -6199.726562  9226.664795  264.200195  9031.564941  162.049805   33.050049        0.099854     1.0      8964.564697         False          False   False
4    9326.714844    9164.464355 -6199.726562  9326.714844  133.100098  9164.464355  162.099854    0.150635        0.099854     1.0      8964.564697         False          False    True
5    9394.114258    9231.964600 -6199.726318  9394.114258   67.550049  9231.964600  162.099854    0.049805      -32.500488     1.0      8964.564697         False          False    True
6    9528.314453    9364.514893 -6199.726318  9528.314453  134.250000  9364.514893  163.699707    0.099854        0.099854     1.0      8964.564697         False          False    True
7    9596.339600    9431.664551 -6199.726318  9596.339600   68.125000  9431.664551  163.699707    0.975342      -31.875000     1.0      8964.564697         False          False    True
8    9728.464355    9464.515137 -6199.726318  9728.464355  133.100098  9464.515137  163.849609  100.099609        0.099854     1.0      8964.564697         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=409/4096.[0m
[08/10 15:40:50]  --------------------------------------------------------------------------------
[08/10 15:40:50]  Iteration: 76 (0 solution, 75 counterexamples)
[08/10 15:40:54]  Generator returned sat in 1.786242 secs.
[08/10 15:40:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:40:55]  Improved gap from 263581/8192 to 100
[08/10 15:40:56]  Improved number of small numbers from 61 to 65 out of a max of 114
[08/10 15:40:56]  Verifer returned sat in 1.490608 secs.
[08/10 15:40:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8729.047852    8629.148031 -6018.709456  8729.047852  141.950000  8629.148031   0.000000   99.899821       99.899821     7.0      8629.148031            -1             -1   False
1    8771.048031    8729.098031 -6018.709456  8771.048031  141.900000  8729.098031   0.050000   41.900000       41.850000     1.0      8770.998031         False          False   False
2    8870.998031    8729.148031 -6018.709456  8870.998031  141.850000  8729.148031   0.050000  141.800000       41.800000     2.0      8870.948031         False          False    True
3    9020.131364    8924.081364 -6018.709456  9020.131364  290.933333  8924.081364  49.133333   46.916667       41.850000     1.0      8870.948031         False          False    True
4    9120.181364    9029.148031 -6018.709456  9120.181364  146.966667  9029.148031  49.183333   41.850000       41.850000     1.0      8870.948031         False          False    True
5    9153.314697    9104.081364 -6018.709456  9153.314697   74.983333  9104.081364  49.183333    0.050000      -25.016667     1.0      8870.948031         False          False    True
6    9340.231364    9229.148031 -6018.709456  9340.231364  186.966667  9229.148031  69.233333   41.850000       41.850000     1.0      8870.948031         False          False    True
7    9393.364697    9324.081364 -6018.709456  9393.364697   94.983333  9324.081364  69.233333    0.050000       -5.016667     1.0      8870.948031         False          False    True
8    9540.281364    9329.148193 -6018.709456  9540.281364  146.966667  9329.148193  69.283333  141.849837       41.850000     1.0      8870.948031         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=837/20.[0m
[08/10 15:40:57]  --------------------------------------------------------------------------------
[08/10 15:40:57]  Iteration: 77 (0 solution, 76 counterexamples)
[08/10 15:41:23]  Generator returned sat in 23.321018 secs.
[08/10 15:41:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:24]  Improved gap from 1/600 to 100
[08/10 15:41:25]  Improved number of small numbers from 57 to 61 out of a max of 114
[08/10 15:41:25]  Verifer returned sat in 1.928243 secs.
[08/10 15:41:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8120.183864    7920.183239 -5409.744665  8120.183864  199.999756  7920.183239   0.000625  200.000000        100.0000     7.0      7920.183239            -1             -1     -1
1    8120.183864    8120.182614 -5409.744665  8120.183864  199.999268  8120.182614   0.000625    0.000625          0.0000     6.0      8120.183239         False           True   True
2    8320.181989    8120.183239 -5409.744665  8320.181989  199.998750  8120.183239   0.001250  199.997500         99.9975     3.0      8320.180739         False           True  False
3    8320.181989    8320.180114 -5409.744665  8320.181989    0.000625  8320.180114   0.001250    0.000625         -0.0025     2.0      8320.180739         False          False   True
4    8520.680114    8320.192614 -5409.744665  8520.680114  200.498750  8320.192614   0.499375  199.988125         99.9975     1.0      8320.180739         False          False   True
5    8520.680114    8519.845322 -5409.744665  8520.680114    0.010000  8519.845322   0.499375    0.335417         -0.0025     2.0      8320.180739         False          False   True
6    8720.680739    8620.183105 -5409.744665  8720.680739  200.336042  8620.183105   0.500000   99.997633         99.9975     1.0      8320.180739         False          False   True
7    8720.680739    8720.180114 -5409.744665  8720.680739    0.010000  8720.180114   0.500000    0.000625         -0.0025     2.0      8320.180739         False          False   True
8    8921.178864    8720.183350 -5409.744665  8921.178864  200.498750  8720.183350   0.998125  199.997389         99.9975     1.0      8320.180739         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=39999/400.[0m
[08/10 15:41:25]  --------------------------------------------------------------------------------
[08/10 15:41:25]  Iteration: 78 (0 solution, 77 counterexamples)
[08/10 15:41:56]  Generator returned sat in 28.561439 secs.
[08/10 15:41:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:41:58]  Improved gap from 1/20 to 100
[08/10 15:41:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:41:58]  Verifer returned sat in 1.301372 secs.
[08/10 15:41:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8336.553955    8236.579102 -5409.744873  8336.553955   99.975098  8236.579102   0.000000   99.974854       99.974854     6.0      8236.579102            -1             -1   False
1    8336.553955    8336.529297 -5409.744873  8336.553955   99.950195  8336.529297   0.000000    0.024658       -0.025146     6.0      8336.553955         False          False   False
2    8336.604248    8336.579102 -5409.744873  8336.604248    0.074951  8336.579102   0.000000    0.025146      -99.974854     1.0      8336.604248         False          False   False
3    8623.545898    8530.545654 -5409.744873  8623.545898  286.966797  8530.545654  48.041748   44.958496       38.925049     1.0      8336.604248         False          False   False
4    8723.570801    8636.578857 -5409.744873  8723.570801  144.983398  8636.578857  48.066650   38.925293       38.925049     1.0      8336.604248         False          False    True
5    8758.637207    8710.545898 -5409.744873  8758.637207   73.991699  8710.545898  48.066650    0.024658      -26.008545     1.0      8336.604248         False          False    True
6    8943.595947    8836.579102 -5409.744873  8943.595947  184.983398  8836.579102  68.091797   38.925049       38.925049     1.0      8336.604248         False          False    True
7    8998.662598    8930.545654 -5409.744873  8998.662598   93.991699  8930.545654  68.091797    0.025146       -6.008301     1.0      8336.604248         False          False    True
8    9143.620850    8936.579102 -5409.744873  9143.620850  144.983398  8936.579102  68.116699  138.925049       38.925049     1.0      8336.604248         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=159437/4096.[0m
[08/10 15:41:59]  --------------------------------------------------------------------------------
[08/10 15:41:59]  Iteration: 79 (0 solution, 78 counterexamples)
[08/10 15:42:44]  Generator returned sat in 43.048086 secs.
[08/10 15:42:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:45]  Improved gap from 1/2000 to 100
[08/10 15:42:45]  Improved number of small numbers from 96 to 114 out of a max of 114
[08/10 15:42:45]  Verifer returned sat in 0.539708 secs.
[08/10 15:42:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8333.378906    8136.579102 -5409.744873  8333.378906    0.100098  8136.579102   0.000000  196.799805       96.799805     3.0      8136.579102            -1             -1   False
1    8336.578857    8333.479004 -5409.744873  8336.578857  199.999756  8333.479004   0.000000    3.099854       -0.000244     1.0      8136.579102         False          False   False
2    8533.479004    8336.679199 -5409.744873  8533.479004  200.000000  8336.679199   0.000000  196.799805       96.899902     1.0      8136.579102         False          False   False
3    8536.579102    8436.579102 -5409.744873  8536.579102  199.899902  8436.579102   0.000000  100.000000        0.000000     2.0      8536.579102         False          False   False
4    8736.079102    8635.279053 -5409.744873  8736.079102  299.500000  8635.279053   0.000000  100.800049       99.500000     1.0      8536.579102         False          False   False
5    8936.579102    8736.579102 -5409.744873  8936.579102  301.300049  8736.579102   0.099854  199.900146      199.900146     1.0      8536.579102         False          False   False
6    9037.479004    8836.479248 -5409.744873  9037.479004  300.800049  8836.479248   0.999756  200.000000      199.900146     2.0      8536.579102         False          False    True
7    9137.779053    8836.579102 -5409.744873  9137.779053  300.300049  8836.579102   1.299805  299.900146      199.900146     3.0      8536.579102         False          False    True
8    9137.779053    9036.578857 -5409.744873  9137.779053  299.800049  9036.578857   1.299805   99.900391       99.900146     2.0      8536.579102         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=818791/4096.[0m
[08/10 15:42:46]  --------------------------------------------------------------------------------
[08/10 15:42:46]  Iteration: 80 (0 solution, 79 counterexamples)
[08/10 15:42:50]  Generator returned sat in 2.081095 secs.
[08/10 15:42:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:51]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 15:42:51]  Verifer returned sat in 0.178631 secs.
[08/10 15:42:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8332.929199    8136.579102 -5409.744873  8332.929199    0.100098  8136.579102   0.000000  196.350098       96.350098     4.0      8136.579102            -1             -1   False
1    8336.578857    8332.979004 -5409.744873  8336.578857  199.999756  8332.979004   0.000000    3.599854       -0.000244     1.0      8136.579102         False          False   False
2    8533.479004    8336.679199 -5409.744873  8533.479004  200.500000  8336.679199   0.000000  196.799805       96.899902     1.0      8136.579102         False          False   False
3    8536.579102    8436.829102 -5409.744873  8536.579102  199.899902  8436.829102   0.000000   99.750000        0.000000     2.0      8536.579102         False          False   False
4    8736.079102    8635.279053 -5409.744873  8736.079102  299.250000  8635.279053   0.000000  100.800049       99.500000     1.0      8536.579102         False          False   False
5    8936.579102    8736.579102 -5409.744873  8936.579102  301.300049  8736.579102   0.099854  199.900146      199.900146     1.0      8536.579102         False          False   False
6    9037.479004    8836.479248 -5409.744873  9037.479004  300.800049  8836.479248   0.999756  200.000000      199.900146     2.0      8536.579102         False          False    True
7    9137.779053    8836.579102 -5409.744873  9137.779053  300.300049  8836.579102   1.299805  299.900146      199.900146     3.0      8536.579102         False          False    True
8    9137.779053    9036.578857 -5409.744873  9137.779053  299.800049  9036.578857   1.299805   99.900391       99.900146     2.0      8536.579102         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=818791/4096.[0m
[08/10 15:42:51]  --------------------------------------------------------------------------------
[08/10 15:42:51]  Iteration: 81 (0 solution, 80 counterexamples)
[08/10 15:42:57]  Generator returned sat in 2.517089 secs.
[08/10 15:42:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:42:57]  Improved number of small numbers from 109 to 113 out of a max of 113
[08/10 15:42:57]  Verifer returned sat in 0.166595 secs.
[08/10 15:42:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8332.928955    8136.579102 -5409.745361  8332.928955    0.099854  8136.579102   0.000000  196.349854       96.349854     3.0      8136.579102            -1             -1   False
1    8336.578369    8332.978760 -5409.745361  8336.578369  199.999268  8332.978760   0.000000    3.599609       -0.000732     1.0      8136.579102         False          False   False
2    8533.478516    8336.678955 -5409.745361  8533.478516  200.499756  8336.678955   0.000000  196.799561       96.899414     1.0      8136.579102         False          False   False
3    8536.578857    8437.029053 -5409.745361  8536.578857  199.899902  8437.029053   0.000000   99.549805       -0.000244     2.0      8536.578857         False          False   False
4    8735.979004    8635.278809 -5409.745361  8735.979004  298.949951  8635.278809   0.000000  100.700195       99.399902     1.0      8536.578857         False          False   False
5    8936.078857    8736.578613 -5409.745361  8936.078857  300.800049  8736.578613   0.099854  199.400391      199.399902     1.0      8536.578857         False          False   False
6    9036.978516    8836.479004 -5409.745361  9036.978516  300.300049  8836.479004   0.999512  199.500000      199.399902     2.0      8536.578857         False          False    True
7    9137.278564    8836.579102 -5409.745361  9137.278564  299.800049  8836.579102   1.299561  299.399902      199.399902     3.0      8536.578857         False          False    True
8    9137.278564    9036.578369 -5409.745361  9137.278564  299.300049  9036.578369   1.299561   99.400635       99.399902     2.0      8536.578857         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=408371/2048.[0m
[08/10 15:42:58]  --------------------------------------------------------------------------------
[08/10 15:42:58]  Iteration: 82 (0 solution, 81 counterexamples)
[08/10 15:43:31]  Generator returned sat in 30.500044 secs.
[08/10 15:43:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:43:32]  Improved number of small numbers from 51 to 113 out of a max of 113
[08/10 15:43:32]  Verifer returned sat in 0.586131 secs.
[08/10 15:43:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8202.863770    8198.838867 -5409.745361  8202.863770     0.099609  8198.838867        0.0    4.024902       -0.024902     2.0      8198.838867            -1             -1    True
1    8402.863770    8202.888672 -5409.745361  8402.863770   204.024902  8202.888672        0.0  199.975098       99.975098     1.0      8198.838867         False          False    True
2    8602.863770    8402.888428 -5409.745361  8602.863770   399.975098  8402.888428        0.0  199.975342      199.975098     1.0      8198.838867         False          False    True
3    8602.863770    8468.863770 -5409.745361  8602.863770     0.024902  8468.863770        0.0  134.000000       99.975098     2.0      8602.863770         False          False    True
4    8602.913574    8602.888672 -5409.745361  8602.913574   134.049805  8602.888672        0.0    0.024902        0.024902     1.0      8602.863770         False          False    True
5    9002.963379    8602.938721 -5409.745361  9002.963379   400.074707  8602.938721        0.0  400.024658      300.074707     1.0      8602.863770         False          False    True
6    9302.075928    8702.888672 -5409.745361  9302.075928   699.137207  8702.888672        0.0  599.187256      499.187256     2.0      8602.863770         False          False    True
7    9867.606934    8902.888672 -5409.745361  9867.606934  1164.718262  8902.888672        0.0  964.718262      964.718262     3.0      8602.863770         False          False    True
8    9867.606934    9002.888428 -5409.745361  9867.606934   151.000000  9002.888428        0.0  864.718506      864.718262     4.0      9867.606934          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3951589/4096.[0m
[08/10 15:43:32]  --------------------------------------------------------------------------------
[08/10 15:43:32]  Iteration: 83 (0 solution, 82 counterexamples)
[08/10 15:44:05]  Generator returned sat in 30.103962 secs.
[08/10 15:44:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:44:06]  Improved gap from 1/20 to 100
[08/10 15:44:07]  Improved number of small numbers from 68 to 76 out of a max of 114
[08/10 15:44:07]  Verifer returned sat in 1.271306 secs.
[08/10 15:44:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7955.298584    7955.248672 -5409.745361  7955.298584      0.05  7955.248672        0.0    0.049912        0.049912     1.0      7955.248672            -1             -1    True
1    8155.098672    7955.348672 -5409.745361  8155.098672    199.85  7955.348672        0.0  199.750000       99.850000     1.0      7955.248672         False          False    True
2    8155.198672    8155.148672 -5409.745361  8155.198672    199.85  8155.148672        0.0    0.050000       -0.050000     1.0      7955.248672         False          False    True
3    8155.298672    8155.248672 -5409.745361  8155.298672      0.15  8155.248672        0.0    0.050000      -99.950000     1.0      8155.298672         False          False    True
4    8354.398672    8351.698672 -5409.745361  8354.398672    199.15  8351.698672        0.0    2.700000       -0.850000     1.0      8155.298672         False          False    True
5    8946.198672    8355.248672 -5409.745361  8946.198672    594.50  8355.248672        0.0  590.950000      490.950000     1.0      8155.298672         False          False    True
6    9148.848672    8455.248779 -5409.745361  9148.848672    793.60  8455.248779        0.0  693.599893      593.600000     2.0      8155.298672         False          False    True
7    9148.848672    8655.248535 -5409.745361  9148.848672    397.30  8655.248535        0.0  493.600137      493.600000     3.0      9148.848672          True           True   False
8    9148.848672    8755.248535 -5409.745361  9148.848672    199.15  8755.248535        0.0  393.600137      393.600000     4.0      9148.848672         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2431591/4096.[0m
[08/10 15:44:07]  --------------------------------------------------------------------------------
[08/10 15:44:07]  Iteration: 84 (0 solution, 83 counterexamples)
[08/10 15:44:14]  Generator returned sat in 4.019996 secs.
[08/10 15:44:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:44:16]  Improved gap from 0 to 95.3125
[08/10 15:44:17]  Improved number of small numbers from 74 to 76 out of a max of 114
[08/10 15:44:17]  Verifer returned sat in 2.310855 secs.
[08/10 15:44:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8466.935059    8466.933672 -5921.432861  8466.935059   95.316162  8466.933672    0.00000    0.001387       -0.001113     1.0      8466.933672            -1             -1    True
1    8562.248672    8466.936172 -5916.745361  8562.248672   95.315000  8466.936172    0.00000   95.312500        0.000000     1.0      8562.248672         False          False    True
2    8657.546172    8657.544922 -5916.745361  8657.546172  190.610000  8657.544922    0.00000    0.001250       -4.702500     1.0      8562.248672         False          False    True
3    8662.248672    8662.248672 -5914.022861  8662.248672    4.703750  8662.248672    0.00000    0.000000      -97.277500     1.0      8662.248672         False          False    True
4    8860.267422    8859.526172 -5914.022861  8860.267422  198.018750  8859.526172    0.73375    0.007500        0.007500     1.0      8662.248672         False          False    True
5    8860.269922    8859.534922 -5914.022861  8860.269922    0.010000  8859.534922    0.73375    0.001250      -99.990000     1.0      8662.248672         False          False    True
6    9060.268672    9059.526172 -5914.022861  9060.268672  200.000000  9059.526172    0.73500    0.007500        0.007500     1.0      8662.248672         False          False    True
7    9060.271172    9059.534922 -5912.041611  9060.271172    0.010000  9059.534922    0.73500    0.001250      -98.008750     1.0      8662.248672         False          False    True
8    9258.288672    9157.544922 -5912.041611  9258.288672  198.018750  9157.544922    0.73625  100.007500        0.007500     1.0      8662.248672         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/400.[0m
[08/10 15:44:17]  --------------------------------------------------------------------------------
[08/10 15:44:17]  Iteration: 85 (0 solution, 84 counterexamples)
[08/10 15:44:53]  Generator returned sat in 33.041744 secs.
[08/10 15:44:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:44:54]  Improved gap from 3/10 to 48.4375
[08/10 15:44:54]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/10 15:44:54]  Verifer returned sat in 1.283089 secs.
[08/10 15:44:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6917.267334    6817.367432 -4271.864258  6917.267334  100.099854  6817.367432   0.000000   99.899902       99.899902     1.0      6817.367432            -1             -1   False
1    6917.367432    6917.367432 -4271.864258  6917.367432  100.000000  6917.367432   0.000000    0.000000        0.000000     1.0      6917.367432         False          False   False
2    7017.367432    6917.367432 -4271.864258  7017.367432  100.000000  6917.367432   0.000000  100.000000        0.000000     1.0      6917.367432         False          False   False
3    7120.067627    7114.817383 -4271.864258  7120.067627  202.700195  7114.817383   2.500000    2.750244        0.200195     1.0      6917.367432         False          False   False
4    7220.167480    7213.080078 -4271.864258  7220.167480  102.850098  7213.080078   2.599854    4.487549        0.200195     1.0      6917.367432         False          False    True
5    7268.604980    7217.667480 -4220.601807  7268.604980   52.925049  7217.667480   2.599854   48.337646       -0.099854     1.0      6917.367432         False          False    True
6    7273.192383    7266.104980 -4169.039307  7273.192383   52.925049  7266.104980   2.599854    4.487549      -43.949951     1.0      6917.367432         False          False    True
7    7321.629883    7314.542480 -4117.476807  7321.629883   52.925049  7314.542480   2.599854    4.487549      -43.949951     1.0      6917.367432         False          False    True
8    7370.067383    7362.979980 -4065.914307  7370.067383   52.925049  7362.979980   2.599854    4.487549      -43.949951     1.0      6917.367432         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=205/1024.[0m
[08/10 15:44:55]  --------------------------------------------------------------------------------
[08/10 15:44:55]  Iteration: 86 (0 solution, 85 counterexamples)
[08/10 15:45:01]  Generator returned sat in 3.287744 secs.
[08/10 15:45:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:45:02]  Improved gap from 1/1200 to 23.4375
[08/10 15:45:02]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/10 15:45:02]  Verifer returned sat in 1.037127 secs.
[08/10 15:45:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    6777.342773    6777.142578 -4271.864258  6777.342773    0.299805  6777.142578     0.100098   0.100098       -0.100098     6.0      6777.142578            -1             -1     -1
1    6777.542480    6777.342773 -4271.864258  6777.542480    0.299805  6777.342773     0.100098   0.099609      -99.900391     1.0      6777.142578         False           True   True
2    7383.567627    6977.342773 -4271.864258  7383.567627  606.124756  6977.342773   382.887451  23.337402       23.337402     1.0      6777.142578         False          False   True
3    8113.230225    7077.342773 -4271.864258  8113.230225  753.000000  7077.342773  1012.550049  23.337402       23.337402     1.0      6777.142578         False          False   True
4    8467.892822    7174.317383 -4271.864258  8467.892822  378.000000  7174.317383  1267.212646  26.362793       23.337402     1.0      6777.142578         False          False   True
5    8632.030029    7203.929932 -4271.864258  8632.030029  190.500000  7203.929932  1331.349854  96.750244       23.337402     1.0      6777.142578         False          False   True
6    8632.030029    7277.342773 -4195.301758  8632.030029   96.750000  7277.342773  1331.349854  23.337402       -0.100098     2.0      6777.142578         False          False   True
7    8655.567627    7300.780273 -4118.739258  8655.567627   46.875000  7300.780273  1331.349854  23.437500        0.000000     1.0      7324.217773          True           True  False
8    8655.567627    7324.217773 -4118.739258  8655.567627   21.937500  7324.217773  1331.349854   0.000000     -100.000000     2.0      7324.217773         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=47795/2048.[0m
[08/10 15:45:03]  --------------------------------------------------------------------------------
[08/10 15:45:03]  Iteration: 87 (0 solution, 86 counterexamples)
[08/10 15:45:21]  Generator returned sat in 15.008545 secs.
[08/10 15:45:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:45:21]  Improved gap from 375/16 to 23.4375
[08/10 15:45:23]  Improved number of small numbers from 62 to 68 out of a max of 114
[08/10 15:45:23]  Verifer returned sat in 1.726067 secs.
[08/10 15:45:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5485.586670    5381.536842 -4281.872591  5485.586670     0.050  5381.536842       0.05  103.999827      103.999827     2.0      5381.536842            -1             -1     -1
1    5486.986842    5480.186842 -4281.872591  5486.986842   105.400  5480.186842       1.45    5.350000        4.000000     2.0      5381.536842         False          False   True
2    5587.036842    5581.536842 -4281.872591  5587.036842   105.400  5581.536842       1.50    4.000000        4.000000     1.0      5381.536842         False          False   True
3    5688.436842    5680.686842 -4281.872591  5688.436842   105.400  5680.686842       2.90    4.850000        4.000000     1.0      5381.536842         False          False   True
4    5788.486842    5781.536842 -4281.872591  5788.486842   104.900  5781.536842       2.95    4.000000        4.000000     1.0      5381.536842         False          False   True
5    5888.886842    5781.586914 -4281.872591  5888.886842   104.400  5781.586914       3.35  103.949928        4.000000     2.0      5381.536842         False          False   True
6    5888.886842    5881.536842 -4208.385010  5888.886842   103.900  5881.536842       3.35    4.000000      -22.512419     2.0      5381.536842         False          False   True
7    5934.836842    5908.049316 -4131.822591  5934.836842    49.950  5908.049316       3.35   23.437526        0.000000     1.0      5381.536842         False          False   True
8    5934.836842    5931.486842 -4131.822510  5934.836842    22.975  5931.486842       3.35    0.000000      -99.999919     2.0      5381.536842         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=4.[0m
[08/10 15:45:23]  --------------------------------------------------------------------------------
[08/10 15:45:23]  Iteration: 88 (0 solution, 87 counterexamples)
[08/10 15:46:01]  Generator returned sat in 35.294303 secs.
[08/10 15:46:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:46:03]  Improved gap from 0 to 35.9375
[08/10 15:46:04]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 15:46:04]  Verifer returned sat in 2.431323 secs.
[08/10 15:46:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4530.368092    4419.155592 -3330.703613  4530.368092  111.162354  4419.155592       0.05  111.162500       99.950228     5.0      4419.155592            -1             -1     -1
1    4530.368092    4527.068092 -3330.703613  4530.368092  111.112549  4527.068092       0.05    3.250000       -0.049772     6.0      4530.318092         False          False   True
2    4530.468092    4530.368092 -3266.641341  4530.468092    3.350000  4530.368092       0.05    0.050000      -35.887500     1.0      4530.418092         False           True  False
3    4602.243092    4566.305592 -3202.578841  4602.243092   71.825000  4566.305592       0.05   35.887500       -0.050000     1.0      4530.418092         False          False  False
4    4641.430592    4602.243092 -3141.716341  4641.430592   75.075000  4602.243092       0.05   39.137500        0.000000     1.0      4530.418092         False          False  False
5    4641.430592    4641.380592 -3077.653841  4641.430592   39.087500  4641.380592       0.05    0.000000      -35.937500     2.0      4530.418092         False          False  False
6    4698.436842    4677.318092 -3013.591341  4698.436842   57.006250  4677.318092       0.05   21.068750      -14.868750     1.0      4530.418092         False          False  False
7    4734.374342    4713.255592 -2949.529053  4734.374342   57.006250  4713.255592       0.05   21.068750      -14.868962     1.0      4530.418092         False          False  False
8    4770.311842    4752.193115 -2949.529053  4770.311842   57.006250  4752.193115       0.05   18.068727      -78.931462     1.0      4530.418092         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/2048.[0m
[08/10 15:46:05]  --------------------------------------------------------------------------------
[08/10 15:46:05]  Iteration: 89 (0 solution, 88 counterexamples)
[08/10 15:46:13]  Generator returned sat in 5.176095 secs.
[08/10 15:46:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:46:15]  Improved gap from 0 to 100
[08/10 15:46:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 15:46:15]  Verifer returned sat in 2.307079 secs.
[08/10 15:46:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4760.873535    4260.896729 -3261.232422  4760.873535  499.999756  4260.896729   0.022949  499.953857      399.954102     4.0      4260.896729            -1             -1     -1
1    4760.896729    4360.987549 -3261.232422  4760.896729  499.977051  4360.987549   0.022949  399.886230      299.977295     5.0      4760.873779         False          False   True
2    4860.964844    4461.021484 -3261.232422  4860.964844  499.954346  4461.021484   0.045654  399.897705      300.022705     5.0      4860.919189         False           True  False
3    4940.885254    4566.305664 -3261.232422  4940.885254  479.818115  4566.305664   0.045654  374.533936      279.943115     5.0      4940.839600         False           True   True
4    4960.964844    4760.896484 -3261.232422  4960.964844  394.613525  4760.896484   0.045654  200.022705      200.022705     3.0      4940.839600         False           True  False
5    5160.203369    4860.896484 -3261.232422  5160.203369  399.261230  4860.896484   0.045654  299.261230      299.261230     4.0      4940.839600         False          False  False
6    5262.510254    4960.873779 -3261.232422  5262.510254  401.568115  4960.873779   1.591064  300.045410      300.022705     3.0      4940.839600         False          False  False
7    5362.532959    4960.896729 -3261.232422  5362.532959  400.068115  4960.896729   1.613770  400.022461      300.022705     4.0      4940.839600         False          False   True
8    5362.532959    5160.896484 -3261.232422  5362.532959  398.568115  5160.896484   1.613770  200.022705      200.022705     3.0      4940.839600         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=1228893/4096.[0m
[08/10 15:46:16]  --------------------------------------------------------------------------------
[08/10 15:46:16]  Iteration: 90 (0 solution, 89 counterexamples)
[08/10 15:46:57]  Generator returned sat in 37.680622 secs.
[08/10 15:46:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:46:58]  Improved gap from 47/8192 to 100
[08/10 15:46:59]  Improved number of small numbers from 76 to 80 out of a max of 114
[08/10 15:46:59]  Verifer returned sat in 1.708146 secs.
[08/10 15:46:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5236.885254    5136.910254 -3261.232422  5236.885254    0.025146  5136.910254     0.0000   99.975000          99.975     9.0      5136.910254            -1             -1     -1
1    5336.960254    5236.910254 -3261.232422  5336.960254  200.050000  5236.910254     0.0250  100.025000         100.025     1.0      5136.910254         False           True  False
2    5436.985254    5236.910254 -3261.232422  5436.985254  200.050000  5236.910254     0.0500  200.025000         100.025     1.0      5136.910254         False          False   True
3    5436.985254    5436.910254 -3261.232422  5436.985254  100.100000  5436.910254     0.0500    0.025000           0.025     2.0      5436.935254         False          False   True
4    5637.010254    5436.935254 -3261.232422  5637.010254  200.050000  5436.935254     0.0750  200.000000         100.025     3.0      5436.935254         False           True  False
5    5637.010254    5636.910254 -3261.232422  5637.010254    2.000000  5636.910254     0.0750    0.025000           0.025     2.0      5436.935254         False           True   True
6    5837.985254    5636.960449 -3261.232422  5837.985254  201.000000  5636.960449     1.0500  199.974805         100.025     1.0      5836.935254          True           True  False
7    5837.985254    5836.910254 -3261.232422  5837.985254    2.000000  5836.910254     1.0500    0.025000           0.025     2.0      5836.935254         False          False   True
8    6038.947754    5836.960449 -3261.232422  6038.947754  200.987500  5836.960449     2.0125  199.974805         100.025     1.0      5836.935254         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=4001/40.[0m
[08/10 15:46:59]  --------------------------------------------------------------------------------
[08/10 15:46:59]  Iteration: 91 (0 solution, 90 counterexamples)
[08/10 15:47:31]  Generator returned sat in 28.928640 secs.
[08/10 15:47:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:47:32]  Improved gap from 185447/4096 to 100
[08/10 15:47:33]  Improved number of small numbers from 49 to 56 out of a max of 114
[08/10 15:47:33]  Verifer returned sat in 1.953118 secs.
[08/10 15:47:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5137.972900    5137.966394 -3261.232422  5137.972900    0.025146  5137.966394    0.000000    0.006506        0.006506     8.0      5137.966394            -1             -1     -1
1    5213.326969    5196.295536 -3261.232422  5213.326969   75.360575  5196.295536    0.000000   17.031433      -24.639425     1.0      5137.966394         False           True  False
2    5271.649825    5271.643538 -3261.232422  5271.649825   75.354289  5271.643538    0.000000    0.006287      -66.316569     1.0      5271.649825         False          False  False
3    5337.972681    5337.966394 -3261.232422  5337.972681   66.329142  5337.966394    0.000000    0.006287      -99.993713     1.0      5337.972681         False          False  False
4    5537.960107    5491.732297 -3261.232422  5537.960107  199.993713  5491.732297    0.000000   46.227810       -0.006287     1.0      5337.972681         False          False  False
5    5939.941248    5537.966394 -3261.232422  5939.941248  448.208950  5537.966394    0.000000  401.974854      301.974854     1.0      5337.972681         False          False  False
6    6343.941248    5737.966394 -3261.232422  6343.941248  805.974854  5737.966394  303.993713  301.981140      301.981140     2.0      5337.972681         False          False  False
7    6443.947534    5837.966309 -3261.232422  6443.947534  401.987427  5837.966309  304.000000  301.981226      301.981140     3.0      5337.972681         False          False   True
8    6443.947534    5837.966553 -3261.232422  6443.947534  199.993713  5837.966553  304.000000  301.980981      201.981140     4.0      5337.972681         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=4947659/16384.[0m
[08/10 15:47:34]  --------------------------------------------------------------------------------
[08/10 15:47:34]  Iteration: 92 (0 solution, 91 counterexamples)
[08/10 15:48:09]  Generator returned sat in 31.427347 secs.
[08/10 15:48:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:11]  Improved gap from 0 to 23.4375
[08/10 15:48:11]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:48:11]  Verifer returned sat in 1.730071 secs.
[08/10 15:48:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5624.764648    5601.322266 -3337.792480  5624.764648    0.002441  5601.322266   0.002441   23.439941       23.439941     4.0      5601.322266            -1             -1     -1
1    5624.764648    5601.324707 -3261.232422  5624.764648    0.002686  5601.324707   0.002441   23.437500        0.000000     5.0      5601.322266         False          False   True
2    5648.204590    5624.764648 -3184.672363  5648.204590   46.877441  5624.764648   0.002441   23.437500        0.000000     1.0      5601.322266          True           True  False
3    6068.642090    5748.202148 -3184.672363  6068.642090  443.875000  5748.202148  97.002441  223.437500      223.437500     1.0      5601.322266         False          False  False
4    6068.642090    5848.202148 -3184.672363  6068.642090  223.437500  5848.202148  97.002441  123.437500      123.437500     2.0      5601.322266         False          False   True
5    6068.642090    5948.199707 -3184.672363  6068.642090    0.010000  5948.199707  97.002441   23.439941       23.437500     3.0      5601.322266         False          False   True
6    6068.642090    5948.202148 -3108.109863  6068.642090    0.010000  5948.202148  97.002441   23.437500        0.000000     4.0      5601.322266         False          False   True
7    6068.642090    5971.639648 -3031.547607  6068.642090    0.010000  5971.639648  97.002441    0.000000      -23.437744     5.0      5601.322266         False          False   True
8    6190.579590    5995.077393 -3031.547607  6190.579590  121.937500  5995.077393  97.002441   98.499756       -1.500244     1.0      6093.577148          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=3575/16.[0m
[08/10 15:48:11]  --------------------------------------------------------------------------------
[08/10 15:48:11]  Iteration: 93 (0 solution, 92 counterexamples)
[08/10 15:48:33]  Generator returned sat in 18.375179 secs.
[08/10 15:48:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:34]  Improved number of small numbers from 68 to 70 out of a max of 113
[08/10 15:48:34]  Verifer returned sat in 0.911965 secs.
[08/10 15:48:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5624.764404    5424.864648 -2961.324863   5624.764404     0.100098  5424.864648     0.000000   199.899756      199.899756     2.0      5424.864648            -1             -1    True
1    5624.764404    5524.864648 -2961.324863   5624.764404     0.100098  5524.864648     0.000000    99.899756       99.899756     2.0      5424.864648         False          False    True
2    5874.664648    5624.864648 -2961.324863   5874.664648   349.800000  5624.864648     0.000000   249.800000      249.800000     1.0      5424.864648         False          False    True
3    5874.664648    5724.864648 -2961.324863   5874.664648     0.100000  5724.864648     0.000000   149.800000      149.800000     2.0      5874.664648         False          False    True
4    5874.664648    5724.864648 -2961.324863   5874.664648   149.700000  5724.864648     0.000000   149.800000       49.800000     2.0      5874.664648         False          False    True
5    6123.764648    5874.764648 -2961.324863   6123.764648   398.900000  5874.764648     0.000000   249.000000      198.900000     1.0      5874.664648         False          False    True
6    6797.014648    5980.864648 -2961.324863   6797.014648   922.250000  5980.864648     0.000000   816.150000      772.150000     2.0      5874.664648         False          False    True
7    7952.864648    6124.864648 -2961.324863   7952.864648  1972.000000  6124.864648     0.000000  1828.000000     1828.000000     2.0      5874.664648         False          False    True
8   10268.364648    6224.864502 -2961.324863  10268.364648  4143.500000  6224.864502  2215.399902  1828.100244     1828.100098     3.0      5874.664648         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3743949/2048.[0m
[08/10 15:48:35]  --------------------------------------------------------------------------------
[08/10 15:48:35]  Iteration: 94 (0 solution, 93 counterexamples)
[08/10 15:48:57]  Generator returned sat in 19.111280 secs.
[08/10 15:48:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:48:57]  Improved gap from 1/800 to 100
[08/10 15:48:59]  Improved number of small numbers from 49 to 55 out of a max of 114
[08/10 15:48:59]  Verifer returned sat in 1.435825 secs.
[08/10 15:48:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    3979.683838    3979.682680 -1516.145395  3979.683838   100.003906  3979.682680    0.000000    0.001158       -0.001342     1.0       3979.68268            -1             -1    True
1    4079.685180    3979.685180 -1516.145395  4079.685180   100.002500  3979.685180    0.000000  100.000000        0.000000     1.0       4079.68518         False          False    True
2    4179.687680    4179.685180 -1516.145395  4179.687680   200.002500  4179.685180    0.000000    0.002500        0.002500     1.0       4079.68518         False          False    True
3    4179.687680    4179.685180 -1516.145395  4179.687680     0.001250  4179.685180    0.000000    0.002500      -99.997500     1.0       4179.68768         False          False    True
4    4377.689555    4284.685180 -1516.145395  4377.689555   198.004375  4284.685180    0.000000   93.004375       -1.995625     1.0       4179.68768         False          False    True
5    4884.691742    4379.685180 -1516.145395  4884.691742   600.006562  4379.685180    0.000000  505.006562      405.006562     1.0       4179.68768         False          False    True
6    5477.695023    4479.685303 -1516.145395  5477.695023  1098.009844  4479.685303  398.007344  600.002377      500.002500     2.0       4179.68768         False          False    True
7    5477.695023    4679.685180 -1516.145395  5477.695023     0.010000  4679.685180  398.007344  400.002500      400.002500     3.0       5079.68768          True           True    True
8    5477.695023    4679.686279 -1516.145395  5477.695023   198.500000  4679.686279  398.007344  400.001400      300.002500     4.0       5079.68768         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=200001/400.[0m
[08/10 15:48:59]  --------------------------------------------------------------------------------
[08/10 15:48:59]  Iteration: 95 (0 solution, 94 counterexamples)
[08/10 15:49:14]  Generator returned sat in 11.609361 secs.
[08/10 15:49:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:49:15]  Improved gap from 0 to 100
[08/10 15:49:16]  Improved number of small numbers from 60 to 64 out of a max of 114
[08/10 15:49:16]  Verifer returned sat in 1.894555 secs.
[08/10 15:49:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    3880.194092    3880.193180 -1416.653385  3880.194092    0.000732  3880.193180     0.0005    0.000412        0.000412     4.0       3880.19318            -1             -1     -1
1    3980.195180    3980.193180 -1416.653385  3980.195180  100.001500  3980.193180     0.0005    0.001500        0.001500     1.0       3880.19318         False           True   True
2    4080.194680    4080.193180 -1416.653385  4080.194680  100.001000  4080.193180     0.0005    0.001000        0.001000     1.0       4080.19418         False          False   True
3    4080.194680    4080.193180 -1416.653385  4080.194680    0.000500  4080.193180     0.0005    0.001000      -99.999000     1.0       4080.19418         False          False   True
4    4379.694680    4280.185680 -1416.653385  4379.694680  299.501000  4280.185680    99.5000    0.009000        0.001500     1.0       4080.19418         False          False   True
5    4379.695680    4280.195180 -1416.653385  4379.695680    0.010000  4280.195180    99.5000    0.000500      -99.997500     1.0       4080.19418         False          False   True
6    4679.218180    4480.193180 -1416.653385  4679.218180  299.523000  4480.193180   199.0235    0.001500        0.001500     1.0       4080.19418         False          False   True
7    4679.226680    4480.202680 -1416.653385  4679.226680    0.010000  4480.202680   199.0235    0.000500      -99.990000     1.0       4080.19418         False          False   True
8    4978.771680    4580.193359 -1416.653385  4978.771680  299.545500  4580.193359   298.5770  100.001320        0.001500     1.0       4080.19418         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/2000.[0m
[08/10 15:49:17]  --------------------------------------------------------------------------------
[08/10 15:49:17]  Iteration: 96 (0 solution, 95 counterexamples)
[08/10 15:50:53]  Generator returned sat in 93.190240 secs.
[08/10 15:50:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:50:54]  Improved number of small numbers from 58 to 113 out of a max of 113
[08/10 15:50:54]  Verifer returned sat in 0.498098 secs.
[08/10 15:50:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4145.394531    3845.594727 -1416.65332  4145.394531  299.899902  3845.594727        0.0  299.799805      199.799805     2.0      3845.594727            -1             -1   False
1    4145.494873    4045.594482 -1416.65332  4145.494873  299.900146  4045.594482        0.0   99.900391       99.900146     2.0      3845.594727         False          False   False
2    4379.694580    4145.594727 -1416.65332  4379.694580  334.100098  4145.594727        0.0  234.099854      234.099854     1.0      3845.594727         False          False   False
3    4379.694580    4245.494629 -1416.65332  4379.694580   60.666667  4245.494629        0.0  134.199951      134.099854     2.0      4379.694580         False          False   False
4    4379.694580    4245.594727 -1416.65332  4379.694580   90.000000  4245.594727        0.0  134.099854       34.099854     3.0      4379.694580         False          False   False
5    4379.694580    4345.594727 -1416.65332  4379.694580  134.000000  4345.594727        0.0   34.099854      -65.900146     4.0      4379.694580         False          False   False
6    4545.594727    4445.594727 -1416.65332  4545.594727  200.000000  4445.594727        0.0  100.000000        0.000000     1.0      4379.694580         False          False   False
7    4744.594727    4645.594482 -1416.65332  4744.594727  299.000000  4645.594482        0.0   99.000244       99.000000     1.0      4379.694580         False          False   False
8    5093.094482    4692.994873 -1416.65332  5093.094482  447.500000  4692.994873        0.0  400.099609      347.499756     2.0      4379.694580         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=711885/2048.[0m
[08/10 15:50:54]  --------------------------------------------------------------------------------
[08/10 15:50:54]  Iteration: 97 (0 solution, 96 counterexamples)
[08/10 15:51:50]  Generator returned sat in 51.890490 secs.
[08/10 15:51:50]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:51:51]  Improved number of small numbers from 77 to 87 out of a max of 113
[08/10 15:51:51]  Verifer returned sat in 0.862910 secs.
[08/10 15:51:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    4379.694336    3979.200195 -1316.656445  4379.694336   400.494141  3979.200195     0.000000  400.494141      400.493923     3.0      3979.200195            -1             -1    True
1    4379.694336    3979.200439 -1316.656445  4379.694336   400.494141  3979.200439     0.000000  400.493896      300.493923     3.0      3979.200195         False          False    True
2    4379.694336    4079.200413 -1316.656445  4379.694336     4.021729  4079.200413     0.000000  300.493923      200.493923     4.0      4379.694336         False          False    True
3    4379.694336    4279.200413 -1316.656445  4379.694336     4.021484  4279.200413     0.000000  100.493923      100.493923     5.0      4379.694336         False          False    True
4    4379.694336    4379.200195 -1316.656445  4379.694336     0.010742  4379.200195     0.000000    0.494141        0.493923     6.0      4379.694336         False          False    True
5    4379.694336    4379.693955 -1316.656445  4379.694336     0.010000  4379.693955     0.000000    0.000381      -99.506077     7.0      4379.694336         False          False    True
6    4979.201038    4479.200413 -1316.656445  4979.201038   599.507083  4479.200413     0.000000  500.000625      400.000625     1.0      4379.694336         False           True   False
7    6076.714580    4679.200413 -1316.656445  6076.714580  1597.514167  4679.200413   997.513542  400.000625      400.000625     2.0      4379.694336         False          False   False
8    6474.971038    4679.200439 -1316.656445  6474.971038   798.257083  4679.200439  1295.770000  500.000599      400.000625     3.0      4379.694336         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=640001/1600.[0m
[08/10 15:51:51]  --------------------------------------------------------------------------------
[08/10 15:51:51]  Iteration: 98 (0 solution, 97 counterexamples)
[08/10 15:52:31]  Generator returned sat in 36.107349 secs.
[08/10 15:52:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:52:31]  Improved gap from 0 to 100
[08/10 15:52:32]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 15:52:32]  Verifer returned sat in 0.639113 secs.
[08/10 15:52:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4315.560791    4151.727783 -1316.656494  4315.560791  164.133333  4151.727783   0.000000  163.833008       99.899902     8.0      4151.727783            -1             -1     -1
1    4315.760986    4215.661133 -1316.656494  4315.760986  164.033203  4215.661133   0.000000  100.099854        0.100098     3.0      4315.760986         False           True  False
2    4379.694336    4315.660889 -1316.656494  4379.694336  164.033203  4315.660889   0.000000   64.033447      -35.966553     2.0      4315.760986         False          False  False
3    4479.694092    4415.660889 -1316.656494  4479.694092  164.033203  4415.660889   0.000000   64.033203      -35.966797     1.0      4315.760986         False          False  False
4    4548.627441    4548.527832 -1316.656494  4548.627441  132.966553  4548.527832   0.000000    0.099609      -67.033447     1.0      4315.760986         False          False  False
5    4715.961182    4650.527588 -1316.656494  4715.961182  167.433350  4650.527588   0.100098   65.333496        0.200195     1.0      4315.760986         False          False  False
6    4816.061035    4752.527588 -1316.656494  4816.061035  165.433350  4752.527588   0.199951   63.333496        0.200195     1.0      4315.760986         False          False   True
7    4916.160889    4815.960938 -1316.656494  4916.160889  163.433350  4815.960938   0.299805   99.900146        0.200195     1.0      4315.760986         False          False   True
8    4977.694092    4915.660889 -1316.656494  4977.694092  161.433350  4915.660889   0.299805   61.733398      -38.266602     2.0      4315.760986         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/1024.[0m
[08/10 15:52:32]  --------------------------------------------------------------------------------
[08/10 15:52:32]  Iteration: 99 (0 solution, 98 counterexamples)
[08/10 15:52:52]  Generator returned sat in 16.124823 secs.
[08/10 15:52:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:52:53]  Improved gap from 1/5 to 100
[08/10 15:52:54]  Improved number of small numbers from 73 to 76 out of a max of 114
[08/10 15:52:54]  Verifer returned sat in 1.708198 secs.
[08/10 15:52:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    4521.602832    4321.603027 -1522.598438  4521.602832  199.899902  4321.603027     0.1000  199.899805          99.900     2.0      4321.603027            -1             -1     -1
1    4521.602832    4521.402832 -1522.598438  4521.602832  199.800049  4521.402832     0.1000    0.100000          -0.100     2.0      4521.502832         False          False   True
2    4726.202832    4521.602832 -1522.598438  4726.202832  204.700000  4521.602832   104.4000  100.200000           0.200     1.0      4521.502832         False          False   True
3    4830.602832    4721.602832 -1522.598438  4830.602832  204.600000  4721.602832   108.8000    0.200000           0.200     1.0      4721.802832         False          False   True
4    4930.702832    4821.502832 -1522.598438  4930.702832  100.300000  4821.502832   108.9000    0.300000           0.200     1.0      4721.802832         False          False   True
5    4978.552832    4821.602832 -1522.598438  4978.552832   48.150000  4821.602832   108.9000   48.050000         -51.950     2.0      4721.802832         False          False   True
6    5103.077832    4994.077832 -1522.598438  5103.077832  172.575000  4994.077832   108.9000    0.100000         -27.425     1.0      4721.802832         False          False   True
7    5324.002832    5121.602832 -1522.598438  5324.002832  221.025000  5121.602832   202.2000    0.200000           0.200     1.0      4721.802832         False          False   True
8    5432.315332    5121.902832 -1522.598438  5432.315332  108.512500  5121.902832   210.5125   99.900000           0.200     1.0      4721.802832         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 15:52:55]  --------------------------------------------------------------------------------
[08/10 15:52:55]  Iteration: 100 (0 solution, 99 counterexamples)
[08/10 15:54:12]  Generator returned sat in 73.635744 secs.
[08/10 15:54:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:54:12]  Improved number of small numbers from 76 to 113 out of a max of 113
[08/10 15:54:12]  Verifer returned sat in 0.413033 secs.
[08/10 15:54:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     788.115479      88.115479  2710.88916   788.115479   199.899902    88.115479     0.000000  700.000000      600.000244     2.0        88.115479            -1             -1   False
1     788.115479     188.115234  2710.88916   788.115479   199.799805   188.115234     0.000000  600.000244      500.000244     2.0       788.115479         False          False   False
2    1392.215332     388.115234  2710.88916  1392.215332  1204.100098   388.115234   504.000000  500.100098      500.100098     3.0       788.115479         False          False   False
3    2096.115234     388.115479  2710.88916  2096.115234  1204.000000   388.115479  1107.899902  600.099854      500.100098     4.0       988.215332         False          False    True
4    2096.115234     488.115479  2710.88916  2096.115234   600.000000   488.115479  1107.899902  500.099854      400.100098     5.0       988.215332         False          False    True
5    2096.115234     688.115234  2710.88916  2096.115234   298.500000   688.115234  1107.899902  300.100098      300.100098     6.0       988.215332         False          False    True
6    2096.115234     788.015381  2710.88916  2096.115234   147.750000   788.015381  1107.899902  200.199951      200.100098     7.0       988.215332         False          False    True
7    2096.115234     788.115479  2710.88916  2096.115234    72.375000   788.115479  1107.899902  200.099854      100.100098     8.0       988.215332         False          False    True
8    2641.265381     988.115234  2710.88916  2641.265381   745.250000   988.115234  1153.050049  500.100098      500.100098     6.0       988.215332         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1024205/2048.[0m
[08/10 15:54:13]  --------------------------------------------------------------------------------
[08/10 15:54:13]  Iteration: 101 (0 solution, 100 counterexamples)
[08/10 15:54:55]  Generator returned sat in 39.180742 secs.
[08/10 15:54:56]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:54:56]  Improved gap from 1987/20 to 100
[08/10 15:54:56]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 15:54:56]  Verifer returned sat in 0.449296 secs.
[08/10 15:54:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     188.065186      88.465088  2810.539307   188.065186  100.099854    88.465088   0.000000   99.600098       99.600098     3.0        88.465088            -1             -1   False
1     188.515137     188.114990  2810.539307   188.515137  100.050049   188.114990   0.000000    0.400146        0.050049     1.0       188.515137         False          False   False
2     188.515137     188.465088  2810.539307   188.515137    0.350098   188.465088   0.000000    0.050049      -99.949951     2.0       188.515137         False          False   False
3     588.364990     338.640137  2810.539307   588.364990  399.899902   338.640137   0.000000  249.724854      199.899902     1.0       188.515137         False          False   False
4     588.364990     388.465088  2810.539307   588.364990  249.675049   388.465088   0.000000  199.899902       99.899902     2.0       188.515137         False          False   False
5     588.364990     588.315186  2810.539307   588.364990  199.850098   588.315186   0.000000    0.049805       -0.100098     3.0       188.515137         False          False   False
6     987.665283     591.115234  2810.539307   987.665283  399.350098   591.115234  99.250000  297.300049      199.950195     1.0       188.515137         False          False   False
7    1087.715332     693.115234  2810.539307  1087.715332  397.350098   693.115234  99.300049  295.300049      199.950195     2.0       188.515137         False          False    True
8    1187.765381     888.465088  2810.539307  1187.765381  395.350098   888.465088  99.350098  199.950195      199.950195     2.0       188.515137         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=204749/1024.[0m
[08/10 15:54:57]  --------------------------------------------------------------------------------
[08/10 15:54:57]  Iteration: 102 (0 solution, 101 counterexamples)
[08/10 15:55:13]  Generator returned sat in 13.535673 secs.
[08/10 15:55:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:55:14]  Improved gap from 3/40 to 100
[08/10 15:55:14]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 15:55:14]  Verifer returned sat in 0.492083 secs.
[08/10 15:55:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     126.348633      25.948486  2810.539307   126.348633  197.200195    25.948486   0.000000  100.400146        3.250244     9.0        25.948486            -1             -1     -1
1     223.098389     126.398682  2810.539307   223.098389  197.149902   126.398682   0.000000   96.699707        0.000000     1.0       223.098389         False           True  False
2     422.948486     223.098633  2810.539307   422.948486  296.549805   223.098633   0.000000  199.849854       99.850098     1.0       223.098389         False          False  False
3     423.048584     422.998535  2810.539307   423.048584  199.949951   422.998535   0.000000    0.050049       -0.049805     1.0       423.048584         False          False  False
4     722.998535     423.098389  2810.539307   722.998535  300.000000   423.098389   0.000000  299.900146      199.900146     1.0       423.048584         False          False  False
5     722.998535     588.815186  2810.539307   722.998535  299.849854   588.815186   0.000000  134.183350       99.900146     2.0       423.048584         False          False  False
6     923.098389     723.048584  2810.539307   923.098389  334.283203   723.048584   0.050049  199.999756      199.949951     1.0       423.048584         False          False  False
7    1055.381836     823.098389  2810.539307  1055.381836  332.283203   823.098389  32.333496  199.949951      199.949951     2.0       423.048584         False          False   True
8    1185.715088     923.098389  2810.539307  1185.715088  330.283203   923.098389  62.666748  199.949951      199.949951     2.0       423.048584         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=818995/4096.[0m
[08/10 15:55:15]  --------------------------------------------------------------------------------
[08/10 15:55:15]  Iteration: 103 (0 solution, 102 counterexamples)
[08/10 15:57:09]  Generator returned sat in 110.516926 secs.
[08/10 15:57:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:09]  Improved gap from 1/800 to 100
[08/10 15:57:10]  Improved number of small numbers from 61 to 71 out of a max of 114
[08/10 15:57:10]  Verifer returned sat in 1.326272 secs.
[08/10 15:57:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     455.581787     455.481689  2610.499355   455.581787     0.099854   455.481689        0.0    0.100098        0.099951     1.0       455.481689            -1             -1    True
1     606.081787     555.481836  2610.499355   606.081787   150.600098   555.481836        0.0   50.599951       50.599951     1.0       455.481689         False          False    True
2     606.281836     606.181836  2610.499355   606.281836    50.800000   606.181836        0.0    0.100000      -49.200000     1.0       606.281836         False          False    True
3     656.981836     655.481836  2610.499355   656.981836    50.800000   655.481836        0.0    1.500000      -98.500000     1.0       606.281836         False          False    True
4     755.581836     755.481836  2610.499355   755.581836   100.100000   755.481836        0.0    0.100000      -99.900000     1.0       606.281836         False          False    True
5     954.181836     855.481836  2610.499355   954.181836   198.700000   855.481836        0.0   98.700000       -1.300000     1.0       606.281836         False          False    True
6    1251.381836    1055.481836  2610.499355  1251.381836   395.900000  1055.481836        0.0  195.900000      195.900000     1.0       606.281836         False          False    True
7    1845.781836    1055.481836  2610.499355  1845.781836   790.300000  1055.481836        0.0  790.300000      690.300000     1.0       606.281836         False          False    True
8    2634.581836    1255.481689  2610.499355  2634.581836  1579.100000  1255.481689      688.8  690.300146      690.300000     2.0       606.281836         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6903/10.[0m
[08/10 15:57:11]  --------------------------------------------------------------------------------
[08/10 15:57:11]  Iteration: 104 (0 solution, 103 counterexamples)
[08/10 15:57:30]  Generator returned sat in 15.385796 secs.
[08/10 15:57:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:30]  Improved gap from 489/10 to 100
[08/10 15:57:31]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 15:57:31]  Verifer returned sat in 0.489861 secs.
[08/10 15:57:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     555.681396     453.281494  2610.499268   555.681396    0.100000   453.281494   0.000000  102.399902      100.199951     5.0       453.281494            -1             -1    True
1     555.781494     548.781494  2610.499268   555.781494  102.500000   548.781494   0.100098    6.899902        0.199951     5.0       453.281494         False          False    True
2     555.781494     555.681396  2610.499268   555.781494    0.099854   555.681396   0.100098    0.000000      -99.800049     6.0       555.681396         False          False    True
3     655.681396     655.481445  2610.499268   655.681396   99.899902   655.481445   0.100098    0.099854      -99.900146     1.0       555.681396         False           True   False
4     855.781494     755.481445  2610.499268   855.781494  200.199951   755.481445   0.100098  100.199951        0.199951     1.0       555.681396         False          False   False
5     960.281494     855.781494  2610.499268   960.281494  204.699951   855.781494   4.600098   99.899902        0.199951     1.0       555.681396         False          False   False
6    1063.581543     955.781494  2610.499268  1063.581543  203.199951   955.781494   7.900146   99.899902        0.199951     1.0       555.681396         False          False    True
7    1165.381592    1055.681396  2610.499268  1165.381592  201.699951  1055.681396   9.700195  100.000000        0.199951     2.0       555.681396         False          False    True
8    1265.581543    1155.781494  2610.499268  1265.581543  200.199951  1155.781494   9.900146   99.899902        0.199951     1.0       555.681396         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=819/4096.[0m
[08/10 15:57:31]  --------------------------------------------------------------------------------
[08/10 15:57:31]  Iteration: 105 (0 solution, 104 counterexamples)
[08/10 15:57:39]  Generator returned sat in 3.855262 secs.
[08/10 15:57:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:57:39]  Improved number of small numbers from 109 to 113 out of a max of 113
[08/10 15:57:39]  Verifer returned sat in 0.217192 secs.
[08/10 15:57:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     555.681152     453.281250  2612.699219   555.681152    0.099854   453.281250   0.000000  102.399902      102.399902     5.0       453.281250            -1             -1    True
1     555.781250     545.081299  2612.699219   555.781250  102.500000   545.081299   0.100098   10.599854        2.399902     5.0       453.281250         False          False    True
2     555.781250     555.681152  2612.699219   555.781250    0.099854   555.681152   0.100098    0.000000      -97.600098     6.0       555.681152         False          False    True
3     655.606445     655.481201  2612.699219   655.606445   99.825195   655.481201   0.100098    0.025146      -97.774902     1.0       555.681152         False           True   False
4     855.781250     753.281250  2612.699219   855.781250  200.199951   753.281250   0.100098  102.399902        2.399902     1.0       555.681152         False          False   False
5     959.581299     855.781250  2612.699219   959.581299  206.199951   855.781250   3.900146   99.899902        2.399902     1.0       555.681152         False          False   False
6    1063.881348     955.781250  2612.699219  1063.881348  204.199951   955.781250   8.200195   99.899902        2.399902     1.0       555.681152         False          False    True
7    1166.181396    1055.681152  2612.699219  1166.181396  202.199951  1055.681152  10.500244  100.000000        2.399902     2.0       555.681152         False          False    True
8    1266.381348    1155.781250  2612.699219  1266.381348  200.199951  1155.781250  10.700195   99.899902        2.399902     1.0       555.681152         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=4915/2048.[0m
[08/10 15:57:40]  --------------------------------------------------------------------------------
[08/10 15:57:40]  Iteration: 106 (0 solution, 105 counterexamples)
[08/10 15:58:00]  Generator returned sat in 16.784128 secs.
[08/10 15:58:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:58:00]  Improved gap from 1/600 to 0
[08/10 15:58:01]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 15:58:01]  Verifer returned sat in 0.520359 secs.
[08/10 15:58:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     763.377686     663.376465  2313.200684   763.377686    0.001221   663.376465   0.000000  100.001221      100.000244     9.0       663.376465            -1             -1     -1
1     763.377686     663.377441  2313.200684   763.377686   99.998750   663.377441   0.000000  100.000244        0.000244     2.0       663.376465         False           True  False
2     763.377686     763.377441  2413.200439   763.377686   99.998779   763.377441   0.000000    0.000244        0.000000     3.0       663.376465         False          False  False
3    1063.881348     863.377686  2413.200439  1063.881348  300.503906   863.377686   0.002441  200.501221      200.501221     1.0       663.376465         False          False  False
4    1063.881348     963.377686  2413.200439  1063.881348  151.751953   963.377686   0.002441  100.501221      100.501221     2.0       663.376465         False          False   True
5    1063.881348    1063.376465  2413.200439  1063.881348    0.010000  1063.376465   0.002441    0.502441        0.501221     3.0       663.376465         False          False   True
6    1063.881348    1063.377686  2512.699219  1063.881348    0.010000  1063.377686   0.002441    0.501221        0.000000     4.0       663.376465         False          False   True
7    1063.881348    1063.878906  2612.698975  1063.881348    0.500000  1063.878906   0.002441    0.000000       -0.000244     5.0      1063.878906          True           True  False
8    1064.381348    1063.880127  2612.698975  1064.381348    0.500000  1063.880127   0.002441    0.498779      -99.500244     1.0      1063.878906         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=821253/4096.[0m
[08/10 15:58:01]  --------------------------------------------------------------------------------
[08/10 15:58:01]  Iteration: 107 (0 solution, 106 counterexamples)
[08/10 15:58:21]  Generator returned sat in 15.891214 secs.
[08/10 15:58:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:58:21]  Improved gap from 1/800 to 100
[08/10 15:58:22]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 15:58:22]  Verifer returned sat in 0.327078 secs.
[08/10 15:58:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     564.628906     464.528906  2512.049219   564.628906      0.20   464.528906       0.00   100.10           100.1     2.0       464.528906            -1             -1   False
1     564.628906     559.278906  2512.049219   564.628906      0.10   559.278906       0.00     5.35             0.1     2.0       564.628906         False          False   False
2     564.628906     564.528906  2512.049219   564.628906      0.10   564.528906       0.00     0.10           -99.9     3.0       564.628906         False          False   False
3     764.728906     665.278906  2512.049219   764.728906    200.20   665.278906       0.00    99.45             0.2     1.0       564.628906         False          False   False
4     864.528906     764.528906  2512.049219   864.528906    199.25   764.528906       0.00   100.00             0.0     2.0       564.628906         False          False   False
5     968.278906     864.628906  2512.049219   968.278906    203.75   864.628906       3.55   100.10             0.2     1.0       564.628906         False          False   False
6    1070.428906     964.828906  2512.049219  1070.428906    202.25   964.828906       5.70    99.90             0.2     1.0       564.628906         False          False    True
7    1171.278906    1065.278906  2512.049219  1171.278906    200.75  1065.278906       6.55    99.45             0.2     1.0       564.628906         False          False    True
8    1271.078906    1164.528906  2512.049219  1271.078906    199.25  1164.528906       6.55   100.00             0.0     2.0       564.628906         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 15:58:22]  --------------------------------------------------------------------------------
[08/10 15:58:22]  Iteration: 108 (0 solution, 107 counterexamples)
[08/10 15:59:35]  Generator returned sat in 68.738827 secs.
[08/10 15:59:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 15:59:35]  Improved gap from 2016259/20480 to 100
[08/10 15:59:35]  Improved number of small numbers from 95 to 114 out of a max of 114
[08/10 15:59:35]  Verifer returned sat in 0.362157 secs.
[08/10 15:59:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     564.628662     463.678467  2512.049072   564.628662    0.200195   463.678467   0.000000  100.950195      100.950195     9.0       463.678467            -1             -1     -1
1     564.628662     557.678711  2512.049072   564.628662    0.100098   557.678711   0.000000    6.949951        0.950195     4.0       564.628662         False           True  False
2     564.628662     563.678711  2512.049072   564.628662    0.100098   563.678711   0.000000    0.949951      -99.049805     5.0       564.628662         False           True  False
3     764.653564     663.678467  2512.049072   764.653564  200.974854   663.678467   0.000000  100.975098        0.975098     1.0       564.628662         False           True  False
4     862.678467     763.678711  2512.049072   862.678467  199.000000   763.678711   0.000000   98.999756       -1.000000     2.0       564.628662         False          False  False
5     968.678711     864.628418  2512.049072   968.678711  205.000000   864.628418   4.025146  100.025146        0.975098     1.0       564.628662         False          False  False
6    1071.653564     964.828613  2512.049072  1071.653564  203.000000   964.828613   7.000000   99.824951        0.975098     1.0       564.628662         False          False   True
7    1172.828613    1064.678711  2512.049072  1172.828613  201.000000  1064.678711   8.175049   99.974854        0.975098     1.0       564.628662         False          False   True
8    1271.853760    1163.753662  2512.049072  1271.853760  199.000000  1163.753662   8.175049   99.925049        0.000244     2.0       564.628662         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1997/2048.[0m
[08/10 15:59:36]  --------------------------------------------------------------------------------
[08/10 15:59:36]  Iteration: 109 (0 solution, 108 counterexamples)
[08/10 16:00:07]  Generator returned sat in 27.949849 secs.
[08/10 16:00:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:00:10]  Improved gap from 1/2400 to 25.0
[08/10 16:00:10]  Improved number of small numbers from 89 to 114 out of a max of 114
[08/10 16:00:10]  Verifer returned sat in 2.480910 secs.
[08/10 16:00:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     663.678467     463.678467  2512.048828   663.678467    0.002441   463.678467   0.000000  200.000000      199.999756     2.0       463.678467            -1             -1   False
1     663.678467     563.678467  2512.048828   663.678467  199.997314   563.678467   0.000000  100.000000       99.999756     2.0       463.678467         False          False   False
2     663.678467     638.678467  2512.049072   663.678467   99.997500   638.678467   0.000000   25.000000        0.000000     3.0       663.678467         False          False   False
3     888.680908     762.174561  2512.049072   888.680908  250.002441   762.174561   0.002441  126.503906      125.000000     1.0       663.678467         False          False   False
4     888.680908     863.675781  2512.049072   888.680908  126.501221   863.675781   0.002441   25.002686       25.000000     2.0       663.678467         False          False    True
5     888.680908     863.678467  2587.049072   888.680908    0.010000   863.678467   0.002441   25.000000        0.000000     3.0       663.678467         False          False    True
6     888.680908     888.678467  2636.299805   888.680908    0.010000   888.678467   0.002441    0.000000      -50.749268     4.0       663.678467         False          False    True
7    1013.184814     939.427734  2662.545166  1013.184814  124.503906   939.427734   0.002441   73.754639        0.000000     1.0      1013.182373          True           True   False
8    1013.184814    1013.182373  2737.545166  1013.184814   73.751953  1013.182373   0.002441    0.000000      -25.000000     2.0      1013.182373         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=125.[0m
[08/10 16:00:11]  --------------------------------------------------------------------------------
[08/10 16:00:11]  Iteration: 110 (0 solution, 109 counterexamples)
[08/10 16:01:23]  Generator returned sat in 68.531502 secs.
[08/10 16:01:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:01:24]  Improved gap from 1/800 to 96.875
[08/10 16:01:25]  Improved number of small numbers from 65 to 76 out of a max of 114
[08/10 16:01:25]  Verifer returned sat in 1.818289 secs.
[08/10 16:01:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     541.805908     541.800967  2655.222900   541.805908    0.002686   541.800967     0.0025    0.002441       -0.002324     4.0       541.800967            -1             -1     -1
1     541.810791     541.805908  2658.347666   541.810791    0.007324   541.805908     0.0025    0.002383      -96.872676     1.0       541.800967         False           True   True
2     737.118408     737.113467  2658.347666   737.118408  195.310000   737.113467     0.0025    0.002441       -1.565059     1.0       541.800967         False          False   True
3     738.685967     738.680967  2659.420166   738.685967    1.570000   738.680967     0.0025    0.002500      -98.925000     1.0       738.683467         False          False   True
4     938.203467     937.608467  2659.420166   938.203467  199.520000   937.608467     0.5825    0.012500        0.012500     1.0       738.683467         False          False   True
5     938.203467     937.608467  2659.420166   938.203467    0.010000   937.608467     0.5825    0.012500      -99.987500     1.0       738.683467         False          False   True
6    1138.205967    1137.608467  2659.420166  1138.205967  200.015000  1137.608467     0.5850    0.012500        0.012500     1.0       738.683467         False          False   True
7    1138.205967    1137.608467  2662.545166  1138.205967    0.010000  1137.608467     0.5850    0.012500      -96.862500     1.0       738.683467         False          False   True
8    1337.713467    1234.483643  2662.545166  1337.713467  199.520000  1234.483643     3.2175  100.012324        0.012500     1.0       738.683467         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/80.[0m
[08/10 16:01:26]  --------------------------------------------------------------------------------
[08/10 16:01:26]  Iteration: 111 (0 solution, 110 counterexamples)
[08/10 16:01:36]  Generator returned sat in 6.465313 secs.
[08/10 16:01:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:01:37]  Improved gap from 775/8 to 98.4375
[08/10 16:01:39]  Improved number of small numbers from 35 to 45 out of a max of 114
[08/10 16:01:39]  Verifer returned sat in 2.724854 secs.
[08/10 16:01:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     784.193604     784.183671  2657.408691   784.193604    0.004883   784.183671   0.004868    0.005064        0.004839     6.0       784.183671            -1             -1     -1
1     882.635777     784.193408  2658.961670   882.635777   98.447237   784.193408   0.004868   98.437500       -0.000009     1.0       784.183671         False           True   True
2     981.677421     981.667685  2658.961670   981.677421  197.479145   981.667685   0.004868    0.004868       -0.958365     1.0       784.183671         False          False   True
3     982.686895     982.677158  2659.420166   982.686895    1.014342   982.677158   0.004868    0.004868      -99.490395     1.0       982.682027         False          False   True
4    1182.197027    1182.172421  2659.420166  1182.197027  199.515000  1182.172421   0.009737    0.014868        0.014868     1.0       982.682027         False          False   True
5    1182.197027    1182.172421  2659.420166  1182.197027    0.010000  1182.172421   0.009737    0.014868      -99.985132     1.0       982.682027         False          False   True
6    1382.201895    1382.172421  2659.420166  1382.201895  200.019737  1382.172421   0.014605    0.014868        0.014868     1.0       982.682027         False          False   True
7    1382.201895    1382.172421  2660.982666  1382.201895    0.010000  1382.172421   0.014605    0.014868      -98.422632     1.0       982.682027         False          False   True
8    1581.702027    1480.610107  2660.982666  1581.702027  199.515000  1480.610107   1.077237  100.014682        0.014868     1.0       982.682027         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=113/7600.[0m
[08/10 16:01:40]  --------------------------------------------------------------------------------
[08/10 16:01:40]  Iteration: 112 (0 solution, 111 counterexamples)
[08/10 16:01:59]  Generator returned sat in 16.001735 secs.
[08/10 16:02:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:02:01]  Improved gap from 0 to 23.4375
[08/10 16:02:01]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:02:01]  Verifer returned sat in 1.350695 secs.
[08/10 16:02:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     980.072266     780.072510  2561.520264   980.072266    0.099854   780.072510     0.100098  199.899658       99.899658     7.0       780.072510            -1             -1     -1
1     980.472412     980.072510  2561.520264   980.472412  200.299805   980.072510     0.199951    0.199951        0.199951     1.0       780.072510         False           True   True
2     980.472412     980.072510  2638.082764   980.472412    0.100098   980.072510     0.199951    0.199951      -23.237549     1.0       980.272461         False          False   True
3    1741.272461    1103.510010  2638.082764  1741.272461  761.000000  1103.510010   637.562500    0.199951        0.199951     1.0       980.272461         False          False   True
4    2123.072510    1203.509766  2638.082764  2123.072510  382.000000  1203.509766   919.362549    0.200195        0.199951     1.0       980.272461         False          False   True
5    2315.372314    1229.397217  2638.082764  2315.372314  192.500000  1229.397217  1011.662354   74.312744        0.199951     1.0       980.272461         False          False   True
6    2338.809570    1303.809814  2714.345459  2338.809570   97.750000  1303.809814  1011.662354   23.337402       -0.100098     1.0       980.272461         False          False   True
7    2362.347168    1327.247314  2790.907959  2362.347168   46.875000  1327.247314  1011.662354   23.437500        0.000000     1.0       980.272461         False          False   True
8    2362.347168    1350.684814  2867.470215  2362.347168   21.437500  1350.684814  1011.662354    0.000000      -23.437744     2.0       980.272461         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=819/4096.[0m
[08/10 16:02:02]  --------------------------------------------------------------------------------
[08/10 16:02:02]  Iteration: 113 (0 solution, 112 counterexamples)
[08/10 16:02:14]  Generator returned sat in 8.171113 secs.
[08/10 16:02:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:02:15]  Improved gap from 0 to 46.875
[08/10 16:02:15]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 16:02:15]  Verifer returned sat in 1.118612 secs.
[08/10 16:02:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1062.484863     862.485107  2561.520264  1062.484863  200.200195   862.485107   0.100098  199.899658       99.899902     9.0       862.485107            -1             -1     -1
1    1062.685059    1062.484863  2561.520264  1062.685059  200.099854  1062.484863   0.100098    0.100098        0.100098     1.0      1062.584961         False           True   True
2    1142.884766    1142.684814  2561.520264  1142.884766   80.299805  1142.684814   0.100098    0.099854      -19.700195     1.0      1142.784668         False          False   True
3    1253.885010    1253.684814  2561.520264  1253.885010  111.100098  1253.684814   0.100098    0.100098       -8.699951     1.0      1142.784668         False          False   True
4    1362.885010    1353.509766  2561.520264  1362.885010  109.100098  1353.509766   0.200195    9.175049        0.199951     1.0      1142.784668         False          False   True
5    1409.760010    1362.784912  2614.345215  1409.760010   56.050049  1362.784912   0.200195   46.774902       -0.100098     1.0      1142.784668         False          False   True
6    1417.035156    1409.659912  2667.470215  1417.035156   54.050049  1409.659912   0.200195    7.175049      -39.699951     1.0      1142.784668         False          False   True
7    1461.910156    1456.534912  2720.595215  1461.910156   52.050049  1456.534912   0.200195    5.175049      -41.699951     1.0      1142.784668         False          False   True
8    1506.785156    1503.409912  2720.595459  1506.785156   50.050049  1503.409912   0.200195    3.175049      -96.824707     1.0      1142.784668         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 16:02:16]  --------------------------------------------------------------------------------
[08/10 16:02:16]  Iteration: 114 (0 solution, 113 counterexamples)
[08/10 16:03:07]  Generator returned sat in 47.680204 secs.
[08/10 16:03:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:03:08]  Improved gap from 1/1200 to 0
[08/10 16:03:09]  Improved number of small numbers from 63 to 85 out of a max of 114
[08/10 16:03:09]  Verifer returned sat in 1.288906 secs.
[08/10 16:03:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1051.385010     951.388916  2561.520020  1051.385010  100.000000   951.388916    0.00000   99.996094       99.996006     5.0       951.388916            -1             -1     -1
1    1051.387695    1051.386230  2561.520264  1051.387695   99.998779  1051.386230    0.00000    0.001465       -0.001064     1.0      1051.387695         False           True  False
2    1051.389893    1051.388760  2661.519014  1051.389893    0.003662  1051.388760    0.00000    0.001133       -0.000117     1.0      1051.389893         False          False  False
3    1251.392510    1151.389893  2661.519014  1251.392510  200.003750  1151.389893    0.00125  100.001367      100.001250     1.0      1051.389893         False          False  False
4    1251.392510    1250.389893  2661.519014  1251.392510    2.000000  1250.389893    0.00125    1.001367        0.001250     2.0      1051.389893         False          False   True
5    1251.392510    1251.390010  2761.517764  1251.392510    1.000000  1251.390010    0.00125    0.001250        0.000000     3.0      1051.389893         False          False   True
6    1252.391260    1251.391260  2860.519014  1252.391260    1.000000  1251.391260    0.00125    0.998750        0.000000     4.0      1051.389893         False          False   True
7    1252.391260    1252.390010  2960.517764  1252.391260    0.010000  1252.390010    0.00125    0.000000       -0.001250     2.0      1252.390010          True           True  False
8    1252.401260    1252.391357  3060.508789  1252.401260    0.010000  1252.391357    0.00125    0.008652       -0.000225     1.0      1252.390010         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=80001/800.[0m
[08/10 16:03:09]  --------------------------------------------------------------------------------
[08/10 16:03:09]  Iteration: 115 (0 solution, 114 counterexamples)
[08/10 16:03:30]  Generator returned sat in 17.325165 secs.
[08/10 16:03:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:03:38]  Improved gap from 1/800 to 0
[08/10 16:03:38]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:03:38]  Verifer returned sat in 7.788955 secs.
[08/10 16:03:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1178.782715    1107.677734  2405.229248  1178.782715    0.002441  1107.677734   0.000000  71.104980       71.102783     6.0      1107.677734            -1             -1   False
1    1178.782715    1107.679932  2434.124023  1178.782715    0.002686  1107.679932   0.000000  71.102783       -0.002441     5.0      1107.677734         False          False   False
2    1178.787354    1178.785156  2534.121338  1178.787354   71.107422  1178.785156   0.000000   0.002197       -0.000488     1.0      1107.677734         False          False   False
3    1249.892578    1246.120117  2563.016602  1249.892578   71.107422  1246.120117   0.000000   3.772461        0.000000     1.0      1107.677734         False          False   False
4    1351.395020    1301.400146  2563.016602  1351.395020  105.274902  1301.400146   0.000000  49.994873        1.502441     1.0      1107.677734         False          False   False
5    1451.397705    1449.889893  2563.016602  1451.397705  149.997559  1449.889893   0.002686   1.505127        1.502441     1.0      1107.677734         False          False   False
6    1451.397705    1449.892578  2661.514160  1451.397705    0.010000  1449.892578   0.002686   1.502441        0.000000     2.0      1107.677734         False          False    True
7    1451.397705    1451.395020  2761.511475  1451.397705    1.500000  1451.395020   0.002686   0.000000       -0.002686     3.0      1107.677734         False          False    True
8    1452.897705    1451.397705  2761.511719  1452.897705    1.500000  1451.397705   0.002686   1.497314      -98.502441     1.0      1107.677734         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=3077/2048.[0m
[08/10 16:03:39]  --------------------------------------------------------------------------------
[08/10 16:03:39]  Iteration: 116 (0 solution, 115 counterexamples)
[08/10 16:04:11]  Generator returned sat in 28.605184 secs.
[08/10 16:04:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:04:12]  Improved gap from 1/20 to 48.4375
[08/10 16:04:13]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:04:13]  Verifer returned sat in 0.899760 secs.
[08/10 16:04:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1083.570068     983.570068  2529.339111  1083.570068    0.049805   983.570068        0.0  100.000000      100.000000     4.0       983.570068            -1             -1   False
1    1083.570068    1035.132812  2529.339111  1083.570068   99.999756  1035.132812        0.0   48.437256        0.000000     3.0       983.570068         False          False   False
2    1430.420166    1083.570312  2529.339111  1430.420166  395.287354  1083.570312        0.0  346.849854      246.850098     1.0       983.570068         False          False   False
3    1430.420166    1283.570068  2529.339111  1430.420166   53.437500  1283.570068        0.0  146.850098      146.850098     2.0      1430.420166         False          False   False
4    1430.420166    1378.932861  2529.339111  1430.420166   52.437500  1378.932861        0.0   51.487305       46.850098     3.0      1430.420166         False          False   False
5    1430.420166    1383.570312  2580.901367  1430.420166   51.437500  1383.570312        0.0   46.849854       -1.587646     4.0      1430.420166         False          False   False
6    1434.007812    1432.007812  2632.463867  1434.007812   50.437500  1432.007812        0.0    2.000000      -46.437500     1.0      1430.420166         False          False   False
7    1481.445312    1480.445312  2684.026367  1481.445312   49.437500  1480.445312        0.0    1.000000      -47.437500     1.0      1430.420166         False          False   False
8    1528.882812    1528.882812  2684.026367  1528.882812   48.437500  1528.882812        0.0    0.000000     -100.000000     1.0      1430.420166         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=505651/2048.[0m
[08/10 16:04:13]  --------------------------------------------------------------------------------
[08/10 16:04:13]  Iteration: 117 (0 solution, 116 counterexamples)
[08/10 16:06:15]  Generator returned sat in 117.558885 secs.
[08/10 16:06:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:06:16]  Improved gap from 1/16384 to 1.5625
[08/10 16:06:16]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/10 16:06:16]  Verifer returned sat in 0.881739 secs.
[08/10 16:06:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1681.807812    1581.807617  2429.519043  1681.807812  100.000000  1581.807617        0.0  100.000195      100.000195     2.0      1581.807617            -1             -1   False
1    1681.807812    1581.807812  2429.519043  1681.807812   99.949951  1581.807812        0.0  100.000000        0.000195     2.0      1681.807812         False          False   False
2    1681.857812    1681.857812  2527.906250  1681.857812  100.050000  1681.857812        0.0    0.000000       -1.562598     1.0      1681.807812         False          False   False
3    1983.470313    1683.420410  2527.906250  1983.470313  301.612500  1683.420410        0.0  300.049902      200.049902     1.0      1681.807812         False          False   False
4    1983.470313    1836.982910  2527.906250  1983.470313    2.000000  1836.982910        0.0  146.487402      100.049902     2.0      1681.807812         False          False   False
5    1983.470313    1883.420410  2527.906250  1983.470313    2.000000  1883.420410        0.0  100.049902        0.049902     3.0      1681.807812         False          False   False
6    1983.470313    1983.420410  2626.343750  1983.470313    2.000000  1983.420410        0.0    0.049902       -1.512598     4.0      1681.807812         False          False   False
7    1985.420410    1985.370117  2724.394043  1985.420410    2.000000  1985.370117        0.0    0.050293       -1.512207     1.0      1985.420410          True           True   False
8    1987.370117    1986.932812  2822.831299  1987.370117    2.000000  1986.932812        0.0    0.437305       -1.125244     1.0      1985.420410         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2001/10.[0m
[08/10 16:06:17]  --------------------------------------------------------------------------------
[08/10 16:06:17]  Iteration: 118 (0 solution, 117 counterexamples)
[08/10 16:07:29]  Generator returned sat in 68.906422 secs.
[08/10 16:07:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:07:31]  Improved gap from 0 to 48.4375
[08/10 16:07:32]  Improved number of small numbers from 75 to 82 out of a max of 114
[08/10 16:07:32]  Verifer returned sat in 1.954462 secs.
[08/10 16:07:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1584.403320    1407.740951  2526.923210  1584.403320  177.212402  1407.740951       0.05  176.612370       99.949870     1.0      1407.740951            -1             -1     -1
1    1584.953451    1584.403451  2526.923210  1584.953451  177.162500  1584.403451       0.05    0.500000        0.500000     1.0      1584.903451         False          False   True
2    1684.503451    1684.403451  2526.923210  1684.503451  100.050000  1684.403451       0.05    0.050000        0.050000     1.0      1684.453451         False          False   True
3    1784.953451    1726.915951  2526.923210  1784.953451  100.500000  1726.915951       0.05   57.987500        0.500000     1.0      1684.453451         False          False   True
4    1885.053451    1884.403451  2526.923210  1885.053451  158.087500  1884.403451       0.10    0.550000        0.550000     1.0      1684.453451         False          False   True
5    1885.053451    1884.403451  2578.485710  1885.053451    0.500000  1884.403451       0.10    0.550000      -47.887500     1.0      1684.453451         False          False   True
6    1983.003451    1932.840951  2628.423096  1983.003451   98.500000  1932.840951       0.10   50.062500       -0.000114     1.0      1684.453451         False          False   True
7    2034.403451    1985.370117  2676.973389  2034.403451  101.462500  1985.370117       0.10   48.933333       -0.049821     1.0      1684.453451         False          False   True
8    2034.453451    2034.353271  2676.973389  2034.453451   48.983333  2034.353271       0.10    0.000179      -99.999821     1.0      1684.453451         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=11/20.[0m
[08/10 16:07:32]  --------------------------------------------------------------------------------
[08/10 16:07:32]  Iteration: 119 (0 solution, 118 counterexamples)
[08/10 16:08:06]  Generator returned sat in 29.149156 secs.
[08/10 16:08:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:08:06]  Improved gap from 0 to 0
[08/10 16:08:07]  Improved number of small numbers from 60 to 87 out of a max of 114
[08/10 16:08:07]  Verifer returned sat in 1.569058 secs.
[08/10 16:08:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1582.990723    1482.990723  2528.334229  1582.990723    0.001250  1482.990723    0.00000  100.000000       99.998291     2.0      1482.990723            -1             -1   False
1    1582.992188    1482.992432  2528.334473  1582.992188  100.001465  1482.992432    0.00000   99.999756        0.000000     2.0      1482.990723         False          False   False
2    1586.992188    1582.992201  2624.334460  1586.992188  103.999756  1582.992201    0.00000    3.999987       -0.000013     1.0      1482.990723         False          False   False
3    1686.995951    1686.992201  2624.334460  1686.995951  104.003750  1686.992201    0.00125    0.002500        0.002500     1.0      1482.990723         False          False   False
4    1788.997201    1786.992201  2624.334460  1788.997201  102.003750  1786.992201    2.00250    0.002500        0.002500     1.0      1482.990723         False          False    True
5    1888.998451    1789.003451  2624.334460  1888.998451  100.003750  1789.003451    2.00375   97.991250        0.002500     1.0      1482.990723         False          False    True
6    1889.010951    1886.995850  2724.319460  1889.010951   98.003750  1886.995850    2.00375    0.011351        0.000000     1.0      1482.990723         False          False    True
7    1889.010951    1887.007201  2824.319336  1889.010951    0.010000  1887.007201    2.00375    0.000000       -0.000124     2.0      1482.990723         False          False    True
8    1889.020951    1887.008301  2824.319336  1889.020951    0.010000  1887.008301    2.00375    0.008900      -99.990124     1.0      1482.990723         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/400.[0m
[08/10 16:08:08]  --------------------------------------------------------------------------------
[08/10 16:08:08]  Iteration: 120 (0 solution, 119 counterexamples)
[08/10 16:08:17]  Generator returned sat in 4.431371 secs.
[08/10 16:08:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:08:17]  Improved gap from 1/20 to 0
[08/10 16:08:18]  Improved number of small numbers from 64 to 74 out of a max of 114
[08/10 16:08:18]  Verifer returned sat in 1.397162 secs.
[08/10 16:08:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     888.484701     788.487201  3222.839460   888.484701  200.001465   788.487201   0.000000   99.997500       99.997500     2.0       788.487201            -1             -1   False
1     988.488034     888.485352  3222.839460   988.488034  200.000833   888.485352   0.000833  100.001849      100.000000     1.0       988.487201         False          False   False
2     988.488034     988.486367  3222.839460   988.488034  100.000977   988.486367   0.000833    0.000833        0.000000     2.0       988.487201         False          False    True
3    1088.487201    1088.485534  3222.839600  1088.487201  100.000000  1088.485534   0.000833    0.000833       -0.000693     1.0      1088.486367         False          False    True
4    1088.496367    1088.487201  3322.830322  1088.496367    0.010000  1088.487201   0.000833    0.008333       -0.000804     1.0      1088.486367         False          False    True
5    1088.498034    1088.496367  3422.829346  1088.498034    0.010000  1088.496367   0.000833    0.000833       -0.000114     1.0      1088.486367         False          False    True
6    1088.507201    1088.505534  3522.812012  1088.507201    0.010000  1088.505534   0.000833    0.000833       -0.008281     1.0      1088.486367         False          False    True
7    1088.516367    1088.514701  3622.811035  1088.516367    0.010000  1088.514701   0.000833    0.000833       -0.000091     1.0      1088.486367         False          False    True
8    1088.525534    1088.524658  3622.811279  1088.525534    0.010000  1088.524658   0.000833    0.000042      -99.990680     1.0      1088.486367         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=100.[0m
[08/10 16:08:19]  --------------------------------------------------------------------------------
[08/10 16:08:19]  Iteration: 121 (0 solution, 120 counterexamples)
[08/10 16:08:32]  Generator returned sat in 9.146417 secs.
[08/10 16:08:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:08:33]  Improved number of small numbers from 59 to 113 out of a max of 113
[08/10 16:08:33]  Verifer returned sat in 0.464672 secs.
[08/10 16:08:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     588.886963     388.912354  3522.414307   588.886963  299.974854   388.912354   0.000000  199.974609       99.974854     4.0       388.912354            -1             -1   False
1     688.887207     588.912109  3522.414307   688.887207  299.974854   588.912109   0.000000   99.975098       99.975098     1.0       388.912354         False          False   False
2     989.587158     590.487305  3522.414307   989.587158  400.675049   590.487305   0.025146  399.074707      300.649902     2.0       388.912354         False          False   False
3     989.587158     688.912109  3522.414307   989.587158  399.049805   688.912109   0.025146  300.649902      200.649902     2.0       989.562012         False          False    True
4    1088.487061     888.887207  3522.414307  1088.487061  399.549805   888.887207   0.025146  199.574707      199.549805     3.0       989.562012         False          False    True
5    1288.962158     888.912354  3522.414307  1288.962158  400.049805   888.912354   0.025146  400.024658      300.024902     4.0       989.562012         False          False    True
6    1289.487305    1088.487061  3522.414307  1289.487305  400.549805  1088.487061   0.025146  200.975098      200.550049     2.0       989.562012         False          False    True
7    1489.562012    1186.362305  3522.414307  1489.562012  401.049805  1186.362305   0.025146  303.174561      300.624756     3.0       989.562012         False          False    True
8    1587.937256    1288.912109  3522.414307  1587.937256  401.549805  1288.912109   0.025146  299.000000      299.000000     4.0       989.562012         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=615731/2048.[0m
[08/10 16:08:34]  --------------------------------------------------------------------------------
[08/10 16:08:34]  Iteration: 122 (0 solution, 121 counterexamples)
[08/10 16:09:06]  Generator returned sat in 28.288298 secs.
[08/10 16:09:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:09:07]  Improved number of small numbers from 66 to 82 out of a max of 113
[08/10 16:09:07]  Verifer returned sat in 1.013040 secs.
[08/10 16:09:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -377.863037    -984.762842  4021.439258  -377.863037    0.099854  -984.762842        0.0  606.899805      606.899805     6.0      -984.762842            -1             -1   False
1    -377.863037    -984.762842  4021.439258  -377.863037    0.100098  -984.762842        0.0  606.899805      506.899805     6.0      -984.762842         False          False   False
2    -377.863037    -784.762939  4021.439258  -377.863037    0.100098  -784.762939        0.0  406.899902      406.899805     7.0      -984.762842         False          False   False
3    -377.863037    -784.762842  4021.439258  -377.863037  116.488889  -784.762842        0.0  406.899805      306.899805     5.0      -984.762842         False          False   False
4    -377.863037    -584.762842  4021.439258  -377.863037  272.733333  -584.762842        0.0  206.899805      206.899805     6.0      -984.762842         False          False   False
5      22.337158    -584.762695  4021.439258    22.337158  607.100000  -584.762695        0.1  606.999854      507.000000     7.0      -984.762842         False          False   False
6      22.337158    -484.762842  4021.439258    22.337158    2.000000  -484.762842        0.1  507.000000      407.000000     8.0      -984.762842         False          False    True
7      22.337158    -377.762842  4021.439258    22.337158  151.000000  -377.762842        0.1  400.000000      307.000000     3.0        22.237158          True           True   False
8      22.337158    -284.762695  4021.439258    22.337158  328.000000  -284.762695        0.1  306.999854      207.000000     4.0        22.237158         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=507.[0m
[08/10 16:09:08]  --------------------------------------------------------------------------------
[08/10 16:09:08]  Iteration: 123 (0 solution, 122 counterexamples)
[08/10 16:09:44]  Generator returned sat in 32.172842 secs.
[08/10 16:09:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:09:45]  Improved gap from 0 to 100
[08/10 16:09:46]  Improved number of small numbers from 61 to 72 out of a max of 114
[08/10 16:09:46]  Verifer returned sat in 1.488594 secs.
[08/10 16:09:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -980.863037    -980.963135  3654.842689  -980.863037  100.300000  -980.963135      0.000    0.100098       -0.099951     7.0      -980.963135            -1             -1     -1
1    -880.763184    -980.763086  3654.842689  -880.763184  100.199951  -980.763086      0.000   99.999902       -0.000098     1.0      -880.763184         False           True  False
2    -579.463086    -780.763086  3654.842689  -579.463086  401.300000  -780.763086    201.100    0.200000        0.200000     1.0      -880.763184         False          False  False
3    -178.463086    -780.463086  3654.842689  -178.463086  401.200000  -780.463086    502.100   99.900000        0.200000     1.0      -680.563086         False          False   True
4     -77.763086    -580.763086  3654.842689   -77.763086  200.600000  -580.763086    502.800    0.200000        0.200000     1.0      -680.563086         False          False   True
5      22.336914    -480.763086  3654.842689    22.336914  100.300000  -480.763086    502.900    0.200000        0.200000     1.0      -680.563086         False          False   True
6      72.286914    -480.763086  3654.842689    72.286914   50.150000  -480.763086    502.900   50.150000      -49.850000     1.0      -680.563086         False          False   True
7     197.061914    -354.488086  3654.842689   197.061914  174.925000  -354.488086    502.900   48.650000      -25.075000     1.0      -680.563086         False          False   True
8     349.011914    -280.762939  3654.842689   349.011914  200.600000  -280.762939    529.575  100.199854        0.200000     1.0      -680.563086         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 16:09:47]  --------------------------------------------------------------------------------
[08/10 16:09:47]  Iteration: 124 (0 solution, 123 counterexamples)
[08/10 16:10:05]  Generator returned sat in 13.759231 secs.
[08/10 16:10:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:10:05]  Improved gap from 1/10 to 100
[08/10 16:10:06]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 16:10:06]  Verifer returned sat in 0.689008 secs.
[08/10 16:10:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -881.613281    -981.812988  3654.842773  -881.613281    0.049805  -981.812988    0.050049  100.149658       99.949951     9.0      -981.812988            -1             -1     -1
1    -881.613281    -981.613281  3654.842773  -881.613281  100.100098  -981.613281    0.050049   99.949951       -0.050049     9.0      -981.812988         False           True   True
2    -881.513184    -881.613037  3654.842773  -881.513184  100.050049  -881.613037    0.050049    0.049805      -99.949951     1.0      -881.563232          True           True  False
3    -681.213135    -715.379883  3654.842773  -681.213135  200.349854  -715.379883    0.050049   34.116699        0.350098     1.0      -881.563232         False          False  False
4    -581.113281    -581.613281  3654.842773  -581.113281  134.216553  -581.613281    0.100098    0.399902        0.399902     1.0      -881.563232         False          False  False
5    -581.013184    -581.613281  3654.842773  -581.013184    0.500000  -581.613281    0.100098    0.500000      -99.500000     1.0      -881.563232         False          False   True
6    -281.513428    -381.613281  3654.842773  -281.513428  299.999756  -381.613281   99.699951    0.399902        0.399902     1.0      -881.563232         False          False   True
7    -281.413330    -381.163330  3654.842773  -281.413330    0.500000  -381.163330   99.699951    0.050049      -99.500000     1.0      -881.563232         False          False   True
8     -81.013428    -281.613281  3654.842773   -81.013428  200.449951  -281.613281  100.199951  100.399902        0.399902     1.0      -881.563232         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=819/2048.[0m
[08/10 16:10:06]  --------------------------------------------------------------------------------
[08/10 16:10:06]  Iteration: 125 (0 solution, 124 counterexamples)
[08/10 16:11:18]  Generator returned sat in 67.628680 secs.
[08/10 16:11:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:19]  Improved gap from 1/800 to 48.4375
[08/10 16:11:19]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:11:19]  Verifer returned sat in 0.698966 secs.
[08/10 16:11:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1728.495850   -1828.947998  4450.160156 -1728.495850  100.457520 -1828.947998   0.000000  100.452148       48.434814     9.0     -1828.947998            -1             -1     -1
1   -1728.493164   -1776.930664  4501.722656 -1728.493164  100.454834 -1776.930664   0.000000   48.437500        0.000000     5.0     -1728.493164         False           True  False
2   -1676.928223   -1676.930664  4501.722656 -1676.928223  100.002441 -1676.930664   0.000000    0.002441      -48.435059     1.0     -1676.928223         False          False  False
3   -1628.490723   -1628.493164  4553.285156 -1628.490723   48.439941 -1628.493164   0.000000    0.002441      -48.435059     1.0     -1628.490723         False          False  False
4   -1429.538330   -1480.058350  4553.285156 -1429.538330  198.954834 -1480.058350   0.002441   50.517578       50.514893     1.0     -1628.490723         False          False  False
5   -1429.538330   -1480.055664  4602.770020 -1429.538330    0.010000 -1480.055664   0.002441   50.514893       -0.000244     2.0     -1628.490723         False          False   True
6   -1381.615723   -1429.538086  4653.291260 -1381.615723   98.437500 -1429.538086   0.002441   47.919922       -1.556396     1.0     -1628.490723         False          False   True
7   -1330.058105   -1380.061768  4703.290039 -1330.058105   99.477539 -1380.061768   0.002441   50.001221        0.000000     1.0     -1628.490723         False          False   True
8   -1330.058105   -1330.060547  4703.290283 -1330.058105   49.998291 -1330.060547   0.002441    0.000000      -99.999756     2.0     -1628.490723         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=206909/4096.[0m
[08/10 16:11:20]  --------------------------------------------------------------------------------
[08/10 16:11:20]  Iteration: 126 (0 solution, 125 counterexamples)
[08/10 16:11:45]  Generator returned sat in 21.258615 secs.
[08/10 16:11:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:11:47]  Improved gap from 1/10 to 10.9375
[08/10 16:11:47]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:11:47]  Verifer returned sat in 1.964239 secs.
[08/10 16:11:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1117.238037   -1117.287842  5118.025146 -1117.238037  199.999756 -1117.287842        0.0    0.049805      -99.950195     4.0     -1117.287842            -1             -1   False
1    -917.337891    -928.225586  5118.025391  -917.337891  199.949951  -928.225586        0.0   10.887695       -0.049805     1.0      -917.337891         False          False   False
2    -728.325684    -917.287842  5118.025391  -728.325684  199.899902  -917.287842        0.0  188.962158       88.962402     1.0      -728.325684         False          False   False
3    -507.287842    -717.288086  5118.025391  -507.287842  410.000000  -717.288086        0.0  210.000244      210.000244     1.0      -728.325684         False          False   False
4    -507.287842    -635.412842  5118.025391  -507.287842  203.000000  -635.412842        0.0  128.125000      110.000244     2.0      -728.325684         False          False   False
5    -507.287842    -555.088135  5118.025391  -507.287842   99.500000  -555.088135        0.0   47.800293       10.000244     3.0      -728.325684         False          False   False
6    -507.287842    -507.337891  5197.137695  -507.287842   47.750000  -507.337891        0.0    0.050049      -10.887451     4.0      -728.325684         False          False   False
7    -485.462891    -496.400391  5286.200195  -485.462891   21.875000  -496.400391        0.0   10.937500        0.000000     1.0      -728.325684         False          False   False
8    -485.462891    -485.462891  5375.262695  -485.462891    8.937500  -485.462891        0.0    0.000000      -10.937500     2.0      -728.325684         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=215091/1024.[0m
[08/10 16:11:48]  --------------------------------------------------------------------------------
[08/10 16:11:48]  Iteration: 127 (0 solution, 126 counterexamples)
[08/10 16:12:36]  Generator returned sat in 43.896348 secs.
[08/10 16:12:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:12:37]  Improved gap from 95/3 to 100
[08/10 16:12:37]  Improved number of small numbers from 68 to 78 out of a max of 114
[08/10 16:12:37]  Verifer returned sat in 0.929062 secs.
[08/10 16:12:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -812.437988    -912.437964  5118.025391  -812.437988    0.200195  -912.437964        0.0   99.999976       99.999976     1.0      -912.437964            -1             -1    True
1    -812.437988    -912.437964  5118.025391  -812.437988    0.100098  -912.437964        0.0   99.999976       -0.000024     1.0      -812.437988         False          False    True
2    -612.437964    -712.437964  5118.025391  -612.437964  300.000000  -712.437964        0.0  100.000000      100.000000     1.0      -812.437988         False          False    True
3    -612.437964    -712.437964  5118.025391  -612.437964   45.111111  -712.437964        0.0  100.000000        0.000000     1.0      -612.437964         False          False    True
4    -543.771297    -547.771297  5118.025391  -543.771297  168.666667  -547.771297        0.0    4.000000      -31.333333     1.0      -612.437964         False          False    True
5    -111.437964    -511.638184  5118.025391  -111.437964  436.333333  -511.638184        0.1  400.100220      300.900000     1.0      -612.437964         False          False    True
6    -111.437964    -312.437964  5118.025391  -111.437964    0.500000  -312.437964        0.1  200.900000      200.900000     2.0      -612.437964         False          False    True
7    -111.337964    -212.437964  5118.025391  -111.337964  201.000000  -212.437964        0.1  101.000000      101.000000     3.0      -111.437964          True           True   False
8     -43.671297    -212.437744  5118.025391   -43.671297  168.666667  -212.437744        0.1  168.666447       68.666667     4.0      -111.437964         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3009/10.[0m
[08/10 16:12:38]  --------------------------------------------------------------------------------
[08/10 16:12:38]  Iteration: 128 (0 solution, 127 counterexamples)
[08/10 16:13:17]  Generator returned sat in 35.033102 secs.
[08/10 16:13:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:13:18]  Improved gap from 0 to 48.4375
[08/10 16:13:18]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 16:13:18]  Verifer returned sat in 0.641027 secs.
[08/10 16:13:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -758.400391    -758.600342  4964.187744  -758.400391  399.349854  -758.600342   0.049805    0.150146        0.150146     2.0      -758.600342            -1             -1     -1
1    -359.200684    -758.450439  4964.187744  -359.200684  399.349854  -758.450439   0.049805  399.199951      299.349854     2.0      -758.600342         False          False   True
2    -359.100586    -558.600586  4964.187744  -359.100586  399.300049  -558.600586   0.049805  199.450195      199.449951     2.0      -359.150391         False          False   True
3    -359.100586    -558.550537  4964.187744  -359.100586   50.937500  -558.550537   0.049805  199.400146       99.449951     3.0      -359.150391         False          False   True
4    -359.100586    -359.200439  4964.187744  -359.100586   50.437500  -359.200439   0.049805    0.050049       -0.550049     3.0      -359.150391         False          False   True
5    -309.213135    -358.600342  5014.850342  -309.213135   49.937500  -358.600342   0.049805   49.337402        0.000000     1.0      -359.150391         False          False   True
6    -309.113037    -309.212891  5066.362793  -309.113037   49.437500  -309.212891   0.049805    0.050049      -48.387451     1.0      -359.150391         False          False   True
7    -260.225586    -260.775391  5117.925293  -260.225586   48.937500  -260.775391   0.049805    0.500000      -47.937500     1.0      -359.150391         False          False   True
8    -212.288086    -212.337891  5117.925293  -212.288086   48.437500  -212.337891   0.049805    0.000000     -100.000000     1.0      -359.150391         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1226343/4096.[0m
[08/10 16:13:19]  --------------------------------------------------------------------------------
[08/10 16:13:19]  Iteration: 129 (0 solution, 128 counterexamples)
[08/10 16:13:29]  Generator returned sat in 5.129910 secs.
[08/10 16:13:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:13:29]  Improved gap from 751/16 to 46.875
[08/10 16:13:30]  Improved number of small numbers from 64 to 114 out of a max of 114
[08/10 16:13:30]  Verifer returned sat in 0.866177 secs.
[08/10 16:13:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -502.157715    -802.194824  4907.782227  -502.157715    0.012207  -802.194824   0.049805  299.987305      199.987305     6.0      -802.194824            -1             -1     -1
1    -502.157715    -602.194824  4907.782227  -502.157715  299.987305  -602.194824   0.049805   99.987305       99.987305     3.0      -802.194824         False           True   True
2    -302.169922    -502.194824  4907.782227  -302.169922  299.975098  -502.194824   0.049805  199.975098      199.975098     1.0      -302.219727         False          False   True
3    -302.169922    -502.182617  4907.782227  -302.169922   56.875000  -502.182617   0.049805  199.962891       99.975098     2.0      -302.219727         False          False   True
4    -302.169922    -304.182617  4907.782227  -302.169922   54.875000  -304.182617   0.049805    1.962891       -0.024902     3.0      -302.219727         False          False   True
5    -251.257812    -302.194824  4956.895020  -251.257812   52.875000  -302.194824   0.049805   50.887207        0.000000     1.0      -302.219727         False          False   True
6    -251.257812    -251.307617  5010.020020  -251.257812   50.875000  -251.307617   0.049805    0.000000      -46.875000     2.0      -302.219727         False          False   True
7    -202.382812    -204.432617  5063.145020  -202.382812   48.875000  -204.432617   0.049805    2.000000      -44.875000     1.0      -302.219727         False          False   True
8    -157.507812    -157.557617  5116.269775  -157.507812   46.875000  -157.557617   0.049805    0.000000      -46.875244     1.0      -302.219727         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=204787/1024.[0m
[08/10 16:13:30]  --------------------------------------------------------------------------------
[08/10 16:13:30]  Iteration: 130 (0 solution, 129 counterexamples)
[08/10 16:14:04]  Generator returned sat in 29.281897 secs.
[08/10 16:14:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:14:05]  Improved gap from 367/8 to 48.4375
[08/10 16:14:05]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 16:14:05]  Verifer returned sat in 0.796061 secs.
[08/10 16:14:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -521.017578    -521.117920  4726.705078  -521.017578  399.949951  -521.117920   0.050049    0.050293        0.050049     5.0      -521.117920            -1             -1     -1
1    -121.117920    -421.117920  4726.705078  -121.117920  399.949951  -421.117920   0.050049  299.949951      299.949707     1.0      -521.117920         False           True   True
2    -121.117920    -321.117920  4726.705078  -121.117920   53.487549  -321.117920   0.050049  199.949951      199.949707     2.0      -121.167969         False          False   True
3    -121.117920    -221.117920  4726.705078  -121.117920   53.437500  -221.117920   0.050049   99.949951       99.949707     3.0      -121.167969         False          False   True
4    -121.117920    -122.067627  4726.705078  -121.117920   52.437500  -122.067627   0.050049    0.899658       -0.050293     4.0      -121.167969         False          False   True
5     -70.580078    -121.117676  4776.217529   -70.580078   51.437500  -121.117676   0.050049   50.487549        0.000000     1.0      -121.167969         False          False   True
6     -70.580078     -70.630127  4827.780029   -70.580078   50.437500   -70.630127   0.050049    0.000000      -48.437500     2.0      -121.167969         False          False   True
7     -21.142578     -22.192627  4879.342529   -21.142578   49.437500   -22.192627   0.050049    1.000000      -47.437500     1.0      -121.167969         False          False   True
8      26.294922      26.244873  4879.342773    26.294922   48.437500    26.244873   0.050049    0.000000      -99.999756     1.0      -121.167969         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1228799/4096.[0m
[08/10 16:14:06]  --------------------------------------------------------------------------------
[08/10 16:14:06]  Iteration: 131 (0 solution, 130 counterexamples)
[08/10 16:14:31]  Generator returned sat in 21.424604 secs.
[08/10 16:14:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:14:32]  Improved gap from 0 to 100
[08/10 16:14:32]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:14:32]  Verifer returned sat in 0.713954 secs.
[08/10 16:14:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1276.172607     979.172363  3128.714844  1276.172607    0.049805   979.172363   0.049805  296.950439      199.250244     9.0       979.172363            -1             -1     -1
1    1276.172607    1076.872559  3128.714844  1276.172607  199.200195  1076.872559   0.049805  199.250244       99.250244     3.0       979.172363         False           True   True
2    1276.172607    1176.922607  3128.714844  1276.172607  199.200195  1176.922607   0.049805   99.200195       -0.749756     3.0       979.172363         False          False   True
3    1476.222168    1376.872559  3128.714844  1476.222168  299.249756  1376.872559   0.049805   99.299805       99.299805     1.0       979.172363         False          False   True
4    1576.272461    1376.922363  3128.714844  1576.272461  199.350098  1376.922363   0.100098  199.250000       99.299805     2.0       979.172363         False          False   True
5    1576.272461    1576.122314  3128.714844  1576.272461    2.000000  1576.122314   0.100098    0.050049       -0.700195     2.0       979.172363         False          False   True
6    1776.322266    1676.872314  3128.714844  1776.322266  200.099854  1676.872314   0.149902   99.300049       99.299805     1.0       979.172363         False          False   True
7    1776.322266    1776.122559  3128.714844  1776.322266    2.000000  1776.122559   0.149902    0.049805       -0.700195     2.0       979.172363         False          False   True
8    1976.372559    1776.872559  3128.714844  1976.372559  200.100098  1776.872559   0.200195  199.299805       99.299805     1.0       979.172363         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=101683/1024.[0m
[08/10 16:14:33]  --------------------------------------------------------------------------------
[08/10 16:14:33]  Iteration: 132 (0 solution, 131 counterexamples)
[08/10 16:14:47]  Generator returned sat in 9.705376 secs.
[08/10 16:14:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:14:48]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 16:14:48]  Verifer returned sat in 0.231332 secs.
[08/10 16:14:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1276.172607    1078.723389  3029.489502  1276.172607    0.012451  1078.723389   0.049805  197.399414      100.024902     9.0      1078.723389            -1             -1     -1
1    1276.172607    1276.097900  3029.489502  1276.172607    0.012451  1276.097900   0.049805    0.024902        0.024902     2.0      1078.723389         False           True   True
2    1276.172607    1276.097900  3029.489502  1276.172607    0.012451  1276.097900   0.049805    0.024902      -99.975098     2.0      1078.723389         False          False   True
3    1476.222168    1476.048096  3029.489502  1476.222168  200.074463  1476.048096   0.049805    0.124268        0.074463     1.0      1078.723389         False          False   True
4    1675.260254    1476.097900  3029.489502  1675.260254  199.162354  1476.097900   0.100098  199.062256       99.062256     2.0      1078.723389         False          False   True
5    1675.260254    1675.147705  3029.489502  1675.260254    2.000000  1675.147705   0.100098    0.012451       -0.937744     2.0      1078.723389         False          False   True
6    1875.272705    1676.872314  3029.489502  1875.272705  200.024902  1676.872314   0.112549  198.287842       99.062256     1.0      1078.723389         False          False   True
7    1875.272705    1875.147705  3029.489502  1875.272705    2.000000  1875.147705   0.112549    0.012451       -0.937744     2.0      1078.723389         False          False   True
8    2075.285156    1876.097900  3029.489502  2075.285156  200.024902  1876.097900   0.125000  199.062256       99.062256     1.0      1078.723389         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=405759/4096.[0m
[08/10 16:14:49]  --------------------------------------------------------------------------------
[08/10 16:14:49]  Iteration: 133 (0 solution, 132 counterexamples)
[08/10 16:15:39]  Generator returned sat in 45.386122 secs.
[08/10 16:15:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:15:39]  Improved gap from 0 to 0
[08/10 16:15:40]  Improved number of small numbers from 105 to 114 out of a max of 114
[08/10 16:15:40]  Verifer returned sat in 0.649350 secs.
[08/10 16:15:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1974.610107    1674.710156  2530.876953  1974.610107  299.949951  1674.710156   0.000000  299.899951      299.899902     7.0      1674.710156            -1             -1   False
1    1974.660156    1674.760010  2530.876953  1974.660156  299.950000  1674.760010   0.050049  299.850098      199.899902     3.0      1674.710156         False          False   False
2    1974.760254    1874.709961  2530.876953  1974.760254  299.950195  1874.709961   0.050049  100.000244      100.000000     3.0      1674.710156         False          False    True
3    1974.760254    1874.710205  2530.876953  1974.760254    0.050049  1874.710205   0.050049  100.000000        0.000000     4.0      1974.710205         False          False    True
4    1974.760254    1974.710205  2630.876953  1974.760254    0.500000  1974.710205   0.050049    0.000000        0.000000     3.0      1974.710205         False          False    True
5    1975.260254    1974.710205  2730.376953  1975.260254    0.500000  1974.710205   0.050049    0.500000        0.000000     3.0      1974.710205         False          False    True
6    1975.260254    1975.210205  2830.376953  1975.260254    0.500000  1975.210205   0.050049    0.000000        0.000000     2.0      1974.710205         False          False    True
7    1975.760254    1975.659912  2929.876953  1975.760254    0.500000  1975.659912   0.050049    0.050293        0.000000     1.0      1974.710205         False          False    True
8    1976.209961    1975.710205  2929.876953  1976.209961    0.500000  1975.710205   0.050049    0.449707      -99.550293     2.0      1974.710205         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=409395/2048.[0m
[08/10 16:15:40]  --------------------------------------------------------------------------------
[08/10 16:15:40]  Iteration: 134 (0 solution, 133 counterexamples)
[08/10 16:16:03]  Generator returned sat in 18.003029 secs.
[08/10 16:16:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:16:03]  Improved gap from 0 to 100
[08/10 16:16:03]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 16:16:03]  Verifer returned sat in 0.419519 secs.
[08/10 16:16:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1973.160156    1873.310156  2530.876953  1973.160156      0.05  1873.310156       0.00    99.85           99.70     1.0      1873.310156            -1             -1    True
1    1973.510156    1973.210156  2530.876953  1973.510156    100.20  1973.210156       0.00     0.30            0.05     1.0      1873.310156         False          False    True
2    2073.410156    2073.360156  2530.876953  2073.410156    100.20  2073.360156       0.00     0.05           -0.05     1.0      1873.310156         False          False    True
3    2073.510156    2073.460156  2530.876953  2073.510156      0.15  2073.460156       0.00     0.05          -99.95     1.0      2073.510156         False          False    True
4    2273.610156    2272.660156  2530.876953  2273.610156    200.15  2272.660156       0.05     0.90            0.10     1.0      2073.510156         False          False    True
5    2273.710156    2273.610156  2530.876953  2273.710156      1.00  2273.610156       0.05     0.05          -99.80     1.0      2073.510156         False          False    True
6    2473.910156    2472.660156  2530.876953  2473.910156    200.25  2472.660156       0.35     0.90            0.10     1.0      2073.510156         False          False    True
7    2474.010156    2473.610156  2530.876953  2474.010156      1.00  2473.610156       0.35     0.05          -99.80     1.0      2073.510156         False          False    True
8    2674.910156    2573.460156  2530.876953  2674.910156    200.95  2573.460156       1.35   100.10            0.10     1.0      2073.510156         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/10.[0m
[08/10 16:16:04]  --------------------------------------------------------------------------------
[08/10 16:16:04]  Iteration: 135 (0 solution, 134 counterexamples)
[08/10 16:16:16]  Generator returned sat in 7.306628 secs.
[08/10 16:16:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:16:17]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/10 16:16:17]  Verifer returned sat in 0.167859 secs.
[08/10 16:16:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1973.159912    1873.347900  2530.876709  1973.159912    0.049805  1873.347900   0.000000   99.812012       99.699707     1.0      1873.347900            -1             -1    True
1    1973.510254    1973.172607  2530.876709  1973.510254  100.162354  1973.172607   0.000000    0.337646        0.050049     1.0      1873.347900         False          False    True
2    2073.410156    2073.322754  2530.876709  2073.410156  100.237549  2073.322754   0.000000    0.087402       -0.050049     1.0      1873.347900         False          False    True
3    2073.510254    2073.497803  2530.876709  2073.510254    0.187500  2073.497803   0.000000    0.012451      -99.949951     1.0      2073.510254         False          False    True
4    2273.647705    2273.084961  2530.876709  2273.647705  200.149902  2273.084961   0.087646    0.475098        0.099854     1.0      2073.510254         False          False    True
5    2273.672607    2273.572510  2530.876709  2273.672607    0.500000  2273.572510   0.087646    0.012451      -99.875244     1.0      2073.510254         False          False    True
6    2473.909912    2473.084961  2530.876709  2473.909912  200.249756  2473.084961   0.349854    0.475098        0.099854     1.0      2073.510254         False          False    True
7    2473.934814    2473.572510  2530.876709  2473.934814    0.500000  2473.572510   0.349854    0.012451      -99.875244     1.0      2073.510254         False          False    True
8    2674.409912    2573.460205  2530.876709  2674.409912  200.487549  2573.460205   0.849854  100.099854        0.099854     1.0      2073.510254         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=409/4096.[0m
[08/10 16:16:17]  --------------------------------------------------------------------------------
[08/10 16:16:17]  Iteration: 136 (0 solution, 135 counterexamples)
[08/10 16:17:28]  Generator returned sat in 66.667660 secs.
[08/10 16:17:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:17:30]  Improved number of small numbers from 67 to 74 out of a max of 113
[08/10 16:17:30]  Verifer returned sat in 1.344853 secs.
[08/10 16:17:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2523.093506    1037.008467  2530.876709  2523.093506  1486.085205  1037.008467    0.00000  1486.085039     1386.085039     7.0      1037.008467            -1             -1   False
1    2523.093506    1237.008467  2530.876709  2523.093506  1486.083750  1237.008467    0.00000  1286.085039     1286.085039     7.0      2523.093506         False          False   False
2    2723.090967    1337.008467  2530.876709  2723.090967  1486.082500  1337.008467    0.00125  1386.081250     1386.081250     8.0      2723.089717         False          False   False
3    2723.090967    1437.008467  2530.876709  2723.090967   544.041250  1437.008467    0.00125  1286.081250     1286.081250     9.0      2723.089717         False          False    True
4    2923.092217    1537.007217  2530.876709  2923.092217  1486.082500  1537.007217    0.00250  1386.082500     1386.081250     8.0      2723.089717         False           True   False
5    2923.092217    1537.008467  2530.876709  2923.092217     0.010000  1537.008467    0.00250  1386.081250     1286.081250     9.0      2723.089717         False          False    True
6    2923.092217    1737.008467  2530.876709  2923.092217   198.020000  1737.008467    0.00250  1186.081250     1186.081250     8.0      2723.089717         False           True   False
7    2923.092217    1737.008467  2530.876709  2923.092217   694.040000  1737.008467    0.00250  1186.081250     1086.081250     8.0      2723.089717         False          False   False
8    3323.092217    1937.008301  2530.876709  3323.092217  1586.081250  1937.008301    0.00250  1386.081416     1386.081250     9.0      2723.089717         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=221773/160.[0m
[08/10 16:17:31]  --------------------------------------------------------------------------------
[08/10 16:17:31]  Iteration: 137 (0 solution, 136 counterexamples)
[08/10 16:19:08]  Generator returned sat in 92.848913 secs.
[08/10 16:19:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:19:09]  Improved gap from 0 to 100
[08/10 16:19:09]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:19:09]  Verifer returned sat in 0.723332 secs.
[08/10 16:19:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1136.418213    1036.418457  2531.466553  1136.418213    0.100000  1036.418457   0.100098   99.899658       -0.100098     3.0      1036.418457            -1             -1     -1
1    1236.418457    1136.418457  2531.466553  1236.418457  199.899902  1136.418457   0.100098   99.899902       -0.099854     1.0      1036.418457         False           True   True
2    1336.318359    1236.418213  2531.466553  1336.318359  199.799805  1236.418213   0.100098   99.800049       -0.199951     1.0      1336.218262         False          False   True
3    1633.318115    1336.418213  2531.466553  1633.318115  396.799805  1336.418213   0.100098  296.799805      196.799805     1.0      1336.218262         False          False   True
4    1734.818115    1436.518311  2531.466553  1734.818115  398.299805  1436.518311   0.100098  298.199707      198.299805     2.0      1336.218262         False          False   True
5    1836.418213    1636.418213  2531.466553  1836.418213  399.799805  1636.418213   0.100098  199.899902      199.899902     2.0      1336.218262         False          False   True
6    2037.818115    1734.818359  2531.466553  2037.818115  401.299805  1734.818359   0.100098  302.899658      301.299805     2.0      1336.218262         False          False   True
7    2137.718262    1836.418213  2531.466553  2137.718262  402.799805  1836.418213   0.100098  301.199951      301.199951     2.0      1336.218262         False          False   True
8    2240.818115    1836.518066  2531.466553  2240.818115  404.299805  1836.518066   3.100098  401.199951      301.299805     3.0      1336.218262         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=308531/1024.[0m
[08/10 16:19:10]  --------------------------------------------------------------------------------
[08/10 16:19:10]  Iteration: 138 (0 solution, 137 counterexamples)
[08/10 16:19:37]  Generator returned sat in 22.811722 secs.
[08/10 16:19:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:19:38]  Improved gap from 21/100 to 48.4375
[08/10 16:19:38]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 16:19:38]  Verifer returned sat in 0.434228 secs.
[08/10 16:19:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1488.043213    1136.324463  2531.466553  1488.043213  451.71875  1136.324463    0.00000  351.71875       351.62500     4.0      1136.324463            -1             -1   False
1    1587.949463    1136.418213  2531.466553  1587.949463  451.62500  1136.418213   99.90625  351.62500       251.62500     4.0      1488.043213         False          False   False
2    1687.855713    1336.418213  2531.466553  1687.855713  451.53125  1336.418213   99.90625  251.53125       251.53125     4.0      1587.949463         False          False    True
3    1687.855713    1436.418213  2531.466553  1687.855713   55.93750  1436.418213   99.90625  151.53125       151.53125     5.0      1587.949463         False          False    True
4    1687.855713    1534.918213  2531.466553  1687.855713   54.43750  1534.918213   99.90625   53.03125        51.53125     3.0      1587.949463         False          False    True
5    1687.855713    1536.418213  2579.935303  1687.855713   52.93750  1536.418213   99.90625   51.53125         0.00000     4.0      1587.949463         False          False    True
6    1687.855713    1587.949463  2631.497803  1687.855713   51.43750  1587.949463   99.90625    0.00000       -48.43750     5.0      1587.949463         False          False    True
7    1737.793213    1636.386963  2683.060303  1737.793213   49.93750  1636.386963   99.90625    1.50000       -46.93750     1.0      1587.949463         False          False    True
8    1784.730713    1684.824463  2683.060303  1784.730713   48.43750  1684.824463   99.90625    0.00000      -100.00000     1.0      1587.949463         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2013/8.[0m
[08/10 16:19:39]  --------------------------------------------------------------------------------
[08/10 16:19:39]  Iteration: 139 (0 solution, 138 counterexamples)
[08/10 16:20:28]  Generator returned sat in 44.910822 secs.
[08/10 16:20:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:29]  Improved gap from 16001/8192 to 1.5625
[08/10 16:20:30]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 16:20:30]  Verifer returned sat in 0.858456 secs.
[08/10 16:20:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     882.208984     733.971680  2531.466064   882.208984  348.437500   733.971680    0.000000  148.237305      148.237061     9.0       733.971680            -1             -1     -1
1    1082.309082     733.971924  2531.466064  1082.309082  348.337402   733.971924  200.099854  148.237305       48.237305     3.0       882.209229         False           True  False
2    1282.409180     932.671875  2531.466064  1282.409180  348.337402   932.671875  300.199951   49.537354       48.237305     1.0       882.209229         False          False   True
3    1382.509277    1033.971924  2531.466064  1382.509277  149.637451  1033.971924  300.300049   48.237305       48.237305     1.0      1082.209229         False          False   True
4    1483.409424    1133.871582  2531.466064  1483.409424  149.137451  1133.871582  301.200195   48.337646       48.237305     1.0      1082.209229         False          False   True
5    1583.709229    1133.971924  2531.466064  1583.709229  148.637451  1133.971924  301.500000  148.237305       48.237305     2.0      1082.209229         False          False   True
6    1583.709229    1280.109375  2583.228760  1583.709229  148.137451  1280.109375  301.500000    2.099854        0.000000     2.0      1082.209229         False          False   True
7    1583.709229    1282.209229  2681.666260  1583.709229    2.000000  1282.209229  301.500000    0.000000       -1.562500     3.0      1082.209229         False          False   True
8    1585.709229    1283.771729  2681.666260  1585.709229    2.000000  1283.771729  301.500000    0.437500      -99.562500     1.0      1082.209229         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=49395/1024.[0m
[08/10 16:20:30]  --------------------------------------------------------------------------------
[08/10 16:20:30]  Iteration: 140 (0 solution, 139 counterexamples)
[08/10 16:20:41]  Generator returned sat in 6.480997 secs.
[08/10 16:20:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:20:42]  Improved gap from 1 to 0
[08/10 16:20:42]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/10 16:20:42]  Verifer returned sat in 0.849273 secs.
[08/10 16:20:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     727.936768     627.936523  2531.466064   727.936768  151.099854   627.936523   0.000000  100.000244       98.800293     5.0       627.936523            -1             -1   False
1     778.986572     727.986572  2531.466064   778.986572  151.050049   727.986572   0.000000   51.000000       49.850098     1.0       778.986572         False          False   False
2     878.986572     828.136475  2531.466064   878.986572  151.000000   828.136475   0.000000   50.850098       49.850098     1.0       878.986572         False          False   False
3     979.086426     928.636475  2531.466064   979.086426  150.949951   928.636475   0.050049   50.399902       49.899902     1.0       979.036377         False          False   False
4    1079.136475    1029.136475  2531.466064  1079.136475  150.449951  1029.136475   0.100098   49.899902       49.899902     1.0       979.036377         False          False    True
5    1179.186523    1029.186768  2531.466064  1179.186523  149.949951  1029.186768   0.150146  149.849609       49.899902     2.0       979.036377         False          False    True
6    1179.186523    1177.986816  2581.566162  1179.186523  149.449951  1177.986816   0.150146    1.049561        0.000000     2.0       979.036377         False          False    True
7    1179.186523    1179.036377  2681.566162  1179.186523    1.000000  1179.036377   0.150146    0.000000        0.000000     3.0       979.036377         False          False    True
8    1180.186523    1179.086426  2681.566162  1180.186523    1.000000  1179.086426   0.150146    0.949951      -99.000000     1.0       979.036377         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=102195/2048.[0m
[08/10 16:20:43]  --------------------------------------------------------------------------------
[08/10 16:20:43]  Iteration: 141 (0 solution, 140 counterexamples)
[08/10 16:21:42]  Generator returned sat in 54.201953 secs.
[08/10 16:21:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:21:43]  Improved gap from 0 to 46.875
[08/10 16:21:43]  Improved number of small numbers from 72 to 114 out of a max of 114
[08/10 16:21:43]  Verifer returned sat in 0.930582 secs.
[08/10 16:21:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     736.536621     626.336426  2531.466064   736.536621    0.099854   626.336426   0.000000  110.200195      100.100342     8.0       626.336426            -1             -1     -1
1     736.536621     736.436279  2531.466064   736.536621  110.199951   736.436279   0.000000    0.100342        0.100342     9.0       626.336426         False           True  False
2     846.636230     818.636230  2531.466064   846.636230  110.199951   818.636230  10.000000   18.000000        0.199951     1.0       626.336426          True           True  False
3     938.736328     928.636230  2531.466064   938.736328  110.100098   928.636230  10.000000    0.100098       -7.699951     1.0       928.736328         False          False   True
4    1046.736328    1036.436279  2531.466064  1046.736328  108.100098  1036.436279  10.100098    0.199951        0.199951     1.0       928.736328         False          False   True
5    1102.586426    1038.636475  2575.316162  1102.586426   56.050049  1038.636475  10.100098   53.849854       -0.099854     1.0       928.736328         False          False   True
6    1102.786621    1092.586426  2628.440918  1102.786621   54.050049  1092.586426  10.100098    0.100098      -46.774902     1.0       928.736328         False          False   True
7    1154.736572    1139.461426  2681.565918  1154.736572   52.050049  1139.461426  10.100098    5.175049      -41.699951     1.0       928.736328         False          False   True
8    1199.611572    1186.336670  2681.566162  1199.611572   50.050049  1186.336670  10.100098    3.174805      -96.824707     1.0       928.736328         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 16:21:44]  --------------------------------------------------------------------------------
[08/10 16:21:44]  Iteration: 142 (0 solution, 141 counterexamples)
[08/10 16:22:03]  Generator returned sat in 14.740997 secs.
[08/10 16:22:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:22:05]  Improved number of small numbers from 89 to 89 out of a max of 113
[08/10 16:22:05]  Verifer returned sat in 1.167109 secs.
[08/10 16:22:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     936.536621     436.536621  2731.365723   936.536621     0.200000   436.536621    0.000000  500.000000      500.000000     9.0       436.536621            -1             -1     -1
1     936.536621     536.536621  2731.365723   936.536621     0.100000   536.536621    0.000000  400.000000      400.000000     7.0       936.536621         False           True  False
2    1036.736621     636.536621  2731.365723  1036.736621   500.200000   636.536621    0.100000  400.100000      400.100000     8.0       936.536621         False          False  False
3    1036.736621     702.272335  2731.365723  1036.736621   400.100000   702.272335    0.100000  334.364286      300.100000     8.0      1036.636621         False          False   True
4    1036.736621     790.033050  2731.365723  1036.736621   332.917857   790.033050    0.100000  246.603571      200.100000     7.0      1036.636621         False          False   True
5    1083.340193     836.536621  2731.365723  1083.340193   293.207143   836.536621    0.100000  246.703571      146.703571     8.0      1036.636621         False          False   True
6    1083.340193     936.536621  2731.365723  1083.340193   246.603571   936.536621    0.100000  146.703571       46.703571     9.0      1036.636621         False          False   True
7    1536.636621    1136.536621  2731.365723  1536.636621   600.000000  1136.536621    0.100000  400.000000      400.000000     1.0      1036.636621         False           True  False
8    2258.391978    1236.536621  2731.365723  2258.391978  1121.755357  1236.536621  621.755357  400.100000      400.100000     2.0      1036.636621         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=4001/10.[0m
[08/10 16:22:06]  --------------------------------------------------------------------------------
[08/10 16:22:06]  Iteration: 143 (0 solution, 142 counterexamples)
[08/10 16:24:10]  Generator returned sat in 119.322476 secs.
[08/10 16:24:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:24:11]  Improved gap from 0 to 100
[08/10 16:24:12]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 16:24:12]  Verifer returned sat in 1.528918 secs.
[08/10 16:24:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     836.741621     736.740907  2731.365479   836.741621    0.001465   736.740907   0.000714  100.000000      100.000000     9.0       736.740907            -1             -1     -1
1     836.741621     836.740907  2731.365479   836.741621    0.000732   836.740907   0.000714    0.000000        0.000000     5.0       836.740907         False           True   True
2    1036.736621     836.741621  2731.365479  1036.736621  199.995000   836.741621   0.001429  199.993571       99.994286     1.0       836.740907         False           True  False
3    1036.736621    1036.734121  2731.365479  1036.736621  100.010357  1036.734121   0.001429    0.001071       -0.005714     2.0      1036.735193         False          False   True
4    1236.737335    1036.740907  2731.365479  1236.737335  200.001786  1036.740907   0.002143  199.994286       99.994286     1.0      1036.735193         False           True  False
5    1236.737335    1236.734478  2731.365479  1236.737335    0.010000  1236.734478   0.002143    0.000714       -0.005714     2.0      1036.735193         False          False   True
6    1436.738050    1336.740723  2731.365479  1436.738050  200.001429  1336.740723   0.002857   99.994470       99.994286     1.0      1436.735193          True           True  False
7    1436.738050    1436.734478  2731.365479  1436.738050    0.010000  1436.734478   0.002857    0.000714       -0.005714     2.0      1436.735193         False          False   True
8    1636.739121    1436.740967  2731.365479  1636.739121  200.001786  1436.740967   0.003929  199.994226       99.994286     1.0      1436.735193         False           True  False
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=17499/175.[0m
[08/10 16:24:12]  --------------------------------------------------------------------------------
[08/10 16:24:12]  Iteration: 144 (0 solution, 143 counterexamples)
[08/10 16:24:48]  Generator returned sat in 30.593915 secs.
[08/10 16:24:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:24:49]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/10 16:24:49]  Verifer returned sat in 0.401669 secs.
[08/10 16:24:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    1036.781006     736.781006  2731.365479  1036.781006  599.149902   736.781006   0.050049  299.949951      199.949951     8.0       736.781006            -1             -1     -1
1    1335.981201     936.730957  2731.365479  1335.981201  599.150146   936.730957   0.050049  399.200195      399.150146     9.0       736.781006         False          False   True
2    1435.980957     936.781006  2731.365479  1435.980957  499.199951   936.781006   0.050049  499.149902      399.149902     4.0      1435.930908          True           True  False
3    1435.980957    1036.781006  2731.365479  1435.980957  495.149902  1036.781006   0.050049  399.149902      299.149902     3.0      1435.930908         False          False  False
4    1532.980957    1139.581055  2731.365479  1532.980957  496.149902  1139.581055   0.050049  393.349854      296.149902     4.0      1435.930908         False          False  False
5    1636.781006    1236.781006  2731.365479  1636.781006  497.149902  1236.781006   0.050049  399.949951      299.949951     5.0      1435.930908         False          False  False
6    1734.980957    1436.781006  2731.365479  1734.980957  498.149902  1436.781006   0.050049  298.149902      298.149902     3.0      1435.930908         False          False  False
7    1935.980957    1535.881104  2731.365479  1935.980957  499.149902  1535.881104   0.050049  400.049805      399.149902     3.0      1435.930908         False          False  False
8    2036.081055    1636.781006  2731.365479  2036.081055  500.149902  1636.781006   0.099854  399.200195      399.200195     3.0      1435.930908         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=408781/1024.[0m
[08/10 16:24:49]  --------------------------------------------------------------------------------
[08/10 16:24:49]  Iteration: 145 (0 solution, 144 counterexamples)
[08/10 16:26:15]  Generator returned sat in 80.950905 secs.
[08/10 16:26:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:26:16]  Improved number of small numbers from 82 to 113 out of a max of 113
[08/10 16:26:16]  Verifer returned sat in 0.313006 secs.
[08/10 16:26:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     936.831055     736.780762  2731.365234   936.831055    0.024902   736.780762   0.049805  200.000488      200.000244     7.0       736.780762            -1             -1     -1
1     936.831055     836.781006  2731.365234   936.831055    0.024902   836.781006   0.049805  100.000244      100.000244     4.0       736.780762         False           True   True
2     936.831055     936.755859  2731.365234   936.831055    0.025146   936.755859   0.049805    0.025391        0.000244     3.0       736.780762         False          False   True
3    1336.830811     936.781006  2731.365234  1336.830811  400.025146   936.781006   0.049805  400.000000      300.000000     4.0       736.780762         False          False   True
4    1336.855957    1036.781006  2731.365234  1336.855957  400.025146  1036.781006   0.049805  300.025146      200.025146     2.0       736.780762         False          False   True
5    1436.855957    1236.781006  2731.365234  1436.855957  400.025146  1236.781006   0.049805  200.025146      200.025146     3.0       736.780762         False          False   True
6    1636.855957    1236.781006  2731.365234  1636.855957  400.025146  1236.781006   0.049805  400.025146      300.025146     3.0       736.780762         False          False   True
7    1636.855957    1436.781006  2731.365234  1636.855957  400.025146  1436.781006   0.049805  200.025146      200.025146     3.0       736.780762         False          False   True
8    1836.855957    1536.781006  2731.365234  1836.855957  400.025146  1536.781006   0.049805  300.025146      300.025146     3.0       736.780762         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1229005/4096.[0m
[08/10 16:26:16]  --------------------------------------------------------------------------------
[08/10 16:26:16]  Iteration: 146 (0 solution, 145 counterexamples)
[08/10 16:27:13]  Generator returned sat in 52.152924 secs.
[08/10 16:27:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:27:14]  Improved gap from 0 to 100
[08/10 16:27:14]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/10 16:27:14]  Verifer returned sat in 0.558599 secs.
[08/10 16:27:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     446.780762     446.706299  2731.365234   446.780762    0.012451   446.706299   0.049805    0.024658        0.024658     3.0       446.706299            -1             -1     -1
1     446.780762     446.706299  2731.365234   446.780762    0.012451   446.706299   0.049805    0.024658      -99.975342     3.0       446.706299         False          False   True
2    1041.855713     557.593994  2731.365234  1041.855713  595.099609   557.593994   0.049805  484.211914      395.099609     1.0       446.706299         False          False   True
3    1041.855713     646.706299  2731.365234  1041.855713  396.087158   646.706299   0.049805  395.099609      295.099609     2.0      1041.805908         False          False   True
4    1041.855713     747.706055  2731.365234  1041.855713  395.087158   747.706055   0.049805  294.099854      195.099609     3.0      1041.805908         False          False   True
5    1141.843018     946.706055  2731.365234  1141.843018  394.087158   946.706055   0.049805  195.087158      195.086914     4.0      1041.805908         False          False   True
6    1339.855469    1046.706299  2731.365234  1339.855469  393.099609  1046.706299   0.049805  293.099365      293.099365     2.0      1041.805908         False           True  False
7    1444.805908    1146.706055  2731.365234  1444.805908  398.049805  1146.706055   0.049805  298.050049      298.049805     2.0      1041.805908         False          False  False
8    1546.780762    1146.718750  2731.365234  1546.780762  400.024902  1146.718750   0.049805  400.012207      300.024658     3.0      1041.805908         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=809189/2048.[0m
[08/10 16:27:15]  --------------------------------------------------------------------------------
[08/10 16:27:15]  Iteration: 147 (0 solution, 146 counterexamples)
[08/10 16:27:46]  Generator returned sat in 25.678196 secs.
[08/10 16:27:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:27:47]  Improved gap from 1/600 to 48.4375
[08/10 16:27:48]  Improved number of small numbers from 73 to 110 out of a max of 114
[08/10 16:27:48]  Verifer returned sat in 2.011788 secs.
[08/10 16:27:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1269.545654     844.428467  2333.632324  1269.545654    0.010254   844.428467        0.0  425.117188      425.106689     6.0       844.428467            -1             -1    True
1    1269.545654     844.439209  2333.632324  1269.545654    0.010498   844.439209        0.0  425.106445      325.106689     6.0       844.428467         False          False    True
2    1269.545898    1044.438965  2333.632324  1269.545898  425.106689  1044.438965        0.0  225.106934      225.106934     5.0       844.428467         False          False    True
3    1269.545898    1144.438965  2333.632324  1269.545898  106.552083  1144.438965        0.0  125.106934      125.106934     5.0      1269.545898         False          False    True
4    1269.545898    1244.397380  2333.632324  1269.545898   52.276042  1244.397380        0.0   25.148519       25.106934     6.0      1269.545898         False          False    True
5    1269.545898    1244.438965  2380.570068  1269.545898   25.138021  1244.438965        0.0   25.106934      -27.955322     7.0      1269.545898         False          False    True
6    1345.938965    1297.501465  2432.132324  1345.938965  101.500000  1297.501465        0.0   48.437500        0.000000     1.0      1269.545898         False           True   False
7    1375.532715    1345.949463  2483.684326  1375.532715   78.031250  1345.949463        0.0   29.583252      -18.854248     1.0      1269.545898         False          False   False
8    1398.225505    1394.386963  2535.246826  1398.225505   52.276042  1394.386963        0.0    3.838542      -44.598958     1.0      1269.545898         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=665819/2048.[0m
[08/10 16:27:49]  --------------------------------------------------------------------------------
[08/10 16:27:49]  Iteration: 148 (0 solution, 147 counterexamples)
[08/10 16:28:16]  Generator returned sat in 22.346119 secs.
[08/10 16:28:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:28:16]  Improved gap from 0 to 39.0625
[08/10 16:28:17]  Improved number of small numbers from 94 to 114 out of a max of 114
[08/10 16:28:17]  Verifer returned sat in 0.453518 secs.
[08/10 16:28:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     975.083252     974.983154  2203.088379   975.083252  194.612549   974.983154   0.050049    0.050049        0.050049     2.0       974.983154            -1             -1     -1
1    1169.595459    1074.982910  2203.088379  1169.595459  194.562256  1074.982910   0.050049   94.562500       94.562256     1.0      1169.545410         False          False   True
2    1269.595459    1169.545410  2203.088379  1269.595459  194.562500  1169.545410   0.050049  100.000000       94.562256     2.0      1169.545410         False          False   True
3    1269.595459    1269.495605  2203.088379  1269.595459   73.775146  1269.495605   0.050049    0.049805       -5.437744     2.0      1269.545410         False          False   True
4    1342.320801    1342.220459  2203.088379  1342.320801   72.775146  1342.220459   0.050049    0.050293      -32.712402     1.0      1269.545410         False          False   True
5    1414.045654    1374.983154  2264.025879  1414.045654   71.775146  1374.983154   0.050049   39.012451       -0.050049     1.0      1269.545410         False          False   True
6    1445.808350    1414.045654  2324.963379  1445.808350   70.775146  1414.045654   0.050049   31.712646       -7.349854     1.0      1269.545410         False          False   True
7    1483.870850    1453.108154  2385.900879  1483.870850   69.775146  1453.108154   0.050049   30.712646       -8.349854     1.0      1269.545410         False          False   True
8    1521.933350    1492.170654  2446.838135  1521.933350   68.775146  1492.170654   0.050049   29.712646       -9.350098     1.0      1269.545410         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=387533/4096.[0m
[08/10 16:28:17]  --------------------------------------------------------------------------------
[08/10 16:28:17]  Iteration: 149 (0 solution, 148 counterexamples)
[08/10 16:28:32]  Generator returned sat in 10.244835 secs.
[08/10 16:28:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:28:34]  Improved gap from 617/16 to 39.0625
[08/10 16:28:34]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 16:28:34]  Verifer returned sat in 1.100215 secs.
[08/10 16:28:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     930.393311     830.493164  2203.088379   930.393311  194.612549   830.493164   0.000000  99.900146       99.900146     2.0       830.493164            -1             -1   False
1    1025.005615     930.493164  2203.088379  1025.005615  194.512451   930.493164   0.099854  94.412598       94.412598     1.0      1024.905762         False          False   False
2    1124.905518    1025.005615  2203.088379  1124.905518  194.312500  1025.005615   0.099854  99.800049       94.312500     1.0      1124.805664         False          False    True
3    1124.905518    1124.705566  2203.088379  1124.905518   74.675049  1124.705566   0.099854   0.100098       -5.687500     2.0      1124.805664         False          False    True
4    1197.980469    1197.780762  2203.088379  1197.980469   73.175049  1197.780762   0.099854   0.099854      -32.612549     1.0      1124.805664         False          False    True
5    1269.555664    1230.493164  2264.025879  1269.555664   71.675049  1230.493164   0.099854  38.962646       -0.099854     1.0      1124.805664         False          False    True
6    1300.768066    1269.555664  2324.963379  1300.768066   70.175049  1269.555664   0.099854  31.112549       -7.949951     1.0      1124.805664         False          False    True
7    1338.330566    1308.618164  2385.900635  1338.330566   68.675049  1308.618164   0.099854  29.612549       -9.450195     1.0      1124.805664         False          False    True
8    1375.893066    1347.680908  2446.838135  1375.893066   67.175049  1347.680908   0.099854  28.112305      -10.950195     1.0      1124.805664         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=193357/2048.[0m
[08/10 16:28:34]  --------------------------------------------------------------------------------
[08/10 16:28:34]  Iteration: 150 (0 solution, 149 counterexamples)
[08/10 16:28:46]  Generator returned sat in 6.636921 secs.
[08/10 16:28:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:28:47]  Improved gap from 153857/4096 to 39.0625
[08/10 16:28:47]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:28:47]  Verifer returned sat in 1.018560 secs.
[08/10 16:28:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     868.598145     674.685791  2265.083252   868.598145  256.412598   674.685791        0.0  193.912354      100.099854     2.0       674.685791            -1             -1    True
1     868.598145     868.498291  2265.083252   868.598145  193.812256   868.498291        0.0    0.099854        0.099854     2.0       868.598145         False          False    True
2    1062.310791     868.498291  2265.083252  1062.310791  193.812500   868.498291        0.0  193.812500       93.812500     2.0       868.598145         False          False    True
3    1062.310791    1062.210693  2265.083252  1062.310791   75.675049  1062.210693        0.0    0.100098       -6.187500     2.0      1062.310791         False          False    True
4    1135.885742    1135.785645  2265.083252  1135.885742   73.675049  1135.785645        0.0    0.100098      -32.612549     1.0      1062.310791         False          False    True
5    1207.460693    1168.498291  2326.020752  1207.460693   71.675049  1168.498291        0.0   38.962402       -0.100098     1.0      1062.310791         False          False    True
6    1238.173340    1207.560791  2386.958252  1238.173340   69.675049  1207.560791        0.0   30.612549       -8.449951     1.0      1062.310791         False          False    True
7    1275.235840    1246.623291  2447.895752  1275.235840   67.675049  1246.623291        0.0   28.612549      -10.449951     1.0      1062.310791         False          False    True
8    1312.298340    1285.685791  2508.833252  1312.298340   65.675049  1285.685791        0.0   26.612549      -12.449951     1.0      1062.310791         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=384665/4096.[0m
[08/10 16:28:48]  --------------------------------------------------------------------------------
[08/10 16:28:48]  Iteration: 151 (0 solution, 150 counterexamples)
[08/10 16:29:23]  Generator returned sat in 29.636248 secs.
[08/10 16:29:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:29:23]  Improved gap from 0 to 100
[08/10 16:29:24]  Improved number of small numbers from 62 to 70 out of a max of 114
[08/10 16:29:24]  Verifer returned sat in 1.292972 secs.
[08/10 16:29:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1171.857666     971.907458  2061.674085  1171.857666   256.412598   971.907458        0.0   199.950208      199.950208     1.0       971.907458            -1             -1    True
1    1171.857666     971.907458  2061.674085  1171.857666     0.049805   971.907458        0.0   199.950208       99.950208     1.0      1171.857666         False          False    True
2    1211.810791    1171.907458  2061.674085  1211.810791   239.903333  1171.907458        0.0    39.903333       39.903333     1.0      1171.857666         False          False    True
3    1211.910791    1211.860791  2061.674085  1211.910791    40.003333  1211.860791        0.0     0.050000      -59.996667     1.0      1211.910791         False          False    True
4    1291.867458    1291.867458  2061.674085  1291.867458    80.006667  1291.867458        0.0     0.000000      -80.040000     1.0      1211.910791         False          False    True
5    1451.880791    1451.830791  2061.674085  1451.880791   160.013333  1451.830791        0.0     0.050000      -20.026667     1.0      1211.910791         False          False    True
6    1771.857458    1571.907458  2061.674085  1771.857458   320.026667  1571.907458        0.0   199.950000      199.950000     1.0      1211.910791         False          False    True
7    2211.960791    1571.907458  2061.674085  2211.960791   640.053333  1571.907458        0.0   640.053333      540.053333     1.0      1211.910791         False          False    True
8    2852.014124    1771.907227  2061.674085  2852.014124  1280.106667  1771.907227        0.0  1080.106898     1080.106667     2.0      1211.910791         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2212161/2048.[0m
[08/10 16:29:25]  --------------------------------------------------------------------------------
[08/10 16:29:25]  Iteration: 152 (0 solution, 151 counterexamples)
[08/10 16:30:18]  Generator returned sat in 47.962571 secs.
[08/10 16:30:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:30:19]  Improved gap from 0 to 0
[08/10 16:30:19]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:30:19]  Verifer returned sat in 0.820843 secs.
[08/10 16:30:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     849.031006     849.031006  2061.674072   849.031006    0.024902   849.031006   0.000000    0.000000       -0.174805     1.0       849.031006            -1             -1   False
1     949.180908     949.156006  2061.674072   949.180908  100.149902   949.156006   0.000000    0.024902       -0.024902     1.0       849.031006         False          False   False
2    1049.281006    1049.205811  2061.674072  1049.281006  100.125000  1049.205811   0.025146    0.050049        0.050049     1.0      1049.255859         False          False   False
3    1153.281006    1149.205811  2061.674072  1153.281006  104.050049  1149.205811   4.025146    0.050049        0.050049     1.0      1049.255859         False          False    True
4    1255.281006    1149.205811  2061.674072  1255.281006  102.050049  1149.205811   6.025146  100.050049        0.050049     1.0      1049.255859         False          False    True
5    1255.281006    1249.230713  2161.599121  1255.281006  100.050049  1249.230713   6.025146    0.025146       -0.024902     2.0      1049.255859         False          False    True
6    1255.755859    1249.280762  2261.148926  1255.755859    0.500000  1249.280762   6.025146    0.449951       -0.000244     1.0      1049.255859         False          False    True
7    1255.805908    1249.755859  2361.098877  1255.805908    0.500000  1249.755859   6.025146    0.024902       -0.000244     1.0      1049.255859         False          False    True
8    1256.281006    1249.805908  2361.098877  1256.281006    0.500000  1249.805908   6.025146    0.449951      -99.525146     1.0      1049.255859         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=205/4096.[0m
[08/10 16:30:20]  --------------------------------------------------------------------------------
[08/10 16:30:20]  Iteration: 153 (0 solution, 152 counterexamples)
[08/10 16:30:34]  Generator returned sat in 8.538334 secs.
[08/10 16:30:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:30:34]  Improved gap from 1/800 to 100
[08/10 16:30:34]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/10 16:30:34]  Verifer returned sat in 0.355186 secs.
[08/10 16:30:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     849.255859     849.255859  2061.674072   849.255859     200.0   849.255859        0.0      0.0             0.0     3.0       849.255859            -1             -1    True
1    1049.255859     849.255859  2061.674072  1049.255859     200.0   849.255859        0.0    200.0           100.0     3.0       849.255859         False          False    True
2    1049.255859     949.255859  2061.674072  1049.255859     199.9   949.255859        0.0    100.0             0.0     2.0      1049.255859         False          False    True
3    1446.955859    1049.255859  2061.674072  1446.955859     497.7  1049.255859        0.0    397.7           297.7     3.0      1049.255859         False          False    True
4    1547.455859    1249.255859  2061.674072  1547.455859     498.2  1249.255859        0.0    298.2           298.2     2.0      1049.255859         False          False    True
5    1747.955859    1249.255859  2061.674072  1747.955859     498.7  1249.255859        0.0    498.7           398.7     2.0      1049.255859         False          False    True
6    1748.455859    1448.255859  2061.674072  1748.455859     499.2  1448.255859        0.0    300.2           299.2     3.0      1049.255859         False          False    True
7    1947.955859    1547.855859  2061.674072  1947.955859     499.7  1547.855859        0.0    400.1           398.7     3.0      1049.255859         False          False    True
8    2048.055859    1549.255859  2061.674072  2048.055859     500.2  1549.255859        0.1    498.7           398.7     4.0      1049.255859         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3987/10.[0m
[08/10 16:30:35]  --------------------------------------------------------------------------------
[08/10 16:30:35]  Iteration: 154 (0 solution, 153 counterexamples)
[08/10 16:31:07]  Generator returned sat in 27.292206 secs.
[08/10 16:31:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:31:08]  Improved gap from 1/1200 to 39.0625
[08/10 16:31:09]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 16:31:09]  Verifer returned sat in 0.927473 secs.
[08/10 16:31:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     575.530762     575.530762  2061.674072   575.530762    0.050000   575.530762        0.0    0.000000       -0.149658     2.0       575.530762            -1             -1    True
1     871.143066     575.680664  2061.674072   871.143066  295.612305   575.680664        0.0  295.462402      195.462646     1.0       575.530762         False          False    True
2     871.243164     775.680420  2061.674072   871.243164  295.562500   775.680420        0.0   95.562744       95.562744     2.0       871.243164         False          False    True
3     871.243164     871.192871  2061.674072   871.243164   71.775146   871.192871        0.0    0.050293       -4.437256     2.0       871.243164         False          False    True
4     942.968018     942.917969  2061.674072   942.968018   71.775146   942.917969        0.0    0.050049      -32.712402     1.0       871.243164         False          False    True
5    1014.693115     975.680420  2122.611572  1014.693115   71.775146   975.680420        0.0   39.012695       -0.049805     1.0       871.243164         False          False    True
6    1047.455566    1014.743164  2183.548828  1047.455566   71.775146  1014.743164        0.0   32.712402       -6.350098     1.0       871.243164         False          False    True
7    1086.518311    1053.805664  2244.486328  1086.518311   71.775146  1053.805664        0.0   32.712646       -6.349854     1.0       871.243164         False          False    True
8    1125.580811    1092.868164  2244.486572  1125.580811   71.775146  1092.868164        0.0   32.712646      -67.287109     1.0       871.243164         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=800819/4096.[0m
[08/10 16:31:09]  --------------------------------------------------------------------------------
[08/10 16:31:09]  Iteration: 155 (0 solution, 154 counterexamples)
[08/10 16:31:24]  Generator returned sat in 9.375982 secs.
[08/10 16:31:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:31:25]  Improved gap from 79027/2048 to 39.0625
[08/10 16:31:25]  Improved number of small numbers from 69 to 114 out of a max of 114
[08/10 16:31:25]  Verifer returned sat in 1.038434 secs.
[08/10 16:31:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -278.299316    -278.299316  2061.674072  -278.299316  200.150000  -278.299316   0.000000    0.000000       -0.199951     2.0      -278.299316            -1             -1    True
1     -78.149170    -178.099609  2061.674072   -78.149170  200.150146  -178.099609   0.000000   99.950439       99.950195     1.0      -278.299316         False          False    True
2      22.000488     -78.099609  2061.674072    22.000488  200.100098   -78.099609   0.049805  100.050293      100.050049     1.0        21.950684         False          False    True
3      22.000488      21.900635  2061.674072    22.000488   72.775146    21.900635   0.049805    0.050049        0.050049     2.0        21.950684         False          False    True
4      94.225586      89.138184  2061.674072    94.225586   72.275146    89.138184   0.049805    5.037598      -27.724854     1.0        21.950684         False          False    True
5     160.963135     121.900635  2122.611572   160.963135   71.775146   121.900635   0.049805   39.012695       -0.049805     1.0        21.950684         False          False    True
6     193.225586     160.963135  2183.549072   193.225586   71.275146   160.963135   0.049805   32.212646       -6.849854     1.0        21.950684         False          False    True
7     231.788086     200.025635  2244.486572   231.788086   70.775146   200.025635   0.049805   31.712646       -7.349854     1.0        21.950684         False          False    True
8     270.350586     239.088135  2244.486572   270.350586   70.275146   239.088135   0.049805   31.212646      -68.787354     1.0        21.950684         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=409805/4096.[0m
[08/10 16:31:26]  --------------------------------------------------------------------------------
[08/10 16:31:26]  Iteration: 156 (0 solution, 155 counterexamples)
[08/10 16:31:44]  Generator returned sat in 13.045277 secs.
[08/10 16:31:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:31:45]  Improved gap from 1/10 to 35.9375
[08/10 16:31:46]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/10 16:31:46]  Verifer returned sat in 1.171280 secs.
[08/10 16:31:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -473.724609    -473.924561  1858.198975  -473.724609  100.100000  -473.924561   0.099854   0.100098        0.099854     1.0      -473.924561            -1             -1     -1
1    -373.724609    -373.924316  1858.198975  -373.724609  100.100098  -373.924316   0.099854   0.099854        0.099854     1.0      -473.924561         False          False   True
2    -337.987061    -373.924316  1922.261475  -337.987061   35.837402  -373.924316   0.099854  35.837402       -0.100098     1.0      -338.086914         False          False   True
3    -292.924316    -337.986816  1943.461670  -292.924316   80.900146  -337.986816   0.099854  44.962646      -33.837158     1.0      -338.086914         False          False   True
4    -258.986816    -259.186768  2007.523926  -258.986816   78.900146  -259.186768   0.099854   0.100098      -35.837402     1.0      -338.086914         False          False   True
5    -182.186768    -220.124512  2066.461670  -182.186768   76.900146  -220.124512   0.099854  37.837891       -0.099609     1.0      -338.086914         False          False   True
6    -145.124512    -182.187012  2129.499023  -145.124512   74.900146  -182.187012   0.099854  36.962646        0.000000     1.0      -338.086914         False          False   True
7    -109.187012    -145.224365  2193.561523  -109.187012   72.900146  -145.224365   0.099854  35.937500        0.000000     2.0      -338.086914         False          False   True
8    -109.187012    -109.286865  2257.624023  -109.187012    1.500000  -109.286865   0.099854   0.000000      -35.937500     2.0      -109.286865          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=205/1024.[0m
[08/10 16:31:46]  --------------------------------------------------------------------------------
[08/10 16:31:46]  Iteration: 157 (0 solution, 156 counterexamples)
[08/10 16:32:51]  Generator returned sat in 58.899611 secs.
[08/10 16:32:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:32:52]  Improved gap from 89865/4096 to 100
[08/10 16:32:53]  Improved number of small numbers from 99 to 99 out of a max of 114
[08/10 16:32:53]  Verifer returned sat in 1.937988 secs.
[08/10 16:32:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -373.824609    -577.524609  1861.799268  -373.824609    0.100000  -577.524609        0.0  203.700000      103.700000     9.0      -577.524609            -1             -1     -1
1    -373.724609    -377.524609  1861.799268  -373.724609  203.800000  -377.524609        0.1    3.700000        3.700000     9.0      -577.524609         False           True  False
2    -273.824609    -377.524609  1861.799268  -273.824609  103.600000  -377.524609        0.1  103.600000        3.600000     9.0      -273.924609          True           True   True
3    -173.824609    -177.524609  1861.799268  -173.824609  203.600000  -177.524609        0.1    3.600000        3.600000     1.0      -273.924609         False           True  False
4     -73.624609     -77.524609  1861.799268   -73.624609  103.800000   -77.524609        0.2    3.700000        3.700000     1.0      -273.924609         False          False  False
5     -23.424609     -40.324609  1861.799268   -23.424609   53.900000   -40.324609        0.2   16.700000      -46.100000     1.0      -273.924609         False          False   True
6     126.475391     107.808724  1861.799268   126.475391  166.600000   107.808724        0.3   18.366667        3.700000     1.0      -273.924609         False          False   True
7     193.408724     193.008724  1861.799268   193.408724   85.300000   193.008724        0.3    0.100000      -29.366667     1.0      -273.924609         False          False   True
8     326.575391     222.475391  1861.799268   326.575391  133.266667   222.475391        0.4  103.700000        3.700000     1.0      -273.924609         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=37/10.[0m
[08/10 16:32:53]  --------------------------------------------------------------------------------
[08/10 16:32:53]  Iteration: 158 (0 solution, 157 counterexamples)
[08/10 16:35:34]  Generator returned sat in 154.788572 secs.
[08/10 16:35:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:35:36]  Improved gap from 0 to 23.4375
[08/10 16:35:36]  Improved number of small numbers from 78 to 99 out of a max of 114
[08/10 16:35:36]  Verifer returned sat in 2.330220 secs.
[08/10 16:35:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -243.674316    -443.574463  1727.849121  -243.674316    0.099854  -443.574463     0.0000  199.900146       99.900146     2.0      -443.574463            -1             -1   False
1    -223.137207    -243.574463  1727.849121  -223.137207  220.437256  -243.574463     0.0000   20.437256       20.437256     1.0      -443.574463         False          False   False
2    -199.599365    -223.036865  1783.874023  -199.599365   43.975098  -223.036865     0.0000   23.437500        0.000000     1.0      -199.599365         False          False   False
3    -199.399414    -199.499463  1783.874121  -199.399414   23.637451  -199.499463     0.0000    0.100049      -99.799951     1.0      -199.399414         False          False   False
4      44.575537       0.400537  1783.874121    44.575537  244.075000     0.400537    20.7375   23.437500       23.437500     1.0      -199.399414         False          False   False
5     144.675537      23.938232  1783.874121   144.675537  123.537500    23.938232    20.8375   99.899805       23.437500     1.0      -199.399414         False          False    True
6     144.675537     100.400537  1860.436621   144.675537   63.268750   100.400537    20.8375   23.437500        0.000000     2.0      -199.399414         False          False    True
7     144.675537     123.838037  1936.999023   144.675537    1.000000   123.838037    20.8375    0.000000      -23.437598     3.0      -199.399414         False          False    True
8     268.113037     147.275635  1936.999023   268.113037  123.437500   147.275635    20.8375   99.999902       -0.000098     1.0       247.275537          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/10 16:35:37]  --------------------------------------------------------------------------------
[08/10 16:35:37]  Iteration: 159 (0 solution, 158 counterexamples)
[08/10 16:36:36]  Generator returned sat in 53.755995 secs.
[08/10 16:36:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:36:37]  Improved gap from 791/80 to 23.4375
[08/10 16:36:38]  Improved number of small numbers from 60 to 70 out of a max of 114
[08/10 16:36:38]  Verifer returned sat in 1.756815 secs.
[08/10 16:36:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0      47.140625    -152.809463  1437.084121    47.140625      0.05  -152.809463       0.00  199.950088       99.950088     9.0      -152.809463            -1             -1     -1
1      47.340537      47.190537  1437.084121    47.340537    200.15    47.190537       0.05    0.100000        0.100000     1.0      -152.809463         False           True  False
2     147.290537     147.190537  1437.084121   147.290537    100.05   147.190537       0.05    0.050000        0.050000     1.0       147.240537         False          False   True
3     962.040537     147.190537  1437.084121   962.040537    814.80   147.190537     714.75  100.100000        0.100000     1.0       147.240537         False          False   True
4    1270.340537     347.190537  1437.084121  1270.340537    408.40   347.190537     923.05    0.100000        0.100000     1.0       147.240537         False          False   True
5    1475.440537     347.190674  1437.084121  1475.440537    205.20   347.190674    1028.15  100.099863        0.100000     2.0       147.240537         False          False   True
6    1478.940674     447.340537  1513.496582  1478.940674    103.60   447.340537    1028.15    3.450137      -19.987402     1.0       147.240537         False          False   True
7    1525.290537     470.778076  1587.134121  1525.290537     49.80   470.778076    1028.15   26.362461        0.000000     1.0       147.240537         False          False   True
8    1525.290537     497.140537  1587.134277  1525.290537     22.90   497.140537    1028.15    0.000000      -99.999844     2.0       147.240537         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/10.[0m
[08/10 16:36:39]  --------------------------------------------------------------------------------
[08/10 16:36:39]  Iteration: 160 (0 solution, 159 counterexamples)
[08/10 16:37:17]  Generator returned sat in 33.091058 secs.
[08/10 16:37:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:37:18]  Improved gap from 1/1200 to 0
[08/10 16:37:19]  Improved number of small numbers from 60 to 93 out of a max of 114
[08/10 16:37:19]  Verifer returned sat in 1.507598 secs.
[08/10 16:37:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     375.840332     275.840332  1108.434082   375.840332    0.100000   275.840332        0.0  100.000000       99.999756     5.0       275.840332            -1             -1   False
1     375.840332     375.740479  1108.434121   375.840332    0.100000   375.740479        0.0    0.099854       -0.000205     5.0       275.840332         False          False   False
2     475.840332     375.840537  1108.434121   475.840332  100.099854   375.840537        0.0   99.999795       -0.000205     1.0       275.840332         False          False   False
3     962.040537     575.840537  1108.434121   962.040537  586.200000   575.840537      386.0    0.200000        0.200000     1.0       275.840332         False          False   False
4    1256.440537     627.340537  1108.434121  1256.440537  294.600000   627.340537      580.4   48.700000        0.200000     1.0       275.840332         False          False    True
5    1356.540537     700.340537  1108.434121  1356.540537  148.800000   700.340537      580.5   75.700000        0.200000     1.0       275.840332         False          False    True
6    1356.740537     776.140625  1208.033936  1356.740537   75.900000   776.140625      580.5    0.099912       -0.000186     1.0       275.840332         False          False    True
7    1357.640625     776.340576  1307.134033  1357.640625    1.000000   776.340576      580.5    0.800049        0.000000     1.0       275.840332         False          False    True
8    1357.840576     777.240723  1307.134033  1357.840576    1.000000   777.240723      580.5    0.099854      -99.800049     1.0       275.840332         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=1/5.[0m
[08/10 16:37:19]  --------------------------------------------------------------------------------
[08/10 16:37:19]  Iteration: 161 (0 solution, 160 counterexamples)
[08/10 16:38:05]  Generator returned sat in 39.897530 secs.
[08/10 16:38:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:38:05]  Improved gap from 1/40 to 100
[08/10 16:38:07]  Improved number of small numbers from 66 to 70 out of a max of 114
[08/10 16:38:07]  Verifer returned sat in 1.435999 secs.
[08/10 16:38:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     575.590332     475.540332  908.734326   575.590332     0.100098   475.540332    0.050000  100.000000      100.000000     1.0       475.540332            -1             -1     -1
1     575.590332     475.540332  908.734326   575.590332     0.050049   475.540332    0.050000  100.000000        0.000000     1.0       575.540332         False          False   True
2     708.673584     675.540332  908.734326   708.673584   233.083252   675.540332    0.050000   33.083252       33.083252     1.0       575.540332         False          False   True
3     708.773665     708.673665  908.734326   708.773665    33.183333   708.673665    0.050000    0.050000      -66.816667     1.0       708.723665         False          False   True
4     775.590332     775.540332  908.734326   775.590332    66.866667   775.540332    0.050000    0.000000     -100.000000     1.0       708.723665         False          False   True
5     909.823665     906.523665  908.734326   909.823665   134.233333   906.523665    0.050000    3.250000      -65.766667     1.0       708.723665         False          False   True
6    1175.540332    1037.156999  908.734326  1175.540332   268.966667  1037.156999    0.050000  138.333333       99.950000     1.0       708.723665         False          False   True
7    1575.640332    1175.540332  908.734326  1575.640332   538.433333  1175.540332    0.050000  400.050000      400.050000     1.0       708.723665         False          False   True
8    2252.956999    1275.540283  908.734326  2252.956999  1077.366667  1275.540283  577.316667  400.100049      400.100000     2.0       708.723665         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=4001/10.[0m
[08/10 16:38:07]  --------------------------------------------------------------------------------
[08/10 16:38:07]  Iteration: 162 (0 solution, 161 counterexamples)
[08/10 16:39:30]  Generator returned sat in 77.771026 secs.
[08/10 16:39:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:39:31]  Improved gap from 1989/20 to 100
[08/10 16:39:31]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/10 16:39:31]  Verifer returned sat in 0.573787 secs.
[08/10 16:39:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     146.190430      46.290283  1237.984131   146.190430  199.999756    46.290283   0.000000  99.900146       -0.099854     2.0        46.290283            -1             -1   False
1     246.190430     146.290283  1237.984131   246.190430  199.900146   146.290283   0.000000  99.900146       -0.099854     1.0       246.190430         False          False   False
2     346.090088     246.290283  1237.984131   346.090088  199.799805   246.290283   0.000000  99.799805       -0.200195     1.0       346.090088         False          False   False
3     445.990234     346.290283  1237.984131   445.990234  199.699951   346.290283   0.000000  99.699951       -0.300049     1.0       445.990234         False          False   False
4     497.290283     479.156982  1237.984131   497.290283  151.000000   479.156982   0.000000  18.133301      -49.000000     1.0       445.990234         False          False   False
5     646.590332     580.657227  1237.984131   646.590332  167.433350   580.657227   0.099854  65.833252        0.200195     1.0       445.990234         False          False   False
6     746.690430     682.156982  1237.984131   746.690430  165.933350   682.156982   0.199951  64.333496        0.200195     1.0       445.990234         False          False    True
7     846.790283     746.590332  1237.984131   846.790283  164.433350   746.590332   0.299805  99.900146        0.200195     1.0       445.990234         False          False    True
8     909.823486     846.290283  1237.984131   909.823486  162.933350   846.290283   0.299805  63.233398      -36.766602     2.0       445.990234         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=205/1024.[0m
[08/10 16:39:32]  --------------------------------------------------------------------------------
[08/10 16:39:32]  Iteration: 163 (0 solution, 162 counterexamples)
[08/10 16:40:03]  Generator returned sat in 25.658397 secs.
[08/10 16:40:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:40:04]  Improved gap from 1/10 to 0
[08/10 16:40:05]  Improved number of small numbers from 73 to 114 out of a max of 114
[08/10 16:40:05]  Verifer returned sat in 0.897833 secs.
[08/10 16:40:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     146.190430     -53.659668  1237.984131   146.190430  199.850000   -53.659668   0.000000  199.850098      199.850098     9.0       -53.659668            -1             -1     -1
1     146.190430     -53.359375  1237.984131   146.190430  199.799805   -53.359375   0.000000  199.549805       99.850098     9.0       146.190430         False           True  False
2     146.390381     146.340332  1237.984131   146.390381  199.749756   146.340332   0.000000    0.050049        0.050049     1.0       146.390381         False           True  False
3     347.340332     146.340332  1237.984131   347.340332  201.000000   146.340332   1.100098  199.899902       99.899902     1.0       146.390381         False          False  False
4     347.440430     346.290283  1237.984131   347.440430  200.000000   346.290283   1.100098    0.050049        0.000000     1.0       146.390381         False          False   True
5     348.390381     347.240479  1336.134277   348.390381    1.000000   347.240479   1.100098    0.049805       -0.899902     1.0       146.390381         False          False   True
6     349.340576     348.190186  1436.034180   349.340576    1.000000   348.190186   1.100098    0.050293       -0.049805     1.0       146.390381         False          False   True
7     350.290283     348.290283  1535.134033   350.290283    1.000000   348.290283   1.100098    0.899902       -0.000244     1.0       146.390381         False          False   True
8     350.390381     349.240479  1535.134277   350.390381    1.000000   349.240479   1.100098    0.049805      -99.899902     1.0       146.390381         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=204595/2048.[0m
[08/10 16:40:05]  --------------------------------------------------------------------------------
[08/10 16:40:05]  Iteration: 164 (0 solution, 163 counterexamples)
[08/10 16:41:46]  Generator returned sat in 94.541604 secs.
[08/10 16:41:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:41:49]  Improved gap from 1/5 to 10.9375
[08/10 16:41:50]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/10 16:41:50]  Verifer returned sat in 3.400301 secs.
[08/10 16:41:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2557.855957    2557.767334 -1373.442871  2557.855957    0.044434  2557.767334    0.000000   0.088623        0.088623     7.0      2557.767334            -1             -1     -1
1    2568.793213    2557.900391 -1284.513428  2568.793213   11.025879  2557.900391    0.000000  10.892822       -0.044678     1.0      2557.767334         False           True  False
2    2568.882080    2568.837891 -1273.544678  2568.882080   10.981689  2568.837891    0.000000   0.044189      -88.987061     1.0      2568.882080         False          False  False
3    2663.132080    2658.400146 -1273.544678  2663.132080   94.294189  2658.400146    0.000000   4.731934      -94.737061     1.0      2568.882080         False          False  False
4    2758.532959    2758.156738 -1273.544678  2758.532959  100.132812  2758.156738    0.000000   0.376221      -99.336182     1.0      2568.882080         False          False  False
5    2957.913086    2957.869141 -1273.544678  2957.913086  199.756348  2957.869141    0.000000   0.043945        0.043945     1.0      2568.882080         False          False  False
6    3346.400391    3057.869141 -1273.544678  3346.400391  388.531250  3057.869141  288.442627   0.088623        0.088623     1.0      2568.882080         False          False  False
7    3542.577393    3157.869141 -1273.544678  3542.577393  196.265625  3157.869141  384.619629   0.088623        0.088623     1.0      2568.882080         False          False   True
8    3642.621582    3158.001953 -1273.544678  3642.621582  100.132812  3158.001953  384.663818  99.955811        0.088623     1.0      2568.882080         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=363/4096.[0m
[08/10 16:41:51]  --------------------------------------------------------------------------------
[08/10 16:41:51]  Iteration: 165 (0 solution, 164 counterexamples)
[08/10 16:42:06]  Generator returned sat in 9.991866 secs.
[08/10 16:42:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:42:10]  Improved gap from 36445/4096 to 10.9375
[08/10 16:42:11]  Improved number of small numbers from 70 to 80 out of a max of 114
[08/10 16:42:11]  Verifer returned sat in 3.988794 secs.
[08/10 16:42:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2125.678223    2125.650391 -1215.741699  2125.678223    0.028076  2125.650391    0.000000   0.027832        0.027631     3.0      2125.650391            -1             -1   False
1    2136.643799    2125.706312 -1126.734919  2136.643799   10.993408  2125.706312    0.000000  10.937487       -0.000013     1.0      2125.650391         False          False   False
2    2226.594470    2136.643812 -1116.713623  2226.594470  100.888158  2136.643812    0.000000  89.950658       -0.028046     1.0      2125.650391         False          False   False
3    2326.622430    2226.622559 -1116.713537  2326.622430  189.978618  2226.622559    0.000000  99.999872        0.000000     1.0      2125.650391         False          False   False
4    2326.622430    2326.622430 -1116.713537  2326.622430   99.972168  2326.622430    0.000000   0.000000     -100.000000     2.0      2125.650391         False          False   False
5    2526.538549    2526.510588 -1116.713537  2526.538549  199.916118  2526.510588    0.000000   0.027961       -0.083882     1.0      2125.650391         False          False   False
6    2915.377364    2530.272924 -1116.713537  2915.377364  388.866776  2530.272924  288.699013  96.405428        0.055921     1.0      2125.650391         False          False   False
7    3015.405325    2726.622430 -1116.713537  3015.405325  196.433388  2726.622430  288.726974   0.055921        0.055921     1.0      2125.650391         False          False    True
8    3115.566098    2726.706299 -1116.713537  3115.566098  100.216694  2726.706299  288.887747  99.972052        0.055921     1.0      2125.650391         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=17/304.[0m
[08/10 16:42:11]  --------------------------------------------------------------------------------
[08/10 16:42:11]  Iteration: 166 (0 solution, 165 counterexamples)
[08/10 16:42:33]  Generator returned sat in 15.875685 secs.
[08/10 16:42:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:42:34]  Improved gap from 115/16384 to 0
[08/10 16:42:35]  Improved number of small numbers from 59 to 69 out of a max of 114
[08/10 16:42:35]  Verifer returned sat in 1.120858 secs.
[08/10 16:42:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     419.496098      19.493598   890.415295   419.496098    0.027832    19.493598    0.00125  400.001250      400.001250     6.0        19.493598            -1             -1     -1
1     419.497348     119.493408   890.415295   419.497348  400.002500   119.493408    0.00250  300.001440      300.001250     7.0        19.493598         False          False   True
2     419.497348     119.493598   890.415295   419.497348  300.001250   119.493598    0.00250  300.001250      200.001250     6.0       419.494848          True           True   True
3     419.497348     319.493408   890.415295   419.497348  300.001250   319.493408    0.00250  100.001440      100.001250     6.0       419.494848         False          False   True
4     419.497348     417.993408   890.415295   419.497348    1.500000   417.993408    0.00250    1.501440        0.001250     6.0       419.494848         False          False   True
5     419.497348     419.493598   990.414045   419.497348    1.500000   419.493598    0.00250    0.001250        0.000000     6.0       419.494848         False          False   True
6     420.996098     419.494848  1088.915295   420.996098    1.500000   419.494848    0.00250    1.498750        0.000000     7.0       419.494848         False          False   True
7     420.996098     420.993598  1188.915283   420.996098    0.010000   420.993598    0.00250    0.000000       -0.000012     2.0       419.494848         False           True  False
8     421.006098     420.994873  1288.905273   421.006098    0.010000   420.994873    0.00250    0.008725       -0.000021     1.0       419.494848         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=240001/800.[0m
[08/10 16:42:35]  --------------------------------------------------------------------------------
[08/10 16:42:35]  Iteration: 167 (0 solution, 166 counterexamples)
[08/10 16:44:20]  Generator returned sat in 99.059262 secs.
[08/10 16:44:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:44:21]  Improved gap from 0 to 100
[08/10 16:44:21]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 16:44:21]  Verifer returned sat in 0.737019 secs.
[08/10 16:44:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0      13.493652     -86.656494  996.565186    13.493652    0.049805   -86.656494   0.050049  100.100098      100.100098     9.0       -86.656494            -1             -1     -1
1      13.493652      13.343506  996.565186    13.493652    0.050000    13.343506   0.050049    0.100098        0.100098     2.0       -86.656494         False           True   True
2      13.493652      13.343506  996.565186    13.493652    0.050000    13.343506   0.050049    0.100098      -99.899902     2.0       -86.656494         False          False   True
3     411.043701     115.143555  996.565186   411.043701  397.650146   115.143555   0.050049  295.850098      197.650146     1.0       -86.656494         False          False   True
4     513.343750     214.643555  996.565186   513.343750  398.150146   214.643555   0.050049  298.650146      199.950195     2.0       -86.656494         False          False   True
5     613.343750     411.043457  996.565186   613.343750  398.650146   411.043457   0.050049  202.250244      199.950195     2.0       -86.656494         False          False   True
6     810.243652     513.343506  996.565186   810.243652  399.150146   513.343506   0.050049  296.850098      296.850098     2.0       -86.656494         False          False   True
7     913.043701     613.343506  996.565186   913.043701  399.650146   613.343506   0.050049  299.650146      299.650146     2.0       -86.656494         False          False   True
8    1013.543701     613.393555  996.565186  1013.543701  400.150146   613.393555   0.100098  400.050049      300.100098     3.0       -86.656494         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=614605/2048.[0m
[08/10 16:44:22]  --------------------------------------------------------------------------------
[08/10 16:44:22]  Iteration: 168 (0 solution, 167 counterexamples)
[08/10 16:45:11]  Generator returned sat in 43.595832 secs.
[08/10 16:45:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:45:13]  Improved number of small numbers from 73 to 85 out of a max of 113
[08/10 16:45:13]  Verifer returned sat in 1.159862 secs.
[08/10 16:45:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2073.131348   -2473.131445  996.565186 -2073.131348     0.050049 -2473.131445      0.000   400.000098      400.000098     7.0     -2473.131445            -1             -1   False
1   -2073.131348   -2373.131592  996.565186 -2073.131348     0.050049 -2373.131592      0.000   300.000244      300.000098     7.0     -2473.131445         False          False   False
2   -2073.131348   -2273.131445  996.565186 -2073.131348   299.950000 -2273.131445      0.000   200.000098      200.000098     8.0     -2473.131445         False          False   False
3   -1866.864779   -2173.131445  996.565186 -1866.864779   406.266667 -2173.131445      0.000   306.266667      306.266667     7.0     -2473.131445          True           True   False
4    -964.731445   -2073.181396  996.565186  -964.731445  1208.400000 -2073.181396      0.050  1108.399951     1108.350000     8.0     -2473.131445         False          False   False
5    -964.731445   -2073.131445  996.565186  -964.731445   606.200000 -2073.131445      0.050  1108.350000     1008.350000     9.0      -964.781445          True           True    True
6    -764.781445   -1947.456445  996.565186  -764.781445  1308.300000 -1947.456445      0.050  1182.625000     1108.300000     4.0      -964.781445         False           True   False
7     465.393555   -1773.131445  996.565186   465.393555  2412.800000 -1773.131445   1130.175  1108.350000     1108.350000     4.0      -964.781445         False          False   False
8     565.443555   -1673.131592  996.565186   565.443555  1208.400000 -1673.131592   1130.225  1108.350146     1108.350000     5.0      -964.781445         False          False    True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=22167/20.[0m
[08/10 16:45:14]  --------------------------------------------------------------------------------
[08/10 16:45:14]  Iteration: 169 (0 solution, 168 counterexamples)
[08/10 16:45:30]  Generator returned sat in 10.355691 secs.
[08/10 16:45:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:45:32]  Improved number of small numbers from 70 to 84 out of a max of 113
[08/10 16:45:32]  Verifer returned sat in 1.256446 secs.
[08/10 16:45:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2273.031250   -2872.981201  1296.415088 -2273.031250     0.049805 -2872.981201       0.00  599.949951      499.950098     7.0     -2872.981201            -1             -1    True
1   -2273.031250   -2672.981348  1296.415088 -2273.031250   599.900146 -2672.981348       0.00  399.950098      399.950098     8.0     -2872.981201         False          False    True
2   -2073.131348   -2672.931348  1296.415088 -2073.131348   599.850000 -2672.931348       0.05  599.750000      499.800000     7.0     -2073.181348          True           True   False
3   -2070.881592   -2572.981201  1296.415088 -2070.881592   601.999756 -2572.981201       0.05  502.049609      402.049756     7.0     -2073.181348         False          False    True
4   -2070.881592   -2472.981348  1296.415088 -2070.881592     2.000000 -2472.981348       0.05  402.049756      302.049756     8.0     -2073.181348         False          False    True
5   -2070.881592   -2272.981348  1296.415088 -2070.881592   402.000000 -2272.981348       0.05  202.049756      202.049756     4.0     -2073.181348         False           True   False
6    -871.031348   -2172.981348  1296.415088  -871.031348  1401.900000 -2172.981348     802.15  499.800000      499.800000     5.0     -2073.181348         False          False   False
7    -668.381348   -2072.981445  1296.415088  -668.381348   702.450000 -2072.981445     904.80  499.800098      499.800000     5.0     -2073.181348         False          False    True
8    -668.381348   -1972.981445  1296.415088  -668.381348   352.725000 -1972.981445     904.80  399.800098      399.800000     3.0     -2073.181348         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=2, buffer=2499/5.[0m
[08/10 16:45:32]  --------------------------------------------------------------------------------
[08/10 16:45:32]  Iteration: 170 (0 solution, 169 counterexamples)
[08/10 16:46:36]  Generator returned sat in 57.670636 secs.
[08/10 16:46:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:46:37]  Improved gap from 1/40 to 23.4375
[08/10 16:46:38]  Improved number of small numbers from 69 to 78 out of a max of 114
[08/10 16:46:38]  Verifer returned sat in 1.513641 secs.
[08/10 16:46:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2175.131348   -2371.312988  1296.415088 -2175.131348    0.045654 -2371.312988   0.045455  196.136186       96.136364     4.0     -2371.312988            -1             -1     -1
1   -2175.131348   -2175.222257  1296.415088 -2175.131348  102.090820 -2175.222257   0.045455    0.045455       -3.863636     5.0     -2371.312988         False          False   True
2   -2073.131348   -2073.222257  1296.415088 -2073.131348  102.045455 -2073.222257   0.045455    0.045455       -1.863636     1.0     -2073.176802          True           True  False
3   -1971.131348   -1971.313166  1296.415088 -1971.131348  102.045455 -1971.313166   0.090909    0.090909        0.090909     1.0     -2073.176802         False          False  False
4   -1869.676802   -1871.313166  1296.415088 -1869.676802  101.545455 -1871.313166   1.545455    0.090909        0.090909     1.0     -2073.176802         False          False   True
5   -1768.722257   -1871.176802  1296.415088 -1768.722257  101.045455 -1871.176802   2.500000   99.954545        0.090909     1.0     -2073.176802         False          False   True
6   -1768.131348   -1771.176802  1369.898193 -1768.131348  100.545455 -1771.176802   2.500000    0.545455      -25.835076     1.0     -2073.176802         False          False   True
7   -1718.904075   -1744.796120  1446.460449 -1718.904075   49.772727 -1744.796120   2.500000   23.392045       -0.045548     1.0     -2073.176802         False          False   True
8   -1717.909757   -1721.358398  1446.460693 -1717.909757   24.386364 -1721.358398   2.500000    0.948642      -99.050985     1.0     -2073.176802         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/11.[0m
[08/10 16:46:39]  --------------------------------------------------------------------------------
[08/10 16:46:39]  Iteration: 171 (0 solution, 170 counterexamples)
[08/10 16:47:06]  Generator returned sat in 21.040452 secs.
[08/10 16:47:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:47:07]  Improved gap from 94053/4096 to 23.4375
[08/10 16:47:08]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/10 16:47:08]  Verifer returned sat in 1.504083 secs.
[08/10 16:47:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2870.931396   -2966.543701  1296.415039 -2870.931396    0.012451 -2966.543701   0.000000   95.612305       95.612305     3.0     -2966.543701            -1             -1   False
1   -2868.056396   -2870.918945  1296.415039 -2868.056396   98.487305 -2870.918945   0.000000    2.862549       -1.512695     1.0     -2966.543701         False          False   False
2   -2766.531250   -2768.031494  1296.415039 -2766.531250  104.387695 -2768.031494   0.000000    1.500244        0.012451     1.0     -2966.543701         False          False   False
3   -2663.656494   -2667.531250  1296.415039 -2663.656494  104.375000 -2667.531250   2.862305    1.012451        0.024902     1.0     -2666.518799         False          False   False
4   -2560.793945   -2566.543701  1296.415039 -2560.793945  103.875000 -2566.543701   5.724854    0.024902        0.024902     1.0     -2666.518799         False          False    True
5   -2457.443848   -2566.531250  1296.415039 -2457.443848  103.375000 -2566.531250   9.074951  100.012451        0.024902     2.0     -2666.518799         False          False    True
6   -2454.581299   -2466.506348  1372.940186 -2454.581299  102.875000 -2466.506348   9.074951    2.850098      -20.587402     1.0     -2666.518799         False          False    True
7   -2407.493896   -2439.993896  1446.427734 -2407.493896   49.937500 -2439.993896   9.074951   23.425049       -0.012451     1.0     -2666.518799         False          False    True
8   -2407.450195   -2416.556396  1446.427734 -2407.450195   23.468750 -2416.556396   9.074951    0.031250      -99.968750     1.0     -2666.518799         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=51/2048.[0m
[08/10 16:47:08]  --------------------------------------------------------------------------------
[08/10 16:47:08]  Iteration: 172 (0 solution, 171 counterexamples)
[08/10 16:48:59]  Generator returned sat in 104.950999 secs.
[08/10 16:49:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:49:01]  Improved gap from 0 to 14.0625
[08/10 16:49:02]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 16:49:02]  Verifer returned sat in 1.858104 secs.
[08/10 16:49:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2870.931396   -2870.931396  1200.802490 -2870.931396    0.300000 -2870.931396        0.0    0.000000       -0.000244     9.0     -2870.931396            -1             -1     -1
1   -2870.731201   -2870.831299  1286.440430 -2870.731201    0.200195 -2870.831299        0.0    0.100098      -14.162109     1.0     -2870.731201         False           True  False
2   -2429.343750   -2848.443848  1286.440430 -2429.343750  441.487549 -2848.443848        0.0  419.100098      327.225342     1.0     -2870.731201         False          False  False
3   -2429.343750   -2656.569092  1286.440430 -2429.343750  419.000000 -2656.569092        0.0  227.225342      227.225342     2.0     -2429.343750         False          False  False
4   -2429.343750   -2556.569092  1286.440430 -2429.343750  210.000000 -2556.569092        0.0  127.225342      127.225342     3.0     -2429.343750         False          False  False
5   -2429.343750   -2482.693848  1286.440430 -2429.343750  105.500000 -2482.693848        0.0   53.350098       27.225342     4.0     -2429.343750         False          False  False
6   -2429.343750   -2456.569092  1359.215088 -2429.343750   53.250000 -2456.569092        0.0   27.225342        0.000000     5.0     -2429.343750         False           True  False
7   -2429.343750   -2429.343750  1445.152588 -2429.343750   27.125000 -2429.343750        0.0    0.000000      -14.062500     6.0     -2429.343750         False           True  False
8   -2415.281250   -2415.281250  1445.152832 -2415.281250   14.062500 -2415.281250        0.0    0.000000      -99.999756     1.0     -2429.343750         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=335181/1024.[0m
[08/10 16:49:02]  --------------------------------------------------------------------------------
[08/10 16:49:02]  Iteration: 173 (0 solution, 172 counterexamples)
[08/10 16:50:12]  Generator returned sat in 63.751426 secs.
[08/10 16:50:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:50:12]  Improved gap from 0 to 100
[08/10 16:50:13]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/10 16:50:13]  Verifer returned sat in 0.623695 secs.
[08/10 16:50:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2809.069336   -2809.269287  1139.140381 -2809.069336    0.199951 -2809.269287    0.000000   0.199951        0.199951     8.0     -2809.269287            -1             -1   False
1   -2809.069336   -2809.269043  1139.140381 -2809.069336    0.099854 -2809.269043    0.000000   0.199707      -99.800049     8.0     -2809.069336         False          False   False
2   -2709.168945   -2709.269287  1139.140381 -2709.168945  100.100098 -2709.269287    0.000000   0.100342      -99.899658     1.0     -2809.069336         False          False   False
3   -2543.102539   -2543.202393  1139.140381 -2543.102539  166.166748 -2543.202393    0.000000   0.099854      -33.833252     1.0     -2809.069336         False          False   False
4   -2409.168945   -2476.469238  1139.140381 -2409.168945  134.033447 -2476.469238    0.000000  67.300293        0.100342     1.0     -2809.069336         False          False   False
5   -2309.069336   -2309.269287  1139.140381 -2309.069336  167.399902 -2309.269287    0.000000   0.199951        0.199951     1.0     -2809.069336         False          False   False
6   -2108.269287   -2209.269287  1139.140381 -2108.269287  201.000000 -2209.269287  100.800049   0.199951        0.199951     1.0     -2809.069336         False          False   False
7   -1909.469238   -2205.969238  1139.140381 -1909.469238  199.000000 -2205.969238  199.600098  96.899902        0.199951     1.0     -2809.069336         False          False    True
8   -1809.369141   -2108.969238  1139.140381 -1809.369141  197.000000 -2108.969238  199.700195  99.899902        0.199951     1.0     -2809.069336         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=819/4096.[0m
[08/10 16:50:13]  --------------------------------------------------------------------------------
[08/10 16:50:13]  Iteration: 174 (0 solution, 173 counterexamples)
[08/10 16:52:45]  Generator returned sat in 145.931102 secs.
[08/10 16:52:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:52:47]  Improved gap from 1/1200 to 17.1875
[08/10 16:52:47]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/10 16:52:47]  Verifer returned sat in 1.199432 secs.
[08/10 16:52:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2543.302734   -2643.702393   982.427734 -2543.302734    0.100098 -2643.702393   0.100098  100.299561       99.999756     2.0     -2643.702393            -1             -1     -1
1   -2543.302734   -2643.402588   982.427734 -2543.302734  100.200000 -2643.402588   0.100098   99.999756       -0.000244     3.0     -2643.702393         False          False   True
2   -2543.202637   -2543.402588   982.427734 -2543.202637  100.099854 -2543.402588   0.100098    0.099854      -99.900146     1.0     -2543.302734         False          False   True
3   -2117.302490   -2343.402588   982.427734 -2117.302490  426.000000 -2343.402588   0.100098  226.000000      226.000000     1.0     -2543.302734         False          False   True
4   -2117.302490   -2243.402588   982.427734 -2117.302490  215.000000 -2243.402588   0.100098  126.000000      126.000000     2.0     -2543.302734         False          False   True
5   -2117.302490   -2174.252441   982.427734 -2117.302490  109.500000 -2174.252441   0.100098   56.849854       26.000000     3.0     -2543.302734         False          False   True
6   -2117.302490   -2134.490234  1056.327637 -2117.302490   56.750000 -2134.490234   0.100098   17.087646       -0.100098     4.0     -2543.302734         False          False   True
7   -2104.015137   -2117.302490  1139.140137 -2104.015137   30.375000 -2117.302490   0.100098   13.187256       -4.000244     1.0     -2543.302734         False          False   True
8   -2100.014893   -2100.114990  1139.140381 -2100.014893   17.187500 -2100.114990   0.100098    0.000000      -99.999756     1.0     -2543.302734         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=2261/10.[0m
[08/10 16:52:47]  --------------------------------------------------------------------------------
[08/10 16:52:47]  Iteration: 175 (0 solution, 174 counterexamples)
[08/10 16:54:02]  Generator returned sat in 68.840149 secs.
[08/10 16:54:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:54:03]  Improved gap from 1/2400 to 48.4375
[08/10 16:54:04]  Improved number of small numbers from 84 to 95 out of a max of 114
[08/10 16:54:04]  Verifer returned sat in 1.316041 secs.
[08/10 16:54:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2690.840088   -2690.940186   879.302734 -2690.840088    0.100098 -2690.940186      0.000   0.100098        0.100000     5.0     -2690.940186            -1             -1     -1
1   -2690.840088   -2690.940088   930.865234 -2690.840088    0.049805 -2690.940088      0.000   0.100000      -48.337500     2.0     -2690.840088         False           True  False
2   -2545.452588   -2545.502588   930.865234 -2545.452588  145.487500 -2545.502588      0.000   0.050000       -2.950000     1.0     -2690.840088         False          False  False
3   -2400.015088   -2487.965088   930.865234 -2400.015088  145.487500 -2487.965088      0.000  87.950000       42.487500     1.0     -2690.840088         False          False  False
4   -2285.489990   -2342.552490   930.865234 -2285.489990  202.475098 -2342.552490     14.475  42.587500       42.537598     1.0     -2690.840088         False          False  False
5   -2285.489990   -2342.502588   982.427734 -2285.489990    1.500000 -2342.502588     14.475  42.537598       -5.899902     2.0     -2690.840088         False          False   True
6   -2227.527588   -2290.390088  1030.315186 -2227.527588  100.500000 -2290.390088     14.475  48.387500       -0.050049     1.0     -2690.840088         False          False   True
7   -2178.127588   -2241.952393  1080.965234 -2178.127588   97.787500 -2241.952393     14.475  49.349805        0.000000     1.0     -2690.840088         False          False   True
8   -2178.127588   -2192.602588  1080.965332 -2178.127588   49.300049 -2192.602588     14.475   0.000000      -99.999902     2.0     -2690.840088         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=87117/2048.[0m
[08/10 16:54:05]  --------------------------------------------------------------------------------
[08/10 16:54:05]  Iteration: 176 (0 solution, 175 counterexamples)
[08/10 16:54:39]  Generator returned sat in 27.950565 secs.
[08/10 16:54:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:54:39]  Improved gap from 0 to 0
[08/10 16:54:40]  Improved number of small numbers from 68 to 86 out of a max of 114
[08/10 16:54:40]  Verifer returned sat in 0.913263 secs.
[08/10 16:54:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2692.604463   -2692.606201   880.968506 -2692.604463    0.001250 -2692.606201   0.000625    0.001113        0.000625     9.0     -2692.606201            -1             -1     -1
1   -2692.604463   -2692.605713   880.975830 -2692.604463    0.000732 -2692.605713   0.000625    0.000625      -99.992051     9.0     -2692.605088         False           True   True
2   -2392.613213   -2492.613213   880.975830 -2392.613213  299.991875 -2492.613213   0.000625   99.999375       99.999199     1.0     -2692.605088         False           True  False
3   -2192.621338   -2392.613281   880.975830 -2192.621338  299.991250 -2392.613281   0.000625  199.991318      199.991074     1.0     -2192.621963         False          False  False
4   -2192.621338   -2292.613281   880.975830 -2192.621338    0.010000 -2292.613281   0.000625   99.991318       99.991074     2.0     -2192.621963         False          False  False
5   -2192.621338   -2192.622588   880.976074 -2192.621338    0.010000 -2192.622588   0.000625    0.000625       -0.008682     3.0     -2192.621963         False          False  False
6   -2192.611963   -2192.613213   980.975342 -2192.611963    0.010000 -2192.613213   0.000625    0.000625       -0.000039     1.0     -2192.621963         False          False  False
7   -2192.602588   -2192.603838  1080.965820 -2192.602588    0.010000 -2192.603838   0.000625    0.000625       -0.000186     1.0     -2192.621963         False          False  False
8   -2192.593213   -2192.602539  1080.966064 -2192.593213    0.010000 -2192.602539   0.000625    0.008701      -99.990566     1.0     -2192.621963         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409583/2048.[0m
[08/10 16:54:41]  --------------------------------------------------------------------------------
[08/10 16:54:41]  Iteration: 177 (0 solution, 176 counterexamples)
[08/10 16:58:29]  Generator returned sat in 222.638839 secs.
[08/10 16:58:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:58:31]  Improved gap from 1/800 to 48.4375
[08/10 16:58:32]  Improved number of small numbers from 60 to 67 out of a max of 114
[08/10 16:58:32]  Verifer returned sat in 2.277157 secs.
[08/10 16:58:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2587.382080   -2787.381963   875.744756 -2587.382080    0.002686 -2787.381963     0.0025  199.997383       99.997383     8.0     -2787.381963            -1             -1     -1
1   -2587.376963   -2587.381963   875.744756 -2587.376963  200.002500 -2587.381963     0.0025    0.002500        0.002500     1.0     -2787.381963         False           True   True
2   -2387.376963   -2487.381963   875.744756 -2387.376963  200.002500 -2487.381963    51.5675   48.437500       48.437500     1.0     -2787.381963         False          False   True
3   -2387.376963   -2441.061963   880.987256 -2387.376963   48.435000 -2441.061963    51.5675    2.117500      -46.320000     2.0     -2438.944463         False          False   True
4   -2192.616963   -2292.626963   880.987256 -2192.616963  196.877500 -2292.626963    51.5700   48.440000       48.437500     1.0     -2438.944463         False          False   True
5   -2192.616963   -2292.624463   932.549756 -2192.616963    0.010000 -2292.624463    51.5700   48.437500        0.000000     2.0     -2438.944463         False          False   True
6   -2144.170713   -2244.186963   979.429932 -2144.170713   96.883750 -2244.186963    51.5700   48.446250       -4.673574     3.0     -2438.944463         False          False   True
7   -2093.179463   -2191.066963  1030.992188 -2093.179463   99.437500 -2191.066963    51.5700   46.317500       -2.120068     1.0     -2144.749463          True           True  False
8   -2087.716963   -2142.629395  1030.992432 -2087.716963   51.780000 -2142.629395    51.5700    3.342432      -96.657324     1.0     -2144.749463         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=775/16.[0m
[08/10 16:58:33]  --------------------------------------------------------------------------------
[08/10 16:58:33]  Iteration: 178 (0 solution, 177 counterexamples)
[08/10 16:59:49]  Generator returned sat in 70.097482 secs.
[08/10 16:59:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 16:59:51]  Improved number of small numbers from 58 to 87 out of a max of 113
[08/10 16:59:51]  Verifer returned sat in 1.089332 secs.
[08/10 16:59:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2468.784424   -3168.834473  875.744756 -2468.784424   126.537354 -3168.834473       0.00   700.050049      700.050039     9.0     -3168.834473            -1             -1     -1
1   -2468.784424   -3168.834229  875.744756 -2468.784424   126.537354 -3168.834229       0.00   700.049805      600.050039     9.0     -3168.834473         False           True  False
2   -2468.784424   -2968.884521  875.744756 -2468.784424   126.537598 -2968.884521       0.00   500.100098      500.050039     3.0     -3168.834473          True           True  False
3   -2468.784424   -2968.834229  875.744756 -2468.784424   126.487500 -2968.834229       0.00   500.049805      400.050039     4.0     -2468.784424         False          False  False
4   -2468.784424   -2868.834463  875.744756 -2468.784424   250.975000 -2868.834463       0.00   400.050039      300.050039     5.0     -2468.784424         False          False  False
5   -2368.884463   -2768.834463  875.744756 -2368.884463   499.950000 -2768.834463       0.00   399.950000      299.950000     6.0     -2468.784424         False          False  False
6   -1770.934463   -2568.834463  875.744756 -1770.934463   997.900000 -2568.834463       0.00   797.900000      797.900000     7.0     -2468.784424         False          False  False
7    -575.034463   -2568.834463  875.744756  -575.034463  1993.800000 -2568.834463       0.00  1993.800000     1893.800000     7.0     -2468.784424         False          False  False
8    1416.765537   -2368.834473  875.744756  1416.765537  3985.600000 -2368.834473    1891.75  1893.850010     1893.850000     3.0     -2468.784424         False          False  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=37877/20.[0m
[08/10 16:59:51]  --------------------------------------------------------------------------------
[08/10 16:59:51]  Iteration: 179 (0 solution, 178 counterexamples)
[08/10 17:00:29]  Generator returned sat in 32.345389 secs.
[08/10 17:00:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:00:31]  Improved gap from 0 to 100
[08/10 17:00:32]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/10 17:00:32]  Verifer returned sat in 1.898477 secs.
[08/10 17:00:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2166.264648   -3064.364463  875.744756 -2166.264648    0.100098 -3064.364463  797.900000  100.199814      100.199814     8.0     -3064.364463            -1             -1   False
1   -2166.164463   -3064.364463  875.744756 -2166.164463  100.300000 -3064.364463  798.000000  100.200000        0.200000     8.0     -3064.364463         False          False   False
2   -2066.364463   -2964.364258  875.744756 -2066.364463  200.000000 -2964.364258  798.000000   99.999795        0.000000     9.0     -3064.364463         False          False    True
3   -2066.364463   -2864.364463  875.744756 -2066.364463    0.100000 -2864.364463  798.000000    0.000000     -100.000000     2.0     -2864.364463          True           True   False
4   -1964.314463   -2764.364463  875.744756 -1964.314463  102.050000 -2764.364463  798.000000    2.050000      -97.950000     1.0     -2864.364463         False          False   False
5   -1763.339463   -2564.364463  875.744756 -1763.339463  203.025000 -2564.364463  800.825000    0.200000        0.200000     1.0     -2864.364463         False          False   False
6   -1662.026963   -2464.364463  875.744756 -1662.026963  101.512500 -2464.364463  802.137500    0.200000        0.200000     1.0     -2864.364463         False          False    True
7   -1611.470713   -2413.708213  875.744756 -1611.470713   50.756250 -2413.708213  802.137500    0.100000      -49.243750     1.0     -2864.364463         False          False    True
8   -1437.742588   -2364.364258  875.744756 -1437.742588  173.828125 -2364.364258  826.421875  100.199795        0.200000     1.0     -2864.364463         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/10 17:00:33]  --------------------------------------------------------------------------------
[08/10 17:00:33]  Iteration: 180 (0 solution, 179 counterexamples)
[08/10 17:02:56]  Generator returned sat in 137.469768 secs.
[08/10 17:02:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:02:58]  Improved gap from 1/40 to 48.4375
[08/10 17:02:58]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/10 17:02:58]  Verifer returned sat in 1.467482 secs.
[08/10 17:02:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -2256.956787   -3255.006836   966.387451 -2256.956787    0.049805 -3255.006836  798.000000  200.050049      100.050293     9.0     -3255.006836            -1             -1     -1
1   -2256.956787   -3055.007080   966.387451 -2256.956787    0.050049 -3055.007080  798.000000    0.050293        0.050293     2.0     -3255.006836         False           True  False
2   -2126.125732   -2955.106934   966.387451 -2126.125732  130.881348 -2955.106934  798.050049   30.931152       30.831299     1.0     -3255.006836         False          False  False
3   -2026.175537   -2900.419434   966.387451 -2026.175537  130.881348 -2900.419434  798.050049   76.193848       30.781494     1.0     -3255.006836         False          False   True
4   -1926.075684   -2755.007080   966.387451 -1926.075684  176.293701 -2755.007080  798.100098   30.831299       30.831299     1.0     -3255.006836         False          False   True
5   -1926.075684   -2754.957031  1015.649902 -1926.075684    0.500000 -2754.957031  798.100098   30.781250      -19.906250     2.0     -3255.006836         False          False   True
6   -1857.781982   -2704.269531  1067.212402 -1857.781982   99.074951 -2704.269531  798.100098   48.387451       -0.050049     1.0     -3255.006836         False          False   True
7   -1809.094482   -2655.831787  1118.574951 -1809.094482   97.074951 -2655.831787  798.100098   48.637207        0.000000     1.0     -3255.006836         False          False   True
8   -1809.094482   -2607.194580  1118.574951 -1809.094482   48.587646 -2607.194580  798.100098    0.000000     -100.000000     2.0     -3255.006836         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=126285/4096.[0m
[08/10 17:02:59]  --------------------------------------------------------------------------------
[08/10 17:02:59]  Iteration: 181 (0 solution, 180 counterexamples)
[08/10 17:07:29]  Generator returned sat in 264.424431 secs.
[08/10 17:07:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:07:31]  Improved gap from 0 to 100
[08/10 17:07:31]  Improved number of small numbers from 95 to 95 out of a max of 114
[08/10 17:07:31]  Verifer returned sat in 1.013348 secs.
[08/10 17:07:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -249.700684   -1147.700684  966.387451  -249.700684    0.050000 -1147.700684     798.05   99.950000          -0.050     1.0     -1147.700684            -1             -1   False
1    -149.700684   -1047.700684  966.387451  -149.700684  199.950000 -1047.700684     798.05   99.950000          -0.050     1.0     -1147.700684         False          False   False
2     -49.750684    -947.700684  966.387451   -49.750684  199.900000  -947.700684     798.05   99.900000          -0.100     1.0      -847.800684         False          False   False
3      54.649316    -747.700684  966.387451    54.649316  204.300000  -747.700684     802.25    0.100000           0.100     1.0      -847.800684         False          False   False
4     154.699316    -647.700684  966.387451   154.699316  100.150000  -647.700684     802.30    0.100000           0.100     1.0      -847.800684         False          False    True
5     202.674316    -613.600684  966.387451   202.674316   48.075000  -613.600684     802.30   13.975000         -51.925     1.0      -847.800684         False          False    True
6     354.749316    -447.700684  966.387451   354.749316  166.050000  -447.700684     802.35    0.100000           0.100     1.0      -847.800684         False          False    True
7     435.674316    -380.267350  966.387451   435.674316   81.025000  -380.267350     802.35   13.591667         -18.975     1.0      -847.800684         False          False    True
8     554.799316    -347.700684  966.387451   554.799316  132.716667  -347.700684     802.40  100.100000           0.100     1.0      -847.800684         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/10.[0m
[08/10 17:07:32]  --------------------------------------------------------------------------------
[08/10 17:07:32]  Iteration: 182 (0 solution, 181 counterexamples)
[08/10 17:08:05]  Generator returned sat in 26.877686 secs.
[08/10 17:08:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:08:06]  Improved gap from 1/3600 to 48.4375
[08/10 17:08:07]  Improved number of small numbers from 61 to 70 out of a max of 114
[08/10 17:08:07]  Verifer returned sat in 1.594326 secs.
[08/10 17:08:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0       4.748047    -192.133184   911.707520     4.748047    0.001465  -192.133184    0.00125  196.879980       96.880049     2.0      -192.133184            -1             -1     -1
1       4.748047     -92.131934   914.827393     4.748047  196.879883   -92.131934    0.00125   96.878730       -0.000078     2.0      -192.133184         False          False   True
2     104.749316      50.078066   914.827393   104.749316  196.880000    50.078066    0.00125   54.670000        0.001191     1.0      -192.133184         False          False   True
3     104.751816     104.749316   966.387451   104.751816   54.672500   104.749316    0.00125    0.001250      -48.436250     1.0       104.750566         False          False   True
4     253.191816     253.186816   966.387451   253.191816  148.441250   253.186816    0.00250    0.002500        0.002500     1.0       104.750566         False          False   True
5     253.199316     253.190566  1017.946201   253.199316    0.010000   253.190566    0.00250    0.006250      -48.431250     1.0       104.750566         False          False   True
6     354.749316     301.628066  1064.827393   354.749316  101.556250   301.628066    0.00250   53.118750       -0.000059     1.0       104.750566         False          False   True
7     400.069941     354.748066  1116.388701   400.069941   98.439375   354.748066    0.00250   45.319375       -3.118125     1.0       104.750566         False          False   True
8     405.531191     403.185566  1167.951172   405.531191   50.780625   403.185566    0.00250    2.343125      -46.094404     1.0       104.750566         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/10 17:08:08]  --------------------------------------------------------------------------------
[08/10 17:08:08]  Iteration: 183 (0 solution, 182 counterexamples)
[08/10 17:08:54]  Generator returned sat in 39.592865 secs.
[08/10 17:08:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:08:55]  Improved gap from 0 to 100
[08/10 17:08:56]  Improved number of small numbers from 68 to 72 out of a max of 114
[08/10 17:08:56]  Verifer returned sat in 1.713000 secs.
[08/10 17:08:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -411.946054    -611.949387  966.387451  -411.946054  200.002441  -611.949387   0.001111  200.002222      100.002222     2.0      -611.949387            -1             -1     -1
1    -411.946054    -411.949387  966.387451  -411.946054  200.000977  -411.949387   0.001111    0.002222        0.002222     3.0      -411.947165         False          False   True
2    -211.948276    -411.916054  966.387451  -211.948276  200.000000  -411.916054   0.002222  199.965556       99.998889     1.0      -211.950498         False           True  False
3    -211.948276    -211.951610  966.387451  -211.948276    0.001667  -211.951610   0.002222    0.001111       -0.001111     2.0      -211.950498         False          False   True
4     -11.947165    -211.949387  966.387451   -11.947165  200.002222  -211.949387   0.003333  199.998889       99.998889     1.0      -211.950498         False          False   True
5     -11.947165     -11.951610  966.387451   -11.947165    0.010000   -11.951610   0.003333    0.001111       -0.001111     2.0      -211.950498         False          False   True
6     188.053946      88.050537  966.387451   188.053946  200.002222    88.050537   0.004444   99.998964       99.998889     1.0      -211.950498         False          False   True
7     188.053946     188.048390  966.387451   188.053946    0.010000   188.048390   0.004444    0.001111       -0.001111     2.0      -211.950498         False          False   True
8     388.071724     188.050781  966.387451   388.071724  200.018889   188.050781   0.022222  199.998720       99.998889     1.0      -211.950498         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=89999/900.[0m
[08/10 17:08:57]  --------------------------------------------------------------------------------
[08/10 17:08:57]  Iteration: 184 (0 solution, 183 counterexamples)
[08/10 17:10:08]  Generator returned sat in 64.063652 secs.
[08/10 17:10:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:10:09]  Improved gap from 1/40 to 48.4375
[08/10 17:10:10]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/10 17:10:10]  Verifer returned sat in 1.125003 secs.
[08/10 17:10:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -311.948486    -498.898682   871.787354  -311.948486    0.100098  -498.898682   0.000000  186.950195      100.000000     9.0      -498.898682            -1             -1     -1
1    -311.848633    -411.948486   871.787354  -311.848633  187.050049  -411.948486   0.000000  100.099854        0.099854     3.0      -498.898682         False           True  False
2    -211.948730    -260.386230   871.787354  -211.948730  199.999756  -260.386230   0.000000   48.437500       -0.000244     1.0      -498.898682         False          False  False
3    -203.323730    -203.423584   914.824707  -203.323730   57.062500  -203.423584   0.000000    0.099854      -48.337891     1.0      -203.323730         False          False  False
4     -54.686035     -55.385986   914.824707   -54.686035  148.737549   -55.385986   0.099854    0.600098        0.199951     1.0      -203.323730         False          False  False
5     -54.686035     -54.985840   966.387207   -54.686035    0.500000   -54.985840   0.099854    0.199951      -48.237549     2.0      -203.323730         False          False   True
6      45.814209      -3.465088  1014.025146    45.814209  100.700195    -3.465088   0.099854   49.179443       -0.099365     1.0      -203.323730         False          False   True
7      94.614014      45.814209  1065.324707    94.614014   97.979248    45.814209   0.099854   48.699951        0.000000     1.0      -203.323730         False          False   True
8      94.614014      94.514160  1065.324951    94.614014   48.600098    94.514160   0.099854    0.000000      -99.999756     2.0      -203.323730         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/10 17:10:10]  --------------------------------------------------------------------------------
[08/10 17:10:10]  Iteration: 185 (0 solution, 184 counterexamples)
[08/10 17:10:49]  Generator returned sat in 31.931664 secs.
[08/10 17:10:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:10:55]  Improved gap from 0 to 34.375
[08/10 17:10:56]  Improved number of small numbers from 64 to 84 out of a max of 114
[08/10 17:10:56]  Verifer returned sat in 6.262567 secs.
[08/10 17:10:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -494.230957    -722.738340  1082.577207  -494.230957    0.002686  -722.738340     0.0000  228.507383      128.507383     2.0      -722.738340            -1             -1   False
1    -494.230957    -622.738281  1082.577207  -494.230957  228.507324  -622.738281     0.0000  128.507324       28.507383     3.0      -722.738340         False          False   False
2    -394.230957    -422.738340  1082.577207  -394.230957  228.507324  -422.738340     0.0000   28.507383       28.507383     1.0      -722.738340         False          False   False
3    -394.230957    -422.738340  1147.337207  -394.230957   28.505000  -422.738340     0.0000   28.507383       -6.732617     1.0      -394.230957         False          False   False
4    -258.985840    -287.498340  1147.337207  -258.985840  163.752500  -287.498340     0.0025   28.510000       28.510000     1.0      -394.230957         False          False   False
5    -258.985840    -287.498340  1212.962207  -258.985840    0.010000  -287.498340     0.0025   28.510000       -5.865000     1.0      -394.230957         False          False    True
6    -221.870840    -253.123340  1278.587207  -221.870840   65.625000  -253.123340     0.0025   31.250000       -3.125000     1.0      -394.230957         False          False    True
7    -137.500840    -218.748340  1297.339844  -137.500840  115.620000  -218.748340     0.0025   81.245000       -0.002363     1.0      -394.230957         False          False    True
8    -128.560840    -137.500977  1297.339844  -128.560840   90.185000  -137.500977     0.0025    8.937637      -91.062363     1.0      -394.230957         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2851/100.[0m
[08/10 17:10:56]  --------------------------------------------------------------------------------
[08/10 17:10:56]  Iteration: 186 (0 solution, 185 counterexamples)
[08/10 17:12:37]  Generator returned sat in 94.480260 secs.
[08/10 17:12:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:12:38]  Improved gap from 1/1600 to 100
[08/10 17:12:39]  Improved number of small numbers from 61 to 79 out of a max of 114
[08/10 17:12:39]  Verifer returned sat in 1.363636 secs.
[08/10 17:12:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -246.275391    -730.626650  1297.339707  -246.275391   300.003750  -730.626650    0.000000   484.351260       400.00001     6.0      -730.626650            -1             -1   False
1    -246.275391    -546.275635  1297.339707  -246.275391   300.002441  -546.275635    0.000000   300.000244       300.00001     6.0      -246.275391         False          False   False
2    -246.274170    -546.275400  1297.339707  -246.274170   300.001465  -546.275400    0.000000   300.001230       200.00123     6.0      -246.274170         False          False   False
3    -146.276650    -346.275400  1297.339707  -146.276650   399.998750  -346.275400    0.000000   199.998750       199.99875     7.0      -246.274170         False          False   False
4     831.249600    -246.276650  1297.339707   831.249600  1177.525000  -246.276650    0.001250  1077.525000      1077.52375     8.0      -246.274170         False          False   False
5     831.249600    -246.275400  1297.339707   831.249600     0.010000  -246.275400    0.001250  1077.523750       977.52375     9.0      -246.274170         False          False    True
6     831.249600    -146.275400  1297.339707   831.249600   451.015000  -146.275400    0.001250   977.523750       877.52375     3.0      -246.274170         False           True   False
7     831.249600     -46.275400  1297.339707   831.249600   977.522500   -46.275400    0.001250   877.523750       777.52375     4.0      -246.274170         False          False   False
8    1721.011475      53.724609  1297.339707  1721.011475  1767.285625    53.724609  489.763125  1177.523740      1077.52375     5.0      -246.274170         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=862019/800.[0m
[08/10 17:12:40]  --------------------------------------------------------------------------------
[08/10 17:12:40]  Iteration: 187 (0 solution, 186 counterexamples)
[08/10 17:13:14]  Generator returned sat in 28.005352 secs.
[08/10 17:13:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/10 17:13:20]  Improved gap from 1/800 to 34.375
[08/10 17:13:21]  Improved number of small numbers from 59 to 66 out of a max of 114
[08/10 17:13:21]  Verifer returned sat in 6.502788 secs.
[08/10 17:13:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     448.379150     448.377725  202.686523   448.379150    0.003662   448.377725   0.000000   0.001426        0.001367     6.0       448.377725            -1             -1   False
1     448.381475     448.380225  202.686582   448.381475    0.003750   448.380225   0.000000   0.001250      -99.996250     1.0       448.377725         False          False   False
2     682.753975     645.652725  202.686582   682.753975  234.373750   645.652725   0.001250  37.100000       34.375000     1.0       448.377725         False          False   False
3     782.752725     748.377725  202.686582   782.752725  137.098750   748.377725   0.001250  34.373750       34.373750     1.0       782.751475         False          False    True
4     965.428350     848.376475  202.686582   965.428350  217.049375   848.376475  82.675625  34.376250       34.375000     1.0       782.751475         False          False    True
5     965.428350     848.377725  268.311582   965.428350    0.010000   848.377725  82.675625  34.375000        0.000000     2.0       782.751475         False          False    True
6    1030.920850     882.752725  287.064209  1030.920850   99.867500   882.752725  82.675625  65.492500      -15.754873     3.0       782.751475         False          False    True
7    1081.049600     964.000225  352.689082  1081.049600  115.621250   964.000225  82.675625  34.373750       -0.001250     1.0       782.751475         False          False    True
8    1160.798350     998.375244  352.689209  1160.798350  114.122500   998.375244  82.675625  79.747480      -20.252373     1.0       782.751475         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=275/8.[0m
[08/10 17:13:22]  --------------------------------------------------------------------------------
[08/10 17:13:22]  Iteration: 188 (0 solution, 187 counterexamples)
