[08/15 12:49:40]  --------------------------------------------------------------------------------
[08/15 12:49:40]  Iteration: 1 (0 solution, 0 counterexamples)
[08/15 12:49:40]  Generator returned sat in 0.005304 secs.
[08/15 12:49:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:40]  Improved gap from 0.1 to 100
[08/15 12:49:41]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 12:49:41]  Verifer returned sat in 0.289872 secs.
[08/15 12:49:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0         -529.0         -829.0     829.0       -529.0     266.0       -829.0        0.0    300.0           300.0     9.0           -829.0            -1             -1     -1
1         -529.0         -795.0     829.0       -529.0     265.9       -795.0        0.0    266.0           200.0     8.0           -529.0         False           True  False
2         -529.0         -629.1     829.0       -529.0     265.9       -629.1        0.0    100.1           100.0     4.0           -529.0         False          False  False
3         -529.0         -629.0     829.0       -529.0     100.1       -629.0        0.0    100.0             0.0     4.0           -529.0         False          False  False
4          -27.8         -529.0     829.0        -27.8     601.2       -529.0      201.2    300.0           200.0     5.0           -529.0         False          False  False
5         1407.6         -429.0     829.0       1407.6    1735.4       -429.0     1536.6    300.0           200.0     2.0           -529.0         False          False   True
6         4979.6         -229.0     829.0       4979.6    3872.0       -229.0     5008.6    200.0           200.0     3.0           -529.0         False          False   True
7        13324.6         -129.0     829.0      13324.6    8545.0       -129.0    13253.6    200.0           200.0     3.0           -529.0         False          False   True
8        31015.6         -129.0     829.0      31015.6   17891.0       -129.0    30844.6    300.0           200.0     3.0           -529.0         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=200.[0m
[08/15 12:49:41]  --------------------------------------------------------------------------------
[08/15 12:49:41]  Iteration: 2 (0 solution, 1 counterexamples)
[08/15 12:49:41]  Generator returned sat in 0.039334 secs.
[08/15 12:49:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:42]  Improved gap from 0.0 to 100
[08/15 12:49:43]  Improved number of small numbers from 74 to 78 out of a max of 114
[08/15 12:49:43]  Verifer returned sat in 1.149602 secs.
[08/15 12:49:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -529.000244    -862.337952     829.0  -529.000244     0.000488  -862.337952   0.000625  333.337083      300.000000     2.0      -862.337952            -1             -1     -1
1    -529.000244    -829.000869     829.0  -529.000244   333.336458  -829.000869   0.000625  300.000000      200.000000     2.0      -862.337952         False          False   True
2    -529.000244    -629.000869     829.0  -529.000244   100.000625  -629.000869   0.000625  100.000000      100.000000     3.0      -529.000869         False          False   True
3    -528.999619    -529.000869     829.0  -528.999619   100.000625  -529.000869   0.000625    0.000625        0.000625     4.0      -529.000869         False           True  False
4      72.006006    -528.999619     829.0    72.006006   601.006250  -528.999619   0.000625  601.005000      501.006250     1.0      -529.000869         False           True  False
5     523.009131    -429.000732     829.0   523.009131  1052.008125  -429.000732   0.001250  952.008613      852.008750     2.0      -529.000869         False          False  False
6     523.009131    -329.000869     829.0   523.009131     0.010000  -329.000869   0.001250  852.008750      752.008750     3.0      -529.000869         False          False   True
7     523.009131    -229.000869     829.0   523.009131   301.010000  -229.000869   0.001250  752.008750      652.008750     4.0       523.007881          True           True  False
8     523.009131    -129.000732     829.0   523.009131   752.008125  -129.000732   0.001250  652.008613      552.008750     5.0       523.007881         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=681607/800.[0m
[08/15 12:49:43]  --------------------------------------------------------------------------------
[08/15 12:49:43]  Iteration: 3 (0 solution, 2 counterexamples)
[08/15 12:49:43]  Generator returned sat in 0.099135 secs.
[08/15 12:49:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:44]  Improved gap from 6.103515625e-05 to 100
[08/15 12:49:44]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:49:44]  Verifer returned sat in 0.440782 secs.
[08/15 12:49:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -478.899414    -928.899658     829.0  -478.899414  450.049805  -928.899658    0.000000  450.000244      400.000244     4.0      -928.899658            -1             -1   False
1    -478.899414    -778.899658     829.0  -478.899414  450.000000  -778.899658    0.000000  300.000244      300.000244     4.0      -478.899414         False          False   False
2    -328.899658    -778.899414     829.0  -328.899658  450.000000  -778.899414    0.000000  449.999756      350.000000     4.0      -478.899414         False          False   False
3    -328.899414    -668.439697     829.0  -328.899414  450.000000  -668.439697    0.000000  339.540283      250.000244     4.0      -478.899414         False          False   False
4     -88.209717    -528.999756     829.0   -88.209717  580.229980  -528.999756    0.000000  440.790039      390.689941     5.0      -478.899414         False          False   False
5     176.180176    -478.899414     829.0   176.180176  705.179932  -478.899414  164.389893  490.689697      390.689941     6.0      -478.899414         False          False   False
6     176.180176    -328.849854     829.0   176.180176    1.000000  -328.849854  164.389893  340.640137      290.689941     3.0      -478.899414         False          False    True
7     176.180176    -278.899658     829.0   176.180176  340.589844  -278.899658  164.389893  290.689941      190.689941     4.0      -478.899414         False          False    True
8     476.180176     -78.899658     829.0   476.180176  590.689941   -78.899658  164.389893  390.689941      390.689941     4.0      -478.899414         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=800133/2048.[0m
[08/15 12:49:44]  --------------------------------------------------------------------------------
[08/15 12:49:44]  Iteration: 4 (0 solution, 3 counterexamples)
[08/15 12:49:45]  Generator returned sat in 0.025502 secs.
[08/15 12:49:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:45]  Improved number of small numbers from 85 to 113 out of a max of 113
[08/15 12:49:45]  Verifer returned sat in 0.316083 secs.
[08/15 12:49:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -478.899414    -939.997314     829.0  -478.899414  450.049805  -939.997314    0.000000  461.097900      400.000244     4.0      -939.997314            -1             -1   False
1    -478.899414    -778.899658     829.0  -478.899414  448.950439  -778.899658    0.000000  300.000244      300.000244     3.0      -478.899414         False          False   False
2    -329.949219    -778.849609     829.0  -329.949219  448.950439  -778.849609    0.000000  448.900391      348.950439     3.0      -478.899414         False          False   False
3    -329.899170    -671.439209     829.0  -329.899170  448.950439  -671.439209    0.000000  341.540039      249.000488     4.0      -478.899414         False          False   False
4     -88.209717    -528.999756     829.0   -88.209717  583.229492  -528.999756    0.000000  440.790039      390.689941     5.0      -478.899414         False          False   False
5     179.179688    -478.899414     829.0   179.179688  708.179443  -478.899414  167.389404  490.689697      390.689941     6.0      -478.899414         False          False   False
6     179.179688    -329.849365     829.0   179.179688    1.000000  -329.849365  167.389404  341.639648      290.689941     3.0      -478.899414         False          False    True
7     179.179688    -278.899658     829.0   179.179688  341.589844  -278.899658  167.389404  290.689941      190.689941     4.0      -478.899414         False          False    True
8     479.179688     -78.899902     829.0   479.179688  590.689941   -78.899902  167.389404  390.690186      390.689941     4.0      -478.899414         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=800133/2048.[0m
[08/15 12:49:46]  --------------------------------------------------------------------------------
[08/15 12:49:46]  Iteration: 5 (0 solution, 4 counterexamples)
[08/15 12:49:46]  Generator returned sat in 0.129598 secs.
[08/15 12:49:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:46]  Improved gap from 0.0 to 100
[08/15 12:49:47]  Improved number of small numbers from 74 to 92 out of a max of 114
[08/15 12:49:47]  Verifer returned sat in 1.422781 secs.
[08/15 12:49:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -4519.909668   -4619.859619     829.0 -4519.909668   200.049805 -4619.859619     0.0000    99.949951       -0.049951     2.0     -4619.859619            -1             -1   False
1   -4419.859863   -4519.859717     829.0 -4419.859863   199.999756 -4519.859717     0.0000    99.999854       -0.000146     1.0     -4419.859863         False          False   False
2   -3919.909717   -4319.859717     829.0 -3919.909717   599.950000 -4319.859717     0.0000   399.950000      399.950000     1.0     -4419.859863         False          False   False
3   -2107.459717   -4319.809814     829.0 -2107.459717  2212.400000 -4319.809814     0.0500  2212.300098     2112.350000     2.0     -4419.859863         False          False   False
4   -2107.459717   -4143.859717     829.0 -2107.459717  1106.200000 -4143.859717     0.0500  2036.350000     2012.350000     3.0     -4419.859863         False          False    True
5   -2107.459717   -4019.859717     829.0 -2107.459717  2036.300000 -4019.859717     0.0500  1912.350000     1912.350000     4.0     -4419.859863         False          False    True
6    -514.359717   -3919.859863     829.0  -514.359717  3505.450000 -3919.859863  1293.1500  2112.350146     2112.350000     4.0     -1807.509717          True           True   False
7    -514.359717   -3919.809717     829.0  -514.359717  1752.725000 -3919.809717  1293.1500  2112.300000     2012.350000     5.0     -1807.509717         False           True    True
8     339.502783   -3719.859863     829.0   339.502783  2966.162500 -3719.859863  1947.0125  2112.350146     2112.350000     6.0     -1807.509717         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=42247/20.[0m
[08/15 12:49:48]  --------------------------------------------------------------------------------
[08/15 12:49:48]  Iteration: 6 (0 solution, 5 counterexamples)
[08/15 12:49:48]  Generator returned sat in 0.162445 secs.
[08/15 12:49:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:48]  Improved gap from 0.000625 to 100
[08/15 12:49:49]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/15 12:49:49]  Verifer returned sat in 1.292870 secs.
[08/15 12:49:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1415.372070   -4443.859717     829.0 -1415.372070  400.0000 -4443.859717  3028.4850    0.002646        0.002646     3.0     -4443.859717            -1             -1     -1
1   -1015.377217   -4343.862217     829.0 -1015.377217  399.9975 -4343.862217  3028.4850  300.000000      299.997500     1.0     -4043.862217         False          False   True
2    -915.352217   -4343.859717     829.0  -915.352217  400.0250 -4343.859717  3028.4850  400.022500      300.022500     2.0     -4043.862217         False          False   True
3    -815.377217   -4143.859717     829.0  -815.377217  499.9975 -4143.859717  3028.4850  299.997500      299.997500     3.0     -4043.862217         False          False   True
4    -616.377217   -4143.859717     829.0  -616.377217  498.9975 -4143.859717  3028.4875  498.995000      398.995000     3.0     -4043.862217         False          False   True
5    -616.377217   -4043.859717     829.0  -616.377217    0.0100 -4043.859717  3028.4875  398.995000      298.995000     4.0     -4043.862217         False          False   True
6    -414.362217   -3843.859863     829.0  -414.362217  601.0100 -3843.859863  3030.5025  398.995146      398.995000     3.0     -4043.862217         False           True  False
7    -414.362217   -3843.857217     829.0  -414.362217    0.0100 -3843.857217  3030.5025  398.992500      298.995000     4.0     -4043.862217         False          False   True
8    -212.339717   -3643.859863     829.0  -212.339717  601.0150 -3643.859863  3032.5250  398.995146      398.995000     3.0     -3244.864717          True           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=3, buffer=79799/200.[0m
[08/15 12:49:50]  --------------------------------------------------------------------------------
[08/15 12:49:50]  Iteration: 7 (0 solution, 6 counterexamples)
[08/15 12:49:51]  Generator returned sat in 0.507998 secs.
[08/15 12:49:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:51]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/15 12:49:51]  Verifer returned sat in 0.611960 secs.
[08/15 12:49:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -915.652100   -4344.864746     829.0  -915.652100     0.100098 -4344.864746  3229.312256   199.900391       99.900391     2.0     -4344.864746            -1             -1     -1
1    -915.352295   -4144.864746     829.0  -915.352295   200.200195 -4144.864746  3229.312256     0.200195        0.200195     1.0     -4344.864746         False          False   True
2    -915.352295   -4144.864746     829.0  -915.352295     0.099854 -4144.864746  3229.312256     0.200195      -99.799805     1.0     -4144.664551         False          False   True
3     682.597656   -3944.864746     829.0   682.597656  1598.150146 -3944.864746  3229.312256  1398.150146     1398.150146     1.0     -4144.664551         False          False   True
4     682.597656   -3944.764648     829.0   682.597656   801.000000 -3944.764648  3229.312256  1398.050049     1298.150146     2.0     -4144.664551         False          False   True
5     682.597656   -3844.864746     829.0   682.597656   401.200195 -3844.864746  3229.312256  1298.150146     1198.150146     3.0     -4144.664551         False          False   True
6     682.597656   -3744.864746     829.0   682.597656   850.200195 -3744.864746  3229.312256  1198.150146     1098.150146     4.0     -2546.714600          True           True  False
7     682.597656   -3644.864746     829.0   682.597656  1149.200195 -3644.864746  3229.312256  1098.150146      998.150146     5.0     -2546.714600         False           True  False
8    1182.497559   -3444.864746     829.0  1182.497559  1598.050049 -3444.864746  3229.312256  1398.050049     1398.050049     6.0     -2546.714600         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=5726823/4096.[0m
[08/15 12:49:52]  --------------------------------------------------------------------------------
[08/15 12:49:52]  Iteration: 8 (0 solution, 7 counterexamples)
[08/15 12:49:52]  Generator returned sat in 0.052342 secs.
[08/15 12:49:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:53]  Improved gap from 0.0 to 100
[08/15 12:49:54]  Improved number of small numbers from 75 to 84 out of a max of 114
[08/15 12:49:54]  Verifer returned sat in 1.617777 secs.
[08/15 12:49:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -915.549805   -4144.864990     829.0  -915.549805     0.002441 -4144.864990  3229.312256     0.002930        0.002686     4.0     -4144.864990            -1             -1     -1
1    -915.549805   -4144.864746     829.0  -915.549805     0.001465 -4144.864746  3229.312256     0.002686      -99.997314     4.0     -4144.862061         False           True   True
2    -715.552490   -3944.864746     829.0  -715.552490   200.000000 -3944.864746  3229.312256     0.000000        0.000000     1.0     -4144.862061         False           True  False
3     699.455010   -3944.864746     829.0   699.455010  1415.007500 -3944.864746  3229.313506  1415.006250     1315.006250     1.0     -4144.862061         False          False  False
4     699.455010   -3761.864746     829.0   699.455010     0.010000 -3761.864746  3229.313506  1232.006250     1215.006250     2.0     -4144.862061         False          False   True
5     699.455010   -3744.864746     829.0   699.455010   767.005000 -3744.864746  3229.313506  1215.006250     1115.006250     3.0     -4144.862061         False          False   True
6     699.455010   -3644.864746     829.0   699.455010  1066.005000 -3644.864746  3229.313506  1115.006250     1015.006250     4.0     -2529.858496          True           True  False
7    1099.453760   -3444.864746     829.0  1099.453760  1515.005000 -3444.864746  3229.313506  1315.005000     1315.005000     5.0     -2529.858496         False           True  False
8    1773.953760   -3344.864990     829.0  1773.953760  1989.505000 -3344.864990  3803.812256  1315.006494     1315.006250     6.0     -2529.858496         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=210401/160.[0m
[08/15 12:49:55]  --------------------------------------------------------------------------------
[08/15 12:49:55]  Iteration: 9 (0 solution, 8 counterexamples)
[08/15 12:49:55]  Generator returned sat in 0.291826 secs.
[08/15 12:49:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:56]  Improved number of small numbers from 62 to 113 out of a max of 113
[08/15 12:49:56]  Verifer returned sat in 0.450200 secs.
[08/15 12:49:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     144.322510   -3784.989502     829.0   144.322510     0.000244 -3784.989502  3229.312256  699.999756      699.999756     4.0     -3784.989502            -1             -1     -1
1     144.322510   -3684.989746     829.0   144.322510    38.374756 -3684.989746  3229.312256  600.000000      599.999756     4.0     -3784.989502         False           True   True
2     144.322510   -3684.989502     829.0   144.322510    38.374756 -3684.989502  3229.312256  599.999756      499.999756     4.0     -3784.989502          True           True  False
3     144.322510   -3584.989502     829.0   144.322510    38.375000 -3584.989502  3229.312256  499.999756      399.999756     4.0     -3784.989502          True           True  False
4     144.322510   -3484.989502     829.0   144.322510    75.750000 -3484.989502  3229.312256  399.999756      299.999756     5.0     -3084.989746          True           True  False
5     144.322510   -3384.989502     829.0   144.322510   150.500000 -3384.989502  3229.312256  299.999756      199.999756     6.0     -3084.989746         False           True  False
6     144.322754   -3184.989746     829.0   144.322754   300.000000 -3184.989746  3229.312256  100.000244      100.000000     7.0     -3084.989746         False           True  False
7     643.322510   -3084.989502     829.0   643.322510   599.000000 -3084.989502  3229.312256  498.999756      498.999756     2.0     -3084.989746         False           True  False
8    1341.322754   -3084.989502     829.0  1341.322754  1197.000000 -3084.989502  3726.312256  700.000000      600.000000     2.0     -3084.989746         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=600.[0m
[08/15 12:49:56]  --------------------------------------------------------------------------------
[08/15 12:49:56]  Iteration: 10 (0 solution, 9 counterexamples)
[08/15 12:49:57]  Generator returned sat in 0.278402 secs.
[08/15 12:49:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:49:57]  Improved gap from 0.00125 to 100
[08/15 12:49:58]  Improved number of small numbers from 56 to 59 out of a max of 114
[08/15 12:49:58]  Verifer returned sat in 1.613308 secs.
[08/15 12:49:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -541.842529   -3870.247835     829.0  -541.842529    0.050000 -3870.247835  3243.197012   85.208294       -0.050039     1.0     -3870.247835            -1             -1     -1
1    -427.050824   -3784.989502     829.0  -427.050824  200.000000 -3784.989502  3243.197012  114.741667       14.741667     1.0     -3870.247835         False          False   True
2    -341.842490   -3599.831169     829.0  -341.842490  199.950000 -3599.831169  3243.197012   14.791667       -0.050000     1.0     -3585.039502         False          False   True
3    -341.742490   -3584.989502     829.0  -341.742490   14.891667 -3584.989502  3243.197012    0.050000      -99.950000     1.0     -3584.939502         False          False   True
4    -177.825824   -3484.989502     829.0  -177.825824  163.966667 -3484.989502  3243.197012   63.966667      -36.033333     1.0     -3584.939502         False          False   True
5     153.157510   -3384.989502     829.0   153.157510  394.950000 -3384.989502  3243.197012  294.950000      194.950000     1.0     -3584.939502         False          False   True
6     557.053343   -3184.989502     829.0   557.053343  698.845833 -3184.989502  3243.197012  498.845833      498.845833     2.0     -3584.939502         False          False   True
7     557.053343   -3089.989502     829.0   557.053343  199.000000 -3089.989502  3243.197012  403.845833      398.845833     2.0     -2686.143669          True           True  False
8     557.053343   -2984.989502     829.0   557.053343  196.500000 -2984.989502  3243.197012  298.845833      298.845833     3.0     -2686.143669         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=2043477/4096.[0m
[08/15 12:49:59]  --------------------------------------------------------------------------------
[08/15 12:49:59]  Iteration: 11 (0 solution, 10 counterexamples)
[08/15 12:50:00]  Generator returned sat in 0.284342 secs.
[08/15 12:50:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:00]  Improved gap from 99.09970703125 to 100
[08/15 12:50:00]  Improved number of small numbers from 25 to 114 out of a max of 114
[08/15 12:50:00]  Verifer returned sat in 0.331769 secs.
[08/15 12:50:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -541.842529   -3788.372559  831.900391  -541.842529    0.050049 -3788.372559  3243.197021    3.333008        2.850342     6.0     -3788.372559            -1             -1   False
1    -444.742432   -3784.989746  831.900391  -444.742432  100.433105 -3784.989746  3243.197021   97.050293       -0.049561     1.0     -3788.372559         False          False   False
2    -441.409424   -3687.889893  831.900391  -441.409424  100.383301 -3687.889893  3243.197021    3.283447      -96.716553     1.0     -3684.606445         False          False   False
3    -344.359375   -3587.606201  831.900391  -344.359375  100.333496 -3587.606201  3243.197021    0.049805      -99.666504     1.0     -3587.556396         False          False   False
4    -142.642822   -3486.989746  831.900391  -142.642822  201.766357 -3486.989746  3243.197021  101.149902        2.050049     1.0     -3587.556396         False          False   False
5      55.207275   -3287.939697  831.900391    55.207275  299.000000 -3287.939697  3243.197021   99.949951       99.900146     1.0     -3587.556396         False          False   False
6     356.207520   -3287.889648  831.900391   356.207520  400.950195 -3287.889648  3243.197021  400.900146      300.900391     2.0     -3587.556396         False          False   False
7     356.207520   -3187.889893  831.900391   356.207520  300.716553 -3187.889893  3243.197021  300.900391      200.900391     2.0     -3587.556396         False          False   False
8     356.207520   -2987.889893  831.900391   356.207520  300.099854 -2987.889893  3243.197021  100.900391      100.900391     3.0     -3587.556396         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=2043477/4096.[0m
[08/15 12:50:01]  --------------------------------------------------------------------------------
[08/15 12:50:01]  Iteration: 12 (0 solution, 11 counterexamples)
[08/15 12:50:01]  Generator returned sat in 0.198205 secs.
[08/15 12:50:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:03]  Improved gap from 0.0033333333333333335 to 40.625
[08/15 12:50:03]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 12:50:03]  Verifer returned sat in 1.737499 secs.
[08/15 12:50:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -245.255371   -3628.749268  672.759766  -245.255371    0.046875 -3628.749268  3243.150146  140.343750      140.343750     4.0     -3628.749268            -1             -1   False
1    -245.208496   -3628.702393  672.759766  -245.208496  140.390625 -3628.702393  3243.197021  140.296875       40.343750     3.0     -3628.749268         False          False   False
2    -185.599121   -3450.155518  672.759766  -185.599121  199.906250 -3450.155518  3243.197021   21.359375       -0.046875     1.0     -3628.749268         False          False    True
3    -125.942871   -3428.749268  713.150391  -125.942871   81.015625 -3428.749268  3243.197021   59.609375        0.000000     1.0     -3369.139893         False          False    True
4      14.447754   -3327.843018  713.150391    14.447754  200.000000 -3327.843018  3243.243896   99.046875       40.343750     1.0     -3369.139893         False          False    True
5      14.447754   -3269.139893  772.525391    14.447754   99.000000 -3269.139893  3243.243896   40.343750       -0.281250     2.0     -3369.139893         False          False    True
6     155.119629   -3177.632080  772.525391   155.119629  181.015625 -3177.632080  3243.290771   89.460938       40.343750     1.0     -3369.139893         False          False    True
7     155.166504   -3128.514893  831.900391   155.166504   89.507812 -3128.514893  3243.290771   40.390625       -0.234375     2.0     -3369.139893         False          False    True
8     314.104004   -3087.889893  831.900391   314.104004  199.328125 -3087.889893  3261.650146  140.343750       40.343750     1.0     -3369.139893         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1291/32.[0m
[08/15 12:50:04]  --------------------------------------------------------------------------------
[08/15 12:50:04]  Iteration: 13 (0 solution, 12 counterexamples)
[08/15 12:50:04]  Generator returned sat in 0.053845 secs.
[08/15 12:50:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:06]  Improved gap from 33.90673828125 to 39.0625
[08/15 12:50:06]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:50:06]  Verifer returned sat in 2.371021 secs.
[08/15 12:50:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1704.001221   -1864.950439  652.229980 -1704.001221    0.046631 -1864.950439    0.000000  160.949219       99.994141     4.0     -1864.950439            -1             -1   False
1   -1703.977783   -1703.995361  652.229980 -1703.977783  160.972656 -1703.995361    0.005859    0.011719        0.011719     1.0     -1864.950439         False          False   False
2   -1703.966309   -1703.977783  713.149902 -1703.966309    0.023193 -1703.977783    0.005859    0.005615      -39.056885     1.0     -1703.972168         False          False    True
3   -1564.903564   -1664.915283  713.149902 -1564.903564  139.068359 -1664.915283    0.005859  100.005859        0.005859     1.0     -1703.972168         False          False    True
4   -1464.874268   -1464.915283  713.149902 -1464.874268  200.035156 -1464.915283    0.029297    0.011719        0.011719     1.0     -1703.972168         False          False    True
5   -1364.868408   -1464.909668  713.149902 -1364.868408  100.017578 -1464.909668    0.035156  100.006104        0.011719     2.0     -1703.972168         False          False    True
6   -1364.868408   -1364.909424  773.173340 -1364.868408   50.008789 -1364.909424    0.035156    0.005859      -39.964844     2.0     -1703.972168         False          False    True
7   -1064.868408   -1224.938965  773.173340 -1064.868408  300.005859 -1224.938965  160.058594    0.011963        0.011719     1.0     -1703.972168         False          False    True
8    -914.877441   -1224.921387  773.173340  -914.877441  150.002930 -1224.921387  210.049561   99.994385        0.011719     1.0     -1703.972168         False          False    True
high_util=False, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=3/256.[0m
[08/15 12:50:07]  --------------------------------------------------------------------------------
[08/15 12:50:07]  Iteration: 14 (0 solution, 13 counterexamples)
[08/15 12:50:08]  Generator returned sat in 0.277789 secs.
[08/15 12:50:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:08]  Improved gap from 0.0 to 100
[08/15 12:50:08]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/15 12:50:08]  Verifer returned sat in 0.483948 secs.
[08/15 12:50:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1406.122314   -2006.222168  754.456543 -1406.122314   600.099854 -2006.222168     0.000000  600.099854      500.099854     6.0     -2006.222168            -1             -1   False
1   -1406.122314   -1906.222168  754.456543 -1406.122314   600.099854 -1906.222168     0.000000  500.099854      400.099854     6.0     -2006.222168         False          False   False
2   -1305.922119   -1806.222168  754.456543 -1305.922119   600.300049 -1806.222168     0.100098  500.199951      400.199951     7.0     -2006.222168         False          False   False
3   -1106.822266   -1606.222412  754.456543 -1106.822266   699.299805 -1606.222412    99.199951  400.200195      400.199951     8.0     -2006.222168         False          False    True
4   -1106.822266   -1606.122070  754.456543 -1106.822266   349.649902 -1606.122070    99.199951  400.099854      300.199951     9.0     -1206.022217          True           True    True
5    -506.522217   -1406.222168  754.456543  -506.522217  1000.399902 -1406.222168   499.500000  400.199951      400.199951     7.0     -1206.022217         False           True   False
6    -406.522217   -1406.122314  754.456543  -406.522217   500.199951 -1406.122314   499.500000  500.100098      400.199951     8.0     -1206.022217         False          False    True
7     294.877686   -1305.922119  754.456543   294.877686  1201.500000 -1305.922119  1100.899902  499.899902      400.199951     5.0     -1206.022217         False           True   False
8     395.727783   -1106.222412  754.456543   395.727783   600.750000 -1106.222412  1101.750000  400.200195      400.199951     4.0     -1206.022217         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1639219/4096.[0m
[08/15 12:50:09]  --------------------------------------------------------------------------------
[08/15 12:50:09]  Iteration: 15 (0 solution, 14 counterexamples)
[08/15 12:50:10]  Generator returned sat in 0.179698 secs.
[08/15 12:50:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:10]  Improved gap from 0.0 to 39.0625
[08/15 12:50:10]  Improved number of small numbers from 71 to 114 out of a max of 114
[08/15 12:50:10]  Verifer returned sat in 0.422246 secs.
[08/15 12:50:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1448.909766   -1551.914551  696.529053 -1448.909766    0.005000 -1551.914551   0.000000  103.004785        3.004785     4.0     -1551.914551            -1             -1   False
1   -1409.842285   -1448.904785  754.456543 -1409.842285  142.072266 -1448.904785   0.000000   39.062500       -0.000244     1.0     -1551.914551         False          False   False
2   -1306.837158   -1309.842285  754.456543 -1306.837158  142.067627 -1309.842285   0.000000    3.005127        3.004883     1.0     -1306.837158         False          False   False
3   -1167.774658   -1211.842285  754.456543 -1167.774658  142.067627 -1211.842285   3.004883   41.062744       39.062500     1.0     -1306.837158         False          False   False
4   -1067.769775   -1110.774658  754.456543 -1067.769775  141.067627 -1110.774658   3.009766   39.995117       39.062500     1.0     -1306.837158         False          False    True
5    -967.697266   -1009.842041  754.456543  -967.697266  140.067627 -1009.842041   3.082275   39.062500       39.062500     1.0     -1306.837158         False          False    True
6    -867.692139   -1008.852051  754.456543  -867.692139  139.067627 -1008.852051   3.087402  138.072510       39.062500     2.0     -1306.837158         False          False    True
7    -867.692139    -909.842041  815.394043  -867.692139  138.067627  -909.842041   3.087402   39.062500        0.000000     2.0     -1306.837158         False          False    True
8    -867.692139    -870.779541  815.394043  -867.692139    0.010000  -870.779541   3.087402    0.000000     -100.000000     3.0     -1306.837158         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=3, buffer=625/16.[0m
[08/15 12:50:11]  --------------------------------------------------------------------------------
[08/15 12:50:11]  Iteration: 16 (0 solution, 15 counterexamples)
[08/15 12:50:12]  Generator returned sat in 0.438568 secs.
[08/15 12:50:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:12]  Improved gap from 0.00125 to 100
[08/15 12:50:13]  Improved number of small numbers from 60 to 64 out of a max of 114
[08/15 12:50:13]  Verifer returned sat in 1.768539 secs.
[08/15 12:50:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2517.321533    2517.221306 -3272.806804  2517.321533  100.200000  2517.221306     0.000000    0.100227       -0.099773     1.0      2517.221306            -1             -1    True
1    2617.321306    2517.421306 -3272.806804  2617.321306  100.100000  2517.421306     0.000000   99.900000       -0.100000     1.0      2617.321306         False          False    True
2    2717.421306    2617.421306 -3272.806804  2717.421306  200.000000  2617.421306     0.000000  100.000000        0.000000     1.0      2617.321306         False          False    True
3    2817.321306    2783.554639 -3272.806804  2817.321306  199.900000  2783.554639     0.000000   33.766667       -0.100000     1.0      2817.321306         False          False    True
4    2917.721306    2817.421306 -3272.806804  2917.721306  134.166667  2817.421306     0.100000  100.200000        0.200000     1.0      2817.321306         False          False    True
5    3333.604639    2917.421306 -3272.806804  3333.604639  516.083333  2917.421306   315.983333  100.200000        0.200000     2.0      2817.321306         False          False    True
6    3940.446306    3017.421306 -3272.806804  3940.446306  707.041667  3017.421306   822.825000  100.200000        0.200000     2.0      3117.621306          True           True    True
7    4543.567139    3217.421306 -3272.806804  4543.567139  703.320833  3217.421306  1325.945833    0.200000        0.200000     1.0      3117.621306         False           True    True
8    5494.027556    3217.721436 -3272.806804  5494.027556  950.660417  3217.721436  2176.406250   99.899870        0.200000     1.0      3117.621306         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=1/5.[0m
[08/15 12:50:14]  --------------------------------------------------------------------------------
[08/15 12:50:14]  Iteration: 17 (0 solution, 16 counterexamples)
[08/15 12:50:17]  Generator returned sat in 2.415107 secs.
[08/15 12:50:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:17]  Improved gap from 0.0 to 39.0625
[08/15 12:50:17]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:50:17]  Verifer returned sat in 0.459120 secs.
[08/15 12:50:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    2916.761230    2517.696289 -3273.082031  2916.761230    0.002441  2517.696289    0.000000  399.064941      399.064941     7.0      2517.696289            -1             -1   False
1    2916.763672    2517.696289 -3273.082031  2916.763672  399.067383  2517.696289    0.002441  399.064941      299.064941     7.0      2517.696289         False          False   False
2    3016.761230    2717.696289 -3273.082031  3016.761230  499.062500  2717.696289    0.002441  299.062500      299.062500     8.0      2517.696289         False          False    True
3    3395.823730    2817.696289 -3273.082031  3395.823730  678.125000  2817.696289  279.062500  299.064941      299.064941     7.0      2517.696289          True           True   False
4    3435.821289    2916.761230 -3273.082031  3435.821289  339.062500  2916.761230  279.062500  239.997559      239.062500     8.0      2517.696289         False          False    True
5    3435.821289    3017.696289 -3273.082031  3435.821289    0.010000  3017.696289  279.062500  139.062500      139.062500     3.0      3156.758789          True           True   False
6    3435.821289    3117.693848 -3273.082031  3435.821289    0.010000  3117.693848  279.062500   39.064941       39.062500     3.0      3156.758789         False          False   False
7    3435.821289    3117.696289 -3212.144531  3435.821289    0.010000  3117.696289  279.062500   39.062500        0.000000     4.0      3156.758789         False          False   False
8    3435.821289    3156.758789 -3212.144531  3435.821289    0.010000  3156.758789  279.062500    0.000000     -100.000000     5.0      3156.758789         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=612485/2048.[0m
[08/15 12:50:18]  --------------------------------------------------------------------------------
[08/15 12:50:18]  Iteration: 18 (0 solution, 17 counterexamples)
[08/15 12:50:19]  Generator returned sat in 0.065460 secs.
[08/15 12:50:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:19]  Improved gap from 39.0625 to 39.0625
[08/15 12:50:19]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/15 12:50:19]  Verifer returned sat in 0.727389 secs.
[08/15 12:50:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -508.870605    -608.871826 -3273.082031  -508.870605    0.002197  -608.871826    0.000000  100.001221      100.001221     7.0      -608.871826            -1             -1   False
1    -508.869873    -508.873535 -3273.082031  -508.869873  100.001953  -508.873535    0.000732    0.002930        0.001221     7.0      -608.871826         False          False   False
2    -408.870850    -508.871582 -3273.082031  -408.870850  100.001953  -508.871582    0.000732  100.000000        0.000244     8.0      -608.871826         False          False    True
3     277.144775    -308.871826 -3273.082031   277.144775  786.015625  -308.871826  586.015381    0.001221        0.001221     1.0      -608.871826          True           True   False
4     671.151367    -209.806641 -3273.082031   671.151367  394.007812  -209.806641  880.021973    0.936035        0.001221     1.0      -608.871826         False          False    True
5     868.219238    -108.871826 -3273.082031   868.219238  198.003906  -108.871826  977.089844    0.001221        0.001221     1.0      -608.871826         False          False    True
6     968.219971     -20.808350 -3273.082031   968.219971  100.001953   -20.808350  977.090576   11.937744        0.001221     1.0      -608.871826         False          False    True
7    1007.283203      -8.869873 -3212.146484  1007.283203   51.000977    -8.869873  977.090576   39.062500        0.000000     1.0      -608.871826         False          False    True
8    1007.283203      30.192627 -3151.208984  1007.283203    0.010000    30.192627  977.090576    0.000000      -39.062500     2.0      -608.871826         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=3, buffer=5/4096.[0m
[08/15 12:50:20]  --------------------------------------------------------------------------------
[08/15 12:50:20]  Iteration: 19 (0 solution, 18 counterexamples)
[08/15 12:50:21]  Generator returned sat in 0.639967 secs.
[08/15 12:50:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:22]  Improved gap from 0.0010986328125 to 100
[08/15 12:50:23]  Improved number of small numbers from 92 to 114 out of a max of 114
[08/15 12:50:23]  Verifer returned sat in 1.335935 secs.
[08/15 12:50:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     443.152344     243.153320 -3273.082031   443.152344    0.001953   243.153320    0.000000  199.999023       99.999023     3.0       243.153320            -1             -1     -1
1     443.152344     343.153564 -3273.082031   443.152344  199.998779   343.153564    0.000000   99.998779       -0.000977     2.0       243.153320         False           True  False
2     543.151367     443.153564 -3273.082031   543.151367  199.997803   443.153564    0.000000   99.997803       -0.001953     1.0       543.151367         False          False  False
3     647.151367     643.153320 -3273.082031   647.151367  203.997803   643.153320    0.001221    3.996826        3.996826     1.0       543.151367         False          False  False
4     846.152344     647.151367 -3273.082031   846.152344  202.997803   647.151367   99.002197   99.998779        3.996826     1.0       543.151367         False          False   True
5     948.151367     747.151123 -3273.082031   948.151367  201.997803   747.151123  101.001221   99.999023        3.996826     1.0       543.151367         False          False   True
6    1049.150146     847.151123 -3273.082031  1049.150146  200.997803   847.151123  102.000000   99.999023        3.996826     1.0       543.151367         False          False   True
7    1149.148926     943.153564 -3273.082031  1149.148926  199.997803   943.153564  102.000000  103.995361        3.995605     2.0       543.151367         False          False   True
8    1294.153564    1047.150146 -3273.082031  1294.153564  249.000000  1047.150146  147.003418  100.000000        3.996826     1.0       543.151367         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=16371/4096.[0m
[08/15 12:50:23]  --------------------------------------------------------------------------------
[08/15 12:50:23]  Iteration: 20 (0 solution, 19 counterexamples)
[08/15 12:50:27]  Generator returned sat in 3.549979 secs.
[08/15 12:50:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:27]  Improved gap from 0.000625 to 100
[08/15 12:50:28]  Improved number of small numbers from 96 to 114 out of a max of 114
[08/15 12:50:28]  Verifer returned sat in 0.364718 secs.
[08/15 12:50:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     347.101074     247.101074 -3177.079834   347.101074    0.049805   247.101074     0.000000  100.000000       99.949951     4.0       247.101074            -1             -1   False
1     347.151123     247.151123 -3177.079834   347.151123  100.050049   247.151123     0.000000  100.000000        0.000000     4.0       247.101074         False          False   False
2     347.151123     347.151123 -3177.079834   347.151123    0.050000   347.151123     0.000000    0.000000     -100.000000     2.0       347.151123         False          False   False
3     747.150879     526.151123 -3177.079834   747.150879  399.999756   526.151123     0.049805  220.949951      199.949951     1.0       347.151123         False          False   False
4    1083.301025     568.101074 -3177.079834  1083.301025  557.100098   568.101074   236.199951  279.000000      199.949951     2.0       347.151123         False          False    True
5    1445.200928     747.151123 -3177.079834  1445.200928  640.899902   747.151123   498.099854  199.949951      199.949951     2.0       347.151123         False          False    True
6    2044.250977     847.151123 -3177.079834  2044.250977  799.000000   847.151123   997.149902  199.949951      199.949951     2.0       347.151123         False          False    True
7    2485.301025     847.151123 -3177.079834  2485.301025  641.000000   847.151123  1338.199951  299.949951      199.949951     2.0       347.151123         False          False    True
8    2742.451172    1047.151123 -3177.079834  2742.451172  557.100098  1047.151123  1495.350098  199.949951      199.949951     2.0       347.151123         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=818995/4096.[0m
[08/15 12:50:28]  --------------------------------------------------------------------------------
[08/15 12:50:28]  Iteration: 21 (0 solution, 20 counterexamples)
[08/15 12:50:29]  Generator returned sat in 0.200706 secs.
[08/15 12:50:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:30]  Improved number of small numbers from 68 to 84 out of a max of 113
[08/15 12:50:30]  Verifer returned sat in 0.745064 secs.
[08/15 12:50:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     347.148682    -252.846436 -2677.082334   347.148682   599.994873  -252.846436     0.0000  599.995117      599.995059     5.0      -252.846436            -1             -1   False
1     347.148682    -152.846436 -2677.082334   347.148682   599.995117  -152.846436     0.0000  499.995117      499.995059     5.0      -252.846436         False          False   False
2     347.151123    -152.846377 -2677.082334   347.151123   499.997559  -152.846377     0.0000  499.997500      399.997500     6.0       347.151123         False          False   False
3     748.168623     -52.846377 -2677.082334   748.168623   901.015000   -52.846377     0.0025  801.012500      701.012500     7.0       347.151123         False          False   False
4     748.168623     142.153564 -2677.082334   748.168623     0.010000   142.153564     0.0025  606.012559      601.012500     8.0       347.151123         False          False    True
5     748.168623     147.153623 -2677.082334   748.168623     0.010000   147.153623     0.0025  601.012500      501.012500     9.0       347.151123         False          False    True
6     748.171123     347.153623 -2677.082334   748.171123   601.015000   347.153623     0.0025  401.015000      401.015000     4.0       347.151123         False           True   False
7    2049.678623     447.153564 -2677.082334  2049.678623  1702.522500   447.153564   901.5125  701.012559      701.012500     5.0       347.151123         False          False   False
8    2049.678623     547.153564 -2677.082334  2049.678623     0.010000   547.153564   901.5125  601.012559      601.012500     6.0       347.151123         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=56081/80.[0m
[08/15 12:50:31]  --------------------------------------------------------------------------------
[08/15 12:50:31]  Iteration: 22 (0 solution, 21 counterexamples)
[08/15 12:50:33]  Generator returned sat in 1.577211 secs.
[08/15 12:50:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:33]  Improved gap from 0.01125 to 100
[08/15 12:50:34]  Improved number of small numbers from 59 to 63 out of a max of 114
[08/15 12:50:34]  Verifer returned sat in 1.383665 secs.
[08/15 12:50:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -423.441406    -523.591377 -2576.942334  -423.441406    0.050049  -523.591377     0.0000  100.149971      100.099971     1.0      -523.591377            -1             -1   False
1    -423.391377    -523.541377 -2576.942334  -423.391377  100.200000  -523.541377     0.0500  100.100000        0.100000     2.0      -523.591377         False          False   False
2    -323.441377    -423.391377 -2576.942334  -323.441377  200.050000  -423.391377     0.0500   99.900000        0.050000     1.0      -523.591377          True           True    True
3    -221.041377    -223.541377 -2576.942334  -221.041377  202.300000  -223.541377     2.4000    0.100000        0.100000     1.0      -523.591377         False          False    True
4    -120.991377    -123.541377 -2576.942334  -120.991377  100.150000  -123.541377     2.4500    0.100000        0.100000     1.0      -523.591377         False          False    True
5     -72.016377    -123.541377 -2576.942334   -72.016377   49.075000  -123.541377     2.4500   49.075000      -50.925000     1.0      -523.591377         False          False    True
6     425.833623      76.458623 -2576.942334   425.833623  546.925000    76.458623   349.2750    0.100000        0.100000     1.0      -523.591377         False          False    True
7     698.196123     141.377373 -2576.942334   698.196123  272.462500   141.377373   521.6375   35.181250        0.100000     1.0      -523.591377         False          False    True
8     798.246123     176.608398 -2576.942334   798.246123  135.231250   176.608398   521.6875   99.950225        0.100000     1.0      -523.591377         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/10.[0m
[08/15 12:50:35]  --------------------------------------------------------------------------------
[08/15 12:50:35]  Iteration: 23 (0 solution, 22 counterexamples)
[08/15 12:50:36]  Generator returned sat in 0.140261 secs.
[08/15 12:50:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:37]  Improved number of small numbers from 17 to 26 out of a max of 113
[08/15 12:50:37]  Verifer returned sat in 1.659156 secs.
[08/15 12:50:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -451.569824    -564.594730 -2535.888981  -451.569824    0.050049  -564.594730    0.000000  113.024906      113.024906     4.0       -564.59473            -1             -1     -1
1    -451.557193    -564.582275 -2535.888981  -451.557193  113.037537  -564.582275    0.012512  113.012570       13.025024     4.0       -564.59473         False           True  False
2    -451.532227    -451.557193 -2535.888981  -451.532227  113.037537  -451.557193    0.012512    0.012454      -86.950009     1.0       -564.59473          True           True   True
3    -221.041377    -267.808845 -2535.888981  -221.041377  230.503304  -267.808845   30.528328   16.239140       13.025024     1.0       -564.59473         False          False   True
4    -121.028865    -164.594730 -2535.888981  -121.028865  116.251652  -164.594730   30.540841   13.025024       13.025024     1.0       -564.59473         False          False   True
5     -74.928063    -164.594730 -2535.888981   -74.928063   59.125826  -164.594730   30.540841   59.125826      -40.874174     1.0       -564.59473         False          False   True
6     324.952719      35.405270 -2535.888981   324.952719  459.006608    35.405270  276.522424   13.025024       13.025024     1.0       -564.59473         False          False   True
7     542.430999     132.191155 -2535.888981   542.430999  230.503304   132.191155  394.000704   16.239140       13.025024     1.0       -564.59473         False          False   True
8     642.443511     235.405029 -2535.888981   642.443511  116.251652   235.405029  394.013216   13.025265       13.025024     1.0       -564.59473         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=106701/8192.[0m
[08/15 12:50:38]  --------------------------------------------------------------------------------
[08/15 12:50:38]  Iteration: 24 (0 solution, 23 counterexamples)
[08/15 12:50:39]  Generator returned sat in 0.137830 secs.
[08/15 12:50:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:39]  Improved gap from 0.0 to 100
[08/15 12:50:40]  Improved number of small numbers from 60 to 81 out of a max of 114
[08/15 12:50:40]  Verifer returned sat in 1.472788 secs.
[08/15 12:50:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -851.379639    -851.479736 -2249.203818  -851.379639    0.099854  -851.479736        0.0    0.100098       -0.099814     1.0      -851.479736            -1             -1    True
1    -751.279785    -851.279785 -2249.203818  -751.279785  100.199951  -851.279785        0.0  100.000000        0.000039     1.0      -851.479736         False          False    True
2    -751.279785    -751.279824 -2249.203818  -751.279785    0.100098  -751.279824        0.0    0.000039      -99.999961     2.0      -751.279785         False          False    True
3    -279.679824    -647.279824 -2249.203818  -279.679824  471.600000  -647.279824      271.4   96.200000        0.200000     1.0      -751.279785         False           True   False
4    -141.079824    -467.379824 -2249.203818  -141.079824  234.800000  -467.379824      310.0   16.300000        0.200000     1.0      -751.279785         False          False    True
5     -40.979824    -351.279824 -2249.203818   -40.979824  116.400000  -351.279824      310.1    0.200000        0.200000     1.0      -751.279785         False          False    True
6      16.020176    -351.279824 -2249.203818    16.020176   57.200000  -351.279824      310.1   57.200000      -42.800000     1.0      -751.279785         False          False    True
7     430.420176    -251.279824 -2249.203818   430.420176  471.600000  -251.279824      581.5  100.200000        0.200000     1.0      -751.279785         False          False    True
8     565.020176    -150.979980 -2249.203818   565.020176  234.800000  -150.979980      616.1   99.900156        0.200000     1.0      -751.279785         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=1/5.[0m
[08/15 12:50:41]  --------------------------------------------------------------------------------
[08/15 12:50:41]  Iteration: 25 (0 solution, 24 counterexamples)
[08/15 12:50:43]  Generator returned sat in 0.985072 secs.
[08/15 12:50:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:43]  Improved gap from 0.00125 to 100
[08/15 12:50:44]  Improved number of small numbers from 60 to 97 out of a max of 114
[08/15 12:50:44]  Verifer returned sat in 1.129112 secs.
[08/15 12:50:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -240.780029    -675.512939 -2524.970485  -240.780029  434.733398  -675.512939        0.0  434.732910      334.733128     4.0      -675.512939            -1             -1   False
1    -240.780029    -475.513184 -2524.970485  -240.780029  434.633301  -475.513184        0.0  234.733154      234.733128     4.0      -240.780029         False          False   False
2     -40.979980    -375.513184 -2524.970485   -40.979980  434.533203  -375.513184        0.0  334.533203      334.533177     5.0       -40.979980         False          False   False
3     -40.979980    -275.513184 -2524.970485   -40.979980   17.679167  -275.513184        0.0  234.533203      234.533177     4.0       -40.979980         False          False   False
4     -40.979980    -175.613037 -2524.970485   -40.979980   34.358333  -175.613037        0.0  134.633057      134.533177     3.0       -40.979980         False          False   False
5     -40.979980    -175.512939 -2524.970485   -40.979980   67.716667  -175.512939        0.0  134.532959       34.533177     4.0       -40.979980         False          False   False
6     -40.979980     -75.513158 -2524.970485   -40.979980  134.433333   -75.513158        0.0   34.533177      -65.466823     5.0       -40.979980         False          False   False
7     192.353509      24.486842 -2524.970485   192.353509  267.866667    24.486842        0.0  167.866667       67.866667     1.0       -40.979980         False          False   False
8     559.220176     159.020264 -2524.970485   559.220176  534.733333   159.020264        0.1  400.099912      334.633333     2.0       -40.979980         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=10039/30.[0m
[08/15 12:50:45]  --------------------------------------------------------------------------------
[08/15 12:50:45]  Iteration: 26 (0 solution, 25 counterexamples)
[08/15 12:50:46]  Generator returned sat in 0.928856 secs.
[08/15 12:50:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:47]  Improved gap from 0.0008333333333333334 to 100
[08/15 12:50:47]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:50:47]  Verifer returned sat in 0.604154 secs.
[08/15 12:50:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -542.109863    -642.059814 -2524.970459  -542.109863  100.050000  -642.059814   0.050049   99.899902       99.899902     3.0      -642.059814            -1             -1     -1
1    -542.009766    -542.109863 -2524.970459  -542.009766  100.000000  -542.109863   0.050049    0.050049        0.000000     1.0      -542.059814         False           True   True
2    -442.059814    -538.909912 -2524.970459  -442.059814  100.000000  -538.909912   0.050049   96.800049       -0.050049     1.0      -542.059814         False          False   True
3    -438.909668    -442.059814 -2524.970459  -438.909668   99.950195  -442.059814   0.050049    3.100098      -96.899902     1.0      -438.959717         False          False   True
4    -241.009766    -342.059814 -2524.970459  -241.009766  201.000000  -342.059814   0.050049  101.000000        1.000000     1.0      -438.959717         False          False   True
5    -140.959717    -241.009766 -2524.970459  -140.959717  201.050049  -241.009766   0.050049  100.000000        1.050049     1.0      -438.959717         False          False   True
6      57.940430    -140.959717 -2524.970459    57.940430  298.900146  -140.959717   0.050049  198.850098       99.950195     1.0      -438.959717         False          False   True
7     161.190430      57.940186 -2524.970459   161.190430  302.100098    57.940186   0.050049  103.200195      103.200195     1.0      -438.959717         False          False   True
8     458.990234      58.840332 -2524.970459   458.990234  401.000000    58.840332   0.099854  400.050049      300.950195     2.0      -438.959717         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=308173/1024.[0m
[08/15 12:50:48]  --------------------------------------------------------------------------------
[08/15 12:50:48]  Iteration: 27 (0 solution, 26 counterexamples)
[08/15 12:50:49]  Generator returned sat in 0.164284 secs.
[08/15 12:50:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:50]  Improved gap from 0.01125 to 68.75
[08/15 12:50:50]  Improved number of small numbers from 77 to 81 out of a max of 114
[08/15 12:50:50]  Verifer returned sat in 1.833307 secs.
[08/15 12:50:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -712.205811    -712.208467 -2454.821807  -712.205811    0.001465  -712.208467    0.00125    0.001406        0.001406     8.0      -712.208467            -1             -1     -1
1    -612.205967    -612.208496 -2454.821807  -612.205967  100.001250  -612.208496    0.00125    0.001279        0.001250     1.0      -712.208467         False           True   True
2    -512.208467    -512.210967 -2454.821807  -512.208467   99.998779  -512.210967    0.00125    0.001250       -0.001250     1.0      -512.209717         False          False   True
3    -412.207217    -512.208467 -2454.821807  -412.207217  100.002500  -512.208467    0.00125  100.000000        0.000000     1.0      -512.209717         False          False   True
4    -211.204717    -312.208467 -2454.821807  -211.204717  301.002500  -312.208467   97.49500    3.508750        3.508750     1.0      -512.209717         False          False   True
5    -211.204717    -312.208467 -2426.070557  -211.204717    0.010000  -312.208467   97.49500    3.508750      -67.740000     1.0      -512.209717         False          False   True
6     -13.700967    -140.959717 -2426.070557   -13.700967  201.012500  -140.959717  123.75000    3.508750        3.508750     1.0      -512.209717         False          False   True
7     -13.700967    -140.959717 -2394.820557   -13.700967    0.010000  -140.959717  123.75000    3.508750      -65.241250     1.0      -512.209717         False          False   True
8     155.049033     -72.209717 -2394.820557   155.049033  172.258750   -72.209717  123.75000  103.508750        3.508750     1.0      -512.209717         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=2807/800.[0m
[08/15 12:50:51]  --------------------------------------------------------------------------------
[08/15 12:50:51]  Iteration: 28 (0 solution, 27 counterexamples)
[08/15 12:50:53]  Generator returned sat in 0.691159 secs.
[08/15 12:50:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:50:53]  Improved gap from 39.9996875 to 100
[08/15 12:50:53]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:50:53]  Verifer returned sat in 0.571461 secs.
[08/15 12:50:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    -612.206787    -712.207275 -2426.070557  -612.206787    0.001221  -712.207275   0.001465   99.999023       99.999023     7.0      -712.207275            -1             -1     -1
1    -612.206055    -612.207764 -2426.070557  -612.206055   99.999756  -612.207764   0.001465    0.000244       -0.000244     1.0      -712.207275         False           True   True
2    -512.206299    -512.207764 -2426.070557  -512.206299  100.000000  -512.207764   0.001465    0.000000       -0.000488     1.0      -712.207275         False          False   True
3    -412.207275    -512.207275 -2426.070557  -412.207275   99.999023  -512.207275   0.001465   99.998535       -0.001465     1.0      -412.208740         False          False   True
4    -312.206787    -412.207275 -2426.070557  -312.206787  199.999023  -412.207275   0.001465   99.999023       -0.000977     1.0      -412.208740         False          False   True
5    -112.206543    -312.207275 -2426.070557  -112.206543  299.999268  -312.207275   0.001465  199.999268       99.999268     1.0      -412.208740         False          False   True
6      87.793701    -112.207275 -2426.070557    87.793701  399.999512  -112.207275   0.001465  199.999512      199.999512     1.0      -412.208740         False          False   True
7     487.793701    -112.207275 -2426.070557   487.793701  599.999512  -112.207275   0.001465  599.999512      499.999512     1.0      -412.208740         False          False   True
8     637.793701      87.792725 -2426.070557   637.793701  749.999512    87.792725  50.000977  500.000000      500.000000     2.0      -412.208740         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=500.[0m
[08/15 12:50:54]  --------------------------------------------------------------------------------
[08/15 12:50:54]  Iteration: 29 (0 solution, 28 counterexamples)
[08/15 12:51:01]  Generator returned sat in 5.912632 secs.
[08/15 12:51:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:01]  Improved gap from 0.0025 to 100
[08/15 12:51:01]  Improved number of small numbers from 90 to 94 out of a max of 114
[08/15 12:51:01]  Verifer returned sat in 0.740983 secs.
[08/15 12:51:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -612.507080    -712.207275 -2426.070557  -612.507080     0.099854  -712.207275        0.0    99.700195       99.700195     2.0      -712.207275            -1             -1    True
1    -612.207275    -612.407471 -2426.070557  -612.207275   100.000000  -612.407471        0.0     0.200195        0.000000     1.0      -712.207275         False          False    True
2    -512.207520    -612.207275 -2426.070557  -512.207520   100.199951  -612.207275        0.0    99.999756       -0.000244     2.0      -712.207275         False          False    True
3    -512.107275    -512.207275 -2426.070557  -512.107275   100.100000  -512.207275        0.0     0.100000      -99.900000     1.0      -512.107275         False          False    True
4    -312.007275    -312.207275 -2426.070557  -312.007275   200.200000  -312.207275        0.0     0.200000        0.200000     1.0      -512.107275         False          False    True
5      88.192725    -311.907275 -2426.070557    88.192725   400.400000  -311.907275        0.0   400.100000      300.400000     1.0      -512.107275         False          False    True
6     488.892725    -212.207275 -2426.070557   488.892725   800.800000  -212.207275        0.0   701.100000      601.100000     2.0      -512.107275         False          False    True
7    1389.392725     -12.207275 -2426.070557  1389.392725  1601.600000   -12.207275        0.0  1401.600000     1401.600000     3.0      -512.107275         False          False    True
8    3190.992725      87.792725 -2426.070557  3190.992725  3203.200000    87.792725     1701.5  1401.700000     1401.700000     4.0      -512.107275         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=14017/10.[0m
[08/15 12:51:02]  --------------------------------------------------------------------------------
[08/15 12:51:02]  Iteration: 30 (0 solution, 29 counterexamples)
[08/15 12:51:03]  Generator returned sat in 0.364020 secs.
[08/15 12:51:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:04]  Improved gap from 0.0008333333333333334 to 100
[08/15 12:51:04]  Improved number of small numbers from 82 to 95 out of a max of 114
[08/15 12:51:04]  Verifer returned sat in 0.926557 secs.
[08/15 12:51:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2281.057373   -2381.007324 -2426.070801 -2281.057373     0.050000 -2381.007324       0.00   99.949951       -0.049854     1.0     -2381.007324            -1             -1    True
1   -2181.007568   -2281.007324 -2426.070801 -2181.007568   199.999756 -2281.007324       0.00   99.999756       -0.000049     1.0     -2381.007324         False          False    True
2   -2081.057373   -2081.107520 -2426.070801 -2081.057373   199.949951 -2081.107520       0.00    0.050146       -0.049854     1.0     -2081.057373         False          False    True
3   -2047.707520   -2047.757520 -2426.070801 -2047.707520    33.400000 -2047.757520       0.00    0.050000      -66.700000     1.0     -2047.707520         False          False    True
4   -1980.957520   -1981.007520 -2426.070801 -1980.957520    66.800000 -1981.007520       0.00    0.050000      -99.950000     1.0     -2047.707520         False          False    True
5   -1847.407520   -1848.257520 -2426.070801 -1847.407520   133.600000 -1848.257520       0.00    0.850000      -66.400000     1.0     -2047.707520         False          False    True
6   -1581.057520   -1781.007520 -2426.070801 -1581.057520   267.200000 -1781.007520       0.00  199.950000       99.950000     1.0     -2047.707520         False          False    True
7   -1246.607520   -1581.007520 -2426.070801 -1246.607520   534.400000 -1581.007520       0.00  334.400000      334.400000     1.0     -2047.707520         False          False    True
8    -512.207520   -1580.957764 -2426.070801  -512.207520  1068.800000 -1580.957764     634.35  434.400244      334.450000     2.0     -2047.707520         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6689/20.[0m
[08/15 12:51:05]  --------------------------------------------------------------------------------
[08/15 12:51:05]  Iteration: 31 (0 solution, 30 counterexamples)
[08/15 12:51:08]  Generator returned sat in 1.932403 secs.
[08/15 12:51:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:12]  Improved gap from 0.0 to 79.6875
[08/15 12:51:12]  Improved number of small numbers from 65 to 114 out of a max of 114
[08/15 12:51:12]  Verifer returned sat in 4.517566 secs.
[08/15 12:51:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2757.969971   -2837.845215 -1869.233154 -2757.969971    0.100000 -2837.845215   0.000000  79.875244       79.875244     8.0     -2837.845215            -1             -1   False
1   -2757.870117   -2837.744873 -1849.208252 -2757.870117   79.975098 -2837.744873   0.000000  79.874756        0.000000     3.0     -2837.845215         False          False   False
2   -2597.607422   -2657.870117 -1849.208252 -2597.607422  240.137451 -2657.870117   0.100098  60.162598       60.162598     1.0     -2837.845215         False          False   False
3   -2497.707520   -2597.707520 -1849.208252 -2497.707520  160.062500 -2597.707520   0.100098  99.899902       60.062500     2.0     -2497.807617         False          False    True
4   -2397.507324   -2457.969971 -1849.208252 -2397.507324  200.100098 -2457.969971   0.200195  60.262451       60.162598     1.0     -2497.807617         False          False    True
5   -2397.507324   -2457.870117 -1828.895752 -2397.507324    1.000000 -2457.870117   0.200195  60.162598      -19.524902     2.0     -2497.807617         False          False    True
6   -2357.169922   -2378.182617 -1808.583252 -2357.169922  100.500000 -2378.182617   0.200195  20.812500      -58.875000     1.0     -2497.807617         False          False    True
7   -2217.969971   -2298.495117 -1788.908447 -2217.969971  160.012451 -2298.495117   0.200195  80.324951       -0.000244     1.0     -2497.807617         False          False    True
8   -2138.551270   -2218.069824 -1788.908203 -2138.551270  159.743652 -2218.069824   0.200195  79.318359      -20.581299     1.0     -2497.807617         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=123213/2048.[0m
[08/15 12:51:13]  --------------------------------------------------------------------------------
[08/15 12:51:13]  Iteration: 32 (0 solution, 31 counterexamples)
[08/15 12:51:16]  Generator returned sat in 1.621378 secs.
[08/15 12:51:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:17]  Improved gap from 0.00125 to 78.125
[08/15 12:51:17]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:51:17]  Verifer returned sat in 1.324681 secs.
[08/15 12:51:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2496.751221   -2696.726074 -1849.208496 -2496.751221    0.024902 -2696.726074        0.0  199.974854      199.974854     1.0     -2696.726074            -1             -1   False
1   -2496.751221   -2696.726074 -1849.208496 -2496.751221    0.025146 -2696.726074        0.0  199.974854       99.974854     1.0     -2696.726074         False          False   False
2   -2296.726074   -2496.726074 -1849.208496 -2296.726074  400.000000 -2496.726074        0.0  200.000000      200.000000     1.0     -2696.726074         False          False   False
3   -2296.726074   -2396.726318 -1849.208496 -2296.726074   85.699951 -2396.726318        0.0  100.000244      100.000000     2.0     -2296.726074         False          False   False
4   -2296.726074   -2302.326416 -1849.208496 -2296.726074   84.699951 -2302.326416        0.0    5.600342        0.000000     3.0     -2296.726074         False          False   False
5   -2218.626465   -2296.726074 -1827.333496 -2218.626465   83.699951 -2296.726074        0.0   78.099609       -0.025391     4.0     -2296.726074         False          False   False
6   -2214.026123   -2218.601074 -1805.458496 -2214.026123   82.699951 -2218.601074        0.0    4.574951      -73.550049     1.0     -2296.726074         False          False   False
7   -2136.901123   -2140.476074 -1783.583496 -2136.901123   81.699951 -2140.476074        0.0    3.574951      -74.550049     1.0     -2296.726074         False          False   False
8   -2059.776123   -2062.351074 -1783.583496 -2059.776123   80.699951 -2062.351074        0.0    2.574951      -97.425049     1.0     -2296.726074         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819303/4096.[0m
[08/15 12:51:18]  --------------------------------------------------------------------------------
[08/15 12:51:18]  Iteration: 33 (0 solution, 32 counterexamples)
[08/15 12:51:19]  Generator returned sat in 0.542172 secs.
[08/15 12:51:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:19]  Improved gap from 0.05 to 100
[08/15 12:51:20]  Improved number of small numbers from 80 to 114 out of a max of 114
[08/15 12:51:20]  Verifer returned sat in 0.453140 secs.
[08/15 12:51:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2936.476318   -3236.426025 -1849.20874 -2936.476318    0.050049 -3236.426025        0.0  299.949707      299.949707     4.0     -3236.426025            -1             -1   False
1   -2936.426025   -3236.426025 -1849.20874 -2936.426025  300.000000 -3236.426025        0.0  300.000000      200.000000     4.0     -3236.426025         False          False   False
2   -2636.476074   -3036.626221 -1849.20874 -2636.476074  599.949951 -3036.626221        0.0  400.150146      399.949951     3.0     -3236.426025         False          False   False
3   -2636.476074   -2936.426025 -1849.20874 -2636.476074  400.099854 -2936.426025        0.0  299.949951      299.949951     3.0     -2636.476074         False          False   False
4   -2536.326172   -2936.426025 -1849.20874 -2536.326172  400.099854 -2936.426025        0.0  400.099854      300.099854     3.0     -2636.476074         False          False   False
5   -2536.326172   -2736.426025 -1849.20874 -2536.326172  400.099854 -2736.426025        0.0  200.099854      200.099854     4.0     -2636.476074         False          False   False
6   -2336.326172   -2636.426025 -1849.20874 -2336.326172  400.099854 -2636.426025        0.0  300.099854      300.099854     3.0     -2636.476074         False          False   False
7   -2236.326172   -2536.426025 -1849.20874 -2236.326172  400.099854 -2536.426025        0.0  300.099854      300.099854     4.0     -2636.476074         False          False   False
8   -2136.326172   -2536.375977 -1849.20874 -2136.326172  400.099854 -2536.375977        0.0  400.049805      300.099854     5.0     -2636.476074         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=1638399/4096.[0m
[08/15 12:51:20]  --------------------------------------------------------------------------------
[08/15 12:51:20]  Iteration: 34 (0 solution, 33 counterexamples)
[08/15 12:51:23]  Generator returned sat in 1.727706 secs.
[08/15 12:51:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:24]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/15 12:51:24]  Verifer returned sat in 0.393435 secs.
[08/15 12:51:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3036.411133   -3136.410889 -1849.208984 -3036.411133    0.100000 -3136.410889   0.024902   99.974854       99.974609     4.0     -3136.410889            -1             -1     -1
1   -3036.411133   -3036.461182 -1849.208740 -3036.411133    0.100000 -3036.461182   0.024902    0.025146       -0.025146     4.0     -3136.410889         False          False   True
2   -3036.361084   -3036.410889 -1849.208740 -3036.361084    0.075195 -3036.410889   0.024902    0.024902      -99.975098     1.0     -3036.385986         False          False   True
3   -2636.311035   -2936.410889 -1849.208740 -2636.311035  400.074951 -2936.410889   0.024902  300.074951      200.074951     1.0     -3036.385986         False          False   True
4   -2536.311035   -2836.410889 -1849.208740 -2536.311035  400.074951 -2836.410889   0.024902  300.074951      200.074951     2.0     -3036.385986         False          False   True
5   -2436.311035   -2636.436035 -1849.208740 -2436.311035  400.074951 -2636.436035   0.024902  200.100098      200.074951     3.0     -3036.385986         False          False   True
6   -2236.336182   -2536.460938 -1849.208740 -2236.336182  400.074951 -2536.460938   0.024902  300.099854      300.049805     3.0     -3036.385986         False          False   True
7   -2136.361084   -2436.410889 -1849.208740 -2136.361084  400.074951 -2436.410889   0.024902  300.024902      300.024902     3.0     -3036.385986         False          False   True
8   -2036.311035   -2436.385986 -1849.208740 -2036.311035  400.074951 -2436.385986   0.049805  400.025146      300.050049     4.0     -3036.385986         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1229005/4096.[0m
[08/15 12:51:24]  --------------------------------------------------------------------------------
[08/15 12:51:24]  Iteration: 35 (0 solution, 34 counterexamples)
[08/15 12:51:27]  Generator returned sat in 2.176532 secs.
[08/15 12:51:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:28]  Improved gap from 0.0 to 39.0625
[08/15 12:51:28]  Improved number of small numbers from 92 to 114 out of a max of 114
[08/15 12:51:28]  Verifer returned sat in 0.353326 secs.
[08/15 12:51:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -3136.409668   -3136.410889 -1849.208984 -3136.409668  299.999756 -3136.410889   0.001221    0.000000        0.000000     5.0     -3136.410889            -1             -1     -1
1   -2836.410889   -3036.410889 -1849.208984 -2836.410889  299.998779 -3036.410889   0.001221  199.998779      199.998779     1.0     -2836.412109         False           True   True
2   -2736.409668   -3036.410889 -1849.208984 -2736.409668  300.000000 -3036.410889   0.001221  300.000000      200.000000     1.0     -2836.412109         False          False   True
3   -2497.345703   -2836.410889 -1849.208984 -2497.345703  539.063965 -2836.410889   0.002686  339.062500      339.062500     2.0     -2836.412109         False          False   True
4   -2497.345703   -2736.411133 -1849.208984 -2497.345703    1.000000 -2736.411133   0.002686  239.062744      239.062500     3.0     -2836.412109         False          False   True
5   -2497.345703   -2636.410889 -1849.208984 -2497.345703    0.010000 -2636.410889   0.002686  139.062500      139.062500     3.0     -2497.348389          True           True  False
6   -2497.345703   -2536.412354 -1849.208984 -2497.345703    0.010000 -2536.412354   0.002686   39.063965       39.062500     4.0     -2497.348389         False           True  False
7   -2497.345703   -2536.410889 -1788.271484 -2497.345703    0.010000 -2536.410889   0.002686   39.062500        0.000000     5.0     -2497.348389         False           True  False
8   -2497.345703   -2497.348389 -1727.333984 -2497.345703    0.010000 -2497.348389   0.002686    0.000000      -39.062500     6.0     -2497.348389         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5425/16.[0m
[08/15 12:51:28]  --------------------------------------------------------------------------------
[08/15 12:51:28]  Iteration: 36 (0 solution, 35 counterexamples)
[08/15 12:51:31]  Generator returned sat in 1.504060 secs.
[08/15 12:51:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:33]  Improved gap from 0.011025390625 to 79.6875
[08/15 12:51:33]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:51:33]  Verifer returned sat in 1.800979 secs.
[08/15 12:51:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -8933.724121   -8933.924316  3055.553467 -8933.724121    0.100000 -8933.924316   0.099854    0.100342        0.100342     1.0     -8933.924316            -1             -1     -1
1   -8783.024414   -8933.924316  3055.553467 -8783.024414  150.800049 -8933.924316   0.099854  150.800049       50.800049     1.0     -8933.924316         False          False   True
2   -8783.024414   -8784.424316  3055.553467 -8783.024414  150.699951 -8784.424316   0.099854    1.300049      -49.199951     2.0     -8783.124268         False          False   True
3   -8633.724365   -8633.924316  3055.553467 -8633.724365  150.600098 -8633.924316   0.099854    0.100098        0.100098     1.0     -8633.824219         False          False   True
4   -8482.824463   -8533.924316  3055.553467 -8482.824463  151.000000 -8533.924316   0.199951   50.899902       50.899902     1.0     -8633.824219         False          False   True
5   -8457.224365   -8533.086914  3075.028564 -8457.224365   76.500000 -8533.086914   0.199951   75.662598       -4.024902     2.0     -8633.824219         False          False   True
6   -8406.218262   -8453.399414  3095.341064 -8406.218262  126.668701 -8453.399414   0.199951   46.981201      -32.706299     1.0     -8633.824219         False          False   True
7   -8361.937012   -8373.711914  3115.653564 -8361.937012   91.262451 -8373.711914   0.199951   11.574951      -68.112549     1.0     -8633.824219         False          False   True
8   -8292.405762   -8294.024170  3115.653564 -8292.405762   81.106201 -8294.024170   0.199951    1.418457      -98.581299     1.0     -8633.824219         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=104243/2048.[0m
[08/15 12:51:34]  --------------------------------------------------------------------------------
[08/15 12:51:34]  Iteration: 37 (0 solution, 36 counterexamples)
[08/15 12:51:46]  Generator returned sat in 11.417564 secs.
[08/15 12:51:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:47]  Improved gap from 0.0 to 79.6875
[08/15 12:51:48]  Improved number of small numbers from 61 to 66 out of a max of 114
[08/15 12:51:48]  Verifer returned sat in 1.739507 secs.
[08/15 12:51:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9460.428223   -9560.431914  3233.489668 -9460.428223    0.001465 -9560.431914    0.00125  100.002441      100.002441     1.0     -9560.431914            -1             -1     -1
1   -8783.024414   -9560.431914  3233.489668 -8783.024414  777.406250 -9560.431914  677.40500  100.002500        0.002500     1.0     -9560.431914         False          False   True
2   -8783.021914   -9460.428164  3243.798418 -8783.021914  100.005000 -9460.428164  677.40500    0.001250      -89.686250     1.0     -9460.426914         False          False   True
3   -8623.895664   -9301.301914  3243.798418 -8623.895664  159.127500 -9301.301914  677.40500    0.001250      -30.560000     1.0     -9460.426914         False          False   True
4   -8493.331914   -9170.740664  3243.798418 -8493.331914  130.565000 -9170.740664  677.40625    0.002500        0.002500     1.0     -9460.426914         False          False   True
5   -8493.324414   -9170.736914  3264.107168 -8493.324414    0.010000 -9170.736914  677.40625    0.006250      -79.681250     1.0     -9460.426914         False          False   True
6   -8347.485039   -9091.049414  3284.419668 -8347.485039  145.845625 -9091.049414  677.40625   66.158125      -13.529375     1.0     -9460.426914         False          False   True
7   -8307.516914   -9011.361914  3304.732168 -8307.516914  106.126250 -9011.361914  677.40625   26.438750      -53.248750     1.0     -9460.426914         False          False   True
8   -8253.266289   -8931.674316  3304.732178 -8253.266289   80.689375 -8931.674316  677.40625    1.001777      -98.998115     1.0     -9460.426914         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/15 12:51:49]  --------------------------------------------------------------------------------
[08/15 12:51:49]  Iteration: 38 (0 solution, 37 counterexamples)
[08/15 12:51:51]  Generator returned sat in 1.474313 secs.
[08/15 12:51:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:51:52]  Improved gap from 0.0 to 100
[08/15 12:51:53]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/15 12:51:53]  Verifer returned sat in 1.493028 secs.
[08/15 12:51:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -9642.074951   -9642.124863  3304.732168 -9642.074951   93.900146 -9642.124863        0.0    0.049912      -93.750088     1.0     -9642.124863            -1             -1    True
1   -9548.274863   -9548.324863  3304.732168 -9548.274863   93.850000 -9548.324863        0.0    0.050000      -99.950000     1.0     -9548.274863         False          False    True
2   -9248.374863   -9348.324863  3304.732168 -9248.374863  299.950000 -9348.324863        0.0   99.950000       99.950000     1.0     -9548.274863         False          False    True
3   -9248.374863   -9348.324863  3304.732168 -9248.374863    0.050000 -9348.324863        0.0   99.950000       -0.050000     1.0     -9248.374863         False          False    True
4   -9200.374863   -9248.324863  3304.732168 -9200.374863  147.950000 -9248.324863        0.0   47.950000      -52.050000     1.0     -9248.374863         False          False    True
5   -8949.374863   -9148.324863  3304.732168 -8949.374863  298.950000 -9148.324863        0.0  198.950000       98.950000     1.0     -9248.374863         False          False    True
6   -8748.374863   -8948.324863  3304.732168 -8748.374863  399.950000 -8948.324863        0.0  199.950000      199.950000     1.0     -9248.374863         False          False    True
7   -8347.374863   -8948.274658  3304.732168 -8347.374863  600.950000 -8948.274658        0.0  600.899795      500.950000     2.0     -9248.374863         False          False    True
8   -8347.374863   -8748.324951  3304.732168 -8347.374863  301.475000 -8748.324951        0.0  400.950088      400.950000     2.0     -8347.374863          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=512973/1024.[0m
[08/15 12:51:53]  --------------------------------------------------------------------------------
[08/15 12:51:53]  Iteration: 39 (0 solution, 38 counterexamples)
[08/15 12:52:02]  Generator returned sat in 7.630250 secs.
[08/15 12:52:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:52:03]  Improved gap from 0.1 to 78.125
[08/15 12:52:04]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:52:04]  Verifer returned sat in 1.325134 secs.
[08/15 12:52:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -9262.874756   -9546.324951  3266.507080 -9262.874756    0.100000 -9546.324951   0.000000  283.450195      183.450195     2.0     -9546.324951            -1             -1    True
1   -9262.874756   -9446.324951  3266.507080 -9262.874756  183.449951 -9446.324951   0.000000  183.450195       83.450195     2.0     -9546.324951         False          False    True
2   -9262.874756   -9262.974854  3266.507080 -9262.874756  183.350000 -9262.974854   0.000000    0.100098      -16.549805     3.0     -9262.874756         False          False    True
3   -9079.725098   -9146.324951  3266.507080 -9079.725098  183.249756 -9146.324951   0.000000   66.599854       66.599854     1.0     -9079.725098         False          False    True
4   -8947.324951   -9046.324951  3266.507080 -8947.324951  199.000000 -9046.324951  15.450195   83.549805       83.549805     1.0     -9079.725098         False          False    True
5   -8947.324951   -9046.224854  3282.957031 -8947.324951    1.000000 -9046.224854  15.450195   83.449707       -0.000244     2.0     -9079.725098         False          False    True
6   -8923.399658   -8962.675049  3304.732178 -8923.399658  107.375000 -8962.675049  15.450195   23.825195      -54.299805     1.0     -9079.725098         False          False    True
7   -8856.399902   -8884.550049  3326.606934 -8856.399902   90.824951 -8884.550049  15.450195   12.699951      -65.425293     1.0     -9079.725098         False          False    True
8   -8789.212402   -8806.424805  3326.606934 -8789.212402   79.887451 -8806.424805  15.450195    1.762207      -98.237793     1.0     -9079.725098         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=85555/1024.[0m
[08/15 12:52:04]  --------------------------------------------------------------------------------
[08/15 12:52:04]  Iteration: 40 (0 solution, 39 counterexamples)
[08/15 12:52:11]  Generator returned sat in 5.761570 secs.
[08/15 12:52:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:52:13]  Improved gap from 0.0033333333333333335 to 79.6875
[08/15 12:52:14]  Improved number of small numbers from 66 to 71 out of a max of 114
[08/15 12:52:14]  Verifer returned sat in 2.628998 secs.
[08/15 12:52:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -9233.303467   -9233.308701  3206.507080 -9233.303467    0.100098 -9233.308701     0.0025    0.002734       -0.002266     9.0     -9233.308701            -1             -1     -1
1   -9033.303701   -9233.303701  3206.507080 -9033.303701  200.002500 -9233.303701    20.3150  179.685000       79.685000     1.0     -9233.308701         False           True   True
2   -9012.988701   -9109.148701  3206.507080 -9012.988701  200.000000 -9109.148701    20.3150   75.845000        0.000000     2.0     -9033.303701         False          False   True
3   -8912.986201   -8933.303701  3206.507080 -8912.986201  175.847500 -8933.303701    20.3150    0.002500        0.002500     1.0     -8933.301201         False           True  False
4   -8612.983701   -8833.303701  3206.507080 -8612.983701  300.005000 -8833.303701   140.6350   79.685000       79.685000     1.0     -8933.301201         False          False  False
5   -8612.983701   -8833.303701  3226.819580 -8612.983701    0.010000 -8833.303701   140.6350   79.685000       -0.002500     1.0     -8933.301201         False          False   True
6   -8553.741201   -8753.616201  3247.132080 -8553.741201  138.927500 -8753.616201   140.6350   59.240000      -20.447500     1.0     -8933.301201         False          False   True
7   -8452.673701   -8672.993701  3266.509580 -8452.673701  160.307500 -8672.993701   140.6350   79.685000       -0.002500     1.0     -8933.301201         False          False   True
8   -8371.049951   -8593.306152  3266.509766 -8371.049951  161.308750 -8593.306152   140.6350   81.621201      -18.378564     1.0     -8933.301201         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=15937/200.[0m
[08/15 12:52:14]  --------------------------------------------------------------------------------
[08/15 12:52:14]  Iteration: 41 (0 solution, 40 counterexamples)
[08/15 12:52:17]  Generator returned sat in 0.971444 secs.
[08/15 12:52:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:52:18]  Improved gap from 0.998779296875 to 68.75
[08/15 12:52:18]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:52:18]  Verifer returned sat in 1.426815 secs.
[08/15 12:52:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -7890.921143   -7990.932617  3176.256836 -7890.921143    0.000488 -7990.932617   0.001709  100.009766       99.999756     6.0     -7990.932617            -1             -1     -1
1   -7890.920410   -7890.922852  3176.256836 -7890.920410  100.010498 -7890.922852   0.001709    0.000732        0.000488     3.0     -7990.932617         False           True  False
2   -7890.920410   -7890.922607  3206.507080 -7890.920410    0.000488 -7890.922607   0.001709    0.000488      -69.749268     2.0     -7890.922119          True           True  False
3   -7821.170654   -7821.172852  3236.757080 -7821.170654   69.750244 -7821.172852   0.001709    0.000488      -69.749512     1.0     -7890.922119         False           True  False
4   -7651.411377   -7651.432129  3236.757080 -7651.411377  169.759766 -7651.432129   0.010742    0.010010        0.000732     1.0     -7890.922119         False          False  False
5   -7651.411377   -7651.422852  3267.006836 -7651.411377    0.010000 -7651.422852   0.010742    0.000732      -69.749512     2.0     -7890.922119         False          False   True
6   -7411.912354   -7581.672607  3267.006836 -7411.912354  239.499756 -7581.672607  69.759521  100.000732        0.000732     1.0     -7481.671875          True           True  False
7   -7411.912354   -7481.672607  3296.766846 -7411.912354    0.010000 -7481.672607  69.759521    0.000732      -70.239258     2.0     -7481.671875         False          False   True
8   -7242.153564   -7411.432617  3296.766846 -7242.153564  169.759521 -7411.432617  69.759521   99.519531       -0.480469     1.0     -7481.671875         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=3/4096.[0m
[08/15 12:52:19]  --------------------------------------------------------------------------------
[08/15 12:52:19]  Iteration: 42 (0 solution, 41 counterexamples)
[08/15 12:52:21]  Generator returned sat in 1.377305 secs.
[08/15 12:52:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:52:22]  Improved gap from 0.0 to 39.0625
[08/15 12:52:22]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:52:22]  Verifer returned sat in 0.792253 secs.
[08/15 12:52:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -7890.323730   -8290.323730  3375.657959 -7890.323730    0.050049 -8290.323730   0.050049  399.949951      299.949951     4.0     -8290.323730            -1             -1     -1
1   -7890.323730   -8190.323730  3375.657959 -7890.323730  299.949951 -8190.323730   0.050049  299.949951      199.949951     3.0     -8290.323730         False           True   True
2   -7890.323730   -7990.323730  3375.657959 -7890.323730  299.900000 -7990.323730   0.050049   99.949951       99.949951     3.0     -7890.373779          True           True  False
3   -7551.211182   -7890.323975  3375.657959 -7551.211182  439.062500 -7890.323975   0.050049  339.062744      339.062500     1.0     -7890.373779         False           True  False
4   -7551.211182   -7790.323730  3375.657959 -7551.211182    1.000000 -7790.323730   0.050049  239.062500      239.062500     2.0     -7890.373779         False          False  False
5   -7551.211182   -7690.323975  3375.657959 -7551.211182    1.000000 -7690.323975   0.050049  139.062744      139.062500     3.0     -7551.261230          True           True  False
6   -7551.211182   -7590.373779  3375.657959 -7551.211182    1.000000 -7590.373779   0.050049   39.112549       39.062500     4.0     -7551.261230         False           True  False
7   -7551.211182   -7590.323730  3436.595459 -7551.211182    1.000000 -7590.323730   0.050049   39.062500        0.000000     5.0     -7551.261230         False           True  False
8   -7551.211182   -7551.261230  3436.595459 -7551.211182    1.000000 -7551.261230   0.050049    0.000000     -100.000000     6.0     -7551.261230         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5425/16.[0m
[08/15 12:52:23]  --------------------------------------------------------------------------------
[08/15 12:52:23]  Iteration: 43 (0 solution, 42 counterexamples)
[08/15 12:52:26]  Generator returned sat in 1.978988 secs.
[08/15 12:52:26]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:52:33]  Improved gap from 1.005 to 79.6875
[08/15 12:52:34]  Improved number of small numbers from 65 to 72 out of a max of 114
[08/15 12:52:34]  Verifer returned sat in 7.493741 secs.
[08/15 12:52:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -6578.393311   -6678.390711  3375.657959 -6578.393311    0.002686 -6678.390711     0.0000  99.997401       99.997401     1.0     -6678.390711            -1             -1   False
1   -6498.700711   -6578.390711  3375.657959 -6498.700711  179.690000 -6578.390711     0.0025  79.687500       79.687500     1.0     -6678.390711         False          False   False
2   -6498.698211   -6554.225711  3375.657959 -6498.698211   79.690000 -6554.225711     0.0025  55.525000      -20.310000     2.0     -6498.700711         False          False    True
3   -6194.853211   -6378.390711  3375.657959 -6194.853211  359.370000 -6378.390711   103.8500  79.687500       79.687500     1.0     -6498.700711         False           True   False
4   -6094.855711   -6278.393211  3375.657959 -6094.855711  179.685000 -6278.393211   103.8500  79.687500       79.685000     1.0     -6498.700711         False          False    True
5   -6094.855711   -6278.390711  3395.970459 -6094.855711    0.010000 -6278.390711   103.8500  79.685000       -0.002500     2.0     -6498.700711         False          False    True
6   -6035.618211   -6198.703211  3415.350586 -6035.618211  138.922500 -6198.703211   103.8500  59.235000      -21.384873     1.0     -6139.468211          True           True   False
7   -5934.548211   -6118.083211  3435.662842 -5934.548211  160.305000 -6118.083211   103.8500  79.685000       -0.002617     1.0     -6139.468211         False          False   False
8   -5852.925711   -6038.395508  3435.662842 -5852.925711  161.307500 -6038.395508   103.8500  81.619796      -18.380117     1.0     -6139.468211         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1275/16.[0m
[08/15 12:52:34]  --------------------------------------------------------------------------------
[08/15 12:52:34]  Iteration: 44 (0 solution, 43 counterexamples)
[08/15 12:52:38]  Generator returned sat in 1.834997 secs.
[08/15 12:52:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:52:38]  Improved gap from 0.00067138671875 to 100
[08/15 12:52:39]  Improved number of small numbers from 68 to 78 out of a max of 114
[08/15 12:52:39]  Verifer returned sat in 1.274125 secs.
[08/15 12:52:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6598.700928   -6798.700711  3375.657959 -6598.700928  300.000000 -6798.700711    0.00125  199.998534       99.998534     4.0     -6798.700711            -1             -1     -1
1   -6498.700711   -6598.700711  3375.657959 -6498.700711  299.998750 -6598.700711    0.00125   99.998750       99.998750     1.0     -6498.701961         False          False   True
2   -6098.699461   -6498.700928  3375.657959 -6098.699461  500.000000 -6498.700928    0.00125  400.000216      400.000000     1.0     -6498.701961         False          False   True
3   -6098.699461   -6398.701904  3375.657959 -6098.699461   63.375312 -6398.701904    0.00125  300.001193      300.000000     2.0     -6098.700711         False          False   True
4   -6098.699461   -6398.700711  3375.657959 -6098.699461  125.750625 -6398.700711    0.00125  300.000000      200.000000     3.0     -6098.700711         False          False   True
5   -6098.699461   -6198.700711  3375.657959 -6098.699461  250.501250 -6198.700711    0.00125  100.000000      100.000000     4.0     -6098.700711         False          False   True
6   -5698.696961   -6098.701904  3375.657959 -5698.696961  500.002500 -6098.701904    0.00250  400.002443      400.001250     5.0     -6098.700711         False          False   True
7   -5698.696961   -6098.700711  3375.657959 -5698.696961    0.010000 -6098.700711    0.00250  400.001250      300.001250     6.0     -6098.700711         False           True   True
8   -5698.696961   -5898.700928  3375.657959 -5698.696961  151.000000 -5898.700928    0.00250  200.001466      200.001250     3.0     -6098.700711         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=320001/800.[0m
[08/15 12:52:40]  --------------------------------------------------------------------------------
[08/15 12:52:40]  Iteration: 45 (0 solution, 44 counterexamples)
[08/15 12:52:50]  Generator returned sat in 9.595947 secs.
[08/15 12:52:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:52:53]  Improved gap from 0.0 to 78.125
[08/15 12:52:54]  Improved number of small numbers from 35 to 60 out of a max of 114
[08/15 12:52:54]  Verifer returned sat in 3.720103 secs.
[08/15 12:52:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6387.168701   -6592.793944  3610.279785 -6387.168701    0.000488 -6592.793944   0.001221  205.624022      105.624205     4.0     -6592.793944            -1             -1     -1
1   -6387.168701   -6492.793701  3610.279785 -6387.168701  205.623779 -6492.793701   0.001221  105.623779        5.624205     2.0     -6592.793944         False          False   True
2   -6387.168701   -6387.170165  3617.407959 -6387.168701  105.623535 -6387.170165   0.001221    0.000243      -87.247621     3.0     -6387.169922         False          False   True
3   -6259.794860   -6259.796385  3617.407959 -6259.794860  127.374084 -6259.796385   0.001221    0.000305      -59.873779     1.0     -6387.169922         False          False   True
4   -6094.296385   -6099.922301  3617.407959 -6094.296385  165.498779 -6099.922301   0.001526    5.624390        5.624390     1.0     -6387.169922         False          False   True
5   -6016.171385   -6094.297606  3633.658264 -6016.171385   83.749390 -6094.297606   0.001526   78.124695       -0.000305     1.0     -6387.169922         False          False   True
6   -5948.859801   -6016.172606  3655.533264 -5948.859801  145.436279 -6016.172606   0.001526   67.311279      -10.813721     1.0     -6387.169922         False          False   True
7   -5895.359191   -5938.047606  3677.408203 -5895.359191  120.811890 -5938.047606   0.001526   42.686890      -35.438171     1.0     -6387.169922         False          False   True
8   -5858.108733   -5859.922363  3677.408203 -5858.108733   79.937347 -5859.922363   0.001526    1.812104      -98.187714     1.0     -6387.169922         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=46075/8192.[0m
[08/15 12:52:55]  --------------------------------------------------------------------------------
[08/15 12:52:55]  Iteration: 46 (0 solution, 45 counterexamples)
[08/15 12:53:01]  Generator returned sat in 4.708244 secs.
[08/15 12:53:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:02]  Improved gap from 0.0 to 68.75
[08/15 12:53:02]  Improved number of small numbers from 79 to 114 out of a max of 114
[08/15 12:53:02]  Verifer returned sat in 0.936874 secs.
[08/15 12:53:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6419.916260   -6488.667480  3554.907959 -6419.916260    0.001250 -6488.667480   0.001221   68.750000       67.251221     4.0     -6488.667480            -1             -1     -1
1   -6387.168945   -6419.916016  3554.907959 -6387.168945  101.497314 -6419.916016   0.001221   32.745850       -0.001465     1.0     -6488.667480         False          False   True
2   -6318.418701   -6387.168701  3586.157959 -6318.418701  101.496094 -6387.168701   0.001221   68.748779       -0.001221     1.0     -6318.419922         False          False   True
3   -6285.672363   -6318.418701  3617.407715 -6285.672363  101.495117 -6318.418701   0.001221   32.745117      -36.005127     1.0     -6285.673584         False          False   True
4   -6149.168701   -6149.668701  3617.407715 -6149.168701  169.248779 -6149.668701   0.488525    0.011475        0.011230     1.0     -6285.673584         False          False   True
5   -6149.168701   -6149.658691  3647.159180 -6149.168701    0.010000 -6149.658691   0.488525    0.001465      -70.237305     2.0     -6285.673584         False          False   True
6   -5912.660156   -6079.419922  3647.159180 -5912.660156  236.510010 -6079.419922  66.748535  100.011230        0.011230     1.0     -6285.673584         False          False   True
7   -5912.660156   -5979.419922  3678.409180 -5912.660156    0.010000 -5979.419922  66.748535    0.011230      -68.738770     2.0     -6285.673584         False          False   True
8   -5743.422607   -5909.670166  3678.409180 -5743.422607  169.248779 -5909.670166  67.236084   99.011475        0.011230     1.0     -6285.673584         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=23/2048.[0m
[08/15 12:53:03]  --------------------------------------------------------------------------------
[08/15 12:53:03]  Iteration: 47 (0 solution, 46 counterexamples)
[08/15 12:53:08]  Generator returned sat in 3.912383 secs.
[08/15 12:53:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:09]  Improved gap from 0.01125 to 42.1875
[08/15 12:53:10]  Improved number of small numbers from 81 to 114 out of a max of 114
[08/15 12:53:10]  Verifer returned sat in 1.589500 secs.
[08/15 12:53:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -6387.269043   -6442.131592  3528.634277 -6387.269043    0.049805 -6442.131592   0.000000   54.862549       54.862549     2.0     -6442.131592            -1             -1    True
1   -6387.168945   -6387.218994  3531.533936 -6387.168945   54.962646 -6387.218994   0.000000    0.050049      -42.137695     1.0     -6442.131592         False          False    True
2   -6344.981689   -6345.031250  3531.534180 -6344.981689   42.237305 -6345.031250   0.000000    0.049561      -99.950195     1.0     -6344.981689         False          False    True
3   -6244.981445   -6245.031494  3589.346436 -6244.981445  100.049805 -6245.031494   0.000000    0.050049      -42.137695     1.0     -6344.981689         False          False    True
4   -6048.931396   -6157.756348  3589.346436 -6048.931396  196.100098 -6157.756348  11.724854   97.100098       42.187500     1.0     -6344.981689         False          False    True
5   -6048.931396   -6102.843750  3647.158936 -6048.931396   97.050049 -6102.843750  11.724854   42.187500        0.000000     2.0     -6344.981689         False          False    True
6   -5849.931396   -6060.656250  3647.158936 -5849.931396  241.187500 -6060.656250  68.537354  142.187500       42.187500     3.0     -6344.981689         False          False    True
7   -5849.931396   -5960.656250  3704.971436 -5849.931396  119.593750 -5960.656250  68.537354   42.187500        0.000000     2.0     -6344.981689         False          False    True
8   -5696.018799   -5917.806396  3704.971436 -5696.018799  196.100098 -5917.806396  80.262451  141.525146       42.187500     1.0     -6344.981689         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=675/16.[0m
[08/15 12:53:10]  --------------------------------------------------------------------------------
[08/15 12:53:10]  Iteration: 48 (0 solution, 47 counterexamples)
[08/15 12:53:20]  Generator returned sat in 8.043248 secs.
[08/15 12:53:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:20]  Improved gap from 0.012451171875 to 100
[08/15 12:53:20]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 12:53:20]  Verifer returned sat in 0.391368 secs.
[08/15 12:53:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -6460.85625    -6660.65625  3647.158936  -6460.85625  300.2000  -6660.65625        0.0   199.80            99.8     2.0      -6660.65625            -1             -1    True
1    -6360.45625    -6460.75625  3647.158936  -6360.45625  300.2000  -6460.75625        0.0   100.30           100.2     1.0      -6660.65625         False          False    True
2    -6160.65625    -6460.65625  3647.158936  -6160.65625  300.1000  -6460.65625        0.0   300.00           200.0     2.0      -6160.65625         False          False    True
3    -6160.65625    -6260.65625  3647.158936  -6160.65625   24.1125  -6260.65625        0.0   100.00           100.0     2.0      -6160.65625         False          False    True
4    -6160.65625    -6260.20625  3647.158936  -6160.65625   49.2250  -6260.20625        0.0    99.55             0.0     3.0      -6160.65625         False          False    True
5    -6160.65625    -6160.65625  3647.158936  -6160.65625   99.4500  -6160.65625        0.0     0.00          -100.0     4.0      -6160.65625         False          False    True
6    -5960.75625    -5961.35625  3647.158936  -5960.75625  199.9000  -5961.35625        0.0     0.60            -0.1     1.0      -6160.65625         False          False    True
7    -5560.55625    -5960.65625  3647.158936  -5560.55625  400.8000  -5960.65625        0.0   400.10           300.1     1.0      -6160.65625         False          False    True
8    -5158.05625    -5760.65625  3647.158936  -5158.05625  802.6000  -5760.65625      302.4   300.20           300.2     2.0      -6160.65625         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1501/5.[0m
[08/15 12:53:21]  --------------------------------------------------------------------------------
[08/15 12:53:21]  Iteration: 49 (0 solution, 48 counterexamples)
[08/15 12:53:25]  Generator returned sat in 2.002100 secs.
[08/15 12:53:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:25]  Improved gap from 0.0016666666666666668 to 100
[08/15 12:53:25]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:53:25]  Verifer returned sat in 0.680758 secs.
[08/15 12:53:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -6359.716553   -6558.966553  3044.968994 -6359.716553  599.199951 -6558.966553        0.0  199.250000       99.999756     3.0     -6558.966553            -1             -1    True
1   -5959.766602   -6359.716553  3044.968994 -5959.766602  599.199951 -6359.716553        0.0  399.949951      399.949707     3.0     -6558.966553         False          False    True
2   -5760.566406   -6359.716309  3044.968994 -5760.566406  599.150146 -6359.716309        0.0  599.149902      499.149902     2.0     -5760.566406         False          False    True
3   -5760.566406   -6159.766357  3044.968994 -5760.566406  397.100098 -6159.766357        0.0  399.199951      399.149902     3.0     -5760.566406         False          False    True
4   -5760.566406   -6159.716309  3044.968994 -5760.566406  398.100098 -6159.716309        0.0  399.149902      299.149902     4.0     -5760.566406         False          False    True
5   -5760.566406   -5959.716553  3044.968994 -5760.566406  399.100098 -5959.716553        0.0  199.150146      199.149902     4.0     -5760.566406         False          False    True
6   -5559.616455   -5959.666260  3044.968994 -5559.616455  400.100098 -5959.666260        0.0  400.049805      300.099854     5.0     -5760.566406         False          False    True
7   -5558.566162   -5759.716553  3044.968994 -5558.566162  401.100098 -5759.716553        0.0  201.150391      201.150146     2.0     -5760.566406         False          False    True
8   -5357.616455   -5659.716309  3044.968994 -5357.616455  402.100098 -5659.716309        0.0  302.099854      302.099854     3.0     -5760.566406         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=0, buffer=2496/5.[0m
[08/15 12:53:26]  --------------------------------------------------------------------------------
[08/15 12:53:26]  Iteration: 50 (0 solution, 49 counterexamples)
[08/15 12:53:33]  Generator returned sat in 5.990913 secs.
[08/15 12:53:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:35]  Improved gap from 6.591666666666667 to 79.6875
[08/15 12:53:36]  Improved number of small numbers from 86 to 114 out of a max of 114
[08/15 12:53:36]  Verifer returned sat in 2.124857 secs.
[08/15 12:53:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -6554.341309   -6654.341309  3044.968994 -6554.341309    0.100098 -6654.341309   0.100098  99.899902       99.899902     2.0     -6654.341309            -1             -1     -1
1   -6554.141357   -6554.341309  3044.968994 -6554.141357  100.099854 -6554.341309   0.100098   0.099854        0.099854     1.0     -6654.341309         False          False   True
2   -6454.141357   -6454.341309  3044.968994 -6454.141357  100.099854 -6454.341309   0.100098   0.099854        0.099854     1.0     -6654.341309         False          False   True
3   -6354.141357   -6383.341309  3044.968994 -6354.141357  100.099854 -6383.341309   0.100098  29.099854        0.099854     1.0     -6654.341309         False          False   True
4   -6247.741211   -6254.341309  3044.968994 -6247.741211  135.500000 -6254.341309   6.400146   0.199951        0.199951     1.0     -6654.341309         False          False   True
5   -6179.191162   -6254.041504  3064.981689 -6179.191162   68.750000 -6254.041504   6.400146  68.450195      -11.237305     1.0     -6654.341309         False          False   True
6   -6147.491455   -6174.354004  3085.294189 -6147.491455  100.149902 -6174.354004   6.400146  20.462402      -59.225098     1.0     -6654.341309         False          False   True
7   -6063.460205   -6094.666504  3105.606689 -6063.460205  104.493652 -6094.666504   6.400146  24.806152      -54.881348     1.0     -6654.341309         False          False   True
8   -6008.428955   -6014.979004  3105.606689 -6008.428955   79.837402 -6014.979004   6.400146   0.149902      -99.850098     1.0     -6654.341309         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/15 12:53:36]  --------------------------------------------------------------------------------
[08/15 12:53:36]  Iteration: 51 (0 solution, 50 counterexamples)
[08/15 12:53:41]  Generator returned sat in 2.744369 secs.
[08/15 12:53:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:53:42]  Improved gap from 0.0 to 39.0625
[08/15 12:53:42]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/15 12:53:42]  Verifer returned sat in 1.506063 secs.
[08/15 12:53:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -6594.566406   -6794.568848  3085.196533 -6594.566406    0.002441 -6794.568848   0.000000  200.002441      100.002441     2.0     -6794.568848            -1             -1   False
1   -6594.566406   -6594.569092  3085.196533 -6594.566406    0.002686 -6594.569092   0.000000    0.002686        0.002441     3.0     -6794.568848         False          False   False
2   -6494.569092   -6533.631592  3085.196533 -6494.569092  100.000000 -6533.631592   0.000000   39.062500       -0.000244     1.0     -6794.568848         False          False   False
3   -6395.569092   -6494.568848  3086.196533 -6395.569092  138.062500 -6494.568848   0.000000   98.999756       -0.000244     1.0     -6794.568848         False          False   False
4   -6195.568848   -6295.569092  3086.196533 -6195.568848  299.000000 -6295.569092   0.000000  100.000244      100.000000     1.0     -6794.568848         False          False   False
5   -5997.569092   -6295.566406  3086.196533 -5997.569092  298.000000 -6295.566406  58.937256  239.060059      139.062500     2.0     -6794.568848         False          False   False
6   -5997.569092   -6195.568848  3086.196533 -5997.569092    0.010000 -6195.568848  58.937256  139.062500       39.062500     3.0     -6794.568848         False          False    True
7   -5997.569092   -6095.568848  3147.134033 -5997.569092    0.010000 -6095.568848  58.937256   39.062500        0.000000     3.0     -6794.568848         False          False    True
8   -5997.569092   -6056.506348  3208.071533 -5997.569092    0.010000 -6056.506348  58.937256    0.000000      -39.062500     4.0     -6794.568848         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2225/16.[0m
[08/15 12:53:43]  --------------------------------------------------------------------------------
[08/15 12:53:43]  Iteration: 52 (0 solution, 51 counterexamples)
[08/15 12:53:58]  Generator returned sat in 13.729566 secs.
[08/15 12:53:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:06]  Improved gap from 0.1 to 76.5625
[08/15 12:54:07]  Improved number of small numbers from 62 to 77 out of a max of 114
[08/15 12:54:07]  Verifer returned sat in 8.628350 secs.
[08/15 12:54:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -6237.649170   -6314.311523  2704.939209 -6237.649170    0.100098 -6314.311523     0.0000  76.662354       76.662354     3.0     -6314.311523            -1             -1   False
1   -6237.649170   -6314.211592  2728.276777 -6237.649170    0.100098 -6314.211592     0.0000  76.562422       -0.000078     2.0     -6314.311523         False          False   False
2   -5995.091592   -6137.649092  2728.276777 -5995.091592  319.120000 -6137.649092   142.3575   0.200000        0.200000     1.0     -6314.311523         False          False   False
3   -5676.271592   -6037.649092  2728.276777 -5676.271592  319.020000 -6037.649092   361.1775   0.200000        0.200000     1.0     -6037.449092         False          False    True
4   -5516.961592   -5940.641592  2728.276777 -5516.961592  159.510000 -5940.641592   420.4875   3.192500        0.200000     1.0     -6037.449092         False          False    True
5   -5440.399092   -5937.349092  2751.414277 -5440.399092   79.755000 -5937.349092   420.4875  76.462500       -0.100000     1.0     -6037.449092         False          False    True
6   -5375.834092   -5860.786592  2774.194336 -5375.834092  141.027500 -5860.786592   420.4875  64.465000      -12.754941     1.0     -6037.449092         False          False    True
7   -5280.354092   -5783.566592  2791.469238 -5280.354092  159.945000 -5783.566592   420.4875  82.725000       -0.000039     1.0     -6037.449092         False          False    True
8   -5203.569092   -5700.741455  2791.469238 -5203.569092  159.510000 -5700.741455   420.4875  76.684863      -23.215039     1.0     -6037.449092         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/15 12:54:08]  --------------------------------------------------------------------------------
[08/15 12:54:08]  Iteration: 53 (0 solution, 52 counterexamples)
[08/15 12:54:15]  Generator returned sat in 5.358522 secs.
[08/15 12:54:15]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:24]  Improved gap from 74.85017944335938 to 75.0
[08/15 12:54:25]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:54:25]  Verifer returned sat in 9.690574 secs.
[08/15 12:54:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1354.871582   -1454.771729  2851.486816 -1354.871582    0.100098 -1454.771729    0.000000  99.900146       99.900146     3.0     -1454.771729            -1             -1   False
1   -1354.671631   -1354.771729  2851.486816 -1354.671631  100.100098 -1354.771729    0.000000   0.100098        0.100098     1.0     -1454.771729         False          False   False
2   -1039.871582   -1255.671631  2851.486816 -1039.871582  314.900146 -1255.671631  214.700195   1.099854        0.199951     1.0     -1454.771729         False          False   False
3    -726.171631   -1154.771729  2851.486816  -726.171631  314.799805 -1154.771729  428.400146   0.199951        0.199951     1.0     -1154.571777         False          False    True
4    -567.971680   -1059.771484  2851.486816  -567.971680  158.399902 -1059.771484  486.600098   5.199707        0.199951     1.0     -1154.571777         False          False    True
5    -492.971436   -1054.471680  2876.186768  -492.971436   80.199951 -1054.471680  486.600098  74.900146       -0.099854     1.0     -1154.571777         False          False    True
6    -426.171631    -979.471680  2901.186768  -426.171631  141.699951  -979.471680  486.600098  66.699951       -8.300049     1.0     -1154.571777         False          False    True
7    -333.371582    -904.471680  2916.686768  -333.371582  159.500000  -904.471680  486.600098  84.500000        0.000000     1.0     -1154.571777         False          False    True
8    -259.471680    -819.871582  2916.687012  -259.471680  158.399902  -819.871582  486.600098  73.799805      -26.099854     1.0     -1154.571777         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/15 12:54:25]  --------------------------------------------------------------------------------
[08/15 12:54:25]  Iteration: 54 (0 solution, 53 counterexamples)
[08/15 12:54:33]  Generator returned sat in 6.097083 secs.
[08/15 12:54:33]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:33]  Improved gap from 0.0 to 39.0625
[08/15 12:54:34]  Improved number of small numbers from 89 to 114 out of a max of 114
[08/15 12:54:34]  Verifer returned sat in 0.574533 secs.
[08/15 12:54:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -917.971436   -1117.871582  2851.486816  -917.971436  199.900000 -1117.871582        0.0  199.900146      199.900146     1.0     -1117.871582            -1             -1   False
1    -917.971436   -1117.871582  2851.486816  -917.971436  199.900000 -1117.871582        0.0  199.900146       99.900146     1.0     -1117.871582         False          False   False
2    -817.971680    -917.871826  2851.486816  -817.971680  299.899902  -917.871826        0.0   99.900146       99.899902     1.0     -1117.871582         False          False   False
3    -477.971680    -817.871826  2851.486816  -477.971680  439.900146  -817.871826        0.0  339.900146      339.899902     1.0     -1117.871582         False          False   False
4    -477.971680    -717.871826  2851.486816  -477.971680    1.000000  -717.871826        0.0  239.900146      239.899902     2.0     -1117.871582         False          False   False
5    -477.971680    -617.871582  2851.486816  -477.971680    1.000000  -617.871582        0.0  139.899902      139.899902     3.0     -1117.871582         False          False   False
6    -477.971680    -617.771484  2851.486816  -477.971680    1.000000  -617.771484        0.0  139.799805       39.899902     4.0     -1117.871582         False          False   False
7    -477.971680    -517.871582  2911.586914  -477.971680    1.000000  -517.871582        0.0   39.899902        0.000000     5.0     -1117.871582         False          False   False
8    -477.971680    -477.971680  2972.524170  -477.971680    1.000000  -477.971680        0.0    0.000000      -39.062744     6.0      -477.971680          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1392639/4096.[0m
[08/15 12:54:34]  --------------------------------------------------------------------------------
[08/15 12:54:34]  Iteration: 55 (0 solution, 54 counterexamples)
[08/15 12:54:47]  Generator returned sat in 11.200505 secs.
[08/15 12:54:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:54:53]  Improved gap from 0.0 to 78.125
[08/15 12:54:54]  Improved number of small numbers from 64 to 72 out of a max of 114
[08/15 12:54:54]  Verifer returned sat in 7.063272 secs.
[08/15 12:54:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1730.871582   -1831.071436  2851.486816 -1730.871582    0.100000 -1831.071436    0.000000  100.199854      100.199854     6.0     -1831.071436            -1             -1    True
1   -1730.771436   -1831.071289  2851.486816 -1730.771436  100.300000 -1831.071289    0.100000  100.199854        0.200000     6.0     -1831.071436         False          False    True
2   -1630.871436   -1631.071436  2851.486816 -1630.871436  200.099854 -1631.071436    0.100000    0.100000        0.100000     1.0     -1831.071436         False          False    True
3   -1309.316890   -1531.071436  2851.486816 -1309.316890  321.654545 -1531.071436  221.554545    0.200000        0.200000     1.0     -1831.071436         False          False    True
4   -1149.689617   -1431.660072  2851.486816 -1149.689617  159.827273 -1431.660072  281.181818    0.788636        0.200000     1.0     -1831.071436         False          False    True
5   -1071.564617   -1430.771436  2873.061816 -1071.564617   78.913636 -1430.771436  281.181818   78.025000       -0.100000     1.0     -1831.071436         False          False    True
6   -1008.982799   -1352.646436  2894.936816 -1008.982799  140.606818 -1352.646436  281.181818   62.481818      -15.643182     1.0     -1831.071436         False          False    True
7    -910.948708   -1274.521436  2912.545898  -910.948708  160.515909 -1274.521436  281.181818   82.390909       -0.000009     1.0     -1831.071436         False          False    True
8    -833.512345   -1191.760254  2912.545898  -833.512345  159.827273 -1191.760254  281.181818   77.066091      -22.563645     1.0     -1831.071436         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/15 12:54:55]  --------------------------------------------------------------------------------
[08/15 12:54:55]  Iteration: 56 (0 solution, 55 counterexamples)
[08/15 12:55:01]  Generator returned sat in 4.617327 secs.
[08/15 12:55:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:03]  Improved gap from 0.0008333333333333334 to 78.125
[08/15 12:55:03]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/15 12:55:03]  Verifer returned sat in 1.702515 secs.
[08/15 12:55:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1505.944580   -1727.814697  2648.230225 -1505.944580    0.002500 -1727.814697   0.000000  221.870117      121.870117     2.0     -1727.814697            -1             -1   False
1   -1505.942139   -1527.814697  2648.230225 -1505.942139  221.872559 -1527.814697   0.000000   21.872559       21.872559     3.0     -1727.814697         False          False   False
2   -1427.814697   -1505.939697  2648.230225 -1427.814697  100.000000 -1505.939697   0.000000   78.125000        0.000000     1.0     -1427.814697          True           True   False
3   -1341.727051   -1341.729736  2648.230225 -1341.727051  164.212646 -1341.729736   0.000000    0.002686      -13.912354     1.0     -1427.814697         False          False   False
4   -1149.687256   -1227.817139  2648.230225 -1149.687256  192.042480 -1227.817139   0.002441   78.127441       78.125000     1.0     -1427.814697         False          False   False
5   -1149.687256   -1227.814697  2670.105225 -1149.687256    1.000000 -1227.814697   0.002441   78.125000        0.000000     2.0     -1427.814697         False          False    True
6   -1149.687256   -1149.689697  2686.360107 -1149.687256    0.010000 -1149.689697   0.002441    0.000000      -83.745117     3.0     -1427.814697         False          False    True
7   -1054.667236   -1065.944580  2708.235107 -1054.667236   95.020020 -1065.944580   0.002441   11.274902      -66.850098     1.0     -1054.669678          True           True   False
8    -986.005859    -987.819580  2730.110107  -986.005859   79.936279  -987.819580   0.002441    1.811279      -76.313721     1.0     -1054.669678         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=625/8.[0m
[08/15 12:55:04]  --------------------------------------------------------------------------------
[08/15 12:55:04]  Iteration: 57 (0 solution, 56 counterexamples)
[08/15 12:55:16]  Generator returned sat in 10.613746 secs.
[08/15 12:55:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:18]  Improved gap from 49.6 to 68.75
[08/15 12:55:18]  Improved number of small numbers from 91 to 114 out of a max of 114
[08/15 12:55:18]  Verifer returned sat in 1.838736 secs.
[08/15 12:55:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1249.837158   -1449.812256  2370.227783 -1249.837158    0.025146 -1449.812256        0.0  199.975098       99.975098     9.0     -1449.812256            -1             -1     -1
1   -1118.537354   -1249.812256  2370.227783 -1118.537354  331.274902 -1249.812256        0.0  131.274902      131.274902     1.0     -1449.812256         False           True  False
2   -1118.537354   -1149.812256  2370.227783 -1118.537354    0.049805 -1149.812256        0.0   31.274902       31.274902     2.0     -1118.537354         False          False  False
3   -1118.537354   -1118.562256  2370.227783 -1118.537354    0.025146 -1118.562256        0.0    0.024902      -68.725098     3.0     -1118.537354         False          False  False
4    -951.937256    -952.287354  2370.227783  -951.937256  166.625000  -952.287354        0.0    0.350098       -2.125000     1.0     -1118.537354         False          False  False
5    -802.524902    -949.812256  2370.227783  -802.524902  149.762451  -949.812256        0.0  147.287354       47.287354     1.0     -1118.537354         False          False  False
6    -802.524902    -849.812256  2401.477783  -802.524902  101.000000  -849.812256        0.0   47.287354      -21.462646     2.0     -1118.537354         False          False  False
7    -714.437256    -781.062256  2432.727783  -714.437256  135.375000  -781.062256        0.0   66.625000       -2.125000     1.0     -1118.537354         False          False  False
8    -694.449707    -712.312256  2432.727783  -694.449707   86.612549  -712.312256        0.0   17.862549      -82.137451     1.0     -1118.537354         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=537805/4096.[0m
[08/15 12:55:19]  --------------------------------------------------------------------------------
[08/15 12:55:19]  Iteration: 58 (0 solution, 57 counterexamples)
[08/15 12:55:25]  Generator returned sat in 4.035231 secs.
[08/15 12:55:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:26]  Improved gap from 0.05 to 100
[08/15 12:55:27]  Improved number of small numbers from 68 to 74 out of a max of 114
[08/15 12:55:27]  Verifer returned sat in 2.132568 secs.
[08/15 12:55:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    -956.494873    -956.544756  2370.227783  -956.494873    0.050049  -956.544756       0.00    0.049883        0.049883     3.0      -956.544756            -1             -1    True
1    -556.594756    -956.444756  2370.227783  -556.594756  399.950000  -956.444756       0.00  399.850000      299.950000     1.0      -956.544756         False          False    True
2    -456.544756    -856.044756  2370.227783  -456.544756  499.900000  -856.044756       0.00  399.500000      300.000000     2.0      -956.544756         False          False    True
3    -456.544756    -706.019756  2370.227783  -456.544756    0.050049  -706.019756       0.00  249.475000      200.000000     3.0      -456.544756         False          False    True
4    -456.494756    -556.544756  2370.227783  -456.494756  249.525000  -556.544756       0.00  100.050000      100.050000     3.0      -456.544756         False          False    True
5    -157.644756    -456.544756  2370.227783  -157.644756  398.900000  -456.544756       0.00  298.900000      298.900000     4.0      -456.544756         False          False    True
6     -56.344756    -456.444824  2370.227783   -56.344756  400.200000  -456.444824       0.05  400.050068      300.150000     2.0      -456.544756         False           True   False
7     -56.344756    -306.019756  2370.227783   -56.344756  201.100000  -306.019756       0.05  249.625000      200.150000     3.0      -456.544756         False          False    True
8     -56.344756    -156.544922  2370.227783   -56.344756  249.525000  -156.544922       0.05  100.150166      100.150000     3.0      -456.544756         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6003/20.[0m
[08/15 12:55:28]  --------------------------------------------------------------------------------
[08/15 12:55:28]  Iteration: 59 (0 solution, 58 counterexamples)
[08/15 12:55:34]  Generator returned sat in 4.375059 secs.
[08/15 12:55:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:35]  Improved gap from 0.05 to 70.3125
[08/15 12:55:35]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:55:35]  Verifer returned sat in 1.249333 secs.
[08/15 12:55:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0   -1393.678467   -1393.892822  2807.575928 -1393.678467   99.999756 -1393.892822   0.000000   0.214355        0.214355     3.0     -1393.892822            -1             -1     -1
1   -1293.919678   -1393.651855  2807.575928 -1293.919678   99.973145 -1393.651855   0.000000  99.732178       -0.026855     1.0     -1293.919678         False           True  False
2   -1223.580566   -1293.892822  2837.263428 -1223.580566  170.071289 -1293.892822   0.000000  70.312256       -0.000244     1.0     -1293.919678         False          False  False
3   -1123.848145   -1123.875000  2837.263428 -1123.848145  170.044678 -1123.875000   0.000000   0.026855       -0.267822     1.0     -1123.848145         False          False  False
4    -854.857178   -1023.607178  2837.263428  -854.857178  269.017822 -1023.607178  98.410645  70.339355       70.312500     1.0     -1123.848145         False          False  False
5    -854.857178   -1023.580322  2866.950928  -854.857178    1.000000 -1023.580322  98.410645  70.312500        0.000000     2.0     -1123.848145         False          False   True
6    -854.857178    -953.267822  2867.629639  -854.857178    1.000000  -953.267822  98.410645   0.000000      -99.321289     3.0     -1123.848145         False          False   True
7    -685.250000    -853.946533  2897.317139  -685.250000  169.607178  -853.946533  98.410645  70.285889       -0.026611     1.0      -783.660645          True           True  False
8    -586.875244    -783.634033  2897.317139  -586.875244  168.660645  -783.634033  98.410645  98.348145       -1.651855     1.0      -783.660645         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1125/16.[0m
[08/15 12:55:36]  --------------------------------------------------------------------------------
[08/15 12:55:36]  Iteration: 60 (0 solution, 59 counterexamples)
[08/15 12:55:39]  Generator returned sat in 1.043107 secs.
[08/15 12:55:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:55:40]  Improved gap from 68.0579833984375 to 68.75
[08/15 12:55:40]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:55:40]  Verifer returned sat in 1.062948 secs.
[08/15 12:55:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -2037.557617   -2037.657715  3444.490723 -2037.557617    0.100098 -2037.657715        0.0    0.100098        0.100098     2.0     -2037.657715            -1             -1   False
1   -2037.357666   -2037.458008  3475.541016 -2037.357666    0.300049 -2037.458008        0.0    0.100342      -68.649658     1.0     -2037.657715         False          False   False
2   -1818.907959   -1868.708008  3475.541016 -1818.907959  218.550049 -1868.708008        0.0   49.800049       49.800049     1.0     -2037.657715         False          False   False
3   -1700.057861   -1818.807861  3475.541016 -1700.057861  168.650146 -1818.807861        0.0  118.750000       68.650146     1.0     -1700.057861         False          False   False
4   -1599.958008   -1668.708008  3475.541016 -1599.958008  218.849854 -1668.708008        0.0   68.750000       68.750000     1.0     -1700.057861         False          False   False
5   -1299.958008   -1599.958008  3475.541016 -1299.958008  368.750000 -1599.958008      200.0  100.000000       68.750000     2.0     -1700.057861         False          False   False
6   -1299.958008   -1568.708008  3506.791016 -1299.958008    1.000000 -1568.708008      200.0   68.750000        0.000000     2.0     -1700.057861         False          False    True
7   -1299.958008   -1499.958008  3538.041016 -1299.958008    1.000000 -1499.958008      200.0    0.000000      -68.750000     3.0     -1700.057861         False          False    True
8   -1131.208008   -1431.208008  3538.041016 -1131.208008  168.750000 -1431.208008      200.0  100.000000        0.000000     1.0     -1331.208008          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=275/4.[0m
[08/15 12:55:41]  --------------------------------------------------------------------------------
[08/15 12:55:41]  Iteration: 61 (0 solution, 60 counterexamples)
[08/15 12:56:00]  Generator returned sat in 17.406345 secs.
[08/15 12:56:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:03]  Improved gap from 0.0 to 68.75
[08/15 12:56:04]  Improved number of small numbers from 59 to 74 out of a max of 114
[08/15 12:56:04]  Verifer returned sat in 4.104318 secs.
[08/15 12:56:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     462.798584     215.061159 -745.420234   462.798584    0.049805   215.061159        0.0  247.737425      147.737425     9.0       215.061159            -1             -1     -1
1     462.798584     415.061159 -745.420234   462.798584    0.050000   415.061159        0.0   47.737425       47.737425     2.0       215.061159         False           True  False
2     515.061159     415.061279 -745.420234   515.061159  100.000000   415.061279        0.0   99.999880        0.000000     3.0       215.061159         False          False  False
3     546.361084     546.311159 -745.420234   546.361084  131.299805   546.311159        0.0    0.049925      -68.700075     1.0       215.061159         False          False  False
4     712.936159     712.886159 -745.420234   712.936159  166.625000   712.886159        0.0    0.050000       -2.125000     1.0       215.061159         False          False  False
5     862.798659     715.061279 -745.420234   862.798659  149.912500   715.061279        0.0  147.737380       47.737500     1.0       215.061159         False          False  False
6     866.061279     815.336159 -714.445234   866.061279  151.000000   815.336159        0.0   50.725120      -18.024880     2.0       215.061159         False          False  False
7     950.848659     884.086159 -683.195234   950.848659  135.512500   884.086159        0.0   66.762500       -1.987500     1.0       215.061159         False          False  False
8     970.686159     952.836182 -651.945312   970.686159   86.600000   952.836182        0.0   17.849977      -50.900078     1.0       215.061159         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=97869/2048.[0m
[08/15 12:56:05]  --------------------------------------------------------------------------------
[08/15 12:56:05]  Iteration: 62 (0 solution, 61 counterexamples)
[08/15 12:56:13]  Generator returned sat in 6.589078 secs.
[08/15 12:56:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:15]  Improved gap from 0.0008333333333333334 to 68.75
[08/15 12:56:15]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 12:56:15]  Verifer returned sat in 1.825310 secs.
[08/15 12:56:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     583.986084     284.186279 -745.695068   583.986084  300.000000   284.186279        0.0  299.799805      199.799805     2.0       284.186279            -1             -1   False
1     584.086182     445.086182 -745.695068   584.086182  299.899902   445.086182        0.0  139.000000       99.899902     2.0       584.086182         False          False   False
2     602.585938     584.186035 -745.695068   602.585938  157.499756   584.186035        0.0   18.399902       18.399658     1.0       602.585938         False          False   False
3     952.835938     602.586182 -745.695068   952.835938  368.649902   602.586182        0.0  350.249756      268.649658     1.0       602.585938         False          False   False
4     952.835938     784.186279 -745.695068   952.835938  158.199951   784.186279        0.0  168.649658      168.649658     2.0       602.585938         False          False   False
5     952.835938     784.286133 -745.695068   952.835938  168.550049   784.286133        0.0  168.549805       68.649658     3.0       602.585938         False          False   False
6     952.835938     884.186279 -714.445068   952.835938   99.050049   884.186279        0.0   68.649658       -0.100342     4.0       602.585938         False          False   False
7    1023.986328     952.936279 -685.594971  1023.986328  139.800049   952.936279        0.0   71.050049       -0.099854     1.0       602.585938         False          False   False
8    1036.311279    1024.086182 -685.594971  1036.311279   83.375000  1024.086182        0.0   12.225098      -87.774902     1.0       602.585938         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1100799/4096.[0m
[08/15 12:56:16]  --------------------------------------------------------------------------------
[08/15 12:56:16]  Iteration: 63 (0 solution, 62 counterexamples)
[08/15 12:56:19]  Generator returned sat in 1.396561 secs.
[08/15 12:56:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:21]  Improved gap from 0.1 to 68.75
[08/15 12:56:21]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:56:21]  Verifer returned sat in 1.914866 secs.
[08/15 12:56:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     736.757324     536.807129 -998.315918   736.757324    0.050000   536.807129        0.0  199.950195       99.950195     9.0       536.807129            -1             -1     -1
1     836.757080     736.807129 -998.315918   836.757080  299.949951   736.807129        0.0   99.949951       99.949951     1.0       536.807129         False           True  False
2     935.757324     836.807129 -998.315918   935.757324  198.950195   836.807129        0.0   98.950195       98.950195     1.0       935.757324         False          False  False
3    1183.181885     935.807129 -998.315918  1183.181885  346.374756   935.807129        0.0  247.374756      246.374756     1.0       935.757324         False          False  False
4    1183.181885    1034.356934 -998.315918  1183.181885  199.500000  1034.356934        0.0  148.824951      146.374756     2.0       935.757324         False          False  False
5    1183.181885    1036.807129 -998.315918  1183.181885  148.774902  1036.807129        0.0  146.374756       46.374756     3.0       935.757324         False          False  False
6    1183.181885    1136.807129 -967.065918  1183.181885  100.000000  1136.807129        0.0   46.374756      -22.375244     4.0       935.757324         False          False  False
7    1237.307129    1205.557129 -935.815918  1237.307129  100.500000  1205.557129        0.0   31.750000      -37.000000     1.0       935.757324         False          False  False
8    1291.157227    1274.307129 -935.815674  1291.157227   85.600098  1274.307129        0.0   16.850098      -83.149658     1.0       935.757324         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1009357/4096.[0m
[08/15 12:56:22]  --------------------------------------------------------------------------------
[08/15 12:56:22]  Iteration: 64 (0 solution, 63 counterexamples)
[08/15 12:56:29]  Generator returned sat in 5.377347 secs.
[08/15 12:56:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:29]  Improved gap from 0.0 to 100
[08/15 12:56:30]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/15 12:56:30]  Verifer returned sat in 0.394497 secs.
[08/15 12:56:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1385.682129     881.731934 -998.315918  1385.682129     0.049805   881.731934        0.0  503.950195      499.900146     7.0       881.731934            -1             -1    True
1    1385.682129     885.781982 -998.315918  1385.682129     0.050000   885.781982        0.0  499.900146      399.900146     6.0       881.731934         False          False    True
2    1385.682129    1085.781982 -998.315918  1385.682129   499.900000  1085.781982        0.0  299.900146      299.900146     7.0       881.731934         False          False    True
3    1385.732178    1085.781982 -998.315918  1385.732178   299.950195  1085.781982        0.0  299.950195      199.950195     7.0      1385.732178         False          False    True
4    1385.732178    1185.781982 -998.315918  1385.732178   203.050049  1185.781982        0.0  199.950195       99.950195     8.0      1385.732178         False          False    True
5    2191.882080    1385.781982 -998.315918  2191.882080  1006.100098  1385.781982      403.0  403.100098      403.100098     1.0      1385.732178         False           True   False
6    2291.832031    1385.832031 -998.315918  2291.832031   503.050049  1385.832031      403.0  503.000000      403.050049     2.0      1385.732178         False          False    True
7    2291.832031    1488.781982 -998.315918  2291.832031   299.050049  1488.781982      403.0  400.050049      303.050049     3.0      1385.732178         False          False    True
8    2291.832031    1585.782227 -998.315918  2291.832031   302.000000  1585.782227      403.0  303.049805      203.050049     4.0      1385.732178         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=825549/2048.[0m
[08/15 12:56:30]  --------------------------------------------------------------------------------
[08/15 12:56:30]  Iteration: 65 (0 solution, 64 counterexamples)
[08/15 12:56:40]  Generator returned sat in 7.333076 secs.
[08/15 12:56:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:56:40]  Improved gap from 0.0 to 100
[08/15 12:56:41]  Improved number of small numbers from 75 to 110 out of a max of 114
[08/15 12:56:41]  Verifer returned sat in 1.223748 secs.
[08/15 12:56:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1742.132080    1342.232178 -1454.866211  1742.132080    0.049805  1342.232178        0.0  399.899902      399.800049     7.0      1342.232178            -1             -1    True
1    1742.182129    1342.332031 -1454.866211  1742.182129  399.949951  1342.332031        0.0  399.850098      299.850098     7.0      1342.232178         False          False    True
2    1742.231934    1542.332031 -1454.866211  1742.231934  399.899902  1542.332031        0.0  199.899902      199.899902     8.0      1742.231934         False          False    True
3    1742.281982    1542.332031 -1454.866211  1742.281982  199.949951  1542.332031        0.0  199.949951       99.949951     8.0      1742.281982         False          False    True
4    1742.281982    1642.332080 -1454.866211  1742.281982  199.099854  1642.332080        0.0   99.949902       -0.050049     9.0      1742.281982         False          False    True
5    2191.882080    1742.332031 -1454.866211  2191.882080  549.550000  1742.332031       49.5  400.050049      300.050049     1.0      1742.281982         False           True   False
6    2191.882080    1942.332031 -1454.866211  2191.882080  274.775000  1942.332031       49.5  200.050049      200.050049     2.0      1742.281982         False          False    True
7    2390.832031    1992.307080 -1454.866211  2390.832031  399.000000  1992.307080       49.5  349.024951      299.000000     3.0      1742.281982         False          False    True
8    2390.832031    2142.332031 -1454.866211  2390.832031  348.975000  2142.332031       49.5  199.000000      199.000000     4.0      1742.281982         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1229005/4096.[0m
[08/15 12:56:42]  --------------------------------------------------------------------------------
[08/15 12:56:42]  Iteration: 66 (0 solution, 65 counterexamples)
[08/15 12:56:54]  Generator returned sat in 9.731134 secs.
[08/15 12:56:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:57:05]  Improved gap from 0.05 to 40.625
[08/15 12:57:06]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:57:06]  Verifer returned sat in 11.950381 secs.
[08/15 12:57:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1701.034668    1501.128418 -1514.053711  1701.034668  229.781006  1501.128418    0.00000  199.906250       99.906250     2.0      1501.128418            -1             -1   False
1    1730.815674    1701.128174 -1514.053711  1730.815674  229.687256  1701.128174    0.00000   29.687500       29.687256     1.0      1730.815674         False          False   False
2    1801.221924    1801.128418 -1514.053711  1801.221924  100.093750  1801.128418    0.00000    0.093506        0.093506     1.0      1801.221924         False          False   False
3    1841.940918    1801.315918 -1454.866211  1841.940918   40.812500  1801.315918    0.00000   40.625000        0.000000     1.0      1841.940918         False          False   False
4    1971.815918    1941.847168 -1454.866211  1971.815918  170.500000  1941.847168    0.09375   29.875000       29.781250     1.0      1841.940918         False          False   False
5    2028.190918    1941.940918 -1454.053711  2028.190918   86.250000  1941.940918    0.09375   86.156250      -13.031250     2.0      1841.940918         False          False    True
6    2081.847168    2041.128418 -1394.678711  2081.847168  139.812500  2041.128418    0.09375   40.625000        0.000000     1.0      1841.940918         False          False    True
7    2280.034668    2081.846924 -1394.678711  2280.034668  238.812500  2081.846924   68.50000  129.687744       29.781250     1.0      1841.940918         False          False    True
8    2280.034668    2181.753418 -1394.678711  2280.034668  120.406250  2181.753418   68.50000   29.781250      -70.218750     2.0      1841.940918         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=953/32.[0m
[08/15 12:57:06]  --------------------------------------------------------------------------------
[08/15 12:57:06]  Iteration: 67 (0 solution, 66 counterexamples)
[08/15 12:57:12]  Generator returned sat in 3.771144 secs.
[08/15 12:57:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:57:15]  Improved gap from 38.83636474609375 to 40.625
[08/15 12:57:16]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 12:57:16]  Verifer returned sat in 3.431016 secs.
[08/15 12:57:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1625.298096    1625.204102 -1517.491211  1625.298096    0.093750  1625.204102   0.000000    0.093994        0.093994     1.0      1625.204102            -1             -1   False
1    1625.298096    1625.204102 -1514.053711  1625.298096    0.046875  1625.204102   0.000000    0.093994      -96.468506     1.0      1625.298096         False          False   False
2    1821.532227    1821.485596 -1514.053711  1821.532227  196.328125  1821.485596   0.000000    0.046631       -0.234375     1.0      1625.298096         False          False   False
3    1821.813721    1821.766602 -1454.678711  1821.813721    0.328125  1821.766602   0.000000    0.047119      -40.577881     1.0      1821.813721         False          False   False
4    2018.329102    1962.344727 -1454.678711  2018.329102  196.562500  1962.344727   0.046875   55.937500       55.890625     1.0      1821.813721         False          False   False
5    2061.672852    1962.391846 -1453.913330  2061.672852   99.281250  1962.391846   0.046875   99.234131       -0.000244     2.0      1821.813721         False          False    True
6    2102.344971    2061.672852 -1394.585205  2102.344971  139.906250  2061.672852   0.046875   40.625244        0.000000     1.0      1821.813721         False          False    True
7    2300.625977    2102.344727 -1394.585205  2300.625977  238.906250  2102.344727  42.437256  155.843994       55.890625     1.0      1821.813721         False          False    True
8    2300.625977    2202.298096 -1350.475830  2300.625977  120.453125  2202.298096  42.437256   55.890625        0.000000     2.0      1821.813721         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=3577/64.[0m
[08/15 12:57:16]  --------------------------------------------------------------------------------
[08/15 12:57:16]  Iteration: 68 (0 solution, 67 counterexamples)
[08/15 12:57:23]  Generator returned sat in 4.728903 secs.
[08/15 12:57:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:57:26]  Improved gap from 0.01171875 to 68.75
[08/15 12:57:26]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:57:26]  Verifer returned sat in 3.163009 secs.
[08/15 12:57:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5181.023438    5154.473389 -1328.410645  5181.023438   99.999756  5154.473389        0.0   26.550049       26.550049     5.0      5154.473389            -1             -1   False
1    5254.373535    5181.123291 -1328.410645  5254.373535   99.900146  5181.123291        0.0   73.250244       -0.099854     1.0      5254.373535         False          False   False
2    5254.573242    5254.473389 -1297.160645  5254.573242   73.449951  5254.473389        0.0    0.099854      -68.650146     1.0      5254.573242         False          False   False
3    5523.323242    5343.423584 -1297.160645  5523.323242  268.849854  5343.423584        0.0  179.899658      100.099854     1.0      5254.573242         False          False   False
4    5523.323242    5523.223389 -1297.160645  5523.323242   94.475098  5523.223389        0.0    0.099854        0.099854     2.0      5254.573242         False          False   False
5    5694.273438    5523.423584 -1297.160645  5694.273438  171.050049  5523.423584        0.0  170.849854       71.050049     1.0      5254.573242         False          False   False
6    5694.273438    5623.223389 -1268.310547  5694.273438  134.475098  5623.223389        0.0   71.050049       -0.099854     2.0      5254.573242         False          False   False
7    5763.123291    5694.373291 -1237.060791  5763.123291  139.899902  5694.373291        0.0   68.750000       -0.000244     1.0      5254.573242         False          False   False
8    5779.948242    5763.123535 -1205.810791  5779.948242   85.574951  5763.123535        0.0   16.824707      -51.925293     1.0      5254.573242         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=102605/1024.[0m
[08/15 12:57:27]  --------------------------------------------------------------------------------
[08/15 12:57:27]  Iteration: 69 (0 solution, 68 counterexamples)
[08/15 12:57:41]  Generator returned sat in 11.416417 secs.
[08/15 12:57:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:57:52]  Improved gap from 39.3 to 40.625
[08/15 12:57:53]  Improved number of small numbers from 60 to 85 out of a max of 114
[08/15 12:57:53]  Verifer returned sat in 11.994051 secs.
[08/15 12:57:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5025.471924    4841.761798 -1115.698975  5025.471924  140.676025  4841.761798   0.000000  183.710126       83.710205     2.0      4841.761798            -1             -1   False
1    5025.471924    4984.846924 -1099.409180  5025.471924  140.659180  4984.846924   0.000000   40.625000        0.000000     2.0      5025.471924         False          False   False
2    5125.489014    5125.454980 -1099.409180  5125.489014  140.642090  5125.454980   0.000000    0.034034        0.017090     1.0      5125.489014         False          False   False
3    5125.489014    5125.472025 -1040.221781  5125.489014    0.017045  5125.472025   0.000000    0.016989      -40.795511     2.0      5125.489014         False          False   False
4    5266.335661    5266.284525 -1040.221781  5266.335661  140.863636  5266.284525   0.017045    0.034091        0.034091     1.0      5125.489014         False          False   False
5    5336.733389    5266.335661 -1010.653809  5336.733389   70.431818  5266.335661   0.017045   70.380682       -0.000210     1.0      5125.489014         False          False    True
6    5406.233389    5336.733389  -980.153599  5406.233389  139.880682  5336.733389   0.017045   69.482955        0.000000     1.0      5125.489014         False          False    True
7    5547.011798    5406.233389  -980.153599  5547.011798  210.261364  5406.233389  40.761364  100.017045        0.034091     1.0      5125.489014         False          False    True
8    5552.125434    5506.267578  -980.153564  5552.125434  105.130682  5506.267578  40.761364    5.096492      -94.852238     1.0      5125.489014         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=3/88.[0m
[08/15 12:57:53]  --------------------------------------------------------------------------------
[08/15 12:57:53]  Iteration: 70 (0 solution, 69 counterexamples)
[08/15 12:58:12]  Generator returned sat in 16.411765 secs.
[08/15 12:58:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:12]  Improved gap from 0.0 to 100
[08/15 12:58:13]  Improved number of small numbers from 60 to 72 out of a max of 114
[08/15 12:58:13]  Verifer returned sat in 0.978456 secs.
[08/15 12:58:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5441.764298    4841.761798 -1015.700304  5441.764298    0.001250  4841.761798    0.00125  600.001250       600.00000     6.0      4841.761798            -1             -1     -1
1    5441.765548    4841.763184 -1015.700304  5441.765548  600.002500  4841.763184    0.00250  599.999864       500.00000     6.0      4841.761798         False          False   True
2    5441.765548    5041.762939 -1015.700304  5441.765548    1.008789  5041.762939    0.00250  400.000108       400.00000     7.0      5441.763048         False          False   True
3    5441.765548    5141.762939 -1015.700304  5441.765548    1.008789  5141.762939    0.00250  300.000108       300.00000     5.0      5441.763048         False          False   True
4    5441.765548    5192.269923 -1015.700304  5441.765548    0.010000  5192.269923    0.00250  249.493125       200.00000     5.0      5441.763048         False          False   True
5    5441.765548    5341.761719 -1015.700304  5441.765548    0.010000  5341.761719    0.00250  100.001329       100.00000     6.0      5441.763048         False          False   True
6    5441.765548    5341.763184 -1015.700304  5441.765548    0.010000  5341.763184    0.00250   99.999864         0.00000     7.0      5441.763048         False          False   True
7    5441.765548    5441.763048 -1015.700304  5441.765548    0.010000  5441.763048    0.00250    0.000000      -100.00000     8.0      5441.763048         False          False   True
8    5941.766798    5541.763184 -1015.700304  5941.766798  500.001250  5541.763184    0.00250  400.001114       300.00125     1.0      5441.763048         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=500.[0m
[08/15 12:58:14]  --------------------------------------------------------------------------------
[08/15 12:58:14]  Iteration: 71 (0 solution, 70 counterexamples)
[08/15 12:58:35]  Generator returned sat in 19.251142 secs.
[08/15 12:58:35]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:58:36]  Improved gap from 0.11 to 100
[08/15 12:58:36]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:58:36]  Verifer returned sat in 0.513153 secs.
[08/15 12:58:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    5381.073975    4881.073975 -1055.01123  5381.073975     0.049805  4881.073975     0.000000  500.000000      500.000000     3.0      4881.073975            -1             -1    True
1    5381.073975    4981.023926 -1055.01123  5381.073975     0.099854  4981.023926     0.000000  400.050049      400.000000     3.0      4881.073975         False          False    True
2    5381.073975    4981.074219 -1055.01123  5381.073975     0.050000  4981.074219     0.000000  399.999756      300.000000     4.0      5381.073975         False          False    True
3    5381.073975    5081.073975 -1055.01123  5381.073975   153.000000  5081.073975     0.000000  300.000000      200.000000     5.0      5381.073975         False          False    True
4    5381.073975    5230.073975 -1055.01123  5381.073975   152.000000  5230.073975     0.000000  151.000000      100.000000     6.0      5381.073975         False          False    True
5    5381.073975    5381.023926 -1055.01123  5381.073975   151.000000  5381.023926     0.000000    0.050049        0.000000     7.0      5381.073975         False          False    True
6    5531.023926    5381.073975 -1055.01123  5531.023926   150.000000  5381.073975     0.000000  149.949951       49.949951     8.0      5381.073975         False          False    True
7    6130.073975    5581.073975 -1055.01123  6130.073975   749.000000  5581.073975     0.000000  549.000000      549.000000     1.0      5381.073975         False           True   False
8    7604.573975    5581.074219 -1055.01123  7604.573975  2023.500000  5581.074219  1374.449951  649.049805      549.050049     2.0      5381.073975         False          False   False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2248909/4096.[0m
[08/15 12:58:37]  --------------------------------------------------------------------------------
[08/15 12:58:37]  Iteration: 72 (0 solution, 71 counterexamples)
[08/15 12:59:41]  Generator returned sat in 62.383975 secs.
[08/15 12:59:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:59:43]  Improved gap from 0.0062255859375 to 40.625
[08/15 12:59:43]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 12:59:43]  Verifer returned sat in 1.842596 secs.
[08/15 12:59:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    5536.036865    5438.591553 -1612.529053  5536.036865    0.023193  5438.591553    0.000000  97.445312       97.445312     2.0      5438.591553            -1             -1     -1
1    5536.036865    5438.591553 -1609.974365  5536.036865    0.023438  5438.591553    0.000000  97.445312        0.000000     2.0      5438.591553         False           True  False
2    5636.107178    5636.036865 -1609.974365  5636.107178  197.515625  5636.036865    0.023438   0.046875        0.046875     1.0      5438.591553         False           True  False
3    5636.154053    5636.107178 -1550.669678  5636.154053    0.093750  5636.107178    0.023438   0.023438      -40.601562     1.0      5636.130615         False          False   True
4    5832.646240    5776.708984 -1550.669678  5832.646240  196.515625  5776.708984   55.867188   0.070068        0.046875     1.0      5636.130615         False          False   True
5    5931.833984    5776.732178 -1549.927246  5931.833984   99.257812  5776.732178   55.867188  99.234619       -0.022949     2.0      5636.130615         False          False   True
6    5972.294678    5875.989990 -1490.552490  5972.294678  139.695312  5875.989990   55.867188  40.437500       -0.187500     1.0      5916.427490          True           True  False
7    6170.739990    5996.243896 -1490.552490  6170.739990  238.882812  5996.243896  154.078125  20.417969        0.046875     1.0      5916.427490         False          False  False
8    6270.763428    6016.685547 -1490.552490  6270.763428  120.441406  6016.685547  154.101562  99.976318        0.046875     1.0      5916.427490         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3/64.[0m
[08/15 12:59:44]  --------------------------------------------------------------------------------
[08/15 12:59:44]  Iteration: 73 (0 solution, 72 counterexamples)
[08/15 12:59:48]  Generator returned sat in 1.508466 secs.
[08/15 12:59:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 12:59:50]  Improved gap from 0.00579833984375 to 78.125
[08/15 12:59:50]  Improved number of small numbers from 60 to 79 out of a max of 114
[08/15 12:59:50]  Verifer returned sat in 2.568858 secs.
[08/15 12:59:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7310.823975    7310.823975 -1208.067627  7310.823975  200.100098  7310.823975        0.0   0.000000      -99.999902     4.0      7310.823975            -1             -1     -1
1    7510.823730    7411.023682 -1208.067490  7510.823730  199.999756  7411.023682        0.0  99.800049       -0.000010     1.0      7510.823730         False           True  False
2    7610.923584    7610.823740 -1208.067490  7610.923584  199.899902  7610.823740        0.0   0.099844        0.099844     1.0      7610.923584         False          False  False
3    7810.623740    7710.823740 -1208.067490  7810.623740  199.800000  7710.823740       99.6   0.200000        0.200000     1.0      7711.023740         False          False  False
4    7911.323740    7810.823740 -1208.067490  7911.323740  100.900000  7810.823740      100.3   0.200000        0.200000     1.0      7711.023740         False          False   True
5    7962.573740    7811.123740 -1191.717285  7962.573740   51.450000  7811.123740      100.3  51.150000      -32.199795     1.0      7711.023740         False          False   True
6    8010.573740    7894.473740 -1169.842490  8010.573740   99.150000  7894.473740      100.3  15.800000      -62.325000     1.0      7711.023740         False          False   True
7    8085.598740    7972.598740 -1147.967529  8085.598740   90.825000  7972.598740      100.3  12.700000      -65.425039     1.0      7711.023740         False          False   True
8    8152.786240    8050.723877 -1147.967285  8152.786240   79.887500  8050.723877      100.3   1.762363      -98.237295     1.0      7711.023740         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/15 12:59:51]  --------------------------------------------------------------------------------
[08/15 12:59:51]  Iteration: 74 (0 solution, 73 counterexamples)
[08/15 13:00:29]  Generator returned sat in 35.800112 secs.
[08/15 13:00:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:00:30]  Improved gap from 0.0004166666666666667 to 70.3125
[08/15 13:00:31]  Improved number of small numbers from 62 to 70 out of a max of 114
[08/15 13:00:31]  Verifer returned sat in 1.592212 secs.
[08/15 13:00:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7656.895508    7556.894209 -1454.137959  7656.895508  287.268555  7556.894209    0.00125  100.000049        0.000049     1.0      7556.894209            -1             -1     -1
1    7844.162959    7656.894209 -1454.137959  7844.162959  287.267500  7656.894209   87.26625  100.002500        0.002500     2.0      7756.896709         False          False   True
2    8031.426709    7786.581709 -1454.137959  8031.426709  287.266250  7786.581709  174.53000   70.315000        0.002500     1.0      7856.896709         False           True   True
3    8248.376709    7956.894209 -1454.137959  8248.376709  287.265000  7956.894209  291.48000    0.002500        0.002500     1.0      7956.896709         False          False   True
4    8391.006709    8056.894209 -1454.137959  8391.006709  142.632500  8056.894209  334.11000    0.002500        0.002500     1.0      7956.896709         False          False   True
5    8461.320459    8056.897949 -1424.454209  8461.320459   70.316250  8056.897949  334.11000   70.312510        0.000000     1.0      7956.896709         False          False   True
6    8461.320459    8127.210459 -1394.766709  8461.320459    0.010000  8127.210459  334.11000    0.000000      -70.312500     2.0      7956.896709         False          False   True
7    8630.636709    8197.522959 -1393.770508  8630.636709  169.316250  8197.522959  334.11000   99.003750       -0.000049     1.0      8296.526709          True           True  False
8    8671.261709    8296.527832 -1393.770508  8671.261709  139.628750  8296.527832  334.11000   40.623877      -59.375049     1.0      8296.526709         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/15 13:00:32]  --------------------------------------------------------------------------------
[08/15 13:00:32]  Iteration: 75 (0 solution, 74 counterexamples)
[08/15 13:00:42]  Generator returned sat in 7.439395 secs.
[08/15 13:00:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:00:44]  Improved gap from 0.00015625 to 40.625
[08/15 13:00:44]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 13:00:44]  Verifer returned sat in 2.341712 secs.
[08/15 13:00:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    8031.426758    8031.409912 -1544.079102  8031.426758    0.015625  8031.409912    0.001221   0.015625      -55.984375     3.0      8031.409912            -1             -1     -1
1    8128.035889    8087.409912 -1484.704102  8128.035889   96.624756  8087.409912    0.001221  40.624756       -0.000244     1.0      8031.409912         False           True  False
2    8228.020508    8228.003662 -1484.704102  8228.020508  140.609375  8228.003662    0.001221   0.015625       -0.015625     1.0      8031.409912         False          False  False
3    8268.661133    8228.034912 -1425.329346  8268.661133   40.656250  8228.034912    0.001221  40.625000       -0.000244     1.0      8268.659912         False          False  False
4    8424.661133    8368.472412 -1425.329346  8424.661133  196.625000  8368.472412   55.969971   0.218750        0.031006     1.0      8268.659912         False          False  False
5    8523.754883    8368.706787 -1424.454102  8523.754883   99.312500  8368.706787   55.969971  99.078125        0.000000     1.0      8268.659912         False          False   True
6    8564.379883    8467.784912 -1365.079102  8564.379883  139.703125  8467.784912   55.969971  40.625000        0.000000     2.0      8268.659912         False          False   True
7    8763.504883    8587.581543 -1365.079102  8763.504883  239.750000  8587.581543  155.063965  20.859375        0.031006     1.0      8608.440918          True           True  False
8    8863.520508    8608.456787 -1365.079102  8863.520508  120.875000  8608.456787  155.079590  99.984131        0.031006     1.0      8608.440918         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=127/4096.[0m
[08/15 13:00:45]  --------------------------------------------------------------------------------
[08/15 13:00:45]  Iteration: 76 (0 solution, 75 counterexamples)
[08/15 13:00:57]  Generator returned sat in 9.797644 secs.
[08/15 13:00:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:00:58]  Improved gap from 0.0 to 70.3125
[08/15 13:00:58]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/15 13:00:58]  Verifer returned sat in 1.304709 secs.
[08/15 13:00:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    8658.792480    8358.793701 -1424.454346  8658.792480  299.998535  8358.793701    0.000000  299.998779      199.998779     2.0      8358.793701            -1             -1   False
1    8658.792480    8458.795898 -1424.454346  8658.792480  299.997500  8458.795898    0.000000  199.996582       99.998779     2.0      8658.792480         False          False   False
2    8758.792236    8658.793701 -1424.454346  8758.792236  299.996338  8658.793701    0.000000   99.998535       99.998535     1.0      8758.792236         False          False   False
3    8999.418701    8758.793701 -1424.454346  8999.418701  340.625000  8758.793701  140.626221   99.998779       99.998779     1.0      8758.792236         False          False   False
4    9069.732422    8858.421143 -1424.454346  9069.732422  170.312500  8858.421143  140.626221   70.685059       70.312500     2.0      8758.792236         False          False    True
5    9069.732422    8858.793701 -1394.766846  9069.732422    0.010000  8858.793701  140.626221   70.312500        0.000000     2.0      8758.792236         False          False    True
6    9069.732422    8929.106201 -1365.079346  9069.732422    0.010000  8929.106201  140.626221    0.000000      -70.312500     3.0      8758.792236         False          False    True
7    9239.044922    8999.418701 -1364.079346  9239.044922  169.312500  8999.418701  140.626221   99.000000        0.000000     1.0      9098.418701          True           True   False
8    9280.042480    9098.419678 -1364.079102  9280.042480  139.997559  9098.419678  140.626221   40.996582      -59.002197     1.0      9098.418701         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409595/4096.[0m
[08/15 13:00:59]  --------------------------------------------------------------------------------
[08/15 13:00:59]  Iteration: 77 (0 solution, 76 counterexamples)
[08/15 13:01:09]  Generator returned sat in 7.972049 secs.
[08/15 13:01:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:01:11]  Improved gap from 0.1 to 70.3125
[08/15 13:01:11]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 13:01:11]  Verifer returned sat in 1.408364 secs.
[08/15 13:01:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    9174.917480    9174.894043 -1383.804688  9174.917480    0.023438  9174.894043    0.000000    0.023438       -0.023438     4.0      9174.894043            -1             -1     -1
1    9245.253418    9174.940918 -1354.117188  9245.253418   70.359375  9174.940918    0.000000   70.312500        0.000000     1.0      9174.894043         False           True  False
2    9345.276855    9245.276855 -1354.117188  9345.276855  170.335938  9245.276855    0.000000  100.000000        0.023438     1.0      9174.894043         False          False  False
3    9527.558105    9445.253418 -1354.117188  9527.558105  282.281250  9445.253418   82.257812    0.046875        0.046875     1.0      9174.894043         False          False  False
4    9668.651855    9545.065918 -1354.117188  9668.651855  141.140625  9545.065918  123.351562    0.234375        0.046875     1.0      9174.894043         False          False   True
5    9738.987793    9545.323730 -1324.500000  9738.987793   70.570312  9545.323730  123.351562   70.312500        0.000000     1.0      9174.894043         False          False   True
6    9738.987793    9615.636230 -1296.070312  9738.987793    1.000000  9615.636230  123.351562    0.000000      -71.570312     2.0      9174.894043         False          False   True
7    9908.370605    9687.206543 -1293.882812  9908.370605  169.382812  9687.206543  123.351562   97.812500        0.000000     1.0      9785.019043          True           True  False
8    9951.698730    9785.042480 -1293.882812  9951.698730  141.140625  9785.042480  123.351562   43.304688      -56.671875     1.0      9785.019043         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=3/64.[0m
[08/15 13:01:12]  --------------------------------------------------------------------------------
[08/15 13:01:12]  Iteration: 78 (0 solution, 77 counterexamples)
[08/15 13:01:31]  Generator returned sat in 17.393849 secs.
[08/15 13:01:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:01:41]  Improved gap from 0.0 to 78.125
[08/15 13:01:42]  Improved number of small numbers from 58 to 80 out of a max of 114
[08/15 13:01:42]  Verifer returned sat in 10.867780 secs.
[08/15 13:01:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    7490.042969    7490.042725 -750.971369  7490.042969  278.990723  7490.042725   0.000000    0.000244        0.000171     2.0      7490.042725            -1             -1   False
1    7769.033691    7590.042725 -750.971369  7769.033691  278.990967  7590.042725   0.000000  178.990967      178.990894     1.0      7490.042725         False          False   False
2    7769.033691    7689.652172 -750.971369  7769.033691    0.026940  7689.652172   0.000000   79.381519       78.990894     2.0      7769.033691         False          False   False
3    8009.723293    7790.042797 -750.971369  8009.723293  320.071121  7790.042797  40.662716  179.017780      179.017780     1.0      7769.033691         False          False   False
4    8009.723293    7890.015858 -750.971369  8009.723293  160.035560  7890.015858  40.662716   79.044720       79.017780     2.0      7769.033691         False          False    True
5    8009.723293    7890.042797 -729.989258  8009.723293   79.017780  7890.042797  40.662716   79.017780       -0.000109     3.0      7769.033691         False          False    True
6    8071.409715    7969.087517 -708.141088  8071.409715  140.704203  7969.087517  40.662716   61.659483      -16.465517     1.0      8030.747000          True           True   False
7    8170.624694    8047.212517 -690.890625  8170.624694  160.874461  8047.212517  40.662716   82.749461       -0.000075     1.0      8030.747000         False          False   False
8    8247.910793    8129.989014 -690.890625  8247.910793  160.035560  8129.989014  40.662716   77.259064      -22.713976     1.0      8030.747000         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=332257/1856.[0m
[08/15 13:01:43]  --------------------------------------------------------------------------------
[08/15 13:01:43]  Iteration: 79 (0 solution, 78 counterexamples)
[08/15 13:01:57]  Generator returned sat in 11.524385 secs.
[08/15 13:01:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:01:59]  Improved gap from 0.0065 to 68.75
[08/15 13:02:00]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/15 13:02:00]  Verifer returned sat in 2.216177 secs.
[08/15 13:02:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6645.269043    6576.520168 -742.725119  6645.269043    0.001465  6576.520168    0.00000  68.748875       68.748875     1.0      6576.520168            -1             -1    True
1    6645.270168    6576.520168 -711.475119  6645.270168   68.750000  6576.520168    0.00000  68.750000        0.000000     1.0      6576.520168         False          False    True
2    6645.270168    6645.270168 -680.225119  6645.270168    0.001250  6645.270168    0.00000   0.000000      -68.750000     2.0      6645.270168         False          False    True
3    6928.285168    6784.766418 -680.225119  6928.285168  283.015000  6784.766418  114.26250  29.256250        0.002500     1.0      6645.270168         False           True   False
4    7040.536418    6914.020168 -680.225119  7040.536418  141.507500  6914.020168  126.51375   0.002500        0.002500     1.0      6645.270168         False          False    True
5    7111.287668    6914.023926 -650.978869  7111.287668   70.753750  6914.023926  126.51375  70.749992        0.000000     1.0      6645.270168         False          False    True
6    7111.287668    6984.773918 -619.728869  7111.287668    0.010000  6984.773918  126.51375   0.000000      -68.750000     2.0      6645.270168         False          False    True
7    7311.295168    7153.523918 -619.728869  7311.295168  200.007500  7153.523918  157.76875   0.002500        0.002500     1.0      7153.526418          True           True   False
8    7411.296418    7153.527588 -619.728869  7411.296418  100.003750  7153.527588  157.77000  99.998830        0.002500     1.0      7153.526418         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/400.[0m
[08/15 13:02:00]  --------------------------------------------------------------------------------
[08/15 13:02:00]  Iteration: 80 (0 solution, 79 counterexamples)
[08/15 13:02:19]  Generator returned sat in 16.464049 secs.
[08/15 13:02:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:02:21]  Improved gap from 0.010625 to 68.75
[08/15 13:02:22]  Improved number of small numbers from 59 to 67 out of a max of 114
[08/15 13:02:22]  Verifer returned sat in 2.743155 secs.
[08/15 13:02:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    6027.566406    5858.816418 -1455.220119  6027.566406    0.002686  5858.816418     0.0000  168.749988      168.749988     2.0      5858.816418            -1             -1   False
1    6539.831418    5858.816418 -1455.220119  6539.831418  681.015000  5858.816418   512.2650  168.750000       68.750000     2.0      5858.816418         False          False   False
2    7052.093918    6058.816418 -1455.220119  7052.093918  681.012500  6058.816418   924.5275   68.750000       68.750000     1.0      6127.566418         False          False    True
3    7664.353918    6158.816418 -1455.220119  7664.353918  681.010000  6158.816418  1436.7875   68.750000       68.750000     1.0      6227.566418         False          False    True
4    7935.108918    6258.816418 -1455.220119  7935.108918  339.505000  6258.816418  1607.5425   68.750000       68.750000     1.0      6227.566418         False          False    True
5    8035.111418    6327.569092 -1455.220119  8035.111418  168.752500  6327.569092  1607.5450   99.997326       68.750000     1.0      6227.566418         False          False    True
6    8035.111418    6358.816418 -1423.970119  8035.111418   83.376250  6358.816418  1607.5450   68.750000        0.000000     2.0      6227.566418         False          False    True
7    8035.111418    6427.566418 -1395.217529  8035.111418    0.010000  6427.566418  1607.5450    0.000000      -71.247411     3.0      6227.566418         False          False    True
8    8203.861418    6498.813965 -1395.217529  8203.861418  168.750000  6498.813965  1607.5450   97.502453       -2.497411     1.0      6596.316418          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=275/4.[0m
[08/15 13:02:23]  --------------------------------------------------------------------------------
[08/15 13:02:23]  Iteration: 81 (0 solution, 80 counterexamples)
[08/15 13:02:52]  Generator returned sat in 26.532085 secs.
[08/15 13:02:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:02:53]  Improved gap from 0.00125 to 68.75
[08/15 13:02:54]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 13:02:54]  Verifer returned sat in 1.509801 secs.
[08/15 13:02:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    7791.115234    7733.107666 -1455.220215  7791.115234    0.001465  7733.107666    0.001465   58.006104       58.006104     3.0      7733.107666            -1             -1     -1
1    7791.115234    7791.112549 -1455.220215  7791.115234   58.005127  7791.112549    0.001465    0.001221      -41.993896     3.0      7733.107666         False           True   True
2    7933.112793    7933.106445 -1455.220215  7933.112793  141.998779  7933.106445    0.002686    0.003662        0.002441     1.0      7733.107666          True           True  False
3    7933.112793    7933.107666 -1455.218994  7933.112793    0.001250  7933.107666    0.002686    0.002441      -99.996338     2.0      7933.110107         False          False   True
4    8133.110352    8133.106201 -1455.218994  8133.110352  200.000000  8133.106201    0.002686    0.001465        0.001221     1.0      7933.110107         False           True  False
5    8475.102539    8133.108887 -1455.218994  8475.102539  341.993652  8133.108887  241.993652  100.000000        0.002441     1.0      7933.110107         False          False  False
6    8545.099365    8233.110352 -1425.218262  8545.099365  169.996826  8233.110352  241.993652   69.995361        0.000000     1.0      7933.110107         False          False   True
7    8545.099365    8303.105713 -1395.217773  8545.099365    0.010000  8303.105713  241.993652    0.000000      -69.999512     2.0      7933.110107         False          False   True
8    8715.098877    8373.105225 -1395.217773  8715.098877  169.999512  8373.105225  241.993652  100.000000        0.000000     1.0      8473.105225          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=5/2048.[0m
[08/15 13:02:54]  --------------------------------------------------------------------------------
[08/15 13:02:54]  Iteration: 82 (0 solution, 81 counterexamples)
[08/15 13:03:01]  Generator returned sat in 4.222861 secs.
[08/15 13:03:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:03:03]  Improved gap from 0.0003662109375 to 78.125
[08/15 13:03:04]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 13:03:04]  Verifer returned sat in 2.162700 secs.
[08/15 13:03:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0    1786.488770    1786.289062  4491.598389  1786.488770    0.099854  1786.289062   0.000000   0.199707        0.199707     1.0      1786.289062            -1             -1    True
1    1786.488770    1786.289062  4491.598389  1786.488770    0.099854  1786.289062   0.000000   0.199707      -99.800293     1.0      1786.289062         False          False    True
2    1964.513916    1908.164062  4491.598389  1964.513916  178.224854  1908.164062   0.000000  56.349854      -21.775146     1.0      1786.289062         False          False    True
3    2086.388916    2086.289062  4491.598389  2086.388916  178.224854  2086.289062   0.000000   0.099854        0.099854     1.0      1786.289062         False          False    True
4    2235.289062    2181.063965  4491.598389  2235.289062  149.000000  2181.063965  48.800049   5.425049        0.199951     1.0      1786.289062         False          False    True
5    2303.364014    2186.588867  4513.173584  2303.364014   73.500000  2186.588867  48.800049  67.975098      -10.149902     1.0      1786.289062         False          False    True
6    2373.601318    2264.713867  4535.048584  2373.601318  138.212402  2264.713867  48.800049  60.087402      -18.037598     1.0      1786.289062         False          False    True
7    2401.726318    2342.838867  4556.923584  2401.726318   88.212402  2342.838867  48.800049  10.087402      -68.037598     1.0      1786.289062         False          False    True
8    2471.526367    2420.964111  4556.923584  2471.526367   79.887451  2420.964111  48.800049   1.762207      -98.237549     1.0      1786.289062         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=819/4096.[0m
[08/15 13:03:04]  --------------------------------------------------------------------------------
[08/15 13:03:04]  Iteration: 83 (0 solution, 82 counterexamples)
[08/15 13:03:13]  Generator returned sat in 6.578029 secs.
[08/15 13:03:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 13:03:16]  Improved gap from 18.85 to 78.125
[08/15 13:03:16]  Improved number of small numbers from 109 to 114 out of a max of 114
[08/15 13:03:16]  Verifer returned sat in 2.486034 secs.
[08/15 13:03:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0    2310.174063    2310.173828  4491.598145  2310.174063    0.049805  2310.173828    0.000000   0.000234       -0.000010     9.0      2310.173828            -1             -1     -1
1    2410.173828    2332.098877  4491.598145  2410.173828  100.000000  2332.098877    0.000000  78.074951       -0.000244     1.0      2310.173828         False           True  False
2    2510.174072    2510.174072  4491.598145  2510.174072  178.075195  2510.174072    0.000000   0.000000        0.000000     1.0      2310.173828         False          False  False
3    2840.674072    2610.174072  4491.598145  2840.674072  330.500000  2610.174072  224.975098   5.524902        5.524902     1.0      2310.173828         False          False  False
4    2999.399170    2710.173828  4491.598145  2999.399170  164.250000  2710.173828  283.700195   5.525146        5.524902     1.0      2310.173828         False          False   True
5    3074.999023    2715.749023  4507.898193  3074.999023   81.125000  2715.749023  283.700195  75.549805       -2.575195     1.0      2310.173828         False          False   True
6    3079.574219    2793.874023  4529.773193  3079.574219   80.125000  2793.874023  283.700195   2.000000      -76.125000     1.0      2310.173828         False          False   True
7    3156.699219    2871.999023  4551.648193  3156.699219   79.125000  2871.999023  283.700195   1.000000      -77.125000     1.0      2310.173828         False          False   True
8    3233.824219    2950.124023  4551.648438  3233.824219   78.125000  2950.124023  283.700195   0.000000      -99.999756     1.0      2310.173828         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=11315/2048.[0m
[08/15 13:03:17]  --------------------------------------------------------------------------------
[08/15 13:03:17]  Iteration: 84 (0 solution, 83 counterexamples)
[08/15 13:03:25]  Generator returned unsat in 5.236989 secs.
[08/15 13:03:25]  [96mNo more solutions found[0m
[08/15 13:03:25]  Final solutions:
[08/15 13:03:25]  Took 824.890163 secs.
