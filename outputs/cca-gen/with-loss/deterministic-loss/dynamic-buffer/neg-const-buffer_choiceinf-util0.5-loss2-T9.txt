[08/03 16:20:22]  --------------------------------------------------------------------------------
[08/03 16:20:22]  Iteration: 1 (0 solution, 0 counterexamples)
[08/03 16:20:22]  Generator returned sat in 0.006019 secs.
[08/03 16:20:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:20:22]  Improved gap from 0 to 100
[08/03 16:20:23]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/03 16:20:23]  Verifer returned sat in 0.344246 secs.
[08/03 16:20:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t
0        604.905        604.805  -604.905      604.905      0.05      604.805        0.0     0.10            0.00
1        604.905        604.905  -604.905      604.905      0.05      604.905        0.0     0.00         -100.00
2       2359.555        761.905  -604.905     2359.555   1754.65      761.905        0.0  1597.65         1554.65
3       2359.555        816.905  -604.905     2359.555      0.05      816.905        0.0  1542.65         1454.65
4       2359.555        904.905  -604.905     2359.555    426.30      904.905        0.0  1454.65         1354.65
5       2359.555       1004.905  -604.905     2359.555   1454.60     1004.905        0.0  1354.65         1254.65
6       4402.105       1104.905  -604.905     4402.105   3397.20     1104.905     1642.5  1654.70         1554.70
7       8421.205       1210.905  -604.905     8421.205   5673.80     1210.905     5561.6  1648.70         1554.70
8      15897.205       1304.905  -604.905    15897.205   9124.70     1304.905    12937.6  1654.70         1554.70
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=15547/10.[0m
[08/03 16:20:23]  --------------------------------------------------------------------------------
[08/03 16:20:23]  Iteration: 2 (0 solution, 1 counterexamples)
[08/03 16:20:23]  Generator returned sat in 0.028387 secs.
[08/03 16:20:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:20:23]  Improved gap from 1/800 to 1.5625
[08/03 16:20:23]  Improved number of small numbers from 56 to 101 out of a max of 101
[08/03 16:20:23]  Verifer returned sat in 0.547317 secs.
[08/03 16:20:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    1561.055420    1561.030273 -1561.055420  1561.055420    0.049561  1561.030273        0.0    0.025146        0.000000
1    1561.055420    1561.055420 -1561.055176  1561.055420    0.012207  1561.055420        0.0    0.000000      -99.999756
2    2061.067871    1761.055176 -1561.055176  2061.067871  500.012451  1761.055176        0.0  300.012695      300.012695
3    2061.067871    1861.055176 -1561.055176  2061.067871    3.000000  1861.055176        0.0  200.012695      200.012695
4    2061.067871    1917.055420 -1561.055176  2061.067871    3.000000  1917.055420        0.0  144.012451      100.012695
5    2061.067871    1961.055420 -1561.055176  2061.067871    3.000000  1961.055420        0.0  100.012451        0.012695
6    2061.067871    2061.055420 -1464.042725  2061.067871    3.000000  2061.055420        0.0    0.012451       -2.974854
7    2064.055420    2064.042969 -1367.042725  2064.055420    3.000000  2064.042969        0.0    0.012451       -2.987305
8    2067.042969    2067.042969 -1367.042725  2067.042969    3.000000  2067.042969        0.0    0.000000      -99.999756
high_util=False, low_loss=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=1228901/4096.[0m
[08/03 16:20:24]  --------------------------------------------------------------------------------
[08/03 16:20:24]  Iteration: 3 (0 solution, 2 counterexamples)
[08/03 16:20:24]  Generator returned sat in 0.021760 secs.
[08/03 16:20:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:20:24]  Improved gap from 1/100 to 10.9375
[08/03 16:20:24]  Improved number of small numbers from 100 to 101 out of a max of 101
[08/03 16:20:24]  Verifer returned sat in 0.374214 secs.
[08/03 16:20:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    1535.492920    1435.492920 -1535.492920  1535.492920    0.049316  1435.492920        0.0  100.000000        0.000244
1    1535.492920    1535.492676 -1446.430420  1535.492920    0.011963  1535.492676        0.0    0.000244      -10.937256
2    1546.430176    1546.430176 -1446.430420  1546.430176   10.937500  1546.430176        0.0    0.000000     -100.000000
3    1941.430176    1745.430176 -1446.430420  1941.430176  395.000000  1745.430176        0.0  196.000000      195.000000
4    1941.430176    1844.930420 -1446.430420  1941.430176  196.000000  1844.930420        0.0   96.499756       95.000000
5    1941.430420    1937.230469 -1446.430420  1941.430420   96.500000  1937.230469        0.0    4.199951       -4.999756
6    1983.980469    1973.042969 -1383.980713  1983.980469   46.750000  1973.042969        0.0   10.937500        0.000000
7    1994.917969    1983.980469 -1294.918213  1994.917969   21.875000  1983.980469        0.0   10.937500        0.000000
8    1994.917969    1994.917969 -1205.855957  1994.917969    9.437500  1994.917969        0.0    0.000000      -10.937744
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=798769/4096.[0m
[08/03 16:20:24]  --------------------------------------------------------------------------------
[08/03 16:20:24]  Iteration: 4 (0 solution, 3 counterexamples)
[08/03 16:20:25]  Generator returned sat in 0.128093 secs.
[08/03 16:20:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:20:25]  Improved gap from 101/8192 to 100
[08/03 16:20:25]  Improved number of small numbers from 45 to 101 out of a max of 101
[08/03 16:20:25]  Verifer returned sat in 0.664082 secs.
[08/03 16:20:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0     347.081055     247.081055 -247.081543   347.081055     0.049072   247.081055     0.000000  100.000000       99.999756
1     347.081055     247.081299 -247.081543   347.081055     0.024414   247.081299     0.000000   99.999756       -0.000244
2     447.081055     347.081299 -247.081543   447.081055   199.999756   347.081299     0.000000   99.999756       -0.000244
3     447.105957     447.081299 -247.081543   447.105957   100.024658   447.081299     0.000000    0.024658      -99.975342
4     695.118408     568.081299 -247.081543   695.118408   248.037109   568.081299     0.024658  127.012451       48.012451
5    1295.643066     713.081299 -247.081543  1295.643066   727.537109   713.081299   500.549316   82.012451       48.012451
6    2488.167725     847.081299 -247.081543  2488.167725  1274.537109   847.081299  1593.073975   48.012451       48.012451
7    4312.692383     947.081299 -247.081543  4312.692383  1872.537109   947.081299  3317.598633   48.012451       48.012451
8    6703.717041     947.081299 -247.081543  6703.717041  2439.037109   947.081299  5608.623291  148.012451       48.012451
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=5, buffer=196659/4096.[0m
[08/03 16:20:26]  --------------------------------------------------------------------------------
[08/03 16:20:26]  Iteration: 5 (0 solution, 4 counterexamples)
[08/03 16:20:26]  Generator returned sat in 0.119534 secs.
[08/03 16:20:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:20:27]  Improved number of small numbers from 34 to 40 out of a max of 100
[08/03 16:20:27]  Verifer returned sat in 1.215916 secs.
[08/03 16:20:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t
0   -9724.985352   -9872.985668 -247.081543 -9724.985352     0.048828 -9872.985668      0.000000  148.000317      148.000317
1   -9724.985352   -9772.985668 -247.081543 -9724.985352   147.987793 -9772.985668      0.000000   48.000317       48.000317
2   -9624.985546   -9672.985668 -247.081543 -9624.985546   148.000122 -9672.985668      0.000000   48.000122       48.000122
3   -9524.960888   -9672.985668 -247.081543 -9524.960888   148.024780 -9672.985668      0.012329  148.012451       48.012451
4   -9052.936169   -9519.985668 -247.081543 -9052.936169   620.037170 -9519.985668    372.037048   95.012451       48.012451
5   -7713.892864   -9399.985668 -247.081543 -7713.892864  1434.055756 -9399.985668   1611.080353   75.012451       48.012451
6   -5093.821682   -9372.985668 -247.081543 -5093.821682  2695.083633 -9372.985668   4131.151535  148.012451       48.012451
7    -601.208683   -9272.985668 -247.081543  -601.208683  4640.625450 -9272.985668   8523.764534  148.012451       48.012451
8    6703.717041   -9172.985596 -247.081543  6703.717041  7452.938175 -9172.985596  15728.690258  148.012379       48.012451
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=5, buffer=196659/4096.[0m
[08/03 16:20:27]  --------------------------------------------------------------------------------
[08/03 16:20:27]  Iteration: 6 (0 solution, 5 counterexamples)
[08/03 16:20:28]  Generator returned sat in 0.147658 secs.
[08/03 16:20:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:20:28]  Improved gap from 1/800 to 100
[08/03 16:20:28]  Improved number of small numbers from 47 to 59 out of a max of 101
[08/03 16:20:28]  Verifer returned sat in 0.882794 secs.
[08/03 16:20:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -1101.219727   -1201.219516 -9118.835195 -1101.219727    0.048584 -1201.219516    0.000000   99.999790       99.999790
1   -1101.219727   -1201.219482 -9118.835195 -1101.219727    0.000833 -1201.219482    0.000000   99.999756       -0.000210
2   -1001.219727   -1001.234933 -9118.835195 -1001.219727  199.999756 -1001.234933    0.000000    0.015206       -0.000210
3   -1001.218683   -1001.219516 -9118.835195 -1001.218683    0.016250 -1001.219516    0.000000    0.000833      -99.999167
4    -700.687016    -801.227016 -9118.835195  -700.687016  300.532500  -801.227016  100.530833    0.009167        0.001667
5    -700.686183    -801.219516 -9118.835195  -700.686183    0.010000  -801.219516  100.530833    0.002500      -99.997500
6    -400.145558    -701.219482 -9118.835195  -400.145558  300.543125  -701.219482  201.072292  100.001633        0.001667
7    -400.145558    -601.218683 -9118.835195  -400.145558    0.010000  -601.218683  201.072292    0.000833      -99.998333
8     -99.613891    -501.219482 -9118.835195   -99.613891  300.532500  -501.219482  301.603958  100.001633        0.001667
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=1/600.[0m
[08/03 16:20:29]  --------------------------------------------------------------------------------
[08/03 16:20:29]  Iteration: 7 (0 solution, 6 counterexamples)
[08/03 16:20:29]  Generator returned sat in 0.583416 secs.
[08/03 16:20:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:20:30]  Improved gap from 0 to 15.625
[08/03 16:20:30]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/03 16:20:30]  Verifer returned sat in 0.386046 secs.
[08/03 16:20:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1316.842041   -1416.842041 -9203.210205 -1316.842041    0.048584 -1416.842041   0.000000  100.000000       99.999756
1   -1316.842041   -1416.841797 -9203.209961 -1316.842041    0.000833 -1416.841797   0.000000   99.999756        0.000000
2   -1116.841797   -1316.841797 -9203.209961 -1116.841797  300.000000 -1316.841797   0.000000  200.000000      100.000244
3   -1116.841797   -1203.215820 -9203.209961 -1116.841797  199.999512 -1203.215820   0.000000   86.374023        0.000244
4    -901.216553   -1016.842041 -9203.209961  -901.216553  301.999268 -1016.842041   0.000488  115.625000      115.625000
5    -901.216553    -932.467041 -9203.209961  -901.216553    2.000000  -932.467041   0.000488   31.250000       15.625000
6    -901.216553    -916.842041 -9118.834961  -901.216553    5.000000  -916.842041   0.000488   15.625000        0.000000
7    -901.216553    -901.217041 -9034.460205  -901.216553    9.500000  -901.217041   0.000488    0.000000      -15.625244
8    -884.966553    -885.591797 -9034.460205  -884.966553   16.250000  -885.591797   0.000488    0.624756      -99.375244
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=925/8.[0m
[08/03 16:20:30]  --------------------------------------------------------------------------------
[08/03 16:20:30]  Iteration: 8 (0 solution, 7 counterexamples)
[08/03 16:20:30]  Generator returned sat in 0.088940 secs.
[08/03 16:20:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:20:30]  Improved gap from 199/16384 to 100
[08/03 16:20:31]  Improved number of small numbers from 57 to 74 out of a max of 101
[08/03 16:20:31]  Verifer returned sat in 0.722495 secs.
[08/03 16:20:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -1316.842041   -1416.842041 -9203.209961 -1316.842041    0.048340 -1416.842041    0.000000  100.000000      100.000000
1   -1316.842041   -1409.814697 -9203.209961 -1316.842041    0.012207 -1409.814697    0.000000   92.972656        0.000000
2   -1116.854004   -1216.842285 -9203.209961 -1116.854004  292.960693 -1216.842285    0.000000   99.988281       99.988037
3   -1116.854004   -1216.842041 -9203.209961 -1116.854004    0.012207 -1216.842041    0.000000   99.988037       -0.011963
4   -1014.835938   -1116.842041 -9203.209961 -1014.835938  202.006104 -1116.842041    0.000000  102.006104        2.006104
5    -720.866333   -1016.842041 -9203.209961  -720.866333  395.975708 -1016.842041   95.975708  200.000000      100.000000
6    -720.866333    -916.842041 -9203.209961  -720.866333  199.987854  -916.842041   95.975708  100.000000        0.000000
7    -418.872406    -716.842041 -9203.209961  -418.872406  401.993927  -716.842041  197.969635  100.000000      100.000000
8    -315.875443    -716.842041 -9203.209961  -315.875443  202.996964  -716.842041  200.966599  200.000000      100.000000
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=100.[0m
[08/03 16:20:31]  --------------------------------------------------------------------------------
[08/03 16:20:31]  Iteration: 9 (0 solution, 8 counterexamples)
[08/03 16:20:32]  Generator returned sat in 0.599527 secs.
[08/03 16:20:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:20:32]  Improved gap from 1/800 to 100
[08/03 16:20:33]  Improved number of small numbers from 64 to 70 out of a max of 101
[08/03 16:20:33]  Verifer returned sat in 0.760429 secs.
[08/03 16:20:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1316.832275   -1316.833291 -9203.209961 -1316.832275    0.048340 -1316.833291    0.00000    0.001016        0.001016
1   -1116.830791   -1216.833291 -9203.209961 -1116.830791  200.002500 -1216.833291    0.00125  100.001250      100.001250
2   -1017.348291   -1215.798291 -9203.209961 -1017.348291  199.483750 -1215.798291    0.00125  198.448750       99.483750
3   -1017.348291   -1017.350791 -9203.209961 -1017.348291   25.139375 -1017.350791    0.00125    0.001250       -0.516250
4    -816.829541   -1016.833291 -9203.209961  -816.829541  200.520000 -1016.833291    0.00250  200.001250      100.001250
5    -816.829541    -816.833291 -9203.209961  -816.829541    0.010000  -816.833291    0.00250    0.001250        0.001250
6    -616.828291    -816.833252 -9203.209961  -616.828291  200.002500  -816.833252    0.00375  200.001211      100.001250
7    -616.828291    -616.833291 -9203.209961  -616.828291    0.010000  -616.833291    0.00375    0.001250        0.001250
8    -416.309541    -616.833252 -9203.209961  -416.309541  200.520000  -616.833252    0.52250  200.001211      100.001250
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=80001/800.[0m
[08/03 16:20:33]  --------------------------------------------------------------------------------
[08/03 16:20:33]  Iteration: 10 (0 solution, 9 counterexamples)
[08/03 16:20:33]  Generator returned sat in 0.042001 secs.
[08/03 16:20:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:20:34]  Improved number of small numbers from 44 to 48 out of a max of 100
[08/03 16:20:34]  Verifer returned sat in 0.936705 secs.
[08/03 16:20:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1316.832275   -1316.833291 -9203.209961 -1316.832275    0.048096 -1316.833291   0.000000    0.001016        0.001016
1   -1116.831787   -1216.833291 -9203.209961 -1116.831787  200.001504 -1216.833291   0.000254  100.001250      100.001250
2   -1017.346279   -1215.812275 -9203.209961 -1017.346279  199.486758 -1215.812275   0.000254  198.465742       99.486758
3   -1017.346279   -1017.346787 -9203.209961 -1017.346279   33.514499 -1017.346787   0.000254    0.000254       -0.513242
4    -816.831533   -1016.833291 -9203.209961  -816.831533  200.515000 -1016.833291   0.000508  200.001250      100.001250
5    -816.831533    -816.833291 -9203.209961  -816.831533    0.010000  -816.833291   0.000508    0.001250        0.001250
6    -616.828291    -816.833252 -9203.209961  -616.828291  200.004492  -816.833252   0.003750  200.001211      100.001250
7    -616.828291    -616.833291 -9203.209961  -616.828291    0.010000  -616.833291   0.003750    0.001250        0.001250
8    -416.314541    -616.833252 -9203.209961  -416.314541  200.515000  -616.833252   0.517500  200.001211      100.001250
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=80001/800.[0m
[08/03 16:20:35]  --------------------------------------------------------------------------------
[08/03 16:20:35]  Iteration: 11 (0 solution, 10 counterexamples)
[08/03 16:20:35]  Generator returned sat in 0.044142 secs.
[08/03 16:20:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:20:36]  Improved number of small numbers from 40 to 46 out of a max of 100
[08/03 16:20:36]  Verifer returned sat in 0.875654 secs.
[08/03 16:20:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1316.832520   -1417.331914 -9203.209961 -1316.832520    0.048096 -1417.331914   0.000000  100.499395        0.499395
1   -1116.831660   -1217.332031 -9203.209961 -1116.831660  300.500254 -1217.332031   0.000381  100.499990      100.499873
2   -1017.331406   -1217.331914 -9203.209961 -1017.331406  200.000244 -1217.331914   0.000381  200.000127      100.000127
3   -1017.331406   -1017.331914 -9203.209961 -1017.331406   33.514648 -1017.331914   0.000381    0.000127        0.000127
4    -816.831533   -1017.331914 -9203.209961  -816.831533  200.500000 -1017.331914   0.000508  200.499873      100.499873
5    -816.831533    -817.331914 -9203.209961  -816.831533    0.010000  -817.331914   0.000508    0.499873        0.499873
6    -616.831406    -816.833252 -9203.209961  -616.831406  200.500000  -816.833252   0.000635  200.001211      100.499873
7    -616.831406    -617.331914 -9203.209961  -616.831406    0.010000  -617.331914   0.000635    0.499873        0.499873
8    -416.831279    -616.833496 -9203.209961  -416.831279  200.500000  -616.833496   0.000762  200.001455      100.499873
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=10291187/102400.[0m
[08/03 16:20:36]  --------------------------------------------------------------------------------
[08/03 16:20:36]  Iteration: 12 (0 solution, 11 counterexamples)
[08/03 16:20:36]  Generator returned sat in 0.308616 secs.
[08/03 16:20:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:20:36]  Improved gap from 0 to 100
[08/03 16:20:37]  Improved number of small numbers from 69 to 73 out of a max of 101
[08/03 16:20:37]  Verifer returned sat in 0.488907 secs.
[08/03 16:20:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1292.373779   -1392.374268 -9203.210205 -1292.373779    0.048096 -1392.374268   0.000488  100.000000        0.000000
1   -1292.373779   -1292.374268 -9203.210205 -1292.373779    0.002500 -1292.374268   0.000488    0.000000     -100.000000
2    -992.876465   -1191.364268 -9203.210205  -992.876465  299.497314 -1191.364268   0.000488  198.487314       99.497314
3    -992.876465    -992.879268 -9203.210205  -992.876465    0.262500  -992.879268   0.000488    0.002314       -0.502686
4    -792.368779    -992.374268 -9203.210205  -792.368779  200.510000  -992.374268   0.002988  200.002500      100.002500
5    -792.368779    -792.374268 -9203.210205  -792.368779    0.010000  -792.374268   0.002988    0.002500        0.002500
6    -592.366279    -692.374512 -9203.210205  -592.366279  200.005000  -692.374512   0.005488  100.002744      100.002500
7    -592.366279    -592.374268 -9203.210205  -592.366279    0.010000  -592.374268   0.005488    0.002500        0.002500
8    -391.858779    -592.374268 -9203.210205  -391.858779  200.510000  -592.374268   0.512988  200.002500      100.002500
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=40001/400.[0m
[08/03 16:20:37]  --------------------------------------------------------------------------------
[08/03 16:20:37]  Iteration: 13 (0 solution, 12 counterexamples)
[08/03 16:20:39]  Generator returned sat in 1.742800 secs.
[08/03 16:20:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:20:39]  Improved gap from 1/1600 to 12.5
[08/03 16:20:40]  Improved number of small numbers from 38 to 101 out of a max of 101
[08/03 16:20:40]  Verifer returned sat in 0.563789 secs.
[08/03 16:20:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1077.228271   -1177.252197 -9141.205322 -1077.228271    0.048096 -1177.252197   0.000000  100.023926        0.023926
1   -1077.228271   -1077.252197 -9141.205322 -1077.228271    0.023926 -1077.252197   0.000000    0.023926      -99.976074
2    -828.545410    -977.252197 -9141.205322  -828.545410  248.706787  -977.252197   0.000000  148.706787       48.706787
3    -828.545410    -841.045410 -9089.912109  -828.545410  148.682617  -841.045410   0.000000   12.500000        0.000000
4    -616.021484    -728.545654 -9089.912109  -616.021484  225.023926  -728.545654   0.023926  112.500244      112.500000
5    -616.021484    -628.545410 -9089.912109  -616.021484    1.000000  -628.545410   0.023926   12.500000       12.500000
6    -616.021484    -628.545410 -9002.412109  -616.021484    3.500000  -628.545410   0.023926   12.500000        0.000000
7    -616.021484    -616.045410 -8914.912109  -616.021484    7.250000  -616.045410   0.023926    0.000000      -12.500000
8    -603.146484    -603.545410 -8914.912109  -603.146484   12.875000  -603.545410   0.023926    0.375000      -99.625000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=225/2.[0m
[08/03 16:20:40]  --------------------------------------------------------------------------------
[08/03 16:20:40]  Iteration: 14 (0 solution, 13 counterexamples)
[08/03 16:20:41]  Generator returned sat in 1.075246 secs.
[08/03 16:20:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:20:41]  Improved gap from 197/32768 to 100
[08/03 16:20:42]  Improved number of small numbers from 42 to 57 out of a max of 101
[08/03 16:20:42]  Verifer returned sat in 0.899079 secs.
[08/03 16:20:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1278.240234   -1478.240295 -8914.912109 -1278.240234    0.047852 -1478.240295   0.000000  200.000061      100.000061
1   -1278.240234   -1278.252441 -8914.912109 -1278.240234    0.012207 -1278.252441   0.000000    0.012207        0.000061
2   -1077.228516   -1278.240295 -8914.912109 -1077.228516  201.023926 -1278.240295   0.000000  201.011780      101.011780
3   -1077.228516   -1078.240295 -8914.912109 -1077.228516    0.690715 -1078.240295   0.000000    1.011780        1.011780
4    -877.204224   -1078.240295 -8914.912109  -877.204224  201.036072 -1078.240295   0.012024  201.024048      101.024048
5    -877.204224    -878.549581 -8914.912109  -877.204224    1.000000  -878.549581   0.012024    1.333333        1.024048
6    -677.192200    -878.240234 -8914.912109  -677.192200  201.345357  -878.240234   0.024048  201.023987      101.024048
7    -677.192200    -678.549581 -8914.912109  -677.192200    1.000000  -678.549581   0.024048    1.333333        1.024048
8    -477.180176    -678.240234 -8914.912109  -477.180176  201.345357  -678.240234   0.036072  201.023987      101.024048
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=827589/8192.[0m
[08/03 16:20:42]  --------------------------------------------------------------------------------
[08/03 16:20:42]  Iteration: 15 (0 solution, 14 counterexamples)
[08/03 16:20:43]  Generator returned sat in 0.465899 secs.
[08/03 16:20:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:20:43]  Improved gap from 49/4096 to 100
[08/03 16:20:44]  Improved number of small numbers from 40 to 52 out of a max of 101
[08/03 16:20:44]  Verifer returned sat in 0.682794 secs.
[08/03 16:20:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0   -1278.228271   -1478.240234 -8914.912109 -1278.228271     0.047852 -1478.240234     0.000000  200.011963      100.012146
1   -1278.228271   -1278.252197 -8914.912109 -1278.228271     0.011963 -1278.252197     0.000000    0.023926        0.012146
2   -1278.228271   -1278.240417 -8914.912109 -1278.228271     0.011963 -1278.240417     0.000000    0.012146      -99.987854
3   -1078.204529   -1078.240417 -8914.912109 -1078.204529   200.035889 -1078.240417     0.011963    0.023926        0.023926
4    -779.174622    -978.240417 -8914.912109  -779.174622   299.053833  -978.240417   199.041870    0.023926        0.023926
5    -331.617798    -978.240417 -8914.912109  -331.617798   447.580750  -978.240417   546.598694  100.023926        0.023926
6     238.729401    -878.240417 -8914.912109   238.729401   670.371124  -878.240417  1016.945892  100.023926        0.023926
7    1143.262161    -778.240417 -8914.912109  1143.262161  1004.556686  -778.240417  1821.478653  100.023926        0.023926
8    2549.073265    -678.240234 -8914.912109  2549.073265  1505.835030  -678.240234  3127.289757  100.023743        0.023926
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=5, buffer=49/2048.[0m
[08/03 16:20:44]  --------------------------------------------------------------------------------
[08/03 16:20:44]  Iteration: 16 (0 solution, 15 counterexamples)
[08/03 16:20:44]  Generator returned sat in 0.092487 secs.
[08/03 16:20:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:20:45]  Improved number of small numbers from 51 to 100 out of a max of 100
[08/03 16:20:45]  Verifer returned sat in 0.257020 secs.
[08/03 16:20:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -1278.228271   -1378.240479 -8914.912109 -1278.228271    0.047852 -1378.240479    0.000000  100.012207      100.011963
1   -1278.228271   -1378.240234 -8914.912109 -1278.228271    0.011963 -1378.240234    0.000000  100.011963        0.011963
2   -1278.228271   -1278.240234 -8914.912109 -1278.228271    0.011963 -1278.240234    0.000000    0.011963      -99.988037
3    -831.099854   -1177.975342 -8914.912109  -831.099854  447.140381 -1177.975342  247.116455   99.759033        0.023926
4    -731.093750    -978.240234 -8914.912109  -731.093750  199.765137  -978.240234  247.122559    0.023926        0.023926
5    -331.617676    -978.240234 -8914.912109  -331.617676  399.500000  -978.240234  546.598633  100.023926        0.023926
6    -132.141602    -878.240234 -8914.912109  -132.141602  299.500000  -878.240234  646.074707  100.023926        0.023926
7      67.069580    -766.975342 -8914.912109    67.069580  299.235107  -766.975342  745.285889   88.759033        0.023926
8     189.075439    -678.240234 -8914.912109   189.075439  210.764893  -678.240234  767.291748  100.023926        0.023926
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=5, buffer=49/2048.[0m
[08/03 16:20:45]  --------------------------------------------------------------------------------
[08/03 16:20:45]  Iteration: 17 (0 solution, 16 counterexamples)
[08/03 16:20:46]  Generator returned sat in 0.310931 secs.
[08/03 16:20:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:20:46]  Improved gap from 0 to 0
[08/03 16:20:46]  Improved number of small numbers from 38 to 48 out of a max of 101
[08/03 16:20:46]  Verifer returned sat in 0.869887 secs.
[08/03 16:20:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t
0   -1137.146240   -1384.261660 -8914.912109 -1137.146240    0.047607 -1384.261660  247.115205   0.000215      -99.999785
1    -937.146455   -1184.261719 -8914.912109  -937.146455  200.000000 -1184.261719  247.115205   0.000059        0.000000
2    -837.145264   -1086.261660 -8914.912109  -837.145264  100.001250 -1086.261660  247.115205   2.001191        0.001191
3    -737.142705    -984.261660 -8914.912109  -737.142705  102.003750  -984.261660  247.116455   0.002500        0.002500
4    -636.141455    -884.261660 -8914.912109  -636.141455  101.003750  -884.261660  248.117705   0.002500        0.002500
5    -536.140205    -833.275410 -8914.912109  -536.140205  100.003750  -833.275410  248.118955  49.016250        0.002500
6    -486.152705    -734.272910 -8864.902109  -486.152705   99.003750  -734.272910  248.118955   0.001250        0.000000
7    -486.143955    -734.271660 -8764.910889  -486.143955    0.010000  -734.271660  248.118955   0.008750       -0.000029
8    -486.142705    -734.262695 -8764.910645  -486.142705    0.010000  -734.262695  248.118955   0.001035      -99.998535
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=1/400.[0m
[08/03 16:20:47]  --------------------------------------------------------------------------------
[08/03 16:20:47]  Iteration: 18 (0 solution, 17 counterexamples)
[08/03 16:20:47]  Generator returned sat in 0.105783 secs.
[08/03 16:20:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:20:47]  Improved gap from 1/800 to 0
[08/03 16:20:48]  Improved number of small numbers from 33 to 59 out of a max of 101
[08/03 16:20:48]  Verifer returned sat in 1.002701 secs.
[08/03 16:20:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t   queue_t  bottle_queue_t
0    -786.677490   -1034.298340 -9164.875859  -786.677490    0.047363 -1034.298340  247.619629  0.001221        0.000791
1    -786.677490   -1034.297852 -9164.875859  -786.677490    0.000732 -1034.297852  247.619629  0.000732      -99.999209
2    -586.678467    -834.298584 -9164.875859  -586.678467  199.999756  -834.298584  247.619629  0.000488       -0.000186
3    -486.177705    -734.299160 -9164.875859  -486.177705  100.501250  -734.299160  248.118955  0.002500        0.001250
4    -386.178955    -634.298535 -9164.875859  -386.178955  100.001250  -634.298535  248.118955  0.000625        0.000000
5    -386.169580    -634.289160 -9064.893799  -386.169580    0.010000  -634.289160  248.118955  0.000625       -0.008564
6    -386.160205    -634.279785 -8964.894775  -386.160205    0.010000  -634.279785  248.118955  0.000625       -0.000166
7    -386.150830    -634.270410 -8864.903984  -386.150830    0.010000  -634.270410  248.118955  0.000625        0.000000
8    -386.141455    -634.269775 -8764.913574  -386.141455    0.010000  -634.269775  248.118955  0.009365       -0.000215
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1/800.[0m
[08/03 16:20:48]  --------------------------------------------------------------------------------
[08/03 16:20:48]  Iteration: 19 (0 solution, 18 counterexamples)
[08/03 16:20:49]  Generator returned sat in 0.737113 secs.
[08/03 16:20:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:20:50]  Improved gap from 1/800 to 100
[08/03 16:20:50]  Improved number of small numbers from 25 to 101 out of a max of 101
[08/03 16:20:50]  Verifer returned sat in 0.446748 secs.
[08/03 16:20:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    -690.715332    -790.738770 -9408.434814  -690.715332    0.047119  -790.738770    0.000000  100.023438      100.023438
1    -690.703125    -790.727051 -9408.434814  -690.703125  100.035645  -790.727051    0.011963  100.011963        0.023682
2    -686.644043    -686.667969 -9408.434814  -686.644043  104.071045  -686.667969    0.011963    0.011963      -95.917236
3    -490.691406    -490.739014 -9408.434814  -490.691406  195.964600  -490.739014    0.023682    0.023926        0.023682
4    -295.250732    -485.691406 -9408.434814  -295.250732  195.464600  -485.691406   95.464355   94.976318        0.023682
5    -195.262451    -290.738770 -9408.434814  -195.262451  194.964600  -290.738770   95.464355    0.011963        0.011963
6       1.190186    -190.739014 -9408.434814     1.190186  196.464600  -190.739014  191.905273    0.023926        0.023682
7     197.130859    -186.203125 -9408.434814   197.130859  195.964600  -186.203125  287.845947   95.488037        0.023682
8     297.107422     -90.738770 -9408.434814   297.107422  195.464600   -90.738770  287.845947  100.000244        0.000244
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=97/4096.[0m
[08/03 16:20:50]  --------------------------------------------------------------------------------
[08/03 16:20:50]  Iteration: 20 (0 solution, 19 counterexamples)
[08/03 16:20:51]  Generator returned sat in 0.231737 secs.
[08/03 16:20:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:20:51]  Improved gap from 1/800 to 0
[08/03 16:20:51]  Improved number of small numbers from 61 to 72 out of a max of 101
[08/03 16:20:51]  Verifer returned sat in 0.801578 secs.
[08/03 16:20:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -678.202881    -778.202881 -9558.436064  -678.202881    0.047119  -778.202881    0.00000  100.000000       99.999775
1    -678.202881    -778.202637 -9558.436064  -678.202881   99.999756  -778.202637    0.00000   99.999756       -0.000225
2    -678.201416    -678.202656 -9558.436064  -678.201416  100.001221  -678.202656    0.00000    0.001240      -99.998760
3    -278.187656    -578.202656 -9558.436064  -278.187656  400.015000  -578.202656  200.01250  100.002500        0.002500
4    -178.182656    -378.202656 -9558.436064  -178.182656  200.007500  -378.202656  200.01750    0.002500        0.002500
5     -78.181406    -278.214531 -9558.436064   -78.181406  100.003750  -278.214531  200.01875    0.014375        0.002500
6     -28.193906    -228.213906 -9508.433350   -28.193906   50.001875  -228.213906  200.01875    0.001250       -0.007285
7     -28.185156    -228.205156 -9408.434814   -28.185156    0.010000  -228.205156  200.01875    0.001250        0.000000
8     -28.176406    -228.203906 -9408.434814   -28.176406    0.010000  -228.203906  200.01875    0.008750      -99.991250
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=1/400.[0m
[08/03 16:20:52]  --------------------------------------------------------------------------------
[08/03 16:20:52]  Iteration: 21 (0 solution, 20 counterexamples)
[08/03 16:20:52]  Generator returned sat in 0.064142 secs.
[08/03 16:20:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:20:52]  Improved gap from 0 to 0
[08/03 16:20:53]  Improved number of small numbers from 71 to 87 out of a max of 101
[08/03 16:20:53]  Verifer returned sat in 0.626330 secs.
[08/03 16:20:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -416.705566    -516.707031 -9787.696045  -416.705566    0.046875  -516.707031    0.00000  100.001465        0.001465
1    -416.705566    -416.707031 -9787.696045  -416.705566    0.001465  -416.707031    0.00000    0.001465      -99.998535
2    -216.705811    -216.707031 -9787.696045  -216.705811  200.001221  -216.707031    0.00000    0.001221        0.001221
3     -15.699531    -116.707031 -9787.696045   -15.699531  201.007500  -116.707031  101.00500    0.002500        0.002500
4      84.301719     -16.707031 -9787.696045    84.301719  100.003750   -16.707031  101.00625    0.002500        0.002500
5     133.801094      32.793594 -9737.197998   133.801094   49.501875    32.793594  101.00625    0.001250       -0.000078
6     133.809844      32.802344 -9637.214111   133.809844    0.010000    32.802344  101.00625    0.001250       -0.007441
7     133.818594      32.811094 -9537.215576   133.818594    0.010000    32.811094  101.00625    0.001250       -0.000156
8     133.827344      32.821045 -9437.224365   133.827344    0.010000    32.821045  101.00625    0.000049       -0.000195
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/400.[0m
[08/03 16:20:53]  --------------------------------------------------------------------------------
[08/03 16:20:53]  Iteration: 22 (0 solution, 21 counterexamples)
[08/03 16:20:54]  Generator returned sat in 0.144304 secs.
[08/03 16:20:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:20:54]  Improved gap from 1/4096 to 48.4375
[08/03 16:20:54]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/03 16:20:54]  Verifer returned sat in 0.236221 secs.
[08/03 16:20:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -407.688721    -407.712158 -9796.702637  -407.688721    0.046875  -407.712158        0.0    0.023438        0.011719
1    -407.688721    -407.700439 -9796.702637  -407.688721    0.011719  -407.700439        0.0    0.011719      -99.988281
2     -12.364502    -207.700439 -9796.702637   -12.364502  395.335938  -207.700439        0.0  195.335938      195.335938
3     -12.364502    -107.700439 -9796.702637   -12.364502   55.937500  -107.700439        0.0   95.335938       95.335938
4     -12.364502     -12.376221 -9796.702637   -12.364502   54.437500   -12.376221        0.0    0.011719       -4.664062
5      40.561279      -7.700439 -9745.140137    40.561279   52.937500    -7.700439        0.0   48.261719       -0.175781
6      43.737061      40.737061 -9693.577637    43.737061   51.437500    40.737061        0.0    3.000000      -45.437500
7      90.674561      89.174561 -9642.015137    90.674561   49.937500    89.174561        0.0    1.500000      -46.937500
8     137.612061     137.612061 -9590.452637   137.612061   48.437500   137.612061        0.0    0.000000      -48.437500
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=50009/256.[0m
[08/03 16:20:54]  --------------------------------------------------------------------------------
[08/03 16:20:54]  Iteration: 23 (0 solution, 22 counterexamples)
[08/03 16:20:56]  Generator returned sat in 1.150589 secs.
[08/03 16:20:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:20:56]  Improved gap from 0 to 0
[08/03 16:20:56]  Improved number of small numbers from 56 to 66 out of a max of 101
[08/03 16:20:56]  Verifer returned sat in 0.827636 secs.
[08/03 16:20:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    -233.882324    -333.883545 -9645.506074  -233.882324    0.046631  -333.883545    0.00000  100.001221      100.001172
1    -233.882324    -333.883496 -9645.506074  -233.882324  100.001221  -333.883496    0.00000  100.001172        0.001172
2    -133.879746    -133.883496 -9645.506074  -133.879746  200.003750  -133.883496    0.00125    0.002500        0.002500
3     275.117754     -33.883496 -9645.506074   275.117754  409.000000   -33.883496  308.99875    0.002500        0.002500
4     478.115254      66.116504 -9645.506074   478.115254  203.000000    66.116504  411.99625    0.002500        0.002500
5     578.112754     166.107754 -9645.506074   578.112754  100.000000   166.107754  411.99625    0.008750        0.000000
6     578.114004     166.116504 -9545.507324   578.114004    0.010000   166.116504  411.99625    0.001250        0.000000
7     578.122754     166.125254 -9445.516113   578.122754    0.010000   166.125254  411.99625    0.001250       -0.000039
8     578.131504     166.126709 -9445.516113   578.131504    0.010000   166.126709  411.99625    0.008545      -99.991289
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/400.[0m
[08/03 16:20:57]  --------------------------------------------------------------------------------
[08/03 16:20:57]  Iteration: 24 (0 solution, 23 counterexamples)
[08/03 16:20:57]  Generator returned sat in 0.084856 secs.
[08/03 16:20:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:20:57]  Improved gap from 1/800 to 0
[08/03 16:20:58]  Improved number of small numbers from 55 to 72 out of a max of 101
[08/03 16:20:58]  Verifer returned sat in 0.735144 secs.
[08/03 16:20:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0     677.960693     677.958252 -9745.504883   677.960693    0.046387   677.958252    0.00000  0.002441        0.001006
1     677.960693     677.959717 -9645.506074   677.960693    0.001250   677.959717    0.00000  0.000977       -0.000186
2     677.962158     677.960879 -9645.506074   677.962158    0.002441   677.960879    0.00000  0.001279      -99.998721
3    1089.975879     877.960879 -9645.506074  1089.975879  412.015000   877.960879  212.01250  0.002500        0.002500
4    1293.980879     977.960879 -9645.506074  1293.980879  204.007500   977.960879  316.01750  0.002500        0.002500
5    1393.982129    1077.960879 -9645.506074  1393.982129  100.003750  1077.960879  316.01875  0.002500        0.002500
6    1441.981504    1125.951416 -9593.507949  1441.981504   48.001875  1125.951416  316.01875  0.011338        0.000000
7    1441.981504    1125.962754 -9493.508057  1441.981504    0.010000  1125.962754  316.01875  0.000000       -0.000107
8    1441.991504    1125.962891 -9493.507812  1441.991504    0.010000  1125.962891  316.01875  0.009863      -99.989863
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=1/400.[0m
[08/03 16:20:58]  --------------------------------------------------------------------------------
[08/03 16:20:58]  Iteration: 25 (0 solution, 24 counterexamples)
[08/03 16:21:00]  Generator returned sat in 1.166864 secs.
[08/03 16:21:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:21:00]  Improved gap from 0 to 0
[08/03 16:21:00]  Improved number of small numbers from 55 to 69 out of a max of 101
[08/03 16:21:00]  Verifer returned sat in 0.564429 secs.
[08/03 16:21:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     877.975830     577.960879 -9645.506074   877.975830    0.046387   577.960879     0.0000  300.014951      300.014951
1     877.978379     577.960938 -9645.506074   877.978379  300.017500   577.960938     0.0025  300.014941      200.015000
2     877.978379     677.960879 -9645.506074   877.978379  300.014893   677.960879     0.0025  200.015000      100.015000
3    1077.975879     877.960693 -9645.506074  1077.975879  400.012500   877.960693     0.0025  200.012686      200.012500
4    1077.975879     977.960693 -9645.506074  1077.975879    0.010000   977.960693     0.0025  100.012686      100.012500
5    1077.975879    1077.960693 -9645.506074  1077.975879    0.010000  1077.960693     0.0025    0.012686        0.012500
6    1077.975879    1077.960938 -9545.518574  1077.975879    0.010000  1077.960938     0.0025    0.012441        0.000000
7    1077.975879    1077.973379 -9445.528564  1077.975879    0.010000  1077.973379     0.0025    0.000000       -0.009990
8    1077.985879    1077.983379 -9345.528809  1077.985879    0.010000  1077.983379     0.0025    0.000000       -0.000234
high_util=False, low_loss=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=40003/200.[0m
[08/03 16:21:01]  --------------------------------------------------------------------------------
[08/03 16:21:01]  Iteration: 26 (0 solution, 25 counterexamples)
[08/03 16:21:01]  Generator returned sat in 0.579887 secs.
[08/03 16:21:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:21:02]  Improved gap from 1/1600 to 48.4375
[08/03 16:21:02]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/03 16:21:02]  Verifer returned sat in 0.423383 secs.
[08/03 16:21:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     877.978271     677.978271 -9845.523682   877.978271    0.046143   677.978271   0.000000  200.000000      100.000000
1     877.978271     829.540771 -9845.523682   877.978271    0.002686   829.540771   0.000000   48.437500        0.000000
2     977.993408     977.978271 -9845.523682   977.993408  148.452637   977.978271   0.002686    0.012451        0.012451
3    1019.301025    1019.295654 -9845.523682  1019.301025   41.320068  1019.295654   0.002686    0.002686      -58.679932
4    1187.957031    1177.978271 -9845.523682  1187.957031  168.658691  1177.978271   9.966309    0.012451        0.012451
5    1187.957031    1177.978271 -9793.961182  1187.957031    0.010000  1177.978271   9.966309    0.012451      -48.425049
6    1285.944580    1226.415771 -9743.523682  1285.944580   98.000000  1226.415771   9.966309   49.562500        0.000000
7    1337.942139    1275.978271 -9695.521240  1337.942139  101.560059  1275.978271   9.966309   51.997559        0.000000
8    1337.942139    1327.975830 -9643.958740  1337.942139   47.000000  1327.975830   9.966309    0.000000      -48.437500
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=51/4096.[0m
[08/03 16:21:02]  --------------------------------------------------------------------------------
[08/03 16:21:02]  Iteration: 27 (0 solution, 26 counterexamples)
[08/03 16:21:04]  Generator returned sat in 1.231455 secs.
[08/03 16:21:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:21:04]  Improved gap from 11/16384 to 46.875
[08/03 16:21:04]  Improved number of small numbers from 73 to 101 out of a max of 101
[08/03 16:21:04]  Verifer returned sat in 0.447839 secs.
[08/03 16:21:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     776.415527     566.668457 -9845.523682   776.415527    0.046143   566.668457   0.000000  209.747070      109.747070
1     776.415527     766.668457 -9845.523682   776.415527    0.002686   766.668457   0.000000    9.747070        9.747070
2     876.415527     854.919678 -9845.523682   876.415527  109.747070   854.919678   0.000000   21.495850        9.747070
3     966.669678     966.668457 -9845.523682   966.669678  111.750000   966.668457   0.000000    0.001221        0.001221
4    1076.418457    1066.668457 -9845.523682  1076.418457  109.750000  1066.668457   0.001221    9.748779        9.748779
5    1119.544678    1068.669678 -9798.398682  1119.544678   52.875000  1068.669678   0.001221   50.873779        0.000000
6    1119.545898    1119.543457 -9745.273682  1119.545898   50.875000  1119.543457   0.001221    0.001221      -46.873779
7    1168.419678    1166.418457 -9692.148682  1168.419678   48.875000  1166.418457   0.001221    2.000000      -44.875000
8    1213.294678    1213.293457 -9692.148682  1213.294678   46.875000  1213.293457   0.001221    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=39931/4096.[0m
[08/03 16:21:05]  --------------------------------------------------------------------------------
[08/03 16:21:05]  Iteration: 28 (0 solution, 27 counterexamples)
[08/03 16:21:07]  Generator returned sat in 1.598977 secs.
[08/03 16:21:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:21:07]  Improved gap from 1/400 to 23.4375
[08/03 16:21:08]  Improved number of small numbers from 56 to 70 out of a max of 101
[08/03 16:21:08]  Verifer returned sat in 0.923004 secs.
[08/03 16:21:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     437.733887     337.732402 -9516.587627   437.733887    0.045898   337.732402    0.00000  100.001484      100.001484
1     437.733887     437.732178 -9516.587627   437.733887    0.001465   437.732178    0.00000    0.001709        0.001484
2     485.583496     437.732402 -9464.438877   485.583496   47.851318   437.732402    0.00000   47.851094       -0.000156
3     585.586152     585.583652 -9464.438877   585.586152  147.853750   585.583652    0.00000    0.002500        0.002500
4     930.789902     682.461152 -9464.438877   930.789902  345.206250   682.461152  245.20375    3.125000        0.002500
5     930.789902     685.584902 -9387.877627   930.789902    0.010000   685.584902  245.20375    0.001250      -23.436250
6    1054.229902     809.013428 -9387.877627  1054.229902  123.441250   809.013428  245.20500    0.011475        0.002500
7    1054.229902     809.022402 -9311.315186  1054.229902    0.010000   809.022402  245.20500    0.002500      -23.435059
8    1117.023027     832.459961 -9250.673340  1117.023027   62.795625   832.459961  245.20500   39.358066       -0.000088
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=1/400.[0m
[08/03 16:21:08]  --------------------------------------------------------------------------------
[08/03 16:21:08]  Iteration: 29 (0 solution, 28 counterexamples)
[08/03 16:21:11]  Generator returned sat in 2.703641 secs.
[08/03 16:21:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:21:11]  Improved gap from 0 to 0
[08/03 16:21:11]  Improved number of small numbers from 86 to 101 out of a max of 101
[08/03 16:21:11]  Verifer returned sat in 0.241617 secs.
[08/03 16:21:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     437.745117     437.722412 -9464.438721   437.745117    0.045654   437.722412   0.000000    0.022705        0.011475
1     437.745361     437.733887 -9464.438721   437.745361    0.022949   437.733887   0.000000    0.011475      -99.988281
2     637.733643     589.882568 -9464.438721   637.733643  199.999756   589.882568   0.000000   47.851074        0.000000
3     936.268066     737.733643 -9464.438721   936.268066  346.385498   737.733643   0.011475  198.522949      198.522949
4     936.268066     837.733643 -9464.438721   936.268066    2.000000   837.733643   0.011475   98.522949       98.522949
5     936.268066     936.245361 -9464.438721   936.268066    1.500000   936.245361   0.011475    0.011230       -1.477051
6     937.756836     937.733643 -9365.927246   937.756836    1.500000   937.733643   0.011475    0.011719       -1.476807
7     939.245117     939.222412 -9267.427246   939.245117    1.500000   939.222412   0.011475    0.011230       -1.488525
8     940.733887     940.722168 -9267.427246   940.733887    1.500000   940.722168   0.011475    0.000244      -99.999756
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=406575/2048.[0m
[08/03 16:21:12]  --------------------------------------------------------------------------------
[08/03 16:21:12]  Iteration: 30 (0 solution, 29 counterexamples)
[08/03 16:21:12]  Generator returned sat in 0.365635 secs.
[08/03 16:21:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:21:12]  Improved gap from 187/8192 to 0
[08/03 16:21:13]  Improved number of small numbers from 71 to 101 out of a max of 101
[08/03 16:21:13]  Verifer returned sat in 0.249702 secs.
[08/03 16:21:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     390.733887     390.710938 -9564.450195   390.733887    0.045654   390.710938        0.0    0.022949        0.022705
1     390.733887     390.711182 -9564.450195   390.733887    0.022705   390.711182        0.0    0.022705      -99.977295
2     637.733398     590.711182 -9564.450195   637.733398  247.022217   590.711182        0.0   47.022217       47.022217
3     890.734131     690.710938 -9564.450195   890.734131  300.022949   690.710938        0.0  200.023193      200.022949
4     890.734131     790.710938 -9564.450195   890.734131    1.500000   790.710938        0.0  100.023193      100.022949
5     890.734131     790.711182 -9564.450195   890.734131    1.500000   790.711182        0.0  100.022949        0.022949
6     890.734131     890.711182 -9465.927246   890.734131    1.500000   890.711182        0.0    0.022949       -1.454102
7     892.211182     892.188232 -9365.950195   892.211182    1.500000   892.188232        0.0    0.022949        0.000000
8     893.688232     892.211182 -9267.427490   893.688232    1.500000   892.211182        0.0    1.477051       -0.000244
high_util=False, low_loss=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=409693/2048.[0m
[08/03 16:21:13]  --------------------------------------------------------------------------------
[08/03 16:21:13]  Iteration: 31 (0 solution, 30 counterexamples)
[08/03 16:21:14]  Generator returned sat in 0.919135 secs.
[08/03 16:21:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:21:14]  Improved gap from 0 to 48.4375
[08/03 16:21:15]  Improved number of small numbers from 22 to 101 out of a max of 101
[08/03 16:21:15]  Verifer returned sat in 0.340466 secs.
[08/03 16:21:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t
0    1329.530273     689.279785 -9564.450439  1329.530273    0.045654   689.279785  640.227539   0.022949        0.011475
1    1329.530273     689.291260 -9564.450439  1329.530273    0.011475   689.291260  640.227539   0.011475      -99.988525
2    1529.530273     889.291260 -9564.450439  1529.530273  200.011475   889.291260  640.227539   0.011475        0.011475
3    1633.245850     989.291260 -9564.450439  1633.245850  103.727051   989.291260  640.227539   3.727051        3.727051
4    1734.745850    1084.614990 -9564.450439  1734.745850  105.227051  1084.614990  640.239014   9.891846        5.215576
5    1777.967529    1089.291260 -9512.887939  1777.967529   53.113525  1089.291260  640.239014  48.437256       -0.000244
6    1784.143799    1137.728760 -9461.325439  1784.143799   54.613525  1137.728760  640.239014   6.176025      -42.261475
7    1834.081299    1186.166260 -9409.762939  1834.081299   56.113525  1186.166260  640.239014   7.676025      -40.761475
8    1884.018799    1234.603760 -9409.762939  1884.018799   57.613525  1234.603760  640.239014   9.176025      -90.823975
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=21363/4096.[0m
[08/03 16:21:15]  --------------------------------------------------------------------------------
[08/03 16:21:15]  Iteration: 32 (0 solution, 31 counterexamples)
[08/03 16:21:16]  Generator returned sat in 0.192333 secs.
[08/03 16:21:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:21:16]  Improved gap from 196387/4096 to 48.4375
[08/03 16:21:16]  Improved number of small numbers from 11 to 101 out of a max of 101
[08/03 16:21:16]  Verifer returned sat in 0.624246 secs.
[08/03 16:21:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0     913.806152     -20.538574 -9220.770508   913.806152    0.045410   -20.538574  834.333252  100.011475        0.011475
1     913.806152      79.461426 -9220.770508   913.806152    0.011475    79.461426  834.333252    0.011475      -99.988525
2    1113.805908     276.734131 -9220.770508  1113.805908  200.011230   276.734131  834.333252    2.738525        0.011230
3    1213.794434     375.268555 -9220.770508  1213.794434  102.727051   375.268555  834.333252    4.192627       -0.000244
4    1313.828857     479.461426 -9220.770508  1313.828857  104.227051   479.461426  834.344727    0.022705        0.022705
5    1366.919678     484.137207 -9173.884033  1366.919678   53.113525   484.137207  834.344727   48.437744        0.000000
6    1373.095459     532.574951 -9122.321533  1373.095459   54.613525   532.574951  834.344727    6.175781      -42.261719
7    1423.033203     581.012451 -9070.759033  1423.033203   56.113525   581.012451  834.344727    7.676025      -40.761475
8    1472.970703     629.449951 -9070.759033  1472.970703   57.613525   629.449951  834.344727    9.176025      -90.823975
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=93/4096.[0m
[08/03 16:21:16]  --------------------------------------------------------------------------------
[08/03 16:21:16]  Iteration: 33 (0 solution, 32 counterexamples)
[08/03 16:21:18]  Generator returned sat in 0.984232 secs.
[08/03 16:21:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:21:18]  Improved gap from 2141/4096 to 100
[08/03 16:21:18]  Improved number of small numbers from 41 to 101 out of a max of 101
[08/03 16:21:18]  Verifer returned sat in 0.422504 secs.
[08/03 16:21:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0     814.418213     -19.915039 -9221.394043   814.418213    0.045410   -19.915039  834.333252    0.000000     -100.000000
1     916.872559      82.516602 -9221.394043   916.872559  102.454346    82.516602  834.333252    0.022705      -97.545654
2    1033.997559     199.641846 -9221.394043  1033.997559  117.147705   199.641846  834.333252    0.022461      -80.420654
3    1214.418213     345.971191 -9221.394043  1214.418213  180.443115   345.971191  834.333252   34.113770        0.000000
4    1362.247559     380.084961 -9221.394043  1362.247559  181.943115   380.084961  834.355957  147.806641       47.806641
5    1362.247559     527.868896 -9221.394043  1362.247559  147.784180   527.868896  834.355957    0.022705      -52.193359
6    1511.509033     677.130127 -9221.394043  1511.509033  149.284180   677.130127  834.355957    0.022949       -2.931885
7    1662.270264     780.084961 -9221.394043  1662.270264  150.784180   780.084961  834.378662   47.806641       47.806641
8    1813.463623     780.084961 -9221.394043  1813.463623  199.000000   780.084961  885.572021  147.806641       47.806641
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=24477/512.[0m
[08/03 16:21:19]  --------------------------------------------------------------------------------
[08/03 16:21:19]  Iteration: 34 (0 solution, 33 counterexamples)
[08/03 16:21:23]  Generator returned sat in 3.760981 secs.
[08/03 16:21:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:21:23]  Improved number of small numbers from 37 to 100 out of a max of 100
[08/03 16:21:23]  Verifer returned sat in 0.283534 secs.
[08/03 16:21:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0    1210.466309      80.084961 -9221.394043  1210.466309    0.045410    80.084961  1130.370117    0.011230        0.011230
1    1310.489258     180.084717 -9221.394043  1310.489258  100.034180   180.084717  1130.381592    0.022949        0.022705
2    1410.466309     180.084961 -9221.394043  1410.466309  100.000000   180.084961  1130.381592   99.999756       -0.000244
3    1510.500488     281.352051 -9221.394043  1510.500488  200.033936   281.352051  1130.392822   98.755615        0.022705
4    1611.511963     479.050781 -9221.394043  1611.511963  199.767090   479.050781  1131.404297    1.056885        0.022705
5    1907.921143     580.084961 -9221.394043  1907.921143  297.466064   580.084961  1327.813477    0.022705        0.022705
6    2306.398438     680.084961 -9221.394043  2306.398438  398.500000   680.084961  1626.290771    0.022705        0.022705
7    2703.608643     680.317871 -9221.394043  2703.608643  397.232910   680.317871  1923.500977   99.789795        0.022705
8    2803.585938     780.084961 -9221.394043  2803.585938  199.767090   780.084961  1923.500977  100.000000        0.000000
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=4, buffer=93/4096.[0m
[08/03 16:21:23]  --------------------------------------------------------------------------------
[08/03 16:21:23]  Iteration: 35 (0 solution, 34 counterexamples)
[08/03 16:21:31]  Generator returned sat in 6.541862 secs.
[08/03 16:21:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:21:31]  Improved gap from 0 to 48.4375
[08/03 16:21:31]  Improved number of small numbers from 43 to 101 out of a max of 101
[08/03 16:21:31]  Verifer returned sat in 0.370690 secs.
[08/03 16:21:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t    queue_t  bottle_queue_t
0    1112.580322     -17.801025 -9376.081543  1112.580322    0.045166   -17.801025  1130.370117   0.011230      -97.894043
1    1310.489258     180.104248 -9376.081543  1310.489258  197.920166   180.104248  1130.372559   0.012451        0.012451
2    1410.486572     280.104248 -9376.081543  1410.486572  100.009766   280.104248  1130.372559   0.009766        0.009766
3    1410.486816     280.104248 -9324.519043  1410.486816    0.010010   280.104248  1130.372559   0.010010      -48.427490
4    1558.929443     428.541748 -9324.519043  1558.929443  148.452637   428.541748  1130.375244   0.012451        0.012451
5    1558.929443     428.541748 -9272.956543  1558.929443    0.010000   428.541748  1130.375244   0.012451      -48.425049
6    1632.635742     476.979248 -9221.394043  1632.635742   73.718750   476.979248  1130.375244  25.281250      -23.156250
7    1705.291992     526.458252 -9170.894043  1705.291992   97.937500   526.458252  1130.375244  48.458496        0.000000
8    1705.291992     574.916748 -9170.894043  1705.291992   48.458252   574.916748  1130.375244   0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=51/4096.[0m
[08/03 16:21:31]  --------------------------------------------------------------------------------
[08/03 16:21:31]  Iteration: 36 (0 solution, 35 counterexamples)
[08/03 16:21:33]  Generator returned sat in 1.157122 secs.
[08/03 16:21:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:21:33]  Improved gap from 185/16384 to 100
[08/03 16:21:34]  Improved number of small numbers from 77 to 78 out of a max of 101
[08/03 16:21:34]  Verifer returned sat in 0.707317 secs.
[08/03 16:21:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0    1310.489014     180.104248 -9476.081787  1310.489014    0.044922   180.104248  1030.385010   99.999756       99.999756
1    1310.489014     180.104248 -9476.081787  1310.489014   99.999756   180.104248  1030.385010   99.999756       -0.000244
2    1505.624512     280.104248 -9476.081787  1505.624512  295.135254   280.104248  1030.385010  195.135254       95.135254
3    1505.624512     475.217163 -9476.081787  1505.624512   35.340861   475.217163  1030.385010    0.022339       -4.864746
4    1705.669922     480.104248 -9476.081787  1705.669922  200.067749   480.104248  1030.407593  195.158081       95.158081
5    1705.669922     675.224691 -9476.081787  1705.669922    2.000000   675.224691  1030.407593    0.037638       -4.841919
6    1905.692505     780.104004 -9476.081787  1905.692505  200.060221   780.104004  1030.430176   95.158325       95.158081
7    1905.692505     875.239746 -9476.081787  1905.692505    2.000000   875.239746  1030.430176    0.022583       -4.841919
8    2105.737671     880.104248 -9476.081787  2105.737671  200.067749   880.104248  1030.475342  195.158081       95.158081
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=779535/8192.[0m
[08/03 16:21:34]  --------------------------------------------------------------------------------
[08/03 16:21:34]  Iteration: 37 (0 solution, 36 counterexamples)
[08/03 16:21:37]  Generator returned sat in 2.095021 secs.
[08/03 16:21:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:21:37]  Improved gap from 0 to 0
[08/03 16:21:37]  Improved number of small numbers from 56 to 82 out of a max of 101
[08/03 16:21:37]  Verifer returned sat in 0.847048 secs.
[08/03 16:21:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    1605.717773     475.330078 -9871.307617  1605.717773    0.044678   475.330078  1030.38501  100.002686        0.002686
1    1605.717773     575.330161 -9871.307617  1605.717773  100.002686   575.330161  1030.38501    0.002603      -99.997314
2    2105.727671     675.330078 -9871.307617  2105.727671  500.012500   675.330078  1030.38501  400.012583      300.012583
3    2105.727671     775.330078 -9871.307617  2105.727671    0.376875   775.330078  1030.38501  300.012583      200.012583
4    2105.727671     975.330078 -9871.307617  2105.727671    0.253750   975.330078  1030.38501  100.012583      100.012583
5    2105.727671    1075.330078 -9871.307617  2105.727671    0.010000  1075.330078  1030.38501    0.012583        0.012583
6    2105.727671    1075.330322 -9771.320200  2105.727671    0.010000  1075.330322  1030.38501    0.012339        0.000000
7    2105.727671    1075.342661 -9671.330078  2105.727671    0.010000  1075.342661  1030.38501    0.000000       -0.009878
8    2105.737671    1075.352539 -9671.330078  2105.737671    0.010000  1075.352539  1030.38501    0.000122      -99.999878
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1228861/4096.[0m
[08/03 16:21:38]  --------------------------------------------------------------------------------
[08/03 16:21:38]  Iteration: 38 (0 solution, 37 counterexamples)
[08/03 16:21:42]  Generator returned sat in 3.850804 secs.
[08/03 16:21:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:42]  Improved gap from 1/3600 to 48.4375
[08/03 16:21:43]  Improved number of small numbers from 49 to 101 out of a max of 101
[08/03 16:21:43]  Verifer returned sat in 0.432298 secs.
[08/03 16:21:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    1711.966553     481.582764 -9877.560303  1711.966553    0.044678   481.582764  1030.38501  199.998779       99.998779
1    1711.967773     633.145264 -9877.560303  1711.967773  200.000000   633.145264  1030.38501   48.437500        0.000000
2    1754.182617     723.797607 -9874.442383  1754.182617   90.652344   723.797607  1030.38501    0.000000      -54.667236
3    1808.851318     778.465088 -9822.880127  1808.851318   54.668701   778.465088  1030.38501    0.001221      -48.436279
4    1957.291260     926.894043 -9822.880127  1957.291260  148.441162   926.894043  1030.38623    0.010986        0.002441
5    1957.291260     926.902588 -9771.317627  1957.291260    0.010000   926.902588  1030.38623    0.002441      -48.435059
6    2058.841309     975.340088 -9724.432617  2058.841309  101.552490   975.340088  1030.38623   53.114990        0.000000
7    2104.163818    1028.455078 -9672.870117  2104.163818   98.437500  1028.455078  1030.38623   45.322510       -3.114990
8    2109.621826    1076.892578 -9672.870117  2109.621826   50.780518  1076.892578  1030.38623    2.343018      -97.656982
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=5/2048.[0m
[08/03 16:21:43]  --------------------------------------------------------------------------------
[08/03 16:21:43]  Iteration: 39 (0 solution, 38 counterexamples)
[08/03 16:21:44]  Generator returned sat in 1.099993 secs.
[08/03 16:21:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:45]  Verifer returned unsat in 0.070871 secs.
[08/03 16:21:45]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:45]  --------------------------------------------------------------------------------
[08/03 16:21:45]  Iteration: 40 (1 solution, 38 counterexamples)
[08/03 16:21:45]  Generator returned sat in 0.230229 secs.
[08/03 16:21:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:46]  Verifer returned unsat in 0.079269 secs.
[08/03 16:21:46]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:46]  --------------------------------------------------------------------------------
[08/03 16:21:46]  Iteration: 41 (2 solution, 38 counterexamples)
[08/03 16:21:46]  Generator returned sat in 0.220722 secs.
[08/03 16:21:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:46]  Verifer returned unsat in 0.050895 secs.
[08/03 16:21:46]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:46]  --------------------------------------------------------------------------------
[08/03 16:21:46]  Iteration: 42 (3 solution, 38 counterexamples)
[08/03 16:21:47]  Generator returned sat in 0.290426 secs.
[08/03 16:21:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:47]  Verifer returned unsat in 0.060753 secs.
[08/03 16:21:47]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:47]  --------------------------------------------------------------------------------
[08/03 16:21:47]  Iteration: 43 (4 solution, 38 counterexamples)
[08/03 16:21:48]  Generator returned sat in 0.547350 secs.
[08/03 16:21:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:49]  Improved gap from 183/8192 to 100
[08/03 16:21:49]  Improved number of small numbers from 27 to 101 out of a max of 101
[08/03 16:21:49]  Verifer returned sat in 0.419571 secs.
[08/03 16:21:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    1432.386963     358.602051 -9754.579346  1432.386963    0.044678   358.602051  821.274414  252.510498      152.510986
1    1432.409424     462.602051 -9754.579346  1432.409424  252.532959   462.602051  821.296875  148.510498       52.510986
2    1432.409668     561.602051 -9754.579346  1432.409668  148.510742   561.602051  821.296875   49.510742      -47.488770
3    1632.431885     728.290527 -9754.579346  1632.431885  249.532959   728.290527  821.319336   82.822021       52.510986
4    1732.454102     829.624023 -9754.579346  1732.454102  182.844238   829.624023  821.341553   81.488525       52.510986
5    1832.476562     929.290527 -9754.579346  1832.476562  181.510986   929.290527  821.364014   81.822021       52.510986
6    1932.498779     984.823730 -9754.579346  1932.498779  181.844238   984.823730  821.386230  126.288818       52.510986
7    1932.498779    1058.601807 -9754.579346  1932.498779  126.266602  1058.601807  821.386230   52.510742      -47.489014
8    2132.521240    1158.601807 -9754.579346  2132.521240  252.533203  1158.601807  821.408691  152.510742       52.510986
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=4, buffer=215085/4096.[0m
[08/03 16:21:49]  --------------------------------------------------------------------------------
[08/03 16:21:49]  Iteration: 44 (4 solution, 39 counterexamples)
[08/03 16:21:53]  Generator returned sat in 3.396593 secs.
[08/03 16:21:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:53]  Verifer returned unsat in 0.078415 secs.
[08/03 16:21:53]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:53]  --------------------------------------------------------------------------------
[08/03 16:21:53]  Iteration: 45 (5 solution, 39 counterexamples)
[08/03 16:21:54]  Generator returned sat in 0.228405 secs.
[08/03 16:21:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:54]  Verifer returned unsat in 0.072330 secs.
[08/03 16:21:54]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:54]  --------------------------------------------------------------------------------
[08/03 16:21:54]  Iteration: 46 (6 solution, 39 counterexamples)
[08/03 16:21:55]  Generator returned sat in 0.198302 secs.
[08/03 16:21:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:55]  Verifer returned unsat in 0.061160 secs.
[08/03 16:21:55]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:55]  --------------------------------------------------------------------------------
[08/03 16:21:55]  Iteration: 47 (7 solution, 39 counterexamples)
[08/03 16:21:57]  Generator returned sat in 1.010161 secs.
[08/03 16:21:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:21:57]  Improved gap from 183/16384 to 3.125
[08/03 16:21:57]  Improved number of small numbers from 60 to 101 out of a max of 101
[08/03 16:21:57]  Verifer returned sat in 0.677692 secs.
[08/03 16:21:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2242.645264    1321.303711 -10617.281738  2242.645264    0.044434  1321.303711  821.319336  100.022217      100.022217
1    2242.645508    1421.303711 -10617.281738  2242.645508  100.022461  1421.303711  821.319336    0.022461        0.022461
2    2242.645508    1421.303711 -10617.281738  2242.645508    0.022217  1421.303711  821.319336    0.022461      -99.977539
3    2421.381836    1600.040527 -10617.281738  2421.381836  178.758789  1600.040527  821.319336    0.021973      -21.241211
4    2689.498047    1721.303467 -10617.281738  2689.498047  268.138184  1721.303467  821.341797  146.852783      146.852539
5    2689.498047    1818.178711 -10617.281738  2689.498047    1.000000  1818.178711  821.341797   49.977539       46.852539
6    2689.498047    1821.303711 -10564.134277  2689.498047    1.500000  1821.303711  821.341797   46.852539        0.000000
7    2689.498047    1868.156250 -10467.259277  2689.498047    2.250000  1868.156250  821.341797    0.000000       -3.125000
8    2692.873047    1871.281250 -10467.259033  2692.873047    3.375000  1871.281250  821.341797    0.250000      -99.749756
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=150377/1024.[0m
[08/03 16:21:58]  --------------------------------------------------------------------------------
[08/03 16:21:58]  Iteration: 48 (7 solution, 40 counterexamples)
[08/03 16:22:00]  Generator returned sat in 1.861558 secs.
[08/03 16:22:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:22:01]  Improved gap from 0 to 12.5
[08/03 16:22:01]  Improved number of small numbers from 64 to 101 out of a max of 101
[08/03 16:22:01]  Verifer returned sat in 0.677178 secs.
[08/03 16:22:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2750.973877    1429.610107 -10617.281982  2750.973877    0.044434  1429.610107  821.341797  500.021973      500.021973
1    2750.974121    1429.610107 -10617.281982  2750.974121  500.022217  1429.610107  821.341797  500.022217      400.022217
2    2750.974121    1529.610107 -10617.281982  2750.974121    0.022217  1529.610107  821.341797  400.022217      300.022217
3    2750.974121    1629.610107 -10617.281982  2750.974121  400.000000  1629.610107  821.341797  300.022217      200.022217
4    2750.974121    1804.654297 -10617.281982  2750.974121  200.000000  1804.654297  821.341797  124.978027      100.022217
5    2750.974121    1829.610107 -10617.281982  2750.974121  100.000000  1829.610107  821.341797  100.022217        0.022217
6    2750.974121    1929.610107 -10529.781982  2750.974121   50.000000  1929.610107  821.341797    0.022217      -12.477783
7    2775.951904    1942.132080 -10442.303955  2775.951904   25.000000  1942.132080  821.341797   12.478027       -0.021973
8    2775.973877    1954.632080 -10442.303955  2775.973877   12.500000  1954.632080  821.341797    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=1638581/4096.[0m
[08/03 16:22:01]  --------------------------------------------------------------------------------
[08/03 16:22:01]  Iteration: 49 (7 solution, 41 counterexamples)
[08/03 16:22:07]  Generator returned sat in 5.718442 secs.
[08/03 16:22:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:08]  Improved gap from 1/48 to 0
[08/03 16:22:08]  Improved number of small numbers from 81 to 89 out of a max of 101
[08/03 16:22:08]  Verifer returned sat in 0.672665 secs.
[08/03 16:22:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2298.451660    1378.401611 -10617.281982  2298.451660    0.044434  1378.401611  820.008464  100.041585      100.041423
1    2298.451660    1478.360107 -10617.281982  2298.451660  100.000000  1478.360107  820.008464    0.083089        0.041423
2    2298.451660    1478.401774 -10617.281982  2298.451660    0.041748  1478.401774  820.008464    0.041423      -99.958577
3    2500.743571    1678.401774 -10617.281982  2500.743571  202.333333  1678.401774  822.258464    0.083333        0.083333
4    2601.326904    1728.609863 -10617.281982  2601.326904  100.666667  1728.609863  822.841797   49.875244        0.083333
5    2601.326904    1778.443441 -10517.365316  2601.326904   49.833333  1778.443441  822.841797    0.041667        0.000000
6    2701.451904    1828.943604 -10517.365316  2701.451904  100.166667  1828.943604  822.883464   49.624837        0.083333
7    2701.451904    1878.485107 -10417.448730  2701.451904   49.583333  1878.485107  822.883464    0.083333       -0.000081
8    2801.035238    1878.568604 -10417.448486  2801.035238   99.666667  1878.568604  822.883464   99.583171       -0.416504
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=1/12.[0m
[08/03 16:22:08]  --------------------------------------------------------------------------------
[08/03 16:22:08]  Iteration: 50 (7 solution, 42 counterexamples)
[08/03 16:22:12]  Generator returned sat in 2.715400 secs.
[08/03 16:22:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:12]  Improved gap from 85/8192 to 48.4375
[08/03 16:22:12]  Improved number of small numbers from 37 to 101 out of a max of 101
[08/03 16:22:12]  Verifer returned sat in 0.459060 secs.
[08/03 16:22:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2298.451660    1378.359863 -10617.281982  2298.451660    0.043945  1378.359863  820.069580  100.022217      100.021973
1    2298.451660    1478.359863 -10617.281982  2298.451660  100.011230  1478.359863  820.069580    0.022217        0.021973
2    2298.451660    1478.360107 -10617.281982  2298.451660    0.010986  1478.360107  820.069580    0.021973      -99.978027
3    2500.496094    1678.359863 -10617.281982  2500.496094  202.066406  1678.359863  822.114014    0.022217        0.021973
4    2600.507080    1778.359863 -10617.281982  2600.507080  100.033203  1778.359863  822.125000    0.022217        0.021973
5    2649.501465    1778.360107 -10566.787354  2649.501465   49.016602  1778.360107  822.125000   49.016357       -0.489014
6    2650.001709    1827.865479 -10516.792969  2650.001709   49.516602  1827.865479  822.125000    0.011230      -49.994385
7    2700.007080    1877.871094 -10465.230713  2700.007080   50.016602  1877.871094  822.125000    0.010986      -48.426758
8    2750.512695    1926.308838 -10413.668213  2750.512695   50.516602  1926.308838  822.125000    2.078857      -46.358643
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=45/2048.[0m
[08/03 16:22:12]  --------------------------------------------------------------------------------
[08/03 16:22:12]  Iteration: 51 (7 solution, 43 counterexamples)
[08/03 16:22:13]  Generator returned sat in 0.363691 secs.
[08/03 16:22:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:14]  Improved gap from 775/16 to 48.4375
[08/03 16:22:14]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/03 16:22:14]  Verifer returned sat in 0.349681 secs.
[08/03 16:22:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2336.116455    1303.393066 -10617.281982  2336.116455    0.043945  1303.393066  857.734375  174.989014      100.021973
1    2336.116455    1378.360107 -10617.281982  2336.116455    0.010986  1378.360107  857.734375  100.021973        0.021973
2    2445.502441    1575.768066 -10617.281982  2445.502441  209.407959  1575.768066  867.120361    2.614014        0.021973
3    2545.491455    1678.360107 -10617.281982  2545.491455  102.603027  1678.360107  867.120361    0.010986        0.010986
4    2648.583496    1773.683594 -10617.281982  2648.583496  103.103027  1773.683594  870.201416    4.698486        0.021973
5    2695.436523    1778.360107 -10565.719482  2695.436523   51.551514  1778.360107  870.201416   46.875000       -1.562500
6    2700.613037    1826.797607 -10514.156982  2700.613037   52.051514  1826.797607  870.201416    3.614014      -44.823486
7    2749.550537    1875.235107 -10462.594482  2749.550537   52.551514  1875.235107  870.201416    4.114014      -44.323486
8    2798.488037    1923.672607 -10462.594482  2798.488037   53.051514  1923.672607  870.201416    4.614014      -95.385986
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=45/2048.[0m
[08/03 16:22:14]  --------------------------------------------------------------------------------
[08/03 16:22:14]  Iteration: 52 (7 solution, 44 counterexamples)
[08/03 16:22:15]  Generator returned sat in 0.708301 secs.
[08/03 16:22:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:16]  Verifer returned unsat in 0.076877 secs.
[08/03 16:22:16]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:16]  --------------------------------------------------------------------------------
[08/03 16:22:16]  Iteration: 53 (8 solution, 44 counterexamples)
[08/03 16:22:17]  Generator returned sat in 0.436527 secs.
[08/03 16:22:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:17]  Improved gap from 1/400 to 1.5625
[08/03 16:22:17]  Improved number of small numbers from 54 to 72 out of a max of 101
[08/03 16:22:17]  Verifer returned sat in 0.801645 secs.
[08/03 16:22:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2336.116211    1164.372803 -10659.469727  2336.116211    0.043457  1164.372803  870.181152  301.562256      201.562275
1    2336.116211    1264.372803 -10659.469727  2336.116211    0.010742  1264.372803  870.181152  201.562256      101.562275
2    2436.126455    1394.481689 -10659.469727  2436.126455  301.572500  1394.481689  870.191172  171.453594      101.562500
3    2436.126455    1508.265005 -10659.469727  2436.126455  171.453519  1508.265005  870.191172   57.670278        1.562500
4    2636.136455    1664.372559 -10659.469727  2636.136455  257.680278  1664.372559  870.201172  101.562725      101.562500
5    2636.136455    1762.810059 -10659.469727  2636.136455    0.010000  1762.810059  870.201172    3.125225        1.562500
6    2636.136455    1764.372783 -10561.032227  2636.136455    0.515000  1764.372783  870.201172    1.562500        0.000000
7    2636.136455    1765.935283 -10462.594727  2636.136455    1.272500  1765.935283  870.201172    0.000000       -1.562500
8    2638.545205    1767.497803 -10462.594727  2638.545205    2.408750  1767.497803  870.201172    0.846230      -99.153750
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1625/16.[0m
[08/03 16:22:18]  --------------------------------------------------------------------------------
[08/03 16:22:18]  Iteration: 54 (8 solution, 45 counterexamples)
[08/03 16:22:20]  Generator returned sat in 1.387254 secs.
[08/03 16:22:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:20]  Improved gap from 11/2048 to 100
[08/03 16:22:20]  Improved number of small numbers from 37 to 101 out of a max of 101
[08/03 16:22:20]  Verifer returned sat in 0.329551 secs.
[08/03 16:22:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2308.523193    1338.331787 -10562.458984  2308.523193    0.043213  1338.331787  870.191162  100.000244      100.000244
1    2308.523193    1338.331787 -10562.458984  2308.523193    0.010742  1338.331787  870.191162  100.000244        0.000244
2    2507.039062    1441.310303 -10562.458984  2507.039062  298.516113  1441.310303  870.191162  195.537598       98.516113
3    2507.039062    1636.842773 -10562.458984  2507.039062  103.489014  1636.842773  870.191162    0.005127       -1.483887
4    2708.533936    1638.331787 -10562.458984  2708.533936  201.500000  1638.331787  870.196777  200.005371      100.005371
5    2708.533936    1838.331787 -10562.458984  2708.533936    2.000000  1838.331787  870.196777    0.005371        0.005371
6    2908.539307    1838.331787 -10562.458984  2908.539307  200.010742  1838.331787  870.202148  200.005371      100.005371
7    2908.539307    2038.331787 -10562.458984  2908.539307    2.000000  2038.331787  870.202148    0.005371        0.005371
8    3110.033936    2038.331787 -10562.458984  3110.033936  201.500000  2038.331787  871.696777  200.005371      100.005371
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=204811/2048.[0m
[08/03 16:22:20]  --------------------------------------------------------------------------------
[08/03 16:22:20]  Iteration: 55 (8 solution, 46 counterexamples)
[08/03 16:22:22]  Generator returned sat in 0.782661 secs.
[08/03 16:22:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:22]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/03 16:22:22]  Verifer returned sat in 0.207753 secs.
[08/03 16:22:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2308.523193    1338.331787 -10562.458984  2308.523193    0.043213  1338.331787  870.191162  100.000244      100.000244
1    2308.523193    1338.331787 -10562.458984  2308.523193    0.010742  1338.331787  870.191162  100.000244        0.000244
2    2507.286621    1440.815674 -10562.458984  2507.286621  298.763672  1440.815674  870.191162  196.279785       98.763672
3    2507.286621    1637.092773 -10562.458984  2507.286621  102.739014  1637.092773  870.191162    0.002686       -1.236328
4    2708.533936    1638.331787 -10562.458984  2708.533936  201.250000  1638.331787  870.196777  200.005371      100.005371
5    2708.533936    1838.331787 -10562.458984  2708.533936    1.500000  1838.331787  870.196777    0.005371        0.005371
6    2908.536621    1838.331787 -10562.458984  2908.536621  200.008057  1838.331787  870.199463  200.005371      100.005371
7    2908.536621    2038.331787 -10562.458984  2908.536621    1.500000  2038.331787  870.199463    0.005371        0.005371
8    3109.781250    2038.331787 -10562.458984  3109.781250  201.250000  2038.331787  871.444092  200.005371      100.005371
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=204811/2048.[0m
[08/03 16:22:22]  --------------------------------------------------------------------------------
[08/03 16:22:22]  Iteration: 56 (8 solution, 47 counterexamples)
[08/03 16:22:26]  Generator returned sat in 2.649480 secs.
[08/03 16:22:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:26]  Verifer returned unsat in 0.106810 secs.
[08/03 16:22:26]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:26]  --------------------------------------------------------------------------------
[08/03 16:22:26]  Iteration: 57 (9 solution, 47 counterexamples)
[08/03 16:22:27]  Generator returned sat in 0.350704 secs.
[08/03 16:22:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:27]  Verifer returned unsat in 0.056042 secs.
[08/03 16:22:27]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:27]  --------------------------------------------------------------------------------
[08/03 16:22:27]  Iteration: 58 (10 solution, 47 counterexamples)
[08/03 16:22:28]  Generator returned sat in 0.339107 secs.
[08/03 16:22:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:28]  Verifer returned unsat in 0.051904 secs.
[08/03 16:22:28]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:28]  --------------------------------------------------------------------------------
[08/03 16:22:28]  Iteration: 59 (11 solution, 47 counterexamples)
[08/03 16:22:29]  Generator returned sat in 0.293050 secs.
[08/03 16:22:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:29]  Verifer returned unsat in 0.058747 secs.
[08/03 16:22:29]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:29]  --------------------------------------------------------------------------------
[08/03 16:22:29]  Iteration: 60 (12 solution, 47 counterexamples)
[08/03 16:22:31]  Generator returned sat in 0.784827 secs.
[08/03 16:22:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:22:31]  Improved gap from 11/4096 to 6.25
[08/03 16:22:31]  Improved number of small numbers from 64 to 101 out of a max of 101
[08/03 16:22:31]  Verifer returned sat in 0.332415 secs.
[08/03 16:22:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    1958.036133    1858.030762 -10562.458984  1958.036133    0.042969  1858.030762   0.000000  100.005371        0.005371
1    1958.036133    1958.030762 -10562.458984  1958.036133    0.010742  1958.030762   0.000000    0.005371      -99.994629
2    2264.275146    2058.030762 -10562.458984  2264.275146  306.244385  2058.030762   0.000000  206.244385      106.244385
3    2264.275146    2256.046875 -10562.458984  2264.275146  206.239014  2256.046875   0.000000    8.228271        6.244385
4    2464.285889    2358.030518 -10562.458984  2464.285889  208.239014  2358.030518   0.005127  106.250244      106.250000
5    2464.285889    2358.030762 -10562.458984  2464.285889    0.500000  2358.030762   0.005127  106.250000        6.250000
6    2464.285889    2458.030762 -10468.708984  2464.285889    2.500000  2458.030762   0.005127    6.250000        0.000000
7    2464.285889    2464.280762 -10375.208984  2464.285889    4.500000  2464.280762   0.005127    0.000000       -6.500000
8    2470.785889    2470.780762 -10281.459229  2470.785889    6.500000  2470.780762   0.005127    0.000000       -6.250244
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=425/4.[0m
[08/03 16:22:31]  --------------------------------------------------------------------------------
[08/03 16:22:31]  Iteration: 61 (12 solution, 48 counterexamples)
[08/03 16:22:35]  Generator returned sat in 3.167299 secs.
[08/03 16:22:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:35]  Improved gap from 11/4096 to 0
[08/03 16:22:36]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/03 16:22:36]  Verifer returned sat in 0.296157 secs.
[08/03 16:22:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2210.041260    2110.038574 -10662.456299  2210.041260    0.042969  2110.038574   0.000000  100.002686        0.002686
1    2210.041260    2210.038574 -10662.456299  2210.041260    0.010742  2210.038574   0.000000    0.002686      -99.997314
2    2310.041260    2310.038574 -10562.458984  2310.041260  100.002686  2310.038574   0.000000    0.002686        0.000000
3    2361.043945    2358.541260 -10513.461670  2361.043945   51.005371  2358.541260   0.000000    2.502686        0.000000
4    2461.052002    2411.291260 -10513.461670  2461.052002  102.510742  2411.291260   0.002686   49.758057        0.005371
5    2461.052002    2461.046631 -10413.467041  2461.052002   49.755371  2461.046631   0.002686    0.002686        0.000000
6    2561.060059    2461.049316 -10413.467041  2561.060059  100.010742  2461.049316   0.005371  100.005371        0.005371
7    2561.060059    2561.049316 -10313.706299  2561.060059   48.505371  2561.049316   0.005371    0.005371       -0.233887
8    2658.565430    2561.288574 -10313.706299  2658.565430   97.510742  2561.288574   0.005371   97.271484       -2.728516
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=11/2048.[0m
[08/03 16:22:36]  --------------------------------------------------------------------------------
[08/03 16:22:36]  Iteration: 62 (12 solution, 49 counterexamples)
[08/03 16:22:39]  Generator returned sat in 2.324559 secs.
[08/03 16:22:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:22:39]  Improved gap from 11/16384 to 0
[08/03 16:22:40]  Improved number of small numbers from 68 to 101 out of a max of 101
[08/03 16:22:40]  Verifer returned sat in 0.658700 secs.
[08/03 16:22:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t
0    2289.583496    2289.562012 -10662.456543  2289.583496    0.042725  2289.562012    0.000000   0.021484        0.021484
1    2289.583496    2289.562256 -10562.478027  2289.583496    0.010498  2289.562256    0.000000   0.021240        0.000000
2    2289.594238    2289.583496 -10462.488770  2289.594238    0.031982  2289.583496    0.000000   0.010742        0.000000
3    2493.669434    2389.594238 -10462.488770  2493.669434  204.085938  2389.594238  104.053711   0.021484        0.021484
4    2594.690918    2440.083740 -10462.488770  2594.690918  101.042969  2440.083740  105.075195  49.531982        0.021484
5    2594.690918    2489.605225 -10362.510498  2594.690918   49.521484  2489.605225  105.075195   0.010498       -0.000244
6    2694.723389    2540.604980 -10362.510498  2694.723389  100.042969  2540.604980  105.085938  49.032471        0.021484
7    2694.723389    2589.615967 -10262.967285  2694.723389   49.021484  2589.615967  105.085938   0.021484       -0.435303
8    2793.744873    2590.072998 -10262.967285  2793.744873   99.042969  2590.072998  105.085938  98.585938       -1.413818
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=11/512.[0m
[08/03 16:22:40]  --------------------------------------------------------------------------------
[08/03 16:22:40]  Iteration: 63 (12 solution, 50 counterexamples)
[08/03 16:22:43]  Generator returned sat in 2.316628 secs.
[08/03 16:22:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:22:43]  Improved gap from 175/16384 to 23.4375
[08/03 16:22:44]  Improved number of small numbers from 38 to 80 out of a max of 101
[08/03 16:22:44]  Verifer returned sat in 0.866034 secs.
[08/03 16:22:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0    1311.772705    1311.751221 -9684.656494  1311.772705    0.042480  1311.751221     0.000000    0.021484        0.010742
1    1311.772705    1311.761963 -9608.094116  1311.772705    0.010742  1311.761963     0.000000    0.010742      -23.426880
2    1435.210205    1435.199585 -9608.094116  1435.210205  123.448242  1435.199585     0.000000    0.010620        0.010620
3    2208.541382    1535.199585 -9608.094116  2208.541382  773.341797  1535.199585   673.320435    0.021362        0.021362
4    2594.690918    1635.199463 -9608.094116  2594.690918  386.170898  1635.199463   959.469971    0.021484        0.021362
5    2787.254883    1635.199707 -9608.094116  2787.254883  192.585449  1635.199707  1052.033936  100.021240        0.021362
6    2787.254883    1735.199585 -9531.531738  2787.254883   95.792725  1735.199585  1052.033936    0.021362      -23.416260
7    2836.129883    1758.637207 -9456.990479  2836.129883   48.896362  1758.637207  1052.033936   25.458740        0.000000
8    2836.129883    1784.095947 -9456.990479  2836.129883   25.448181  1784.095947  1052.033936    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=175/8192.[0m
[08/03 16:22:44]  --------------------------------------------------------------------------------
[08/03 16:22:44]  Iteration: 64 (12 solution, 51 counterexamples)
[08/03 16:22:49]  Generator returned sat in 3.807675 secs.
[08/03 16:22:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:22:49]  Improved gap from 87/8192 to 0
[08/03 16:22:49]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/03 16:22:49]  Verifer returned sat in 0.324167 secs.
[08/03 16:22:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2193.158936    2093.148438 -9684.656494  2193.158936    0.042236  2093.148438   0.000000  100.010498        0.010498
1    2193.158936    2193.148438 -9684.656494  2193.158936    0.010742  2193.148438   0.000000    0.010498      -99.989502
2    2393.159180    2393.148193 -9684.656494  2393.159180  200.010742  2393.148193   0.000000    0.010986        0.010742
3    2494.180176    2493.148438 -9684.656494  2494.180176  101.031982  2493.148438   1.010498    0.021240        0.021240
4    2594.690918    2593.148193 -9684.656494  2594.690918  100.531982  2593.148193   1.521240    0.021484        0.021240
5    2694.701416    2641.626953 -9684.656494  2694.701416  100.031982  2641.626953   1.531738   51.542725        0.021240
6    2742.690674    2741.148438 -9632.666992  2742.690674   99.531982  2741.148438   1.531738    0.010498        0.000000
7    2743.680176    2742.137939 -9534.645752  2743.680176    1.000000  2742.137939   1.531738    0.010498       -0.989258
8    2744.669678    2743.137695 -9434.645996  2744.669678    1.000000  2743.137695   1.531738    0.000244        0.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=87/4096.[0m
[08/03 16:22:49]  --------------------------------------------------------------------------------
[08/03 16:22:49]  Iteration: 65 (12 solution, 52 counterexamples)
[08/03 16:22:53]  Generator returned sat in 3.254222 secs.
[08/03 16:22:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:22:54]  Improved gap from 173/16384 to 100
[08/03 16:22:54]  Improved number of small numbers from 38 to 101 out of a max of 101
[08/03 16:22:54]  Verifer returned sat in 0.385842 secs.
[08/03 16:22:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    1993.596436    1793.601562 -9434.645996  1993.596436    0.042236  1793.601562   0.000000  199.994873       99.995117
1    1993.601318    1893.601318 -9434.645996  1993.601318  199.999756  1893.601318   0.000000  100.000000        0.000000
2    2192.133057    1993.612061 -9434.645996  2192.133057  298.531738  1993.612061   0.000000  198.520996       98.531738
3    2192.133057    2192.127930 -9434.645996  2192.133057    0.505371  2192.127930   0.000000    0.005127       -1.468262
4    2392.143799    2193.601318 -9434.645996  2392.143799  200.015869  2193.601318   0.005371  198.537109       98.537109
5    2392.143799    2392.133057 -9434.645996  2392.143799    0.500000  2392.133057   0.005371    0.005371       -1.462891
6    2592.148926    2393.601562 -9434.645996  2592.148926  200.010498  2393.601562   0.010498  198.536865       98.537109
7    2592.148926    2592.133057 -9434.645996  2592.148926    0.500000  2592.133057   0.010498    0.005371       -1.462891
8    2792.159424    2693.601318 -9434.645996  2792.159424  200.015869  2693.601318   0.020996   98.537109       98.537109
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=50451/512.[0m
[08/03 16:22:54]  --------------------------------------------------------------------------------
[08/03 16:22:54]  Iteration: 66 (12 solution, 53 counterexamples)
[08/03 16:23:01]  Generator returned sat in 6.377942 secs.
[08/03 16:23:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:01]  Verifer returned unsat in 0.142675 secs.
[08/03 16:23:01]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:01]  --------------------------------------------------------------------------------
[08/03 16:23:01]  Iteration: 67 (13 solution, 53 counterexamples)
[08/03 16:23:03]  Generator returned sat in 0.489554 secs.
[08/03 16:23:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:03]  Verifer returned unsat in 0.075691 secs.
[08/03 16:23:03]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:03]  --------------------------------------------------------------------------------
[08/03 16:23:03]  Iteration: 68 (14 solution, 53 counterexamples)
[08/03 16:23:04]  Generator returned sat in 0.561219 secs.
[08/03 16:23:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:04]  Verifer returned unsat in 0.054511 secs.
[08/03 16:23:04]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:04]  --------------------------------------------------------------------------------
[08/03 16:23:04]  Iteration: 69 (15 solution, 53 counterexamples)
[08/03 16:23:05]  Generator returned sat in 0.467019 secs.
[08/03 16:23:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:06]  Verifer returned unsat in 0.067195 secs.
[08/03 16:23:06]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:06]  --------------------------------------------------------------------------------
[08/03 16:23:06]  Iteration: 70 (16 solution, 53 counterexamples)
[08/03 16:23:07]  Generator returned sat in 0.506922 secs.
[08/03 16:23:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:07]  Verifer returned unsat in 0.086124 secs.
[08/03 16:23:07]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:07]  --------------------------------------------------------------------------------
[08/03 16:23:07]  Iteration: 71 (17 solution, 53 counterexamples)
[08/03 16:23:08]  Generator returned sat in 0.466518 secs.
[08/03 16:23:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:08]  Verifer returned unsat in 0.076144 secs.
[08/03 16:23:08]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:23:08]  --------------------------------------------------------------------------------
[08/03 16:23:08]  Iteration: 72 (18 solution, 53 counterexamples)
[08/03 16:23:10]  Generator returned sat in 0.574857 secs.
[08/03 16:23:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:10]  Verifer returned unsat in 0.055471 secs.
[08/03 16:23:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:10]  --------------------------------------------------------------------------------
[08/03 16:23:10]  Iteration: 73 (19 solution, 53 counterexamples)
[08/03 16:23:11]  Generator returned sat in 0.501635 secs.
[08/03 16:23:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:11]  Verifer returned unsat in 0.046522 secs.
[08/03 16:23:11]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:11]  --------------------------------------------------------------------------------
[08/03 16:23:11]  Iteration: 74 (20 solution, 53 counterexamples)
[08/03 16:23:12]  Generator returned sat in 0.455209 secs.
[08/03 16:23:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:23:13]  Verifer returned unsat in 0.084358 secs.
[08/03 16:23:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:23:13]  --------------------------------------------------------------------------------
[08/03 16:23:13]  Iteration: 75 (21 solution, 53 counterexamples)
[08/03 16:23:14]  Generator returned sat in 1.074647 secs.
[08/03 16:23:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:15]  Verifer returned unsat in 0.079199 secs.
[08/03 16:23:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:15]  --------------------------------------------------------------------------------
[08/03 16:23:15]  Iteration: 76 (22 solution, 53 counterexamples)
[08/03 16:23:16]  Generator returned sat in 0.497253 secs.
[08/03 16:23:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:23:16]  Verifer returned unsat in 0.076957 secs.
[08/03 16:23:16]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:23:16]  --------------------------------------------------------------------------------
[08/03 16:23:16]  Iteration: 77 (23 solution, 53 counterexamples)
[08/03 16:23:17]  Generator returned sat in 0.503723 secs.
[08/03 16:23:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:17]  Verifer returned unsat in 0.066977 secs.
[08/03 16:23:17]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:17]  --------------------------------------------------------------------------------
[08/03 16:23:17]  Iteration: 78 (24 solution, 53 counterexamples)
[08/03 16:23:19]  Generator returned sat in 0.589645 secs.
[08/03 16:23:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:19]  Verifer returned unsat in 0.097304 secs.
[08/03 16:23:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:19]  --------------------------------------------------------------------------------
[08/03 16:23:19]  Iteration: 79 (25 solution, 53 counterexamples)
[08/03 16:23:20]  Generator returned sat in 0.569250 secs.
[08/03 16:23:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:20]  Verifer returned unsat in 0.073249 secs.
[08/03 16:23:20]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:20]  --------------------------------------------------------------------------------
[08/03 16:23:20]  Iteration: 80 (26 solution, 53 counterexamples)
[08/03 16:23:22]  Generator returned sat in 0.561627 secs.
[08/03 16:23:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:22]  Verifer returned unsat in 0.103503 secs.
[08/03 16:23:22]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:22]  --------------------------------------------------------------------------------
[08/03 16:23:22]  Iteration: 81 (27 solution, 53 counterexamples)
[08/03 16:23:23]  Generator returned sat in 0.510399 secs.
[08/03 16:23:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:23]  Verifer returned unsat in 0.063771 secs.
[08/03 16:23:23]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:23]  --------------------------------------------------------------------------------
[08/03 16:23:23]  Iteration: 82 (28 solution, 53 counterexamples)
[08/03 16:23:24]  Generator returned sat in 0.473699 secs.
[08/03 16:23:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:24]  Verifer returned unsat in 0.061033 secs.
[08/03 16:23:24]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:23:24]  --------------------------------------------------------------------------------
[08/03 16:23:24]  Iteration: 83 (29 solution, 53 counterexamples)
[08/03 16:23:26]  Generator returned sat in 0.625345 secs.
[08/03 16:23:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:26]  Verifer returned unsat in 0.079408 secs.
[08/03 16:23:26]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:26]  --------------------------------------------------------------------------------
[08/03 16:23:26]  Iteration: 84 (30 solution, 53 counterexamples)
[08/03 16:23:27]  Generator returned sat in 0.539326 secs.
[08/03 16:23:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:27]  Verifer returned unsat in 0.059717 secs.
[08/03 16:23:27]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:27]  --------------------------------------------------------------------------------
[08/03 16:23:27]  Iteration: 85 (31 solution, 53 counterexamples)
[08/03 16:23:29]  Generator returned sat in 0.513587 secs.
[08/03 16:23:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:29]  Verifer returned unsat in 0.054544 secs.
[08/03 16:23:29]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:29]  --------------------------------------------------------------------------------
[08/03 16:23:29]  Iteration: 86 (32 solution, 53 counterexamples)
[08/03 16:23:30]  Generator returned sat in 0.474827 secs.
[08/03 16:23:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:30]  Verifer returned unsat in 0.061530 secs.
[08/03 16:23:30]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:30]  --------------------------------------------------------------------------------
[08/03 16:23:30]  Iteration: 87 (33 solution, 53 counterexamples)
[08/03 16:23:31]  Generator returned sat in 0.505730 secs.
[08/03 16:23:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:23:32]  Verifer returned unsat in 0.075758 secs.
[08/03 16:23:32]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:23:32]  --------------------------------------------------------------------------------
[08/03 16:23:32]  Iteration: 88 (34 solution, 53 counterexamples)
[08/03 16:23:33]  Generator returned sat in 0.429788 secs.
[08/03 16:23:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:33]  Verifer returned unsat in 0.065710 secs.
[08/03 16:23:33]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:33]  --------------------------------------------------------------------------------
[08/03 16:23:33]  Iteration: 89 (35 solution, 53 counterexamples)
[08/03 16:23:35]  Generator returned sat in 1.860276 secs.
[08/03 16:23:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:23:36]  Improved gap from 0 to 18.75
[08/03 16:23:37]  Improved number of small numbers from 26 to 40 out of a max of 101
[08/03 16:23:37]  Verifer returned sat in 1.443375 secs.
[08/03 16:23:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3501.625244    3401.625244 -10509.294271  3501.625244    0.042236  3401.625244   0.000000  100.000000       99.999770
1    3501.625244    3401.625475 -10509.294271  3501.625244   99.999756  3401.625475   0.000000   99.999770       -0.000230
2    3620.396593    3601.625475 -10509.294271  3620.396593  218.771118  3601.625475   0.021118   18.750000       18.750000
3    3734.854356    3701.625475 -10509.294271  3734.854356  133.207764  3701.625475  14.478882   18.750000       18.750000
4    3848.312120    3789.146593 -10509.294271  3848.312120  132.207764  3789.146593  27.936646   31.228882       18.750000
5    3948.291002    3852.771484 -10509.294271  3948.291002  131.207764  3852.771484  27.936646   67.582872       18.728882
6    3948.312012    3901.625475 -10428.044271  3948.312012   67.603882  3901.625475  27.936646   18.749892       -0.000108
7    3965.364061    3920.375475 -10346.794271  3965.364061   35.801941  3920.375475  27.936646   17.051941       -1.698059
8    3968.213091    3939.125488 -10265.544434  3968.213091   19.900970  3939.125488  27.936646    1.150957      -17.599192
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=75/4.[0m
[08/03 16:23:37]  --------------------------------------------------------------------------------
[08/03 16:23:37]  Iteration: 90 (35 solution, 54 counterexamples)
[08/03 16:23:44]  Generator returned sat in 6.102123 secs.
[08/03 16:23:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:44]  Improved gap from 0 to 17.1875
[08/03 16:23:45]  Improved number of small numbers from 50 to 101 out of a max of 101
[08/03 16:23:45]  Verifer returned sat in 0.478592 secs.
[08/03 16:23:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3553.084961    3320.688721 -10428.357666  3553.084961    0.041992  3320.688721   0.000000  232.396240      232.395996
1    3553.084961    3420.688721 -10428.357666  3553.084961    0.020996  3420.688721   0.000000  132.396240      132.395996
2    3553.084961    3520.688721 -10428.357666  3553.084961    0.020996  3520.688721   0.000000   32.396240       32.395996
3    3766.188721    3608.084961 -10428.357666  3766.188721  245.500000  3608.084961  13.082764  145.020996      132.416992
4    3866.167725    3720.293701 -10428.357666  3866.167725  245.000000  3720.293701  13.082764  132.791260      132.395996
5    3866.167725    3790.313965 -10428.357666  3866.167725  123.500000  3790.313965  13.082764   62.770996       32.395996
6    3866.167725    3820.688965 -10360.753662  3866.167725   62.750000  3820.688965  13.082764   32.395996        0.000000
7    3866.167725    3853.084961 -10277.941162  3866.167725   32.375000  3853.084961  13.082764    0.000000      -17.187500
8    3883.355225    3870.272461 -10195.128662  3883.355225   17.187500  3870.272461  13.082764    0.000000      -17.187500
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=135595/1024.[0m
[08/03 16:23:45]  --------------------------------------------------------------------------------
[08/03 16:23:45]  Iteration: 91 (35 solution, 55 counterexamples)
[08/03 16:23:48]  Generator returned sat in 1.892601 secs.
[08/03 16:23:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:48]  Improved gap from 0 to 100
[08/03 16:23:48]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/03 16:23:48]  Verifer returned sat in 0.348349 secs.
[08/03 16:23:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    3567.162598    3467.157227 -10574.825928  3567.162598    0.041748  3467.157227    0.000000  100.005371      100.005371
1    3567.162598    3534.141602 -10574.825928  3567.162598    0.020752  3534.141602    0.000000   33.020996        0.005371
2    3567.162598    3567.157227 -10574.825928  3567.162598    0.005127  3567.157227    0.000000    0.005371      -99.994629
3    3866.173096    3733.167480 -10574.825928  3866.173096  299.015869  3733.167480   99.005371   34.000244        0.010498
4    3966.177979    3867.141602 -10574.825928  3966.177979  134.005127  3867.141602   99.010254    0.026123        0.010498
5    4133.651855    3899.834473 -10574.825928  4133.651855  167.500000  3899.834473  166.484131   67.333252        0.010498
6    4233.657227    4067.157227 -10574.825928  4233.657227  167.338623  4067.157227  166.489502    0.010498        0.010498
7    4401.641602    4133.151855 -10574.825928  4401.641602  167.994873  4133.151855  234.473877   34.015869        0.010498
8    4501.630859    4167.157227 -10574.825928  4501.630859  134.005127  4167.157227  234.473877   99.999756       -0.000244
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=4, buffer=43/4096.[0m
[08/03 16:23:48]  --------------------------------------------------------------------------------
[08/03 16:23:48]  Iteration: 92 (35 solution, 56 counterexamples)
[08/03 16:23:50]  Generator returned sat in 0.612994 secs.
[08/03 16:23:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:50]  Improved number of small numbers from 69 to 100 out of a max of 100
[08/03 16:23:50]  Verifer returned sat in 0.217435 secs.
[08/03 16:23:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    3567.162598    3437.146484 -10574.826172  3567.162598    0.041748  3437.146484    0.000000  130.016113      100.005371
1    3567.162598    3534.141357 -10574.826172  3567.162598    0.020508  3534.141357    0.000000   33.021240        0.005371
2    3567.162598    3567.157227 -10574.826172  3567.162598    0.005127  3567.157227    0.000000    0.005371      -99.994629
3    3866.175537    3723.495605 -10574.826172  3866.175537  299.018311  3723.495605   99.007812   43.672119        0.010498
4    3966.177979    3837.141357 -10574.826172  3966.177979  143.674561  3837.141357   99.010254   30.026367        0.010498
5    4088.151611    3900.166016 -10574.826172  4088.151611  152.000000  3900.166016  120.983887   67.001709        0.010498
6    4188.154297    4067.157227 -10574.826172  4188.154297  167.004395  4067.157227  120.986572    0.010498        0.010498
7    4360.474609    4123.490479 -10574.826172  4360.474609  172.330811  4123.490479  193.306885   43.677246        0.010498
8    4460.471924    4167.157227 -10574.826172  4460.471924  143.674561  4167.157227  193.306885  100.007812        0.007812
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=4, buffer=43/4096.[0m
[08/03 16:23:50]  --------------------------------------------------------------------------------
[08/03 16:23:50]  Iteration: 93 (35 solution, 57 counterexamples)
[08/03 16:23:59]  Generator returned sat in 7.804792 secs.
[08/03 16:23:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:23:59]  Improved gap from 21/4096 to 0
[08/03 16:23:59]  Improved number of small numbers from 84 to 90 out of a max of 101
[08/03 16:23:59]  Verifer returned sat in 0.426205 secs.
[08/03 16:23:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    3671.157227    3471.152100 -10678.821045  3671.157227    0.041748  3471.152100    0.000000  200.005127      100.005127
1    3671.157227    3671.146973 -10678.821045  3671.157227    0.020264  3671.146973    0.000000    0.010254        0.005127
2    3671.157227    3671.152100 -10678.821045  3671.157227    0.005127  3671.152100    0.000000    0.005127      -99.994873
3    4080.213623    3871.152100 -10678.821045  4080.213623  409.061523  3871.152100  209.051270    0.010254        0.010254
4    4283.234131    3971.152100 -10678.821045  4283.234131  203.030762  3971.152100  312.071777    0.010254        0.010254
5    4383.239258    4071.152100 -10678.821045  4383.239258  100.015381  4071.152100  312.076904    0.010254        0.010254
6    4431.736694    4118.654541 -10627.328735  4431.736694   48.507690  4118.654541  312.076904    1.005249        0.000000
7    4431.736694    4119.659790 -10527.328857  4431.736694    1.000000  4119.659790  312.076904    0.000000       -0.000122
8    4432.736694    4119.659912 -10428.328857  4432.736694    1.000000  4119.659912  312.076904    0.999878       -0.000122
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=21/2048.[0m
[08/03 16:24:00]  --------------------------------------------------------------------------------
[08/03 16:24:00]  Iteration: 94 (35 solution, 58 counterexamples)
[08/03 16:24:01]  Generator returned sat in 0.734659 secs.
[08/03 16:24:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:24:02]  Improved gap from 83/16384 to 0
[08/03 16:24:02]  Improved number of small numbers from 34 to 101 out of a max of 101
[08/03 16:24:02]  Verifer returned sat in 0.370740 secs.
[08/03 16:24:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    3621.254150    3421.249268 -10628.918213  3621.254150    0.041504  3421.249268    0.000000  200.004883      100.005127
1    3621.254150    3521.249268 -10628.918213  3621.254150    0.020020  3521.249268    0.000000  100.004883        0.005127
2    3621.254150    3621.249268 -10628.918213  3621.254150    0.005127  3621.249268    0.000000    0.004883      -99.994873
3    4033.309814    3821.249023 -10628.918213  4033.309814  412.060547  3821.249023  212.050781    0.010010        0.010010
4    4237.330078    3921.249023 -10628.918213  4237.330078  204.030273  3921.249023  316.071045    0.010010        0.010010
5    4337.335205    4021.249023 -10628.918213  4337.335205  100.015137  4021.249023  316.076172    0.010010        0.010010
6    4385.332764    4068.261719 -10576.926025  4385.332764   48.007568  4068.261719  316.076172    0.994873       -0.000244
7    4385.337891    4069.256836 -10476.930908  4385.337891    1.000000  4069.256836  316.076172    0.004883        0.000000
8    4386.333008    4069.261719 -10377.926025  4386.333008    1.000000  4069.261719  316.076172    0.995117        0.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=41/4096.[0m
[08/03 16:24:02]  --------------------------------------------------------------------------------
[08/03 16:24:02]  Iteration: 95 (35 solution, 59 counterexamples)
[08/03 16:24:08]  Generator returned sat in 5.040199 secs.
[08/03 16:24:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:24:08]  Verifer returned unsat in 0.078284 secs.
[08/03 16:24:08]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:24:08]  --------------------------------------------------------------------------------
[08/03 16:24:08]  Iteration: 96 (36 solution, 59 counterexamples)
[08/03 16:24:11]  Generator returned sat in 1.859740 secs.
[08/03 16:24:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:24:11]  Improved gap from 85/8192 to 48.4375
[08/03 16:24:11]  Improved number of small numbers from 41 to 101 out of a max of 101
[08/03 16:24:11]  Verifer returned sat in 0.408223 secs.
[08/03 16:24:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4293.955078    4193.944580 -10680.051025  4293.955078    0.041260  4193.944580   0.000000  100.010498        0.010498
1    4293.955078    4293.944580 -10680.051025  4293.955078    0.010498  4293.944580   0.000000    0.010498      -99.989502
2    4493.975830    4493.944336 -10680.051025  4493.975830  200.031250  4493.944336   0.010498    0.020996        0.020752
3    4593.965088    4593.944336 -10680.051025  4593.965088  100.010254  4593.944336   0.010498    0.010254        0.010010
4    4695.965088    4689.876953 -10680.051025  4695.965088  102.010254  4689.876953   1.999756    4.088379        0.020752
5    4744.381836    4693.944580 -10628.488525  4744.381836   52.505127  4693.944580   1.999756   48.437500        0.000000
6    4750.449463    4742.382080 -10576.926025  4750.449463   54.505127  4742.382080   1.999756    6.067627      -42.369873
7    4800.886963    4790.819580 -10525.363525  4800.886963   56.505127  4790.819580   1.999756    8.067627      -40.369873
8    4851.324463    4839.257080 -10525.363525  4851.324463   58.505127  4839.257080   1.999756   10.067627      -89.932373
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=85/4096.[0m
[08/03 16:24:12]  --------------------------------------------------------------------------------
[08/03 16:24:12]  Iteration: 97 (36 solution, 60 counterexamples)
[08/03 16:24:20]  Generator returned sat in 7.528914 secs.
[08/03 16:24:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:24:20]  Improved gap from 8149/16384 to 100
[08/03 16:24:20]  Improved number of small numbers from 28 to 101 out of a max of 101
[08/03 16:24:20]  Verifer returned sat in 0.308954 secs.
[08/03 16:24:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4344.442139    4244.439453 -10628.980713  4344.442139    0.041260  4244.439453   0.000000  100.002686        0.002686
1    4344.442139    4344.439453 -10628.980713  4344.442139    0.010498  4344.439453   0.000000    0.002686      -99.997314
2    4644.441895    4444.439453 -10628.980713  4644.441895  300.002441  4444.439453   0.002686  199.999756       99.999756
3    4644.441895    4643.944580 -10628.980713  4644.441895  199.997314  4643.944580   0.002686    0.494629       -0.000244
4    4844.444580    4644.439453 -10628.980713  4844.444580  200.497314  4644.439453   0.005371  199.999756       99.999756
5    4844.444580    4843.944580 -10628.980713  4844.444580  199.997314  4843.944580   0.005371    0.494629       -0.000244
6    5044.447266    4844.439453 -10628.980713  5044.447266  200.497314  4844.439453   0.008057  199.999756       99.999756
7    5044.447266    5044.436523 -10628.980713  5044.447266  199.997314  5044.436523   0.008057    0.002686       -0.000244
8    5244.941895    5044.439453 -10628.980713  5244.941895  200.497314  5044.439453   0.502686  199.999756       99.999756
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=409599/4096.[0m
[08/03 16:24:21]  --------------------------------------------------------------------------------
[08/03 16:24:21]  Iteration: 98 (36 solution, 61 counterexamples)
[08/03 16:24:28]  Generator returned sat in 6.921239 secs.
[08/03 16:24:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:24:29]  Improved number of small numbers from 53 to 100 out of a max of 100
[08/03 16:24:29]  Verifer returned sat in 0.306652 secs.
[08/03 16:24:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4348.962402    4248.941895 -10628.980957  4348.962402    0.041016  4248.941895    0.000000  100.020508        0.020508
1    4348.962402    4348.941895 -10628.980957  4348.962402   99.999756  4348.941895    0.000000    0.020508      -99.979492
2    4572.369629    4448.941895 -10628.980957  4572.369629  223.427734  4448.941895    0.000000  123.427734       23.427734
3    4672.410889    4645.941895 -10628.980957  4672.410889  223.468994  4645.941895    0.020508   26.448486       23.448486
4    4844.462402    4648.941895 -10628.980957  4844.462402  198.500000  4648.941895   72.072021  123.448486       23.448486
5    4871.013916    4798.921387 -10628.980957  4871.013916  150.000000  4798.921387   72.072021    0.020508      -50.000000
6    5044.483154    4930.227051 -10628.980957  5044.483154  173.489746  4930.227051   72.092773   42.163330       23.448486
7    5144.462402    5048.941895 -10628.980957  5144.462402  142.142578  5048.941895   72.092773   23.427734       23.427734
8    5319.534668    5148.941650 -10628.980957  5319.534668  198.500000  5148.941650  147.144287   23.448730       23.448486
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=96045/4096.[0m
[08/03 16:24:29]  --------------------------------------------------------------------------------
[08/03 16:24:29]  Iteration: 99 (36 solution, 62 counterexamples)
[08/03 16:24:31]  Generator returned sat in 0.905557 secs.
[08/03 16:24:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:24:31]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/03 16:24:31]  Verifer returned sat in 0.150265 secs.
[08/03 16:24:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4348.962402    4248.941895 -10628.980957  4348.962402    0.041016  4248.941895    0.000000  100.020508        2.020508
1    4348.962402    4346.941895 -10628.980957  4348.962402   99.999756  4346.941895    0.000000    2.020508      -97.979492
2    4572.369629    4448.941895 -10628.980957  4572.369629  225.427734  4448.941895    0.000000  123.427734       25.427734
3    4673.410889    4645.941895 -10628.980957  4673.410889  224.468994  4645.941895    1.020508   26.448486       25.448486
4    4844.462402    4648.941895 -10628.980957  4844.462402  197.500000  4648.941895   72.072021  123.448486       25.448486
5    4871.013916    4798.921387 -10628.980957  4871.013916  150.000000  4798.921387   72.072021    0.020508      -48.000000
6    5044.483154    4930.227051 -10628.980957  5044.483154  173.489746  4930.227051   72.092773   42.163330       25.448486
7    5143.462402    5046.941895 -10628.980957  5143.462402  141.142578  5046.941895   72.092773   24.427734       24.427734
8    5316.534668    5146.941895 -10628.980957  5316.534668  197.500000  5146.941895  144.144287   25.448486       25.448486
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=104237/4096.[0m
[08/03 16:24:31]  --------------------------------------------------------------------------------
[08/03 16:24:31]  Iteration: 100 (36 solution, 63 counterexamples)
[08/03 16:24:35]  Generator returned sat in 3.021685 secs.
[08/03 16:24:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:24:35]  Improved number of small numbers from 94 to 100 out of a max of 100
[08/03 16:24:35]  Verifer returned sat in 0.158203 secs.
[08/03 16:24:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4348.962402    4247.941895 -10628.981445  4348.962402    0.040771  4247.941895    0.000000  101.020508        2.020508
1    4348.962402    4346.941895 -10628.981445  4348.962402   99.999268  4346.941895    0.000000    2.020508      -97.979492
2    4572.369141    4447.441895 -10628.981445  4572.369141  225.427246  4447.441895    0.000000  124.927246       25.427246
3    4673.410889    4645.941895 -10628.981445  4673.410889  225.968994  4645.941895    1.020508   26.448486       25.448486
4    4844.462402    4648.941895 -10628.981445  4844.462402  197.500000  4648.941895   72.072021  123.448486       25.448486
5    4870.513916    4798.421387 -10628.981445  4870.513916  149.500000  4798.421387   72.072021    0.020508      -48.500000
6    5044.483154    4930.227051 -10628.981445  5044.483154  173.989746  4930.227051   72.092773   42.163330       25.448486
7    5142.962402    5046.941895 -10628.981445  5142.962402  140.642578  5046.941895   72.092773   23.927734       23.927734
8    5316.534668    5146.941895 -10628.981445  5316.534668  197.500000  5146.941895  144.144287   25.448486       25.448486
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=104237/4096.[0m
[08/03 16:24:36]  --------------------------------------------------------------------------------
[08/03 16:24:36]  Iteration: 101 (36 solution, 64 counterexamples)
[08/03 16:24:37]  Generator returned sat in 0.724634 secs.
[08/03 16:24:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:24:38]  Improved number of small numbers from 98 to 100 out of a max of 100
[08/03 16:24:38]  Verifer returned sat in 0.154171 secs.
[08/03 16:24:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4348.962158    4247.910889 -10628.981689  4348.962158    0.040771  4247.910889    0.000000  101.051270        2.989502
1    4348.962158    4346.941650 -10628.981445  4348.962158   99.999023  4346.941650    0.000000    2.020508      -97.010254
2    4572.368896    4445.972412 -10628.981445  4572.368896  225.427246  4445.972412    0.000000  126.396484       26.396484
3    4673.895264    4645.941650 -10628.981445  4673.895264  227.922852  4645.941650    1.505127   26.448486       26.417725
4    4844.462158    4648.941650 -10628.981445  4844.462158  197.015381  4648.941650   72.072021  123.448486       26.417725
5    4870.013672    4797.931396 -10628.981445  4870.013672  149.000000  4797.931396   72.072021    0.010254      -48.030762
6    5044.482910    4930.560303 -10628.981445  5044.482910  174.479492  4930.560303   72.092773   41.829834       26.417725
7    5142.962402    5045.972412 -10628.981445  5142.962402  140.309326  5045.972412   72.092773   24.897217       24.897217
8    5315.080566    5145.972412 -10628.981445  5315.080566  197.015381  5145.972412  142.690430   26.417725       26.417725
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=108207/4096.[0m
[08/03 16:24:38]  --------------------------------------------------------------------------------
[08/03 16:24:38]  Iteration: 102 (36 solution, 65 counterexamples)
[08/03 16:24:41]  Generator returned sat in 2.332896 secs.
[08/03 16:24:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:24:41]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/03 16:24:41]  Verifer returned sat in 0.160277 secs.
[08/03 16:24:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4468.461670     4368.46167 -10628.981445  4468.461670    0.040771   4368.46167   0.000000  100.000000      100.000000
1    4468.461670     4368.46167 -10628.981445  4468.461670   99.999023   4368.46167   0.000000  100.000000        0.000000
2    4549.462158     4549.46167 -10628.981445  4549.462158  181.000488   4549.46167   0.000000    0.000488      -18.999512
3    4726.461670     4668.46167 -10628.981445  4726.461670  177.000000   4668.46167   0.000488   57.999512       57.999512
4    4844.462158     4695.46167 -10628.981445  4844.462158  176.000000   4695.46167  18.000977  130.999512       57.999512
5    4888.462646     4868.46167 -10628.981445  4888.462646  175.000000   4868.46167  18.000977    2.000000        2.000000
6    5044.462646     4968.46167 -10628.981445  5044.462646  158.000000   4968.46167  18.001465   57.999512       57.999512
7    5143.463135     5050.46167 -10628.981445  5143.463135  157.000000   5050.46167  18.001465   75.000000       57.000000
8    5244.463135     5168.46167 -10628.981445  5244.463135  176.000000   5168.46167  18.001953   57.999512       57.999512
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=118783/2048.[0m
[08/03 16:24:42]  --------------------------------------------------------------------------------
[08/03 16:24:42]  Iteration: 103 (36 solution, 66 counterexamples)
[08/03 16:24:55]  Generator returned sat in 12.340447 secs.
[08/03 16:24:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:24:55]  Improved gap from 167/16384 to 0
[08/03 16:24:56]  Improved number of small numbers from 45 to 58 out of a max of 101
[08/03 16:24:56]  Verifer returned sat in 0.813290 secs.
[08/03 16:24:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t
0    4169.931152    4169.931091 -10628.981689  4169.931152    0.040771  4169.931091    0.000000   0.000061        0.000061
1    4269.931091    4269.910889 -10628.981689  4269.931091  100.000000  4269.910889    0.000000   0.020203        0.000000
2    4269.931091    4269.931091 -10628.981689  4269.931091    0.010254  4269.931091    0.000000   0.000000     -100.000000
3    4664.053406    4371.900513 -10628.981689  4664.053406  394.122314  4371.900513  194.101929  98.050964        0.020386
4    4764.063599    4569.931091 -10628.981689  4764.063599  198.061157  4569.931091  194.112122   0.020386        0.020386
5    4864.073792    4619.925995 -10628.981689  4864.073792  100.030579  4619.925995  194.122314  50.025482        0.020386
6    4865.063599    4669.931152 -10529.991882  4865.063599   51.015289  4669.931152  194.122314   1.010132        0.000000
7    4865.063599    4670.941284 -10429.991943  4865.063599    1.000000  4670.941284  194.122314   0.000000       -0.000061
8    4866.063599    4670.941406 -10330.991943  4866.063599    1.000000  4670.941406  194.122314   0.999878       -0.000061
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=167/8192.[0m
[08/03 16:24:56]  --------------------------------------------------------------------------------
[08/03 16:24:56]  Iteration: 104 (36 solution, 67 counterexamples)
[08/03 16:24:58]  Generator returned sat in 0.940603 secs.
[08/03 16:24:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:24:58]  Improved gap from 0 to 0
[08/03 16:24:59]  Improved number of small numbers from 48 to 69 out of a max of 101
[08/03 16:24:59]  Verifer returned sat in 0.869580 secs.
[08/03 16:24:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4169.931152    4019.395752 -10578.436157  4169.931152    0.040771  4019.395752    0.000000  150.535400       50.545593
1    4219.385742    4219.365479 -10578.436157  4219.385742  199.989990  4219.365479    0.000000    0.020264        0.000183
2    4219.385742    4219.385559 -10578.436157  4219.385742    0.010010  4219.385559    0.000000    0.000183      -99.999817
3    4616.507141    4320.355164 -10578.436157  4616.507141  397.121582  4320.355164  197.101318   99.050659        0.020264
4    4716.517273    4519.385559 -10578.436157  4716.517273  199.060791  4519.385559  197.111450    0.020264        0.020264
5    4816.527405    4568.890381 -10578.436157  4816.527405  100.030396  4568.890381  197.121582   50.515442        0.020264
6    4816.527405    4619.385559 -10478.456543  4816.527405   50.515198  4619.385559  197.121582    0.020264       -0.000122
7    4817.507141    4619.406006 -10379.436279  4817.507141    1.000000  4619.406006  197.121582    0.979553       -0.000122
8    4817.527588    4620.385742 -10379.426025  4817.527588    1.000000  4620.385742  197.121582    0.020264      -99.969421
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=83/4096.[0m
[08/03 16:24:59]  --------------------------------------------------------------------------------
[08/03 16:24:59]  Iteration: 105 (36 solution, 68 counterexamples)
[08/03 16:25:02]  Generator returned sat in 1.360195 secs.
[08/03 16:25:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:25:02]  Improved gap from 0 to 0
[08/03 16:25:02]  Improved number of small numbers from 18 to 101 out of a max of 101
[08/03 16:25:02]  Verifer returned sat in 0.419902 secs.
[08/03 16:25:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t
0    4115.455811    3919.344482 -10578.436279  4115.455811    0.040771  3919.344482  196.101074   0.010254      -99.989746
1    4315.476074    4119.344238 -10578.436279  4315.476074  200.030518  4119.344238  196.111328   0.020508        0.020264
2    4415.486328    4219.344482 -10578.436279  4415.486328  100.030762  4219.344482  196.121582   0.020264        0.020264
3    4517.496582    4319.344482 -10578.436279  4517.496582  102.030518  4319.344482  198.131836   0.020264        0.020264
4    4618.506836    4419.344238 -10578.436279  4618.506836  101.030518  4419.344238  199.142090   0.020508        0.020264
5    4718.516846    4420.333984 -10578.436279  4718.516846  100.030518  4420.333984  199.152100  99.030762        0.020264
6    4718.516846    4519.354736 -10478.456543  4718.516846   99.030518  4519.354736  199.152100   0.010010        0.000000
7    4719.506836    4520.344238 -10379.446533  4719.506836    1.000000  4520.344238  199.152100   0.010498        0.000000
8    4720.496338    4520.354736 -10280.436279  4720.496338    1.000000  4520.354736  199.152100   0.989502       -0.000244
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=83/4096.[0m
[08/03 16:25:02]  --------------------------------------------------------------------------------
[08/03 16:25:02]  Iteration: 106 (36 solution, 69 counterexamples)
[08/03 16:25:06]  Generator returned sat in 2.278834 secs.
[08/03 16:25:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:25:06]  Verifer returned unsat in 0.053220 secs.
[08/03 16:25:06]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:25:06]  --------------------------------------------------------------------------------
[08/03 16:25:06]  Iteration: 107 (37 solution, 69 counterexamples)
[08/03 16:25:08]  Generator returned sat in 1.606863 secs.
[08/03 16:25:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:25:09]  Improved gap from 0 to 100
[08/03 16:25:09]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/03 16:25:09]  Verifer returned sat in 0.399281 secs.
[08/03 16:25:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4466.445312    4138.415527 -10697.507324  4466.445312    0.040527  4138.415527  196.070557  131.959229      131.959229
1    4466.486084    4138.415527 -10697.507324  4466.486084  132.000000  4138.415527  196.111328  131.959229       31.959229
2    4566.526855    4275.415283 -10697.507324  4566.526855  232.000000  4275.415283  196.152100   94.959473       31.959229
3    4666.567383    4426.749023 -10697.507324  4666.567383  195.000000  4426.749023  196.192627   43.625732       31.959229
4    4766.608398    4493.415527 -10697.507324  4766.608398  143.666748  4493.415527  196.233643   76.959229       31.959229
5    4866.649170    4605.748779 -10697.507324  4866.649170  177.000000  4605.748779  196.274414   64.625977       31.959229
6    4966.689941    4722.859863 -10697.507324  4966.689941  164.666748  4722.859863  196.315186   47.514893       31.959229
7    5066.730469    4781.749023 -10697.507324  5066.730469  147.555420  4781.749023  196.355713   88.625732       31.959229
8    5121.771484    4838.415527 -10697.507324  5121.771484  143.666748  4838.415527  196.355713   87.000244      -12.999756
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=4, buffer=130905/4096.[0m
[08/03 16:25:09]  --------------------------------------------------------------------------------
[08/03 16:25:09]  Iteration: 108 (37 solution, 70 counterexamples)
[08/03 16:25:11]  Generator returned sat in 1.244152 secs.
[08/03 16:25:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:25:12]  Improved number of small numbers from 86 to 94 out of a max of 100
[08/03 16:25:12]  Verifer returned sat in 0.595723 secs.
[08/03 16:25:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4466.445068    4138.415527 -10697.507568  4466.445068    0.040527  4138.415527  196.070557  131.958984      131.958984
1    4466.486084    4138.415527 -10697.507568  4466.486084  132.000000  4138.415527  196.111328  131.959229       31.959229
2    4566.526855    4275.415039 -10697.507568  4566.526855  232.000000  4275.415039  196.152100   94.959717       31.959229
3    4666.587891    4427.068522 -10697.507568  4666.587891  195.020752  4427.068522  196.213135   43.306234       31.959229
4    4766.608154    4493.735352 -10697.507568  4766.608154  143.326497  4493.735352  196.233398   76.639404       31.959229
5    4866.628662    4606.095703 -10697.507568  4866.628662  176.659912  4606.095703  196.253906   64.279053       31.959229
6    4966.689941    4723.299696 -10697.507568  4966.689941  164.340332  4723.299696  196.315186   47.075060       31.959229
7    5066.730469    4800.388184 -10697.507568  5066.730469  147.115587  4800.388184  196.355713   69.986572       31.959229
8    5149.070312    4838.415527 -10697.507568  5149.070312  152.326416  4838.415527  196.355713  114.299072       14.299072
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=4, buffer=130905/4096.[0m
[08/03 16:25:12]  --------------------------------------------------------------------------------
[08/03 16:25:12]  Iteration: 109 (37 solution, 71 counterexamples)
[08/03 16:25:17]  Generator returned sat in 3.879331 secs.
[08/03 16:25:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:25:17]  Improved gap from 83/8192 to 0
[08/03 16:25:18]  Improved number of small numbers from 66 to 101 out of a max of 101
[08/03 16:25:18]  Verifer returned sat in 0.410300 secs.
[08/03 16:25:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4253.476807    3957.385986 -10946.947021  4253.476807    0.040527  3957.385986  196.070557  100.020264      100.020020
1    4253.517578    3957.386230 -10946.947021  4253.517578  100.061035  3957.386230  196.111328  100.020020        0.020020
2    4765.740479    4157.385986 -10946.947021  4765.740479  612.242920  4157.385986  608.334229    0.020264        0.020020
3    4816.240479    4207.896240 -10897.467285  4816.240479   50.520264  4207.896240  608.334229    0.010010       -0.000244
4    4918.270996    4258.396240 -10897.467285  4918.270996  102.040527  4258.396240  610.344482   49.530273        0.020020
5    4918.270996    4307.916260 -10797.487549  4918.270996   49.520264  4307.916260  610.344482    0.010254       -0.000244
6    5018.301270    4307.926758 -10797.487549  5018.301270  100.040527  4307.926758  610.354492  100.020020        0.020020
7    5018.301270    4407.926758 -10697.507812  5018.301270   48.520264  4407.926758  610.354492    0.020020       -0.000244
8    5116.321777    4407.947021 -10695.528076  5116.321777   98.040527  4407.947021  610.354492   98.020264        0.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=41/2048.[0m
[08/03 16:25:18]  --------------------------------------------------------------------------------
[08/03 16:25:18]  Iteration: 110 (37 solution, 72 counterexamples)
[08/03 16:25:21]  Generator returned sat in 1.574867 secs.
[08/03 16:25:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:25:21]  Verifer returned unsat in 0.065062 secs.
[08/03 16:25:21]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:25:21]  --------------------------------------------------------------------------------
[08/03 16:25:21]  Iteration: 111 (38 solution, 72 counterexamples)
[08/03 16:25:27]  Generator returned sat in 5.467534 secs.
[08/03 16:25:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:25:27]  Improved gap from 83/8192 to 0
[08/03 16:25:28]  Improved number of small numbers from 65 to 101 out of a max of 101
[08/03 16:25:28]  Verifer returned sat in 0.377076 secs.
[08/03 16:25:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4453.497070    3746.183105 -10897.467529  4453.497070    0.040527  3746.183105  607.303955  100.010010      100.009766
1    4453.497070    3846.183105 -10897.467529  4453.497070    0.010010  3846.183105  607.303955    0.010010        0.009766
2    4553.497070    3946.182861 -10897.467529  4553.497070  100.010010  3946.182861  607.303955    0.010254        0.009766
3    4764.567871    4046.183105 -10897.467529  4764.567871  211.081055  4046.183105  718.364502    0.020264        0.020020
4    4868.088135    4096.423096 -10897.467529  4868.088135  103.540527  4096.423096  721.884766   49.780273        0.020020
5    4868.088135    4146.193115 -10797.487549  4868.088135   49.770264  4146.193115  721.884766    0.010254        0.000000
6    4968.118408    4198.193115 -10797.487549  4968.118408  100.040527  4198.193115  721.895020   48.030273        0.020020
7    4968.118408    4246.203369 -10697.697021  4968.118408   48.020264  4246.203369  721.895020    0.020020       -0.189453
8    5064.638916    4246.412842 -10694.028076  5064.638916   96.540527  4246.412842  721.895020   96.331055        0.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=41/2048.[0m
[08/03 16:25:28]  --------------------------------------------------------------------------------
[08/03 16:25:28]  Iteration: 112 (38 solution, 73 counterexamples)
[08/03 16:25:30]  Generator returned sat in 1.404387 secs.
[08/03 16:25:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:25:31]  Improved gap from 41/16384 to 0
[08/03 16:25:32]  Improved number of small numbers from 39 to 97 out of a max of 101
[08/03 16:25:32]  Verifer returned sat in 0.918853 secs.
[08/03 16:25:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4659.530273    3746.183105 -10897.467529  4659.530273    0.040527  3746.183105  713.347168  200.000000      100.000244
1    4659.530273    3846.182861 -10897.467529  4659.530273    0.010010  3846.182861  713.347168  100.000244        0.000244
2    4759.537354    3946.183105 -10897.467529  4759.537354  200.007324  3946.183105  713.349365  100.004883        0.005127
3    4864.552490    4144.680664 -10897.467529  4864.552490  205.020020  4144.680664  718.364502    1.507324        0.005127
4    4964.555176    4196.430664 -10897.467529  4964.555176  101.510010  4196.430664  718.367188   49.757324        0.005127
5    4964.555176    4246.185547 -10797.472656  4964.555176   49.755005  4246.185547  718.367188    0.002441        0.000000
6    5064.562744    4297.185791 -10797.472656  5064.562744  100.010010  4297.185791  718.369629   49.007324        0.005127
7    5064.562744    4346.187988 -10697.712402  5064.562744   49.005005  4346.187988  718.369629    0.005127       -0.234619
8    5163.067627    4346.427979 -10697.712402  5163.067627   98.510010  4346.427979  718.369629   98.270020       -1.729736
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=21/4096.[0m
[08/03 16:25:32]  --------------------------------------------------------------------------------
[08/03 16:25:32]  Iteration: 113 (38 solution, 74 counterexamples)
[08/03 16:25:45]  Generator returned sat in 12.552259 secs.
[08/03 16:25:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:25:46]  Improved gap from 0 to 0
[08/03 16:25:46]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/03 16:25:46]  Verifer returned sat in 0.275603 secs.
[08/03 16:25:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4659.530273    3846.183105 -10897.467529  4659.530273    0.040527  3846.183105  713.347168  100.000000      100.000000
1    4659.530273    3846.183105 -10897.467529  4659.530273    0.009766  3846.183105  713.347168  100.000000        0.000000
2    4759.537598    3946.183105 -10897.467529  4759.537598  200.007324  3946.183105  713.349609  100.004883        0.004883
3    5059.552246    4046.183105 -10897.467529  5059.552246  400.019531  4046.183105  913.364258  100.004883        0.004883
4    5160.057129    4245.435547 -10897.467529  5160.057129  200.509766  4245.435547  913.869141    0.752441        0.004883
5    5260.059570    4246.183105 -10897.467529  5260.059570  100.754883  4246.183105  913.871582  100.004883        0.004883
6    5260.059570    4346.183105 -10797.965088  5260.059570   50.877441  4346.183105  913.871582    0.004883       -0.492676
7    5260.554688    4346.680664 -10698.465088  5260.554688    0.500000  4346.680664  913.871582    0.002441       -0.497559
8    5261.052246    4347.180664 -10698.465088  5261.052246    0.500000  4347.180664  913.871582    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=5/1024.[0m
[08/03 16:25:46]  --------------------------------------------------------------------------------
[08/03 16:25:46]  Iteration: 114 (38 solution, 75 counterexamples)
[08/03 16:25:51]  Generator returned sat in 4.375898 secs.
[08/03 16:25:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:25:52]  Improved gap from 0 to 100
[08/03 16:25:52]  Improved number of small numbers from 54 to 101 out of a max of 101
[08/03 16:25:52]  Verifer returned sat in 0.452527 secs.
[08/03 16:25:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4787.329346    4073.982422 -11125.26709  4787.329346    0.040283  4073.982422  713.326904    0.020020        0.020020
1    4935.289062    4073.982422 -11125.26709  4935.289062  147.979736  4073.982422  713.347168  147.959473       47.959473
2    4986.390137    4273.022949 -11125.26709  4986.390137  199.060547  4273.022949  713.347168    0.020020       -0.939453
3    5135.309326    4273.982422 -11125.26709  5135.309326  148.939209  4273.982422  713.367432  147.959473       47.959473
4    5135.309326    4421.921387 -11125.26709  5135.309326  147.939209  4421.921387  713.367432    0.020508      -52.040527
5    5308.758301    4573.982422 -11125.26709  5308.758301  173.469482  4573.982422  713.367432   21.408447       21.408447
6    5437.329590    4672.982422 -11125.26709  5437.329590  149.979736  4672.982422  715.387695   48.959473       47.959473
7    5537.349854    4773.982178 -11125.26709  5537.349854  148.979736  4773.982178  715.407959   47.959717       47.959473
8    5637.369873    4773.982422 -11125.26709  5637.369873  147.979736  4773.982422  715.427979  147.959473       47.959473
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=98221/2048.[0m
[08/03 16:25:52]  --------------------------------------------------------------------------------
[08/03 16:25:52]  Iteration: 115 (38 solution, 76 counterexamples)
[08/03 16:25:59]  Generator returned sat in 5.919663 secs.
[08/03 16:25:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:26:00]  Improved number of small numbers from 16 to 25 out of a max of 100
[08/03 16:26:00]  Verifer returned sat in 0.950646 secs.
[08/03 16:26:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    3616.199463    3616.189362 -10667.47403  3616.199463    0.040283  3616.189362    0.000000    0.010101        0.010101
1    3716.219574    3716.189209 -10667.47403  3716.219574  100.030212  3716.189209    0.010071    0.020294        0.020142
2    3716.219574    3716.189362 -10667.47403  3716.219574    0.020264  3716.189362    0.010071    0.020142      -99.979858
3    3906.522024    3906.511953 -10667.47403  3906.522024  190.322591  3906.511953    0.010071    0.000000       -9.677409
4    4051.183319    4016.189362 -10667.47403  4051.183319  144.661296  4016.189362   34.973816    0.020142        0.020142
5    4121.493825    4086.520009 -10667.47403  4121.493825   70.330648  4086.520009   34.973816    0.000000      -29.669352
6    4306.159149    4216.189362 -10667.47403  4306.159149  184.665324  4216.189362   89.949646    0.020142        0.020142
7    4396.471670    4306.511953 -10667.47403  4396.471670   90.332662  4306.511953   89.949646    0.010071       -9.667338
8    4541.122894    4316.189453 -10667.47403  4541.122894  144.661296  4316.189453  124.913391  100.020050        0.020142
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=165/8192.[0m
[08/03 16:26:01]  --------------------------------------------------------------------------------
[08/03 16:26:01]  Iteration: 116 (38 solution, 77 counterexamples)
[08/03 16:26:14]  Generator returned sat in 12.146243 secs.
[08/03 16:26:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:26:14]  Improved gap from 165/65536 to 1.5625
[08/03 16:26:15]  Improved number of small numbers from 24 to 47 out of a max of 101
[08/03 16:26:15]  Verifer returned sat in 1.023459 secs.
[08/03 16:26:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3716.201904    3516.189453 -10602.383545  3716.201904    0.040039  3516.189453   0.010071  200.002380      100.002462
1    3716.201904    3716.187012 -10602.383545  3716.201904    0.002686  3716.187012   0.010071    0.004822        0.002462
2    3716.201904    3716.189453 -10536.757787  3716.201904    0.002686  3716.189453   0.010071    0.002380      -34.371780
3    3850.576202    3850.563614 -10536.757787  3850.576202  134.376678  3850.563614   0.010071    0.002518        0.002518
4    4052.138702    3950.563477 -10536.757787  4052.138702  201.565018  3950.563477   0.012589  101.562637      101.562500
5    4052.138702    4050.563477 -10536.757787  4052.138702    0.500000  4050.563477   0.012589    1.562637        1.562500
6    4052.138702    4050.563614 -10438.320287  4052.138702    0.750000  4050.563614   0.012589    1.562500        0.000000
7    4052.138702    4052.126114 -10339.882812  4052.138702    1.125000  4052.126114   0.012589    0.000000       -1.562525
8    4053.826202    4053.688721 -10339.882812  4053.826202    1.687500  4053.688721   0.012589    0.124893      -99.875025
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1625/16.[0m
[08/03 16:26:15]  --------------------------------------------------------------------------------
[08/03 16:26:15]  Iteration: 117 (38 solution, 78 counterexamples)
[08/03 16:26:22]  Generator returned sat in 5.407462 secs.
[08/03 16:26:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:26:22]  Improved gap from 0 to 100
[08/03 16:26:22]  Improved number of small numbers from 92 to 101 out of a max of 101
[08/03 16:26:22]  Verifer returned sat in 0.267230 secs.
[08/03 16:26:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3619.051514    3419.041748 -10362.835938  3619.051514    0.039795  3419.041748   0.000000  200.009766      100.010010
1    3619.051514    3519.041748 -10362.835938  3619.051514    0.010010  3519.041748   0.000000  100.009766        0.010010
2    3620.621826    3620.611572 -10362.835938  3620.621826  101.580078  3620.611572   0.000000    0.010254      -98.419678
3    3819.071533    3722.111572 -10362.835938  3819.071533  198.459961  3722.111572   0.010010   96.949951        0.020020
4    3919.081543    3823.611572 -10362.835938  3919.081543  196.959961  3823.611572   0.020020   95.449951        0.020020
5    4019.091553    3925.081787 -10362.835938  4019.091553  195.459961  3925.081787   0.030029   93.979736        0.020020
6    4119.071777    4119.031494 -10362.835938  4119.071777  193.959961  4119.031494   0.030029    0.010254        0.000244
7    4317.521484    4122.101562 -10362.835938  4317.521484  198.459961  4122.101562  98.459961   96.959961        0.020020
8    4417.521484    4219.041748 -10362.835938  4417.521484  196.959961  4219.041748  98.459961  100.019775        0.020020
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=41/2048.[0m
[08/03 16:26:22]  --------------------------------------------------------------------------------
[08/03 16:26:22]  Iteration: 118 (38 solution, 79 counterexamples)
[08/03 16:26:28]  Generator returned sat in 4.204053 secs.
[08/03 16:26:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:26:28]  Improved gap from 41/16384 to 0
[08/03 16:26:28]  Improved number of small numbers from 50 to 101 out of a max of 101
[08/03 16:26:28]  Verifer returned sat in 0.341599 secs.
[08/03 16:26:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3619.044189    3419.041748 -10362.836182  3619.044189    0.039551  3419.041748   0.000000  200.002441      100.002441
1    3619.044189    3519.041748 -10362.836182  3619.044189    0.010010  3519.041748   0.000000  100.002441        0.002441
2    3719.043945    3719.041504 -10362.836182  3719.043945  200.002197  3719.041504   0.000000    0.002441        0.002197
3    3823.049072    3819.041504 -10362.836182  3823.049072  104.007568  3819.041504   4.002441    0.005127        0.004883
4    3925.051514    3919.041504 -10362.836182  3925.051514  102.007568  3919.041504   6.004883    0.005127        0.004883
5    4025.053955    3921.036377 -10362.836182  4025.053955  100.007568  3921.036377   6.007324   98.010254        0.004883
6    4025.053955    4019.044189 -10263.335938  4025.053955   98.007568  4019.044189   6.007324    0.002441       -0.494873
7    4025.551514    4019.541504 -10163.338623  4025.551514    0.500000  4019.541504   6.007324    0.002686        0.000000
8    4026.048828    4019.544189 -10063.836182  4026.048828    0.500000  4019.544189   6.007324    0.497314       -0.000244
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=5/1024.[0m
[08/03 16:26:29]  --------------------------------------------------------------------------------
[08/03 16:26:29]  Iteration: 119 (38 solution, 80 counterexamples)
[08/03 16:26:32]  Generator returned sat in 2.833097 secs.
[08/03 16:26:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:26:33]  Improved gap from 81/8192 to 100
[08/03 16:26:33]  Improved number of small numbers from 45 to 101 out of a max of 101
[08/03 16:26:33]  Verifer returned sat in 0.299547 secs.
[08/03 16:26:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3570.543945    3470.534180 -10362.836182  3570.543945    0.039307  3470.534180   0.000000  100.009766      100.009766
1    3570.543945    3570.524414 -10362.836182  3570.543945    0.009766  3570.524414   0.000000    0.019531        0.009766
2    3572.093750    3572.083496 -10362.836182  3572.093750    1.569336  3572.083496   0.000000    0.010254      -98.440430
3    3721.073730    3721.073730 -10362.836182  3721.073730  148.990234  3721.073730   0.000000    0.000000      -49.460449
4    3870.563965    3870.534180 -10362.836182  3870.563965  149.490234  3870.534180   0.010010    0.019775        0.019775
5    4018.549072    3873.063965 -10362.836182  4018.549072  148.004883  3873.063965  47.995117   97.489990        0.019775
6    4069.549316    4021.553955 -10362.836182  4069.549316  148.490234  4021.553955  47.995117    0.000244      -48.979980
7    4218.539307    4170.534180 -10362.836182  4218.539307  148.990234  4170.534180  47.995117    0.010010        0.010010
8    4368.019531    4170.534180 -10362.836182  4368.019531  149.490234  4170.534180  97.465576  100.019775        0.019775
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=81/4096.[0m
[08/03 16:26:33]  --------------------------------------------------------------------------------
[08/03 16:26:33]  Iteration: 120 (38 solution, 81 counterexamples)
[08/03 16:26:39]  Generator returned sat in 4.248507 secs.
[08/03 16:26:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:26:39]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/03 16:26:39]  Verifer returned sat in 0.172304 secs.
[08/03 16:26:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3570.543945    3470.534180 -10362.836182  3570.543945    0.039307  3470.534180   0.000000  100.009766      100.009766
1    3570.543945    3570.524414 -10362.836182  3570.543945    0.009766  3570.524414   0.000000    0.019531        0.009766
2    3573.088379    3573.083496 -10362.836182  3573.088379    2.563965  3573.083496   0.000000    0.004883      -97.445801
3    3721.323730    3721.323730 -10362.836182  3721.323730  148.240234  3721.323730   0.000000    0.000000      -49.210449
4    3870.563965    3870.534180 -10362.836182  3870.563965  149.240234  3870.534180   0.010010    0.019775        0.019775
5    4018.549072    3873.063965 -10362.836182  4018.549072  148.004883  3873.063965  47.995117   97.489990        0.019775
6    4069.049316    4021.049316 -10362.836182  4069.049316  147.990234  4021.049316  47.995117    0.004883      -49.479980
7    4218.034668    4170.034668 -10362.836182  4218.034668  148.990234  4170.034668  47.995117    0.004883       -0.494629
8    4368.020020    4170.534180 -10362.836182  4368.020020  149.990234  4170.534180  97.466064  100.019775        0.019775
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=81/4096.[0m
[08/03 16:26:39]  --------------------------------------------------------------------------------
[08/03 16:26:39]  Iteration: 121 (38 solution, 82 counterexamples)
[08/03 16:26:49]  Generator returned sat in 8.923060 secs.
[08/03 16:26:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:26:49]  Verifer returned unsat in 0.086931 secs.
[08/03 16:26:49]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:26:49]  --------------------------------------------------------------------------------
[08/03 16:26:49]  Iteration: 122 (39 solution, 82 counterexamples)
[08/03 16:26:52]  Generator returned sat in 1.847223 secs.
[08/03 16:26:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:26:53]  Improved gap from 161/16384 to 100
[08/03 16:26:53]  Improved number of small numbers from 31 to 101 out of a max of 101
[08/03 16:26:53]  Verifer returned sat in 0.491248 secs.
[08/03 16:26:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3547.482910    3348.433838 -10362.836182  3547.482910    0.039307  3348.433838   0.000000  199.049072      199.049072
1    3547.492920    3350.394531 -10362.836182  3547.492920  199.059082  3350.394531   0.009766  197.088623       99.049316
2    3646.992676    3449.434082 -10362.836182  3646.992676  296.588379  3449.434082   0.009766  197.548828       98.549072
3    3646.992676    3646.973389 -10362.836182  3646.992676   25.625000  3646.973389   0.009766    0.009521       -1.450928
4    3847.502930    3648.433838 -10362.836182  3847.502930  200.519775  3648.433838   0.019775  199.049316       99.049316
5    3847.502930    3847.473145 -10362.836182  3847.502930    0.500000  3847.473145   0.019775    0.010010       -0.950684
6    4047.512451    3948.433838 -10362.836182  4047.512451  200.019531  3948.433838   0.029297   99.049316       99.049316
7    4047.512451    4047.473389 -10362.836182  4047.512451    0.500000  4047.473389   0.029297    0.009766       -0.950684
8    4248.022461    4048.434082 -10362.836182  4248.022461  200.519775  4048.434082   0.539307  199.049072       99.049316
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=202853/2048.[0m
[08/03 16:26:53]  --------------------------------------------------------------------------------
[08/03 16:26:53]  Iteration: 123 (39 solution, 83 counterexamples)
[08/03 16:26:56]  Generator returned sat in 1.672578 secs.
[08/03 16:26:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:26:56]  Improved gap from 161/16384 to 100
[08/03 16:26:57]  Improved number of small numbers from 38 to 101 out of a max of 101
[08/03 16:26:57]  Verifer returned sat in 0.386938 secs.
[08/03 16:26:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3148.453613    2948.453613 -10362.836182  3148.453613    0.039062  2948.453613   0.000000  200.000000      100.000000
1    3148.453613    3048.453613 -10362.836182  3148.453613    0.010010  3048.453613   0.000000  100.000000        0.000000
2    3347.502686    3148.453857 -10362.836182  3347.502686  299.049072  3148.453857   0.000000  199.048828       99.049072
3    3347.502686    3347.493164 -10362.836182  3347.502686    0.499756  3347.493164   0.000000    0.009521       -0.950928
4    3547.512695    3348.453857 -10362.836182  3547.512695  200.019531  3348.453857   0.010010  199.048828       99.049072
5    3547.512695    3547.492920 -10362.836182  3547.512695    0.500000  3547.492920   0.010010    0.009766       -0.950928
6    3747.522461    3648.453613 -10362.836182  3747.522461  200.019531  3648.453613   0.019775   99.049072       99.049072
7    3747.522461    3747.492920 -10362.836182  3747.522461    0.500000  3747.492920   0.019775    0.009766       -0.950928
8    3947.532227    3748.453857 -10362.836182  3947.532227  200.019531  3748.453857   0.029541  199.048828       99.049072
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=405705/4096.[0m
[08/03 16:26:57]  --------------------------------------------------------------------------------
[08/03 16:26:57]  Iteration: 124 (39 solution, 84 counterexamples)
[08/03 16:27:08]  Generator returned sat in 9.625623 secs.
[08/03 16:27:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:27:08]  Improved gap from 0 to 1.5625
[08/03 16:27:08]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/03 16:27:08]  Verifer returned sat in 0.287956 secs.
[08/03 16:27:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3148.443848    2845.934082 -10260.316650  3148.443848    0.039062  2845.934082   0.000000  302.509766      202.509766
1    3148.453613    2945.934082 -10260.316650  3148.453613  302.519531  2945.934082   0.009766  202.509766      102.509766
2    3148.453613    3045.934082 -10260.316650  3148.453613  202.509766  3045.934082   0.009766  102.509766        2.509766
3    3247.963379    3245.934082 -10260.316650  3247.963379  202.019531  3245.934082   0.009766    2.019531        2.019531
4    3448.463379    3345.934082 -10260.316650  3448.463379  202.519531  3345.934082   0.019531  102.509766      102.509766
5    3448.463379    3345.934082 -10260.316650  3448.463379    1.500000  3345.934082   0.019531  102.509766        2.509766
6    3448.463379    3445.934082 -10162.826416  3448.463379    2.000000  3445.934082   0.019531    2.509766        0.000000
7    3448.463379    3448.443848 -10064.388916  3448.463379    2.500000  3448.443848   0.019531    0.000000       -1.562500
8    3451.463379    3450.006348  -9965.951416  3451.463379    3.000000  3450.006348   0.019531    1.437500       -0.125000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=52485/512.[0m
[08/03 16:27:08]  --------------------------------------------------------------------------------
[08/03 16:27:08]  Iteration: 125 (39 solution, 85 counterexamples)
[08/03 16:27:19]  Generator returned sat in 9.055763 secs.
[08/03 16:27:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:27:19]  Verifer returned unsat in 0.113674 secs.
[08/03 16:27:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:27:19]  --------------------------------------------------------------------------------
[08/03 16:27:19]  Iteration: 126 (40 solution, 85 counterexamples)
[08/03 16:27:22]  Generator returned sat in 1.501361 secs.
[08/03 16:27:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:27:22]  Improved gap from 0 to 23.4375
[08/03 16:27:22]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/03 16:27:22]  Verifer returned sat in 0.378077 secs.
[08/03 16:27:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2282.023682    2082.013916 -10118.056885  2282.023682    0.039062  2082.013916    0.000000  200.009766      100.009766
1    2282.023682    2182.013916 -10118.056885  2282.023682    0.009766  2182.013916    0.000000  100.009766        0.009766
2    2282.023682    2282.013916 -10118.056885  2282.023682  100.000000  2282.013916    0.000000    0.009766      -99.990234
3    3061.326416    2382.013916 -10118.056885  3061.326416  779.312500  2382.013916  579.292969  100.019531        0.019531
4    3349.463135    2582.013916 -10118.056885  3349.463135  388.156250  2582.013916  767.429688    0.019531        0.019531
5    3542.021729    2587.254150 -10118.056885  3542.021729  192.578125  2587.254150  859.988281   94.779297        0.019531
6    3542.031494    2682.013916 -10041.494385  3542.031494   94.789062  2682.013916  859.988281    0.029297      -23.408203
7    3589.896729    2705.451416  -9965.951416  3589.896729   47.894531  2705.451416  859.988281   24.457031        0.000000
8    3589.896729    2729.908447  -9965.951416  3589.896729   24.447266  2729.908447  859.988281    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=5/256.[0m
[08/03 16:27:22]  --------------------------------------------------------------------------------
[08/03 16:27:22]  Iteration: 127 (40 solution, 86 counterexamples)
[08/03 16:27:35]  Generator returned sat in 11.188978 secs.
[08/03 16:27:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:27:35]  Improved gap from 0 to 100
[08/03 16:27:35]  Improved number of small numbers from 93 to 101 out of a max of 101
[08/03 16:27:35]  Verifer returned sat in 0.285843 secs.
[08/03 16:27:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2334.045410    2234.043213 -10170.086426  2334.045410    0.039062  2234.043213    0.000000  100.002197      100.002197
1    2334.045410    2234.043213 -10170.086426  2334.045410    0.009521  2234.043213    0.000000  100.002197        0.002197
2    2334.045410    2334.043213 -10170.086426  2334.045410    0.002441  2334.043213    0.000000    0.002197      -99.997803
3    2534.045654    2534.043213 -10170.086426  2534.045654  200.002441  2534.043213    0.000000    0.002441        0.002441
4    2636.044434    2568.714600 -10170.086426  2636.044434  102.001221  2568.714600    1.996338   65.333496        0.004883
5    2736.046631    2734.043213 -10170.086426  2736.046631  165.335693  2734.043213    1.998535    0.004883        0.004883
6    2934.041748    2802.048096 -10170.086426  2934.041748  198.000000  2802.048096   99.993652   32.000000        0.004883
7    3034.044189    2934.043213 -10170.086426  3034.044189  132.002441  2934.043213   99.996094    0.004883        0.004883
8    3214.703613    2934.043213 -10170.086426  3214.703613  180.664307  2934.043213  180.655518  100.004883        0.004883
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=5, buffer=5/1024.[0m
[08/03 16:27:36]  --------------------------------------------------------------------------------
[08/03 16:27:36]  Iteration: 128 (40 solution, 87 counterexamples)
[08/03 16:27:45]  Generator returned sat in 7.781057 secs.
[08/03 16:27:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:27:45]  Improved number of small numbers from 45 to 62 out of a max of 100
[08/03 16:27:45]  Verifer returned sat in 0.699273 secs.
[08/03 16:27:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2350.204346    2250.204586 -10170.086426  2350.204346    0.039062  2250.204586   0.000000   99.999760       99.999760
1    2350.204346    2350.204346 -10170.086426  2350.204346    0.009277  2350.204346   0.000000    0.000000       -0.000240
2    2550.206787    2350.204586 -10170.086426  2550.206787  200.002441  2350.204586   0.000000  200.002201      100.002201
3    2550.206787    2550.204586 -10170.086426  2550.206787  100.010000  2550.204586   0.000000    0.002201        0.002201
4    2750.709586    2550.204586 -10170.086426  2750.709586  200.505000  2550.204586   0.002380  200.502620      100.502620
5    2750.709586    2750.204586 -10170.086426  2750.709586    0.010000  2750.204586   0.002380    0.502620        0.502620
6    2950.711967    2850.204346 -10170.086426  2950.711967  200.505000  2850.204346   0.004761  100.502860      100.502620
7    2950.711967    2950.204586 -10170.086426  2950.711967    0.010000  2950.204586   0.004761    0.502620        0.502620
8    3150.714347    2950.204590 -10170.086426  3150.714347  200.505000  2950.204590   0.007141  200.502616      100.502620
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=41165873/409600.[0m
[08/03 16:27:46]  --------------------------------------------------------------------------------
[08/03 16:27:46]  Iteration: 129 (40 solution, 88 counterexamples)
[08/03 16:27:52]  Generator returned sat in 5.418528 secs.
[08/03 16:27:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:27:52]  Improved gap from 5/512 to 0
[08/03 16:27:53]  Improved number of small numbers from 64 to 101 out of a max of 101
[08/03 16:27:53]  Verifer returned sat in 0.292114 secs.
[08/03 16:27:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2346.283447    2146.273926 -10170.086426  2346.283447    0.039062  2146.273926        0.0  200.009521      100.009766
1    2346.283447    2246.273926 -10170.086426  2346.283447    0.009766  2246.273926        0.0  100.009521        0.009766
2    2346.283447    2346.273926 -10170.086426  2346.283447  100.000000  2346.273926        0.0    0.009521      -99.990234
3    2546.273926    2546.263916 -10170.086426  2546.273926  200.000000  2546.263916        0.0    0.010010        0.000244
4    2547.263916    2547.254150 -10071.076660  2547.263916    1.000000  2547.254150        0.0    0.009766        0.000000
5    2548.254150    2548.244629  -9972.066895  2548.254150    1.000000  2548.244629        0.0    0.009521        0.000000
6    2549.244629    2549.234619  -9873.057373  2549.244629    1.000000  2549.234619        0.0    0.010010        0.000000
7    2550.234619    2549.244629  -9774.057129  2550.234619    1.000000  2549.244629        0.0    0.989990       -0.009766
8    2550.244629    2550.244629  -9674.066895  2550.244629    1.000000  2550.244629        0.0    0.000000       -0.009521
high_util=False, low_loss=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=5/256.[0m
[08/03 16:27:53]  --------------------------------------------------------------------------------
[08/03 16:27:53]  Iteration: 130 (40 solution, 89 counterexamples)
[08/03 16:27:59]  Generator returned sat in 4.505429 secs.
[08/03 16:27:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:27:59]  Improved gap from 39/8192 to 0
[08/03 16:27:59]  Improved number of small numbers from 100 to 101 out of a max of 101
[08/03 16:27:59]  Verifer returned sat in 0.187395 secs.
[08/03 16:27:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2346.276123    2146.273926 -10070.089355  2346.276123    0.038818  2146.273926        0.0  200.002197      199.999756
1    2346.276123    2246.273926 -10070.089355  2346.276123    0.009521  2246.273926        0.0  100.002197       99.999756
2    2346.276123    2346.273926 -10070.089355  2346.276123   99.999756  2346.273926        0.0    0.002197       -0.000244
3    2646.276123    2446.276367 -10070.089355  2646.276123  300.002197  2446.276367        0.0  199.999756      199.999756
4    2646.276123    2546.276367 -10070.089355  2646.276123    0.500000  2546.276367        0.0   99.999756       99.999756
5    2646.276123    2646.273682 -10070.089355  2646.276123    0.500000  2646.273682        0.0    0.002441       -0.000244
6    2646.773682    2646.771240  -9971.082031  2646.773682    0.500000  2646.771240        0.0    0.002441       -0.495361
7    2647.271240    2647.269043  -9871.581787  2647.271240    0.500000  2647.269043        0.0    0.002197       -0.497559
8    2647.769043    2647.768799  -9871.581787  2647.769043    0.500000  2647.768799        0.0    0.000244      -99.999756
high_util=False, low_loss=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=419333/2048.[0m
[08/03 16:27:59]  --------------------------------------------------------------------------------
[08/03 16:27:59]  Iteration: 131 (40 solution, 90 counterexamples)
[08/03 16:28:12]  Generator returned sat in 10.910337 secs.
[08/03 16:28:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:28:12]  Improved gap from 39/16384 to 100
[08/03 16:28:12]  Improved number of small numbers from 62 to 68 out of a max of 101
[08/03 16:28:12]  Verifer returned sat in 0.745178 secs.
[08/03 16:28:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2046.284668    2046.284665 -10070.089355  2046.284668    0.038574  2046.284665   0.000000    0.000003      -99.999997
1    2346.285498    2146.284665 -10070.089355  2346.285498  300.000833  2146.284665   0.000417  200.000417      100.000417
2    2446.285081    2246.284665 -10070.089355  2446.285081  300.000000  2246.284665   0.000417  200.000000      100.000000
3    2446.285081    2446.284248 -10070.089355  2446.285081    0.001458  2446.284248   0.000417    0.000417        0.000000
4    2646.285915    2446.302165 -10070.089355  2646.285915  200.001250  2446.302165   0.000833  199.982917      100.000417
5    2646.285915    2646.284665 -10070.089355  2646.285915    0.010000  2646.284665   0.000833    0.000417        0.000417
6    2846.295498    2746.284424 -10070.089355  2846.295498  200.010000  2746.284424   0.010417  100.000658      100.000417
7    2846.295498    2846.284665 -10070.089355  2846.295498    0.010000  2846.284665   0.010417    0.000417        0.000417
8    3046.296331    2846.284668 -10070.089355  3046.296331  200.001250  2846.284668   0.011250  200.000413      100.000417
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=240001/2400.[0m
[08/03 16:28:13]  --------------------------------------------------------------------------------
[08/03 16:28:13]  Iteration: 132 (40 solution, 91 counterexamples)
[08/03 16:28:18]  Generator returned sat in 3.519729 secs.
[08/03 16:28:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:28:18]  Improved gap from 79/4096 to 100
[08/03 16:28:18]  Improved number of small numbers from 36 to 101 out of a max of 101
[08/03 16:28:18]  Verifer returned sat in 0.438488 secs.
[08/03 16:28:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2745.812012    2745.812012 -10669.616699  2745.812012    0.038330  2745.812012   0.000000    0.000000        0.000000
1    2845.811768    2745.812012 -10669.616699  2845.811768   99.999756  2745.812012   0.000000   99.999756       -0.000244
2    3045.585938    2845.812012 -10669.616699  3045.585938  299.773926  2845.812012   0.000000  199.773926       99.773926
3    3045.585938    3045.576416 -10669.616699  3045.585938  100.725830  3045.576416   0.000000    0.009521       -0.226074
4    3245.821533    3045.812012 -10669.616699  3245.821533  200.245117  3045.812012   0.009521  200.000000      100.000000
5    3245.821533    3245.651855 -10669.616699  3245.821533    0.500000  3245.651855   0.009521    0.160156        0.000000
6    3445.831299    3245.812012 -10669.616699  3445.831299  200.169922  3245.812012   0.019287  200.000000      100.000000
7    3445.831299    3445.802246 -10669.616699  3445.831299    0.500000  3445.802246   0.019287    0.009766        0.000000
8    3646.066650    3445.812012 -10669.616699  3646.066650  200.245117  3445.812012   0.254639  200.000000      100.000000
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=100.[0m
[08/03 16:28:18]  --------------------------------------------------------------------------------
[08/03 16:28:18]  Iteration: 133 (40 solution, 92 counterexamples)
[08/03 16:28:38]  Generator returned sat in 17.976683 secs.
[08/03 16:28:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:28:38]  Improved gap from 157/16384 to 48.4375
[08/03 16:28:38]  Improved number of small numbers from 22 to 101 out of a max of 101
[08/03 16:28:38]  Verifer returned sat in 0.402637 secs.
[08/03 16:28:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0    3231.095459    3231.095215 -10669.616699  3231.095459    0.038086  3231.095215   0.000000   0.000244        0.000000
1    3231.104736    3231.095459 -10669.616699  3231.104736    0.009521  3231.095459   0.000000   0.009277      -99.990723
2    3433.326172    3431.095215 -10669.616699  3433.326172  202.230713  3431.095215   0.009521   2.221436        2.221191
3    3531.835693    3531.095215 -10669.616699  3531.835693  100.730957  3531.095215   0.009521   0.730957        0.730713
4    3633.335693    3631.095459 -10669.616699  3633.335693  102.230957  3631.095459   0.019043   2.221191        2.221191
5    3684.229980    3631.095459 -10622.732178  3684.229980   53.115479  3631.095459   0.019043  53.115479        0.000000
6    3685.729980    3684.210938 -10571.169678  3685.729980   54.615479  3684.210938   0.019043   1.500000      -46.937500
7    3740.345459    3732.648438 -10519.607178  3740.345459   56.115479  3732.648438   0.019043   7.677979      -40.759521
8    3790.282959    3781.085938 -10519.607178  3790.282959   57.615479  3781.085938   0.019043   9.177979      -90.822021
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=4549/2048.[0m
[08/03 16:28:39]  --------------------------------------------------------------------------------
[08/03 16:28:39]  Iteration: 134 (40 solution, 93 counterexamples)
[08/03 16:28:45]  Generator returned sat in 4.855763 secs.
[08/03 16:28:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:28:45]  Improved gap from 1/16384 to 4.6875
[08/03 16:28:45]  Improved number of small numbers from 100 to 101 out of a max of 101
[08/03 16:28:45]  Verifer returned sat in 0.385524 secs.
[08/03 16:28:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3423.960693    3223.960693 -10805.544678  3423.960693    0.038086  3223.960693   0.000000  200.000000      200.000000
1    3423.960693    3223.960938 -10805.544678  3423.960693  200.000000  3223.960938   0.000000  199.999756      100.000000
2    3423.960693    3323.960938 -10805.544678  3423.960693    0.019043  3323.960938   0.000000   99.999756        0.000000
3    3627.167236    3423.960938 -10805.544678  3627.167236  303.206299  3423.960938   0.000000  203.206299      103.206543
4    3728.667236    3623.960693 -10805.544678  3728.667236  304.706299  3623.960693   0.019043  104.687500      104.687500
5    3728.667236    3723.960693 -10805.544678  3728.667236    1.000000  3723.960693   0.019043    4.687500        4.687500
6    3728.667236    3723.960693 -10710.232178  3728.667236    2.500000  3723.960693   0.019043    4.687500        0.000000
7    3728.667236    3728.648193 -10614.919678  3728.667236    4.000000  3728.648193   0.019043    0.000000       -4.687500
8    3734.167236    3733.335938 -10519.607422  3734.167236    5.500000  3733.335938   0.019043    0.812256       -3.875244
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1675/16.[0m
[08/03 16:28:46]  --------------------------------------------------------------------------------
[08/03 16:28:46]  Iteration: 135 (40 solution, 94 counterexamples)
[08/03 16:28:57]  Generator returned sat in 10.539761 secs.
[08/03 16:28:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:28:58]  Improved gap from 7/2 to 3.125
[08/03 16:28:58]  Improved number of small numbers from 64 to 101 out of a max of 101
[08/03 16:28:58]  Verifer returned sat in 0.552014 secs.
[08/03 16:28:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3596.758057    3393.651855 -10805.544678  3596.758057    0.037842  3393.651855   0.000000  203.106201      203.106201
1    3596.758057    3393.652100 -10805.544678  3596.758057    0.019043  3393.652100   0.000000  203.105957      103.106201
2    3696.758057    3494.613770 -10805.544678  3696.758057  303.105957  3494.613770   0.000000  202.144287      103.106201
3    3796.757812    3593.651855 -10805.544678  3796.757812  302.144043  3593.651855   0.000000  203.105957      103.105957
4    3896.795898    3793.651855 -10805.544678  3896.795898  303.144043  3793.651855   0.019043  103.125000      103.125000
5    3896.795898    3890.526855 -10805.544678  3896.795898    0.500000  3890.526855   0.019043    6.250000        3.125000
6    3896.795898    3893.651855 -10708.669678  3896.795898    1.500000  3893.651855   0.019043    3.125000        0.000000
7    3896.795898    3896.776855 -10611.794678  3896.795898    2.500000  3896.776855   0.019043    0.000000       -3.125000
8    3900.295898    3899.902100 -10611.794678  3900.295898    3.500000  3899.902100   0.019043    0.374756      -99.625000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=825/8.[0m
[08/03 16:28:58]  --------------------------------------------------------------------------------
[08/03 16:28:58]  Iteration: 136 (40 solution, 95 counterexamples)
[08/03 16:29:13]  Generator returned sat in 13.011737 secs.
[08/03 16:29:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:29:13]  Verifer returned unsat in 0.052522 secs.
[08/03 16:29:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:29:13]  --------------------------------------------------------------------------------
[08/03 16:29:13]  Iteration: 137 (41 solution, 95 counterexamples)
[08/03 16:29:17]  Generator returned sat in 2.936540 secs.
[08/03 16:29:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:29:18]  Improved gap from 0 to 17.1875
[08/03 16:29:19]  Improved number of small numbers from 28 to 35 out of a max of 101
[08/03 16:29:19]  Verifer returned sat in 1.244387 secs.
[08/03 16:29:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0    3187.305908    3187.296671 -10775.866638  3187.305908    0.037598  3187.296671   0.000000   0.009237       -6.269144
1    3318.758829    3293.575052 -10775.866638  3318.758829  131.462158  3293.575052   0.009460  25.174316       25.174316
2    3390.603434    3390.584513 -10775.866638  3390.603434   97.018921  3390.584513   0.009460   0.009460       -2.981079
3    3518.768290    3493.575052 -10775.866638  3518.768290  128.174316  3493.575052   0.018921  25.174316       25.174316
4    3620.268290    3593.575052 -10775.866638  3620.268290  126.674316  3593.575052   1.518921  25.174316       25.174316
5    3720.268290    3662.790934 -10775.866638  3720.268290  125.174316  3662.790934   1.518921  55.958435       25.174316
6    3727.897013    3693.575195 -10708.669678  3727.897013   63.587158  3693.575195   1.518921  32.802897        0.000000
7    3727.897013    3726.378092 -10625.857178  3727.897013   32.793579  3726.378092   1.518921   0.000000      -17.187500
8    3745.293802    3743.565674 -10625.857178  3745.293802   17.396790  3743.565674   1.518921   0.209208      -99.790710
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=51557/2048.[0m
[08/03 16:29:19]  --------------------------------------------------------------------------------
[08/03 16:29:19]  Iteration: 138 (41 solution, 96 counterexamples)
[08/03 16:29:24]  Generator returned sat in 3.676971 secs.
[08/03 16:29:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:29:24]  Verifer returned unsat in 0.082750 secs.
[08/03 16:29:24]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:29:24]  --------------------------------------------------------------------------------
[08/03 16:29:24]  Iteration: 139 (42 solution, 96 counterexamples)
[08/03 16:29:45]  Generator returned sat in 19.225049 secs.
[08/03 16:29:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:29:45]  Improved gap from 77/16384 to 100
[08/03 16:29:45]  Improved number of small numbers from 36 to 101 out of a max of 101
[08/03 16:29:45]  Verifer returned sat in 0.338083 secs.
[08/03 16:29:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3268.268066    3168.268311 -10850.560059  3268.268066    0.037598  3168.268311   0.000000   99.999756       -0.000244
1    3268.268311    3268.268311 -10850.560059  3268.268311  100.000000  3268.268311   0.000000    0.000000     -100.000000
2    3468.268066    3368.268311 -10850.560059  3468.268066  199.999756  3368.268311   0.000000   99.999756       -0.000244
3    3620.268311    3468.268311 -10850.560059  3620.268311  252.000000  3468.268311   0.004639  151.995361       51.995361
4    3620.268311    3620.259033 -10850.560059  3620.268311  148.000000  3620.259033   0.004639    0.004639      -48.004639
5    3770.263672    3768.268311 -10850.560059  3770.263672  150.000000  3768.268311   0.004639    1.990723        1.990723
6    3920.272949    3837.601807 -10850.560059  3920.272949  152.000000  3837.601807   0.009277   82.661865       51.995361
7    4020.277832    3954.931885 -10850.560059  4020.277832  182.666748  3954.931885   0.014160   65.331787       51.995361
8    4120.282471    3968.268311 -10850.560059  4120.282471  165.336426  3968.268311   0.018799  151.995361       51.995361
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=212973/4096.[0m
[08/03 16:29:46]  --------------------------------------------------------------------------------
[08/03 16:29:46]  Iteration: 140 (42 solution, 97 counterexamples)
[08/03 16:29:55]  Generator returned sat in 8.277149 secs.
[08/03 16:29:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:29:56]  Improved gap from 77/8192 to 0
[08/03 16:29:56]  Improved number of small numbers from 54 to 101 out of a max of 101
[08/03 16:29:56]  Verifer returned sat in 0.551281 secs.
[08/03 16:29:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3614.346436    3514.346680 -11097.172852  3614.346436    0.037354  3514.346680   0.000000   99.999756       -0.000244
1    3614.346680    3614.346680 -11097.172852  3614.346680  100.000000  3614.346680   0.000000    0.000000     -100.000000
2    3814.346436    3814.346436 -11097.172852  3814.346436  199.999756  3814.346436   0.000000    0.000000       -0.000244
3    3864.808838    3864.799561 -11050.522461  3864.808838   50.462402  3864.799561   0.000000    0.009277       -2.887451
4    3967.724365    3917.743408 -11050.522461  3967.724365  102.924805  3917.743408   0.009277   49.971680        0.018799
5    3967.724365    3967.705811 -10950.541260  3967.724365   49.962402  3967.705811   0.009277    0.009277        0.000000
6    4069.639893    3967.715088 -10950.541260  4069.639893  101.924805  3967.715088   1.906006  100.018799        0.018799
7    4069.639893    4067.724365 -10850.560059  4069.639893   49.462402  4067.724365   1.906006    0.009521        0.000000
8    4170.555176    4067.733887 -10850.560059  4170.555176  100.924805  4067.733887   2.802490  100.018799        0.018799
high_util=False, low_loss=False, ramp_up=False, ramp_down=True, total_losses=3, buffer=77/4096.[0m
[08/03 16:29:56]  --------------------------------------------------------------------------------
[08/03 16:29:56]  Iteration: 141 (42 solution, 98 counterexamples)
[08/03 16:30:04]  Generator returned sat in 6.017779 secs.
[08/03 16:30:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:30:04]  Improved gap from 153/8192 to 18.75
[08/03 16:30:05]  Improved number of small numbers from 63 to 101 out of a max of 101
[08/03 16:30:05]  Verifer returned sat in 0.868777 secs.
[08/03 16:30:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3345.338379    3345.338135 -10950.541260  3345.338379    0.037354  3345.338135       0.00    0.000244      -99.999756
1    3445.338135    3445.338135 -10950.541260  3445.338135  100.000000  3445.338135       0.00    0.000000     -100.000000
2    3776.550781    3645.338135 -10950.541260  3776.550781  331.212646  3645.338135       0.00  131.212646      131.212646
3    3885.838135    3736.550781 -10950.541260  3885.838135  240.500000  3736.550781       9.25  140.037354      131.250000
4    3985.800781    3845.338135 -10950.541260  3985.800781  240.000000  3845.338135       9.25  131.212646      131.212646
5    3985.800781    3913.550781 -10950.541260  3985.800781  122.000000  3913.550781       9.25   63.000000       31.212646
6    3985.800781    3945.338379 -10881.753906  3985.800781   63.000000  3945.338379       9.25   31.212402        0.000000
7    3988.088379    3976.551025 -10800.504150  3988.088379   33.500000  3976.551025       9.25    2.287354      -16.462646
8    4004.551025    3995.301025 -10800.504150  4004.551025   18.750000  3995.301025       9.25    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=525/4.[0m
[08/03 16:30:05]  --------------------------------------------------------------------------------
[08/03 16:30:05]  Iteration: 142 (42 solution, 99 counterexamples)
[08/03 16:30:13]  Generator returned sat in 7.016359 secs.
[08/03 16:30:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:30:14]  Improved gap from 153/16384 to 1.5625
[08/03 16:30:14]  Improved number of small numbers from 50 to 101 out of a max of 101
[08/03 16:30:14]  Verifer returned sat in 0.307750 secs.
[08/03 16:30:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3345.347656    3345.338135 -10996.932373  3345.347656    0.037109  3345.338135   0.000000    0.009521      -99.990479
1    3545.366211    3445.338135 -10996.932373  3545.366211  200.028076  3445.338135   0.009277  100.018799        0.018799
2    3644.856934    3644.838135 -10996.932373  3644.856934  199.509521  3644.838135   0.009277    0.009521       -0.490479
3    3745.875488    3745.338135 -10996.932373  3745.875488  101.028076  3745.338135   0.518555    0.018799        0.018799
4    3846.384766    3845.338135 -10996.932373  3846.384766  100.528076  3845.338135   1.027832    0.018799        0.018799
5    3946.394043    3845.338135 -10996.932373  3946.394043  100.028076  3845.338135   1.037109  100.018799        0.018799
6    3946.394043    3945.347656 -10898.504395  3946.394043   99.528076  3945.347656   1.037109    0.009277       -1.553223
7    3948.384766    3947.338135 -10800.932129  3948.384766    2.000000  3947.338135   1.037109    0.009521       -1.990234
8    3950.375244    3949.338135 -10800.932129  3950.375244    2.000000  3949.338135   1.037109    0.000000      -99.999756
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=77/4096.[0m
[08/03 16:30:14]  --------------------------------------------------------------------------------
[08/03 16:30:14]  Iteration: 143 (42 solution, 100 counterexamples)
[08/03 16:30:19]  Generator returned sat in 3.052085 secs.
[08/03 16:30:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:30:19]  Improved gap from 8211/8192 to 100
[08/03 16:30:19]  Improved number of small numbers from 37 to 101 out of a max of 101
[08/03 16:30:19]  Verifer returned sat in 0.274192 secs.
[08/03 16:30:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3346.380127    3346.379150 -10997.973389  3346.380127    0.036865  3346.379150   0.000000    0.000977      -99.999023
1    3546.390625    3446.379150 -10997.973389  3546.390625  200.011475  3446.379150   0.009277  100.002197        0.002197
2    3646.389404    3644.879150 -10997.973389  3646.389404  200.000977  3644.879150   0.009277    1.500977        0.000977
3    3746.391846    3745.379150 -10997.973389  3746.391846  101.503418  3745.379150   0.010498    1.002197        0.002197
4    3846.393066    3845.878906 -10997.973389  3846.393066  101.003418  3845.878906   0.011719    0.502441        0.002197
5    3946.394043    3946.379150 -10997.973389  3946.394043  100.503418  3946.379150   0.012695    0.002197        0.002197
6    4046.395264    3952.383545 -10997.973389  4046.395264  100.003418  3952.383545   0.013916   93.997803        0.002197
7    4051.900879    4051.885742 -10997.973389  4051.900879   99.503418  4051.885742   0.013916    0.001221      -94.492188
8    4152.903076    4146.379150 -10997.973389  4152.903076  101.003418  4146.379150   0.013916    6.510010      -93.489990
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=9/4096.[0m
[08/03 16:30:19]  --------------------------------------------------------------------------------
[08/03 16:30:19]  Iteration: 144 (42 solution, 101 counterexamples)
[08/03 16:30:28]  Generator returned sat in 7.230774 secs.
[08/03 16:30:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:30:28]  Improved number of small numbers from 44 to 100 out of a max of 100
[08/03 16:30:28]  Verifer returned sat in 0.389743 secs.
[08/03 16:30:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3346.381104    3346.380859 -10997.973633  3346.381104    0.036865  3346.380859   0.000000    0.000244      -99.999756
1    3546.390625    3446.380859 -10997.973633  3546.390625  200.009766  3446.380859   0.009277  100.000488        0.000488
2    3646.389404    3641.881592 -10997.973633  3646.389404  199.999268  3641.881592   0.009277    4.498535       -0.000732
3    3746.391846    3743.381592 -10997.973633  3746.391846  104.500977  3743.381592   0.010498    2.999756        0.000488
4    3846.393066    3844.880615 -10997.973633  3846.393066  103.000977  3844.880615   0.011719    1.500732        0.000488
5    3946.393311    3946.380615 -10997.973633  3946.393311  101.500977  3946.380615   0.011963    0.000732        0.000488
6    4046.393555    3956.381836 -10997.973633  4046.393555  100.000977  3956.381836   0.012207   89.999512        0.000488
7    4054.895020    4054.882568 -10997.973633  4054.895020   98.500977  4054.882568   0.012207    0.000244      -91.498047
8    4157.895752    4146.380859 -10997.973389  4157.895752  103.000977  4146.380859   0.012207   11.502686      -88.497070
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=1/2048.[0m
[08/03 16:30:29]  --------------------------------------------------------------------------------
[08/03 16:30:29]  Iteration: 145 (42 solution, 102 counterexamples)
[08/03 16:30:43]  Generator returned sat in 12.426682 secs.
[08/03 16:30:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:30:43]  Improved gap from 151/16384 to 1.5625
[08/03 16:30:43]  Improved number of small numbers from 48 to 101 out of a max of 101
[08/03 16:30:43]  Verifer returned sat in 0.356193 secs.
[08/03 16:30:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3543.347168    3343.347168 -11194.402100  3543.347168    0.036621  3343.347168   0.000000  200.000000      100.000000
1    3543.347168    3443.347168 -11194.402100  3543.347168    0.009033  3443.347168   0.000000  100.000000        0.000000
2    3643.374756    3643.347168 -11194.402100  3643.374756  200.027588  3643.347168   0.009277    0.018311        0.018311
3    3746.384033    3741.846924 -11194.402100  3746.384033  103.027588  3741.846924   3.018555    1.518555        0.018311
4    3846.393066    3843.346924 -11194.402100  3846.393066  101.527588  3843.346924   3.027588    0.018555        0.018311
5    3946.402100    3846.828613 -11194.402100  3946.402100  100.027588  3846.828613   3.036621   96.536865        0.018311
6    3948.392822    3943.347168 -11096.411133  3948.392822   98.527588  3943.347168   3.036621    2.009033        0.000000
7    3948.392822    3945.356201 -10997.973877  3948.392822    2.000000  3945.356201   3.036621    0.000000       -1.562744
8    3950.392822    3947.355957 -10997.973877  3950.392822    2.000000  3947.355957   3.036621    0.000244      -99.562744
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=75/4096.[0m
[08/03 16:30:43]  --------------------------------------------------------------------------------
[08/03 16:30:43]  Iteration: 146 (42 solution, 103 counterexamples)
[08/03 16:30:49]  Generator returned sat in 4.081249 secs.
[08/03 16:30:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:30:49]  Improved gap from 6401/4096 to 1.5625
[08/03 16:30:50]  Improved number of small numbers from 45 to 101 out of a max of 101
[08/03 16:30:50]  Verifer returned sat in 0.518215 secs.
[08/03 16:30:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    3434.416504    3334.416504 -11292.848877  3434.416504    0.036377  3334.416504    0.000000  100.000000       99.999756
1    3434.416504    3334.416748 -11292.848877  3434.416504    0.009033  3334.416748    0.000000   99.999756       -0.000244
2    3643.374756    3534.416748 -11292.848877  3643.374756  308.958008  3534.416748  108.953613    0.004395        0.004395
3    3745.376953    3634.416748 -11292.848877  3745.376953  102.006592  3634.416748  110.955811    0.004395        0.004395
4    3845.379150    3636.412109 -11292.848877  3845.379150  100.006592  3636.412109  110.958008   98.009033        0.004395
5    3845.379150    3734.418945 -11194.848877  3845.379150   98.006592  3734.418945  110.958008    0.002197       -1.995605
6    3847.376953    3736.416748 -11096.411377  3847.376953    2.000000  3736.416748  110.958008    0.002197       -1.560303
7    3849.374756    3737.979248 -10997.973877  3849.374756    2.000000  3737.979248  110.958008    0.437500       -1.125000
8    3850.937256    3739.541748 -10899.536621  3850.937256    2.000000  3739.541748  110.958008    0.437500       -1.125244
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=9/2048.[0m
[08/03 16:30:50]  --------------------------------------------------------------------------------
[08/03 16:30:50]  Iteration: 147 (42 solution, 104 counterexamples)
[08/03 16:31:04]  Generator returned sat in 12.451391 secs.
[08/03 16:31:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:31:04]  Verifer returned unsat in 0.078073 secs.
[08/03 16:31:04]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:31:04]  --------------------------------------------------------------------------------
[08/03 16:31:04]  Iteration: 148 (43 solution, 104 counterexamples)
[08/03 16:31:10]  Generator returned sat in 4.121326 secs.
[08/03 16:31:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:31:10]  Improved gap from 0 to 1.5625
[08/03 16:31:10]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/03 16:31:10]  Verifer returned sat in 0.314329 secs.
[08/03 16:31:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3983.391846    3783.389160 -11292.848877  3983.391846  0.036133  3783.389160        0.0  200.002686      200.002441
1    3983.391846    3783.389404 -11292.848877  3983.391846  0.008789  3783.389404        0.0  200.002441      100.002441
2    3983.391846    3883.389404 -11292.848877  3983.391846  0.002197  3883.389404        0.0  100.002441        0.002441
3    3983.391846    3983.389404 -11194.411377  3983.391846  0.002441  3983.389404        0.0    0.002441       -1.560059
4    3985.389404    3984.951904 -11095.973877  3985.389404  2.000000  3984.951904        0.0    0.437500       -1.125000
5    3986.951904    3986.514404 -10997.536377  3986.951904  2.000000  3986.514404        0.0    0.437500       -1.125000
6    3988.514404    3988.511963 -10899.533936  3988.514404  2.000000  3988.511963        0.0    0.002441       -1.560059
7    3990.511963    3990.074463 -10801.096680  3990.511963  2.000000  3990.074463        0.0    0.437500       -1.125244
8    3992.074463    3991.637207 -10801.096436  3992.074463  2.000000  3991.637207        0.0    0.437256      -99.562500
high_util=False, low_loss=True, ramp_up=False, ramp_down=False, total_losses=0, buffer=409619/4096.[0m
[08/03 16:31:10]  --------------------------------------------------------------------------------
[08/03 16:31:10]  Iteration: 149 (43 solution, 105 counterexamples)
[08/03 16:31:18]  Generator returned sat in 6.253057 secs.
[08/03 16:31:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:31:19]  Improved gap from 72839/122880 to 23.4375
[08/03 16:31:19]  Improved number of small numbers from 62 to 95 out of a max of 101
[08/03 16:31:19]  Verifer returned sat in 0.871999 secs.
[08/03 16:31:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    2787.317383    2687.308594 -11095.974121  2787.317383    0.036133  2687.308594    0.000000  100.008789        0.008789
1    2787.317383    2787.308594 -11095.974121  2787.317383    0.009033  2787.308594    0.000000    0.008789      -99.991211
2    2987.335693    2887.308594 -11095.974121  2987.335693  200.027100  2887.308594    0.009033  100.018066        0.018066
3    3648.173096    2987.308594 -11095.974121  3648.173096  760.855469  2987.308594  560.846436  100.018066        0.018066
4    3929.082764    3187.308594 -11095.974121  3929.082764  380.927734  3187.308594  741.756104    0.018066        0.018066
5    4120.028564    3187.308594 -11095.974121  4120.028564  190.963867  3187.308594  832.701904  100.018066        0.018066
6    4120.028564    3287.308594 -11019.411621  4120.028564   95.981934  3287.308594  832.701904    0.018066      -23.419434
7    4170.001465    3313.861999 -10945.965088  4170.001465   49.990967  3313.861999  832.701904   23.437562        0.000000
8    4173.559386    3337.299561 -10945.964844  4173.559386   26.995483  3337.299561  832.701904    3.557922      -96.441834
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=37/2048.[0m
[08/03 16:31:19]  --------------------------------------------------------------------------------
[08/03 16:31:19]  Iteration: 150 (43 solution, 106 counterexamples)
[08/03 16:31:40]  Generator returned sat in 18.707661 secs.
[08/03 16:31:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:31:40]  Improved gap from 0 to 100
[08/03 16:31:41]  Improved number of small numbers from 48 to 58 out of a max of 101
[08/03 16:31:41]  Verifer returned sat in 1.116793 secs.
[08/03 16:31:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2581.098145    2452.943188 -11095.973877  2581.098145    0.035889  2452.943188   0.000000  128.154956      100.000122
1    2581.098145    2481.098145 -11095.973877  2581.098145    0.009033  2481.098145   0.000000  100.000000        0.000122
2    2581.107178    2581.098022 -11095.973877  2581.107178  100.009033  2581.098022   0.000000    0.009155      -99.990845
3    2781.107056    2739.397811 -11095.973877  2781.107056  200.009033  2739.397811   0.000000   41.709245        0.009033
4    2881.125122    2881.098022 -11095.973877  2881.125122  141.727311  2881.098022   0.009033    0.018066        0.018066
5    2949.970711    2949.952645 -11095.973877  2949.970711   68.863656  2949.952645   0.009033    0.009033      -31.136344
6    3132.888989    3078.098022 -11095.973877  3132.888989  182.927311  3078.098022  51.772900    3.018066        0.018066
7    3219.334578    3167.552645 -11095.973877  3219.334578   89.463656  3167.552645  51.772900    0.009033      -13.536344
8    3361.052856    3181.098145 -11095.973877  3361.052856  141.727311  3181.098145  79.936768  100.017944        0.018066
high_util=True, low_loss=False, ramp_up=False, ramp_down=False, total_losses=3, buffer=37/2048.[0m
[08/03 16:31:41]  --------------------------------------------------------------------------------
[08/03 16:31:41]  Iteration: 151 (43 solution, 107 counterexamples)
[08/03 16:31:49]  Generator returned sat in 6.543349 secs.
[08/03 16:31:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:31:50]  Improved gap from 0 to 34.375
[08/03 16:31:51]  Improved number of small numbers from 23 to 34 out of a max of 101
[08/03 16:31:51]  Verifer returned sat in 1.752970 secs.
[08/03 16:31:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2571.694092    2470.229807 -11085.105662  2571.694092    0.035645  2470.229807   0.000000  101.464285      101.464285
1    2571.694092    2570.229807 -11085.105662  2571.694092    0.018066  2570.229807   0.000000    1.464285        1.464285
2    2671.729807    2670.229807 -11085.105662  2671.729807  101.500000  2670.229807   0.017944    1.482056        1.482056
3    2769.676584    2769.640696 -11085.105662  2769.676584   99.428833  2769.640696   0.017944    0.017944       -0.571167
4    2967.578501    2870.229807 -11085.105662  2967.578501  197.919861  2870.229807  95.866638    1.482056        1.482056
5    2967.596445    2870.229807 -11019.480662  2967.596445    1.500000  2870.229807  95.866638    1.500000      -32.875000
6    3065.346445    2904.604807 -10987.355469  3065.346445   99.250000  2904.604807  95.866638   64.875000       -2.999807
7    3116.078501    2972.479807 -10935.087717  3116.078501  115.607056  2972.479807  95.866638   47.732056        0.000000
8    3175.774973    3020.211914 -10935.087646  3175.774973  107.428528  3020.211914  95.866638   59.696421      -40.303457
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=12141/8192.[0m
[08/03 16:31:52]  --------------------------------------------------------------------------------
[08/03 16:31:52]  Iteration: 152 (43 solution, 108 counterexamples)
[08/03 16:31:56]  Generator returned sat in 3.380888 secs.
[08/03 16:31:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/03 16:31:57]  Improved gap from 0 to 23.4375
[08/03 16:31:57]  Improved number of small numbers from 91 to 101 out of a max of 101
[08/03 16:31:57]  Verifer returned sat in 0.642704 secs.
[08/03 16:31:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    1791.765137    1668.327637 -11266.554199  1791.765137    0.035400  1668.327637    0.000000  123.437500      123.437500
1    1791.782959    1691.452637 -11266.554199  1791.782959  123.455322  1691.452637    0.017822  100.312500       23.437500
2    1891.765137    1774.541992 -11266.554199  1891.765137  200.294678  1774.541992    0.017822  117.205322       23.419678
3    1968.363281    1968.327637 -11266.554199  1968.363281  193.803467  1968.327637    0.017822    0.017822        0.017822
4    2310.648926    2068.327637 -11266.554199  2310.648926  342.303467  2068.327637  218.883789   23.437500       23.437500
5    2310.648926    2068.327637 -11189.991699  2310.648926    1.500000  2068.327637  218.883789   23.437500        0.000000
6    2434.104248    2191.765137 -11189.991699  2434.104248  146.892822  2191.765137  218.901611   23.437500       23.437500
7    2434.104248    2191.765137 -11113.429199  2434.104248    1.500000  2191.765137  218.901611   23.437500        0.000000
8    2472.385498    2215.202637 -11113.429199  2472.385498   61.718750  2215.202637  218.901611   38.281250      -61.718750
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=375/16.[0m
[08/03 16:31:58]  --------------------------------------------------------------------------------
[08/03 16:31:58]  Iteration: 153 (43 solution, 109 counterexamples)
[08/03 16:32:07]  Generator returned sat in 7.855014 secs.
[08/03 16:32:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:32:07]  Verifer returned unsat in 0.049898 secs.
[08/03 16:32:07]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:32:07]  --------------------------------------------------------------------------------
[08/03 16:32:07]  Iteration: 154 (44 solution, 109 counterexamples)
[08/03 16:32:11]  Generator returned sat in 2.680922 secs.
[08/03 16:32:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:32:12]  Verifer returned unsat in 0.034636 secs.
[08/03 16:32:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:32:12]  --------------------------------------------------------------------------------
[08/03 16:32:12]  Iteration: 155 (45 solution, 109 counterexamples)
[08/03 16:32:15]  Generator returned sat in 2.054332 secs.
[08/03 16:32:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:32:15]  Verifer returned unsat in 0.040757 secs.
[08/03 16:32:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:32:15]  --------------------------------------------------------------------------------
[08/03 16:32:15]  Iteration: 156 (46 solution, 109 counterexamples)
[08/03 16:32:20]  Generator returned sat in 3.027865 secs.
[08/03 16:32:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:32:20]  Improved gap from 145/16384 to 0
[08/03 16:32:21]  Improved number of small numbers from 54 to 101 out of a max of 101
[08/03 16:32:21]  Verifer returned sat in 0.386287 secs.
[08/03 16:32:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    1768.327393    1668.327393 -11266.554443  1768.327393    0.035156  1668.327393    0.000000  100.000000       99.999756
1    1768.327393    1691.452393 -11266.554199  1768.327393   99.999756  1691.452393    0.000000   76.875000        0.000000
2    1768.327393    1768.327393 -11168.072998  1768.327393    0.009033  1768.327393    0.000000    0.000000       -1.518799
3    1977.185791    1866.943848 -11168.072998  1977.185791  208.858398  1866.943848  107.321777    2.920166        0.017822
4    2077.194824    1919.890869 -11168.072998  2077.194824  102.929199  1919.890869  107.330811   49.973145        0.017822
5    2077.194824    1969.855225 -11068.090820  2077.194824   49.964600  1969.855225  107.330811    0.008789        0.000000
6    2178.615234    1969.864258 -11068.090820  2178.615234  101.429199  1969.864258  108.733398  100.017578        0.017822
7    2178.615234    2069.872803 -10968.108643  2178.615234   49.214600  2069.872803  108.733398    0.009033        0.000000
8    2278.535400    2069.882080 -10968.028809  2278.535400   99.929199  2069.882080  108.733398   99.919922        0.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=73/4096.[0m
[08/03 16:32:21]  --------------------------------------------------------------------------------
[08/03 16:32:21]  Iteration: 157 (46 solution, 110 counterexamples)
[08/03 16:32:49]  Generator returned sat in 26.582628 secs.
[08/03 16:32:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:32:49]  Verifer returned unsat in 0.078854 secs.
[08/03 16:32:49]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:32:49]  --------------------------------------------------------------------------------
[08/03 16:32:49]  Iteration: 158 (47 solution, 110 counterexamples)
[08/03 16:32:59]  Generator returned sat in 8.500113 secs.
[08/03 16:32:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:33:00]  Improved gap from 1/800 to 32.8125
[08/03 16:33:01]  Improved number of small numbers from 42 to 55 out of a max of 101
[08/03 16:33:01]  Verifer returned sat in 1.320918 secs.
[08/03 16:33:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t
0    1764.140625    1639.632113 -11237.858919  1764.140625    0.035156  1639.632113   24.508545  99.999967       99.999967
1    1764.140625    1739.632080 -11237.858919  1764.140625    0.002686  1739.632080   24.508545   0.000000       -0.000033
2    1864.150635    1839.632113 -11237.858919  1864.150635  100.010010  1839.632113   24.508545   0.009977        0.009977
3    1964.143158    1939.632113 -11237.858919  1964.143158  100.002500  1939.632113   24.508545   0.002500        0.002500
4    2163.641908    2039.632113 -11237.858919  2163.641908  199.501250  2039.632113  123.997295   0.012500        0.012500
5    2163.641908    2039.632113 -11170.671419  2163.641908    0.010000  2039.632113  123.997295   0.012500      -32.800000
6    2263.134408    2072.444613 -11137.364014  2263.134408   99.505000  2072.444613  123.997295  66.692500       -0.000094
7    2312.100658    2156.817113 -11087.856445  2312.100658  115.658750  2156.817113  123.997295  31.286250       -1.526276
8    2396.736283    2189.629639 -11070.965820  2396.736283  115.921875  2189.629639  123.997295  83.109349       -0.000026
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/80.[0m
[08/03 16:33:01]  --------------------------------------------------------------------------------
[08/03 16:33:01]  Iteration: 159 (47 solution, 111 counterexamples)
[08/03 16:33:06]  Generator returned sat in 3.110713 secs.
[08/03 16:33:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/03 16:33:07]  Improved gap from 9/1024 to 32.8125
[08/03 16:33:07]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/03 16:33:07]  Verifer returned sat in 1.182809 secs.
[08/03 16:33:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    1940.262939    1775.550293 -11305.061523  1940.262939    0.035156  1775.550293   0.000000  164.712646      100.499756
1    1940.262939    1939.763184 -11305.061523  1940.262939    0.017578  1939.763184   0.000000    0.499756        0.499756
2    2040.263184    2036.763184 -11305.061523  2040.263184  100.500000  2036.763184   0.000000    3.500000        0.500000
3    2040.263184    2039.763184 -11237.874023  2040.263184    3.482422  2039.763184   0.000000    0.500000      -32.312500
4    2173.110840    2172.575684 -11237.874023  2173.110840  133.347656  2172.575684   0.017578    0.517578        0.517578
5    2173.110840    2172.575684 -11170.686523  2173.110840    0.500000  2172.575684   0.017578    0.517578      -32.294922
6    2240.249512    2205.388184 -11105.530273  2240.249512   67.656250  2205.388184   0.017578   34.843750        0.000000
7    2321.546387    2240.231934 -11087.856445  2321.546387  116.140625  2240.231934   0.017578   81.296875       -1.029297
8    2331.647949    2322.558105 -11087.856201  2331.647949   91.398438  2322.558105   0.017578    9.072266      -90.927490
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=265/512.[0m
[08/03 16:33:07]  --------------------------------------------------------------------------------
[08/03 16:33:07]  Iteration: 160 (47 solution, 112 counterexamples)
[08/03 16:33:24]  Generator returned sat in 14.901585 secs.
[08/03 16:33:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:33:24]  Verifer returned unsat in 0.149917 secs.
[08/03 16:33:24]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:33:24]  --------------------------------------------------------------------------------
[08/03 16:33:24]  Iteration: 161 (48 solution, 112 counterexamples)
[08/03 16:33:29]  Generator returned sat in 3.396030 secs.
[08/03 16:33:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:33:30]  Improved gap from 0 to 23.4375
[08/03 16:33:30]  Improved number of small numbers from 57 to 101 out of a max of 101
[08/03 16:33:30]  Verifer returned sat in 0.543598 secs.
[08/03 16:33:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2211.972412    2211.963867 -11253.187012  2211.972412    0.034912  2211.963867   0.000000    0.008545      -99.991455
1    2411.990234    2311.963867 -11253.187012  2411.990234  200.026367  2311.963867   0.008789  100.017578        0.017578
2    2511.999023    2511.963623 -11253.187012  2511.999023  200.026367  2511.963623   0.017578    0.017822        0.017578
3    2616.007568    2611.963867 -11253.187012  2616.007568  104.026367  2611.963867   4.026123    0.017578        0.017578
4    2718.016357    2711.963867 -11253.187012  2718.016357  102.026367  2711.963867   6.034912    0.017578        0.017578
5    2818.025146    2713.954834 -11253.187012  2818.025146  100.026367  2713.954834   6.043701   98.026611        0.017578
6    2818.025146    2811.963867 -11176.624512  2818.025146   98.026367  2811.963867   6.043701    0.017578      -23.419922
7    2867.520752    2835.401367 -11102.700195  2867.520752   49.513184  2835.401367   6.043701   26.075684        0.000000
8    2867.520752    2861.477051 -11102.700195  2867.520752   25.256592  2861.477051   6.043701    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=9/512.[0m
[08/03 16:33:30]  --------------------------------------------------------------------------------
[08/03 16:33:30]  Iteration: 162 (48 solution, 113 counterexamples)
[08/03 16:33:36]  Generator returned sat in 4.557912 secs.
[08/03 16:33:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:33:37]  Improved gap from 0 to 0
[08/03 16:33:37]  Improved number of small numbers from 59 to 80 out of a max of 101
[08/03 16:33:37]  Verifer returned sat in 0.810082 secs.
[08/03 16:33:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2361.483887    2361.483887 -11353.169434  2361.483887    0.034912  2361.483887     0.0000    0.000000      -99.999902
1    2461.486572    2461.483887 -11353.169434  2461.486572  100.002686  2461.483887     0.0000    0.002686      -99.997217
2    2661.483643    2661.481367 -11353.169434  2661.483643  199.999756  2661.481367     0.0000    0.002275       -0.000146
3    2760.998867    2661.483867 -11352.684570  2760.998867   99.517500  2661.483867     0.0000   99.515000       -0.000059
4    2761.501367    2761.498867 -11253.187012  2761.501367  100.017500  2761.498867     0.0000    0.002500        0.000000
5    2862.016367    2761.501465 -11253.187012  2862.016367  100.517500  2761.501465     0.0025  100.512402        0.512500
6    2862.016367    2861.501465 -11153.699512  2862.016367    0.010000  2861.501465     0.0025    0.512402        0.000000
7    2862.016367    2862.013867 -11053.699512  2862.016367    0.510000  2862.013867     0.0025    0.000000        0.000000
8    2863.026367    2862.013916 -11053.699463  2863.026367    1.010000  2862.013916     0.0025    1.009951      -98.989951
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=41/80.[0m
[08/03 16:33:38]  --------------------------------------------------------------------------------
[08/03 16:33:38]  Iteration: 163 (48 solution, 114 counterexamples)
[08/03 16:33:53]  Generator returned sat in 13.456458 secs.
[08/03 16:33:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:33:53]  Improved gap from 0 to 3.125
[08/03 16:33:53]  Improved number of small numbers from 41 to 101 out of a max of 101
[08/03 16:33:53]  Verifer returned sat in 0.350362 secs.
[08/03 16:33:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    2457.908691    2357.891357 -11344.324707  2457.908691    0.034668  2357.891357   0.000000  100.017334        0.017334
1    2457.908691    2457.891357 -11344.324707  2457.908691    0.017578  2457.891357   0.000000    0.017334      -99.982666
2    2760.999023    2558.339111 -11344.324707  2760.999023  303.107666  2558.339111   0.000000  202.659912      103.107666
3    2760.999023    2757.891357 -11344.324707  2760.999023  202.642334  2757.891357   0.000000    3.107666        3.107666
4    2961.033691    2857.891113 -11344.324707  2961.033691  203.142334  2857.891113   0.017334  103.125244      103.125000
5    2961.033691    2857.891357 -11344.324707  2961.033691    2.000000  2857.891357   0.017334  103.125000        3.125000
6    2961.033691    2957.891357 -11247.449707  2961.033691    2.500000  2957.891357   0.017334    3.125000        0.000000
7    2961.033691    2961.016357 -11150.574707  2961.033691    3.000000  2961.016357   0.017334    0.000000       -3.125000
8    2964.533691    2964.141357 -11053.699707  2964.533691    3.500000  2964.141357   0.017334    0.375000       -2.750000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=825/8.[0m
[08/03 16:33:54]  --------------------------------------------------------------------------------
[08/03 16:33:54]  Iteration: 164 (48 solution, 115 counterexamples)
[08/03 16:34:04]  Generator returned sat in 9.192231 secs.
[08/03 16:34:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:34:05]  Improved gap from 0 to 17.1875
[08/03 16:34:05]  Improved number of small numbers from 67 to 101 out of a max of 101
[08/03 16:34:05]  Verifer returned sat in 0.662022 secs.
[08/03 16:34:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3096.639648    2996.622559 -11344.324951  3096.639648    0.034424  2996.622559    0.00000  100.017090        0.017090
1    3096.639648    3096.622559 -11344.324951  3096.639648    0.017334  3096.622559    0.00000    0.017090      -99.982910
2    3251.083984    3251.066650 -11344.324951  3251.083984  154.461426  3251.066650    0.00000    0.017334      -45.538574
3    3511.566650    3351.532227 -11344.324951  3511.566650  260.500000  3351.532227    0.01709  160.017334      114.927002
4    3611.549316    3481.014893 -11344.324951  3611.549316  260.000000  3481.014893    0.01709  130.517334      114.909668
5    3611.549316    3548.060059 -11344.324951  3611.549316  130.500000  3548.060059    0.01709   63.472168       14.909668
6    3613.827148    3596.622559 -11261.512451  3613.827148   65.750000  3596.622559    0.01709   17.187500        0.000000
7    3630.014648    3613.810059 -11178.699951  3630.014648   33.375000  3613.810059    0.01709   16.187500       -1.000000
8    3631.014648    3630.997559 -11178.699951  3631.014648   17.187500  3630.997559    0.01709    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=470741/4096.[0m
[08/03 16:34:06]  --------------------------------------------------------------------------------
[08/03 16:34:06]  Iteration: 165 (48 solution, 116 counterexamples)
[08/03 16:34:11]  Generator returned sat in 4.017669 secs.
[08/03 16:34:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:34:12]  Improved gap from 275/16 to 23.4375
[08/03 16:34:13]  Improved number of small numbers from 35 to 53 out of a max of 101
[08/03 16:34:13]  Verifer returned sat in 1.226056 secs.
[08/03 16:34:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0    3407.269287    3407.243652 -11344.325195  3407.269287    0.034180  3407.243652   0.000000   0.025635        0.008209
1    3407.269287    3407.269287 -11344.324951  3407.269287    0.008789  3407.269287   0.000000   0.000000      -99.991547
2    3507.269287    3507.260834 -11344.324951  3507.269287  100.000000  3507.260834   0.000000   0.008453      -99.991547
3    3707.812469    3608.217804 -11344.324951  3707.812469  200.551636  3608.217804   0.534424  99.060242        0.017212
4    3807.803864    3807.260834 -11344.324951  3807.803864  199.051636  3807.260834   0.534424   0.008606        0.008606
5    3907.821075    3808.743652 -11344.324951  3907.821075  100.025818  3808.743652   0.543030  98.534393        0.017212
6    3907.821075    3907.260834 -11267.762451  3907.821075   98.525818  3907.260834   0.543030   0.017212      -23.420288
7    3957.566772    3930.698486 -11194.087860  3957.566772   49.762909  3930.698486   0.543030  26.325256        0.000000
8    3957.566772    3957.023743 -11194.087646  3957.566772   25.381454  3957.023743   0.543030   0.000000      -99.999786
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=141/8192.[0m
[08/03 16:34:13]  --------------------------------------------------------------------------------
[08/03 16:34:13]  Iteration: 166 (48 solution, 117 counterexamples)
[08/03 16:34:32]  Generator returned sat in 17.389183 secs.
[08/03 16:34:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:34:32]  Improved gap from 35/4096 to 100
[08/03 16:34:33]  Improved number of small numbers from 44 to 101 out of a max of 101
[08/03 16:34:33]  Verifer returned sat in 0.549297 secs.
[08/03 16:34:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3082.792725    3082.775635 -11344.325195  3082.792725    0.033936  3082.775635   0.000000    0.017090        0.017090
1    3182.792480    3082.775635 -11344.325195  3182.792480  100.016846  3082.775635   0.000000  100.016846        0.016846
2    3182.792480    3182.775635 -11344.325195  3182.792480  100.000000  3182.775635   0.000000    0.016846      -99.983154
3    3382.792725    3382.775635 -11344.325195  3382.792725  200.017090  3382.775635   0.000000    0.017090        0.017090
4    3530.775635    3468.733154 -11344.325195  3530.775635  148.000000  3468.733154  12.356445   49.686035       35.643555
5    3553.589600    3541.216064 -11344.325195  3553.589600   72.500000  3541.216064  12.356445    0.017090      -41.542480
6    3730.792725    3682.775391 -11344.325195  3730.792725  177.220215  3682.775391  12.373535   35.643799       35.643555
7    3782.259033    3769.868408 -11344.325195  3782.259033   87.110107  3769.868408  12.373535    0.017090      -12.890137
8    3930.809570    3782.775635 -11344.325195  3930.809570  148.567627  3782.775635  12.390381  135.643555       35.643555
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=36499/1024.[0m
[08/03 16:34:33]  --------------------------------------------------------------------------------
[08/03 16:34:33]  Iteration: 167 (48 solution, 118 counterexamples)
[08/03 16:34:45]  Generator returned sat in 10.471921 secs.
[08/03 16:34:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:34:46]  Improved gap from 1/600 to 23.4375
[08/03 16:34:46]  Improved number of small numbers from 84 to 85 out of a max of 101
[08/03 16:34:46]  Verifer returned sat in 0.854683 secs.
[08/03 16:34:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3182.775391    3159.338135 -11420.887695  3182.775391    0.033936  3159.338135    0.00000   23.437256       23.437256
1    3182.775391    3159.338135 -11344.325195  3182.775391    0.001465  3159.338135    0.00000   23.437256       -0.000244
2    3306.214385    3182.775635 -11344.325195  3306.214385  146.876250  3182.775635    0.00125  123.437500       23.437500
3    3306.214385    3306.211885 -11344.325195  3306.214385   85.710417  3306.211885    0.00125    0.001250      -76.562500
4    3506.215635    3482.775635 -11344.325195  3506.215635  200.002500  3482.775635    0.00250   23.437500       23.437500
5    3506.215635    3482.775635 -11267.762695  3506.215635    0.010000  3482.775635    0.00250   23.437500        0.000000
6    3630.793135    3506.213135 -11267.762695  3630.793135  148.015000  3506.213135    1.14250  123.437500       23.437500
7    3630.793135    3606.213135 -11191.200195  3630.793135    0.010000  3606.213135    1.14250   23.437500        0.000000
8    3667.089385    3629.650635 -11127.496582  3667.089385   59.733750  3629.650635    1.14250   36.296250       -0.000137
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=375/16.[0m
[08/03 16:34:46]  --------------------------------------------------------------------------------
[08/03 16:34:46]  Iteration: 168 (48 solution, 119 counterexamples)
[08/03 16:34:54]  Generator returned sat in 5.724079 secs.
[08/03 16:34:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:34:54]  Improved gap from 3/8192 to 23.4375
[08/03 16:34:55]  Improved number of small numbers from 38 to 101 out of a max of 101
[08/03 16:34:55]  Verifer returned sat in 0.685303 secs.
[08/03 16:34:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3263.654053    3063.653809 -11342.028076  3263.654053    0.033936  3063.653809   0.000000  200.000244      100.000244
1    3263.654053    3263.653809 -11342.028076  3263.654053    0.001221  3263.653809   0.000000    0.000244        0.000244
2    3363.654297    3314.276855 -11342.028076  3363.654297  100.000488  3314.276855   0.000000   49.377441        0.000488
3    3363.654297    3363.653809 -11342.028076  3363.654297   34.667480  3363.653809   0.000000    0.000488      -99.999512
4    3563.655029    3560.529297 -11342.028076  3563.655029  200.001221  3560.529297   0.000488    3.125244        0.000732
5    3563.655029    3563.653809 -11265.465576  3563.655029    0.500000  3563.653809   0.000488    0.000732      -23.436768
6    3687.092773    3686.591797 -11265.465576  3687.092773  123.438477  3686.591797   0.000732    0.500244        0.000732
7    3687.092773    3687.091309 -11188.903076  3687.092773    0.500000  3687.091309   0.000732    0.000732      -23.436768
8    3749.123047    3710.529053 -11127.496582  3749.123047   62.031006  3710.529053   0.000732   38.593262        0.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=3/4096.[0m
[08/03 16:34:55]  --------------------------------------------------------------------------------
[08/03 16:34:55]  Iteration: 169 (48 solution, 120 counterexamples)
[08/03 16:35:02]  Generator returned sat in 4.891852 secs.
[08/03 16:35:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:35:02]  Improved gap from 375/16 to 23.4375
[08/03 16:35:03]  Improved number of small numbers from 33 to 101 out of a max of 101
[08/03 16:35:03]  Verifer returned sat in 0.753364 secs.
[08/03 16:35:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    3194.047607    2994.039307 -11357.084473  3194.047607    0.033691  2994.039307   0.000000  200.008301      100.008545
1    3194.047607    3194.039062 -11357.084473  3194.047607    0.008301  3194.039062   0.000000    0.008545        0.008545
2    3278.982666    3230.056885 -11342.028076  3278.982666   84.943604  3230.056885   0.000000   48.925781        0.000000
3    3278.982666    3278.982666 -11342.028076  3278.982666   29.776855  3278.982666   0.000000    0.000000     -100.000000
4    3479.008057    3475.866211 -11342.028076  3479.008057  200.025391  3475.866211   0.008545    3.133301        0.016846
5    3479.008057    3478.982666 -11265.465820  3479.008057    0.500000  3478.982666   0.008545    0.016846      -23.420898
6    3602.454102    3502.420410 -11265.465820  3602.454102  123.462891  3502.420410   0.016846  100.016846        0.016846
7    3602.454102    3602.420410 -11188.903320  3602.454102    0.500000  3602.420410   0.016846    0.016846      -23.420654
8    3664.714355    3625.857910 -11133.219971  3664.714355   62.277100  3625.857910   0.016846   38.839600       -5.477051
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=69/4096.[0m
[08/03 16:35:03]  --------------------------------------------------------------------------------
[08/03 16:35:03]  Iteration: 170 (48 solution, 121 counterexamples)
[08/03 16:35:10]  Generator returned sat in 5.317527 secs.
[08/03 16:35:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:35:11]  Improved gap from 375/16 to 23.4375
[08/03 16:35:11]  Improved number of small numbers from 24 to 101 out of a max of 101
[08/03 16:35:11]  Verifer returned sat in 0.964588 secs.
[08/03 16:35:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4335.501221    4204.111084 -11204.635742  4335.501221    0.033447  4204.111084   0.000000  131.390137      124.995605
1    4335.509521    4310.505615 -11204.635742  4335.509521  131.398438  4310.505615   0.008301   24.995605       24.995605
2    4435.501465    4310.505615 -11204.635742  4435.501465  124.987549  4310.505615   0.008301  124.987549       24.987549
3    4435.501465    4410.505615 -11204.635742  4435.501465  123.806885  4410.505615   0.008301   24.987549      -75.012451
4    4635.518066    4610.505371 -11204.635742  4635.518066  225.004150  4610.505371   0.016846   24.995850       24.995605
5    4635.518066    4612.063721 -11129.631592  4635.518066    0.500000  4612.063721   0.016846   23.437500       -0.000244
6    4761.359619    4735.501465 -11129.631592  4761.359619  149.279053  4735.501465   0.862549   24.995605       24.995605
7    4761.359619    4735.501465 -11054.627197  4761.359619    0.500000  4735.501465   0.862549   24.995605        0.000000
8    4797.362061    4760.497314 -11054.627197  4797.362061   60.998047  4760.497314   0.862549   36.002197      -63.997559
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=2, buffer=51191/2048.[0m
[08/03 16:35:11]  --------------------------------------------------------------------------------
[08/03 16:35:11]  Iteration: 171 (48 solution, 122 counterexamples)
[08/03 16:35:45]  Generator returned sat in 32.429489 secs.
[08/03 16:35:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:35:46]  Verifer returned unsat in 0.112747 secs.
[08/03 16:35:46]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:35:46]  --------------------------------------------------------------------------------
[08/03 16:35:46]  Iteration: 172 (49 solution, 122 counterexamples)
[08/03 16:35:50]  Generator returned sat in 2.821530 secs.
[08/03 16:35:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:35:51]  Verifer returned unsat in 0.072671 secs.
[08/03 16:35:51]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:35:51]  --------------------------------------------------------------------------------
[08/03 16:35:51]  Iteration: 173 (50 solution, 122 counterexamples)
[08/03 16:36:04]  Generator returned sat in 11.731606 secs.
[08/03 16:36:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:36:04]  Verifer returned unsat in 0.080321 secs.
[08/03 16:36:04]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:36:04]  --------------------------------------------------------------------------------
[08/03 16:36:04]  Iteration: 174 (51 solution, 122 counterexamples)
[08/03 16:36:09]  Generator returned sat in 2.840683 secs.
[08/03 16:36:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:36:09]  Verifer returned unsat in 0.079242 secs.
[08/03 16:36:09]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:36:09]  --------------------------------------------------------------------------------
[08/03 16:36:09]  Iteration: 175 (52 solution, 122 counterexamples)
[08/03 16:36:26]  Generator returned sat in 15.277868 secs.
[08/03 16:36:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:36:27]  Improved gap from 0 to 17.1875
[08/03 16:36:28]  Improved number of small numbers from 24 to 39 out of a max of 101
[08/03 16:36:28]  Verifer returned sat in 1.362158 secs.
[08/03 16:36:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4696.489990    4679.302490 -11236.489746  4696.489990    0.033203  4679.302490   0.000000   17.187500       17.187439
1    4696.489990    4679.302673 -11153.677368  4696.489990    0.016846  4679.302673   0.000000   17.187317       -0.000183
2    4913.976532    4796.490173 -11153.677368  4913.976532  234.673859  4796.490173   0.000000  117.486359      117.486359
3    5061.014832    4850.451874 -11153.677368  5061.014832  264.524658  4850.451874  47.021576  163.541382      117.503082
4    5160.998108    4981.197510 -11153.677368  5160.998108  263.524658  4981.197510  47.021576  132.779022      117.486359
5    5160.998108    5046.612091 -11153.677368  5160.998108  132.762329  5046.612091  47.021576   67.364441       17.486359
6    5161.014832    5096.490173 -11071.180450  5161.014832   67.381165  5096.490173  47.021576   17.503082        0.000000
7    5178.202332    5113.993256 -10988.367950  5178.202332   34.690582  5113.993256  47.021576   17.187500        0.000000
8    5179.360123    5131.180908 -10905.555664  5179.360123   18.345291  5131.180908  47.021576    1.157639      -16.029922
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=3850341/32768.[0m
[08/03 16:36:28]  --------------------------------------------------------------------------------
[08/03 16:36:28]  Iteration: 176 (52 solution, 123 counterexamples)
[08/03 16:36:43]  Generator returned sat in 13.676959 secs.
[08/03 16:36:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:36:44]  Improved gap from 1/400 to 0
[08/03 16:36:45]  Improved number of small numbers from 55 to 69 out of a max of 101
[08/03 16:36:45]  Verifer returned sat in 1.227870 secs.
[08/03 16:36:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    5551.637207    5351.637207 -11253.674868  5551.637207    0.032959  5351.637207    0.00000  200.000000      100.000188
1    5551.637207    5451.637019 -11253.674868  5551.637207    0.016846  5451.637019    0.00000  100.000188        0.000188
2    5651.640769    5626.637207 -11253.674868  5651.640769  200.003750  5626.637207    0.00125   25.002312        0.002500
3    5651.640769    5651.638269 -11153.677490  5651.640769   25.001250  5651.638269    0.00125    0.001250       -0.000122
4    5701.642019    5701.639519 -11103.678618  5701.642019   50.002500  5701.639519    0.00125    0.001250        0.000000
5    5801.645769    5801.640769 -11103.678618  5801.645769  100.005000  5801.640769    0.00250    0.002500        0.002500
6    5801.653269    5801.640769 -11003.688721  5801.653269    0.010000  5801.640769    0.00250    0.010000       -0.000103
7    5801.663269    5801.659519 -10903.698730  5801.663269    0.020000  5801.659519    0.00250    0.001250       -0.000112
8    5801.702019    5801.699463 -10803.737549  5801.702019    0.040000  5801.699463    0.00250    0.000056       -0.000181
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=1/400.[0m
[08/03 16:36:45]  --------------------------------------------------------------------------------
[08/03 16:36:45]  Iteration: 177 (52 solution, 124 counterexamples)
[08/03 16:36:51]  Generator returned sat in 4.119248 secs.
[08/03 16:36:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:36:51]  Improved gap from 0 to 0
[08/03 16:36:52]  Improved number of small numbers from 55 to 78 out of a max of 101
[08/03 16:36:52]  Verifer returned sat in 0.951535 secs.
[08/03 16:36:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    5014.173584    5014.171143 -11153.688721  5014.173584    0.032959  5014.171143    0.00000    0.002441        0.002296
1    5014.173584    5014.173584 -11053.691162  5014.173584    0.001221  5014.173584    0.00000    0.000000       -0.000146
2    5164.169922    5014.173828 -11053.691162  5164.169922  149.996338  5014.173828    0.00000  149.996094       49.996192
3    5164.169922    5139.177436 -11053.691118  5164.169922  149.995000  5139.177436    0.00000   24.992486      -50.003764
4    5364.169936    5314.173686 -11053.691118  5364.169936  224.992500  5314.173686    0.00000   49.996250       49.996250
5    5651.662436    5414.173584 -11053.691118  5651.662436  337.488750  5414.173584  187.49125   49.997602       49.997500
6    5651.662436    5464.157436 -11003.688618  5651.662436    0.010000  5464.157436  187.49125    0.013750        0.000000
7    5651.663686    5464.171186 -10903.689941  5651.663686    0.015000  5464.171186  187.49125    0.001250       -0.000073
8    5651.684936    5464.172607 -10903.689941  5651.684936    0.022500  5464.172607  187.49125    0.021078      -99.978823
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=19999/400.[0m
[08/03 16:36:52]  --------------------------------------------------------------------------------
[08/03 16:36:52]  Iteration: 178 (52 solution, 125 counterexamples)
[08/03 16:37:08]  Generator returned sat in 14.161739 secs.
[08/03 16:37:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/03 16:37:09]  Improved gap from 0 to 100
[08/03 16:37:10]  Improved number of small numbers from 27 to 40 out of a max of 101
[08/03 16:37:10]  Verifer returned sat in 1.040121 secs.
[08/03 16:37:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4964.167725    4964.151186 -11103.685098  4964.167725    0.032959  4964.151186   0.000000    0.016539        0.000059
1    4964.167725    4964.167725 -11103.685098  4964.167725    0.008301  4964.167725   0.000000    0.000000      -99.999941
2    5064.167725    5064.167665 -11103.685098  5064.167725  100.000000  5064.167665   0.000000    0.000059      -99.999941
3    5264.167665    5232.178652 -11103.685098  5264.167665  200.000000  5232.178652   0.000000   31.989014        0.000000
4    5364.192384    5334.843945 -11103.685098  5364.192384  132.013733  5334.843945   0.008240   29.340200        0.016479
5    5398.859051    5398.850811 -11103.685098  5398.859051   64.006866  5398.850811   0.008240    0.000000      -65.316854
6    5564.200624    5564.167665 -11103.685098  5564.200624  165.341573  5564.167665   0.016479    0.016479        0.016479
7    5644.854931    5644.830212 -11103.685098  5644.854931   80.670787  5644.830212   0.016479    0.008240      -19.329213
8    5797.839825    5664.167725 -11103.685098  5797.839825  152.993134  5664.167725  33.655680  100.016420        0.016479
high_util=True, low_loss=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=135/8192.[0m
[08/03 16:37:10]  --------------------------------------------------------------------------------
[08/03 16:37:10]  Iteration: 179 (52 solution, 126 counterexamples)
[08/03 16:37:46]  Generator returned sat in 34.358383 secs.
[08/03 16:37:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:37:46]  Improved gap from 135/8192 to 17.1875
[08/03 16:37:47]  Improved number of small numbers from 31 to 101 out of a max of 101
[08/03 16:37:47]  Verifer returned sat in 0.528469 secs.
[08/03 16:37:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    5114.184326    5014.184326 -11253.701660  5114.184326    0.032715  5014.184326   0.000000  100.000000        0.000000
1    5114.184326    5114.184326 -11253.701416  5114.184326    0.016602  5114.184326   0.000000    0.000000      -99.999756
2    5640.217285    5214.184326 -11253.701416  5640.217285  526.032959  5214.184326   0.016602  426.016357      326.016602
3    5640.217285    5414.184082 -11253.701416  5640.217285  426.000000  5414.184082   0.016602  226.016602      226.016602
4    5640.217285    5514.184082 -11253.701416  5640.217285  215.000000  5514.184082   0.016602  126.016602      126.016602
5    5640.217285    5514.184326 -11253.701416  5640.217285  109.500000  5514.184326   0.016602  126.016357       26.016602
6    5640.217285    5616.621582 -11186.497559  5640.217285   56.750000  5616.621582   0.016602   23.579102       -6.779541
7    5647.013184    5646.980225 -11103.685059  5647.013184   30.375000  5646.980225   0.016602    0.016357      -17.171143
8    5664.184326    5664.167725 -11103.685059  5664.184326   17.187500  5664.167725   0.016602    0.000000     -100.000000
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=333841/1024.[0m
[08/03 16:37:47]  --------------------------------------------------------------------------------
[08/03 16:37:47]  Iteration: 180 (52 solution, 127 counterexamples)
[08/03 16:38:13]  Generator returned sat in 23.677803 secs.
[08/03 16:38:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:38:13]  Improved gap from 17/2048 to 14.0625
[08/03 16:38:13]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/03 16:38:13]  Verifer returned sat in 0.563250 secs.
[08/03 16:38:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4693.605469    4679.542969 -11253.701660  4693.605469    0.032715  4679.542969        0.0   14.062500       14.062500
1    4693.605469    4679.542969 -11167.764160  4693.605469   14.062500  4679.542969        0.0   14.062500        0.000000
2    5112.621826    4693.605469 -11167.764160  5112.621826  433.078857  4693.605469        0.0  419.016357      319.016357
3    5112.621826    4893.605469 -11167.764160  5112.621826  419.000000  4893.605469        0.0  219.016357      219.016357
4    5112.621826    4993.605469 -11167.764160  5112.621826  210.000000  4993.605469        0.0  119.016357      119.016357
5    5112.621826    5076.276611 -11167.764160  5112.621826  105.500000  5076.276611        0.0   36.345215       19.016357
6    5129.526611    5102.385254 -11103.685303  5129.526611   53.250000  5102.385254        0.0   27.141357        0.000000
7    5129.526611    5129.526611 -11017.747803  5129.526611   27.125000  5129.526611        0.0    0.000000      -14.062500
8    5143.589111    5143.589111 -10931.810303  5143.589111   14.062500  5143.589111        0.0    0.000000      -14.062500
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=653379/2048.[0m
[08/03 16:38:14]  --------------------------------------------------------------------------------
[08/03 16:38:14]  Iteration: 181 (52 solution, 128 counterexamples)
[08/03 16:38:39]  Generator returned sat in 23.968075 secs.
[08/03 16:38:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:38:40]  Improved gap from 225/16 to 14.0625
[08/03 16:38:40]  Improved number of small numbers from 34 to 101 out of a max of 101
[08/03 16:38:40]  Verifer returned sat in 0.540074 secs.
[08/03 16:38:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4846.700439    4846.684570 -11167.756104  4846.700439    0.032471  4846.684570   0.000000    0.015869        0.007812
1    4846.700439    4846.692627 -11167.756104  4846.700439    0.008301  4846.692627   0.000000    0.007812      -99.992188
2    5382.629883    4946.692627 -11167.756104  5382.629883  535.937256  4946.692627   0.008057  435.929199      335.929199
3    5382.629883    5046.692627 -11167.756104  5382.629883  388.000000  5046.692627   0.008057  335.929199      235.929199
4    5382.629883    5246.692383 -11167.756104  5382.629883  195.000000  5246.692383   0.008057  135.929443      135.929199
5    5382.629883    5332.372070 -11167.756104  5382.629883   98.500000  5332.372070   0.008057   50.249756       35.929199
6    5382.630127    5368.559326 -11103.685547  5382.630127   50.250000  5368.559326   0.008057   14.062744        0.000000
7    5394.692383    5382.622070 -11017.748047  5394.692383   26.125000  5382.622070   0.008057   12.062256       -2.000244
8    5396.692627    5396.684570 -10931.810791  5396.692627   14.062500  5396.684570   0.008057    0.000000      -14.062744
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=687983/2048.[0m
[08/03 16:38:41]  --------------------------------------------------------------------------------
[08/03 16:38:41]  Iteration: 182 (52 solution, 129 counterexamples)
[08/03 16:38:55]  Generator returned sat in 12.343777 secs.
[08/03 16:38:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/03 16:38:56]  Improved gap from 17/8192 to 32.8125
[08/03 16:38:56]  Improved number of small numbers from 33 to 101 out of a max of 101
[08/03 16:38:56]  Verifer returned sat in 1.299726 secs.
[08/03 16:38:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4892.719238    4718.964600 -11219.592041  4892.719238    0.032471  4718.964600   0.000000  173.754639       73.754883
1    4892.719238    4859.906982 -11193.347168  4892.719238    0.008057  4859.906982   0.000000   32.812256       -0.000244
2    4992.721680    4992.719482 -11193.347168  4992.721680  132.814697  4992.719482   0.000000    0.002197        0.002197
3    4992.721680    4992.719482 -11129.219238  4992.721680    0.001953  4992.719482   0.000000    0.002197      -35.869873
4    5128.597900    5128.591553 -11129.219238  5128.597900  135.878418  5128.591553   0.002197    0.004150        0.004150
5    5130.093750    5128.591553 -11062.031738  5130.093750    1.500000  5128.591553   0.002197    1.500000      -31.312500
6    5196.279785    5161.404053 -10996.905518  5196.279785   67.686035  5161.404053   0.002197   34.873535       -0.000244
7    5278.591553    5211.776855 -10979.217285  5278.591553  117.185303  5211.776855   0.002197   66.812500       -0.000244
8    5310.964355    5278.589600 -10979.217041  5310.964355   99.185303  5278.589600   0.002197   32.372559      -67.627197
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=17/4096.[0m
[08/03 16:38:57]  --------------------------------------------------------------------------------
[08/03 16:38:57]  Iteration: 183 (52 solution, 130 counterexamples)
[08/03 16:39:10]  Generator returned sat in 11.285342 secs.
[08/03 16:39:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:10]  Improved gap from 17/65536 to 48.4375
[08/03 16:39:11]  Improved number of small numbers from 43 to 101 out of a max of 101
[08/03 16:39:11]  Verifer returned sat in 0.601360 secs.
[08/03 16:39:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    4928.589600    4728.589844 -11229.217529  4928.589600    0.032227  4728.589844   0.000000  199.999756       99.999756
1    4928.589600    4828.589844 -11229.217529  4928.589600    0.008057  4828.589844   0.000000   99.999756       -0.000244
2    5028.591797    5028.345703 -11229.217529  5028.591797  200.001953  5028.345703   0.000000    0.246094        0.001953
3    5128.591797    5126.349854 -11229.217529  5128.591797  100.246094  5126.349854   0.000000    2.241943        0.001953
4    5228.595947    5228.589844 -11229.217529  5228.595947  102.246094  5228.589844   0.001953    0.004150        0.004150
5    5281.714844    5233.275391 -11182.340576  5281.714844   53.123047  5233.275391   0.001953   48.437500        0.000000
6    5288.400391    5281.712891 -11130.778076  5288.400391   55.123047  5281.712891   0.001953    6.685547      -41.751953
7    5338.837891    5330.150391 -11079.215576  5338.837891   57.123047  5330.150391   0.001953    8.685547      -39.751953
8    5389.275391    5378.587891 -11079.215332  5389.275391   59.123047  5378.587891   0.001953   10.685547      -89.314209
high_util=False, low_loss=True, ramp_up=False, ramp_down=True, total_losses=1, buffer=17/4096.[0m
[08/03 16:39:11]  --------------------------------------------------------------------------------
[08/03 16:39:11]  Iteration: 184 (52 solution, 131 counterexamples)
[08/03 16:39:29]  Generator returned sat in 16.338860 secs.
[08/03 16:39:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:29]  Verifer returned unsat in 0.084692 secs.
[08/03 16:39:29]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:29]  --------------------------------------------------------------------------------
[08/03 16:39:29]  Iteration: 185 (53 solution, 131 counterexamples)
[08/03 16:39:36]  Generator returned sat in 4.276150 secs.
[08/03 16:39:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:36]  Verifer returned unsat in 0.086622 secs.
[08/03 16:39:36]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:36]  --------------------------------------------------------------------------------
[08/03 16:39:36]  Iteration: 186 (54 solution, 131 counterexamples)
[08/03 16:39:42]  Generator returned sat in 4.133408 secs.
[08/03 16:39:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:42]  Verifer returned unsat in 0.077077 secs.
[08/03 16:39:42]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:42]  --------------------------------------------------------------------------------
[08/03 16:39:42]  Iteration: 187 (55 solution, 131 counterexamples)
[08/03 16:39:44]  Generator returned unsat in 0.000719 secs.
[08/03 16:39:44]  [96mNo more solutions found[0m
[08/03 16:39:44]  Final solutions:
[08/03 16:39:44]  0: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  1: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  2: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  3: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  4: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  5: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  6: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  7: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  8: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  9: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  10: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  11: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  12: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  13: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  14: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  15: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  16: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  17: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  18: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  19: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  20: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  21: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  22: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  23: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  24: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  25: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  26: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  27: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  28: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  29: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  30: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  31: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  32: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  33: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  34: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  35: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  36: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  37: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  38: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  39: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  40: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  41: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  42: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  43: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  44: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  45: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/03 16:39:44]  46: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  47: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  48: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/03 16:39:44]  49: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  50: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  51: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  52: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/03 16:39:44]  53: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/03 16:39:44]  54: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/03 16:39:44]  Took 1162.252571 secs.
