[08/17 16:11:25]  --------------------------------------------------------------------------------
[08/17 16:11:25]  Iteration: 1 (0 solution, 0 counterexamples)
[08/17 16:11:25]  Generator returned sat in 0.005504 secs.
[08/17 16:11:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:11:25]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:25]  Verifer returned sat in 0.314923 secs.
[08/17 16:11:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0           0.00       -4082.45   4082.45         0.00      0.05     -4082.45       0.00  4082.45         4082.45     9.0         -4082.45            -1             -1
1           0.00       -3982.45   4082.45         0.00      0.05     -3982.45       0.00  3982.45         3982.45     8.0         -4082.45         False           True
2           0.00       -3916.45   4082.45         0.00      0.05     -3916.45       0.00  3916.45         3882.45     8.0         -4082.45         False          False
3           0.00       -3782.45   4082.45         0.00      0.05     -3782.45       0.00  3782.45         3782.45     9.0         -4082.45         False          False
4           0.00       -3782.45   4082.45         0.00    602.10     -3782.45       0.00  3782.45         3682.45     9.0             0.00          True           True
5           0.00       -3682.45   4082.45         0.00   1606.20     -3682.45       0.00  3682.45         3582.45     7.0             0.00         False           True
6           0.00       -3522.45   4082.45         0.00   3682.40     -3522.45       0.00  3522.45         3482.45     7.0             0.00         False          False
7        4364.35       -3382.45   4082.45      4364.35   7886.80     -3382.45    3664.35  4082.45         4082.45     8.0             0.00         False          False
8       16857.50       -3282.45   4082.45     16857.50  16575.60     -3282.45   16057.50  4082.45         4082.45     9.0             0.00         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=2, buffer=81649/20.[0m
[08/17 16:11:26]  --------------------------------------------------------------------------------
[08/17 16:11:26]  Iteration: 2 (0 solution, 1 counterexamples)
[08/17 16:11:26]  Generator returned sat in 0.111322 secs.
[08/17 16:11:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:11:26]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:26]  Verifer returned sat in 0.246735 secs.
[08/17 16:11:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0    -3982.45000   -4206.700625   4082.45  -3982.45000    0.00125 -4206.700625    0.00000  224.250625       199.99875     9.0     -4206.700625            -1             -1
1    -3982.45000   -4082.450000   4082.45  -3982.45000    0.00125 -4082.450000    0.00000  100.000000        99.99875     3.0     -4206.700625         False           True
2    -3982.45000   -4082.448750   4082.45  -3982.45000    0.00125 -4082.448750    0.00000   99.998750        -0.00125     4.0     -4206.700625         False          False
3    -3782.45125   -3982.448750   4082.45  -3782.45125  299.99750 -3982.448750    0.00000  199.997500        99.99750     1.0     -4206.700625         False          False
4    -3382.44625   -3782.450000   4082.45  -3382.44625  600.00250 -3782.450000    0.00125  400.002500       400.00125     1.0     -4206.700625         False          False
5    -3382.44625   -3782.448750   4082.45  -3382.44625    0.01000 -3782.448750    0.00125  400.001250       300.00125     2.0     -4206.700625         False          False
6    -3180.94250   -3582.448750   4082.45  -3180.94250  601.50500 -3582.448750    1.50500  400.001250       400.00125     3.0     -4206.700625         False          False
7    -3180.94250   -3482.448750   4082.45  -3180.94250    0.01000 -3482.448750    1.50500  300.001250       300.00125     4.0     -4206.700625         False          False
8    -2879.43625   -3382.448750   4082.45  -2879.43625  601.50750 -3382.448750  103.01125  400.001250       400.00125     5.0     -4206.700625         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=320001/800.[0m
[08/17 16:11:27]  --------------------------------------------------------------------------------
[08/17 16:11:27]  Iteration: 3 (0 solution, 2 counterexamples)
[08/17 16:11:27]  Generator returned sat in 0.184120 secs.
[08/17 16:11:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:11:27]  Improved gap from 0.05 to 100
[08/17 16:11:28]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:11:28]  Verifer returned sat in 0.397249 secs.
[08/17 16:11:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3604.149375   -3804.149375   4082.45 -3604.149375     0.025 -3804.149375      0.000  200.000         200.000     9.0     -3804.149375            -1             -1
1   -3604.149375   -3704.149375   4082.45 -3604.149375     0.025 -3704.149375      0.000  100.000         100.000     2.0     -3804.149375         False           True
2   -3604.149375   -3703.849375   4082.45 -3604.149375     0.025 -3703.849375      0.000   99.700           0.000     3.0     -3804.149375          True           True
3   -3106.349375   -3604.124375   4082.45 -3106.349375   597.500 -3604.124375      0.025  497.750         397.775     1.0     -3804.149375          True           True
4   -3106.349375   -3504.149375   4082.45 -3106.349375   297.750 -3504.149375      0.025  397.775         297.775     2.0     -3804.149375         False          False
5   -3106.349375   -3304.149375   4082.45 -3106.349375   397.750 -3304.149375      0.025  197.775         197.775     3.0     -3106.374375          True           True
6   -2706.524375   -3304.149375   4082.45 -2706.524375   597.600 -3304.149375     99.850  497.775         397.775     3.0     -3106.374375         False           True
7   -2706.524375   -3104.149375   4082.45 -2706.524375   297.800 -3104.149375     99.850  297.775         297.775     2.0     -3106.374375         False           True
8   -2506.499375   -3104.149375   4082.45 -2506.499375   497.800 -3104.149375     99.875  497.775         397.775     2.0     -3106.374375         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=2, buffer=15911/40.[0m
[08/17 16:11:28]  --------------------------------------------------------------------------------
[08/17 16:11:28]  Iteration: 4 (0 solution, 3 counterexamples)
[08/17 16:11:28]  Generator returned sat in 0.151482 secs.
[08/17 16:11:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/17 16:11:29]  Improved gap from 0.0 to 100
[08/17 16:11:29]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/17 16:11:29]  Verifer returned sat in 0.600503 secs.
[08/17 16:11:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -3106.149375   -3306.099375    3484.4 -3106.149375    199.95 -3306.099375       0.00   199.95           99.95     9.0     -3306.099375            -1             -1
1   -3106.149375   -3206.099375    3484.4 -3106.149375    199.90 -3206.099375       0.00    99.95           -0.05     2.0     -3106.149375         False           True
2   -3006.099375   -3106.099375    3484.4 -3006.099375    200.00 -3106.099375       0.00   100.00            0.00     1.0     -3106.149375         False           True
3   -2706.499375   -3006.099375    3484.4 -2706.499375    399.60 -3006.099375       0.00   299.60          199.60     2.0     -3106.149375         False          False
4   -2706.499375   -2806.099375    3484.4 -2706.499375      0.50 -2806.099375       0.00    99.60           99.60     2.0     -2706.499375          True           True
5   -2706.499375   -2706.549375    3484.4 -2706.499375      0.50 -2706.549375       0.00     0.05           -0.40     3.0     -2706.499375         False           True
6   -2706.049375   -2706.099375    3484.4 -2706.049375      0.50 -2706.099375       0.00     0.05          -99.95     1.0     -2706.499375         False           True
7   -2253.599375   -2606.099375    3484.4 -2253.599375    452.50 -2606.099375       0.00   352.50          252.50     1.0     -2706.499375         False          False
8   -1851.599375   -2406.099375    3484.4 -1851.599375    754.50 -2406.099375     154.45   400.05          400.05     2.0     -2706.499375         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=8001/20.[0m
[08/17 16:11:30]  --------------------------------------------------------------------------------
[08/17 16:11:30]  Iteration: 5 (0 solution, 4 counterexamples)
[08/17 16:11:30]  Generator returned sat in 0.183501 secs.
[08/17 16:11:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:30]  Improved gap from 0.05 to 100
[08/17 16:11:31]  Improved number of small numbers from 68 to 114 out of a max of 114
[08/17 16:11:31]  Verifer returned sat in 0.517218 secs.
[08/17 16:11:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2654.809814   -2654.859375  3484.399902 -2654.809814    0.049805 -2654.859375   0.000000    0.049561        0.049561     1.0     -2654.859375            -1             -1
1   -2455.009521   -2654.859375  3484.399902 -2455.009521  199.849854 -2654.859375   0.000000  199.849854       99.849854     1.0     -2654.859375         False          False
2   -2454.909424   -2454.959717  3484.399902 -2454.909424  199.949951 -2454.959717   0.000000    0.050293       -0.050049     1.0     -2654.859375         False          False
3   -2253.809570   -2454.859375  3484.399902 -2253.809570  201.150146 -2454.859375   0.000000  201.049805      101.049805     1.0     -2654.859375         False          False
4   -2253.809570   -2354.009521  3484.399902 -2253.809570  201.000000 -2354.009521   0.000000  100.199951        1.049805     2.0     -2654.859375         False          False
5   -2052.159668   -2253.759766  3484.399902 -2052.159668  301.849854 -2253.759766   0.000000  201.600098      102.699707     1.0     -2654.859375         False          False
6   -2051.559814   -2154.859375  3484.399902 -2051.559814  202.199951 -2154.859375   0.000000  103.299561        3.299561     2.0     -2654.859375         False          False
7   -1853.859375   -1954.859619  3484.399902 -1853.859375  301.000000 -1954.859619   0.000000  101.000244      101.000000     1.0     -2654.859375         False          False
8   -1554.709717   -1954.809814  3484.399902 -1554.709717  400.149902 -1954.809814   0.049805  400.050293      300.099854     2.0     -2654.859375         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=1, buffer=1229209/4096.[0m
[08/17 16:11:31]  --------------------------------------------------------------------------------
[08/17 16:11:31]  Iteration: 6 (0 solution, 5 counterexamples)
[08/17 16:11:31]  Generator returned sat in 0.093469 secs.
[08/17 16:11:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:11:32]  Improved gap from 51.50375 to 100
[08/17 16:11:33]  Improved number of small numbers from 68 to 83 out of a max of 114
[08/17 16:11:33]  Verifer returned sat in 1.256522 secs.
[08/17 16:11:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2814.517822   -2814.519531  3484.399902 -2814.517822    0.001709 -2814.519531        0.0    0.001709      -99.998215     1.0     -2814.519531            -1             -1
1   -2714.518066   -2714.519607  3484.399902 -2714.518066  100.001465 -2714.519607        0.0    0.001541      -99.998459     1.0     -2814.519531         False          False
2   -2414.521274   -2566.768774  3484.399902 -2414.521274  299.998333 -2566.768774        0.0  152.247500       99.998333     1.0     -2814.519531         False          False
3   -2414.521274   -2414.522940  3484.399902 -2414.521274    0.001709 -2414.522940        0.0    0.001667       -0.001667     2.0     -2414.521274         False          False
4   -2414.512940   -2414.519607  3484.399902 -2414.512940    0.010000 -2414.519607        0.0    0.006667      -99.993333     1.0     -2414.521274         False           True
5   -2116.014607   -2214.519607  3484.399902 -2116.014607  298.505000 -2214.519607        0.0   98.505000       98.505000     1.0     -2414.521274         False          False
6   -1714.517940   -2116.014648  3484.399902 -1714.517940  500.001667 -2116.014648        0.0  401.496708      400.001667     2.0     -2414.521274         False          False
7   -1714.517940   -2114.519531  3484.399902 -1714.517940    0.010000 -2114.519531        0.0  400.001591      300.001667     2.0     -1714.517940          True           True
8   -1714.517940   -1914.519775  3484.399902 -1714.517940    0.010000 -1914.519775        0.0  200.001835      200.001667     3.0     -1714.517940         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=1638413/4096.[0m
[08/17 16:11:33]  --------------------------------------------------------------------------------
[08/17 16:11:33]  Iteration: 7 (0 solution, 6 counterexamples)
[08/17 16:11:34]  Generator returned sat in 0.397200 secs.
[08/17 16:11:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:11:34]  Improved gap from 0.0025 to 100
[08/17 16:11:34]  Improved number of small numbers from 57 to 114 out of a max of 114
[08/17 16:11:34]  Verifer returned sat in 0.379675 secs.
[08/17 16:11:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2649.265625   -2649.268066  3321.140869 -2649.265625    0.002686 -2649.268066        0.0    0.002441      -99.997559     2.0     -2649.268066            -1             -1
1   -2549.265625   -2549.267822  3321.140869 -2549.265625  100.002441 -2549.267822        0.0    0.002197      -99.997559     1.0     -2649.268066         False           True
2   -2249.270264   -2349.268066  3321.140869 -2249.270264  299.997559 -2349.268066        0.0   99.997803       99.997803     1.0     -2649.268066         False          False
3   -2249.270264   -2349.268066  3321.140869 -2249.270264   51.500000 -2349.268066        0.0   99.997803       -0.002197     1.0     -2249.270264         False          False
4   -2248.268066   -2249.268066  3321.140869 -2248.268066  101.000000 -2249.268066        0.0    1.000000      -99.000000     1.0     -2249.270264         False          False
5   -2049.268066   -2149.267822  3321.140869 -2049.268066  200.000000 -2149.267822        0.0   99.999756        0.000000     1.0     -2249.270264         False          False
6   -1751.267822   -2049.265381  3321.140869 -1751.267822  398.000000 -2049.265381        0.0  297.997559      198.000244     1.0     -2249.270264         False          False
7   -1255.265381   -1849.268066  3321.140869 -1255.265381  794.000000 -1849.268066        0.0  594.002686      594.002686     2.0     -2249.270264         False          False
8   -1255.265381   -1751.268066  3321.140869 -1255.265381    0.010000 -1751.268066        0.0  496.002686      494.002686     3.0     -1255.265381          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=0, buffer=608261/1024.[0m
[08/17 16:11:35]  --------------------------------------------------------------------------------
[08/17 16:11:35]  Iteration: 8 (0 solution, 7 counterexamples)
[08/17 16:11:35]  Generator returned sat in 0.169972 secs.
[08/17 16:11:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/17 16:11:35]  Improved gap from 0.0016666666666666668 to 100
[08/17 16:11:36]  Improved number of small numbers from 113 to 114 out of a max of 114
[08/17 16:11:36]  Verifer returned sat in 0.622056 secs.
[08/17 16:11:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2649.265625   -2949.365479  3321.140625 -2649.265625     0.100098 -2949.365479     0.000000  300.099854      300.099854     3.0     -2949.365479            -1             -1
1   -2549.165527   -2949.365479  3321.140625 -2549.165527   400.199951 -2949.365479     0.100098  400.099854      300.099854     3.0     -2949.365479         False          False
2   -2449.265625   -2849.365479  3321.140625 -2449.265625   499.999756 -2849.365479     0.100098  399.999756      299.999756     4.0     -2949.365479         False          False
3     918.534424   -2734.365479  3321.140625   918.534424  3767.799805 -2734.365479  3267.800049  385.099854      300.099854     5.0     -2949.365479         False          False
4    2522.834473   -2649.165771  3321.140625  2522.834473  1989.399902 -2649.165771  4772.100098  399.900146      300.099854     4.0     -2249.265625          True           True
5    3265.734131   -2549.365479  3321.140625  3265.734131  1142.799805 -2549.365479  5414.999756  400.099854      300.099854     5.0     -2249.265625         False          False
6    3585.034180   -2449.365479  3321.140625  3585.034180   719.399902 -2449.365479  5634.299805  400.099854      300.099854     4.0     -2249.265625         False           True
7    3685.134277   -2249.365723  3321.140625  3685.134277   500.199951 -2249.365723  5634.399902  300.100098      300.099854     4.0     -2249.265625         False          False
8    3833.034180   -2249.365479  3321.140625  3833.034180   448.000000 -2249.365479  5682.299805  400.099854      300.099854     5.0     -2249.265625         False          False
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=1229209/4096.[0m
[08/17 16:11:37]  --------------------------------------------------------------------------------
[08/17 16:11:37]  Iteration: 9 (0 solution, 8 counterexamples)
[08/17 16:11:37]  Generator returned sat in 0.502277 secs.
[08/17 16:11:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:38]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:38]  Verifer returned sat in 0.223459 secs.
[08/17 16:11:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t   losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2649.265625   -2949.290625  3321.140625  -2649.265625      0.100098 -2949.290625      0.0000  300.0250        300.0250     3.0     -2949.290625            -1             -1
1   -2549.253125   -2949.290625  3321.140625  -2549.253125    400.037500 -2949.290625      0.0125  400.0250        300.0250     3.0     -2949.290625         False          False
2   -2449.265625   -2849.290625  3321.140625  -2449.265625    500.012500 -2849.290625      0.0125  400.0125        300.0125     4.0     -2949.290625         False          False
3    9952.321875   -2749.290625  3321.140625   9952.321875  12801.600000 -2749.290625  12301.5875  400.0250        300.0250     5.0     -2949.290625          True           True
4   15953.096875   -2549.290625  3321.140625  15953.096875   6400.800000 -2549.290625  18202.3625  300.0250        300.0250     4.0     -2249.265625          True           True
5   18853.471875   -2549.278125  3321.140625  18853.471875   3200.400000 -2549.278125  21002.7375  400.0125        300.0250     5.0     -2249.265625         False           True
6   20053.659375   -2349.290625  3321.140625  20053.659375   1600.200000 -2349.290625  22102.9250  300.0250        300.0250     4.0     -2249.265625         False           True
7   20553.734375   -2249.303125  3321.140625  20553.734375    800.100000 -2249.303125  22503.0000  300.0375        300.0250     4.0     -2249.265625         False           True
8   20653.746875   -2249.290625  3321.140625  20653.746875    400.050000 -2249.290625  22503.0125  400.0250        300.0250     5.0     -2249.265625         False           True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=12001/40.[0m
[08/17 16:11:38]  --------------------------------------------------------------------------------
[08/17 16:11:38]  Iteration: 10 (0 solution, 9 counterexamples)
[08/17 16:11:38]  Generator returned sat in 0.075087 secs.
[08/17 16:11:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:39]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:39]  Verifer returned sat in 0.241403 secs.
[08/17 16:11:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t    losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2649.265625   -2949.271875  3321.140625  -2649.265625      0.100098 -2949.271875      0.00000  300.00625       300.00625     4.0     -2949.271875            -1             -1
1   -2549.253125   -2949.271875  3321.140625  -2549.253125    400.018750 -2949.271875      0.01250  400.00625       300.00625     4.0     -2949.271875         False           True
2   -2449.265625   -2849.271875  3321.140625  -2449.265625    499.993750 -2849.271875      0.01250  399.99375       299.99375     3.0     -2949.271875         False           True
3    9982.140625   -2749.271875  3321.140625   9982.140625  12831.400000 -2749.271875  12331.40625  400.00625       300.00625     4.0     -2949.271875         False          False
4   15997.334375   -2549.290625  3321.140625  15997.334375   6415.200000 -2549.290625  18246.60000  300.02500       300.00625     4.0     -2249.265625          True           True
5   18904.409375   -2549.271875  3321.140625  18904.409375   3207.100000 -2549.271875  21053.67500  400.00625       300.00625     5.0     -2249.265625         False           True
6   20107.453125   -2349.290625  3321.140625  20107.453125   1603.050000 -2349.290625  22156.71875  300.02500       300.00625     4.0     -2249.265625         False           True
7   20608.453125   -2249.271875  3321.140625  20608.453125    801.025000 -2249.271875  22557.71875  300.00625       300.00625     4.0     -2249.265625         False           True
8   20708.459375   -2249.265625  3321.140625  20708.459375    400.012500 -2249.265625  22557.72500  400.00000       300.00625     5.0     -2249.265625         False           True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=48001/160.[0m
[08/17 16:11:39]  --------------------------------------------------------------------------------
[08/17 16:11:39]  Iteration: 11 (0 solution, 10 counterexamples)
[08/17 16:11:40]  Generator returned sat in 0.072886 secs.
[08/17 16:11:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:40]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:40]  Verifer returned sat in 0.225585 secs.
[08/17 16:11:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2711.104688   -3011.110938  3321.140625  -2711.104688      0.100098 -3011.110938      0.000000  300.006250      300.006250     4.0     -3011.110938            -1             -1
1   -2611.103125   -3011.110938  3321.140625  -2611.103125    400.007812 -3011.110938      0.001563  400.006250      300.006250     4.0     -3011.110938         False           True
2   -2511.104688   -2911.110938  3321.140625  -2511.104688    500.004687 -2911.110938      0.001563  400.004687      300.004687     3.0     -3011.110938         False           True
3    9982.140625   -2811.110938  3321.140625   9982.140625  12893.250000 -2811.110938  12393.245312  400.006250      300.006250     4.0     -3011.110938         False          False
4   16027.259375   -2611.110938  3321.140625  16027.259375   6445.125000 -2611.110938  18338.364063  300.006250      300.006250     4.0     -2311.104688          True           True
5   18948.315625   -2611.104688  3321.140625  18948.315625   3221.062500 -2611.104688  21159.420312  400.000000      300.006250     5.0     -2311.104688         False           True
6   20157.346875   -2411.110938  3321.140625  20157.346875   1609.031250 -2411.110938  22268.451562  300.006250      300.006250     4.0     -2311.104688         False           True
7   20660.356250   -2311.110938  3321.140625  20660.356250    803.015625 -2311.110938  22671.460938  300.006250      300.006250     4.0     -2311.104688         False           True
8   20760.357812   -2311.104688  3321.140625  20760.357812    400.007812 -2311.104688  22671.462500  400.000000      300.006250     5.0     -2311.104688         False           True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down=False, total_losses=5, buffer=48001/160.[0m
[08/17 16:11:41]  --------------------------------------------------------------------------------
[08/17 16:11:41]  Iteration: 12 (0 solution, 11 counterexamples)
[08/17 16:11:41]  Generator returned sat in 0.078981 secs.
[08/17 16:11:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/17 16:11:41]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:41]  Verifer returned sat in 0.207083 secs.
[08/17 16:11:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2711.104736   -3011.110938  3321.140625  -2711.104736      0.100098 -3011.110938      0.000000  300.006201      300.006201     4.0     -3011.110938            -1             -1
1   -2611.103125   -3011.110938  3321.140625  -2611.103125    400.007812 -3011.110938      0.001563  400.006250      300.006250     4.0     -3011.110938         False           True
2   -2511.104688   -2911.110938  3321.140625  -2511.104688    500.004687 -2911.110938      0.001563  400.004687      300.004687     3.0     -3011.110938         False           True
3   10013.115625   -2811.110938  3321.140625  10013.115625  12924.225000 -2811.110938  12424.220312  400.006250      300.006250     4.0     -3011.110938         False          False
4   16073.221875   -2611.110938  3321.140625  16073.221875   6460.112500 -2611.110938  18384.326562  300.006250      300.006250     4.0     -2311.104688          True           True
5   19001.271875   -2611.104688  3321.140625  19001.271875   3228.056250 -2611.104688  21212.376563  400.000000      300.006250     5.0     -2311.104688         False           True
6   20213.300000   -2411.110938  3321.140625  20213.300000   1612.028125 -2411.110938  22324.404687  300.006250      300.006250     4.0     -2311.104688         False           True
7   20717.307812   -2311.110938  3321.140625  20717.307812    804.014063 -2311.110938  22728.412500  300.006250      300.006250     4.0     -2311.104688         False           True
8   20817.308594   -2311.110156  3321.140625  20817.308594    400.007031 -2311.110156  22728.413281  400.005469      300.006250     5.0     -2311.104688         False           True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down=False, total_losses=5, buffer=48001/160.[0m
[08/17 16:11:42]  --------------------------------------------------------------------------------
[08/17 16:11:42]  Iteration: 13 (0 solution, 12 counterexamples)
[08/17 16:11:44]  Generator returned sat in 1.218489 secs.
[08/17 16:11:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:11:44]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/17 16:11:44]  Verifer returned sat in 0.219566 secs.
[08/17 16:11:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2711.004687   -3063.104688  3321.140625  -2711.004687      0.100098 -3063.104688      0.000000  352.100000           352.1     3.0     -3063.104688            -1             -1
1   -2610.904687   -2963.304688  3321.140625  -2610.904687    452.200000 -2963.304688      0.100000  352.300000           352.1     3.0     -3063.104688         False          False
2   -2511.004687   -2943.071354  3321.140625  -2511.004687    452.200000 -2943.071354      0.100000  431.966667           352.0     4.0     -3063.104688         False          False
3   18781.338542   -2763.104688  3321.140625  18781.338542  21724.309896 -2763.104688  21192.343229  352.100000           352.1     5.0     -3063.104688         False          False
4   18881.238542   -2763.104688  3321.140625  18881.238542    452.000000 -2763.104688  21192.343229  452.000000           352.0     5.0     -2311.104688          True           True
5   19307.438542   -2611.004687  3321.140625  19307.438542    878.200000 -2611.004687  21518.443229  400.000000           352.1     5.0     -2311.104688         False           True
6   19407.538542   -2499.104688  3321.140625  19407.538542    500.100000 -2499.104688  21518.543229  388.100000           352.1     4.0     -2311.104688         False           True
7   19417.438542   -2411.004687  3321.140625  19417.438542    398.000000 -2411.004687  21518.543229  309.900000           262.0     5.0     -2311.104688         False          False
8   20056.638542   -2311.104688  3321.140625  20056.638542    949.100000 -2311.104688  21967.643229  400.100000           352.1     5.0     -2311.104688         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=3521/10.[0m
[08/17 16:11:44]  --------------------------------------------------------------------------------
[08/17 16:11:44]  Iteration: 14 (0 solution, 13 counterexamples)
[08/17 16:11:45]  Generator returned sat in 0.081323 secs.
[08/17 16:11:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
elif(qbound[t-1][4]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:11:46]  Improved number of small numbers from 73 to 73 out of a max of 113
[08/17 16:11:46]  Verifer returned sat in 1.028908 secs.
[08/17 16:11:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   -2711.004883   -3063.771354  3321.140625  -2711.004883      0.100098 -3063.771354      0.000146  352.766325      352.099658     3.0     -3063.771354            -1             -1
1   -2610.904687   -2963.971061  3321.140625  -2610.904687    452.866520 -2963.971061      0.100000  352.966374      352.100000     3.0     -3063.771354         False          False
2   -2511.004541   -2943.737923  3321.140625  -2511.004541    452.866520 -2943.737923      0.100000  432.633382      352.000146     4.0     -3063.771354         False          False
3   18781.338542   -2763.104688  3321.140625  18781.338542  21724.976465 -2763.104688  21192.343229  352.100000      352.100000     5.0     -3063.771354         False          False
4   18881.238542   -2763.104688  3321.140625  18881.238542    452.000000 -2763.104688  21192.343229  452.000000      352.000000     5.0     -2311.104688          True           True
5   19308.104915   -2611.004687  3321.140625  19308.104915    878.866374 -2611.004687  21519.109603  400.000000      352.100000     5.0     -2311.104688         False           True
6   19408.204769   -2498.971178  3321.140625  19408.204769    500.099854 -2498.971178  21519.209456  387.966491      352.100000     4.0     -2311.104688         False           True
7   19417.438542   -2411.004687  3321.140625  19417.438542    397.200264 -2411.004687  21519.209456  309.233773      261.333773     5.0     -2311.104688         False          False
8   20056.105164   -2311.104736  3321.140625  20056.105164    947.900396 -2311.104736  21967.109852  400.100049      352.100000     5.0     -2311.104688         False           True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down=False, total_losses=3, buffer=3521/10.[0m
[08/17 16:11:47]  --------------------------------------------------------------------------------
[08/17 16:11:47]  Iteration: 15 (0 solution, 14 counterexamples)
[08/17 16:11:48]  Generator returned sat in 0.637203 secs.
[08/17 16:11:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/17 16:11:48]  Improved gap from 0.05 to 35.9375
[08/17 16:11:48]  Improved number of small numbers from 90 to 114 out of a max of 114
[08/17 16:11:48]  Verifer returned sat in 0.808700 secs.
[08/17 16:11:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18081.405029   -3211.071289  3321.140625  18081.405029    0.066895 -3211.071289  21192.276367  100.199951        0.199951     8.0     -3211.071289            -1             -1
1   18181.338379   -3110.871582  3321.140625  18181.338379  200.133301 -3110.871582  21192.276367   99.933594        0.133301     7.0     -3211.071289         False           True
2   18281.471680   -2911.071289  3321.140625  18281.471680  200.066895 -2911.071289  21192.343018    0.199951        0.199951     1.0     -2910.871338          True           True
3   18355.146729   -2884.379639  3321.140625  18355.146729   73.875000 -2884.379639  21192.343018   47.183350      -26.125000     1.0     -2837.196289         False          False
4   18381.338379   -2811.071289  3385.203125  18381.338379   73.375000 -2811.071289  21192.343018    0.066650      -35.870850     1.0     -2837.196289         False          False
5   18454.146729   -2775.133789  3443.082520  18454.146729   72.875000 -2775.133789  21192.343018   36.937500       -5.183105     1.0     -2837.196289         False          False
6   18489.584229   -2733.012939  3507.144775  18489.584229   72.375000 -2733.012939  21192.343018   30.254150       -5.683350     1.0     -2837.196289         False          False
7   18531.205078   -2697.075439  3571.207275  18531.205078   71.875000 -2697.075439  21192.343018   35.937500        0.000000     1.0     -2837.196289         False          False
8   18566.642578   -2661.137939  3571.207292  18566.642578   71.375000 -2661.137939  21192.343018   35.437500      -64.562484     2.0     -2837.196289         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=819/4096.[0m
[08/17 16:11:49]  --------------------------------------------------------------------------------
[08/17 16:11:49]  Iteration: 16 (0 solution, 15 counterexamples)
[08/17 16:11:50]  Generator returned sat in 0.096552 secs.
[08/17 16:11:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
elif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/17 16:11:51]  Improved gap from 32.9375 to 35.9375
[08/17 16:11:51]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/17 16:11:51]  Verifer returned sat in 1.303842 secs.
[08/17 16:11:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18011.064941   -3280.778076  3267.957275  18011.064941  180.649902 -3280.778076  21192.343018  99.500000       99.499756     1.0     -3280.778076            -1             -1
1   18092.214844   -3181.177979  3267.957275  18092.214844  180.649902 -3181.177979  21192.343018  81.049805       80.649658     1.0     -3280.778076         False          False
2   18092.214844   -3180.777832  3287.207275  18092.214844   80.950000 -3180.777832  21192.343018  80.649658       -0.100342     2.0     -3100.128174         False          False
3   18092.415283   -3100.027832  3351.269531  18092.415283   80.850098 -3100.027832  21192.343018   0.100098      -35.837646     1.0     -3099.927734         False           True
4   18171.165283   -3021.277832  3369.544922  18171.165283   78.850098 -3021.277832  21192.343018   0.100098      -38.812256     1.0     -3099.927734         False          False
5   18247.915283   -2982.365479  3431.607178  18247.915283   76.850098 -2982.365479  21192.343018  37.937744        0.000000     1.0     -3099.927734         False          False
6   18284.827637   -2944.327881  3494.694580  18284.827637   74.850098 -2944.327881  21192.343018  36.812500       -0.000244     1.0     -3099.927734         False          False
7   18320.865234   -2907.415527  3558.657227  18320.865234   72.850098 -2907.415527  21192.343018  35.937744        0.000000     1.0     -3099.927734         False          False
8   18355.777588   -2871.377930  3558.657471  18355.777588   70.850098 -2871.377930  21192.343018  34.812500      -65.087402     1.0     -3099.927734         False          False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down=True, total_losses=0, buffer=407551/4096.[0m
[08/17 16:11:52]  --------------------------------------------------------------------------------
[08/17 16:11:52]  Iteration: 17 (0 solution, 16 counterexamples)
[08/17 16:11:56]  Generator returned sat in 3.893482 secs.
[08/17 16:11:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
elif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/17 16:11:56]  Improved gap from 0.00015625 to 100
[08/17 16:11:57]  Improved number of small numbers from 51 to 59 out of a max of 114
[08/17 16:11:57]  Verifer returned sat in 1.201141 secs.
[08/17 16:11:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   17819.317627   -3522.769082  3512.241025  17819.317627   200.000000 -3522.769082  21192.343018  149.743691      149.743691     1.0     -3522.769082            -1             -1
1   17869.573936   -3522.769082  3512.241025  17869.573936   200.000000 -3522.769082  21192.343018  200.000000      100.000000     1.0     -3522.769082         False          False
2   17869.573936   -3373.022832  3512.241025  17869.573936   199.997559 -3373.022832  21192.343018   50.253750        0.000000     2.0     -3322.769082         False          False
3   17869.573936   -3322.769082  3512.241025  17869.573936    50.251250 -3322.769082  21192.343018    0.000000     -100.000000     3.0     -3322.769082         False          False
4   17969.576436   -3222.769082  3512.241025  17969.576436   100.002500 -3222.769082  21192.343018    0.002500      -99.997500     1.0     -3322.769082         False           True
5   18621.075186   -3022.769082  3512.241025  18621.075186   651.501250 -3022.769082  21192.343018  451.501250      451.501250     1.0     -3322.769082         False          False
6   19197.332061   -3022.766602  3512.241025  19197.332061  1027.758125 -3022.766602  21620.098643  600.000020      500.002500     2.0     -3322.769082         False          False
7   19197.332061   -2822.769287  3512.241025  19197.332061     0.010000 -2822.769287  21620.098643  400.002705      400.002500     3.0     -3322.769082         False          False
8   19197.332061   -2822.769043  3512.241025  19197.332061     0.010000 -2822.769043  21620.098643  400.002461      300.002500     4.0     -2422.766582          True           True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=200001/400.[0m
[08/17 16:11:58]  --------------------------------------------------------------------------------
[08/17 16:11:58]  Iteration: 18 (0 solution, 17 counterexamples)
[08/17 16:11:59]  Generator returned sat in 0.490283 secs.
[08/17 16:11:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
elif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/17 16:11:59]  Improved gap from 0.0 to 100
[08/17 16:12:00]  Improved number of small numbers from 48 to 77 out of a max of 114
[08/17 16:12:00]  Verifer returned sat in 1.277373 secs.
[08/17 16:12:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f
0   18897.313721   -2695.029297  3512.241025  18897.313721    0.000732 -2695.029297  21192.343018  400.000000      399.999993     4.0     -2695.029297            -1             -1
1   18897.313721   -2695.027207  3512.241025  18897.313721    0.000977 -2695.027207  21192.343018  399.997910      299.999993     4.0     -2695.029297         False          False
2   18897.313721   -2544.778874  3512.241025  18897.313721  399.997803 -2544.778874  21192.343018  249.749577      199.999993     5.0     -2695.029297         False          False
3   18897.313721   -2395.030273  3512.241025  18897.313721    0.000977 -2395.030273  21192.343018  100.000977       99.999993     6.0     -2295.029297         False          False
4   18897.313721   -2395.029290  3512.241025  18897.313721    0.010000 -2395.029290  21192.343018   99.999993       -0.000007     7.0     -2295.029297         False          False
5   19397.314561   -2295.029290  3512.241025  19397.314561  600.000833 -2295.029290  21192.343851  500.000000      400.000000     1.0     -2295.029297         False           True
6   19397.314561   -2195.029053  3512.241025  19397.314561  499.999167 -2195.029053  21192.343851  399.999762      300.000000     2.0     -2295.029297         False          False
7   19397.314561   -1995.029297  3512.241025  19397.314561    0.010000 -1995.029297  21192.343851  200.000007      200.000000     3.0     -2295.029297         False          False
8   19397.314561   -1895.029297  3512.241025  19397.314561    0.010000 -1895.029297  21192.343851  100.000007      100.000000     4.0     -2295.029297         False          False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down=False, total_losses=1, buffer=400.[0m
[08/17 16:12:01]  --------------------------------------------------------------------------------
[08/17 16:12:01]  Iteration: 19 (0 solution, 18 counterexamples)
