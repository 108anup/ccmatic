[08/15 15:57:39]  --------------------------------------------------------------------------------
[08/15 15:57:39]  Iteration: 1 (0 solution, 0 counterexamples)
[08/15 15:57:39]  Generator returned sat in 0.004381 secs.
[08/15 15:57:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:39]  Improved gap from 0.05 to 100
[08/15 15:57:40]  Improved number of small numbers from 114 to 114 out of a max of 114
[08/15 15:57:40]  Verifer returned sat in 0.353764 secs.
[08/15 15:57:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0     -1834.2975     -1834.4975  1834.3975   -1834.2975       0.1   -1834.4975        0.0      0.2             0.1     8.0       -1834.4975            -1             -1   False
1     -1834.2975     -1834.3975  1834.3975   -1834.2975       0.1   -1834.3975        0.0      0.1           -99.9     8.0       -1834.4975         False          False   False
2      1377.3025     -1634.4975  1834.3975    1377.3025    3211.7   -1634.4975        0.0   3011.8          3011.7     1.0       -1834.4975         False          False   False
3      1377.3025     -1634.3975  1834.3975    1377.3025       0.1   -1634.3975        0.0   3011.7          2911.7     2.0        1377.3025         False          False   False
4      1377.3025     -1534.3975  1834.3975    1377.3025     401.4   -1534.3975        0.0   2911.7          2811.7     3.0        1377.3025         False          False   False
5      1377.3025     -1433.3975  1834.3975    1377.3025    1403.8   -1433.3975        0.0   2810.7          2711.7     4.0        1377.3025         False          False   False
6      1777.4025     -1297.3975  1834.3975    1777.4025    3210.8   -1297.3975        0.1   3074.7          3011.7     5.0        1377.3025         False          False   False
7      5799.3025     -1134.3975  1834.3975    5799.3025    7096.6   -1134.3975     3922.0   3011.7          3011.7     6.0        1377.3025         False          False    True
8     17781.8025     -1034.3975  1834.3975   17781.8025   14994.2   -1034.3975    15804.5   3011.7          3011.7     7.0        1377.3025         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=30117/10.[0m
[08/15 15:57:40]  --------------------------------------------------------------------------------
[08/15 15:57:40]  Iteration: 2 (0 solution, 1 counterexamples)
[08/15 15:57:40]  Generator returned sat in 0.051272 secs.
[08/15 15:57:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:41]  Improved number of small numbers from 77 to 89 out of a max of 113
[08/15 15:57:41]  Verifer returned sat in 0.815320 secs.
[08/15 15:57:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t  service_0,t     losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1797.397705   -1834.497559  1834.397217  -1797.397705      0.099854 -1834.497559      0.000000    37.099854        0.024658     3.0     -1834.497559            -1             -1   False
1   -1797.397705   -1797.422363  1834.397217  -1797.397705      0.099854 -1797.422363      0.000000     0.024658      -99.975342     4.0     -1834.497559         False          False   False
2    1377.302490   -1634.497559  1834.397217   1377.302490   3174.724854 -1634.497559      0.000000  3011.800049     2974.724854     1.0     -1834.497559         False          False   False
3    1377.302490   -1597.422363  1834.397217   1377.302490    912.444408 -1597.422363      0.000000  2974.724854     2874.724854     2.0      1377.302490         False          False   False
4    1377.302490   -1497.422363  1834.397217   1377.302490   1367.666612 -1497.422363      0.000000  2874.724854     2774.724854     3.0      1377.302490         False          False   False
5    1377.302490   -1297.422424  1834.397217   1377.302490   2050.499919 -1297.422424      0.000000  2674.724915     2674.724854     4.0      1377.302490         False          False   False
6    1777.327454   -1297.397461  1834.397217   1777.327454   3074.749878 -1297.397461      0.024963  3074.699951     2974.724854     5.0      1377.302490         False          False   False
7    4851.127258   -1134.397705  1834.397217   4851.127258   6148.499756 -1134.397705   2973.824768  3011.700195     2974.724854     6.0      1377.302490         False          False    True
8   14135.426575    -997.422607  1834.397217  14135.426575  12295.999512  -997.422607  12158.124084  2974.725098     2974.724854     7.0      1377.302490         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=12184473/4096.[0m
[08/15 15:57:42]  --------------------------------------------------------------------------------
[08/15 15:57:42]  Iteration: 3 (0 solution, 2 counterexamples)
[08/15 15:57:42]  Generator returned sat in 0.052208 secs.
[08/15 15:57:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:42]  Improved number of small numbers from 91 to 113 out of a max of 113
[08/15 15:57:42]  Verifer returned sat in 0.309489 secs.
[08/15 15:57:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t   losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0   -1234.597412   -1834.497559  1834.397461 -1234.597412     0.100000 -1834.497559    0.000000   599.900146      499.900146     6.0     -1834.497559            -1             -1   False
1   -1234.597412   -1734.497559  1834.397461 -1234.597412     0.100000 -1734.497559    0.000000   499.900146      399.900146     6.0     -1834.497559         False          False   False
2     265.702637   -1534.497559  1834.397461   265.702637  2000.200195 -1534.497559    0.100098  1800.100098     1800.100098     6.0     -1834.497559         False          False   False
3     265.702637   -1534.497559  1834.397461   265.702637   998.666667 -1534.497559    0.100098  1800.100098     1700.100098     6.0       265.602539         False          False    True
4     265.702637   -1334.497559  1834.397461   265.702637  1797.000000 -1334.497559    0.100098  1600.100098     1600.100098     7.0       265.602539         False          False    True
5     662.602539   -1234.497559  1834.397461   662.602539  1997.000000 -1234.497559   97.000000  1800.100098     1800.100098     4.0       265.602539         False           True   False
6     860.502441   -1233.297607  1834.397461   860.502441  1998.000000 -1233.297607  194.899902  1898.900146     1800.100098     5.0       265.602539         False          False    True
7     960.602295   -1134.497559  1834.397461   960.602295  1999.000000 -1134.497559  194.999756  1900.100098     1800.100098     6.0       265.602539         False          False    True
8    1060.502197    -934.497803  1834.397461  1060.502197  2000.000000  -934.497803  194.999756  1800.000244     1800.000000     7.0       265.602539         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=3686605/2048.[0m
[08/15 15:57:43]  --------------------------------------------------------------------------------
[08/15 15:57:43]  Iteration: 4 (0 solution, 3 counterexamples)
[08/15 15:57:43]  Generator returned sat in 0.086183 secs.
[08/15 15:57:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:45]  Improved gap from 0.0 to 26.5625
[08/15 15:57:45]  Improved number of small numbers from 65 to 68 out of a max of 114
[08/15 15:57:45]  Verifer returned sat in 2.403710 secs.
[08/15 15:57:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     533.933594     533.930947  1614.084961   533.933594    0.005127   533.930947    0.00125   0.001396       -0.001104     5.0       533.930947            -1             -1     -1
1     533.935947     533.933447  1614.084961   533.935947    0.003750   533.933447    0.00125   0.001250      -99.998750     1.0       533.934697         False           True   True
2     760.495947     733.933447  1614.084961   760.495947  226.561250   733.933447    0.00125  26.561250       26.561250     1.0       533.934697         False          False   True
3     760.495947     733.933447  1687.522461   760.495947   17.530617   733.933447    0.00125  26.561250       -0.001250     1.0       760.494697         False          False   True
4     761.230623     760.495947  1760.959961   761.230623   27.295926   760.495947    0.00125   0.733426      -25.829074     1.0       760.494697         False          False   True
5     802.441086     787.058447  1834.397461   802.441086   41.943889   787.058447    0.00125  15.381389      -11.181111     1.0       760.494697         False          False   True
6     850.975531     813.620947  1897.044128   850.975531   63.915833   813.620947    0.00125  37.353333        0.000000     1.0       760.494697         False          False   True
7     910.495947     850.974281  1937.523711   910.495947   96.873750   850.974281    0.00125  59.520417        0.000000     2.0       760.494697         False          False   True
8     910.495947     910.494697  1937.523926   910.495947    0.010000   910.494697    0.00125   0.000000      -99.999785     2.0       910.494697          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=108799/4096.[0m
[08/15 15:57:46]  --------------------------------------------------------------------------------
[08/15 15:57:46]  Iteration: 5 (0 solution, 4 counterexamples)
[08/15 15:57:46]  Generator returned sat in 0.066248 secs.
[08/15 15:57:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:48]  Improved number of small numbers from 67 to 73 out of a max of 113
[08/15 15:57:48]  Verifer returned sat in 2.048411 secs.
[08/15 15:57:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t    arrival_0,t      cwnd_0,t  service_0,t     losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     334.010986     134.009658  1914.00875     334.010986      0.025000   134.009658       0.00125   200.000078      100.000078     8.0       134.009658            -1             -1     -1
1     334.010986     333.984658  1914.00875     334.010986    199.974854   333.984658       0.00125     0.025078        0.000078     6.0       134.009658         False           True   True
2     533.935908     434.009658  1914.00875     533.935908    199.950000   434.009658       0.00125    99.925000       99.925000     1.0       533.934658          True           True  False
3    2034.060908     533.959658  1914.00875    2034.060908   1600.050000   533.959658       0.02625  1500.075000     1500.025000     1.0       533.934658         False          False  False
4    4333.010908     534.009658  1914.00875    4333.010908   3799.025000   534.009658    2198.97625  1600.025000     1500.025000     2.0       533.934658         False          False   True
5   10630.073408     634.009658  1914.00875   10630.073408   7897.087500   634.009658    8396.03875  1600.025000     1500.025000     3.0       533.934658         False          False   True
6   25123.223408     734.009658  1914.00875   25123.223408  16093.175000   734.009658   22789.18875  1600.025000     1500.025000     4.0       533.934658         False          False   True
7   56008.623408     934.009658  1914.00875   56008.623408  32485.425000   934.009658   53574.58875  1500.025000     1500.025000     5.0       533.934658         False          False   True
8  120078.448408     934.009766  1914.00875  120078.448408  65569.850000   934.009766  117544.41375  1600.024893     1500.025000     6.0      2534.034658          True           True   True
high_util=True, low_loss=False, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=60001/40.[0m
[08/15 15:57:49]  --------------------------------------------------------------------------------
[08/15 15:57:49]  Iteration: 6 (0 solution, 5 counterexamples)
[08/15 15:57:49]  Generator returned sat in 0.210457 secs.
[08/15 15:57:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:51]  Improved number of small numbers from 30 to 38 out of a max of 113
[08/15 15:57:51]  Verifer returned sat in 1.910134 secs.
[08/15 15:57:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t    arrival_0,t       cwnd_0,t  service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0     433.936035     133.935908  1914.0825     433.936035       0.025146   133.935908       0.006287   299.993840      199.993840     9.0       133.935908            -1             -1     -1
1     433.936035     233.948481  1914.0825     433.936035     299.987305   233.948481       0.006287   199.981267       99.993840     9.0       133.935908         False           True   True
2     533.935908     433.935908  1914.0825     533.935908     299.981140   433.935908       0.006287    99.993713       99.993713     1.0       533.929622          True           True  False
3  507000.855354     533.935908  1914.0825  507000.855354  506566.913159   533.935908  504966.913159  1500.006287     1500.006287     1.0       533.929622         False          False  False
4  759384.305647     633.929622  1914.0825  759384.305647  253883.456580   633.929622  757250.363452  1500.012573     1500.006287     2.0       533.929622         False          False   True
5  885425.993074     633.935908  1914.0825  885425.993074  127541.700000   633.935908  883192.050879  1600.006287     1500.006287     3.0       533.929622         False          False   True
6  947896.836787     833.935908  1914.0825  947896.836787   64070.850000   833.935908  945562.894592  1500.006287     1500.006287     4.0       533.929622         False          False   True
7  978882.255500     933.935908  1914.0825  978882.255500   32485.425000   933.935908  976448.313306  1500.006287     1500.006287     5.0      2433.942195          True           True   True
8  994074.971144     933.942139  1914.0825  994074.971144   16692.721930   933.942139  991541.028949  1600.000056     1500.006287     6.0      2433.942195         False           True   True
high_util=True, low_loss=False, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=24576103/16384.[0m
[08/15 15:57:52]  --------------------------------------------------------------------------------
[08/15 15:57:52]  Iteration: 7 (0 solution, 6 counterexamples)
[08/15 15:57:52]  Generator returned sat in 0.242366 secs.
[08/15 15:57:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:54]  Improved number of small numbers from 34 to 40 out of a max of 113
[08/15 15:57:54]  Verifer returned sat in 1.646349 secs.
[08/15 15:57:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t    arrival_0,t       cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  127313.629639  127074.629622  1914.0825  127313.629639     238.949707  127074.629622       0.025195  238.974822      138.974822     4.0    127074.629622            -1             -1     -1
1  127313.629639  127174.629622  1914.0825  127313.629639     238.949707  127174.629622       0.025195  138.974822       38.974822     3.0    127074.629622         False           True   True
2  127313.680012  127313.629622  1914.0825  127313.680012     139.025195  127313.629622       0.025195    0.025195      -60.974805     1.0    127313.654817          True           True  False
3  884923.879695  127374.629622  1914.0825  884923.879695  757610.224878  127374.629622  757349.275269  199.974805       99.974805     1.0    127313.654817         False          False  False
4  885174.904890  127574.629622  1914.0825  885174.904890     451.000000  127574.629622  757500.300464   99.974805       99.974805     1.0    127313.654817         False          False   True
5  885675.930085  127674.629622  1914.0825  885675.930085     601.000000  127674.629622  757901.325659   99.974805       99.974805     1.0    127313.654817         False          False   True
6  886118.455281  127674.654817  1914.0825  886118.455281     542.500000  127674.654817  758243.850854  199.949609       99.974805     2.0    127313.654817         False          False   True
7  886369.543464  127774.629622  1914.0825  886369.543464     451.037793  127774.629622  758394.939038  199.974805       99.974805     2.0    127974.604426          True           True   True
8  886470.568660  127874.629639  1914.0825  886470.568660     301.000000  127874.629639  758395.964233  199.974788       99.974805     2.0    127974.604426         False           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=511871/5120.[0m
[08/15 15:57:55]  --------------------------------------------------------------------------------
[08/15 15:57:55]  Iteration: 8 (0 solution, 7 counterexamples)
[08/15 15:57:55]  Generator returned sat in 0.366128 secs.
[08/15 15:57:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:55]  Improved gap from 0.00125 to 100
[08/15 15:57:56]  Improved number of small numbers from 32 to 114 out of a max of 114
[08/15 15:57:56]  Verifer returned sat in 0.737649 secs.
[08/15 15:57:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  884375.279785  126924.704346  2164.007568  884375.279785     0.099854  126924.704346  757250.775391  199.800049      199.800049     2.0    126924.704346            -1             -1     -1
1  884375.279785  126924.804443  2164.007568  884375.279785     0.100098  126924.804443  757250.775391  199.699951       99.800049     3.0    126924.704346         False          False   True
2  884475.379883  127124.604248  2164.007568  884475.379883   299.800049  127124.604248  757250.775391  100.000244       99.900146     1.0    126924.704346          True           True  False
3  884675.079834  127124.704346  2164.007568  884675.079834   299.700195  127124.704346  757349.275391  201.100098      101.100098     2.0    127325.804443         False          False  False
4  884675.079834  127224.704346  2164.007568  884675.079834   201.000000  127224.704346  757349.275391  101.100098        1.100098     2.0    127325.804443         False          False   True
5  885574.779541  127374.754395  2164.007568  885574.779541  1000.799805  127374.754395  758048.975098  151.050049      101.100098     1.0    127325.804443         False          False   True
6  885674.879639  127424.804443  2164.007568  885674.879639   251.150146  127424.804443  758049.075195  201.000000      101.100098     2.0    127325.804443         False          False   True
7  885774.979736  127524.804443  2164.007568  885774.979736   301.100098  127524.804443  758049.175293  201.000000      101.100098     3.0    127325.804443         False          False   True
8  885875.079834  127724.704346  2164.007568  885875.079834   301.100098  127724.704346  758049.275391  101.100098      101.100098     2.0    127825.804443          True           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=207053/2048.[0m
[08/15 15:57:57]  --------------------------------------------------------------------------------
[08/15 15:57:57]  Iteration: 9 (0 solution, 8 counterexamples)
[08/15 15:57:57]  Generator returned sat in 0.589492 secs.
[08/15 15:57:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:58]  Improved number of small numbers from 92 to 113 out of a max of 113
[08/15 15:57:58]  Verifer returned sat in 0.225531 secs.
[08/15 15:57:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  884375.279785  126923.704346  2164.007324  884375.279785     0.099609  126923.704346  757250.775391  200.800049      199.800049     2.0    126923.704346            -1             -1     -1
1  884375.279785  126924.804443  2164.007324  884375.279785     0.099854  126924.804443  757250.775391  199.699951       99.800049     3.0    126923.704346         False          False   True
2  884475.379639  127124.604004  2164.007324  884475.379639   299.799805  127124.604004  757250.775391  100.000244       99.899902     1.0    126923.704346          True           True  False
3  884673.079590  127124.704346  2164.007324  884673.079590   297.700195  127124.704346  757347.275146  201.100098      101.100098     2.0    127325.804443         False          False  False
4  884673.079590  127224.704346  2164.007324  884673.079590   201.000000  127224.704346  757347.275146  101.100098        1.100098     2.0    127325.804443         False          False   True
5  885574.779297  127375.229248  2164.007324  885574.779297  1002.799805  127375.229248  758048.974854  150.575195      101.100098     1.0    127325.804443         False          False   True
6  885674.829346  127425.279297  2164.007324  885674.829346   250.625244  127425.279297  758049.024902  200.525146      101.100098     2.0    127325.804443         False          False   True
7  885774.879150  127525.279541  2164.007324  885774.879150   300.574951  127525.279541  758049.074707  200.524902      101.100098     3.0    127325.804443         False          False   True
8  885874.929443  127724.704102  2164.007324  885874.929443   300.575195  127724.704102  758049.125000  101.100342      101.100098     2.0    127825.804443          True           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=207053/2048.[0m
[08/15 15:57:58]  --------------------------------------------------------------------------------
[08/15 15:57:58]  Iteration: 10 (0 solution, 9 counterexamples)
[08/15 15:57:59]  Generator returned sat in 0.253567 secs.
[08/15 15:57:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:57:59]  Improved number of small numbers from 67 to 113 out of a max of 113
[08/15 15:57:59]  Verifer returned sat in 0.324548 secs.
[08/15 15:57:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  885178.169434  127827.493896  2164.007324  885178.169434  1802.400146  127827.493896  757250.775391    99.900146       99.900146     1.0    127827.493896            -1             -1   False
1  886880.569336  127927.493896  2164.007324  886880.569336  1802.300049  127927.493896  757250.775391  1702.300049     1702.300049     1.0    129629.793945         False          False   False
2  886880.569336  128026.494141  2164.007324  886880.569336  1702.199951  128026.494141  757250.775391  1603.299805     1602.300049     2.0    129629.793945         False          False   False
3  886880.569336  128027.493896  2164.007324  886880.569336  1603.199951  128027.493896  757250.775391  1602.300049     1502.300049     3.0    129629.793945         False           True   False
4  886880.569336  128227.493896  2164.007324  886880.569336  1602.199951  128227.493896  757250.775391  1402.300049     1402.300049     4.0    129629.793945         False           True   False
5  887079.469238  128228.594238  2164.007324  887079.469238  1601.199951  128228.594238  757250.775391  1600.099609     1501.199951     5.0    129629.793945         False           True   False
6  887079.569580  128427.493896  2164.007324  887079.569580  1600.199951  128427.493896  757250.775391  1401.300293     1401.300293     6.0    129629.793945         False           True   False
7  887277.469238  128527.493896  2164.007324  887277.469238  1599.199951  128527.493896  757250.775391  1499.199951     1499.199951     7.0    129629.793945         False           True   False
8  887376.469238  128627.493896  2164.007324  887376.469238  1598.199951  128627.493896  757250.775391  1498.199951     1498.199951     8.0    129629.793945         False           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6973031/4096.[0m
[08/15 15:58:00]  --------------------------------------------------------------------------------
[08/15 15:58:00]  Iteration: 11 (0 solution, 10 counterexamples)
[08/15 15:58:00]  Generator returned sat in 0.200114 secs.
[08/15 15:58:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:00]  Improved gap from 0.0 to 100
[08/15 15:58:01]  Improved number of small numbers from 47 to 114 out of a max of 114
[08/15 15:58:01]  Verifer returned sat in 0.562425 secs.
[08/15 15:58:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  886581.169434  128028.393799  2363.652344  886581.169434  100.000000  128028.393799  758552.675537    0.100098        0.100098     2.0    128028.393799            -1             -1   False
1  886680.969482  128028.593750  2363.652344  886680.969482   99.900146  128028.593750  758552.675537   99.700195       -0.099854     1.0    128128.293945         False          False   False
2  886880.569336  128128.394043  2363.652344  886880.569336  299.300049  128128.394043  758553.075439  199.099854       99.100098     1.0    128128.293945         False          False   False
3  886980.669434  128228.393799  2363.652344  886980.669434  299.199951  128228.393799  758553.175537  199.100098       99.100098     2.0    128427.493896         False          False    True
4  886980.669434  128328.393799  2363.652344  886980.669434  199.000000  128328.393799  758553.175537   99.100098       -0.899902     2.0    128427.493896         False          False    True
5  887481.169434  128428.493896  2363.652344  887481.169434  599.600098  128428.493896  758853.675537  199.000000       99.100098     1.0    128427.493896         False          False    True
6  887581.269287  128572.493896  2363.652344  887581.269287  299.099854  128572.493896  758853.775391  155.000000       99.100098     2.0    128427.493896         False          False    True
7  887769.369385  128727.593750  2363.652344  887769.369385  343.100098  128727.593750  758941.875488   99.900146       99.100098     1.0    128427.493896         False          False    True
8  888067.669189  128728.393799  2363.652344  888067.669189  398.199951  128728.393799  759140.175293  199.100098       99.100098     2.0    128427.493896         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=202957/2048.[0m
[08/15 15:58:01]  --------------------------------------------------------------------------------
[08/15 15:58:01]  Iteration: 12 (0 solution, 11 counterexamples)
[08/15 15:58:02]  Generator returned sat in 0.287211 secs.
[08/15 15:58:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:02]  Improved gap from 0.0 to 100
[08/15 15:58:03]  Improved number of small numbers from 76 to 82 out of a max of 114
[08/15 15:58:03]  Verifer returned sat in 1.000344 secs.
[08/15 15:58:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t   service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  886283.569092   127678.59375  2363.652344  886283.569092  300.200000  127678.59375  758305.075684  299.899658      199.899658     1.0     127678.59375            -1             -1     -1
1  886283.769287   127778.59375  2363.652344  886283.769287  300.099854  127778.59375  758305.275537  199.900000       99.900000     2.0     127978.49375         False          False   True
2  886383.869287   127978.59375  2363.652344  886383.869287  300.000000  127978.59375  758305.375537   99.900000       99.900000     1.0     128078.49375         False           True   True
3  886483.969287   128078.59375  2363.652344  886483.969287  200.000000  128078.59375  758305.475537   99.900000       99.900000     1.0     128178.49375         False          False   True
4  886983.069287   128078.59375  2363.652344  886983.069287  599.000000  128078.59375  758704.575537  199.900000       99.900000     1.0     128178.49375         False          False   True
5  887232.169287   128278.59375  2363.652344  887232.169287  449.000000  128278.59375  758853.675537   99.900000       99.900000     1.0     128178.49375         False          False   True
6  887581.269287   128378.59375  2363.652344  887581.269287  449.000000  128378.59375  759102.775537   99.900000       99.900000     1.0     128178.49375         False          False   True
7  887930.369287   128378.99375  2363.652344  887930.369287  449.000000  128378.99375  759351.875537  199.500000       99.900000     2.0     128178.49375         False          False   True
8  888180.469287   128578.59375  2363.652344  888180.469287  449.600000  128578.59375  759501.975537   99.900000       99.900000     1.0     128678.49375          True           True   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=5, buffer=999/10.[0m
[08/15 15:58:04]  --------------------------------------------------------------------------------
[08/15 15:58:04]  Iteration: 13 (0 solution, 12 counterexamples)
[08/15 15:58:04]  Generator returned sat in 0.235193 secs.
[08/15 15:58:04]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:05]  Improved gap from 0.000625 to 100
[08/15 15:58:06]  Improved number of small numbers from 59 to 65 out of a max of 114
[08/15 15:58:06]  Verifer returned sat in 1.430357 secs.
[08/15 15:58:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  886731.968994  127828.593896  2363.652344  886731.968994    0.050049  127828.593896  758803.425293   99.949805       99.949805     1.0    127828.593896            -1             -1   False
1  886731.968994  127828.593896  2363.652344  886731.968994    0.050049  127828.593896  758803.425293   99.949805       -0.050195     1.0    127828.593896         False          False   False
2  886732.069189  127928.593896  2363.652344  886732.069189  100.050000  127928.593896  758803.425293    0.050000      -99.950000     1.0    127828.593896         False          False   False
3  886981.969189  128128.593896  2363.652344  886981.969189  249.950000  128128.593896  758803.475293   49.900000       49.900000     1.0    127828.593896         False          False   False
4  887082.069189  128228.593896  2363.652344  887082.069189  150.000000  128228.593896  758803.575293   49.900000       49.900000     1.0    127828.593896         False          False    True
5  887232.169189  128228.593896  2363.652344  887232.169189  200.000000  128228.593896  758853.675293  149.900000       49.900000     1.0    127828.593896         False          False    True
6  887232.269189  128378.543896  2363.652344  887232.269189  150.000000  128378.543896  758853.675293    0.050000      -50.000000     1.0    127828.593896         False          False    True
7  887758.144189  128528.593896  2363.652344  887758.144189  525.925000  128528.593896  759179.650293   49.900000       49.900000     1.0    127828.593896         False          False    True
8  887858.244189  128578.543701  2363.652344  887858.244189  150.000000  128578.543701  759179.750293   99.950195       49.900000     1.0    127828.593896         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=499/10.[0m
[08/15 15:58:06]  --------------------------------------------------------------------------------
[08/15 15:58:06]  Iteration: 14 (0 solution, 13 counterexamples)
[08/15 15:58:07]  Generator returned sat in 0.493617 secs.
[08/15 15:58:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:07]  Improved gap from 0.005 to 100
[08/15 15:58:08]  Improved number of small numbers from 51 to 114 out of a max of 114
[08/15 15:58:08]  Verifer returned sat in 0.354027 secs.
[08/15 15:58:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  886431.993896  127528.568848  2663.67749  886431.993896     0.005127  127528.568848  758803.425049   100.000000      100.000000     6.0    127528.568848            -1             -1   False
1  886431.993896  127528.568848  2663.67749  886431.993896     0.005127  127528.568848  758803.425049   100.000000        0.000000     6.0    127528.568848         False          False   False
2  888131.993896  127728.563721  2663.67749  888131.993896  1800.000000  127728.563721  758803.425049  1600.005127     1600.000000     1.0    127528.568848         False          False   False
3  888131.993896  127728.568848  2663.67749  888131.993896  1100.004883  127728.568848  758803.425049  1600.000000     1500.000000     2.0    129328.568848         False          False   False
4  888131.993896  127928.568848  2663.67749  888131.993896  1300.004883  127928.568848  758803.425049  1400.000000     1400.000000     3.0    129328.568848         False          False   False
5  888431.998779  128028.568848  2663.67749  888431.998779  1700.004883  128028.568848  758803.425049  1600.004883     1600.004883     4.0    129328.568848         False          False   False
6  888832.003906  128112.568848  2663.67749  888832.003906  2000.010010  128112.568848  759103.430176  1616.004883     1600.004883     5.0    129328.568848         False          False   False
7  888832.003906  128228.568604  2663.67749  888832.003906   191.000000  128228.568604  759103.430176  1500.005127     1500.004883     6.0    129328.568848         False          False    True
8  888832.003906  128328.568848  2663.67749  888832.003906     0.010000  128328.568848  759103.430176  1400.004883     1400.004883     7.0    129328.568848         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1638405/1024.[0m
[08/15 15:58:08]  --------------------------------------------------------------------------------
[08/15 15:58:08]  Iteration: 15 (0 solution, 14 counterexamples)
[08/15 15:58:10]  Generator returned sat in 1.500685 secs.
[08/15 15:58:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:10]  Improved number of small numbers from 113 to 113 out of a max of 113
[08/15 15:58:10]  Verifer returned sat in 0.168521 secs.
[08/15 15:58:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  886431.993896  127528.568848  2663.67749  886431.993896     0.005127  127528.568848  758803.425049   100.000000      100.000000     6.0    127528.568848            -1             -1   False
1  886431.993896  127528.568848  2663.67749  886431.993896     0.005127  127528.568848  758803.425049   100.000000        0.000000     6.0    127528.568848         False          False   False
2  888131.993896  127728.563721  2663.67749  888131.993896  1800.000000  127728.563721  758803.425049  1600.005127     1600.000000     1.0    127528.568848         False          False   False
3  888131.993896  127728.568848  2663.67749  888131.993896   425.751221  127728.568848  758803.425049  1600.000000     1500.000000     2.0    129328.568848         False          False   False
4  888131.993896  127928.568848  2663.67749  888131.993896   850.502441  127928.568848  758803.425049  1400.000000     1400.000000     3.0    129328.568848         False          False   False
5  888431.998779  128028.568848  2663.67749  888431.998779  1700.004883  128028.568848  758803.425049  1600.004883     1600.004883     4.0    129328.568848         False          False   False
6  890231.003662  128112.568848  2663.67749  890231.003662  3399.009766  128112.568848  760502.429932  1616.004883     1600.004883     5.0    129328.568848         False          False   False
7  890231.003662  128228.568604  2663.67749  890231.003662     0.010000  128228.568604  760502.429932  1500.005127     1500.004883     6.0    129328.568848         False          False    True
8  890231.003662  128328.568848  2663.67749  890231.003662     0.010000  128328.568848  760502.429932  1400.004883     1400.004883     7.0    129328.568848         False          False    True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1638405/1024.[0m
[08/15 15:58:11]  --------------------------------------------------------------------------------
[08/15 15:58:11]  Iteration: 16 (0 solution, 15 counterexamples)
[08/15 15:58:12]  Generator returned sat in 0.322426 secs.
[08/15 15:58:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:13]  Improved gap from 0.0 to 100
[08/15 15:58:14]  Improved number of small numbers from 54 to 103 out of a max of 114
[08/15 15:58:14]  Verifer returned sat in 2.596343 secs.
[08/15 15:58:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  885219.491455  125516.068848  4576.177246  885219.491455     0.005000  125516.068848  758803.425049   899.997559      799.997559     3.0    125516.068848            -1             -1     -1
1  885219.491455  125716.068604  4576.177246  885219.491455     0.002686  125716.068604  758803.425049   699.997803      699.997559     3.0    126416.066406         False          False   True
2  886619.496338  125716.068848  4576.177246  886619.496338  2100.002686  125716.068848  758803.425049  2100.002441     2000.002441     4.0    126416.066406         False          False   True
3  886619.496338  125916.068848  4576.177246  886619.496338   416.421235  125916.068848  758803.425049  1900.002441     1900.002441     4.0    127816.071289         False          False   True
4  886619.496338  126016.066406  4576.177246  886619.496338   623.631852  126016.066406  758803.425049  1800.004883     1800.002441     5.0    127816.071289         False          False   True
5  886619.496338  126016.068848  4576.177246  886619.496338   934.447778  126016.068848  758803.425049  1800.002441     1700.002441     6.0    127816.071289         False          False   True
6  886619.496338  126216.068730  4576.177246  886619.496338  1400.671667  126216.068730  758803.425049  1600.002559     1600.002441     7.0    127816.071289         False          False   True
7  887119.501279  126216.071289  4576.177246  887119.501279  2100.007500  126216.071289  758803.427549  2100.002441     2000.004883     8.0    127816.071289         False          False   True
8  887119.501279  126416.068848  4576.177246  887119.501279     0.010000  126416.068848  758803.427549  1900.004883     1900.004883     7.0    127816.071289         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2048005/1024.[0m
[08/15 15:58:15]  --------------------------------------------------------------------------------
[08/15 15:58:15]  Iteration: 17 (0 solution, 16 counterexamples)
[08/15 15:58:17]  Generator returned sat in 1.410774 secs.
[08/15 15:58:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:18]  Improved gap from 0.0 to 100
[08/15 15:58:18]  Improved number of small numbers from 79 to 84 out of a max of 114
[08/15 15:58:18]  Verifer returned sat in 1.449511 secs.
[08/15 15:58:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  886333.826172  127635.901172  2556.344922  886333.826172    0.099854  127635.901172  758697.725049    0.199951        0.199951     1.0    127635.901172            -1             -1     -1
1  886333.826172  127635.901172  2556.344922  886333.826172    0.100098  127635.901172  758697.725049    0.199951      -99.800049     1.0    127635.901172         False          False   True
2  886534.026221  127735.901172  2556.344922  886534.026221  200.400000  127735.901172  758697.925049  100.200000        0.200000     1.0    127635.901172         False          False   True
3  886634.126221  127935.901172  2556.344922  886634.126221  200.300000  127935.901172  758698.025049    0.200000        0.200000     1.0    127936.101172         False          False   True
4  886784.926221  127991.901172  2556.344922  886784.926221  151.000000  127991.901172  758748.825049   44.200000        0.200000     1.0    127936.101172         False          False   True
5  886919.726221  128081.901172  2556.344922  886919.726221  179.000000  128081.901172  758783.625049   54.200000        0.200000     1.0    127936.101172         False          False   True
6  887039.526221  128202.101172  2556.344922  887039.526221  174.000000  128202.101172  758803.425049   34.000000        0.200000     1.0    127936.101172         False          False   True
7  887139.626221  128335.901172  2556.344922  887139.626221  134.100000  128335.901172  758803.525049    0.200000        0.200000     1.0    127936.101172         False          False   True
8  887312.426221  128336.001221  2556.344922  887312.426221  173.000000  128336.001221  758876.325049  100.099951        0.200000     2.0    127936.101172         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=1/5.[0m
[08/15 15:58:19]  --------------------------------------------------------------------------------
[08/15 15:58:19]  Iteration: 18 (0 solution, 17 counterexamples)
[08/15 15:58:20]  Generator returned sat in 0.257001 secs.
[08/15 15:58:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:20]  Improved gap from 0.02496337890625 to 100
[08/15 15:58:21]  Improved number of small numbers from 20 to 114 out of a max of 114
[08/15 15:58:21]  Verifer returned sat in 0.675605 secs.
[08/15 15:58:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  883577.571533  124279.921143  5912.324707  883577.571533     0.099854  124279.921143  758597.675293   699.975098      699.975098     2.0    124279.921143            -1             -1     -1
1  884681.696289  124279.921387  5912.324707  884681.696289  1804.099854  124279.921387  758697.725098  1704.049805     1604.050049     2.0    124279.921143         False          False   True
2  884781.721436  124478.921143  5912.324707  884781.721436  1804.074951  124478.921143  758697.750244  1605.050049     1604.050049     3.0    126083.971191         False          False   True
3  884781.721436  124479.921143  5912.324707  884781.721436  1605.024902  124479.921143  758697.750244  1604.050049     1504.050049     4.0    126083.971191         False          False   True
4  884781.721436  124679.921143  5912.324707  884781.721436  1604.024902  124679.921143  758697.750244  1404.050049     1404.050049     5.0    126083.971191         False          False   True
5  884980.696289  124778.946289  5912.324707  884980.696289  1603.024902  124778.946289  758697.750244  1503.999756     1503.024902     6.0    126083.971191         False          False   True
6  885078.721436  124779.921143  5912.324707  885078.721436  1602.024902  124779.921143  758697.750244  1601.050049     1501.050049     7.0    126083.971191         False          False   True
7  885078.721436  124979.921143  5912.324707  885078.721436  1601.024902  124979.921143  758697.750244  1401.050049     1401.050049     7.0    126083.971191         False          False   True
8  885277.696289  124979.921143  5912.324707  885277.696289  1600.024902  124979.921143  758697.750244  1600.024902     1500.024902     7.0    126083.971191         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6570189/4096.[0m
[08/15 15:58:21]  --------------------------------------------------------------------------------
[08/15 15:58:21]  Iteration: 19 (0 solution, 18 counterexamples)
[08/15 15:58:22]  Generator returned sat in 0.510572 secs.
[08/15 15:58:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:23]  Improved gap from 0.0 to 23.4375
[08/15 15:58:24]  Improved number of small numbers from 48 to 61 out of a max of 114
[08/15 15:58:24]  Verifer returned sat in 1.824403 secs.
[08/15 15:58:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  886034.759277  127213.570469  5835.763672  886034.759277  123.438721  127213.570469  758697.750244  123.438564       23.438779     2.0    127213.570469            -1             -1     -1
1  886034.759463  127313.571533  5912.324707  886034.759463  123.438750  127313.571533  758697.750244   23.437686        0.000000     2.0    127213.570469         False          False   True
2  886134.759277  127437.007969  5912.324707  886134.759277  123.437500  127437.007969  758697.750244    0.001064       -0.000186     1.0    127437.009033         False          False   True
3  886234.759463  127537.007969  5912.324707  886234.759463  100.001250  127537.007969  758697.750244    0.001250        0.000000     1.0    127537.009219         False          False   True
4  886881.633213  127637.009219  5912.324707  886881.633213  646.875000  127637.009219  759244.621494    0.002500        0.002500     1.0    127537.009219         False          False   True
5  886881.640713  127637.012969  5988.883457  886881.640713    0.010000  127637.012969  759244.621494    0.006250      -23.431250     1.0    127537.009219         False          False   True
6  887281.644463  127760.441895  5988.883457  887281.644463  400.010000  127760.441895  759521.191494    0.011074        0.002500     1.0    127537.009219         False          False   True
7  887281.644463  127760.450469  6062.325957  887281.644463    0.010000  127760.450469  759521.191494    0.002500      -26.555000     2.0    127537.009219         False          False   True
8  887528.524463  127787.008057  6062.325957  887528.524463  246.882500  127787.008057  759641.513994  100.002412        0.002500     1.0    127537.009219         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/400.[0m
[08/15 15:58:25]  --------------------------------------------------------------------------------
[08/15 15:58:25]  Iteration: 20 (0 solution, 19 counterexamples)
[08/15 15:58:25]  Generator returned sat in 0.142707 secs.
[08/15 15:58:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:26]  Improved gap from 0.0125 to 23.4375
[08/15 15:58:26]  Improved number of small numbers from 56 to 114 out of a max of 114
[08/15 15:58:26]  Verifer returned sat in 0.879762 secs.
[08/15 15:58:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  886781.659424  128083.884277  5912.324707  886781.659424    0.001465  128083.884277  758597.762695  100.012451      100.011230     1.0    128083.884277            -1             -1     -1
1  886881.646973  128083.885498  5912.324707  886881.646973  200.000000  128083.885498  758697.750244  100.011230        0.011230     2.0    128083.884277         False          False   True
2  886981.634521  128283.883057  5912.324707  886981.634521  199.998779  128283.883057  758697.750244    0.001221       -0.001221     1.0    128283.884277          True           True   True
3  886981.636963  128283.885498  5912.324707  886981.636963    0.003662  128283.885498  758697.750244    0.001221      -99.998779     1.0    128283.886719         False          False   True
4  887381.638184  128483.885498  5912.324707  887381.638184  400.002441  128483.885498  758897.741455    0.011230        0.011230     1.0    128283.886719         False          False   True
5  887381.638184  128483.885498  5988.887207  887381.638184    0.010000  128483.885498  758897.741455    0.011230      -23.426270     1.0    128283.886719         False          False   True
6  887781.631836  128607.322998  5988.887207  887781.631836  400.004883  128607.322998  759174.297607    0.011230        0.011230     1.0    128283.886719         False          False   True
7  887781.631836  128607.322998  6062.325928  887781.631836    0.010000  128607.322998  759174.297607    0.011230      -26.550049     1.0    128283.886719         False          False   True
8  888028.495605  128633.884277  6062.325928  888028.495605  246.875000  128633.884277  759294.600098  100.011230        0.011230     1.0    128283.886719         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=23/2048.[0m
[08/15 15:58:27]  --------------------------------------------------------------------------------
[08/15 15:58:27]  Iteration: 21 (0 solution, 20 counterexamples)
[08/15 15:58:28]  Generator returned sat in 0.180140 secs.
[08/15 15:58:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:29]  Improved number of small numbers from 58 to 69 out of a max of 113
[08/15 15:58:29]  Verifer returned sat in 1.114984 secs.
[08/15 15:58:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  886852.058105  127954.307861  5941.902344  886852.058105    0.001221  127954.307861  758697.750061  200.000183      100.000183     1.0    127954.307861            -1             -1     -1
1  886852.058472  128154.307861  5941.902344  886852.058472  200.000549  128154.307861  758697.750244    0.000366        0.000366     2.0    127954.307861         False          False   True
2  886952.058350  128254.307861  5941.902344  886952.058350  100.000244  128254.307861  758697.750244    0.000244        0.000244     1.0    128254.308105          True           True   True
3  887052.058105  128354.307678  5941.902344  887052.058105  100.000000  128354.307678  758697.750244    0.000183        0.000000     1.0    128354.307861         False          False   True
4  887852.057556  128421.641317  5941.902344  887852.057556  799.999634  128421.641317  759397.749329   32.666911        0.000366     1.0    128354.307861         False          False   True
5  887952.057373  128454.308411  5941.902344  887952.057373  132.666728  128454.308411  759397.749329   99.999634        0.000183     1.0    128354.307861         False          False   True
6  888252.058838  128654.307861  5941.902344  888252.058838  400.001099  128654.307861  759597.750610    0.000366        0.000366     1.0    128354.307861         False          False   True
7  888401.058563  128754.307861  5941.902344  888401.058563  149.000092  128754.307861  759646.750336    0.000366        0.000366     1.0    128354.307861         False          False   True
8  888566.391469  128754.308594  5941.902344  888566.391469  165.333272  128754.308594  759712.083242   99.999634        0.000366     1.0    128354.307861         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=3/8192.[0m
[08/15 15:58:30]  --------------------------------------------------------------------------------
[08/15 15:58:30]  Iteration: 22 (0 solution, 21 counterexamples)
[08/15 15:58:32]  Generator returned sat in 1.923298 secs.
[08/15 15:58:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:34]  Improved number of small numbers from 43 to 43 out of a max of 113
[08/15 15:58:34]  Verifer returned sat in 1.674989 secs.
[08/15 15:58:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  886852.058105  127954.307861  5941.902344  886852.058105     0.001221  127954.307861  758697.750061  200.000183      100.000183     8.0    127954.307861            -1             -1     -1
1  887667.392502  128154.307861  5941.902344  887667.392502  1015.334579  128154.307861  759513.084274    0.000366        0.000366     9.0    127954.307861         False          False   True
2  887767.392471  128186.974518  5941.902344  887767.392471   100.000336  128186.974518  759513.084274   67.333679        0.000336     1.0    128254.308197          True           True   True
3  887800.059097  128286.974792  5941.902344  887800.059097   100.000305  128286.974792  759513.084274    0.000031      -67.333038     1.0    128286.974823         False          False   True
4  887967.392532  128420.974752  5941.902344  887967.392532   167.333466  128420.974752  759513.084305   33.333476        0.000366     1.0    128286.974823         False          False   True
5  888067.392502  128554.307861  5941.902344  888067.392502   133.333445  128554.307861  759513.084305    0.000336        0.000336     1.0    128286.974823         False          False   True
6  888252.058838  128654.307861  5941.902344  888252.058838   184.666672  128654.307861  759597.750610    0.000366        0.000366     1.0    128286.974823         False          False   True
7  888435.725006  128754.307861  5941.902344  888435.725006   183.666534  128754.307861  759681.416779    0.000366        0.000366     1.0    128286.974823         False          False   True
8  888602.391195  128754.308594  5941.902344  888602.391195   166.666555  128754.308594  759748.082967   99.999634        0.000366     1.0    128286.974823         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=3/8192.[0m
[08/15 15:58:34]  --------------------------------------------------------------------------------
[08/15 15:58:34]  Iteration: 23 (0 solution, 22 counterexamples)
[08/15 15:58:37]  Generator returned sat in 1.555130 secs.
[08/15 15:58:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:39]  Improved gap from 0.0 to 23.4375
[08/15 15:58:40]  Improved number of small numbers from 61 to 75 out of a max of 114
[08/15 15:58:40]  Verifer returned sat in 3.004548 secs.
[08/15 15:58:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888251.358643  128607.311523  5941.902100  888251.358643    0.099854  128607.311523  759513.083984  130.963135      130.963012     1.0    128607.311523            -1             -1     -1
1  888251.358643  128607.311768  5941.902100  888251.358643    0.100098  128607.311768  759513.083984  130.962891       30.963012     2.0    128607.311523         False          False   True
2  888351.558838  128807.311646  5941.902100  888351.558838  231.163086  128807.311646  759513.184229   31.062963       31.062963     1.0    128607.311523          True           True  False
3  888351.558838  128807.311646  6010.739258  888351.558838   30.962963  128807.311646  759513.184229   31.062963       -0.099879     1.0    128838.374609         False          False   True
4  888365.940319  128838.474609  6087.301637  888365.940319   45.444444  128838.474609  759513.184229   14.281481       -9.156019     1.0    128838.374609         False          False   True
5  888418.825505  128861.912109  6143.572470  888418.825505   67.166667  128861.912109  759513.184229   43.729167        0.000000     1.0    128838.374609         False          False   True
6  888474.846338  128905.641276  6187.551637  888474.846338   99.750000  128905.641276  759513.184229   56.020833        0.000000     2.0    128838.374609         False          False   True
7  888474.846338  128961.662109  6264.114137  888474.846338   48.875000  128961.662109  759513.184229    0.000000      -23.437500     2.0    128961.662109          True           True  False
8  888498.283838  128985.099609  6264.114258  888498.283838   23.437500  128985.099609  759513.184229    0.000000      -99.999879     1.0    128961.662109         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=8387/270.[0m
[08/15 15:58:40]  --------------------------------------------------------------------------------
[08/15 15:58:40]  Iteration: 24 (0 solution, 23 counterexamples)
[08/15 15:58:42]  Generator returned sat in 0.655476 secs.
[08/15 15:58:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:43]  Improved gap from 0.0 to 48.4375
[08/15 15:58:44]  Improved number of small numbers from 59 to 68 out of a max of 114
[08/15 15:58:44]  Verifer returned sat in 1.848094 secs.
[08/15 15:58:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888552.696338  128591.199707  5958.013893  888552.696338    0.025146  128591.199707  759513.058984  448.437646      448.437500     7.0    128591.199707            -1             -1     -1
1  888552.721338  128691.199707  5958.013893  888552.721338  448.462646  128691.199707  759513.083984  348.437646      348.437500     8.0    128591.199707         False          False   True
2  888552.721338  128791.199707  5958.013893  888552.721338  348.437256  128791.199707  759513.083984  248.437646      248.437500     4.0    129039.637354          True           True   True
3  888552.721338  128845.862354  5958.013893  888552.721338  199.850000  128845.862354  759513.083984  193.775000      148.437500     5.0    129039.637354         False          False   True
4  888552.721338  128991.174854  5958.013893  888552.721338   98.925000  128991.174854  759513.083984   48.462500       48.437500     6.0    129039.637354         False          False   True
5  888552.721338  128991.199854  6009.576393  888552.721338   48.462500  128991.199854  759513.083984   48.437500        0.000000     7.0    129039.637354         False          False   True
6  888552.721338  129039.637354  6061.138893  888552.721338   23.231250  129039.637354  759513.083984    0.000000      -48.437500     8.0    129039.637354         False          False   True
7  888650.608838  129088.074854  6111.688893  888650.608838   97.887500  129088.074854  759513.083984   49.450000        0.000000     1.0    129039.637354         False           True  False
8  888650.608838  129137.524854  6111.688965  888650.608838   49.450000  129137.524854  759513.083984    0.000000      -99.999928     2.0    129039.637354         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/15 15:58:44]  --------------------------------------------------------------------------------
[08/15 15:58:44]  Iteration: 25 (0 solution, 24 counterexamples)
[08/15 15:58:48]  Generator returned sat in 3.036298 secs.
[08/15 15:58:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:48]  Improved gap from 0.0 to 100
[08/15 15:58:49]  Improved number of small numbers from 61 to 114 out of a max of 114
[08/15 15:58:49]  Verifer returned sat in 0.566696 secs.
[08/15 15:58:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888552.696289  128691.199707  6111.688721  888552.696289     0.024902  128691.199707  759261.499268   599.997314      599.997314     6.0    128691.199707            -1             -1     -1
1  889453.371338  128691.199707  6111.688721  889453.371338  1500.672363  128691.199707  759261.499268  1500.672363     1400.672363     6.0    128691.199707         False          False   True
2  889453.371338  128891.199707  6111.688721  889453.371338   534.744722  128891.199707  759261.499268  1300.672363     1300.672363     5.0    130191.872070         False          False   True
3  889453.371338  128991.199707  6111.688721  889453.371338   534.742188  128991.199707  759261.499268  1200.672363     1200.672363     5.0    130191.872070         False          False   True
4  889453.371338  128991.199707  6111.688721  889453.371338   801.113281  128991.199707  759261.499268  1200.672363     1100.672363     5.0    130191.872070         False          False   True
5  889453.371338  129191.199707  6111.688721  889453.371338  1200.669922  129191.199707  759261.499268  1000.672363     1000.672363     6.0    130191.872070         False          False   True
6  890252.703857  129191.202148  6111.688721  890252.703857  1800.004883  129191.202148  759261.501465  1800.000244     1700.002686     7.0    130191.872070         False          False   True
7  890252.703857  129291.199707  6111.688721  890252.703857     0.010000  129291.199707  759261.501465  1700.002686     1600.002686     7.0    130191.872070         False           True   True
8  890252.703857  129391.199707  6111.688721  890252.703857   450.000000  129391.199707  759261.501465  1600.002686     1500.002686     8.0    130191.872070         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6963211/4096.[0m
[08/15 15:58:49]  --------------------------------------------------------------------------------
[08/15 15:58:49]  Iteration: 26 (0 solution, 25 counterexamples)
[08/15 15:58:51]  Generator returned sat in 0.530396 secs.
[08/15 15:58:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:51]  Improved gap from 0.0016666666666666668 to 100
[08/15 15:58:52]  Improved number of small numbers from 58 to 61 out of a max of 114
[08/15 15:58:52]  Verifer returned sat in 1.408265 secs.
[08/15 15:58:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  889352.263005  128691.199707  6111.688721  889352.263005     0.004883  128691.199707  760361.068298   299.995000      299.995000     2.0    128691.199707            -1             -1     -1
1  889352.263005  128791.199707  6111.688721  889352.263005   299.990000  128791.199707  760361.068298   199.995000      199.995000     2.0    128691.199707         False          False   True
2  889352.263005  128873.537423  6111.688721  889352.263005   199.990000  128873.537423  760361.068298   117.657284       99.995000     3.0    128991.194707         False          False   True
3  889552.263005  128991.199707  6111.688721  889552.263005   317.657284  128991.199707  760361.068298   199.995000      199.995000     1.0    128991.194707         False          False   True
4  889827.753930  129091.199707  6111.688721  889827.753930   475.485926  129091.199707  760361.068298   375.485926      375.485926     2.0    128991.194707         False          False   True
5  890164.496893  129191.199707  6111.688721  890164.496893   712.228889  129191.199707  760361.068298   612.228889      612.228889     2.0    128991.194707         False          False   True
6  890619.611338  129291.199707  6111.688721  890619.611338  1067.343333  129291.199707  760361.068298   967.343333      967.343333     3.0    128991.194707         False          False   True
7  891252.283005  129291.204590  6111.688721  891252.283005  1600.015000  129291.204590  760361.073298  1600.005117     1500.010000     4.0    128991.194707         False          False   True
8  891252.283005  129491.199463  6111.688721  891252.283005     0.010000  129491.199463  760361.073298  1400.010244     1400.010000     4.0    128991.194707         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=150001/100.[0m
[08/15 15:58:53]  --------------------------------------------------------------------------------
[08/15 15:58:53]  Iteration: 27 (0 solution, 26 counterexamples)
[08/15 15:58:55]  Generator returned sat in 1.218426 secs.
[08/15 15:58:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:58:56]  Improved gap from 0.00125 to 100
[08/15 15:58:57]  Improved number of small numbers from 61 to 68 out of a max of 114
[08/15 15:58:57]  Verifer returned sat in 2.326372 secs.
[08/15 15:58:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  890652.797607  128691.199707  6111.688721  890652.797607     0.002441  128691.199707  761961.592673     0.005228        0.005228     1.0    128691.199707            -1             -1     -1
1  890652.797607  128691.199707  6111.688721  890652.797607     0.002686  128691.199707  761961.592673     0.005228      -99.994772     1.0    128691.199707         False          False   True
2  890852.789880  128791.199707  6111.688721  890852.789880   199.997500  128791.199707  761961.592673    99.997500       -0.002500     1.0    128691.199707         False          False   True
3  891552.294880  128891.199707  6111.688721  891552.294880   799.502500  128891.199707  761961.592673   699.502500      599.502500     1.0    128691.199707         False          False   True
4  892452.797380  129087.713457  6111.688721  892452.797380  1600.005000  129087.713457  761961.592673  1403.491250     1400.005000     2.0    128691.199707         False          False   True
5  892643.336130  129191.199707  6111.688721  892643.336130  1594.030000  129191.199707  761961.592673  1490.543750     1490.543750     3.0    130681.743457          True           True  False
6  892750.807380  129291.199707  6111.688721  892750.807380  1598.015000  129291.199707  761961.592673  1498.015000     1498.015000     4.0    130681.743457         False           True  False
7  892852.799880  129291.202393  6111.688721  892852.799880  1600.007500  129291.202393  761961.595173  1600.002314     1500.005000     5.0    130681.743457         False           True  False
8  892852.799880  129491.199707  6111.688721  892852.799880     0.010000  129491.199707  761961.595173  1400.005000     1400.005000     6.0    130681.743457         False           True   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=300001/200.[0m
[08/15 15:58:58]  --------------------------------------------------------------------------------
[08/15 15:58:58]  Iteration: 28 (0 solution, 27 counterexamples)
[08/15 15:58:59]  Generator returned sat in 0.749885 secs.
[08/15 15:58:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:00]  Improved gap from 0.005 to 100
[08/15 15:59:01]  Improved number of small numbers from 33 to 44 out of a max of 114
[08/15 15:59:01]  Verifer returned sat in 1.535679 secs.
[08/15 15:59:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  890853.837158  128692.249707  6010.638721  890853.837158   299.999756  128692.249707  761961.592673   199.994779       99.994779     3.0    128692.249707            -1             -1     -1
1  890953.837380  128892.249707  6010.638721  890953.837380   299.995000  128892.249707  761961.592673    99.995000       99.995000     1.0    128992.244707         False          False   True
2  891153.832380  128992.249512  6010.638721  891153.832380   299.990000  128992.249512  761961.592673   199.990195      199.990000     1.0    129192.239707         False          False   True
3  891153.832380  128993.107666  6010.638721  891153.832380    99.063438  128993.107666  761961.592673   199.132041       99.990000     2.0    129192.239707         False          False   True
4  891153.832380  129092.249707  6010.638721  891153.832380   199.126875  129092.249707  761961.592673    99.990000       -0.010000     3.0    129192.239707         False          False   True
5  891453.096130  129292.249707  6010.638721  891453.096130   399.253750  129292.249707  761961.592673   199.253750      199.253750     1.0    129192.239707         False          False   True
6  892053.349880  129392.244707  6010.638721  892053.349880   799.507500  129392.244707  761961.592673   699.512500      699.507500     2.0    129192.239707         False          False   True
7  892953.852380  129392.249756  6010.638721  892953.852380  1600.015000  129392.249756  761961.597673  1600.004951     1500.005000     3.0    129192.239707         False          False   True
8  892953.852380  129592.249512  6010.638721  892953.852380     0.010000  129592.249512  761961.597673  1400.005195     1400.005000     3.0    129192.239707         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=300001/200.[0m
[08/15 15:59:01]  --------------------------------------------------------------------------------
[08/15 15:59:01]  Iteration: 29 (0 solution, 28 counterexamples)
[08/15 15:59:05]  Generator returned sat in 2.456100 secs.
[08/15 15:59:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:06]  Improved gap from 0.005 to 23.4375
[08/15 15:59:07]  Improved number of small numbers from 55 to 85 out of a max of 114
[08/15 15:59:07]  Verifer returned sat in 2.254228 secs.
[08/15 15:59:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  890753.842285  128692.249756  6010.638672  890753.842285    0.002500  128692.249756  761961.592529  100.000000        0.000000     8.0    128692.249756            -1             -1     -1
1  890777.282227  128792.252197  6087.198730  890777.282227  123.439941  128792.252197  761961.592529   23.437500        0.000000     1.0    128692.249756         False           True   True
2  890877.282227  128892.252350  6087.198730  890877.282227  123.437500  128892.252350  761961.592529   23.437347        0.000000     1.0    128915.689697         False          False   True
3  891100.719880  128974.540684  6087.198730  891100.719880  246.875000  128974.540684  761961.592529  164.586667      123.437653     1.0    128915.689697         False          False   True
4  891100.719880  129115.687500  6087.198730  891100.719880    0.010000  129115.687500  761961.592529   23.439850       23.437653     2.0    128915.689697         False          False   True
5  891100.719880  129115.689697  6163.761077  891100.719880    0.010000  129115.689697  761961.592529   23.437653        0.000000     3.0    128915.689697         False          False   True
6  891100.719880  129139.127350  6240.323577  891100.719880    0.010000  129139.127350  761961.592529    0.000000      -23.437500     4.0    128915.689697         False          False   True
7  891347.599880  129239.127441  6240.323577  891347.599880  246.880000  129239.127441  761961.595029  146.877409      123.440000     1.0    129386.004850          True           True  False
8  891347.599880  129262.564941  6240.323577  891347.599880    0.010000  129262.564941  761961.595029  123.439909       23.440000     2.0    129386.004850         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3086/25.[0m
[08/15 15:59:08]  --------------------------------------------------------------------------------
[08/15 15:59:08]  Iteration: 30 (0 solution, 29 counterexamples)
[08/15 15:59:09]  Generator returned sat in 0.685650 secs.
[08/15 15:59:09]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:10]  Improved gap from 23.4375 to 23.4375
[08/15 15:59:12]  Improved number of small numbers from 46 to 59 out of a max of 114
[08/15 15:59:12]  Verifer returned sat in 2.827232 secs.
[08/15 15:59:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888083.273926  126121.680600  8581.207827  888083.273926  299.999756  126121.680600  761961.592529    0.000796      -99.999204     9.0    126121.680600            -1             -1     -1
1  888383.272505  126321.680420  8581.207827  888383.272505  299.999375  126321.680420  761961.592529   99.999555       99.999375     1.0    126421.679975         False           True  False
2  888383.273682  126421.680600  8581.207827  888383.273682  100.000732  126421.680600  761961.592529    0.000552        0.000552     1.0    126421.681152         False          False  False
3  888383.274380  126421.681225  8581.207827  888383.274380    0.001250  126421.681225  761961.592529    0.000625      -99.998750     1.0    126421.681850         False          False  False
4  888832.275317  126618.556225  8581.207827  888832.275317  449.001562  126618.556225  762087.157217  126.561875      123.437500     1.0    126421.681850         False          False  False
5  888832.275317  126721.679932  8581.207827  888832.275317    0.010000  126721.679932  762087.157217   23.438169       23.437500     2.0    126421.681850         False          False   True
6  888832.275317  126721.680600  8657.770327  888832.275317    0.010000  126721.680600  762087.157217   23.437500        0.000000     3.0    126421.681850         False          False   True
7  888832.275317  126745.118100  8734.332764  888832.275317    0.010000  126745.118100  762087.157217    0.000000      -23.437564     4.0    126421.681850         False          False   True
8  889021.123130  126768.555664  8734.332764  889021.123130  188.847813  126768.555664  762087.157217  165.410249       65.410249     1.0    126933.965913          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/15 15:59:13]  --------------------------------------------------------------------------------
[08/15 15:59:13]  Iteration: 31 (0 solution, 30 counterexamples)
[08/15 15:59:16]  Generator returned sat in 2.227183 secs.
[08/15 15:59:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:16]  Improved gap from 0.00125 to 100
[08/15 15:59:17]  Improved number of small numbers from 52 to 60 out of a max of 114
[08/15 15:59:17]  Verifer returned sat in 1.373617 secs.
[08/15 15:59:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888283.273193  126221.680600  8581.207827  888283.273193   599.999756  126221.680600  761961.592529   100.000064      100.000064     6.0      126221.6806            -1             -1     -1
1  888783.273130  126321.680420  8581.207827  888783.273130   600.000000  126321.680420  761961.592529   500.000180      500.000000     7.0      126221.6806         False          False   True
2  888783.273130  126321.680600  8581.207827  888783.273130     0.002686  126321.680600  761961.592529   500.000000      400.000000     4.0      126821.6806          True           True  False
3  889082.775630  126521.678100  8581.207827  889082.775630   799.502500  126521.678100  761961.592529   599.505000      599.502500     3.0      126821.6806         False          False  False
4  890083.275630  126521.680600  8581.207827  890083.275630  1600.005000  126521.680600  761961.592529  1600.002500     1500.002500     4.0      126821.6806         False          False  False
5  891684.283130  126721.680600  8581.207827  891684.283130  3201.010000  126721.680600  761961.592529  3001.010000     3001.010000     5.0      126821.6806         False          False  False
6  895086.293130  126821.678223  8581.207827  895086.293130  6403.020000  126821.678223  765263.600029  3001.014878     3001.012500     6.0      126821.6806         False          False  False
7  895086.293130  126821.680600  8581.207827  895086.293130     0.010000  126821.680600  765263.600029  3001.012500     2901.012500     7.0      126821.6806         False          False   True
8  895086.293130  127021.680420  8581.207827  895086.293130     1.020000  127021.680420  765263.600029  2801.012680     2801.012500     6.0      126821.6806         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=240081/80.[0m
[08/15 15:59:18]  --------------------------------------------------------------------------------
[08/15 15:59:18]  Iteration: 32 (0 solution, 31 counterexamples)
[08/15 15:59:24]  Generator returned sat in 5.592021 secs.
[08/15 15:59:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:25]  Improved gap from 0.1 to 100
[08/15 15:59:26]  Improved number of small numbers from 50 to 114 out of a max of 114
[08/15 15:59:26]  Verifer returned sat in 1.127753 secs.
[08/15 15:59:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  889585.193115  127523.500732  7279.287598  889585.193115    0.100098  127523.500732  761961.592285  100.100098      100.000000     4.0    127523.500732            -1             -1     -1
1  889585.193115  127523.600830  7279.287598  889585.193115    0.100098  127523.600830  761961.592285  100.000000        0.000000     4.0    127523.500732         False           True   True
2  889685.193115  127623.600830  7279.287598  889685.193115  200.000000  127623.600830  761961.592285  100.000000        0.000000     3.0    127523.500732          True           True  False
3  889685.193115  127723.600830  7279.287598  889685.193115    0.100098  127723.600830  761961.592285    0.000000     -100.000000     2.0    127723.600830          True           True  False
4  889984.393311  127824.600830  7279.287598  889984.393311  299.200195  127824.600830  761961.592285  198.200195       99.200195     1.0    127723.600830         False          False  False
5  890386.293213  128023.267334  7279.287598  890386.293213  600.100098  128023.267334  762263.292480   99.733398       99.399902     1.0    127723.600830         False          False  False
6  890486.393066  128123.600830  7279.287598  890486.393066  199.833252  128123.600830  762263.392334   99.399902       99.399902     1.0    127723.600830         False          False   True
7  890586.993164  128223.600830  7279.287598  890586.993164  200.000000  128223.600830  762263.992432   99.399902       99.399902     1.0    127723.600830         False          False   True
8  890687.093262  128323.600830  7279.287598  890687.093262  199.500000  128323.600830  762264.092529   99.399902       99.399902     1.0    127723.600830         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=4, buffer=203571/2048.[0m
[08/15 15:59:26]  --------------------------------------------------------------------------------
[08/15 15:59:26]  Iteration: 33 (0 solution, 32 counterexamples)
[08/15 15:59:29]  Generator returned sat in 1.446673 secs.
[08/15 15:59:29]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:31]  Improved gap from 0.0025 to 31.25
[08/15 15:59:32]  Improved number of small numbers from 48 to 59 out of a max of 114
[08/15 15:59:32]  Verifer returned sat in 3.288973 secs.
[08/15 15:59:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  888055.654785  126094.061296  8708.827132  888055.654785  100.011250  126094.061296  761961.592285    0.001204        0.001204     1.0    126094.061296            -1             -1   False
1  888155.663581  126094.063965  8708.827132  888155.663581  100.010000  126094.063965  761961.592285  100.007331        0.010000     1.0    126194.071296         False          False   False
2  888255.654785  126294.061296  8708.827132  888255.654785  199.998535  126294.061296  761961.592285    0.001204        0.001204     1.0    126194.071296         False          False   False
3  888352.412331  126390.818796  8708.827132  888352.412331   96.758750  126390.818796  761961.592285    0.001250       -3.241250     1.0    126390.820046         False          False   False
4  888798.547331  126494.061296  8708.827132  888798.547331  446.136250  126494.061296  762304.474785    0.011250        0.011250     1.0    126390.820046         False          False   False
5  888798.547331  126494.061296  8777.577132  888798.547331    0.010000  126494.061296  762304.474785    0.011250      -31.238750     1.0    126390.820046         False          False    True
6  888899.541081  126525.311296  8807.821045  888899.541081  101.005000  126525.311296  762304.474785   69.755000       -0.001087     1.0    126390.820046         False          False    True
7  888948.534831  126595.067546  8858.828369  888948.534831  118.748750  126595.067546  762304.474785   48.992500       -0.000013     1.0    126390.820046         False          False    True
8  889010.419831  126644.060059  8896.943359  889010.419831  110.877500  126644.060059  762304.474785   61.884987       -0.000023     1.0    126390.820046         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=9/800.[0m
[08/15 15:59:33]  --------------------------------------------------------------------------------
[08/15 15:59:33]  Iteration: 34 (0 solution, 33 counterexamples)
[08/15 15:59:38]  Generator returned sat in 4.768804 secs.
[08/15 15:59:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:39]  Improved gap from 0.0 to 100
[08/15 15:59:39]  Improved number of small numbers from 39 to 114 out of a max of 114
[08/15 15:59:40]  Verifer returned sat in 0.948231 secs.
[08/15 15:59:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888143.963623  125994.061523  8708.826904  888143.963623  255.949951  125994.061523  761905.752441  244.149658      144.149658     9.0    125994.061523            -1             -1     -1
1  888155.663818  126094.061523  8708.826904  888155.663818  255.849854  126094.061523  761905.952393  155.649902       55.649902     2.0    126249.711426         False           True  False
2  888255.763916  126238.311279  8708.826904  888255.763916  255.750000  126238.311279  761906.052490  111.400146       55.649902     2.0    126349.711426         False          False   True
3  888400.113770  126364.561523  8708.826904  888400.113770  255.750000  126364.561523  761950.402344   85.149902       55.649902     1.0    126349.711426         False          False   True
4  888500.213867  126464.561523  8708.826904  888500.213867  185.250000  126464.561523  761950.502441   85.149902       55.649902     1.0    126349.711426         False          False   True
5  888600.313965  126549.811279  8708.826904  888600.313965  185.250000  126549.811279  761950.602539   99.900146       55.649902     1.0    126349.711426         False          False   True
6  888656.163818  126694.061279  8708.826904  888656.163818  155.750000  126694.061279  761950.602539   11.500000       11.499756     1.0    126349.711426         False          False   True
7  888800.413818  126794.061523  8708.826904  888800.413818  155.750000  126794.061523  761950.702393   55.649902       55.649902     1.0    126349.711426         False          False   True
8  888909.513916  126794.161133  8708.826904  888909.513916  164.750000  126794.161133  761959.802490  155.550293       55.649902     2.0    126349.711426         False          False   True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=4, buffer=113971/2048.[0m
[08/15 15:59:40]  --------------------------------------------------------------------------------
[08/15 15:59:40]  Iteration: 35 (0 solution, 34 counterexamples)
[08/15 15:59:42]  Generator returned sat in 1.051013 secs.
[08/15 15:59:42]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:43]  Improved number of small numbers from 75 to 113 out of a max of 113
[08/15 15:59:43]  Verifer returned sat in 0.386064 secs.
[08/15 15:59:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  887953.864014  126094.061523  8708.82666  887953.864014    0.099854  126094.061523  761759.702637  100.099854      100.099854     2.0    126094.061523            -1             -1   False
1  887953.864014  126176.061279  8708.82666  887953.864014    0.099854  126176.061279  761759.702637   18.100098        0.099854     2.0    126094.061523         False          False   False
2  888136.063965  126194.161377  8708.82666  888136.063965  200.300049  126194.161377  761841.802490  100.100098        0.199951     3.0    126094.061523         False          False   False
3  888236.164062  126394.061523  8708.82666  888236.164062  200.200195  126394.061523  761841.902588    0.199951        0.199951     1.0    126394.261475         False          False    True
4  888385.964111  126494.061279  8708.82666  888385.964111  150.000000  126494.061279  761891.702637    0.200195        0.199951     1.0    126394.261475         False          False    True
5  888544.763916  126527.628174  8708.82666  888544.763916  159.000000  126527.628174  761950.502441   66.633301        0.199951     1.0    126394.261475         False          False    True
6  888644.864014  126660.928223  8708.82666  888644.864014  166.733398  126660.928223  761950.602539   33.333252        0.199951     1.0    126394.261475         False          False    True
7  888744.964111  126766.061279  8708.82666  888744.964111  133.433350  126766.061279  761950.702637   28.200195        0.199951     1.0    126394.261475         False          False    True
8  888852.763916  126794.361328  8708.82666  888852.763916  136.000000  126794.361328  761958.502441   99.900146        0.199951     1.0    126394.261475         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=819/4096.[0m
[08/15 15:59:43]  --------------------------------------------------------------------------------
[08/15 15:59:43]  Iteration: 36 (0 solution, 35 counterexamples)
[08/15 15:59:45]  Generator returned sat in 1.143130 secs.
[08/15 15:59:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:46]  Improved number of small numbers from 102 to 113 out of a max of 113
[08/15 15:59:46]  Verifer returned sat in 0.244793 secs.
[08/15 15:59:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  887953.863770  126094.061523  8708.826416  887953.863770    0.099609  126094.061523  761759.702393  100.099854      100.099609     2.0    126094.061523            -1             -1   False
1  887953.863770  126171.860596  8708.826416  887953.863770    0.099854  126171.860596  761759.702393   22.300781        0.099609     2.0    126094.061523         False          False   False
2  888136.063721  126194.161377  8708.826416  888136.063721  204.500732  126194.161377  761841.802246  100.100098        0.199707     3.0    126094.061523         False          False   False
3  888236.163818  126394.061523  8708.826416  888236.163818  200.200195  126394.061523  761841.902344    0.199951        0.199707     1.0    126394.261475         False          False    True
4  888384.963867  126494.061279  8708.826416  888384.963867  149.000000  126494.061279  761890.702393    0.200195        0.199707     1.0    126394.261475         False          False    True
5  888544.864014  126528.261475  8708.826416  888544.864014  160.100342  126528.261475  761950.602539   66.000000        0.199707     1.0    126394.261475         False          False    True
6  888644.914062  126661.561523  8708.826416  888644.914062  166.050049  126661.561523  761950.652588   32.699951        0.199707     1.0    126394.261475         False          False    True
7  888744.964111  126766.061279  8708.826416  888744.964111  132.750000  126766.061279  761950.702637   28.200195        0.199707     1.0    126394.261475         False          False    True
8  888851.763916  126794.361328  8708.826416  888851.763916  135.000000  126794.361328  761957.502441   99.900146        0.199707     1.0    126394.261475         False          False    True
high_util=True, low_loss=False, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=5, buffer=409/2048.[0m
[08/15 15:59:46]  --------------------------------------------------------------------------------
[08/15 15:59:46]  Iteration: 37 (0 solution, 36 counterexamples)
[08/15 15:59:49]  Generator returned sat in 1.116832 secs.
[08/15 15:59:49]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:49]  Improved gap from 0.0016666666666666668 to 48.4375
[08/15 15:59:50]  Improved number of small numbers from 51 to 71 out of a max of 114
[08/15 15:59:50]  Verifer returned sat in 1.581862 secs.
[08/15 15:59:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  887953.765381  126074.070518  8708.826416  887953.765381    0.001465  126074.070518  761759.702393  119.992471      100.001221     2.0    126074.070518            -1             -1     -1
1  887953.765381  126192.964355  8708.826416  887953.765381  101.101074  126192.964355  761759.702393    1.098633        0.001221     2.0    126074.070518         False          False   True
2  888053.766602  126292.963018  8708.826416  888053.766602  101.099854  126292.963018  761759.702393    1.101191        0.002441     1.0    126294.064209         False          False   True
3  888153.765410  126353.400518  8708.826416  888153.765410  101.100000  126353.400518  761759.702393   40.662500        0.001250     1.0    126294.064209         False          False   True
4  888253.767910  126494.056768  8708.826416  888253.767910  140.665000  126494.056768  761759.703643    0.007500        0.002500     1.0    126294.064209         False          False   True
5  888253.770410  126494.065518  8760.385166  888253.770410    0.010000  126494.065518  761759.703643    0.001250      -48.436250     1.0    126294.064209         False          False   True
6  888355.320410  126542.503018  8807.270264  888355.320410  101.551250  126542.503018  761759.703643   53.113750       -0.001152     1.0    126294.064209         False          False   True
7  888397.757910  126595.618018  8858.832520  888397.757910   95.551250  126595.618018  761759.703643   42.436250       -6.001396     1.0    126294.064209         False          False   True
8  888407.102285  126644.055664  8910.395020  888407.102285   51.780625  126644.055664  761759.703643    3.342979      -45.094521     1.0    126294.064209         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/15 15:59:51]  --------------------------------------------------------------------------------
[08/15 15:59:51]  Iteration: 38 (0 solution, 37 counterexamples)
[08/15 15:59:54]  Generator returned sat in 2.406071 secs.
[08/15 15:59:54]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 15:59:55]  Improved gap from 0.00125 to 23.4375
[08/15 15:59:56]  Improved number of small numbers from 55 to 114 out of a max of 114
[08/15 15:59:56]  Verifer returned sat in 1.079405 secs.
[08/15 15:59:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  887948.355469  126111.077881  9380.805176  887948.355469  101.015000  126111.077881  761759.702148   77.575439       -0.001953     1.0    126111.077881            -1             -1    True
1  887971.792725  126188.655518  9457.367432  887971.792725  101.012695  126188.655518  761759.702148   23.435059       -0.002441     1.0    126212.090576         False          False    True
2  888049.370361  126212.093018  9457.367432  888049.370361  101.012695  126212.093018  761759.702148   77.575195      -22.424805     1.0    126212.090576         False          False    True
3  888071.797852  126312.093018  9457.367432  888071.797852  100.002686  126312.093018  761759.702148    0.002686      -99.997314     1.0    126312.095703         False          False    True
4  888271.810303  126512.093018  9457.367432  888271.810303  200.015137  126512.093018  761759.704834    0.012451        0.012451     1.0    126312.095703         False          False    True
5  888271.810303  126512.093018  9532.914795  888271.810303    0.010000  126512.093018  761759.704834    0.012451      -24.440186     1.0    126312.095703         False          False    True
6  888570.797852  126636.545654  9532.914795  888570.797852  299.000000  126636.545654  761934.239746    0.012451        0.012451     1.0    126312.095703         False          False    True
7  888570.797852  126636.545654  9609.477295  888570.797852    0.010000  126636.545654  761934.239746    0.012451      -23.425049     1.0    126312.095703         False          False    True
8  888694.238037  126659.983154  9609.477295  888694.238037  123.452637  126659.983154  761934.242432  100.012451        0.012451     1.0    126312.095703         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=51/4096.[0m
[08/15 15:59:56]  --------------------------------------------------------------------------------
[08/15 15:59:56]  Iteration: 39 (0 solution, 38 counterexamples)
[08/15 15:59:59]  Generator returned sat in 1.946716 secs.
[08/15 15:59:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:00:00]  Improved number of small numbers from 58 to 65 out of a max of 113
[08/15 16:00:00]  Verifer returned sat in 1.081044 secs.
[08/15 16:00:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  887971.807861  125836.545654  9632.914551  887971.807861     0.002500  125836.545654  761835.256572   300.005635      200.005635     2.0    125836.545654            -1             -1     -1
1  887971.807861  125936.545654  9632.914551  887971.807861     0.002500  125936.545654  761835.256572   200.005635      100.005635     2.0    125836.545654         False          False   True
2  887971.807861  126136.545654  9632.914551  887971.807861   200.003125  126136.545654  761835.256572     0.005635        0.005635     3.0    125836.545654         False          False   True
3  888171.802852  126236.541904  9632.914551  888171.802852   200.000625  126236.541904  761835.256572   100.004375      100.000625     1.0    126336.546279         False          False   True
4  888471.799727  126336.545654  9632.914551  888471.799727   400.001250  126336.545654  761835.256572   299.997500      299.997500     2.0    126336.546279         False          False   True
5  888971.804727  126436.545654  9632.914551  888971.804727   800.002500  126436.545654  761835.256572   700.002500      700.002500     2.0    126336.546279         False          False   True
6  889871.807227  126436.548154  9632.914551  889871.807227  1600.005000  126436.548154  761835.256572  1600.002500     1500.005000     3.0    126336.546279         False          False   True
7  891471.814727  126636.545410  9632.914551  891471.814727  3200.010000  126636.545410  763335.264072  1500.005244     1500.005000     3.0    126336.546279         False          False   True
8  891471.814727  126736.545654  9632.914551  891471.814727     0.010000  126736.545654  763335.264072  1400.005000     1400.005000     4.0    126336.546279         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=300001/200.[0m
[08/15 16:00:01]  --------------------------------------------------------------------------------
[08/15 16:00:01]  Iteration: 40 (0 solution, 39 counterexamples)
[08/15 16:00:06]  Generator returned sat in 3.874820 secs.
[08/15 16:00:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][8]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:00:07]  Improved gap from 0.0 to 12.5
[08/15 16:00:08]  Improved number of small numbers from 38 to 114 out of a max of 114
[08/15 16:00:08]  Verifer returned sat in 1.338063 secs.
[08/15 16:00:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  887873.548340  125936.541748  9632.914551  887873.548340    0.050049  125936.541748  761637.006592  300.000000      200.000000     8.0    125936.541748            -1             -1   False
1  888003.698242  126136.541748  9632.914551  888003.698242  430.149902  126136.541748  761637.006592  230.149902      230.149902     8.0    125936.541748         False          False   False
2  888203.648438  126136.541992  9632.914551  888203.648438  430.100098  126136.541992  761637.056641  430.049805      330.050049     8.0    126566.591797         False          False   False
3  888203.648438  126236.541748  9632.914551  888203.648438  430.000000  126236.541748  761637.056641  330.050049      230.050049     9.0    126566.591797         False          False    True
4  888203.648438  126436.541748  9632.914551  888203.648438  214.000000  126436.541748  761637.056641  130.050049      130.050049     3.0    126566.591797         False           True   False
5  888203.648438  126521.941895  9632.914551  888203.648438  106.000000  126521.941895  761637.056641   44.649902       30.050049     4.0    126566.591797         False          False   False
6  888210.998535  126561.491943  9695.464355  888210.998535   52.000000  126561.491943  761637.056641   12.449951       -0.050049     5.0    126566.591797         False          False   False
7  888223.548584  126573.991943  9782.964355  888223.548584   25.000000  126573.991943  761637.056641   12.500000        0.000000     1.0    126566.591797         False          False   False
8  888223.548584  126586.491943  9870.464355  888223.548584   11.500000  126586.491943  761637.056641    0.000000      -12.500000     2.0    126566.591797         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1351885/4096.[0m
[08/15 16:00:08]  --------------------------------------------------------------------------------
[08/15 16:00:08]  Iteration: 41 (0 solution, 40 counterexamples)
[08/15 16:00:11]  Generator returned sat in 1.713375 secs.
[08/15 16:00:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:00:12]  Improved gap from 0.0008333333333333334 to 23.4375
[08/15 16:00:12]  Improved number of small numbers from 74 to 86 out of a max of 114
[08/15 16:00:12]  Verifer returned sat in 1.220363 secs.
[08/15 16:00:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888103.650879  126433.977679  9565.581055  888103.650879    0.050049  126433.977679  761637.006592   32.666608       32.666445     9.0    126433.977679            -1             -1     -1
1  888103.650879  126433.980179  9632.914551  888103.650879   32.666504  126433.980179  761637.006592   32.664108       -0.000059     2.0    126433.977679         False           True  False
2  888203.648438  126466.644531  9632.914551  888203.648438  132.661667  126466.644531  761637.006592   99.997314       -0.002500     1.0    126433.977679         False          False  False
3  888236.310303  126566.644346  9632.914551  888236.310303  132.659180  126566.644346  761637.006592   32.659365      -67.340635     1.0    126599.303711         False          False  False
4  888403.650937  126763.521846  9632.914551  888403.650937  200.000000  126763.521846  761637.006592    3.122500        0.000000     1.0    126599.303711         False          False  False
5  888895.840938  126866.641602  9632.914551  888895.840938  495.312500  126866.641602  762005.759092   23.440244       23.437500     1.0    126599.303711         False          False  False
6  888895.840938  126866.644346  9709.477051  888895.840938    0.010000  126866.644346  762005.759092   23.437500        0.000000     2.0    126599.303711         False          False   True
7  888895.840938  126890.081846  9786.039551  888895.840938    0.010000  126890.081846  762005.759092    0.000000      -23.437500     3.0    126599.303711         False          False   True
8  889086.680937  126913.519531  9786.039551  889086.680937  190.840000  126913.519531  762049.724092  123.437314       23.437500     1.0    127036.956846          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=2, buffer=375/16.[0m
[08/15 16:00:13]  --------------------------------------------------------------------------------
[08/15 16:00:13]  Iteration: 42 (0 solution, 41 counterexamples)
[08/15 16:00:17]  Generator returned sat in 2.263230 secs.
[08/15 16:00:17]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:00:17]  Improved gap from 0.0016666666666666668 to 0
[08/15 16:00:17]  Improved number of small numbers from 93 to 101 out of a max of 114
[08/15 16:00:17]  Verifer returned sat in 0.621704 secs.
[08/15 16:00:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888103.648193  126066.641846   9832.917236  888103.648193    0.002500  126066.641846  761637.006592  399.999756      299.999941     6.0    126066.641846            -1             -1     -1
1  888103.648193  126166.641846   9832.917236  888103.648193    0.001465  126166.641846  761637.006592  299.999756      199.999941     6.0    126466.641602         False           True   True
2  888203.646973  126266.641846   9832.917236  888203.646973  399.998535  126266.641846  761637.006592  299.998535      199.998721     4.0    126466.641602         False           True  False
3  888353.637188  126466.641602   9832.917236  888353.637188  449.988750  126466.641602  761637.006592  249.988994      249.988936     4.0    126466.641602         False           True  False
4  888353.637188  126566.641602   9832.917236  888353.637188    0.010000  126566.641602  761637.006592  149.988994      149.988936     2.0    126466.641602         False           True  False
5  888353.637188  126666.641602   9832.917236  888353.637188    0.010000  126666.641602  761637.006592   49.988994       49.988936     3.0    126716.630596          True           True  False
6  888353.637188  126716.630596   9882.928301  888353.637188    0.010000  126716.630596  761637.006592    0.000000        0.000000     4.0    126716.630596         False           True  False
7  888353.647188  126716.630596   9982.918301  888353.647188    0.010000  126716.630596  761637.006592    0.010000        0.000000     4.0    126716.630596         False           True  False
8  888353.647188  126716.640596  10082.918213  888353.647188    0.010000  126716.640596  761637.006592    0.000000       -0.000088     2.0    126716.630596         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1023959/4096.[0m
[08/15 16:00:18]  --------------------------------------------------------------------------------
[08/15 16:00:18]  Iteration: 43 (0 solution, 42 counterexamples)
[08/15 16:00:20]  Generator returned sat in 0.832115 secs.
[08/15 16:00:20]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:00:27]  Improved gap from 0.0 to 0
[08/15 16:00:28]  Improved number of small numbers from 37 to 46 out of a max of 114
[08/15 16:00:28]  Verifer returned sat in 7.938871 secs.
[08/15 16:00:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t   cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  887823.663086  126371.645410   9832.917236  887823.663086    0.00125  126371.645410  761352.02040   99.997275       99.997275     7.0     126371.64541            -1             -1     -1
1  887823.664561  126371.645410   9832.917236  887823.664561   99.99875  126371.645410  761352.02040   99.998750       -0.001250     7.0     126371.64541         False           True   True
2  887923.665811  126471.645410   9832.917236  887923.665811  200.00000  126471.645410  761352.02040  100.000000        0.000000     1.0     126371.64541         False           True  False
3  888021.669561  126571.646660   9832.917236  888021.669561  198.00375  126571.646660  761352.02040   98.002500       -1.996250     1.0     126669.64916         False          False  False
4  888123.669561  126771.645410   9832.917236  888123.669561  200.00250  126771.645410  761352.02165    0.002500        0.002500     1.0     126669.64916         False          False  False
5  888123.677061  126771.654160   9932.907227  888123.677061    0.01000  126771.654160  761352.02165    0.001250       -0.000010     1.0     126669.64916         False          False   True
6  888123.685811  126771.662910  10032.898438  888123.685811    0.01000  126771.662910  761352.02165    0.001250       -0.000049     1.0     126669.64916         False          False   True
7  888123.694561  126771.665410  10132.889648  888123.694561    0.01000  126771.665410  761352.02165    0.007500       -0.000088     1.0     126669.64916         False          False   True
8  888123.697061  126771.674316  10132.889893  888123.697061    0.01000  126771.674316  761352.02165    0.001094      -99.997344     1.0     126669.64916         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/400.[0m
[08/15 16:00:29]  --------------------------------------------------------------------------------
[08/15 16:00:29]  Iteration: 44 (0 solution, 43 counterexamples)
[08/15 16:00:41]  Generator returned sat in 10.707951 secs.
[08/15 16:00:41]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:00:41]  Improved gap from 0.001 to 0
[08/15 16:00:43]  Improved number of small numbers from 35 to 58 out of a max of 114
[08/15 16:00:43]  Verifer returned sat in 1.914172 secs.
[08/15 16:00:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888813.120605  127261.100586   9832.916992  888813.120605  0.001465  127261.100586  761352.0204  199.999619      199.999619     7.0    127261.100586            -1             -1     -1
1  888813.120605  127261.100586   9832.916992  888813.120605  0.001709  127261.100586  761352.0204  199.999619       99.999619     7.0    127261.100586         False           True   True
2  888813.120605  127461.098743   9832.917236  888813.120605  0.003333  127461.098743  761352.0204    0.001462       -0.000137     3.0    127261.100586         False           True  False
3  888813.120811  127461.100410   9932.908936  888813.120811  0.001667  127461.100410  761352.0204    0.000000       -0.008232     1.0    127461.100410         False          False  False
4  888813.130811  127461.108743  10032.900635  888813.130811  0.010000  127461.108743  761352.0204    0.001667       -0.006533     1.0    127461.100410         False          False  False
5  888813.139144  127461.117077  10132.892334  888813.139144  0.010000  127461.117077  761352.0204    0.001667       -0.006501     1.0    127461.100410         False          False  False
6  888813.147477  127461.125410  10232.890381  888813.147477  0.010000  127461.125410  761352.0204    0.001667       -0.000120     1.0    127461.100410         False          False  False
7  888813.155811  127461.133743  10332.882080  888813.155811  0.010000  127461.133743  761352.0204    0.001667       -0.000088     1.0    127461.100410         False          False  False
8  888813.164144  127461.137207  10332.882080  888813.164144  0.010000  127461.137207  761352.0204    0.006536      -99.991755     1.0    127461.100410         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=204803/2048.[0m
[08/15 16:00:43]  --------------------------------------------------------------------------------
[08/15 16:00:43]  Iteration: 45 (0 solution, 44 counterexamples)
[08/15 16:00:53]  Generator returned sat in 8.708255 secs.
[08/15 16:00:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:00:55]  Improved gap from 0.000625 to 4.6875
[08/15 16:00:55]  Improved number of small numbers from 104 to 114 out of a max of 114
[08/15 16:00:55]  Verifer returned sat in 1.786068 secs.
[08/15 16:00:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  889271.700439  127919.598145  9174.419189  889271.700439    4.783203  127919.598145  761352.020264    0.082031        0.081787     4.0    127919.598145            -1             -1   False
1  889276.387939  127919.693848  9269.636230  889276.387939    4.769531  127919.693848  761352.020264    4.673828       -0.013672     1.0    127924.367676         False          False   False
2  889276.469971  127924.381348  9364.948730  889276.469971    4.755859  127924.381348  761352.020264    0.068359       -4.619141     1.0    127924.449707         False          False   False
3  889294.343018  127929.068848  9451.681152  889294.343018   17.941406  127929.068848  761352.020264   13.253906       -0.013672     1.0    127924.449707         False          False   False
4  889299.030518  127942.336426  9546.993652  889299.030518   17.941406  127942.336426  761352.020264    4.673828       -0.013672     1.0    127924.449707         False          False   False
5  889338.641846  127947.023926  9607.382324  889338.641846   44.285156  127947.023926  761352.020264   39.597656       -0.013672     1.0    127924.449707         False          False   False
6  889343.329346  127986.635254  9702.694580  889343.329346   44.285156  127986.635254  761352.020264    4.673828       -0.013916     1.0    127924.449707         False          False   False
7  889452.788330  127991.322998  9702.694580  889452.788330  114.132812  127991.322998  761361.438232  100.027100        0.027100     1.0    127924.449707         False          False   False
8  889452.788330  128091.322998  9702.694580  889452.788330    1.000000  128091.322998  761361.438232    0.027100      -99.972900     2.0    127924.449707         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=111/4096.[0m
[08/15 16:00:56]  --------------------------------------------------------------------------------
[08/15 16:00:56]  Iteration: 46 (0 solution, 45 counterexamples)
[08/15 16:00:58]  Generator returned sat in 0.921824 secs.
[08/15 16:00:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:01:00]  Improved gap from 0.000625 to 23.4375
[08/15 16:01:01]  Improved number of small numbers from 55 to 70 out of a max of 114
[08/15 16:01:01]  Verifer returned sat in 2.587272 secs.
[08/15 16:01:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  890476.138184  117128.059082  8594.522461  890476.138184    0.002441  117128.059082  773248.079014  100.000088        0.000088     3.0    117128.059082            -1             -1     -1
1  890700.885596  117228.059082  8594.522461  890700.885596  324.747500  117228.059082  773248.079014  224.747500      124.747500     4.0    117128.059082         False          False   True
2  890700.885596  117391.309082  8594.522461  890700.885596  224.745117  117391.309082  773248.079014   61.497500       24.747500     2.0    117452.806582          True           True  False
3  890776.138096  117503.309082  8594.522461  890776.138096  136.750000  117503.309082  773248.079014   24.750000        0.000000     1.0    117528.059082         False          False  False
4  891006.388096  117628.059082  8594.522461  891006.388096  255.000000  117628.059082  773253.579014  124.750000      124.750000     1.0    117528.059082         False          False  False
5  891006.388096  117728.056396  8594.522461  891006.388096    1.000000  117728.056396  773253.579014   24.752686       24.750000     2.0    117528.059082         False          False   True
6  891006.388096  117728.059082  8669.772461  891006.388096    0.010000  117728.059082  773253.579014   24.750000        0.000000     3.0    117528.059082         False          False   True
7  891006.388096  117752.809082  8745.022461  891006.388096    0.010000  117752.809082  773253.579014    0.000000      -24.750000     4.0    117528.059082         False          False   True
8  891067.768096  117777.559082  8808.392090  891067.768096   61.380000  117777.559082  773253.579014   36.630000       -0.000371     1.0    117814.189082          True           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=499/4.[0m
[08/15 16:01:01]  --------------------------------------------------------------------------------
[08/15 16:01:01]  Iteration: 47 (0 solution, 46 counterexamples)
[08/15 16:01:08]  Generator returned sat in 5.533394 secs.
[08/15 16:01:08]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:01:09]  Improved gap from 0.00125 to 25.0
[08/15 16:01:10]  Improved number of small numbers from 36 to 114 out of a max of 114
[08/15 16:01:10]  Verifer returned sat in 1.098499 secs.
[08/15 16:01:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  890576.137939  117203.061768  8594.522217  890576.137939    0.002500  117203.061768  773248.078857  124.997314      124.997314     1.0    117203.061768            -1             -1   False
1  890576.140381  117203.061768  8594.522217  890576.140381  124.999756  117203.061768  773248.078857  124.999756       24.999756     1.0    117203.061768         False          False   False
2  890676.138184  117403.061523  8594.522217  890676.138184  224.997559  117403.061523  773248.078857   24.997803       24.997559     1.0    117203.061768         False          False   False
3  890776.137939  117503.061768  8594.522217  890776.137939  124.997559  117503.061768  773248.078857   24.997314       24.997314     1.0    117528.059082         False          False   False
4  891050.140625  117602.066650  8594.522217  891050.140625  299.000000  117602.066650  773422.078857   25.995117       25.000000     1.0    117528.059082         False          False   False
5  891050.140625  117603.061768  8669.522217  891050.140625    1.000000  117603.061768  773422.078857   25.000000        0.000000     2.0    117528.059082         False          False    True
6  891050.140625  117628.061768  8744.522217  891050.140625    0.010000  117628.061768  773422.078857    0.000000      -25.000000     3.0    117528.059082         False          False    True
7  891174.140625  117677.565430  8745.522217  891174.140625  124.000000  117677.565430  773422.078857   74.496338        0.000000     1.0    117752.061768          True           True   False
8  891174.143066  117752.063965  8820.519775  891174.143066   74.498779  117752.063965  773422.078857    0.000244      -25.000000     1.0    117752.061768         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=25.[0m
[08/15 16:01:10]  --------------------------------------------------------------------------------
[08/15 16:01:10]  Iteration: 48 (0 solution, 47 counterexamples)
[08/15 16:01:18]  Generator returned sat in 6.711106 secs.
[08/15 16:01:18]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:01:19]  Improved number of small numbers from 84 to 113 out of a max of 113
[08/15 16:01:19]  Verifer returned sat in 0.331300 secs.
[08/15 16:01:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  890754.840820  117406.861572  8594.522217  890754.840820     0.100098  117406.861572  773248.078857    99.900391       99.900146     9.0    117406.861572            -1             -1     -1
1  890755.040527  117406.861816  8594.522217  890755.040527   100.100098  117406.861816  773248.078857   100.099854        0.099854     2.0    117406.861572         False           True   True
2  890755.040527  117506.861816  8594.522217  890755.040527     0.099854  117506.861816  773248.078857     0.099854      -99.900146     2.0    117506.961670         False          False   True
3  892360.140625  117702.761719  8594.522217  892360.140625  1605.199951  117702.761719  773248.078857  1409.300049     1405.199951     1.0    117506.961670         False          False   True
4  892555.040527  117706.861816  8594.522217  892555.040527  1604.199951  117706.861816  773248.078857  1600.099854     1500.099854     2.0    117506.961670         False          False   True
5  892558.140625  117904.761719  8594.522217  892558.140625  1603.199951  117904.761719  773248.078857  1405.300049     1403.199951     3.0    117506.961670         False          False   True
6  892755.040527  117906.861816  8594.522217  892755.040527  1602.199951  117906.861816  773248.078857  1600.099854     1500.099854     4.0    117506.961670         False          False   True
7  892756.140625  118106.861572  8594.522217  892756.140625  1601.199951  118106.861572  773248.078857  1401.200195     1401.199951     5.0    117506.961670         False          False   True
8  892955.140381  118206.861572  8594.522217  892955.140381  1600.199951  118206.861572  773248.178711  1500.100098     1500.099854     6.0    117506.961670         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=6144409/4096.[0m
[08/15 16:01:19]  --------------------------------------------------------------------------------
[08/15 16:01:19]  Iteration: 49 (0 solution, 48 counterexamples)
[08/15 16:01:24]  Generator returned sat in 3.026139 secs.
[08/15 16:01:24]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:01:25]  Improved gap from 0.00035714285714285714 to 48.4375
[08/15 16:01:25]  Improved number of small numbers from 47 to 114 out of a max of 114
[08/15 16:01:25]  Verifer returned sat in 1.306671 secs.
[08/15 16:01:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  892128.903076  118680.924072  7220.459961  892128.903076  200.000000  118680.924072  773248.078857  199.900146       99.900146     3.0    118680.924072            -1             -1     -1
1  892128.903076  118880.623779  7220.459961  892128.903076  199.900146  118880.623779  773248.078857    0.200439       -0.099854     4.0    118880.824219         False          False   True
2  892177.340332  118880.924072  7272.022461  892177.340332   48.637695  118880.924072  773248.078857   48.337402       -0.100098     1.0    118929.261475         False           True  False
3  892177.540283  118929.361572  7323.584961  892177.540283   48.537354  118929.361572  773248.078857    0.099854      -48.337646     1.0    118929.461426         False          False  False
4  892674.315430  119076.469971  7323.584961  892674.315430  496.875000  119076.469971  773547.048340   50.797119       49.468018     1.0    118929.461426         False          False  False
5  892674.315430  119077.799072  7374.017090  892674.315430    1.000000  119077.799072  773547.048340   49.468018       -0.099854     2.0    118929.461426         False          False   True
6  892723.284912  119127.366943  7425.047607  892723.284912   98.437500  119127.366943  773547.048340   48.869629       -0.099854     1.0    118929.461426         False          False   True
7  892773.417969  119176.336670  7475.014404  892773.417969   99.002686  119176.336670  773547.048340   50.032959        0.000000     1.0    118929.461426         False          False   True
8  892773.417969  119226.369629  7475.014404  892773.417969   49.933350  119226.369629  773547.048340    0.000000     -100.000000     2.0    118929.461426         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=202621/4096.[0m
[08/15 16:01:26]  --------------------------------------------------------------------------------
[08/15 16:01:26]  Iteration: 50 (0 solution, 49 counterexamples)
[08/15 16:01:28]  Generator returned sat in 0.592614 secs.
[08/15 16:01:28]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:01:29]  Improved gap from 48.4375 to 48.4375
[08/15 16:01:29]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/15 16:01:29]  Verifer returned sat in 1.275400 secs.
[08/15 16:01:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  888235.200195  118576.506592  7424.877197  888235.200195  150.750000  118576.506592  769558.743408  99.950195       99.950195     2.0    118576.506592            -1             -1   False
1  888285.950195  118676.506592  7424.877197  888285.950195  150.700195  118676.506592  769558.743408  50.700195       50.700195     1.0    118727.206787         False          False   False
2  888385.950195  118771.681885  7424.877197  888385.950195  150.700195  118771.681885  769558.743408  55.524902       50.700195     1.0    118727.206787         False          False   False
3  888395.275146  118827.206543  7424.877441  888395.275146   64.849854  118827.206543  769558.743408   9.325195      -39.974609     2.0    118836.531738         False          False   False
4  888887.349854  118976.456787  7424.877441  888887.349854  501.399902  118976.456787  769860.093506  50.799561       50.750000     1.0    118836.531738         False          False   False
5  888887.349854  118976.506592  7474.127197  888887.349854    1.000000  118976.506592  769860.093506  50.749756       -0.000244     2.0    118836.531738         False          False    True
6  888938.012451  119027.306641  7523.415039  888938.012451  101.412354  119027.306641  769860.093506  50.612305       -0.049805     1.0    118836.531738         False          False    True
7  888986.450195  119077.968994  7574.977295  888986.450195   99.050049  119077.968994  769860.093506  48.387695       -0.049805     1.0    118836.531738         False          False    True
8  888987.818604  119126.406494  7574.977539  888987.818604   49.756104  119126.406494  769860.093506   1.318604      -98.681152     1.0    118836.531738         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=203/4.[0m
[08/15 16:01:30]  --------------------------------------------------------------------------------
[08/15 16:01:30]  Iteration: 51 (0 solution, 50 counterexamples)
[08/15 16:01:34]  Generator returned sat in 2.502398 secs.
[08/15 16:01:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:01:37]  Improved gap from 0.0008333333333333334 to 3.125
[08/15 16:01:38]  Improved number of small numbers from 52 to 106 out of a max of 114
[08/15 16:01:38]  Verifer returned sat in 3.464831 secs.
[08/15 16:01:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  888463.655518  118603.557106  7397.826660  888463.655518    0.002686  118603.557106  769860.093506    0.004906        0.004883     5.0    118603.557106            -1             -1   False
1  888466.780612  118603.564453  7494.694336  888466.780612    3.130000  118603.564453  769860.093506    3.122653       -0.002347     1.0    118603.557106         False          False   False
2  888466.785400  118606.689453  7591.569336  888466.785400    3.127441  118606.689453  769860.093506    0.002441       -3.122559     1.0    118606.691895         False          False   False
3  888493.203857  118609.814606  7668.273438  888493.203857   26.420898  118609.814606  769860.093506   23.295745        0.000000     1.0    118606.691895         False          False   False
4  888493.203857  118633.110352  7765.148193  888493.203857   10.386250  118633.110352  769860.093506    0.000000       -3.125244     2.0    118606.691895         False          False   False
5  888538.522705  118676.857910  7821.400879  888538.522705   45.318848  118676.857910  769860.093506    1.571289       -1.553711     1.0    118606.691895         False          False   False
6  888643.204102  118679.983154  7821.400879  888643.204102  106.252686  118679.983154  769860.096191  103.124756        3.125000     1.0    118606.691895         False          False   False
7  888643.204102  118779.982910  7918.275879  888643.204102    1.000000  118779.982910  769860.096191    3.125000        0.000000     2.0    118606.691895         False          False    True
8  888643.204102  118783.107910  7918.275879  888643.204102    0.010000  118783.107910  769860.096191    0.000000     -100.000000     3.0    118606.691895         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25/8.[0m
[08/15 16:01:38]  --------------------------------------------------------------------------------
[08/15 16:01:38]  Iteration: 52 (0 solution, 51 counterexamples)
[08/15 16:01:44]  Generator returned sat in 3.782121 secs.
[08/15 16:01:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:01:45]  Improved gap from 0.1 to 23.4375
[08/15 16:01:46]  Improved number of small numbers from 34 to 43 out of a max of 114
[08/15 16:01:46]  Verifer returned sat in 2.032316 secs.
[08/15 16:01:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888221.728760  118264.662646  7486.881143  888221.728760    0.099854  118264.662646  769857.066309   99.999805       99.999805     6.0    118264.662646            -1             -1     -1
1  888221.728760  118264.662646  7486.881143  888221.728760    0.100000  118264.662646  769857.066309   99.999805       -0.000195     6.0    118264.662646         False           True   True
2  888248.066455  118367.562646  7560.543643  888248.066455  126.337500  118367.562646  769857.066309   23.437500        0.000000     1.0    118264.662646         False           True  False
3  888248.066455  118391.000146  7570.337393  888248.066455    0.100098  118391.000146  769857.066309    0.000000      -90.206250     2.0    118391.000146         False          False  False
4  888438.572705  118580.306396  7570.337393  888438.572705  190.506250  118580.306396  769857.166309    1.100000        0.200000     1.0    118391.000146         False           True  False
5  888438.572705  118581.206396  7644.899893  888438.572705    1.000000  118581.206396  769857.166309    0.200000      -25.237500     2.0    118391.000146         False          False   True
6  888759.838330  118606.644043  7644.899893  888759.838330  321.465625  118606.644043  770052.994434  100.199854        0.200000     1.0    118706.843896          True           True  False
7  888759.838330  118706.643896  7721.462393  888759.838330    1.000000  118706.643896  770052.994434    0.200000      -23.237500     2.0    118706.843896         False          False   True
8  888950.144580  118730.081543  7721.462393  888950.144580  190.506250  118730.081543  770119.863184  100.199854        0.200000     1.0    118706.843896         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=1/5.[0m
[08/15 16:01:46]  --------------------------------------------------------------------------------
[08/15 16:01:46]  Iteration: 53 (0 solution, 52 counterexamples)
[08/15 16:01:59]  Generator returned sat in 10.878473 secs.
[08/15 16:01:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:02:00]  Improved gap from 0.0 to 100
[08/15 16:02:01]  Improved number of small numbers from 36 to 108 out of a max of 114
[08/15 16:02:01]  Verifer returned sat in 1.707326 secs.
[08/15 16:02:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888063.910400  118106.644043  7644.899902  888063.910400     0.099854  118106.644043  769857.066162   100.200195      100.200195     6.0    118106.644043            -1             -1     -1
1  888063.910400  118206.644043  7644.899902  888063.910400     0.100098  118206.644043  769857.066162     0.200195        0.200195     2.0    118106.644043         False           True   True
2  888063.910400  118206.644043  7644.899902  888063.910400     0.100098  118206.644043  769857.066162     0.200195      -99.799805     2.0    118106.644043         False          False   True
3  888776.021316  118306.644043  7644.899902  888776.021316   712.311111  118306.644043  769857.066162   612.311111      512.311111     1.0    118106.644043         False          False   True
4  889231.176872  118506.543896  7644.899902  889231.176872  1067.466667  118506.543896  769857.066162   867.566813      867.466667     2.0    118106.644043         False          False   True
5  889963.810059  118506.644043  7644.899902  889963.810059  1600.200000  118506.644043  769857.066162  1600.099854     1500.099854     3.0    118106.644043         False          False   True
6  889963.810059  118606.644043  7644.899902  889963.810059   801.100000  118606.644043  769857.066162  1500.099854     1400.099854     4.0    120106.743896          True           True  False
7  889963.810059  118706.644043  7644.899902  889963.810059   401.550000  118706.644043  769857.066162  1400.099854     1300.099854     5.0    120106.743896         False           True  False
8  889963.810059  118906.644043  7644.899902  889963.810059   201.775000  118906.644043  769857.066162  1200.099854     1200.099854     6.0    120106.743896         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3072205/2048.[0m
[08/15 16:02:01]  --------------------------------------------------------------------------------
[08/15 16:02:01]  Iteration: 54 (0 solution, 53 counterexamples)
[08/15 16:02:06]  Generator returned sat in 2.765074 secs.
[08/15 16:02:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:02:06]  Improved gap from 0.0 to 0
[08/15 16:02:07]  Improved number of small numbers from 40 to 50 out of a max of 114
[08/15 16:02:07]  Verifer returned sat in 1.547563 secs.
[08/15 16:02:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888476.013816  117906.543701  7644.899902  888476.013816  299.999756  117906.543701  770269.47117  299.998945      299.997500     6.0    117906.543701            -1             -1     -1
1  888476.013816  117906.545146  7644.899902  888476.013816  299.998535  117906.545146  770269.47117  299.997500      199.997500     2.0    118206.542646         False           True   True
2  888476.015066  118106.545146  7644.899902  888476.015066  299.998750  118106.545146  770269.47117   99.998750       99.998750     3.0    118206.542646         False          False   True
3  888676.017566  118206.544922  7644.899902  888676.017566  300.001250  118206.544922  770269.47117  200.001475      200.001250     1.0    118206.542646         False          False   True
4  888676.017566  118306.544922  7644.899902  888676.017566    0.010000  118306.544922  770269.47117  100.001475      100.001250     2.0    118206.542646         False          False   True
5  888676.017566  118406.545146  7644.899902  888676.017566    0.010000  118406.545146  770269.47117    0.001250        0.001250     3.0    118206.542646         False          False   True
6  888676.026316  118406.545146  7744.889902  888676.026316    0.010000  118406.545146  770269.47117    0.010000        0.000000     3.0    118206.542646         False          False   True
7  888676.026316  118406.555146  7844.889893  888676.026316    0.010000  118406.555146  770269.47117    0.000000       -0.000010     2.0    118206.542646         False          False   True
8  888676.036316  118406.556152  7844.890137  888676.036316    0.010000  118406.556152  770269.47117    0.008994      -99.989766     1.0    118206.542646         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=409605/2048.[0m
[08/15 16:02:08]  --------------------------------------------------------------------------------
[08/15 16:02:08]  Iteration: 55 (0 solution, 54 counterexamples)
[08/15 16:02:13]  Generator returned sat in 3.708052 secs.
[08/15 16:02:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:02:15]  Improved gap from 0.0 to 15.625
[08/15 16:02:16]  Improved number of small numbers from 32 to 51 out of a max of 114
[08/15 16:02:16]  Verifer returned sat in 2.485685 secs.
[08/15 16:02:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888676.092529  118075.271240  7376.173885  888676.092529    0.025146  118075.271240  770269.44617  331.375119      231.375195     6.0    118075.271240            -1             -1     -1
1  888676.092529  118275.271164  7376.173885  888676.092529  331.350000  118275.271164  770269.44617  131.375195      131.375195     6.0    118075.271240         False           True   True
2  888876.042334  118375.246094  7376.173885  888876.042334  331.325000  118375.246094  770269.47117  231.325071      231.300000     4.0    118606.571164          True           True  False
3  888876.042334  118375.271164  7376.173885  888876.042334    0.025146  118375.271164  770269.47117  231.300000      131.300000     4.0    118606.571164         False          False   True
4  888876.042334  118575.270996  7376.173885  888876.042334    1.000000  118575.270996  770269.47117   31.300168       31.300000     3.0    118606.571164         False          False   True
5  888876.042334  118590.946045  7444.873885  888876.042334    1.000000  118590.946045  770269.47117   15.625119        0.000000     4.0    118606.571164         False          False   True
6  888876.042334  118606.571164  7529.248885  888876.042334    1.000000  118606.571164  770269.47117    0.000000      -15.625000     5.0    118606.571164         False          False   True
7  889222.992334  118722.196045  7529.248885  889222.992334  346.950000  118722.196045  770269.49617  231.300119      231.300000     1.0    118606.571164         False           True  False
8  889222.992334  118722.220947  7529.248885  889222.992334    1.000000  118722.220947  770269.49617  231.275217      131.300000     2.0    118606.571164         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2313/10.[0m
[08/15 16:02:17]  --------------------------------------------------------------------------------
[08/15 16:02:17]  Iteration: 56 (0 solution, 55 counterexamples)
[08/15 16:02:22]  Generator returned sat in 3.522199 secs.
[08/15 16:02:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:02:22]  Improved gap from 0.0 to 0
[08/15 16:02:23]  Improved number of small numbers from 44 to 114 out of a max of 114
[08/15 16:02:23]  Verifer returned sat in 0.625819 secs.
[08/15 16:02:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  890275.192383  118304.070801  7247.074219  890275.192383    0.100098  118304.070801  771669.921143  301.200439      300.900391     5.0    118304.070801            -1             -1    True
1  890275.192383  118304.371094  7247.074219  890275.192383  301.100098  118304.371094  771669.921143  300.900146      200.900391     5.0    118304.070801         False          False    True
2  890275.292236  118404.371094  7247.074219  890275.292236  301.000000  118404.371094  771669.921143  201.000000      101.000244     6.0    118605.371094         False          False    True
3  890275.392334  118604.370850  7247.074219  890275.392334  201.100098  118604.370850  771669.921143    1.100342        1.100342     7.0    118605.471191         False          False    True
4  890275.392334  118605.270996  7345.973877  890275.392334    1.000000  118605.270996  771669.921143    0.200195        0.000000     8.0    118605.471191         False          False    True
5  890276.192139  118605.571045  7445.173828  890276.192139    1.000000  118605.571045  771669.921143    0.699951       -0.000244     1.0    118605.471191         False           True   False
6  890276.492188  118606.571045  7544.873779  890276.492188    1.000000  118606.571045  771669.921143    0.000000       -0.000244     1.0    118605.471191         False          False   False
7  890277.492188  118607.470947  7643.873779  890277.492188    1.000000  118607.470947  771669.921143    0.100098       -0.000244     1.0    118605.471191         False          False   False
8  890278.392090  118607.671143  7643.873779  890278.392090    1.000000  118607.671143  771669.921143    0.799805      -99.100342     1.0    118605.471191         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=823295/4096.[0m
[08/15 16:02:23]  --------------------------------------------------------------------------------
[08/15 16:02:23]  Iteration: 57 (0 solution, 56 counterexamples)
[08/15 16:02:34]  Generator returned sat in 8.927330 secs.
[08/15 16:02:34]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:02:34]  Improved gap from 0.0 to 100
[08/15 16:02:35]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/15 16:02:35]  Verifer returned sat in 0.679121 secs.
[08/15 16:02:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  887886.269531  116116.345703  9435.091553  887886.269531   100.007568  116116.345703  771669.921143   100.002686       99.994873     2.0    116116.345703            -1             -1     -1
1  887886.271973  116116.353516  9435.091553  887886.271973   100.005127  116116.353516  771669.921143    99.997314       -0.002686     2.0    116216.350830         False          False   True
2  887886.277100  116216.353516  9435.091553  887886.277100   100.002441  116216.353516  771669.921143     0.002441      -99.997559     1.0    116216.355957         False          False   True
3  889415.773193  116316.353516  9435.091553  889415.773193  1529.498535  116316.353516  771669.921143  1429.498535     1329.498535     1.0    116216.355957         False          False   True
4  889614.777100  116431.353516  9435.091553  889614.777100  1628.502441  116431.353516  771669.921143  1513.502441     1428.502441     2.0    116216.355957         False          False   True
5  889886.277100  116616.353516  9435.091553  889886.277100  1785.002441  116616.353516  771669.921143  1600.002441     1600.002441     3.0    116216.355957         False          False   True
6  890270.277100  116716.353516  9435.091553  890270.277100  1984.002441  116716.353516  771925.420898  1628.502686     1628.502686     4.0    116216.355957         False          False   True
7  890270.277100  116816.353516  9435.091553  890270.277100     0.010000  116816.353516  771925.420898  1528.502686     1528.502686     5.0    116216.355957         False          False   True
8  890270.277100  116816.353516  9435.091553  890270.277100   191.510000  116816.353516  771925.420898  1528.502686     1428.502686     5.0    116216.355957         False          False   True
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=6670347/4096.[0m
[08/15 16:02:35]  --------------------------------------------------------------------------------
[08/15 16:02:35]  Iteration: 58 (0 solution, 57 counterexamples)
[08/15 16:02:46]  Generator returned sat in 8.825899 secs.
[08/15 16:02:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:02:47]  Improved gap from 0.0 to 23.4375
[08/15 16:02:47]  Improved number of small numbers from 90 to 96 out of a max of 114
[08/15 16:02:47]  Verifer returned sat in 1.421085 secs.
[08/15 16:02:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888009.774414  116013.191162  9435.091553  888009.774414    0.050049  116013.191162  771573.033447  423.549805      323.549951     4.0    116013.191162            -1             -1     -1
1  888009.774414  116213.191016  9435.091553  888009.774414  423.500000  116213.191016  771573.033447  223.549951      223.549951     5.0    116013.191162         False          False   True
2  888209.674658  116216.303516  9435.091553  888209.674658  423.450195  116216.303516  771669.921143  323.450000      226.562500     4.0    116539.753516          True           True  False
3  888309.624658  116413.190918  9435.091553  888309.624658  423.400000  116413.190918  771669.921143  226.512598      226.512500     4.0    116639.703516         False          False   True
4  888309.624658  116513.191016  9435.091553  888309.624658  211.700000  116513.191016  771669.921143  126.512500      126.512500     3.0    116639.703516         False          False   True
5  888309.624658  116539.803467  9435.091553  888309.624658  105.850000  116539.803467  771669.921143   99.900049       26.512500     3.0    116639.703516         False          False   True
6  888309.624658  116613.191162  9508.579053  888309.624658   52.925000  116613.191162  771669.921143   26.512354        0.000000     4.0    116639.703516         False          False   True
7  888309.624658  116639.703516  9585.141553  888309.624658   26.462500  116639.703516  771669.921143    0.000000      -23.437500     5.0    116639.703516         False          False   True
8  888498.393408  116663.141113  9585.141553  888498.393408  188.768750  116663.141113  771669.921143  165.331152       65.331250     1.0    116639.703516         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=3625/16.[0m
[08/15 16:02:48]  --------------------------------------------------------------------------------
[08/15 16:02:48]  Iteration: 59 (0 solution, 58 counterexamples)
[08/15 16:02:55]  Generator returned sat in 5.693361 secs.
[08/15 16:02:55]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:02:57]  Improved number of small numbers from 55 to 73 out of a max of 113
[08/15 16:02:57]  Verifer returned sat in 1.398315 secs.
[08/15 16:02:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  888012.637109  116189.609863  9435.091553  888012.637109     0.049805  116189.609863  771573.033691   249.993555      149.993555     3.0    116189.609863            -1             -1     -1
1  888012.637109  116289.609863  9435.091553  888012.637109   249.968750  116289.609863  771573.033691   149.993555       49.993555     2.0    116189.609863         False           True   True
2  888112.587158  116464.581522  9435.091553  888112.587158   249.943604  116464.581522  771573.033691    74.971945       49.943604     1.0    116539.553467         False          False   True
3  888262.618341  116539.578394  9435.091553  888262.618341   225.003128  116539.578394  771573.033691   150.006256       99.974786     1.0    116689.584650         False          False   True
4  888562.618341  116689.609674  9435.091553  888562.618341   450.006256  116689.609674  771573.033691   299.974976      299.974786     1.0    116689.584650         False          False   True
5  889162.655878  116789.609674  9435.091553  889162.655878   900.012512  116789.609674  771573.033691   800.012512      800.012323     2.0    116689.584650         False          False   True
6  890162.668390  116889.609674  9435.091553  890162.668390  1800.025024  116889.609674  771573.033691  1700.025024     1700.024835     3.0    116689.584650         False          False   True
7  890162.668390  116989.609674  9435.091553  890162.668390   700.062561  116989.609674  771573.033691  1600.025024     1600.024835     3.0    118589.634698          True           True  False
8  890162.668390  117089.609863  9435.091553  890162.668390   600.000000  117089.609863  771573.033691  1500.024835     1500.024835     4.0    118589.634698         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=True, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=1740851/1024.[0m
[08/15 16:02:57]  --------------------------------------------------------------------------------
[08/15 16:02:57]  Iteration: 60 (0 solution, 59 counterexamples)
[08/15 16:03:05]  Generator returned sat in 5.898910 secs.
[08/15 16:03:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:03:06]  Improved gap from 0.0007142857142857143 to 48.4375
[08/15 16:03:06]  Improved number of small numbers from 46 to 114 out of a max of 114
[08/15 16:03:06]  Verifer returned sat in 0.820567 secs.
[08/15 16:03:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  889862.660889  118036.511963  7588.189209  889862.660889    0.002686  118036.511963  771573.031250  253.117676      153.117676     2.0    118036.511963            -1             -1     -1
1  889862.663330  118236.511963  7588.189209  889862.663330  253.120117  118236.511963  771573.031250   53.120117       53.120117     3.0    118036.511963         False          False   True
2  889909.543213  118236.512207  7588.189209  889909.543213  100.000000  118236.512207  771573.031250   99.999756        0.000000     4.0    118336.511963          True           True  False
3  890009.543213  118405.261963  7588.189209  890009.543213  199.999756  118405.261963  771573.031250   31.250000        0.000000     1.0    118336.511963         False           True  False
4  890162.668213  118536.511963  7588.189209  890162.668213  184.375000  118536.511963  771573.033691   53.122559       53.122559     1.0    118336.511963         False          False  False
5  890162.668213  118541.197021  7635.066650  890162.668213    0.010000  118541.197021  771573.033691   48.437500        0.000000     2.0    118336.511963         False          False   True
6  890162.668213  118589.634521  7686.629150  890162.668213    0.010000  118589.634521  771573.033691    0.000000      -48.437500     3.0    118336.511963         False          False   True
7  890254.854492  118638.072021  7738.191406  890254.854492   92.186279  118638.072021  771573.033691   43.748779       -4.688965     1.0    118681.820801          True           True  False
8  890261.885742  118686.509766  7738.191650  890261.885742   50.780029  118686.509766  771573.033691    2.342285      -97.657471     1.0    118681.820801         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=108795/2048.[0m
[08/15 16:03:07]  --------------------------------------------------------------------------------
[08/15 16:03:07]  Iteration: 61 (0 solution, 60 counterexamples)
[08/15 16:03:23]  Generator returned sat in 13.939749 secs.
[08/15 16:03:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:03:24]  Improved gap from 1.00375 to 14.0625
[08/15 16:03:24]  Improved number of small numbers from 38 to 114 out of a max of 114
[08/15 16:03:24]  Verifer returned sat in 1.771127 secs.
[08/15 16:03:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  890581.768066  118932.165771  7538.098877  890581.768066  300.099854  118932.165771  771449.702393  199.899902       99.899902     2.0    118932.165771            -1             -1    True
1  890681.868164  119032.165771  7538.098877  890681.868164  300.000000  119032.165771  771449.702393  200.000000      100.000000     2.0    119232.165771         False          False    True
2  890970.068115  119132.165771  7538.098877  890970.068115  488.199951  119132.165771  771449.802246  388.100098      288.100098     2.0    119232.165771         False          False    True
3  890970.068115  119232.165771  7538.098877  890970.068115  388.000000  119232.165771  771449.802246  288.100098      188.100098     3.0    119520.265869         False          False    True
4  890970.068115  119432.165771  7538.098877  890970.068115  195.000000  119432.165771  771449.802246   88.100098       88.100098     3.0    119520.265869         False           True   False
5  890980.468018  119506.740723  7539.499023  890980.468018   98.500000  119506.740723  771449.802246   23.925049       -0.099854     4.0    119520.265869         False           True   False
6  891006.792969  119530.765869  7613.273926  891006.792969   50.250000  119530.765869  771449.802246   26.224854        0.000000     1.0    119520.265869         False           True   False
7  891006.792969  119556.990723  7699.211426  891006.792969   26.125000  119556.990723  771449.802246    0.000000      -14.062500     2.0    119520.265869         False          False   False
8  891020.855469  119571.053223  7785.148926  891020.855469   14.062500  119571.053223  771449.802246    0.000000      -14.062500     1.0    119520.265869         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=590029/2048.[0m
[08/15 16:03:25]  --------------------------------------------------------------------------------
[08/15 16:03:25]  Iteration: 62 (0 solution, 61 counterexamples)
[08/15 16:03:30]  Generator returned sat in 3.208302 secs.
[08/15 16:03:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:03:31]  Improved gap from 0.1 to 48.4375
[08/15 16:03:31]  Improved number of small numbers from 52 to 114 out of a max of 114
[08/15 16:03:31]  Verifer returned sat in 0.838622 secs.
[08/15 16:03:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  890681.868164  118832.915771  7737.19873  890681.868164  299.199951  118832.915771  771549.752197  299.200195      299.050049     9.0    118832.915771            -1             -1     -1
1  890681.868164  118933.065918  7737.19873  890681.868164  299.200000  118933.065918  771549.752197  199.050049      199.050049     2.0    118832.915771         False           True  False
2  890781.968018  118933.065918  7737.19873  890781.968018  299.149902  118933.065918  771549.802246  299.099854      199.099854     2.0    119232.165771         False          False  False
3  890781.968018  119133.065674  7737.19873  890781.968018   55.074951  119133.065674  771549.802246   99.100098       99.099854     2.0    119232.165771         False          False   True
4  890781.968018  119232.115967  7737.19873  890781.968018   54.074951  119232.115967  771549.802246    0.049805       -0.900146     3.0    119232.165771         False          False   True
5  890834.993164  119233.065918  7785.07373  890834.993164   53.074951  119233.065918  771549.802246   52.125000        0.000000     1.0    119232.165771         False          False   True
6  890834.993164  119285.190918  7836.63623  890834.993164   52.074951  119285.190918  771549.802246    0.000000      -48.437500     2.0    119232.165771         False          False   True
7  890886.068115  119333.628418  7888.19873  890886.068115   51.074951  119333.628418  771549.802246    2.637451      -45.800049     1.0    119232.165771         False          False   True
8  890933.505615  119382.065918  7888.19873  890933.505615   50.074951  119382.065918  771549.802246    1.637451      -98.362549     1.0    119232.165771         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=815513/4096.[0m
[08/15 16:03:32]  --------------------------------------------------------------------------------
[08/15 16:03:32]  Iteration: 63 (0 solution, 62 counterexamples)
[08/15 16:03:39]  Generator returned sat in 5.008914 secs.
[08/15 16:03:39]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:03:41]  Improved gap from 9.066060965401785 to 48.4375
[08/15 16:03:41]  Improved number of small numbers from 45 to 114 out of a max of 114
[08/15 16:03:41]  Verifer returned sat in 2.204355 secs.
[08/15 16:03:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  944724.116211  173074.314209  7750.611084  944724.116211    0.050000  173074.314209  771549.752197  100.049805        0.049805     3.0    173074.314209            -1             -1    True
1  944724.116211  173174.314209  7750.611084  944724.116211  100.049805  173174.314209  771549.752197    0.049805      -99.950195     3.0    173074.314209         False          False    True
2  944924.528809  173325.876709  7750.611084  944924.528809  200.462402  173325.876709  771549.752197   48.899902        0.462402     1.0    173074.314209         False          False    True
3  944924.528809  173374.314209  7802.173584  944924.528809    0.050049  173374.314209  771549.752197    0.462402      -47.975098     2.0    173374.776611         False          False    True
4  945073.066406  173522.214111  7802.173584  945073.066406  149.000000  173522.214111  771549.802246    1.050049        0.512451     1.0    173374.776611         False          False    True
5  945073.066406  173522.751709  7853.736084  945073.066406    1.000000  173522.751709  771549.802246    0.512451      -47.925049     2.0    173374.776611         False          False    True
6  945169.991455  173571.222412  7904.736084  945169.991455   97.437500  173571.222412  771549.802246   48.966797        0.000000     1.0    173374.776611         False          False    True
7  945218.478760  173620.239014  7956.248779  945218.478760   97.454102  173620.239014  771549.802246   48.437500        0.000000     1.0    173374.776611         False          False    True
8  945218.478760  173668.676514  7956.248779  945218.478760   48.012451  173668.676514  771549.802246    0.000000     -100.000000     2.0    173374.776611         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=2099/4096.[0m
[08/15 16:03:42]  --------------------------------------------------------------------------------
[08/15 16:03:42]  Iteration: 64 (0 solution, 63 counterexamples)
[08/15 16:03:52]  Generator returned sat in 8.475285 secs.
[08/15 16:03:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:03:53]  Improved gap from 0.00125 to 23.4375
[08/15 16:03:53]  Improved number of small numbers from 35 to 114 out of a max of 114
[08/15 16:03:53]  Verifer returned sat in 1.112236 secs.
[08/15 16:03:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  944924.064941  173024.309326  7900.615967  944924.064941  123.442627  173024.309326  771776.318359  123.437256      123.437256     2.0    173024.309326            -1             -1    True
1  944924.067871  173124.309326  7900.615967  944924.067871  123.440186  173124.309326  771776.321045   23.437500       23.437500     3.0    173147.746826         False          False    True
2  944924.070312  173124.309326  7977.176025  944924.070312   23.439941  173124.309326  771776.321045   23.439941        0.000000     3.0    173147.749268         False           True    True
3  945047.505127  173147.751709  7977.176025  945047.505127  146.874756  173147.751709  771776.321045  123.432373       23.434814     1.0    173147.749268         False           True   False
4  945170.957520  173347.746582  7977.176025  945170.957520  246.884766  173347.746582  771799.770752   23.440186       23.437500     1.0    173147.749268         False          False   False
5  945170.957520  173347.749268  8053.738525  945170.957520    1.000000  173347.749268  771799.770752   23.437500        0.000000     2.0    173147.749268         False          False    True
6  945170.957520  173371.186768  8127.180908  945170.957520    0.010000  173371.186768  771799.770752    0.000000      -26.557617     3.0    173147.749268         False          False    True
7  945617.827637  173397.744385  8127.180908  945617.827637  446.870117  173397.744385  772096.645752  123.437500       23.437500     1.0    173521.181885          True           True   False
8  945617.827637  173497.744385  8127.180908  945617.827637    1.000000  173497.744385  772096.645752   23.437500      -76.562500     2.0    173521.181885         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/15 16:03:54]  --------------------------------------------------------------------------------
[08/15 16:03:54]  Iteration: 65 (0 solution, 64 counterexamples)
[08/15 16:03:59]  Generator returned sat in 3.279652 secs.
[08/15 16:03:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:04:00]  Improved number of small numbers from 70 to 113 out of a max of 113
[08/15 16:04:00]  Verifer returned sat in 0.444829 secs.
[08/15 16:04:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  943370.757324  171370.986816  9553.838379  943370.757324     0.100000  171370.986816  771799.770752   199.999756      199.899902     4.0    171370.986816            -1             -1    True
1  943370.757324  171371.086670  9553.838379  943370.757324     0.100000  171371.086670  771799.770752   199.899902       99.899902     4.0    171370.986816         False          False    True
2  943770.757324  171570.986816  9553.838379  943770.757324   599.899902  171570.986816  771799.770752   399.999756      399.899902     1.0    171370.986816         False          False    True
3  945170.857666  171571.086670  9553.838379  945170.857666  1800.100098  171571.086670  771799.770752  1800.000244     1700.000244     2.0    171370.986816         False          False    True
4  945170.957520  171771.086670  9553.838379  945170.957520  1800.100098  171771.086670  771799.770752  1600.100098     1600.100098     3.0    171370.986816         False          False    True
5  945370.957520  171771.086670  9553.838379  945370.957520  1800.100098  171771.086670  771799.770752  1800.100098     1700.100098     3.0    171370.986816         False          False    True
6  945370.957520  171971.086670  9553.838379  945370.957520  1800.100098  171971.086670  771799.770752  1600.100098     1600.100098     4.0    171370.986816         False          False    True
7  945570.957520  172071.086670  9553.838379  945570.957520  1800.100098  172071.086670  771799.770752  1700.100098     1700.100098     5.0    171370.986816         False          False    True
8  945570.957520  172171.086670  9553.838379  945570.957520   449.000000  172171.086670  771799.770752  1600.100098     1600.100098     6.0    173771.186768          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=3481805/2048.[0m
[08/15 16:04:00]  --------------------------------------------------------------------------------
[08/15 16:04:00]  Iteration: 66 (0 solution, 65 counterexamples)
[08/15 16:04:25]  Generator returned sat in 22.704844 secs.
[08/15 16:04:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:04:26]  Improved number of small numbers from 105 to 111 out of a max of 113
[08/15 16:04:26]  Verifer returned sat in 0.401539 secs.
[08/15 16:04:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  943370.757080  171370.986816  9552.937988  943370.757080     0.100000  171370.986816  771799.770752   199.999512      198.999512     2.0    171370.986816            -1             -1    True
1  943370.757080  171371.986816  9552.937988  943370.757080     0.100000  171371.986816  771799.770752   198.999512       98.999512     2.0    171370.986816         False          False    True
2  943769.657715  171571.986572  9552.937988  943769.657715   597.900146  171571.986572  771799.770752   397.900391      397.900146     1.0    171370.986816         False          False    True
3  945170.857422  171572.086914  9552.937988  945170.857422  1799.100098  171572.086914  771799.770752  1798.999756     1699.099854     2.0    171370.986816         False          False    True
4  945171.957764  171771.986572  9552.937988  945171.957764  1800.100098  171771.986572  771799.770752  1600.200439     1600.200195     3.0    171370.986816         False          False    True
5  945372.857422  171771.986816  9552.937988  945372.857422  1801.100098  171771.986816  771799.770752  1801.099854     1701.099854     4.0    171370.986816         False          False    True
6  945373.857666  171969.986572  9552.937988  945373.857666  1802.100098  171969.986572  771799.770752  1604.100342     1602.100098     4.0    171370.986816         False          False    True
7  945572.857422  172071.086426  9552.937988  945572.857422  1803.100098  172071.086426  771799.770752  1702.000244     1701.099854     5.0    171370.986816         False          False    True
8  945572.857422  172171.086670  9552.937988  945572.857422   447.649780  172171.086670  771799.770752  1602.000000     1601.099854     6.0    173773.086670          True           True   False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=6967705/4096.[0m
[08/15 16:04:26]  --------------------------------------------------------------------------------
[08/15 16:04:26]  Iteration: 67 (0 solution, 66 counterexamples)
[08/15 16:04:36]  Generator returned sat in 8.317170 secs.
[08/15 16:04:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:04:39]  Improved gap from 0.0 to 14.0625
[08/15 16:04:39]  Improved number of small numbers from 85 to 114 out of a max of 114
[08/15 16:04:39]  Verifer returned sat in 2.186085 secs.
[08/15 16:04:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  940466.032471  168373.362061  9552.937988  940466.032471    0.050049  168373.362061  771799.770508  292.899902      292.899902     6.0    168373.362061            -1             -1     -1
1  940637.057617  168397.386719  9552.937988  940637.057617  463.925049  168397.386719  771799.770508  439.900391      363.925049     7.0    168373.362061         False           True   True
2  940661.082275  168473.362061  9552.937988  940661.082275  463.925049  168473.362061  771799.770508  387.949707      287.949707     7.0    168373.362061          True           True  False
3  940661.132568  168666.311768  9552.937988  940661.132568  388.000000  168666.311768  771799.770508  195.050293      188.000000     3.0    168861.362061          True           True  False
4  940661.132568  168751.649414  9552.937988  940661.132568  195.000000  168751.649414  771799.770508  109.712646       88.000000     4.0    168861.362061         False          False  False
5  940661.132568  168837.286865  9564.937988  940661.132568   98.500000  168837.286865  771799.770508   24.075195        0.000000     5.0    168861.362061         False          False  False
6  940687.307373  168861.362061  9638.763184  940687.307373   50.250000  168861.362061  771799.770508   26.174805        0.000000     4.0    168861.362061         False          False  False
7  940687.307373  168887.536865  9724.700684  940687.307373   26.125000  168887.536865  771799.770508    0.000000      -14.062500     2.0    168861.362061         False          False  False
8  940701.369873  168901.599365  9724.700684  940701.369873   14.062500  168901.599365  771799.770508    0.000000     -100.000000     1.0    168861.362061         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=14559/40.[0m
[08/15 16:04:39]  --------------------------------------------------------------------------------
[08/15 16:04:39]  Iteration: 68 (0 solution, 67 counterexamples)
[08/15 16:04:46]  Generator returned sat in 4.076831 secs.
[08/15 16:04:46]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:04:48]  Improved gap from 0.9975 to 0
[08/15 16:04:49]  Improved number of small numbers from 51 to 85 out of a max of 114
[08/15 16:04:49]  Verifer returned sat in 3.036242 secs.
[08/15 16:04:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  940050.416260  168250.643799   9675.656250  940050.416260    0.001250  168250.643799  771799.770508    0.001953        0.001953     7.0    168250.643799            -1             -1    True
1  940050.416260  168250.645039   9775.654297  940050.416260    0.001465  168250.645039  771799.770508    0.000713        0.000000     8.0    168250.643799         False          False    True
2  940050.416260  168250.645752   9875.654297  940050.416260    0.000488  168250.645752  771799.770508    0.000000        0.000000     3.0    168250.645752          True           True   False
3  940150.424316  168250.645752   9875.654297  940150.424316  100.008057  168250.645752  771799.770508  100.008057        0.008057     3.0    168250.645752         False          False   False
4  940150.424316  168350.653164   9974.648135  940150.424316    1.001953  168350.653164  771799.770508    0.000645       -0.998105     2.0    168250.645752         False          False   False
5  940251.431797  168451.651914   9974.648135  940251.431797  101.008125  168451.651914  771799.771133    0.008750        0.008750     1.0    168250.645752         False          False   False
6  940251.433047  168451.661289  10074.637939  940251.433047    0.010000  168451.661289  771799.771133    0.000625       -0.000195     1.0    168250.645752         False          False    True
7  940252.432422  168451.662539  10173.638672  940252.432422    1.000000  168451.662539  771799.771133    0.998750       -0.000088     1.0    168250.645752         False          False    True
8  940252.433672  168452.662109  10273.637451  940252.433672    1.000000  168452.662109  771799.771133    0.000430       -0.000059     1.0    168250.645752         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=7/800.[0m
[08/15 16:04:49]  --------------------------------------------------------------------------------
[08/15 16:04:49]  Iteration: 69 (0 solution, 68 counterexamples)
[08/15 16:05:12]  Generator returned sat in 20.318074 secs.
[08/15 16:05:12]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:05:12]  Improved gap from 0.0 to 23.4375
[08/15 16:05:13]  Improved number of small numbers from 45 to 114 out of a max of 114
[08/15 16:05:13]  Verifer returned sat in 0.900242 secs.
[08/15 16:05:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  940059.792725  167831.888184  10018.409424  940059.792725    0.002686  167831.888184  772104.464355  123.440186       99.997803     8.0    167831.888184            -1             -1     -1
1  940083.230225  167931.885742  10018.409424  940083.230225  146.877686  167931.885742  772104.464355   46.880127       23.435303     9.0    167831.888184         False           True   True
2  940083.230225  167955.330566  10094.971924  940083.230225   46.880000  167955.330566  772104.464355   23.435303       -0.002197     2.0    167978.765869          True           True  False
3  940106.672363  167978.768066  10171.531738  940106.672363   46.877441  167978.768066  772104.464355   23.439941       -0.000244     1.0    168002.208008         False          False  False
4  940230.112305  168099.088379  10171.531738  940230.112305  146.879883  168099.088379  772104.466553   26.557373       23.437500     1.0    168002.208008         False          False  False
5  940230.112305  168102.208252  10248.094238  940230.112305    0.010000  168102.208252  772104.466553   23.437500        0.000000     2.0    168002.208008         False          False   True
6  940230.112305  168125.645752  10324.656738  940230.112305    0.010000  168125.645752  772104.466553    0.000000      -23.437500     3.0    168002.208008         False          False   True
7  940376.989990  168249.083252  10324.656738  940376.989990  146.877686  168249.083252  772104.469238   23.437500       23.437500     1.0    168272.520752          True           True  False
8  940376.989990  168249.085938  10401.216553  940376.989990    0.010000  168249.085938  772104.469238   23.434814       -0.002686     2.0    168272.520752         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=2, buffer=375/16.[0m
[08/15 16:05:13]  --------------------------------------------------------------------------------
[08/15 16:05:13]  Iteration: 70 (0 solution, 69 counterexamples)
[08/15 16:05:23]  Generator returned sat in 6.962343 secs.
[08/15 16:05:23]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:05:27]  Improved gap from 0.1 to 31.25
[08/15 16:05:27]  Improved number of small numbers from 40 to 114 out of a max of 114
[08/15 16:05:27]  Verifer returned sat in 4.364981 secs.
[08/15 16:05:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  940348.820312  168112.906006  9729.483887  940348.820312  131.450195  168112.906006  772104.464355  131.449951      100.100098     9.0    168112.906006            -1             -1     -1
1  940348.820312  168244.255859  9729.483887  940348.820312  131.350000  168244.255859  772104.464355    0.100098        0.100098     3.0    168244.355957         False           True  False
2  940479.970215  168344.255859  9729.483887  940479.970215  131.250000  168344.255859  772104.564453   31.149902       31.149902     1.0    168375.405762         False          False  False
3  940579.870361  168444.255859  9729.483887  940579.870361  131.050049  168444.255859  772104.564453   31.050049       31.050049     1.0    168475.305908         False          False   True
4  940781.020264  168544.156006  9729.483887  940781.020264  232.199951  168544.156006  772205.614502   31.249756       31.149902     1.0    168475.305908         False          False   True
5  940781.020264  168544.255859  9798.233887  940781.020264    1.000000  168544.255859  772205.614502   31.149902       -0.100098     2.0    168475.305908         False          False   True
6  940851.370361  168575.505859  9827.983887  940851.370361  101.500000  168575.505859  772205.614502   70.250000        0.000000     1.0    168475.305908         False          False   True
7  940898.495361  168645.855713  9879.684326  940898.495361  117.375000  168645.855713  772205.614502   47.025146       -1.174561     1.0    168475.305908         False          False   True
8  940962.007568  168694.055664  9879.684326  940962.007568  110.537354  168694.055664  772205.614502   62.337402      -37.662354     1.0    168475.305908         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=63795/2048.[0m
[08/15 16:05:28]  --------------------------------------------------------------------------------
[08/15 16:05:28]  Iteration: 71 (0 solution, 70 counterexamples)
[08/15 16:05:43]  Generator returned sat in 12.718721 secs.
[08/15 16:05:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:05:46]  Improved gap from 0.041666666666666664 to 23.4375
[08/15 16:05:46]  Improved number of small numbers from 41 to 114 out of a max of 114
[08/15 16:05:46]  Verifer returned sat in 3.544716 secs.
[08/15 16:05:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  943651.256104  169447.388184  9722.271240  943651.256104    0.099854  169447.388184  773779.830322  424.037598      424.037598     3.0    169447.388184            -1             -1     -1
1  943651.256104  169547.388184  9722.271240  943651.256104  323.837402  169547.388184  773779.830322  324.037598      324.037598     3.0    169447.388184         False          False   True
2  943651.256104  169547.488281  9722.271240  943651.256104  323.837402  169547.488281  773779.830322  323.937500      224.037598     4.0    169447.388184         False          False   True
3  943651.256104  169647.388184  9722.271240  943651.256104  323.837402  169647.388184  773779.830322  224.037598      124.037598     5.0    169447.388184         False          False   True
4  943651.256104  169844.963135  9722.271240  943651.256104    1.000000  169844.963135  773779.830322   26.462646       24.037598     6.0    169447.388184         False          False   True
5  943651.256104  169847.988037  9798.233643  943651.256104    1.000000  169847.988037  773779.830322   23.437744        0.000000     6.0    169447.388184         False          False   True
6  943651.256104  169871.425781  9874.796143  943651.256104    1.000000  169871.425781  773779.830322    0.000000      -23.437500     7.0    169447.388184         False          False   True
7  944098.831299  169894.863281  9874.796143  944098.831299  447.575195  169894.863281  773779.930420  424.037598      324.037598     1.0    170318.900879          True           True  False
8  944098.831299  169994.863281  9874.796143  944098.831299    1.000000  169994.863281  773779.930420  324.037598      224.037598     2.0    170318.900879         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=663629/2048.[0m
[08/15 16:05:47]  --------------------------------------------------------------------------------
[08/15 16:05:47]  Iteration: 72 (0 solution, 71 counterexamples)
[08/15 16:05:53]  Generator returned sat in 3.687860 secs.
[08/15 16:05:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:05:54]  Improved gap from 0.0 to 23.4375
[08/15 16:05:55]  Improved number of small numbers from 51 to 55 out of a max of 114
[08/15 16:05:55]  Verifer returned sat in 2.578217 secs.
[08/15 16:05:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  943551.255615  169444.873281  9722.271240  943551.255615    0.000488  169444.873281  774006.382197  100.000137      100.000137     9.0    169444.873281            -1             -1     -1
1  943551.257354  169544.872031  9722.271240  943551.257354  100.001875  169544.872031  774006.382822    0.002500        0.001250     8.0    169444.873281         False           True   True
2  943651.256104  169544.873281  9722.271240  943651.256104  100.001250  169544.873281  774006.382822  100.000000        0.000000     3.0    169644.873281          True           True   True
3  943751.255859  169644.873281  9722.271240  943751.255859  199.999756  169644.873281  774006.382822   99.999756       -0.000244     2.0    169644.873281         False           True  False
4  943951.256104  169844.863906  9722.271240  943951.256104  300.000000  169844.863906  774106.381572    0.010625        0.001250     1.0    169644.873281         False          False  False
5  943951.256104  169844.873906  9795.720615  943951.256104    0.010000  169844.873906  774106.381572    0.000625      -26.549375     2.0    169644.873281         False          False   True
6  944100.265791  169971.416406  9795.720615  944100.265791  149.010312  169971.416406  774128.840635    0.008750        0.001250     1.0    169644.873281         False          False   True
7  944100.267041  169971.425781  9872.281240  944100.267041    0.010000  169971.425781  774128.840635    0.000625      -23.436875     1.0    169644.873281         False          False   True
8  944162.557354  169994.863281  9872.281250  944162.557354   62.290937  169994.863281  774128.840635   38.853437      -61.146553     1.0    169644.873281         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/800.[0m
[08/15 16:05:56]  --------------------------------------------------------------------------------
[08/15 16:05:56]  Iteration: 73 (0 solution, 72 counterexamples)
[08/15 16:06:03]  Generator returned sat in 4.374840 secs.
[08/15 16:06:03]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:06:04]  Improved gap from 0.0 to 14.0625
[08/15 16:06:05]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 16:06:05]  Verifer returned sat in 1.817049 secs.
[08/15 16:06:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  943600.406982  169445.141602  9735.955811  943600.406982  426.224854  169445.141602  774029.040771  126.224609       99.949951     4.0    169445.141602            -1             -1   False
1  943900.407227  169571.416260  9735.955811  943900.407227  426.224854  169571.416260  774029.040771  299.950195      299.950195     1.0    169445.141602         False          False   False
2  944026.632080  169609.591309  9735.955811  944026.632080  426.175049  169609.591309  774029.040771  388.000000      326.175049     2.0    169997.591309         False          False   False
3  944026.632080  169771.416260  9735.955811  944026.632080  388.000000  169771.416260  774029.040771  226.175049      226.175049     3.0    169997.591309         False          False   False
4  944026.632080  169871.416260  9735.955811  944026.632080  195.000000  169871.416260  774029.040771  126.175049      126.175049     3.0    169997.591309         False          False   False
5  944026.632080  169947.291406  9735.955811  944026.632080   98.500000  169947.291406  774029.040771   50.299902       26.175049     4.0    169997.591309         False          False   False
6  944026.632080  169971.416504  9809.780762  944026.632080   50.250000  169971.416504  774029.040771   26.174805        0.000000     5.0    169997.591309         False          False   False
7  944026.632080  169997.591309  9895.718262  944026.632080   26.125000  169997.591309  774029.040771    0.000000      -14.062500     6.0    169997.591309         False          False   False
8  944040.694580  170011.653809  9895.718262  944040.694580   14.062500  170011.653809  774029.040771    0.000000     -100.000000     1.0    169997.591309         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1336217/4096.[0m
[08/15 16:06:05]  --------------------------------------------------------------------------------
[08/15 16:06:05]  Iteration: 74 (0 solution, 73 counterexamples)
[08/15 16:06:31]  Generator returned sat in 23.389326 secs.
[08/15 16:06:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:06:31]  Improved gap from 0.0 to 100
[08/15 16:06:32]  Improved number of small numbers from 52 to 114 out of a max of 114
[08/15 16:06:32]  Verifer returned sat in 0.524972 secs.
[08/15 16:06:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t     cwnd_0,t    service_0,t      losts_0,t      queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  943826.609619  167911.626465  9895.718262  943826.609619     0.002441  167911.626465  774014.975586  1900.007568     1800.007568     8.0    167911.626465            -1             -1     -1
1  943826.609619  168111.626221  9895.718262  943826.609619  1900.004883  168111.626221  774014.975586  1700.007812     1700.007568     4.0    167911.626465         False           True  False
2  944026.604492  168111.626465  9895.718262  944026.604492  1900.002686  168111.626465  774014.975586  1900.002441     1800.002441     3.0    170011.628906         False          False  False
3  944026.604492  168211.626465  9895.718262  944026.604492   499.251221  168211.626465  774014.975586  1800.002441     1700.002441     4.0    170011.628906         False          False  False
4  944026.604492  168411.626465  9895.718262  944026.604492   999.502441  168411.626465  774014.975586  1600.002441     1600.002441     5.0    170011.628906         False          False  False
5  944426.606934  168511.623779  9895.718262  944426.606934  2000.004883  168511.623779  774014.978027  1900.005127     1900.002441     6.0    170011.628906         False          False  False
6  944426.606934  168511.626465  9895.718262  944426.606934     0.010000  168511.626465  774014.978027  1900.002441     1800.002441     7.0    170011.628906         False          False   True
7  944426.606934  168711.626465  9895.718262  944426.606934   150.000000  168711.626465  774014.978027  1700.002441     1700.002441     8.0    170011.628906         False          False   True
8  944426.606934  168811.626221  9895.718262  944426.606934   301.000000  168811.626221  774014.978027  1600.002686     1600.002441     9.0    170011.628906         False           True  False
high_util=True, low_loss=True, low_delay=False, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3891205/2048.[0m
[08/15 16:06:32]  --------------------------------------------------------------------------------
[08/15 16:06:32]  Iteration: 75 (0 solution, 74 counterexamples)
[08/15 16:06:43]  Generator returned sat in 8.272120 secs.
[08/15 16:06:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:06:43]  Improved gap from 0.002 to 0
[08/15 16:06:44]  Improved number of small numbers from 59 to 78 out of a max of 114
[08/15 16:06:44]  Verifer returned sat in 1.212965 secs.
[08/15 16:06:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  942475.608659  168160.625732  9496.728271  942475.608659    0.002500  168160.625732  774014.978027  300.004899      300.002510     5.0    168160.625732            -1             -1     -1
1  942475.608659  168160.628174  9496.728271  942475.608659  300.004883  168160.628174  774014.978027  300.002458      200.002510     6.0    168160.625732         False          False   True
2  942475.608659  168360.627930  9496.728271  942475.608659  100.002686  168360.627930  774014.978027  100.002702      100.002510     5.0    168460.630632         False          False   True
3  942475.608659  168459.627930  9496.728271  942475.608659  100.002686  168459.627930  774014.978027    1.002702        0.002510     6.0    168460.630632         False          False   True
4  942475.608659  168460.628132  9596.725762  942475.608659    1.000000  168460.628132  774014.978027    0.002500        0.000000     7.0    168460.630632         False          False   True
5  942476.606159  168460.630632  9695.728262  942476.606159    1.000000  168460.630632  774014.978027    0.997500        0.000000     8.0    168460.630632         False          False   True
6  942476.606159  168461.628132  9795.728027  942476.606159    0.010000  168461.628132  774014.978027    0.000000       -0.000234     2.0    168460.630632         False           True  False
7  942476.616159  168461.635632  9895.718018  942476.616159    0.010000  168461.635632  774014.978027    0.002500       -0.000244     1.0    168460.630632         False          False  False
8  942476.623659  168461.645508  9995.710693  942476.623659    0.010000  168461.645508  774014.978027    0.000124       -0.000068     1.0    168460.630632         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819211/4096.[0m
[08/15 16:06:45]  --------------------------------------------------------------------------------
[08/15 16:06:45]  Iteration: 76 (0 solution, 75 counterexamples)
[08/15 16:06:53]  Generator returned sat in 5.611666 secs.
[08/15 16:06:53]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][7]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:06:55]  Improved gap from 0.0 to 12.5
[08/15 16:06:55]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 16:06:55]  Verifer returned sat in 2.146344 secs.
[08/15 16:06:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  942860.791016  168446.013184  9111.343262  942860.791016  199.699951  168446.013184  774014.978027  399.799805      299.799805     7.0    168446.013184            -1             -1     -1
1  942860.791016  168646.012939  9111.343262  942860.791016  199.699951  168646.012939  774014.978027  199.800049      199.799805     8.0    168446.013184         False          False   True
2  942860.791016  168646.013184  9111.343262  942860.791016  199.700195  168646.013184  774014.978027  199.799805       99.799805     3.0    168446.013184          True           True  False
3  943060.991211  168845.913330  9111.343262  943060.991211  400.000000  168845.913330  774014.978027  200.099854      200.000000     1.0    168446.013184         False          False  False
4  943060.991211  168945.913330  9111.343262  943060.991211  200.000000  168945.913330  774014.978027  100.099854      100.000000     2.0    168446.013184         False          False  False
5  943060.991211  169033.313232  9111.343262  943060.991211  100.000000  169033.313232  774014.978027   12.699951        0.000000     3.0    168446.013184         False          False  False
6  943098.291260  169058.213135  9174.043213  943098.291260   50.000000  169058.213135  774014.978027   25.100098        0.000000     1.0    168446.013184         False          False  False
7  943098.291260  169083.313232  9261.543213  943098.291260   25.000000  169083.313232  774014.978027    0.000000      -12.500000     2.0    168446.013184         False          False  False
8  943110.791260  169095.813232  9261.543213  943110.791260   12.500000  169095.813232  774014.978027    0.000000     -100.000000     1.0    168446.013184         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819609/4096.[0m
[08/15 16:06:56]  --------------------------------------------------------------------------------
[08/15 16:06:56]  Iteration: 77 (0 solution, 76 counterexamples)
[08/15 16:07:13]  Generator returned sat in 15.314749 secs.
[08/15 16:07:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:07:15]  Improved gap from 0.0 to 35.9375
[08/15 16:07:16]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/15 16:07:16]  Verifer returned sat in 2.245980 secs.
[08/15 16:07:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  942854.569092  168790.291016  8867.065186  942854.569092  100.400000  168790.291016  773964.078125  100.199951      100.199707     3.0    168790.291016            -1             -1     -1
1  942854.669189  168890.291260  8867.065186  942854.669189  100.300049  168890.291260  773964.177979    0.199951        0.199951     4.0    168890.491211         False          False   True
2  942854.669189  168890.291260  8922.523682  942854.669189    0.100098  168890.291260  773964.177979    0.199951      -44.341553     4.0    168890.491211         False           True   True
3  942972.381836  168934.833008  8949.152588  942972.381836  117.912598  168934.833008  773964.177979   73.370850        0.000000     1.0    168890.491211         False           True  False
4  942972.381836  169008.203857  9013.215088  942972.381836   73.270996  169008.203857  773964.177979    0.000000      -35.937500     2.0    168890.491211         False          False  False
5  943032.338135  169044.141357  9074.409668  943032.338135   59.956299  169044.141357  773964.177979   24.018799      -14.786621     1.0    168890.491211         False          False  False
6  943086.244385  169082.946777  9135.190430  943086.244385   77.925049  169082.946777  773964.177979   39.119629       -0.099609     1.0    168890.491211         False          False  False
7  943122.181641  169122.166260  9199.252686  943122.181641   75.056885  169122.166260  773964.177979   35.837402       -0.100098     1.0    168890.491211         False          False  False
8  943144.325439  169158.103760  9263.315186  943144.325439   57.981201  169158.103760  773964.177979   22.043701      -13.893799     1.0    168890.491211         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=819/4096.[0m
[08/15 16:07:16]  --------------------------------------------------------------------------------
[08/15 16:07:16]  Iteration: 78 (0 solution, 77 counterexamples)
[08/15 16:07:21]  Generator returned sat in 1.947269 secs.
[08/15 16:07:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:07:23]  Improved gap from 0.0 to 23.4375
[08/15 16:07:23]  Improved number of small numbers from 56 to 114 out of a max of 114
[08/15 16:07:23]  Verifer returned sat in 2.295888 secs.
[08/15 16:07:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  942532.325684  168529.527832  9112.636475  942532.325684    0.002441  168529.527832  773964.177734   38.620117       23.427979     3.0    168529.527832            -1             -1   False
1  942732.333008  168568.150146  9112.636475  942732.333008  238.627441  168568.150146  773964.177734  200.005127      123.435303     1.0    168529.527832         False          False   False
2  942732.333008  168644.720215  9112.636475  942732.333008  200.002441  168644.720215  773964.177734  123.435059       23.435303     2.0    168768.155273         False          False   False
3  942808.897949  168821.282715  9112.636475  942808.897949  200.000000  168821.282715  773964.177734   23.437500        0.000244     1.0    168844.720215         False          False   False
4  943032.337891  168941.597412  9112.636475  943032.337891  246.877441  168941.597412  773964.180420  126.560059      123.437500     1.0    168844.720215         False          False   False
5  943032.337891  168944.719971  9112.636475  943032.337891    0.010000  168944.719971  773964.180420  123.437500       23.437500     2.0    168844.720215         False          False    True
6  943032.337891  169044.719971  9189.198975  943032.337891    1.000000  169044.719971  773964.180420   23.437500        0.000000     3.0    168844.720215         False          False    True
7  943032.337891  169068.157471  9265.761475  943032.337891    1.000000  169068.157471  773964.180420    0.000000      -23.437500     4.0    168844.720215         False          False    True
8  943097.117920  169091.594971  9265.761475  943097.117920   64.780029  169091.594971  773964.180420   41.342529      -58.657471     1.0    169132.937500          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/15 16:07:24]  --------------------------------------------------------------------------------
[08/15 16:07:24]  Iteration: 79 (0 solution, 78 counterexamples)
[08/15 16:07:45]  Generator returned sat in 19.046917 secs.
[08/15 16:07:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:07:46]  Improved gap from 0.1 to 23.4375
[08/15 16:07:46]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/15 16:07:46]  Verifer returned sat in 0.942638 secs.
[08/15 16:07:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  943033.435059  168869.357422  8687.999023  943033.435059    0.100000  168869.357422  773964.177734  199.899902       99.899902     4.0    168869.357422            -1             -1     -1
1  943356.972656  169069.357422  8687.999023  943356.972656  523.437500  169069.357422  773964.177734  323.437500      323.437500     1.0    168869.357422         False          False   True
2  943356.972656  169169.357422  8687.999023  943356.972656  323.337402  169169.357422  773964.177734  223.437500      223.437500     2.0    169392.794922         False          False   True
3  943356.972656  169169.757324  8687.999023  943356.972656  223.437500  169169.757324  773964.177734  223.037598      123.437500     3.0    169392.794922         False          False   True
4  943356.972656  169369.257568  8687.999023  943356.972656    1.000000  169369.257568  773964.177734   23.537354       23.437500     4.0    169392.794922         False          False   True
5  943356.972656  169369.357422  8764.561523  943356.972656    1.000000  169369.357422  773964.177734   23.437500        0.000000     5.0    169392.794922         False          False   True
6  943356.972656  169392.794922  8841.124023  943356.972656    1.000000  169392.794922  773964.177734    0.000000      -23.437500     6.0    169392.794922         False          False   True
7  943804.047852  169516.232422  8841.124023  943804.047852  447.075195  169516.232422  773964.277832  323.537598      323.537598     1.0    169392.794922         False           True  False
8  943804.047852  169519.157471  8841.124023  943804.047852    1.000000  169519.157471  773964.277832  320.612549      223.537598     2.0    169392.794922         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=662605/2048.[0m
[08/15 16:07:47]  --------------------------------------------------------------------------------
[08/15 16:07:47]  Iteration: 80 (0 solution, 79 counterexamples)
[08/15 16:07:52]  Generator returned sat in 2.658296 secs.
[08/15 16:07:52]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:07:53]  Improved gap from 22.4375 to 23.4375
[08/15 16:07:53]  Improved number of small numbers from 34 to 114 out of a max of 114
[08/15 16:07:53]  Verifer returned sat in 1.040152 secs.
[08/15 16:07:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  940497.229980  169135.377197  8521.979004  940497.229980  423.637500  169135.377197  770938.315186  423.537598      423.537354     3.0    169135.377197            -1             -1     -1
1  940497.330078  169235.377197  8521.979004  940497.330078  423.637695  169235.377197  770938.315186  323.637695      323.637451     3.0    169135.377197         False          False   True
2  940497.330078  169235.377441  8521.979004  940497.330078    0.100098  169235.377441  770938.315186  323.637451      223.637451     4.0    169559.014893         False          False   True
3  940497.330078  169335.377441  8521.979004  940497.330078  323.637451  169335.377441  770938.315186  223.637451      123.637451     4.0    169559.014893         False          False   True
4  940497.330078  169535.377441  8521.979004  940497.330078    1.000000  169535.377441  770938.315186   23.637451       23.637451     5.0    169559.014893         False          False   True
5  940497.330078  169535.377441  8598.341553  940497.330078    1.000000  169535.377441  770938.315186   23.637451        0.000000     5.0    169559.014893         False          False   True
6  940497.330078  169559.014893  8674.904053  940497.330078    1.000000  169559.014893  770938.315186    0.000000      -23.437500     6.0    169559.014893         False          False   True
7  940944.604980  169682.452148  8674.904053  940944.604980  447.274902  169682.452148  770938.415283  323.737549      323.737305     1.0    169559.014893         False           True  False
8  940944.604980  169685.277100  8674.904053  940944.604980    1.000000  169685.277100  770938.415283  320.912598      223.737305     2.0    169559.014893         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=331507/1024.[0m
[08/15 16:07:54]  --------------------------------------------------------------------------------
[08/15 16:07:54]  Iteration: 81 (0 solution, 80 counterexamples)
[08/15 16:08:01]  Generator returned sat in 5.213576 secs.
[08/15 16:08:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:08:03]  Improved gap from 0.0 to 3.125
[08/15 16:08:04]  Improved number of small numbers from 73 to 85 out of a max of 114
[08/15 16:08:04]  Verifer returned sat in 2.152223 secs.
[08/15 16:08:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  940073.892334  169135.377197  8521.979248  940073.892334    0.100098  169135.377197  770938.315186    0.199951        0.199951     1.0    169135.377197            -1             -1   False
1  940073.892334  169135.377197  8616.704346  940073.892334    0.100098  169135.377197  770938.315186    0.199951       -5.074951     1.0    169135.377197         False          False   False
2  940081.992188  169140.652197  8713.579248  940081.992188    8.299805  169140.652197  770938.315186    3.024805       -0.100195     1.0    169135.377197         False          False   False
3  940104.875716  169143.777197  8790.795915  940104.875716   25.908333  169143.777197  770938.315186   22.783333        0.000000     1.0    169135.377197         False          False   False
4  940104.875716  169166.560531  8887.670915  940104.875716   12.600000  169166.560531  770938.315186    0.000000       -3.125000     2.0    169135.377197         False          False   False
5  940151.650716  169169.685531  8944.020915  940151.650716   46.775000  169169.685531  770938.315186   43.650000        0.000000     1.0    169135.377197         False          False   False
6  940151.650716  169213.335531  9040.895915  940151.650716   43.550000  169213.335531  770938.315186    0.000000       -3.125000     2.0    169135.377197         False          False   False
7  940255.988216  169216.460693  9040.895915  940255.988216  104.337500  169216.460693  770939.327686  100.199837        0.200000     1.0    169135.377197         False          False   False
8  940255.988216  169316.460693  9040.895996  940255.988216    1.000000  169316.460693  770939.327686    0.199837      -99.799919     2.0    169135.377197         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/15 16:08:04]  --------------------------------------------------------------------------------
[08/15 16:08:04]  Iteration: 82 (0 solution, 81 counterexamples)
[08/15 16:08:22]  Generator returned sat in 14.821321 secs.
[08/15 16:08:22]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:08:25]  Improved gap from 0.000625 to 23.4375
[08/15 16:08:26]  Improved number of small numbers from 43 to 112 out of a max of 114
[08/15 16:08:26]  Verifer returned sat in 4.225211 secs.
[08/15 16:08:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  939514.871338  168840.652344  8716.704102  939514.871338  199.949951  168840.652344  770474.219482  199.999512       99.999756     9.0    168840.652344            -1             -1     -1
1  939514.871338  169017.214844  8716.704102  939514.871338  199.950000  169017.214844  770474.219482   23.437012       -0.000244     9.0    168840.652344         False           True  False
2  939838.359131  169140.652100  8716.704102  939838.359131  346.924805  169140.652100  770474.269531  223.437500      223.437500     1.0    168840.652344          True           True  False
3  939838.359131  169193.685010  8716.704102  939838.359131  111.850000  169193.685010  770474.269531  170.404590      123.437500     2.0    169364.089600         False          False   True
4  939838.359131  169337.577148  8716.704102  939838.359131   54.925000  169337.577148  770474.269531   26.512451       23.437500     3.0    169364.089600         False          False   True
5  939838.359131  169340.652100  8793.266602  939838.359131   26.462500  169340.652100  770474.269531   23.437500        0.000000     4.0    169364.089600         False          False   True
6  939838.359131  169364.089600  8869.829102  939838.359131   12.231250  169364.089600  770474.269531    0.000000      -23.437500     5.0    169364.089600         False          False   True
7  940185.283936  169387.527100  8869.829102  940185.283936  346.924805  169387.527100  770474.319336  323.437500      223.437500     1.0    169364.089600         False           True  False
8  940185.283936  169487.527344  8869.829102  940185.283936    1.000000  169487.527344  770474.319336  223.437256      123.437500     2.0    169364.089600         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3575/16.[0m
[08/15 16:08:27]  --------------------------------------------------------------------------------
[08/15 16:08:27]  Iteration: 83 (0 solution, 82 counterexamples)
[08/15 16:08:36]  Generator returned sat in 7.067076 secs.
[08/15 16:08:36]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:08:37]  Improved gap from 0.05 to 35.9375
[08/15 16:08:38]  Improved number of small numbers from 73 to 101 out of a max of 114
[08/15 16:08:38]  Verifer returned sat in 1.980168 secs.
[08/15 16:08:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  940036.552979  169454.420850  8194.822754  940036.552979  152.049805  169454.420850  770474.269531  107.862598       99.750000     4.0    169454.420850            -1             -1   False
1  940080.690381  169562.333252  8194.822754  940080.690381  152.000000  169562.333252  770474.269531   44.087598       43.887402     1.0    169606.420850         False          False   False
2  940080.690381  169562.533447  8250.885498  940080.690381   44.037598  169562.533447  770474.269531   43.887402       -0.049854     2.0    169606.420850         False          False   False
3  940080.790283  169606.470850  8314.947754  940080.790283   43.987305  169606.470850  770474.269531    0.049902      -35.887695     1.0    169606.520752         False          False   False
4  940157.765381  169642.408447  8373.860352  940157.765381   77.025000  169642.408447  770474.269531   41.087402        0.000000     1.0    169606.520752         False          False   False
5  940157.765381  169683.495850  8437.922852  940157.765381   41.037598  169683.495850  770474.269531    0.000000      -35.937500     2.0    169606.520752         False          False   False
6  940219.246582  169719.433350  8501.985352  940219.246582   61.481201  169719.433350  770474.269531   25.543701      -10.393799     1.0    169606.520752         False          False   False
7  940251.184131  169755.370850  8564.998047  940251.184131   57.481250  169755.370850  770474.269531   21.543750      -15.443555     1.0    169606.520752         False          False   False
8  940287.121582  169792.358398  8564.998047  940287.121582   57.481201  169792.358398  770474.269531   20.493652      -79.506104     1.0    169606.520752         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=703/16.[0m
[08/15 16:08:39]  --------------------------------------------------------------------------------
[08/15 16:08:39]  Iteration: 84 (0 solution, 83 counterexamples)
[08/15 16:08:58]  Generator returned sat in 16.074824 secs.
[08/15 16:08:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:08:59]  Improved gap from 0.0 to 35.9375
[08/15 16:09:00]  Improved number of small numbers from 43 to 51 out of a max of 114
[08/15 16:09:00]  Verifer returned sat in 2.461603 secs.
[08/15 16:09:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t   service_0,t      losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  939931.055176   169409.67585  8228.875488  939931.055176    0.100098  169409.67585  770440.049531  81.329795       62.524932     2.0     169409.67585            -1             -1   False
1  939968.530381   169491.10585  8228.875488  939968.530381  118.805000  169491.10585  770440.049531  37.375000        0.000137     1.0     169409.67585         False          False   False
2  939968.530381   169528.48085  8291.500488  939968.530381   37.275000  169528.48085  770440.049531   0.000000      -37.374863     2.0     169528.48085         False          False   False
3  940082.795381   169565.85585  8314.510498  940082.795381  114.265000  169565.85585  770440.049531  76.890000       -0.099854     1.0     169528.48085         False          False   False
4  940082.995381   169642.84585  8377.135498  940082.995381   77.090000  169642.84585  770440.049531   0.100000      -37.274854     1.0     169528.48085         False          False   False
5  940157.765381   169680.22085  8439.640352  940157.765381   74.870000  169680.22085  770440.049531  37.495000        0.000000     1.0     169528.48085         False          False   False
6  940195.140381   169717.71585  8502.265137  940195.140381   74.870000  169717.71585  770440.049531  37.375000       -0.000215     2.0     169528.48085         False          False   False
7  940232.695381   169755.37085  8564.610352  940232.695381   74.930000  169755.37085  770440.049531  37.275000       -0.100000     1.0     169528.48085         False          False   False
8  940250.682881   169792.74585  8627.235107  940250.682881   55.262500  169792.74585  770440.049531  17.887500      -19.487744     1.0     169528.48085         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=0, buffer=819/4096.[0m
[08/15 16:09:01]  --------------------------------------------------------------------------------
[08/15 16:09:01]  Iteration: 85 (0 solution, 84 counterexamples)
[08/15 16:09:13]  Generator returned sat in 9.035703 secs.
[08/15 16:09:13]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:09:15]  Improved gap from 0.0 to 25.0
[08/15 16:09:16]  Improved number of small numbers from 33 to 40 out of a max of 114
[08/15 16:09:16]  Verifer returned sat in 3.578314 secs.
[08/15 16:09:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  938444.508057  167804.460850  9752.895352  938444.508057    0.002686  167804.460850  770440.049531  199.997676       99.997676     6.0     167804.46085            -1             -1     -1
1  938469.507881  168004.460850  9752.895352  938469.507881  224.997500  168004.460850  770440.049531   24.997500       24.997500     1.0     167804.46085         False           True  False
2  938569.510381  168104.458350  9752.895352  938569.510381  125.000000  168104.458350  770440.049531   25.002500       25.000000     1.0     168129.46085         False          False  False
3  938669.507881  168204.460850  9752.895352  938669.507881  125.000000  168204.460850  770440.049531   24.997500       24.997500     1.0     168129.46085         False          False  False
4  939043.510381  168304.458350  9752.895352  939043.510381  399.000000  168304.458350  770714.049531   25.002500       25.000000     1.0     168129.46085         False          False  False
5  939043.510381  168304.460850  9827.895352  939043.510381    0.010000  168304.460850  770714.049531   25.000000        0.000000     2.0     168129.46085         False          False   True
6  939117.521631  168329.460850  9853.881836  939117.521631   99.011250  168329.460850  770714.049531   74.011250       -0.002266     3.0     168129.46085         False          False   True
7  939167.510381  168403.474600  9902.900391  939167.510381  124.000000  168403.474600  770714.049531   49.986250       -0.994961     1.0     168453.46085          True           True  False
8  939215.540381  168454.456055  9902.900391  939215.540381   98.016250  168454.456055  770714.049531   47.034795      -52.964961     1.0     168453.46085         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25.[0m
[08/15 16:09:17]  --------------------------------------------------------------------------------
[08/15 16:09:17]  Iteration: 86 (0 solution, 85 counterexamples)
[08/15 16:09:38]  Generator returned sat in 18.415010 secs.
[08/15 16:09:38]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:09:45]  Improved gap from 0.0003125 to 0
[08/15 16:09:46]  Improved number of small numbers from 47 to 114 out of a max of 114
[08/15 16:09:46]  Verifer returned sat in 7.572531 secs.
[08/15 16:09:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  938694.481445  168057.442139  9505.908936  938694.481445    0.001221  168057.442139  770440.049561  196.989746      101.000977     4.0    168057.442139            -1             -1    True
1  938694.482910  168253.430908  9505.908936  938694.482910  196.991211  168253.430908  770440.050781    1.001221        1.001221     5.0    168057.442139         False          False    True
2  938694.482910  168253.430908  9603.902832  938694.482910    0.999756  168253.430908  770440.050781    1.001221       -1.004883     5.0    168254.432129          True           True    True
3  938695.489258  168255.437012  9603.903076  938695.489258    2.007568  168255.437012  770440.050781    0.001465      -99.998291     1.0    168254.432129         False           True   False
4  938795.489014  168355.437012  9703.901611  938795.489014  100.001221  168355.437012  770440.050781    0.001221        0.000000     1.0    168254.432129         False          False   False
5  938896.491455  168355.439697  9703.901611  938896.491455  101.003662  168355.439697  770440.052002  100.999756        1.001221     1.0    168254.432129         False          False   False
6  938896.491455  168455.438477  9802.900391  938896.491455    0.010000  168455.438477  770440.052002    1.000977        0.000000     2.0    168254.432129         False          False    True
7  938896.491455  168456.439453  9902.900146  938896.491455    1.000000  168456.439453  770440.052002    0.000000       -0.000244     3.0    168254.432129         False          False    True
8  938897.491455  168457.439453  9902.900391  938897.491455    1.000000  168457.439453  770440.052002    0.000000      -99.000000     1.0    168254.432129         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=4101/4096.[0m
[08/15 16:09:46]  --------------------------------------------------------------------------------
[08/15 16:09:46]  Iteration: 87 (0 solution, 86 counterexamples)
[08/15 16:09:51]  Generator returned sat in 1.983043 secs.
[08/15 16:09:51]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:09:57]  Improved gap from 0.0 to 1.5625
[08/15 16:09:58]  Improved number of small numbers from 71 to 76 out of a max of 114
[08/15 16:09:58]  Verifer returned sat in 6.967545 secs.
[08/15 16:09:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t      losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  938670.350098  168201.459766   9456.716797  938670.350098  0.043945  168201.459766  770465.912939  2.977393        1.814111     9.0    168201.459766            -1             -1     -1
1  938670.350098  168202.623047   9554.859131  938670.350098  2.977295  168202.623047  770465.912939  1.814111       -0.043555     7.0    168201.459766         False           True   True
2  938671.469580  168204.480859   9653.296387  938671.469580  2.933594  168204.480859  770465.912939  1.075781       -0.486816     1.0    168205.556641          True           True  False
3  938673.283643  168206.732422   9751.044922  938673.283643  2.889844  168206.732422  770465.912939  0.638281       -0.924219     1.0    168207.370703         False          False  False
4  938675.726611  168208.294922   9849.482422  938675.726611  3.081250  168208.294922  770465.912939  1.518750       -0.043750     1.0    168207.370703         False          False  False
5  938677.584424  168209.857422   9947.668213  938677.584424  3.376562  168209.857422  770465.912939  1.814062       -0.000146     1.0    168207.370703         False          False  False
6  938679.146924  168211.715234  10046.062109  938679.146924  3.376562  168211.715234  770465.912939  1.518750       -0.043750     1.0    168207.370703         False          False  False
7  938680.807861  168213.277734  10144.444922  938680.807861  3.179688  168213.277734  770465.912939  1.617188        0.000000     1.0    168207.370703         False          False  False
8  938682.271924  168214.938672  10144.445068  938682.271924  3.081250  168214.938672  770465.912939  1.420313      -98.535791     1.0    168207.370703         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=7/80.[0m
[08/15 16:09:59]  --------------------------------------------------------------------------------
[08/15 16:09:59]  Iteration: 88 (0 solution, 87 counterexamples)
[08/15 16:10:11]  Generator returned sat in 9.451380 secs.
[08/15 16:10:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:10:13]  Improved gap from 0.0004166666666666667 to 23.4375
[08/15 16:10:13]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/15 16:10:13]  Verifer returned sat in 1.937710 secs.
[08/15 16:10:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  937809.195557  167243.282715  9456.716797  937809.195557  524.037354  167243.282715  770465.912598  100.000244        0.000488     9.0    167243.282715            -1             -1     -1
1  938233.232666  167343.282471  9456.716797  938233.232666  524.037354  167343.282471  770465.912598  424.037598      324.037598     2.0    167243.282715         False           True   True
2  938233.232666  167543.232666  9456.716797  938233.232666    0.050049  167543.232666  770465.912598  224.087402      224.037598     2.0    167767.320068         False          False   True
3  938233.232666  167543.282471  9456.716797  938233.232666    0.050049  167543.282471  770465.912598  224.037598      124.037598     3.0    167767.320068         False          False   True
4  938233.232666  167740.807373  9456.716797  938233.232666    1.000000  167740.807373  770465.912598   26.512695       24.037598     4.0    167767.320068         False          False   True
5  938233.232666  167743.882568  9532.679199  938233.232666    1.000000  167743.882568  770465.912598   23.437500        0.000000     5.0    167767.320068         False          False   True
6  938233.232666  167767.320068  9609.241699  938233.232666    1.000000  167767.320068  770465.912598    0.000000      -23.437500     6.0    167767.320068         False          False   True
7  938680.807861  167867.319824  9609.241699  938680.807861  447.575195  167867.319824  770465.962891  347.525146      324.087402     1.0    167767.320068         False           True  False
8  938680.807861  167890.757568  9609.241699  938680.807861    1.000000  167890.757568  770465.962891  324.087402      224.087402     2.0    167767.320068         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=663731/2048.[0m
[08/15 16:10:14]  --------------------------------------------------------------------------------
[08/15 16:10:14]  Iteration: 89 (0 solution, 88 counterexamples)
[08/15 16:10:27]  Generator returned sat in 10.704498 secs.
[08/15 16:10:27]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:10:29]  Improved gap from 0.1 to 0
[08/15 16:10:29]  Improved number of small numbers from 83 to 114 out of a max of 114
[08/15 16:10:29]  Verifer returned sat in 1.898363 secs.
[08/15 16:10:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  938082.233154  167767.319824  9356.766797  938082.233154    0.049805  167767.319824  770314.863037    0.050293        0.050000     7.0    167767.319824            -1             -1     -1
1  938082.233154  167767.370117  9456.716797  938082.233154    0.050000  167767.370117  770314.863037    0.000000        0.000000     3.0    167767.319824         False           True  False
2  938232.133057  167767.370117  9456.716797  938232.133057  149.899902  167767.370117  770314.863037  149.899902       49.899902     3.0    167767.319824         False          False  False
3  938332.083008  167917.319824  9456.716797  938332.083008  249.849854  167917.319824  770314.863037   99.900146       49.849854     1.0    167767.319824         False          False  False
4  938383.182861  168067.370117  9456.716797  938383.182861  151.000000  168067.370117  770314.863037    0.949707        0.949707     1.0    167767.319824         False          False  False
5  938683.233154  168067.420166  9456.716797  938683.233154  301.000000  168067.420166  770465.962891  149.850098       49.900146     2.0    167767.319824         False          False  False
6  938683.233154  168216.220215  9506.816650  938683.233154    1.000000  168216.220215  770465.962891    1.050049        0.000000     2.0    167767.319824         False          False   True
7  938683.233154  168217.270264  9606.816650  938683.233154    1.000000  168217.270264  770465.962891    0.000000        0.000000     3.0    167767.319824         False          False   True
8  938684.233154  168217.319824  9606.816895  938684.233154    1.000000  168217.319824  770465.962891    0.950439      -98.999756     1.0    167767.319824         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=204391/4096.[0m
[08/15 16:10:30]  --------------------------------------------------------------------------------
[08/15 16:10:30]  Iteration: 90 (0 solution, 89 counterexamples)
[08/15 16:10:43]  Generator returned sat in 10.774098 secs.
[08/15 16:10:44]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:10:46]  Improved gap from 0.0 to 0
[08/15 16:10:46]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 16:10:46]  Verifer returned sat in 2.649569 secs.
[08/15 16:10:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  938105.118164  167667.370117  9456.716797  938105.118164    0.050049  167667.370117  770337.748047  100.000000      100.000000     4.0    167667.370117            -1             -1   False
1  938205.018066  167667.420166  9456.716797  938205.018066  199.899902  167667.420166  770436.597900  101.000000        1.050049     4.0    167667.370117         False          False   False
2  938303.917969  167767.370117  9456.716797  938303.917969  199.899902  167767.370117  770436.597900   99.949951       -0.050049     5.0    167667.370117         False          False    True
3  938403.968018  167867.370117  9456.716797  938403.968018  200.000000  167867.370117  770436.597900  100.000000        0.000000     1.0    167667.370117          True           True   False
4  938503.968018  168067.320068  9456.716797  938503.968018  200.000000  168067.320068  770436.597900    0.050049        0.000000     1.0    167667.370117         False          False   False
5  938903.817871  168167.320312  9456.716797  938903.817871  399.899902  168167.320312  770735.397705    1.099854        1.050049     1.0    167667.370117         False          False   False
6  938903.817871  168167.370117  9555.666748  938903.817871    1.000000  168167.370117  770735.397705    1.050049        0.000000     2.0    167667.370117         False          False    True
7  938903.817871  168168.420166  9655.666748  938903.817871    1.000000  168168.420166  770735.397705    0.000000        0.000000     3.0    167667.370117         False          False    True
8  938904.817871  168168.469971  9655.666748  938904.817871    1.000000  168168.469971  770735.397705    0.950195      -99.000000     1.0    167667.370117         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=4301/4096.[0m
[08/15 16:10:47]  --------------------------------------------------------------------------------
[08/15 16:10:47]  Iteration: 91 (0 solution, 90 counterexamples)
[08/15 16:11:00]  Generator returned sat in 10.625957 secs.
[08/15 16:11:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:11:01]  Improved gap from 0.000625 to 48.4375
[08/15 16:11:02]  Improved number of small numbers from 76 to 114 out of a max of 114
[08/15 16:11:02]  Verifer returned sat in 1.114457 secs.
[08/15 16:11:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  938211.321045  167820.875488  9229.698486  938211.321045    0.002500  167820.875488  770337.748047  52.697510        0.002930     9.0    167820.875488            -1             -1     -1
1  938211.321045  167873.570312  9281.260742  938211.321045   52.697510  167873.570312  770337.748047   0.002686      -48.434814     9.0    167820.875488         False           True   True
2  938305.085693  167967.335449  9281.260986  938305.085693   93.767334  167967.335449  770337.748047   0.002197      -54.669922     1.0    167820.875488          True           True  False
3  938398.851074  168022.007812  9332.823242  938398.851074   93.767578  168022.007812  770337.748047  39.095215       -9.342285     1.0    167820.875488         False          False  False
4  938508.205811  168170.442627  9332.823242  938508.205811  148.449951  168170.442627  770337.750488   0.012695        0.010010     1.0    167820.875488         False          False  False
5  938508.205811  168170.445312  9384.385742  938508.205811    0.010000  168170.445312  770337.750488   0.010010      -48.427490     2.0    167820.875488         False          False   True
6  938609.750732  168218.882812  9431.268311  938609.750732  101.554932  168218.882812  770337.750488  53.117432        0.000000     1.0    167820.875488         False          False   True
7  938655.070801  168272.002686  9482.828369  938655.070801   98.437500  168272.002686  770337.750488  45.317627       -3.119873     1.0    167820.875488         False          False   True
8  938660.533203  168320.440312  9482.828613  938660.533203   50.780029  168320.440312  770337.750488   2.342402      -97.657227     1.0    167820.875488         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=41/4096.[0m
[08/15 16:11:02]  --------------------------------------------------------------------------------
[08/15 16:11:02]  Iteration: 92 (0 solution, 91 counterexamples)
[08/15 16:11:10]  Generator returned sat in 5.083201 secs.
[08/15 16:11:10]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
	else:
		c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:11:11]  Improved gap from 0.0 to 23.4375
[08/15 16:11:12]  Improved number of small numbers from 66 to 114 out of a max of 114
[08/15 16:11:12]  Verifer returned sat in 1.617160 secs.
[08/15 16:11:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  939311.320312  167820.875488  9282.393066  939311.320312    0.002686  167820.875488  771467.007324   23.437500       23.437500     2.0    167820.875488            -1             -1     -1
1  939311.320312  167820.875488  9358.955566  939311.320312   23.437256  167820.875488  771467.007324   23.437500        0.000000     2.0    167820.875488         False           True   True
2  939411.320801  167920.876221  9358.955566  939411.320801  123.437988  167920.876221  771467.007324   23.437256        0.000488     1.0    167820.875488         False           True  False
3  939511.321533  168044.312988  9358.955566  939511.321533  123.437988  168044.312988  771467.007324    0.001221        0.001221     1.0    167820.875488         False          False  False
4  939735.757812  168141.188477  9358.955566  939735.757812  224.437500  168141.188477  771591.443604    3.125732        0.001221     1.0    167820.875488         False          False  False
5  939735.757812  168144.312988  9435.518066  939735.757812    0.010000  168144.312988  771591.443604    0.001221      -23.436279     2.0    167820.875488         False          False   True
6  939960.193359  168267.740967  9435.518066  939960.193359  224.436768  168267.740967  771692.441650    0.010742        0.001221     1.0    168267.751709          True           True  False
7  939960.193359  168267.750488  9512.080566  939960.193359    0.010000  168267.750488  771692.441650    0.001221      -23.436279     2.0    168267.751709         False          False   True
8  940087.754150  168291.187988  9512.080566  940087.754150  127.562012  168291.187988  771696.564941  100.001221        0.001221     1.0    168267.751709         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=3, buffer=5/4096.[0m
[08/15 16:11:13]  --------------------------------------------------------------------------------
[08/15 16:11:13]  Iteration: 93 (0 solution, 92 counterexamples)
[08/15 16:11:31]  Generator returned sat in 15.197176 secs.
[08/15 16:11:31]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:11:32]  Improved gap from 9.1552734375e-05 to 23.4375
[08/15 16:11:33]  Improved number of small numbers from 39 to 67 out of a max of 114
[08/15 16:11:33]  Verifer returned sat in 2.223506 secs.
[08/15 16:11:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  939597.238604  167706.793213  9396.475142  939597.238604    0.000244  167706.793213  771467.007324  423.438066      423.437866     6.0    167706.793213            -1             -1     -1
1  939597.238604  167706.793457  9396.475142  939597.238604    0.000488  167706.793457  771467.007324  423.437822      323.437866     2.0    167706.793213         False          False   True
2  939597.238604  167806.793457  9396.475142  939597.238604    0.000488  167806.793457  771467.007324  323.437822      223.437866     3.0    167706.793213         False          False   True
3  939597.238604  167906.793413  9396.475142  939597.238604   14.082930  167906.793413  771467.007324  223.437866      123.437866     4.0    167706.793213         False          False   True
4  939597.238604  168103.669189  9396.475142  939597.238604    6.041465  168103.669189  771467.007324   26.562090       23.437866     5.0    167706.793213         False          False   True
5  939597.238604  168106.793701  9473.037275  939597.238604    2.020732  168106.793701  771467.007324   23.437578        0.000000     6.0    167706.793213         False          False   True
6  939597.238604  168130.231279  9549.599775  939597.238604    0.010366  168130.231279  771467.007324    0.000000      -23.437500     7.0    167706.793213         False          False   True
7  940044.114336  168153.668945  9549.599775  940044.114336  446.875732  168153.668945  771467.007690  423.437700      323.437866     1.0    168577.106646          True           True  False
8  940044.114336  168253.668945  9549.599775  940044.114336    1.000000  168253.668945  771467.007690  323.437700      223.437866     2.0    168577.106646         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=2649603/8192.[0m
[08/15 16:11:34]  --------------------------------------------------------------------------------
[08/15 16:11:34]  Iteration: 94 (0 solution, 93 counterexamples)
[08/15 16:11:45]  Generator returned sat in 8.512555 secs.
[08/15 16:11:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:11:46]  Improved gap from 0.0 to 23.4375
[08/15 16:11:46]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/15 16:11:46]  Verifer returned sat in 0.934302 secs.
[08/15 16:11:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  939820.046631  167506.683838  9496.584717  939820.046631  523.537354  167506.683838  772013.462891  299.899902      199.899902     5.0    167506.683838            -1             -1    True
1  940043.584229  167706.683838  9496.584717  940043.584229  523.437500  167706.683838  772013.462891  323.437500      323.437500     5.0    168030.121338         False          False    True
2  940043.584229  167806.683594  9496.584717  940043.584229  323.337402  167806.683594  772013.462891  223.437744      223.437500     2.0    168030.121338         False          False    True
3  940043.584229  167906.683838  9496.584717  940043.584229  107.450000  167906.683838  772013.462891  123.437500      123.437500     3.0    168030.121338         False          False    True
4  940043.584229  168004.658691  9496.584717  940043.584229   52.725000  168004.658691  772013.462891   25.462646       23.437500     4.0    168030.121338         False          False    True
5  940043.584229  168006.683838  9573.147217  940043.584229   25.362500  168006.683838  772013.462891   23.437500        0.000000     5.0    168030.121338         False          False    True
6  940043.584229  168030.121338  9646.885010  940043.584229   11.681250  168030.121338  772013.462891    0.000000      -26.262207     6.0    168030.121338         False          False    True
7  940168.021729  168056.383545  9648.709717  940168.021729  124.437500  168056.383545  772013.462891   98.175293        0.000000     1.0    168030.121338         False           True   False
8  940168.021729  168154.558838  9648.709961  940168.021729   52.724854  168154.558838  772013.462891    0.000000      -99.999756     2.0    168030.121338         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1325209/4096.[0m
[08/15 16:11:47]  --------------------------------------------------------------------------------
[08/15 16:11:47]  Iteration: 95 (0 solution, 94 counterexamples)
[08/15 16:12:00]  Generator returned sat in 10.557603 secs.
[08/15 16:12:00]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:12:02]  Improved gap from 0.0 to 15.625
[08/15 16:12:03]  Improved number of small numbers from 58 to 82 out of a max of 114
[08/15 16:12:03]  Verifer returned sat in 2.334213 secs.
[08/15 16:12:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  939522.266113  167308.802979  9497.594727  939522.266113  200.005000  167308.802979  772013.462891  200.000244      199.997728     4.0    167308.802979            -1             -1     -1
1  939522.268555  167308.805505  9497.594727  939522.268555  200.002686  167308.805505  772013.462891  200.000160      100.000169     4.0    167508.805664         False          False   True
2  939755.528395  167508.805420  9497.594727  939755.528395  433.260000  167508.805420  772013.462891  233.260085      233.260010     2.0    167508.805664         False          False   True
3  939755.528395  167508.805505  9497.594727  939755.528395    0.002686  167508.805505  772013.462891  233.260000      133.260010     3.0    167742.065505         False          False   True
4  939755.528395  167708.805420  9497.594727  939755.528395    1.000000  167708.805420  772013.462891   33.260085       33.260010     3.0    167742.065505         False          False   True
5  939755.528395  167726.440430  9564.334717  939755.528395    1.000000  167726.440430  772013.462891   15.625075        0.000000     4.0    167742.065505         False          False   True
6  939755.528395  167742.065505  9648.709717  939755.528395    1.000000  167742.065505  772013.462891    0.000000      -15.625000     5.0    167742.065505         False          False   True
7  940104.418395  167857.690430  9648.709717  940104.418395  348.890000  167857.690430  772013.465391  233.262575      233.262500     1.0    167742.065505         False           True  False
8  940104.418395  167857.692871  9648.709717  940104.418395    0.010000  167857.692871  772013.465391  233.260133      133.262500     2.0    167742.065505         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=18661/80.[0m
[08/15 16:12:03]  --------------------------------------------------------------------------------
[08/15 16:12:03]  Iteration: 96 (0 solution, 95 counterexamples)
[08/15 16:12:11]  Generator returned sat in 4.870873 secs.
[08/15 16:12:11]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:12:14]  Improved gap from 0.1 to 3.125
[08/15 16:12:15]  Improved number of small numbers from 35 to 43 out of a max of 114
[08/15 16:12:15]  Verifer returned sat in 3.846929 secs.
[08/15 16:12:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  939956.281982  167489.791060  9152.965820  939956.281982    0.100098  167489.791060  772453.826408  12.664514       12.664506     9.0    167489.791060            -1             -1     -1
1  939959.406913  167502.555505  9237.076383  939959.406913   15.789444  167502.555505  772453.826408   3.025000       -0.100000     1.0    167489.791060         False           True  False
2  939962.531913  167505.680505  9333.951383  939962.531913    6.150000  167505.680505  772453.826408   3.025000       -0.100000     1.0    167508.705505         False          False  False
3  939965.656913  167508.805505  9410.809814  939965.656913    6.150000  167508.805505  772453.826408   3.025000      -20.116569     1.0    167508.705505         False          False  False
4  939990.153580  167531.947171  9506.329834  939990.153580   27.521667  167531.947171  772453.826408   4.380000       -0.099883     1.0    167508.705505         False          False  False
5  940028.861080  167536.427171  9564.334717  940028.861080   43.087500  167536.427171  772453.826408  38.607500       -3.387500     1.0    167508.705505         False          False  False
6  940035.373580  167578.422171  9661.209717  940035.373580   45.120000  167578.422171  772453.826408   3.125000        0.000000     1.0    167508.705505         False          False  False
7  940135.673580  167680.847171  9661.209717  940135.673580  103.425000  167680.847171  772453.926408   0.900000        0.200000     1.0    167508.705505         False          False  False
8  940135.773580  167681.847168  9757.784668  940135.773580    1.000000  167681.847168  772453.926408   0.000003       -3.125049     1.0    167508.705505         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/5.[0m
[08/15 16:12:16]  --------------------------------------------------------------------------------
[08/15 16:12:16]  Iteration: 97 (0 solution, 96 counterexamples)
[08/15 16:12:30]  Generator returned sat in 10.906950 secs.
[08/15 16:12:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:12:32]  Improved gap from 0.0 to 0
[08/15 16:12:32]  Improved number of small numbers from 32 to 114 out of a max of 114
[08/15 16:12:32]  Verifer returned sat in 1.812505 secs.
[08/15 16:12:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  936913.630859  164577.909668  12064.847412  936913.630859  101.002500  164577.909668  772234.721436  100.999756      100.999756     2.0    164577.909668            -1             -1   False
1  936913.631104  164577.909912  12064.847412  936913.631104  101.000000  164577.909912  772234.721436  100.999756        1.000000     2.0    164678.909668         False          False   False
2  937012.628662  164777.904541  12064.847412  937012.628662  199.997314  164777.904541  772234.721436    0.002686       -0.002441     1.0    164678.909668         False          False   False
3  937113.631104  164777.909668  12064.847412  937113.631104  101.005127  164777.909668  772234.721436  101.000000        1.000000     1.0    164878.909668         False          False   False
4  937211.631104  164928.914795  12064.847412  937211.631104  199.000000  164928.914795  772234.721436   47.994873       -1.000000     1.0    164878.909668         False          False   False
5  937513.641113  165077.906982  12064.847412  937513.641113  350.004883  165077.906982  772434.728760    1.005371        1.002686     1.0    164878.909668         False          False   False
6  937513.641113  165077.909912  12163.844727  937513.641113    0.010000  165077.909912  772434.728760    1.002441        0.000000     2.0    164878.909668         False          False    True
7  937513.641113  165078.912354  12263.844727  937513.641113    1.000000  165078.912354  772434.728760    0.000000        0.000000     3.0    164878.909668         False          False    True
8  937514.641113  165078.912354  12362.844727  937514.641113    1.000000  165078.912354  772434.728760    1.000000        0.000000     3.0    164878.909668         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=4107/4096.[0m
[08/15 16:12:32]  --------------------------------------------------------------------------------
[08/15 16:12:32]  Iteration: 98 (0 solution, 97 counterexamples)
[08/15 16:12:42]  Generator returned sat in 6.892541 secs.
[08/15 16:12:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:12:45]  Improved gap from 0.0 to 35.9375
[08/15 16:12:45]  Improved number of small numbers from 74 to 114 out of a max of 114
[08/15 16:12:45]  Verifer returned sat in 2.287268 secs.
[08/15 16:12:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t   cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  938632.881104  166288.484619  12349.784912  938632.881104   1.862305  166288.484619  772234.721436  109.675049      101.662354     9.0    166288.484619            -1             -1     -1
1  938632.881104  166396.497314  12349.784912  938632.881104   1.762451  166396.497314  772234.721436    1.662354        1.662354     2.0    166398.159668         False           True  False
2  938632.981201  166396.497314  12413.847168  938632.981201   1.762451  166396.497314  772234.721436    1.762451      -34.175293     2.0    166398.159668         False          False  False
3  938714.163818  166443.604736  12466.739990  938714.163818  82.945068  166443.604736  772234.721436   35.837646       -0.099854     1.0    166398.159668         False          False  False
4  938755.886230  166479.542236  12525.117432  938755.886230  77.560059  166479.542236  772234.721436   41.622559        0.000000     1.0    166398.159668         False          False  False
5  938755.886230  166521.164795  12589.179932  938755.886230  41.522461  166521.164795  772234.721436    0.000000      -35.937500     2.0    166398.159668         False          False  False
6  938818.219971  166557.102295  12652.777588  938818.219971  62.333740  166557.102295  772234.721436   26.396240      -10.006104     1.0    166398.159668         False          False  False
7  938848.572510  166593.504639  12716.839844  938848.572510  56.748779  166593.504639  772234.721436   20.346436      -15.591309     1.0    166398.159668         False          False  False
8  938885.207275  166629.442383  12720.746094  938885.207275  56.981201  166629.442383  772234.721436   21.043457      -75.050293     1.0    166398.159668         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=7219/4096.[0m
[08/15 16:12:46]  --------------------------------------------------------------------------------
[08/15 16:12:46]  Iteration: 99 (0 solution, 98 counterexamples)
[08/15 16:13:02]  Generator returned sat in 12.901563 secs.
[08/15 16:13:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:13:04]  Improved gap from 0.000625 to 3.125
[08/15 16:13:05]  Improved number of small numbers from 55 to 64 out of a max of 114
[08/15 16:13:05]  Verifer returned sat in 3.058929 secs.
[08/15 16:13:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  938498.587402  166248.524903  12397.757080  938498.587402   15.345703  166248.524903  772234.721436  15.341064       15.340820     2.0    166248.524903            -1             -1   False
1  938498.589672  166258.658236  12482.413990  938498.589672   15.343333  166258.658236  772234.721436   5.210000        0.000000     2.0    166263.868236         False          False   False
2  938501.714672  166263.868236  12579.288990  938501.714672    8.335000  166263.868236  772234.721436   3.125000        0.000000     2.0    166266.993236         False          False   False
3  938501.714672  166266.993236  12676.163818  938501.714672    0.002500  166266.993236  772234.721436   0.000000       -3.125172     2.0    166266.993236         False          False   False
4  938528.417172  166290.573236  12752.583990  938528.417172   26.702500  166290.573236  772234.721436   3.122500       -0.002500     1.0    166266.993236         False          False   False
5  938572.167172  166293.698236  12808.836490  938572.167172   46.872500  166293.698236  772234.721436  43.747500        0.000000     1.0    166266.993236         False          False   False
6  938572.167172  166337.445736  12905.711490  938572.167172   43.745000  166337.445736  772234.721436   0.000000       -3.125000     2.0    166266.993236         False          False   False
7  938676.845922  166440.563477  12905.711490  938676.845922  104.678750  166440.563477  772236.270186   0.012260        0.005000     1.0    166266.993236         False          False   False
8  938676.845922  166440.570801  12905.711670  938676.845922    0.010000  166440.570801  772236.270186   0.004936      -99.994820     2.0    166266.993236         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1/200.[0m
[08/15 16:13:06]  --------------------------------------------------------------------------------
[08/15 16:13:06]  Iteration: 100 (0 solution, 99 counterexamples)
[08/15 16:13:16]  Generator returned sat in 7.578123 secs.
[08/15 16:13:16]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:13:18]  Improved gap from 0.0 to 23.4375
[08/15 16:13:19]  Improved number of small numbers from 46 to 71 out of a max of 114
[08/15 16:13:19]  Verifer returned sat in 2.291977 secs.
[08/15 16:13:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  935699.724609  163364.999486  15281.278809  935699.724609    0.002686  163364.999486  772234.721436  100.003687       99.999756     2.0    163364.999486            -1             -1     -1
1  935699.724609  163365.003418  15281.278990  935699.724609    0.001465  163365.003418  772234.721436   99.999756       -0.000063     3.0    163465.003174         False          False   True
2  935799.726074  163516.149486  15281.278990  935799.726074  200.001221  163516.149486  772234.721436   48.855152        0.001402     1.0    163465.003174         False           True  False
3  935799.726074  163565.003236  15281.278990  935799.726074    0.001465  163565.003236  772234.721436    0.001402      -99.998598     2.0    163565.004639         False          False  False
4  935999.728422  163765.003236  15281.278990  935999.728422  200.003750  163765.003236  772234.722686    0.002500        0.002500     1.0    163565.004639         False          False  False
5  935999.735922  163765.011986  15357.832740  935999.735922    0.010000  163765.011986  772234.722686    0.001250      -23.436250     1.0    163565.004639         False          False   True
6  936123.175922  163788.449707  15357.832740  936123.175922  123.441250  163788.449707  772234.723936  100.002279        0.002500     1.0    163565.004639         False          False   True
7  936123.175922  163888.449486  15434.395020  936123.175922    0.010000  163888.449486  772234.723936    0.002500      -23.435221     2.0    163565.004639         False          False   True
8  936183.906547  163911.887207  15497.099609  936183.906547   60.733125  163911.887207  772234.723936   37.295404       -0.000006     1.0    163565.004639         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=1/400.[0m
[08/15 16:13:19]  --------------------------------------------------------------------------------
[08/15 16:13:19]  Iteration: 101 (0 solution, 100 counterexamples)
[08/15 16:13:37]  Generator returned sat in 14.097182 secs.
[08/15 16:13:37]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:13:38]  Improved gap from 0.0 to 48.4375
[08/15 16:13:40]  Improved number of small numbers from 33 to 48 out of a max of 114
[08/15 16:13:40]  Verifer returned sat in 2.958451 secs.
[08/15 16:13:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  935701.228271  163317.555908  15228.726490  935701.228271    0.050049  163317.555908  772085.872686  297.799678      197.799850     9.0    163317.555908            -1             -1     -1
1  935701.228271  163517.555736  15228.726490  935701.228271  297.750000  163517.555736  772085.872686   97.799850       97.799850     2.0    163317.555908         False           True   True
2  935801.328422  163617.455736  15228.726490  935801.328422  197.900000  163617.455736  772085.922686   97.950000       97.850000     1.0    163715.405736          True           True  False
3  935901.278422  163717.555736  15228.726490  935901.278422  197.900000  163717.555736  772085.922686   97.800000       97.800000     1.0    163715.405736         False          False   True
4  935903.428422  163817.455736  15228.726490  935903.428422   99.950000  163817.455736  772085.922686    0.050000       -0.050000     1.0    163715.405736         False          False   True
5  935954.353422  163817.555908  15277.851490  935954.353422   50.975000  163817.555908  772085.922686   50.874828        0.000000     1.0    163715.405736         False          False   True
6  935954.353422  163868.430736  15329.413990  935954.353422   26.487500  163868.430736  772085.922686    0.000000      -48.437500     2.0    163715.405736         False          False   True
7  936044.034672  163916.868236  15378.876465  936044.034672   89.681250  163916.868236  772085.922686   41.243750       -9.293775     1.0    163958.111986          True           True  False
8  936098.337797  163967.405762  15378.876709  936098.337797   95.546875  163967.405762  772085.922686   45.009350      -54.990406     1.0    163958.111986         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=1957/20.[0m
[08/15 16:13:40]  --------------------------------------------------------------------------------
[08/15 16:13:40]  Iteration: 102 (0 solution, 101 counterexamples)
[08/15 16:14:05]  Generator returned sat in 21.692045 secs.
[08/15 16:14:05]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:14:06]  Improved gap from 0.0025 to 23.4375
[08/15 16:14:08]  Improved number of small numbers from 33 to 52 out of a max of 114
[08/15 16:14:08]  Verifer returned sat in 2.357476 secs.
[08/15 16:14:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  935820.621826  163320.530518  15225.751490  935820.621826    0.024902  163320.530518  772076.578832  423.512477      323.512502     6.0    163320.530518            -1             -1     -1
1  935820.621826  163520.530492  15225.751490  935820.621826  423.487549  163520.530492  772076.578832  223.512502      223.512502     6.0    163320.530518         False           True   True
2  936020.571824  163539.343018  15225.751490  936020.571824  423.462500  163539.343018  772076.603832  404.624975      323.437500     4.0    163943.967992          True           True  False
3  936020.571824  163720.530273  15225.751490  936020.571824  404.600000  163720.530273  772076.603832  223.437719      223.437500     4.0    163943.967992         False          False   True
4  936020.571824  163817.430492  15225.751490  936020.571824  201.300000  163817.430492  772076.603832  126.537500      123.437500     3.0    163943.967992         False          False   True
5  936020.571824  163895.117920  15225.751490  936020.571824   99.650000  163895.117920  772076.603832   48.850072       23.437500     4.0    163943.967992         False          False   True
6  936020.571824  163920.530492  15302.313990  936020.571824   48.825000  163920.530492  772076.603832   23.437500        0.000000     5.0    163943.967992         False          False   True
7  936020.571824  163943.967992  15378.876465  936020.571824   23.412500  163943.967992  772076.603832    0.000000      -23.437525     6.0    163943.967992         False          False   True
8  936157.815574  163967.405518  15378.876465  936157.815574  137.243750  163967.405518  772076.603832  113.806225       13.806225     1.0    163943.967992         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5175/16.[0m
[08/15 16:14:08]  --------------------------------------------------------------------------------
[08/15 16:14:08]  Iteration: 103 (0 solution, 102 counterexamples)
[08/15 16:14:24]  Generator returned sat in 12.775974 secs.
[08/15 16:14:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:14:25]  Improved gap from 0.0008333333333333334 to 23.4375
[08/15 16:14:26]  Improved number of small numbers from 41 to 114 out of a max of 114
[08/15 16:14:26]  Verifer returned sat in 0.950915 secs.
[08/15 16:14:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  932295.124756  163470.031738  15225.751465  932295.124756    0.002500  163470.031738  768725.095459   99.997559       99.997559     9.0    163470.031738            -1             -1     -1
1  932518.562256  163570.031738  15225.751465  932518.562256  323.435059  163570.031738  768725.095459  223.435059      223.435059     1.0    163470.031738         False           True  False
2  932618.567139  163670.031738  15225.751465  932618.567139  323.439941  163670.031738  768725.097900  223.437500      223.437500     2.0    163470.031738         False          False  False
3  932618.567139  163720.530518  15225.751465  932618.567139   14.060000  163720.530518  768725.097900  172.938721      123.437500     3.0    163893.469238         False          False   True
4  932618.567139  163870.029297  15225.751465  932618.567139    6.030000  163870.029297  768725.097900   23.439941       23.437500     3.0    163893.469238         False          False   True
5  932618.567139  163870.031738  15302.313965  932618.567139    2.015000  163870.031738  768725.097900   23.437500        0.000000     4.0    163893.469238         False          False   True
6  932618.567139  163893.469238  15378.876221  932618.567139    0.010000  163893.469238  768725.097900    0.000000      -23.437744     5.0    163893.469238         False          False   True
7  932965.444580  163916.906982  15378.876221  932965.444580  346.877441  163916.906982  768725.100098  323.437500      223.437500     1.0    163893.469238         False           True  False
8  932965.444580  164016.906982  15378.876221  932965.444580    1.000000  164016.906982  768725.100098  223.437500      123.437500     2.0    163893.469238         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3575/16.[0m
[08/15 16:14:26]  --------------------------------------------------------------------------------
[08/15 16:14:26]  Iteration: 104 (0 solution, 103 counterexamples)
[08/15 16:14:57]  Generator returned sat in 27.614930 secs.
[08/15 16:14:57]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:14:58]  Improved gap from 0.0 to 48.4375
[08/15 16:14:58]  Improved number of small numbers from 36 to 114 out of a max of 114
[08/15 16:14:58]  Verifer returned sat in 1.109907 secs.
[08/15 16:14:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  932129.695801  163158.214600  15176.242188  932129.695801    0.002686  163158.214600  768725.095459  246.385742      150.517334     5.0    163158.214600            -1             -1     -1
1  932129.698486  163304.619629  15176.242188  932129.698486  246.388428  163304.619629  768725.098145   99.980713       50.517334     3.0    163158.214600         False           True  False
2  932129.700928  163404.600342  15177.287109  932129.700928   99.983154  163404.600342  768725.098145    0.002441      -48.435303     4.0    163404.602783         False          False   True
3  932229.681641  163456.145996  15225.741699  932229.681641   99.983154  163456.145996  768725.098145   48.437500        0.000000     1.0    163404.602783         False           True  False
4  932380.201416  163604.581055  15225.741699  932380.201416  198.957275  163604.581055  768725.100586   50.519775       50.517334     1.0    163404.602783         False          False  False
5  932380.201416  163604.583740  15275.224121  932380.201416    0.010000  163604.583740  768725.100586   50.517090       -0.000244     2.0    163404.602783         False          False   True
6  932429.676025  163655.101074  15325.749756  932429.676025   99.991699  163655.101074  768725.100586   49.474365        0.000000     1.0    163404.602783         False          False   True
7  932479.679199  163704.577637  15375.746582  932479.679199   99.477539  163704.577637  768725.100586   50.000977        0.000000     1.0    163404.602783         False          False   True
8  932479.679199  163754.578613  15375.746582  932479.679199   49.998291  163754.578613  768725.100586    0.000000     -100.000000     2.0    163404.602783         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=206919/4096.[0m
[08/15 16:14:59]  --------------------------------------------------------------------------------
[08/15 16:14:59]  Iteration: 105 (0 solution, 104 counterexamples)
[08/15 16:15:25]  Generator returned sat in 22.371984 secs.
[08/15 16:15:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:15:26]  Improved gap from 0.0 to 23.4375
[08/15 16:15:26]  Improved number of small numbers from 67 to 114 out of a max of 114
[08/15 16:15:26]  Verifer returned sat in 1.521725 secs.
[08/15 16:15:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  931611.116699  162786.068604  15172.624756  931611.116699    0.050049  162786.068604  768725.097900   99.950195       99.950195     4.0    162786.068604            -1             -1    True
1  931934.604004  162886.068604  15172.624756  931934.604004  423.437500  162886.068604  768725.097900  323.437500      323.437500     1.0    162786.068604         False          False    True
2  931934.604004  162986.068359  15172.624756  931934.604004  111.899902  162986.068359  768725.097900  223.437744      223.437500     2.0    163209.506104         False          False    True
3  931934.604004  162986.518555  15172.624756  931934.604004  111.850000  162986.518555  768725.097900  222.987549      123.437500     3.0    163209.506104         False          False    True
4  931934.604004  163182.993652  15172.624756  931934.604004   54.925000  163182.993652  768725.097900   26.512451       23.437500     4.0    163209.506104         False          False    True
5  931934.604004  163186.068604  15249.187256  931934.604004   26.462500  163186.068604  768725.097900   23.437500        0.000000     5.0    163209.506104         False          False    True
6  931934.604004  163209.506104  15325.749756  931934.604004   12.231250  163209.506104  768725.097900    0.000000      -23.437500     6.0    163209.506104         False          False    True
7  932381.579102  163232.943604  15325.749756  932381.579102  446.975098  163232.943604  768725.147949  423.487549      323.487549     1.0    163209.506104         False           True   False
8  932381.579102  163332.943604  15325.749756  932381.579102    1.000000  163332.943604  768725.147949  323.487549      223.487549     2.0    163209.506104         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=1325005/4096.[0m
[08/15 16:15:27]  --------------------------------------------------------------------------------
[08/15 16:15:27]  Iteration: 106 (0 solution, 105 counterexamples)
[08/15 16:15:40]  Generator returned sat in 9.386563 secs.
[08/15 16:15:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:15:43]  Improved gap from 0.0 to 23.4375
[08/15 16:15:43]  Improved number of small numbers from 67 to 78 out of a max of 114
[08/15 16:15:43]  Verifer returned sat in 3.159911 secs.
[08/15 16:15:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  930983.375000  162058.326937  15172.624756  930983.375000    0.050049  162058.326937  768725.0979  199.950163      199.950163     3.0    162058.326937            -1             -1     -1
1  931306.862337  162058.326937  15172.624756  931306.862337  523.437500  162058.326937  768725.0979  523.437500      423.437500     3.0    162058.326937         False          False   True
2  931306.862337  162258.326904  15172.624756  931306.862337  523.437500  162258.326904  768725.0979  323.437533      323.437500     2.0    162058.326937         False          False   True
3  931306.862337  162358.326904  15172.624756  931306.862337  261.333333  162358.326904  768725.0979  223.437533      223.437500     3.0    162581.764437         False          False   True
4  931306.862337  162458.326937  15172.624756  931306.862337  129.666667  162458.326937  768725.0979  123.437500      123.437500     4.0    162581.764437         False          False   True
5  931306.862337  162550.797607  15172.624756  931306.862337   63.833333  162550.797607  768725.0979   30.966829       23.437500     5.0    162581.764437         False          False   True
6  931306.862337  162558.326937  15249.187256  931306.862337   30.916667  162558.326937  768725.0979   23.437500        0.000000     6.0    162581.764437         False          False   True
7  931306.862337  162581.764437  15325.749756  931306.862337   14.458333  162581.764437  768725.0979    0.000000      -23.437500     7.0    162581.764437         False          False   True
8  931436.529004  162605.202148  15325.749756  931436.529004  129.666667  162605.202148  768725.0979  106.228955        6.229167     1.0    162581.764437         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=433651/1024.[0m
[08/15 16:15:44]  --------------------------------------------------------------------------------
[08/15 16:15:44]  Iteration: 107 (0 solution, 106 counterexamples)
[08/15 16:15:59]  Generator returned sat in 11.217011 secs.
[08/15 16:15:59]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:16:01]  Improved gap from 0.0 to 23.4375
[08/15 16:16:03]  Improved number of small numbers from 36 to 48 out of a max of 114
[08/15 16:16:03]  Verifer returned sat in 3.647198 secs.
[08/15 16:16:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  929915.078369  160790.030270  14405.741423  929915.078369    0.050049  160790.030270  768725.0979  399.950199      299.950199     8.0     160790.03027            -1             -1     -1
1  930138.615671  160990.030029  14405.741423  930138.615671  623.487500  160990.030029  768725.1479  423.437741      423.437500     3.0     160790.03027         False           True   True
2  930138.615671  160990.030273  14405.741423  930138.615671  404.200195  160990.030273  768725.1479  423.437497      323.437500     3.0     161413.46777         False          False   True
3  930138.615671  161190.030029  14405.741423  930138.615671  404.200000  161190.030029  768725.1479  223.437741      223.437500     3.0     161413.46777         False          False   True
4  930138.615671  161290.030270  14405.741423  930138.615671  201.100000  161290.030270  768725.1479  123.437500      123.437500     4.0     161413.46777         False          False   True
5  930138.615671  161364.642578  14405.741423  930138.615671   99.550000  161364.642578  768725.1479   48.825192       23.437500     5.0     161413.46777         False          False   True
6  930138.615671  161390.030270  14482.303923  930138.615671   48.775000  161390.030270  768725.1479   23.437500        0.000000     6.0     161413.46777         False          False   True
7  930138.615671  161413.467770  14558.866423  930138.615671   23.387500  161413.467770  768725.1479    0.000000      -23.437500     7.0     161413.46777         False          False   True
8  930334.465671  161436.905273  14558.866423  930334.465671  195.850000  161436.905273  768725.1479  172.412497       72.412500     1.0     161413.46777         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=6775/16.[0m
[08/15 16:16:03]  --------------------------------------------------------------------------------
[08/15 16:16:03]  Iteration: 108 (0 solution, 107 counterexamples)
[08/15 16:16:13]  Generator returned sat in 6.591480 secs.
[08/15 16:16:14]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:16:15]  Improved gap from 0.0 to 23.4375
[08/15 16:16:15]  Improved number of small numbers from 32 to 114 out of a max of 114
[08/15 16:16:15]  Verifer returned sat in 1.717402 secs.
[08/15 16:16:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  929768.300781  160866.592773  14329.178711  929768.300781    0.002686  160866.592773  768725.147949  176.560059       76.560059     3.0    160866.592773            -1             -1     -1
1  929791.740723  161043.155273  14329.178711  929791.740723  200.000000  161043.155273  768725.147949   23.437500        0.000000     1.0    160866.592773         False          False   True
2  930115.178223  161066.595215  14329.178711  930115.178223  346.875000  161066.595215  768725.147949  323.435059      223.437500     1.0    160866.592773         False          False   True
3  930115.178223  161216.590332  14329.178711  930115.178223    6.029785  161216.590332  768725.147949  173.439941      123.437500     2.0    161390.030273         False          False   True
4  930115.178223  161366.590332  14329.178711  930115.178223    2.014893  161366.590332  768725.147949   23.439941       23.437500     3.0    161390.030273         False          False   True
5  930115.178223  161366.592773  14405.741211  930115.178223    0.010000  161366.592773  768725.147949   23.437500        0.000000     4.0    161390.030273         False          False   True
6  930115.178223  161390.030273  14482.303711  930115.178223    0.010000  161390.030273  768725.147949    0.000000      -23.437500     5.0    161390.030273         False          False   True
7  930462.058105  161413.467773  14482.303711  930462.058105  346.879883  161413.467773  768725.150391  323.439941      223.439941     1.0    161390.030273         False           True  False
8  930462.058105  161516.587646  14482.303711  930462.058105    1.000000  161516.587646  768725.150391  220.320068      123.439941     2.0    161390.030273         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=457605/2048.[0m
[08/15 16:16:16]  --------------------------------------------------------------------------------
[08/15 16:16:16]  Iteration: 109 (0 solution, 108 counterexamples)
[08/15 16:16:43]  Generator returned sat in 22.998238 secs.
[08/15 16:16:43]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:16:45]  Improved gap from 0.1 to 48.4375
[08/15 16:16:45]  Improved number of small numbers from 59 to 114 out of a max of 114
[08/15 16:16:45]  Verifer returned sat in 2.437163 secs.
[08/15 16:16:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  932717.818115  163544.232666  11751.538574  932717.818115    0.049805  163544.232666  768725.147705  448.437744      448.437500     6.0    163544.232666            -1             -1     -1
1  932717.818115  163544.232910  11751.538574  932717.818115    0.050000  163544.232910  768725.147705  448.437500      348.437500     3.0    163544.232666         False          False   True
2  932717.818115  163744.232666  11751.538574  932717.818115    0.050000  163744.232666  768725.147705  248.437744      248.437500     3.0    163544.232666         False          False   True
3  932717.818115  163844.232910  11751.538574  932717.818115  193.750000  163844.232910  768725.147705  148.437500      148.437500     4.0    163544.232666         False          False   True
4  932717.818115  163944.182617  11751.538574  932717.818115   96.875000  163944.182617  768725.147705   48.487793       48.437500     5.0    163544.232666         False          False   True
5  932717.818115  163944.232910  11803.101074  932717.818115   48.437500  163944.232910  768725.147705   48.437500        0.000000     6.0    163544.232666         False          False   True
6  932717.818115  163992.670410  11854.663574  932717.818115   24.218750  163992.670410  768725.147705    0.000000      -48.437500     7.0    163544.232666         False          False   True
7  932803.146240  164041.107910  11901.638672  932803.146240   85.328125  164041.107910  768725.147705   36.890625      -16.134277     1.0    164077.998535          True           True  False
8  932856.382324  164094.132812  11901.638672  932856.382324   90.126709  164094.132812  768725.147705   37.101807      -62.898193     1.0    164077.998535         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=5575/16.[0m
[08/15 16:16:46]  --------------------------------------------------------------------------------
[08/15 16:16:46]  Iteration: 110 (0 solution, 109 counterexamples)
[08/15 16:17:24]  Generator returned sat in 34.879197 secs.
[08/15 16:17:25]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:17:29]  Improved gap from 0.0003333333333333333 to 1.5625
[08/15 16:17:29]  Improved number of small numbers from 33 to 114 out of a max of 114
[08/15 16:17:29]  Verifer returned sat in 4.521898 secs.
[08/15 16:17:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  929978.229980  163755.282471  11540.489014  929978.229980    3.585205  163755.282471  766222.847900    0.099609        0.099609     2.0    163755.282471            -1             -1   False
1  929981.615723  163755.582520  11636.903809  929981.615723    3.485352  163755.582520  766222.847900    3.185303       -0.099854     1.0    163758.767822         False          False   False
2  929981.815674  163758.867676  11735.341064  929981.815674    3.385254  163758.867676  766222.847900    0.100098       -1.462646     1.0    163758.967773         False          False   False
3  930015.728271  163760.430420  11802.891113  930015.728271   34.012695  163760.430420  766222.847900   32.449951        0.000000     1.0    163758.967773         False          False   False
4  930015.728271  163792.880371  11901.328369  930015.728271   21.154297  163792.880371  766222.847900    0.000000       -1.562744     2.0    163758.967773         False          False   False
5  930062.603271  163839.655273  11954.553467  930062.603271   46.875000  163839.655273  766222.847900    0.100098       -1.462646     1.0    163758.967773         False          False   False
6  930165.728271  163841.218018  11954.553467  930165.728271  103.225098  163841.218018  766222.947754  101.562500        1.562500     1.0    163758.967773         False          False   False
7  930165.728271  163941.218018  12052.990967  930165.728271    1.000000  163941.218018  766222.947754    1.562500        0.000000     2.0    163758.967773         False          False    True
8  930165.728271  163942.780518  12052.991211  930165.728271    1.000000  163942.780518  766222.947754    0.000000      -99.999756     3.0    163758.967773         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25/16.[0m
[08/15 16:17:30]  --------------------------------------------------------------------------------
[08/15 16:17:30]  Iteration: 111 (0 solution, 110 counterexamples)
[08/15 16:17:45]  Generator returned sat in 11.473324 secs.
[08/15 16:17:45]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:17:51]  Improved gap from 0.5052734375 to 1.5625
[08/15 16:17:52]  Improved number of small numbers from 41 to 45 out of a max of 114
[08/15 16:17:52]  Verifer returned sat in 7.199703 secs.
[08/15 16:17:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  929570.041260  163731.227789  11560.303467  929570.041260    0.010417  163731.227789  765814.120737  24.692733       24.692733     5.0    163731.227789            -1             -1   False
1  929571.603735  163755.930914  11634.037842  929571.603735   26.255208  163755.930914  765814.120737   1.552083       -0.010417     1.0    163731.227789         False          False   False
2  929571.634985  163757.493414  11732.475342  929571.634985    1.583333  163757.493414  765814.120737   0.020833       -1.541667     1.0    163757.514248         False          False   False
3  929573.187068  163759.055914  11830.912598  929573.187068    1.572917  163759.055914  765814.120737   0.010417       -1.552327     1.0    163759.066331         False          False   False
4  929602.791235  163788.550706  11856.115967  929602.791235   29.614583  163788.550706  765814.120737   0.119792      -46.744792     1.0    163759.066331         False          False   False
5  929651.098526  163835.415289  11954.553467  929651.098526   48.427083  163835.415289  765814.120737   1.562500        0.000000     1.0    163759.066331         False          False   False
6  929752.671443  163936.967285  11954.553467  929752.671443  103.135417  163936.967285  765814.131154   1.573004        1.562500     1.0    163759.066331         False          False   False
7  929752.671443  163936.977789  12052.990967  929752.671443    1.000000  163936.977789  765814.131154   1.562500        0.000000     2.0    163759.066331         False          False    True
8  929752.671443  163938.540289  12151.428223  929752.671443    1.000000  163938.540289  765814.131154   0.000000       -1.562744     3.0    163759.066331         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=False, total_losses=1, buffer=25/16.[0m
[08/15 16:17:53]  --------------------------------------------------------------------------------
[08/15 16:17:53]  Iteration: 112 (0 solution, 111 counterexamples)
[08/15 16:18:05]  Generator returned sat in 8.780319 secs.
[08/15 16:18:06]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:18:08]  Improved gap from 0.1 to 31.25
[08/15 16:18:09]  Improved number of small numbers from 32 to 114 out of a max of 114
[08/15 16:18:09]  Verifer returned sat in 2.976804 secs.
[08/15 16:18:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  929459.943604  163546.072998  11683.808350  929459.943604  162.749756  163546.072998  765814.020752  99.849854       38.199951     4.0    163546.072998            -1             -1     -1
1  929522.793701  163645.973145  11683.808350  929522.793701  162.699951  163645.973145  765814.070801  62.749756        1.000000     1.0    163708.722900         False           True  False
2  929622.743896  163807.673096  11683.808350  929622.743896  162.699951  163807.673096  765814.070801   1.000000        0.950195     1.0    163708.722900         False          False   True
3  929622.743896  163807.722900  11752.558350  929622.743896    0.950195  163807.722900  765814.070801   0.950195      -30.299805     2.0    163808.673096         False          False   True
4  929754.093750  163938.923096  11752.558350  929754.093750  132.300049  163938.923096  765814.120850   1.049805        1.000000     1.0    163808.673096         False           True  False
5  929754.093750  163938.972900  11821.308350  929754.093750    1.000000  163938.972900  765814.120850   1.000000      -30.250000     2.0    163808.673096         False          False   True
6  929820.243652  163970.222900  11833.908447  929820.243652   67.149902  163970.222900  765814.120850  35.899902      -51.500000     1.0    164006.122803          True           True  False
7  929900.168701  164057.623047  11902.658203  929900.168701  115.824951  164057.623047  765814.120850  28.424805       -2.825195     1.0    164006.122803         False          False  False
8  929990.006348  164088.873047  11902.658447  929990.006348  118.262451  164088.873047  765814.120850  87.012451      -12.987305     1.0    164006.122803         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=1.[0m
[08/15 16:18:09]  --------------------------------------------------------------------------------
[08/15 16:18:09]  Iteration: 113 (0 solution, 112 counterexamples)
[08/15 16:18:31]  Generator returned sat in 18.459068 secs.
[08/15 16:18:32]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:18:40]  Improved gap from 0.0 to 0
[08/15 16:18:40]  Improved number of small numbers from 63 to 114 out of a max of 114
[08/15 16:18:40]  Verifer returned sat in 8.225896 secs.
[08/15 16:18:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  929720.118896  163706.047852  11585.433105  929720.118896    0.050049  163706.047852  765814.070801  200.000244      199.949951     2.0    163706.047852            -1             -1   False
1  929720.118896  163706.098145  11585.433105  929720.118896  199.999756  163706.098145  765814.070801  199.949951       99.949951     2.0    163706.047852         False          False   False
2  929720.168945  163806.098145  11585.433105  929720.168945  200.000000  163806.098145  765814.070801  100.000000        0.000000     3.0    163706.047852         False          False   False
3  929920.118896  163940.164795  11585.433105  929920.118896  299.949951  163940.164795  765814.070801  165.883301       99.949951     1.0    163706.047852         False          False   False
4  930021.269043  164106.098145  11585.433105  930021.269043  267.033447  164106.098145  765814.120850  101.050049      101.050049     1.0    163706.047852         False          False   False
5  930021.269043  164106.148193  11585.433105  930021.269043    1.000000  164106.148193  765814.120850  101.000000        1.050049     2.0    163706.047852         False          False    True
6  930021.269043  164206.098145  11684.383057  930021.269043    1.000000  164206.098145  765814.120850    1.050049        0.000000     3.0    163706.047852         False          False    True
7  930021.269043  164207.148193  11784.383057  930021.269043    1.000000  164207.148193  765814.120850    0.000000        0.000000     4.0    163706.047852         False          False    True
8  930022.269043  164207.197998  11784.383301  930022.269043    1.000000  164207.197998  765814.120850    0.950195      -98.999756     1.0    163706.047852         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=413901/4096.[0m
[08/15 16:18:41]  --------------------------------------------------------------------------------
[08/15 16:18:41]  Iteration: 114 (0 solution, 113 counterexamples)
[08/15 16:19:00]  Generator returned sat in 16.082446 secs.
[08/15 16:19:01]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:19:09]  Improved gap from 0.00125 to 1.5625
[08/15 16:19:11]  Improved number of small numbers from 59 to 70 out of a max of 114
[08/15 16:19:11]  Verifer returned sat in 10.179657 secs.
[08/15 16:19:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t  cwnd_0,t    service_0,t      losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  930222.461182  164400.212433  11305.107178  930222.461182  3.161377  164400.212433  765814.070801  8.177948        8.177715     9.0    164400.212433            -1             -1     -1
1  930222.461182  164406.864516  11396.892828  930222.461182  3.125000  164406.864516  765814.070801  1.525865       -0.036635     2.0    164408.390381         False           True  False
2  930224.023859  164408.427016  11495.330328  930224.023859  3.088542  164408.427016  765814.070801  1.526042       -0.036458     1.0    164409.953058         False          False  False
3  930225.549900  164409.989516  11593.767822  930225.549900  3.052083  164409.989516  765814.070801  1.489583       -0.072922     1.0    164411.479099         False          False  False
4  930229.474900  164413.797849  11689.915527  930229.474900  5.414583  164413.797849  765814.070801  1.606250       -0.000217     1.0    164411.479099         False          False  False
5  930233.042609  164415.440558  11786.311768  930233.042609  5.173958  164415.440558  765814.070801  3.531250       -0.036268     1.0    164411.479099         False          False  False
6  930234.605109  164419.008266  11884.749078  930234.605109  5.093750  164419.008266  765814.070801  1.526042       -0.036458     1.0    164411.479099         False          False  False
7  930239.135317  164420.570766  11979.334717  930239.135317  6.056250  164420.570766  765814.070801  4.493750       -0.920611     1.0    164411.479099         False          False  False
8  930240.056150  164425.985349  12077.771973  930240.056150  5.414583  164425.985349  765814.070801  0.000000       -1.562522     1.0    164411.479099         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=299/4096.[0m
[08/15 16:19:11]  --------------------------------------------------------------------------------
[08/15 16:19:11]  Iteration: 115 (0 solution, 114 counterexamples)
[08/15 16:19:47]  Generator returned sat in 31.770755 secs.
[08/15 16:19:47]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:19:49]  Improved gap from 0.0008333333333333334 to 23.4375
[08/15 16:19:51]  Improved number of small numbers from 32 to 46 out of a max of 114
[08/15 16:19:51]  Verifer returned sat in 3.341859 secs.
[08/15 16:19:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  930693.570557  163306.199516  12399.020328  930693.570557  431.549805  163306.199516  767087.370850  300.000191      299.900191     2.0    163306.199516            -1             -1     -1
1  930825.020317  163306.299516  12399.020328  930825.020317  431.449951  163306.299516  767092.158301  426.562500      326.562500     2.0    163732.862016         False          False   True
2  930924.920317  163406.299561  12399.020328  930924.920317  526.462500  163406.299561  767092.158301  426.462456      326.462500     3.0    163732.862016         False          False   True
3  930924.920317  163606.299316  12399.020328  930924.920317  426.362500  163606.299316  767092.158301  226.462700      226.462500     3.0    163832.762016         False          False   True
4  930924.920317  163706.299516  12399.020328  930924.920317  212.181250  163706.299516  767092.158301  126.462500      126.462500     4.0    163832.762016         False          False   True
5  930924.920317  163781.216553  12399.020328  930924.920317  105.090625  163781.216553  767092.158301   51.545463       26.462500     4.0    163832.762016         False          False   True
6  930924.920317  163809.324516  12472.557828  930924.920317   51.545313  163809.324516  767092.158301   23.437500        0.000000     5.0    163832.762016         False          False   True
7  930926.255473  163832.762016  12549.120328  930926.255473   24.772656  163832.762016  767092.158301    1.335156      -22.102344     6.0    163832.762016         False          False   True
8  931127.000395  163856.199707  12549.120328  931127.000395  202.080078  163856.199707  767092.158301  178.642387       78.642578     1.0    163832.762016         False           True  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=0, buffer=5225/16.[0m
[08/15 16:19:51]  --------------------------------------------------------------------------------
[08/15 16:19:51]  Iteration: 116 (0 solution, 115 counterexamples)
[08/15 16:20:07]  Generator returned sat in 12.131562 secs.
[08/15 16:20:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:20:09]  Improved gap from 0.0 to 23.4375
[08/15 16:20:10]  Improved number of small numbers from 46 to 63 out of a max of 114
[08/15 16:20:10]  Verifer returned sat in 2.739659 secs.
[08/15 16:20:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  930601.482666  163414.111845  12291.207999  930601.482666    0.000244  163414.111845  767087.370850   99.999971       99.999971     2.0    163414.111845            -1             -1     -1
1  930924.920317  163514.111816  12291.207999  930924.920317  423.437622  163514.111816  767087.370850  323.437651      323.437622     2.0    163414.111845         False          False   True
2  930924.920317  163614.111816  12291.207999  930924.920317    4.000244  163614.111816  767087.370850  223.437651      223.437622     2.0    163837.549467         False          False   True
3  930924.920317  163614.111845  12291.207999  930924.920317    4.000000  163614.111845  767087.370850  223.437622      123.437622     3.0    163837.549467         False          False   True
4  930924.920317  163814.111816  12291.207999  930924.920317    1.000000  163814.111816  767087.370850   23.437651       23.437622     4.0    163837.549467         False          False   True
5  930924.920317  163814.111967  12367.770377  930924.920317    0.010000  163814.111967  767087.370850   23.437500        0.000000     5.0    163837.549467         False          False   True
6  930924.920317  163837.549467  12444.332877  930924.920317    0.010000  163837.549467  767087.370850    0.000000      -23.437500     6.0    163837.549467         False          False   True
7  931371.795561  163960.986816  12444.332877  931371.795561  446.875244  163960.986816  767087.370911  323.437834      323.437683     1.0    163837.549467         False           True  False
8  931371.795561  163964.111572  12444.332877  931371.795561    1.000000  163964.111572  767087.370911  320.313078      223.437683     2.0    163837.549467         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=False, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=5299203/16384.[0m
[08/15 16:20:11]  --------------------------------------------------------------------------------
[08/15 16:20:11]  Iteration: 117 (0 solution, 116 counterexamples)
[08/15 16:20:40]  Generator returned sat in 25.510346 secs.
[08/15 16:20:40]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:20:44]  Improved gap from 0.0 to 25.0
[08/15 16:20:44]  Improved number of small numbers from 60 to 114 out of a max of 114
[08/15 16:20:44]  Verifer returned sat in 3.953582 secs.
[08/15 16:20:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  932956.369385  165743.998535   9961.321533  932956.369385    0.200000  165743.998535  767087.37085  125.000000      125.000000     2.0    165743.998535            -1             -1   False
1  932956.369385  165743.998779   9961.321533  932956.369385    0.200195  165743.998779  767087.37085  124.999756       25.000000     2.0    165743.998535         False          False   False
2  932956.369385  165843.998535  10036.321533  932956.369385    0.100098  165843.998535  767087.37085   25.000000        0.000000     3.0    165868.998535         False          False   False
3  933056.469482  165968.998535  10036.321533  933056.469482  125.100098  165968.998535  767087.37085    0.100098        0.100098     1.0    165868.998535         False           True   False
4  933280.369385  166068.898926  10036.321533  933280.369385  224.000000  166068.898926  767186.37085   25.099609       25.000000     1.0    165868.998535         False          False   False
5  933280.369385  166068.998535  10111.321533  933280.369385    1.000000  166068.998535  767186.37085   25.000000        0.000000     2.0    165868.998535         False          False    True
6  933367.869385  166093.998535  10123.821289  933367.869385  112.500000  166093.998535  767186.37085   87.500000       -0.000244     3.0    165868.998535         False          False    True
7  933404.369385  166181.598877  10186.521240  933404.369385  124.000000  166181.598877  767186.37085   36.399658       -0.800293     1.0    166217.998535          True           True   False
8  933479.669678  166218.798828  10186.521484  933479.669678  111.699951  166218.798828  767186.37085   74.500000      -25.499756     1.0    166217.998535         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=25.[0m
[08/15 16:20:45]  --------------------------------------------------------------------------------
[08/15 16:20:45]  Iteration: 118 (0 solution, 117 counterexamples)
[08/15 16:21:02]  Generator returned sat in 13.315650 secs.
[08/15 16:21:02]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][4]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:21:07]  Improved gap from 0.0 to 23.4375
[08/15 16:21:08]  Improved number of small numbers from 90 to 103 out of a max of 114
[08/15 16:21:08]  Verifer returned sat in 5.127334 secs.
[08/15 16:21:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  932956.927002  165568.998535  10036.321533  932956.927002    0.002686  165568.998535  767187.930908  199.997559       99.997559     3.0    165568.998535            -1             -1   False
1  932956.931885  165768.998291  10036.321533  932956.931885  200.002441  165768.998291  767187.930908    0.002686        0.002441     1.0    165568.998535         False          False   False
2  933280.369385  165868.998291  10036.321533  933280.369385  323.440186  165868.998291  767187.933350  223.437744      223.437500     1.0    165568.998535         False          False   False
3  933280.369385  165918.499785  10036.321533  933280.369385    6.030000  165918.499785  767187.933350  173.936250      123.437500     2.0    166092.436035         False          False    True
4  933280.369385  166068.995850  10036.321533  933280.369385    2.015000  166068.995850  767187.933350   23.440186       23.437500     3.0    166092.436035         False          False    True
5  933280.369385  166068.998535  10112.884033  933280.369385    0.010000  166068.998535  767187.933350   23.437500        0.000000     4.0    166092.436035         False          False    True
6  933280.369385  166092.436035  10189.446533  933280.369385    0.010000  166092.436035  767187.933350    0.000000      -23.437500     5.0    166092.436035         False          False    True
7  933627.246885  166215.873535  10189.446533  933627.246885  346.877500  166215.873535  767187.935850  223.437500      223.437500     1.0    166092.436035         False           True   False
8  933627.246885  166215.876221  10189.446533  933627.246885    1.000000  166215.876221  767187.935850  223.434814      123.437500     2.0    166092.436035         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=3575/16.[0m
[08/15 16:21:08]  --------------------------------------------------------------------------------
[08/15 16:21:08]  Iteration: 119 (0 solution, 118 counterexamples)
[08/15 16:21:30]  Generator returned sat in 17.963701 secs.
[08/15 16:21:30]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][6]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:21:34]  Improved gap from 0.0 to 23.4375
[08/15 16:21:34]  Improved number of small numbers from 57 to 64 out of a max of 114
[08/15 16:21:34]  Verifer returned sat in 4.369756 secs.
[08/15 16:21:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  933156.931885  165544.567227  10036.321533  933156.931885    0.001465  165544.567227  767187.930908  424.433750       424.43375     2.0    165544.567227            -1             -1     -1
1  933156.933135  165544.567383  10036.321533  933156.933135  424.435000  165544.567383  767187.932158  424.433594       324.43375     2.0    165544.567227         False          False   True
2  933156.933135  165644.567383  10036.321533  933156.933135  424.432373  165644.567383  767187.932158  324.433594       224.43375     3.0    165969.000977         False          False   True
3  933156.933135  165744.567227  10036.321533  933156.933135    6.045000  165744.567227  767187.932158  224.433750       124.43375     4.0    165969.000977         False          False   True
4  933156.933135  165944.567139  10036.321533  933156.933135    2.022500  165944.567139  767187.932158   24.433838        24.43375     5.0    165969.000977         False          False   True
5  933156.933135  165945.563232  10111.887783  933156.933135    0.011250  165945.563232  767187.932158   23.437744         0.00000     6.0    165969.000977         False          False   True
6  933156.933135  165969.000977  10188.450283  933156.933135    0.010000  165969.000977  767187.932158    0.000000       -23.43750     7.0    165969.000977         False          False   True
7  933604.805635  165992.438477  10188.450283  933604.805635  447.872500  165992.438477  767187.933408  424.433750       324.43375     1.0    165969.000977         False           True  False
8  933604.805635  166092.438477  10188.450283  933604.805635    1.000000  166092.438477  767187.933408  324.433750       224.43375     2.0    165969.000977         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=False, total_losses=1, buffer=259547/800.[0m
[08/15 16:21:35]  --------------------------------------------------------------------------------
[08/15 16:21:35]  Iteration: 120 (0 solution, 119 counterexamples)
[08/15 16:21:48]  Generator returned sat in 8.885132 secs.
[08/15 16:21:48]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][2]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:21:51]  Improved gap from 0.0 to 23.4375
[08/15 16:21:51]  Improved number of small numbers from 45 to 114 out of a max of 114
[08/15 16:21:51]  Verifer returned sat in 2.932083 secs.
[08/15 16:21:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  932833.520508  165551.688232  10029.175293  932833.520508  123.537598  165551.688232  767158.344727  123.487549      123.462402     2.0    165551.688232            -1             -1   False
1  932833.545654  165551.713623  10029.175293  932833.545654  123.512695  165551.713623  767158.369873  123.462158       23.462402     2.0    165675.175781         False          False   False
2  932833.545654  165651.713379  10035.350098  932833.545654  123.437500  165651.713379  767158.369873   23.462402      -70.362793     3.0    165675.175781         False          False    True
3  932933.495605  165775.125732  10035.350098  932933.495605  123.412354  165775.125732  767158.369873    0.000000      -70.412842     1.0    165775.125732         False           True   False
4  933156.933105  165945.538574  10035.350098  933156.933105  223.437500  165945.538574  767187.932129   23.462402       23.462402     1.0    165775.125732         False          False   False
5  933156.933105  165945.563477  10111.887695  933156.933105    1.000000  165945.563477  767187.932129   23.437500        0.000000     2.0    165775.125732         False          False    True
6  933280.420654  165969.000977  10111.887695  933280.420654  146.925049  165969.000977  767187.957275  123.462402       23.462402     3.0    165775.125732         False          False    True
7  933280.420654  166069.025879  10188.425293  933280.420654    1.000000  166069.025879  767187.957275   23.437500        0.000000     2.0    166092.463379          True           True    True
8  933318.726807  166092.463379  10188.425293  933318.726807   61.743652  166092.463379  767187.957275   38.306152      -61.693848     3.0    166092.463379         False          False    True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=2, buffer=48051/2048.[0m
[08/15 16:21:52]  --------------------------------------------------------------------------------
[08/15 16:21:52]  Iteration: 121 (0 solution, 120 counterexamples)
[08/15 16:22:06]  Generator returned sat in 10.975489 secs.
[08/15 16:22:07]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:22:12]  Improved gap from 0.004375 to 35.9375
[08/15 16:22:13]  Improved number of small numbers from 79 to 114 out of a max of 114
[08/15 16:22:13]  Verifer returned sat in 5.833959 secs.
[08/15 16:22:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  933041.457764  165782.913086   9797.975586  933041.457764    0.100000  165782.913086  767158.344727  100.199951      100.199951     9.0    165782.913086            -1             -1     -1
1  933041.557861  165823.650635   9797.975586  933041.557861  100.300049  165823.650635  767158.444824   59.462402        0.199951     3.0    165782.913086         False           True  False
2  933082.395508  165883.213379   9856.837891  933082.395508  100.300049  165883.213379  767158.444824   40.737305       -0.100098     1.0    165782.913086          True           True   True
3  933082.595703  165924.050781   9920.900391  933082.595703   40.937500  165924.050781  767158.444824    0.100098      -35.837402     1.0    165924.150879         False          False   True
4  933122.433105  165959.988281   9984.962891  933122.433105   39.937500  165959.988281  767158.444824    4.000000      -31.937500     1.0    165924.150879         False          False   True
5  933157.370605  165995.925781  10049.025391  933157.370605   38.937500  165995.925781  767158.444824    3.000000      -32.937500     1.0    165924.150879         False          False   True
6  933192.308105  166031.863281  10112.187988  933192.308105   37.937500  166031.863281  767158.444824    2.000000      -34.837402     1.0    165924.150879         False          False   True
7  933227.245605  166068.700684  10176.250488  933227.245605   36.937500  166068.700684  767158.444824    0.100098      -35.837402     1.0    165924.150879         False          False   True
8  933263.083008  166104.638184  10176.250488  933263.083008   35.937500  166104.638184  767158.444824    0.000000     -100.000000     1.0    165924.150879         False          False   True
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=819/4096.[0m
[08/15 16:22:13]  --------------------------------------------------------------------------------
[08/15 16:22:13]  Iteration: 122 (0 solution, 121 counterexamples)
[08/15 16:22:21]  Generator returned sat in 3.853812 secs.
[08/15 16:22:21]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][1]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:22:25]  Improved gap from 0.025 to 32.8125
[08/15 16:22:25]  Improved number of small numbers from 45 to 114 out of a max of 114
[08/15 16:22:25]  Verifer returned sat in 4.285863 secs.
[08/15 16:22:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f mode_f
0  931258.684082  163999.670654  9512.327881  931258.684082    0.099854  163999.670654  767158.444580  100.568848      100.568604     5.0    163999.670654            -1             -1     -1
1  931258.684082  164099.570557  9512.327881  931258.684082    0.100098  164099.570557  767158.444580    0.668945        0.568604     5.0    163999.670654         False           True  False
2  931358.684082  164199.670898  9512.327881  931358.684082  100.668945  164199.670898  767158.444580    0.568604        0.568604     1.0    163999.670654          True           True  False
3  931458.684082  164299.670898  9512.327881  931458.684082  100.568604  164299.670898  767158.444580    0.568604        0.568604     1.0    164300.239502         False          False  False
4  931658.399902  164399.239502  9512.327881  931658.399902  200.284424  164399.239502  767258.060303    1.100098        0.668701     1.0    164300.239502         False          False  False
5  931658.399902  164399.670898  9579.515381  931658.399902    1.000000  164399.670898  767258.060303    0.668701      -32.143799     2.0    164300.239502         False          False   True
6  931758.231201  164432.483398  9611.827881  931758.231201  100.500000  164432.483398  767258.060303   67.687500        0.000000     1.0    164500.170898          True           True  False
7  931807.199951  164500.270752  9662.859131  931807.199951  116.656250  164500.270752  767258.060303   48.868896        0.000000     1.0    164500.170898         False          False  False
8  931867.174805  164549.139648  9662.859131  931867.174805  108.843750  164549.139648  767258.060303   59.974854      -40.025146     2.0    164500.170898         False          False  False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=False, ramp_down_bq=True, total_losses=1, buffer=2739/4096.[0m
[08/15 16:22:26]  --------------------------------------------------------------------------------
[08/15 16:22:26]  Iteration: 123 (0 solution, 122 counterexamples)
[08/15 16:22:58]  Generator returned sat in 28.070957 secs.
[08/15 16:22:58]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
	else:
		c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][5]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:23:00]  Improved gap from 0.0003125 to 48.4375
[08/15 16:23:00]  Improved number of small numbers from 89 to 114 out of a max of 114
[08/15 16:23:00]  Verifer returned sat in 1.678281 secs.
[08/15 16:23:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  931576.026855  164118.066895  9512.327881  931576.026855    0.099854  164118.066895  767258.060303  199.899658       99.899658     3.0    164118.066895            -1             -1    True
1  931924.564697  164318.066732  9512.327881  931924.564697  548.437500  164318.066732  767258.060303  348.437663      348.437500     1.0    164118.066895         False          False    True
2  931924.564697  164418.066732  9512.327881  931924.564697  348.437500  164418.066732  767258.060303  248.437663      248.437500     2.0    164666.504395         False          False    True
3  931924.564697  164518.066895  9512.327881  931924.564697  193.750000  164518.066895  767258.060303  148.437500      148.437500     3.0    164666.504395         False          False    True
4  931924.564697  164617.966797  9512.327881  931924.564697   96.875000  164617.966797  767258.060303   48.537598       48.437500     4.0    164666.504395         False          False    True
5  931924.564697  164618.066895  9563.890381  931924.564697   48.437500  164618.066895  767258.060303   48.437500        0.000000     5.0    164666.504395         False          False    True
6  931924.564697  164666.504395  9615.452881  931924.564697   24.218750  164666.504395  767258.060303    0.000000      -48.437500     6.0    164666.504395         False          False    True
7  932010.892822  164714.941895  9662.528076  932010.892822   86.328125  164714.941895  767258.060303   37.890625      -15.034180     1.0    164666.504395         False           True   False
8  932064.653809  164767.866943  9662.528076  932064.653809   91.651611  164767.866943  767258.060303   38.726562      -61.273193     1.0    164666.504395         False          False   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=0, buffer=1427609/4096.[0m
[08/15 16:23:01]  --------------------------------------------------------------------------------
[08/15 16:23:01]  Iteration: 124 (0 solution, 123 counterexamples)
[08/15 16:23:18]  Generator returned sat in 13.925466 secs.
[08/15 16:23:19]  Candidate solution: 
[1m[94mif(mode_f[0][t]):
	if(Ld_f[0][t] > Ld_f[0][t-1]):
		c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
	else:
		c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)

if(Ld_f[0][t] > Ld_f[0][t-1]):
	mode[0][t] = True
elif(qbound[t-1][3]):
	mode[0][t] = False
else:
	mode[0][t] = mode[0][t-1][0m
[08/15 16:23:21]  Improved gap from 0.0 to 23.4375
[08/15 16:23:21]  Improved number of small numbers from 62 to 114 out of a max of 114
[08/15 16:23:21]  Verifer returned sat in 2.397124 secs.
[08/15 16:23:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t    arrival_0,t    cwnd_0,t    service_0,t      losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f this_decrease exceed_queue_f  mode_f
0  931727.989746  164149.016846  9563.890381  931727.989746    0.100000  164149.016846  767561.385498   17.587402        0.099854     3.0    164149.016846            -1             -1   False
1  931727.989746  164166.504395  9563.890381  931727.989746    0.100098  164166.504395  767561.385498    0.099854      -99.900146     3.0    164149.016846         False          False   False
2  932027.889648  164266.504395  9563.890381  932027.889648  299.999756  164266.504395  767561.385498  199.999756       99.999756     1.0    164149.016846         False          False   False
3  932027.889648  164443.066650  9563.890381  932027.889648  199.899902  164443.066650  767561.385498   23.437500       -0.000244     2.0    164466.504150         False          False   False
4  932251.427002  164563.479492  9563.890381  932251.427002  246.974854  164563.479492  767561.485107  126.462402      123.437500     1.0    164466.504150         False          False   False
5  932251.427002  164566.504395  9563.890381  932251.427002    1.000000  164566.504395  767561.485107  123.437500       23.437500     2.0    164466.504150         False          False    True
6  932251.427002  164666.504395  9640.452881  932251.427002    2.000000  164666.504395  767561.485107   23.437500        0.000000     3.0    164466.504150         False          False    True
7  932251.427002  164689.941895  9717.015381  932251.427002    3.000000  164689.941895  767561.485107    0.000000      -23.437500     4.0    164466.504150         False          False    True
8  932316.158203  164713.379395  9775.721436  932316.158203   64.731201  164713.379395  767561.485107   41.293701       -0.000244     1.0    164754.673096          True           True   False
high_util=False, low_loss=True, low_delay=True, ramp_up=False, ramp_down_cwnd=True, ramp_down_q=True, ramp_down_bq=True, total_losses=1, buffer=1975/16.[0m
[08/15 16:23:22]  --------------------------------------------------------------------------------
[08/15 16:23:22]  Iteration: 125 (0 solution, 124 counterexamples)
[08/15 16:23:29]  Generator returned unsat in 2.916175 secs.
[08/15 16:23:29]  [96mNo more solutions found[0m
[08/15 16:23:29]  Final solutions:
[08/15 16:23:29]  Took 1549.873073 secs.
