[07/11 20:34:23]  Iteration: 1
[07/11 20:34:23]  Generator returned sat in 0.004149 secs.
[07/11 20:34:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 2S_f[0][t-2] + 2S_f[0][t-3] + 2S_f[0][t-4] + 2)[0m
[07/11 20:34:23]  Improved gap from 3/200 to 100
[07/11 20:34:23]  Improved number of small numbers from 77 to 77 out of a max of 77
[07/11 20:34:23]  Verifer returned sat in 0.150295 secs.
[07/11 20:34:23]  Counter example: 
[93m   arrival_0,t  cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   321.255625     0.005  -178.749375  178.749375         0.0
1   321.255625   500.005   -78.749375  178.749375         0.0
2   321.255625   400.005   -78.749375  178.749375         0.0
3   321.255625     0.005    35.250625  178.749375         0.0
4   321.255625     0.010   121.250625  178.749375         0.0
5   321.255625     0.010   321.250625  178.749375         0.0
6  1121.255625   800.005   321.250625  178.749375         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:34:23]  Iteration: 2
[07/11 20:34:23]  Generator returned sat in 0.014550 secs.
[07/11 20:34:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 3/2S_f[0][t-3] + 1S_f[0][t-4] + -2)[0m
[07/11 20:34:23]  Improved gap from 2048899/102400 to 100
[07/11 20:34:24]  Improved number of small numbers from 38 to 54 out of a max of 77
[07/11 20:34:24]  Verifer returned sat in 0.523520 secs.
[07/11 20:34:24]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t   wasted_t  tot_lost_t
0   319.620361    0.004639  -113.711914  13.712126         0.0
1   319.620361    0.002197   -13.712126  13.712126         0.0
2   319.620361  333.332275   186.287874  13.712126         0.0
3   319.620361    0.002197   286.287874  13.712126         0.0
4   319.620361    0.010000   319.617796  13.712126         0.0
5   852.960393  533.342598   386.287874  13.712126         0.0
6  1286.290315  900.002441   486.288086  13.712126         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:34:24]  Iteration: 3
[07/11 20:34:24]  Generator returned sat in 0.032186 secs.
[07/11 20:34:24]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + -2S_f[0][t-4] + 0)[0m
[07/11 20:34:24]  Improved gap from 28691/4096 to 100
[07/11 20:34:25]  Improved number of small numbers from 32 to 50 out of a max of 77
[07/11 20:34:25]  Verifer returned sat in 0.504133 secs.
[07/11 20:34:25]  Counter example: 
[93m    arrival_0,t      cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0 -16991.600830      0.004639 -17091.600928  17091.600928         0.0
1 -16991.600830      0.002441 -17091.600928  17091.600928         0.0
2 -16991.600830      0.002441 -16991.600830  17091.600928         0.0
3 -16891.598633    100.002197 -16891.600928  17091.600928         0.0
4  25737.401392  42629.002319 -16691.600928  17091.600928         0.0
5  25837.401392  42529.002319 -16691.596191  17091.600928         0.0
6  25837.401392  42328.999756 -16591.600928  17091.600928         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:25]  Iteration: 4
[07/11 20:34:25]  Generator returned sat in 0.020896 secs.
[07/11 20:34:25]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-3] + 2S_f[0][t-4] + -1)[0m
[07/11 20:34:25]  Improved gap from 0 to 100
[07/11 20:34:25]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:34:25]  Verifer returned sat in 0.230922 secs.
[07/11 20:34:25]  Counter example: 
[93m   arrival_0,t     cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   140.403076     0.004395    40.404785 -140.400879         0.0
1   140.403320    99.998535   140.400879 -140.400879         0.0
2   340.403320   200.002441   340.400879 -140.400879         0.0
3  1340.403076  1000.002197   440.400879 -140.400879         0.0
4  1340.403076     0.010010   540.400879 -140.400879         0.0
5  1340.403076   350.002197   640.400879 -140.400879         0.0
6  1440.403076   800.002197   640.400879 -140.400879         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:34:25]  Iteration: 5
[07/11 20:34:25]  Generator returned sat in 0.012523 secs.
[07/11 20:34:25]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-3] + 2S_f[0][t-4] + -2)[0m
[07/11 20:34:25]  Improved gap from inf to 100
[07/11 20:34:26]  Improved number of small numbers from 44 to 44 out of a max of 77
[07/11 20:34:26]  Verifer returned sat in 0.627693 secs.
[07/11 20:34:26]  Counter example: 
[93m   arrival_0,t     cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   140.403076     0.004395    40.804785 -140.800879         0.0
1   140.803076    99.998291   140.800879 -140.800879         0.0
2   340.803076   200.002197   340.800879 -140.800879         0.0
3  1340.803076  1000.002197   440.800879 -140.800879         0.0
4  1340.803076     0.010010   540.800879 -140.800879         0.0
5  1340.803076   350.002197   640.800879 -140.800879         0.0
6  1440.803076   800.002197   640.800879 -140.800879         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:34:26]  Iteration: 6
[07/11 20:34:26]  Generator returned sat in 0.012606 secs.
[07/11 20:34:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-4] + -2)[0m
[07/11 20:34:26]  Improved gap from 2473/204800 to 100
[07/11 20:34:27]  Improved number of small numbers from 61 to 75 out of a max of 77
[07/11 20:34:27]  Verifer returned sat in 0.248177 secs.
[07/11 20:34:27]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   438.336914    0.004150   338.334717 -438.334717         0.0
1   438.336914    0.002197   438.334717 -438.334717         0.0
2  1243.838867  805.504150   638.334717 -438.334717         0.0
3  1243.838867    0.002197   738.334473 -438.334717         0.0
4  1243.838867  305.502197   738.334717 -438.334717         0.0
5  1243.838867  505.502075   927.334473 -438.334717         0.0
6  1738.336670  811.002197   938.334717 -438.334717         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:34:27]  Iteration: 7
[07/11 20:34:27]  Generator returned sat in 0.027965 secs.
[07/11 20:34:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2)[0m
[07/11 20:34:27]  Improved gap from 17/16384 to 48.4375
[07/11 20:34:27]  Improved number of small numbers from 69 to 77 out of a max of 77
[07/11 20:34:27]  Verifer returned sat in 0.139524 secs.
[07/11 20:34:27]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -117194.663086    0.004150 -117394.665283  117294.665283         0.0
1 -117194.663086    0.002197 -117194.665283  117294.665283         0.0
2 -116846.227783  348.437500 -117094.665283  117294.665283         0.0
3 -116846.227783    0.002197 -116994.665283  117294.665283         0.0
4 -116846.227783    0.010000 -116894.665527  117294.665283         0.0
5 -116846.227783    0.010000 -116894.665283  117346.227783         0.0
6 -116846.227783    0.010000 -116846.227783  117346.227783         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:27]  Iteration: 8
[07/11 20:34:27]  Generator returned sat in 0.071352 secs.
[07/11 20:34:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2)[0m
[07/11 20:34:27]  Improved gap from 775/16 to 48.4375
[07/11 20:34:28]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:34:28]  Verifer returned sat in 0.265739 secs.
[07/11 20:34:28]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0 -117846.235352    0.003906 -118395.648682  118295.648682         0.0
1 -117846.235352    0.002197 -118295.648682  118295.648682         0.0
2 -117846.235352  449.413086 -118096.624268  118295.648682         0.0
3 -117846.235352    0.002197 -118095.648682  118295.648682         0.0
4 -117846.235352    0.012207 -117895.648682  118295.648682         0.0
5 -117846.235352    0.010000 -117894.673096  118346.235352         0.0
6 -117846.235352    0.012207 -117846.235352  118346.235596         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:28]  Iteration: 9
[07/11 20:34:28]  Generator returned sat in 0.056372 secs.
[07/11 20:34:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:34:28]  Improved gap from 0 to 48.4375
[07/11 20:34:28]  Improved number of small numbers from 43 to 78 out of a max of 78
[07/11 20:34:28]  Verifer returned sat in 0.482803 secs.
[07/11 20:34:28]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  22768.499023    0.003906  22668.496826 -22668.496826         0.0
1  22768.499023    0.000732  22768.496826 -22668.496826         0.0
2  22768.499023    0.000732  22768.497070 -22668.496826         0.0
3  23116.934326  348.437256  22868.497070 -22668.496826         0.0
4  23116.934326    0.010000  23068.496826 -22668.496826         0.0
5  23116.934326    0.010000  23068.496826 -22616.934326         0.0
6  23116.934326    0.010000  23116.934326 -22616.934326         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:29]  Iteration: 10
[07/11 20:34:29]  Generator returned sat in 0.370890 secs.
[07/11 20:34:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:34:29]  Improved gap from 2042081/409600 to 48.4375
[07/11 20:34:29]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:34:29]  Verifer returned sat in 0.303190 secs.
[07/11 20:34:29]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  43673.990723    0.003662  43149.246582 -43225.553223         0.0
1  43673.990723    0.000732  43225.553223 -43225.553223         0.0
2  43673.990723    0.000732  43325.553223 -43225.553223         0.0
3  43673.990723  348.437500  43524.226562 -43225.553223         0.0
4  43673.990723  138.826660  43625.553223 -43225.553223         0.0
5  43673.990723    0.010000  43625.553223 -43173.990723         0.0
6  43673.990723    0.010010  43673.990723 -43173.990723         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:30]  Iteration: 11
[07/11 20:34:30]  Generator returned sat in 0.101275 secs.
[07/11 20:34:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -3/2S_f[0][t-3] + 3/2S_f[0][t-4] + 2)[0m
[07/11 20:34:30]  Improved gap from 52835077/2867200 to 48.4375
[07/11 20:34:31]  Improved number of small numbers from 34 to 43 out of a max of 77
[07/11 20:34:31]  Verifer returned sat in 0.809362 secs.
[07/11 20:34:31]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  76684.413818    0.003418  76684.413727 -76784.413727         0.0
1  77040.206826  355.793099  76794.037108 -76784.413727         0.0
2  77040.206826  246.169678  76928.697108 -76784.413727         0.0
3  77084.415558  155.718451  77084.413727 -76784.413727         0.0
4  77233.411896  148.998169  77184.413574 -76784.413727         0.0
5  77233.411896    0.010000  77184.413818 -76733.411896         0.0
6  77233.411896    0.010000  77233.411896 -76733.411865         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:31]  Iteration: 12
[07/11 20:34:31]  Generator returned sat in 0.052537 secs.
[07/11 20:34:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -3/2S_f[0][t-3] + 3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:34:31]  Improved gap from 1199/102400 to 48.4375
[07/11 20:34:31]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:34:31]  Verifer returned sat in 0.271682 secs.
[07/11 20:34:31]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  76787.550537    0.003174  76653.220947 -76753.220703         0.0
1  76787.550537    0.001465  76787.548828 -76735.986328         0.0
2  77184.423828  396.875000  76935.986328 -76735.986328         0.0
3  77184.423828    0.001709  77035.986084 -76735.986328         0.0
4  77184.423828    0.010000  77134.425537 -76735.986328         0.0
5  77184.423828    0.010000  77135.986328 -76684.423828         0.0
6  77184.423828    0.010000  77184.423828 -76684.423584         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:31]  Iteration: 13
[07/11 20:34:32]  Generator returned sat in 0.295861 secs.
[07/11 20:34:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:34:32]  Verifer returned unsat in 0.100262 secs.
[07/11 20:34:32]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:34:32]  Iteration: 14
[07/11 20:34:32]  Generator returned sat in 0.037265 secs.
[07/11 20:34:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:34:32]  Verifer returned unsat in 0.064737 secs.
[07/11 20:34:32]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:34:32]  Iteration: 15
[07/11 20:34:32]  Generator returned sat in 0.034344 secs.
[07/11 20:34:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:34:32]  Verifer returned unsat in 0.076720 secs.
[07/11 20:34:32]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:34:32]  Iteration: 16
[07/11 20:34:32]  Generator returned sat in 0.032942 secs.
[07/11 20:34:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:34:32]  Verifer returned unsat in 0.051035 secs.
[07/11 20:34:32]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:34:32]  Iteration: 17
[07/11 20:34:32]  Generator returned sat in 0.032255 secs.
[07/11 20:34:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + -1/2)[0m
[07/11 20:34:32]  Improved gap from 0 to 0
[07/11 20:34:33]  Improved number of small numbers from 39 to 53 out of a max of 77
[07/11 20:34:33]  Verifer returned sat in 0.659076 secs.
[07/11 20:34:33]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  123102.985352  0.002930  123102.313788 -123102.313788         0.0
1  123102.985352  0.000977  123102.313788 -123002.985352         0.0
2  123102.986328  0.672540  123102.985535 -122902.986328         0.0
3  123102.987122  0.001587  123102.986328 -122802.987305         0.0
4  123103.494741  0.508413  123102.987305 -122703.494741         0.0
5  123103.494741  0.010000  123103.494741 -122603.494873         0.0
6  123103.504741  0.010000  123103.494873 -122603.494629         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:33]  Iteration: 18
[07/11 20:34:33]  Generator returned sat in 0.103895 secs.
[07/11 20:34:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + -1)[0m
[07/11 20:34:34]  Improved gap from 0 to 0
[07/11 20:34:34]  Improved number of small numbers from 53 to 62 out of a max of 77
[07/11 20:34:34]  Verifer returned sat in 0.700948 secs.
[07/11 20:34:34]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  131948.985352  0.002686  131948.983887 -131948.984619         0.0
1  131948.985352  0.000488  131948.984619 -131848.985352         0.0
2  131948.985840  0.001221  131948.985352 -131748.986084         0.0
3  131950.002197  1.016846  131949.993154 -131650.002197         0.0
4  131950.003154  0.010000  131950.002422 -131550.003174         0.0
5  131950.523760  0.521338  131950.003174 -131450.523760         0.0
6  131950.523760  0.010000  131950.523760 -131450.523682         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:34]  Iteration: 19
[07/11 20:34:34]  Generator returned sat in 0.046685 secs.
[07/11 20:34:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + -3/2)[0m
[07/11 20:34:35]  Improved gap from 11/16384 to 0
[07/11 20:34:35]  Improved number of small numbers from 41 to 54 out of a max of 77
[07/11 20:34:35]  Verifer returned sat in 0.804466 secs.
[07/11 20:34:35]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  175111.984863  0.002441  175109.979784 -175109.979784         0.0
1  175111.984863  0.000488  175109.979784 -175011.985107         0.0
2  175111.985779  2.005995  175111.985107 -174911.985779         0.0
3  175111.986328  0.001221  175111.985779 -174811.986572         0.0
4  175113.494436  1.508657  175111.986572 -174713.494436         0.0
5  175113.494436  0.010000  175113.494436 -174613.494629         0.0
6  175113.504436  0.010000  175113.494629 -174613.494629         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:35]  Iteration: 20
[07/11 20:34:36]  Generator returned sat in 0.498299 secs.
[07/11 20:34:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -1/2S_f[0][t-4] + -1/2)[0m
[07/11 20:34:36]  Improved gap from 79/409600 to 48.4375
[07/11 20:34:36]  Improved number of small numbers from 77 to 77 out of a max of 77
[07/11 20:34:36]  Verifer returned sat in 0.275054 secs.
[07/11 20:34:36]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  166547.654053    0.002441  166539.994629 -166539.994629         0.0
1  166547.654053    0.000488  166547.653809 -166539.994629         0.0
2  166645.656006   98.002197  166645.655762 -166539.994629         0.0
3  166988.662354  343.006592  166839.994629 -166539.994629         0.0
4  166988.662354  148.667480  166938.662598 -166539.994629         0.0
5  166988.662354   49.999512  166939.994629 -166488.662354         0.0
6  166988.662354   48.667480  166988.662354 -166488.662354         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:36]  Iteration: 21
[07/11 20:34:37]  Generator returned sat in 0.070882 secs.
[07/11 20:34:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:34:37]  Improved gap from 200879/4096 to 48.4375
[07/11 20:34:37]  Improved number of small numbers from 36 to 78 out of a max of 78
[07/11 20:34:37]  Verifer returned sat in 0.371124 secs.
[07/11 20:34:37]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  104018.066162    0.002197  103949.191162 -103969.628418         0.0
1  104018.066162    0.000977  103969.628662 -103918.066162         0.0
2  104018.066162    0.000977  104018.066162 -103866.508057         0.0
3  104316.506836  298.440674  104166.508057 -103866.508057         0.0
4  104316.506836  134.441895  104266.508057 -103866.508057         0.0
5  104316.506836   49.997803  104266.508057 -103816.506836         0.0
6  104316.506836   24.220947  104316.506836 -103816.506836         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:37]  Iteration: 22
[07/11 20:34:38]  Generator returned sat in 0.577318 secs.
[07/11 20:34:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:34:38]  Improved gap from 0 to 48.4375
[07/11 20:34:38]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:34:38]  Verifer returned sat in 0.352777 secs.
[07/11 20:34:38]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  150308.706787    0.001953  150095.142822 -150108.706787         0.0
1  150308.706787    0.006592  150208.706543 -150108.706787         0.0
2  150308.706787    0.001221  150308.706787 -150108.706787         0.0
3  150557.144043  248.437256  150340.518799 -150108.706787         0.0
4  150557.144043  199.157959  150507.145264 -150108.706787         0.0
5  150557.144287   49.999023  150508.706787 -150057.144287         0.0
6  150707.864502  199.157715  150557.144287 -150057.144287         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:38]  Iteration: 23
[07/11 20:34:39]  Generator returned sat in 0.077235 secs.
[07/11 20:34:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/11 20:34:39]  Improved gap from 196353/4096 to 48.4375
[07/11 20:34:39]  Improved number of small numbers from 43 to 78 out of a max of 78
[07/11 20:34:39]  Verifer returned sat in 0.286111 secs.
[07/11 20:34:39]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  148672.500977    0.001953  148672.499756 -148772.499756         0.0
1  148824.062256  151.562500  148824.062256 -148772.499756         0.0
2  148939.688721  115.626465  148891.251221 -148739.688721         0.0
3  148939.688721    0.000732  148939.688721 -148688.126221         0.0
4  149136.221436  196.532715  149086.564697 -148688.126221         0.0
5  149136.221436   44.188477  149088.126221 -148636.563965         0.0
6  149284.658936  196.532715  149136.563965 -148636.563965         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:39]  Iteration: 24
[07/11 20:34:39]  Generator returned sat in 0.210143 secs.
[07/11 20:34:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1/2S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + -1)[0m
[07/11 20:34:40]  Improved gap from 95553/2048 to 48.4375
[07/11 20:34:40]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:34:40]  Verifer returned sat in 0.462153 secs.
[07/11 20:34:40]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  171609.941895    0.001709  171129.628174 -171209.931885         0.0
1  171609.941895  480.313477  171309.931641 -171209.931885         0.0
2  171609.941895  300.010000  171370.537109 -171209.931885         0.0
3  171609.941895  239.403564  171490.739258 -171209.931885         0.0
4  171609.941895  119.202393  171609.931885 -171209.931885         0.0
5  171609.941895    0.010000  171609.931885 -171158.369385         0.0
6  171729.134033  119.202148  171659.930908 -171158.369385         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:40]  Iteration: 25
[07/11 20:34:40]  Generator returned sat in 0.171305 secs.
[07/11 20:34:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:34:40]  Improved gap from 0 to 48.4375
[07/11 20:34:41]  Improved number of small numbers from 61 to 71 out of a max of 77
[07/11 20:34:41]  Verifer returned sat in 0.289709 secs.
[07/11 20:34:41]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  171433.225098    0.001465  171233.225342 -171333.225342         0.0
1  171433.225098  199.999268  171418.022217 -171333.225342         0.0
2  171442.302734   24.280518  171442.301758 -171290.739258         0.0
3  171490.739258   48.437500  171490.739258 -171239.176758         0.0
4  171689.175903  198.436646  171639.176758 -171239.176758         0.0
5  171689.175903   49.998291  171639.176758 -171189.176025         0.0
6  171763.333008  124.156250  171689.176025 -171189.176025         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:41]  Iteration: 26
[07/11 20:34:41]  Generator returned sat in 0.097354 secs.
[07/11 20:34:41]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:34:41]  Improved gap from 0 to 48.4375
[07/11 20:34:41]  Improved number of small numbers from 50 to 77 out of a max of 77
[07/11 20:34:41]  Verifer returned sat in 0.285116 secs.
[07/11 20:34:41]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  171888.312744    0.001465  171688.312988 -171788.312988         0.0
1  171888.312744    0.000732  171872.861816 -171788.312988         0.0
2  171945.079590   72.217773  171896.642090 -171745.079590         0.0
3  171945.080322   48.438232  171945.079590 -171745.079590         0.0
4  172143.518555  198.438965  172143.518066 -171745.079590         0.0
5  172193.517090   49.999023  172145.079590 -171693.517090         0.0
6  172294.736328  149.656738  172193.517334 -171693.517090         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:42]  Iteration: 27
[07/11 20:34:42]  Generator returned sat in 0.263453 secs.
[07/11 20:34:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + -1/2)[0m
[07/11 20:34:42]  Improved gap from 3/32768 to 23.4375
[07/11 20:34:43]  Improved number of small numbers from 32 to 42 out of a max of 77
[07/11 20:34:43]  Verifer returned sat in 0.800617 secs.
[07/11 20:34:43]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161093.673584   0.001221  161043.174160 -161070.236084         0.0
1  161093.673584   0.000732  161070.236294 -160993.673794         0.0
2  161093.674160  23.437866  161093.673794 -160917.111294         0.0
3  161117.111660  23.437866  161117.111294 -160840.548828         0.0
4  161167.110928  49.999634  161147.798062 -160771.235562         0.0
5  161197.797695  49.999634  161171.235562 -160697.797852         0.0
6  161221.235195  49.999634  161197.797852 -160697.797607         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:43]  Iteration: 28
[07/11 20:34:43]  Generator returned sat in 0.203373 secs.
[07/11 20:34:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:34:43]  Improved gap from 5/16384 to 23.4375
[07/11 20:34:43]  Improved number of small numbers from 71 to 77 out of a max of 77
[07/11 20:34:43]  Verifer returned sat in 0.329049 secs.
[07/11 20:34:43]  Counter example: 
[93m     arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  161049.923340   0.001221  161026.48584 -161026.486084         0.0
1  161049.923340   0.000732  161049.92334 -160973.360840         0.0
2  161073.361328  23.437988  161073.36084 -160896.798340         0.0
3  161120.235596  46.874756  161096.79834 -160820.235840         0.0
4  161143.673340  46.875000  161120.23584 -160743.673340         0.0
5  161167.110840  46.875000  161143.67334 -160667.110840         0.0
6  161190.548340  46.875000  161167.11084 -160667.110840         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:44]  Iteration: 29
[07/11 20:34:44]  Generator returned sat in 0.121072 secs.
[07/11 20:34:44]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:34:44]  Improved gap from 5/8192 to 23.4375
[07/11 20:34:44]  Improved number of small numbers from 48 to 77 out of a max of 77
[07/11 20:34:44]  Verifer returned sat in 0.343784 secs.
[07/11 20:34:44]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161924.738281   0.000977  161899.300293 -161899.300293         0.0
1  161924.738281   0.000488  161924.737793 -161848.175293         0.0
2  161948.175781  23.437988  161948.175293 -161771.612793         0.0
3  161997.298828  49.123535  161971.612793 -161697.298828         0.0
4  162022.487793  50.875000  161997.298828 -161622.487793         0.0
5  162047.298096  49.999268  162022.487793 -161547.298340         0.0
6  162073.362793  50.875000  162047.298340 -161547.298340         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:45]  Iteration: 30
[07/11 20:34:45]  Generator returned sat in 0.725903 secs.
[07/11 20:34:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + -2)[0m
[07/11 20:34:45]  Improved gap from 78597/4096 to 23.4375
[07/11 20:34:46]  Improved number of small numbers from 77 to 77 out of a max of 77
[07/11 20:34:46]  Verifer returned sat in 0.244588 secs.
[07/11 20:34:46]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  162623.424072    0.000977  162523.424072 -162523.424072         0.0
1  162623.424072    0.000488  162523.424072 -162523.424072         0.0
2  162672.549072  149.125000  162672.548828 -162523.424072         0.0
3  162732.799316   60.250488  162723.424072 -162472.299072         0.0
4  162772.299316   48.875244  162772.299072 -162395.736572         0.0
5  162819.174072   46.875000  162795.736572 -162319.174072         0.0
6  162819.174072   21.437500  162819.174072 -162319.174072         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:46]  Iteration: 31
[07/11 20:34:46]  Generator returned sat in 0.325180 secs.
[07/11 20:34:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:34:46]  Improved gap from 1/4096 to 48.4375
[07/11 20:34:46]  Improved number of small numbers from 68 to 78 out of a max of 78
[07/11 20:34:46]  Verifer returned sat in 0.318313 secs.
[07/11 20:34:46]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  162622.800049    0.000732  162503.761963 -162522.800049         0.0
1  162622.800049    0.000488  162585.284912 -162522.800049         0.0
2  162722.800049  137.515137  162697.269287 -162522.800049         0.0
3  162972.799805  275.530518  162722.800049 -162522.800049         0.0
4  162972.799805  249.999512  162922.800049 -162522.800049         0.0
5  162972.799805   49.999512  162924.362061 -162472.799805         0.0
6  163174.361572  249.999512  162972.799805 -162472.799805         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:34:47]  Iteration: 32
[07/11 20:34:47]  Generator returned sat in 0.292983 secs.
[07/11 20:34:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + -1)[0m
[07/11 20:34:47]  Improved gap from 0 to 48.4375
[07/11 20:34:47]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:34:47]  Verifer returned sat in 0.285059 secs.
[07/11 20:34:47]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  162703.954346    0.000488  162466.826416 -162503.954102         0.0
1  162703.954346    0.000488  162503.954346 -162503.954102         0.0
2  162703.954346    0.000244  162697.269043 -162503.954102         0.0
3  162952.391602  255.122559  162803.954102 -162503.954102         0.0
4  162952.391602  140.463623  162902.391846 -162503.954102         0.0
5  162952.391602   49.999268  162903.954102 -162452.391602         0.0
6  162952.391602    0.010000  162952.391602 -162452.391602         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:48]  Iteration: 33
[07/11 20:34:48]  Generator returned sat in 0.321790 secs.
[07/11 20:34:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + -1/2)[0m
[07/11 20:34:48]  Improved gap from 775/16 to 48.4375
[07/11 20:34:48]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:34:48]  Verifer returned sat in 0.382372 secs.
[07/11 20:34:48]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  161619.260742    0.000488  161619.260742 -161719.260742         0.0
1  161719.260742  100.000000  161719.260742 -161719.260742         0.0
2  162169.260498  449.999756  161919.260742 -161719.260742         0.0
3  162169.260498    0.000244  162019.260742 -161719.260742         0.0
4  162169.260498   99.500000  162119.260742 -161719.260742         0.0
5  162169.260498   49.500000  162120.822998 -161669.260498         0.0
6  162169.260498    0.010000  162169.260498 -161669.260498         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:49]  Iteration: 34
[07/11 20:34:49]  Generator returned sat in 0.458427 secs.
[07/11 20:34:49]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1)[0m
[07/11 20:34:49]  Improved gap from 20066279/819200 to 29.6875
[07/11 20:34:50]  Improved number of small numbers from 42 to 77 out of a max of 77
[07/11 20:34:50]  Verifer returned sat in 0.565066 secs.
[07/11 20:34:50]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  158942.219971    0.000488  158519.092529 -158519.092529         0.0
1  158942.219971    0.000244  158519.092529 -158519.092529         0.0
2  158942.219971    0.000244  158682.028809 -158519.092529         0.0
3  158942.219971  260.191162  158819.092529 -158519.092529         0.0
4  158942.219971  123.127441  158898.780273 -158519.092529         0.0
5  158948.780029   49.999756  158919.092529 -158448.780029         0.0
6  158948.780029    0.010000  158948.780029 -158378.467529         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:50]  Iteration: 35
[07/11 20:34:50]  Generator returned sat in 0.182683 secs.
[07/11 20:34:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2)[0m
[07/11 20:34:50]  Improved gap from 1/8192 to 29.6875
[07/11 20:34:51]  Improved number of small numbers from 34 to 41 out of a max of 77
[07/11 20:34:51]  Verifer returned sat in 0.638702 secs.
[07/11 20:34:51]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  159290.960476    0.000244  158761.273193 -158861.272976         0.0
1  159290.960476    0.000244  158861.272976 -158861.272976         0.0
2  159290.960476    0.000244  159021.179288 -158861.272976         0.0
3  159290.960476    0.000244  159161.272976 -158861.272976         0.0
4  159290.960476  129.687378  159240.960599 -158861.272976         0.0
5  159290.960476   48.984589  159261.272976 -158790.960476         0.0
6  159290.960476    0.010000  159290.960476 -158790.960449         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:51]  Iteration: 36
[07/11 20:34:53]  Generator returned sat in 1.557039 secs.
[07/11 20:34:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:34:53]  Verifer returned unsat in 0.092783 secs.
[07/11 20:34:53]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:34:53]  Iteration: 37
[07/11 20:34:53]  Generator returned sat in 0.459642 secs.
[07/11 20:34:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:34:54]  Improved gap from 0 to 6.25
[07/11 20:34:54]  Improved number of small numbers from 34 to 40 out of a max of 77
[07/11 20:34:54]  Verifer returned sat in 0.979507 secs.
[07/11 20:34:54]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  190065.752930   0.000244  190065.752834 -190065.752930         0.0
1  190072.002895   6.250061  190072.002834 -189984.502686         0.0
2  190084.502854  12.500020  190084.502793 -189890.752793         0.0
3  190090.752854   6.250061  190090.752793 -189806.377686         0.0
4  190112.627793  21.875000  190106.377793 -189712.627793         0.0
5  190156.377732  49.999939  190112.627793 -189656.377732         0.0
6  190156.377732  21.875000  190156.377732 -189656.377686         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:55]  Iteration: 38
[07/11 20:34:55]  Generator returned sat in 0.331397 secs.
[07/11 20:34:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:34:56]  Improved gap from 11/2 to 6.25
[07/11 20:34:56]  Improved number of small numbers from 34 to 42 out of a max of 77
[07/11 20:34:56]  Verifer returned sat in 1.264339 secs.
[07/11 20:34:56]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  189137.419678   0.000244  189131.169444 -189131.169678         0.0
1  189137.419678   6.250000  189137.419444 -189043.669444         0.0
2  189143.669566   6.250122  189143.669444 -188949.919444         0.0
3  189169.481883  25.812439  189149.919444 -188869.481883         0.0
4  189173.294444  23.375000  189169.481883 -188775.731883         0.0
5  189219.481761  49.999878  189175.731883 -188719.481761         0.0
6  189219.481761  23.375000  189219.481761 -188719.481689         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:56]  Iteration: 39
[07/11 20:34:57]  Generator returned sat in 0.289287 secs.
[07/11 20:34:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:34:57]  Improved gap from 1/16384 to 6.25
[07/11 20:34:58]  Improved number of small numbers from 36 to 45 out of a max of 77
[07/11 20:34:58]  Verifer returned sat in 0.914282 secs.
[07/11 20:34:58]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  189137.419678   0.000244  189131.169444 -189131.169678         0.0
1  189137.419678   0.000244  189137.419444 -189043.669444         0.0
2  189143.669566   6.250122  189143.669444 -188949.919444         0.0
3  189156.169444  12.500000  189149.919444 -188856.169678         0.0
4  189173.794444  23.875000  189169.231883 -188775.481883         0.0
5  189219.231761  49.999878  189175.481883 -188719.231761         0.0
6  189219.231761  23.875000  189219.231761 -188719.231689         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:34:58]  Iteration: 40
[07/11 20:35:02]  Generator returned sat in 4.078528 secs.
[07/11 20:35:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:35:02]  Improved gap from 1605631/40960 to 100
[07/11 20:35:03]  Improved number of small numbers from 30 to 38 out of a max of 77
[07/11 20:35:03]  Verifer returned sat in 0.681079 secs.
[07/11 20:35:03]  Counter example: 
[93m     arrival_0,t     cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  177466.563477     0.000244  177366.563180 -177366.56318         0.0
1  177466.563477     0.000244  177466.563180 -177366.56318         0.0
2  178566.563302  1100.000122  177467.563118 -177366.56318         0.0
3  178566.563302     0.000244  177566.563180 -177366.56318         0.0
4  178566.563302   303.499908  177766.563180 -177366.56318         0.0
5  178566.563302   451.500031  177866.563180 -177366.56318         0.0
6  178666.563302   800.000122  177866.563180 -177366.56318         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:35:03]  Iteration: 41
[07/11 20:35:04]  Generator returned sat in 0.510835 secs.
[07/11 20:35:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:35:04]  Improved gap from 0 to 6.25
[07/11 20:35:05]  Improved number of small numbers from 29 to 43 out of a max of 77
[07/11 20:35:05]  Verifer returned sat in 1.104728 secs.
[07/11 20:35:05]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  177866.562988   0.000244  177839.674236 -177839.674316         0.0
1  177866.562988   0.000244  177858.896411 -177766.562988         0.0
2  177866.563180   7.666768  177866.563057 -177674.229704         0.0
3  177874.229826   7.666768  177874.229704 -177581.896240         0.0
4  177924.229582  49.999878  177881.896350 -177524.229582         0.0
5  177924.229582  32.666585  177924.229582 -177431.896240         0.0
6  177974.229460  49.999878  177931.896240 -177431.895996         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:05]  Iteration: 42
[07/11 20:35:05]  Generator returned sat in 0.349723 secs.
[07/11 20:35:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 2)[0m
[07/11 20:35:06]  Improved gap from 0 to 48.4375
[07/11 20:35:06]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:35:06]  Verifer returned sat in 0.347866 secs.
[07/11 20:35:06]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  208874.740723    0.000244  208574.740723 -208674.740479         0.0
1  208874.740723    0.000244  208674.740479 -208674.740479         0.0
2  208874.740723   50.000244  208874.740479 -208674.740479         0.0
3  209074.740723  200.000244  208874.740723 -208674.740479         0.0
4  209074.740723  101.999756  209073.178223 -208674.740479         0.0
5  209074.740723    0.010000  209074.740479 -208623.177979         0.0
6  209174.396973   99.656494  209123.177979 -208623.177979         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:35:06]  Iteration: 43
[07/11 20:35:07]  Generator returned sat in 0.505914 secs.
[07/11 20:35:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:35:07]  Improved gap from 396799/8192 to 48.4375
[07/11 20:35:07]  Improved number of small numbers from 42 to 44 out of a max of 77
[07/11 20:35:07]  Verifer returned sat in 0.660544 secs.
[07/11 20:35:07]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  208870.739990    0.000244  208570.739868 -208670.739868         0.0
1  208870.739990    0.000244  208697.164478 -208670.739868         0.0
2  208870.739990    0.000244  208870.739868 -208670.739868         0.0
3  209119.177368  248.437500  208950.564771 -208670.739868         0.0
4  209119.177368  158.962793  209069.177490 -208670.739868         0.0
5  209119.177368   49.999878  209070.739868 -208619.177368         0.0
6  209229.702661  158.962793  209119.177368 -208619.177368         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:35:08]  Iteration: 44
[07/11 20:35:08]  Generator returned sat in 0.677933 secs.
[07/11 20:35:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-2] + -2S_f[0][t-4] + 2)[0m
[07/11 20:35:08]  Improved gap from 0 to 10.9375
[07/11 20:35:09]  Improved number of small numbers from 49 to 77 out of a max of 77
[07/11 20:35:09]  Verifer returned sat in 0.261243 secs.
[07/11 20:35:09]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  209122.741699   0.000244  209100.866699 -209100.866699         0.0
1  209122.741699   0.000244  209111.804199 -209022.741699         0.0
2  209122.741699  10.937500  209122.741699 -208933.679199         0.0
3  209133.679199  10.937500  209133.679199 -208844.616699         0.0
4  209179.429199  45.750000  209144.616699 -208783.678955         0.0
5  209190.366699  45.750000  209183.678955 -208694.616455         0.0
6  209229.428955  45.750000  209194.616455 -208694.616455         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:35:09]  Iteration: 45
[07/11 20:35:10]  Generator returned sat in 0.699698 secs.
[07/11 20:35:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:35:10]  Verifer returned unsat in 0.127949 secs.
[07/11 20:35:10]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:35:10]  Iteration: 46
[07/11 20:35:12]  Generator returned sat in 2.265642 secs.
[07/11 20:35:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:35:12]  Improved gap from 0 to 23.4375
[07/11 20:35:13]  Improved number of small numbers from 36 to 47 out of a max of 77
[07/11 20:35:13]  Verifer returned sat in 0.973378 secs.
[07/11 20:35:13]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  219159.647949   0.000244  219136.210114 -219136.210205         0.0
1  219159.647949   0.000244  219159.647614 -219083.085114         0.0
2  219183.085114  23.437500  219183.085114 -219006.522614         0.0
3  219231.710033  48.624919  219206.522614 -218931.710033         0.0
4  219253.897614  47.375000  219231.710033 -218855.147533         0.0
5  219281.709910  49.999878  219255.147533 -218781.709961         0.0
6  219302.522533  47.375000  219281.709961 -218781.709717         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:13]  Iteration: 47
[07/11 20:35:14]  Generator returned sat in 0.381306 secs.
[07/11 20:35:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:35:14]  Improved gap from 1/16384 to 23.4375
[07/11 20:35:14]  Improved number of small numbers from 36 to 45 out of a max of 77
[07/11 20:35:14]  Verifer returned sat in 0.738593 secs.
[07/11 20:35:14]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  218277.898438   0.000244  218251.961090 -218251.961182         0.0
1  218277.898438   0.000244  218277.898102 -218201.335602         0.0
2  218301.335724  23.437622  218301.335602 -218124.773102         0.0
3  218342.647980  41.312378  218324.773102 -218048.210693         0.0
4  218373.897858  49.124756  218349.627188 -217973.897858         0.0
5  218399.627065  49.999878  218373.897858 -217899.627065         0.0
6  218423.022614  49.124756  218399.627065 -217899.626953         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:15]  Iteration: 48
[07/11 20:35:15]  Generator returned sat in 0.534123 secs.
[07/11 20:35:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:35:16]  Improved gap from 1094657/49152 to 21.875
[07/11 20:35:16]  Improved number of small numbers from 30 to 39 out of a max of 77
[07/11 20:35:16]  Verifer returned sat in 1.122207 secs.
[07/11 20:35:16]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  218745.272949   0.000244  218713.398041 -218745.272705         0.0
1  218745.272949   0.000244  218745.272797 -218667.147797         0.0
2  218767.147858  21.875061  218767.147797 -218589.022797         0.0
3  218789.022858  21.875061  218789.022797 -218510.897949         0.0
4  218839.272675  50.249878  218814.064423 -218439.272675         0.0
5  218864.064362  49.999939  218839.272675 -218364.064362         0.0
6  218889.522553  50.249878  218864.064362 -218364.064209         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:35:17]  Iteration: 49
[07/11 20:35:19]  Generator returned sat in 1.832478 secs.
[07/11 20:35:19]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 20:35:19]  Improved gap from 1/16384 to 100
[07/11 20:35:19]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 20:35:19]  Verifer returned sat in 0.261828 secs.
[07/11 20:35:19]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  300734.464111    0.000244  300534.464111 -300534.464111         0.0
1  300734.464111    0.000244  300634.464111 -300534.464111         0.0
2  300734.464111  100.000000  300634.464111 -300534.464111         0.0
3  301035.464355  401.000244  300734.464111 -300534.464111         0.0
4  301035.464355  301.000000  300934.464111 -300534.464111         0.0
5  301585.464111  651.000000  301034.464111 -300534.464111         0.0
6  301835.464111  801.000000  301034.464355 -300534.464111         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:35:19]  Iteration: 50
[07/11 20:35:20]  Generator returned sat in 0.530097 secs.
[07/11 20:35:20]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + -2)[0m
[07/11 20:35:20]  Improved gap from 0 to 0
[07/11 20:35:21]  Improved number of small numbers from 34 to 40 out of a max of 77
[07/11 20:35:21]  Verifer returned sat in 0.875074 secs.
[07/11 20:35:21]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  319136.648197  0.000244  319133.842343 -319136.647949         0.0
1  319136.648197  0.000244  319136.648075 -319036.648197         0.0
2  319136.648197  0.000061  319136.648197 -318936.648197         0.0
3  319136.648258  0.000061  319136.648197 -318836.648438         0.0
4  319137.454233  0.806037  319137.444172 -318737.454233         0.0
5  319137.454233  0.010000  319137.454233 -318637.454346         0.0
6  319137.464294  0.010061  319137.454346 -318637.454102         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:21]  Iteration: 51
[07/11 20:35:21]  Generator returned sat in 0.561133 secs.
[07/11 20:35:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + -3/2)[0m
[07/11 20:35:22]  Improved gap from 0 to 0
[07/11 20:35:23]  Improved number of small numbers from 36 to 41 out of a max of 77
[07/11 20:35:23]  Verifer returned sat in 1.063383 secs.
[07/11 20:35:23]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  317797.233589  0.000244  317795.723650 -317797.233398         0.0
1  317797.233589  0.000244  317797.233467 -317697.233589         0.0
2  317797.233589  0.000061  317797.233589 -317597.233589         0.0
3  317797.233650  0.000061  317797.233589 -317497.233650         0.0
4  317797.243711  0.010122  317797.233650 -317397.243711         0.0
5  317797.243711  0.010000  317797.243711 -317297.253662         0.0
6  317797.253711  0.010000  317797.253662 -317297.253662         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:23]  Iteration: 52
[07/11 20:35:23]  Generator returned sat in 0.630884 secs.
[07/11 20:35:24]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + -1/2)[0m
[07/11 20:35:24]  Improved gap from 1/16384 to 0
[07/11 20:35:24]  Improved number of small numbers from 35 to 53 out of a max of 77
[07/11 20:35:24]  Verifer returned sat in 0.930237 secs.
[07/11 20:35:24]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  351834.453497  0.000244  351834.453369 -351834.453369         0.0
1  351834.453497  0.000061  351834.453369 -351734.453497         0.0
2  351834.453613  0.000244  351834.453497 -351634.453613         0.0
3  351834.463619  0.010122  351834.453613 -351534.463619         0.0
4  351834.463619  0.010000  351834.463619 -351434.473389         0.0
5  351834.473619  0.010000  351834.473558 -351334.483398         0.0
6  351834.483558  0.010000  351834.483398 -351334.483398         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:35:25]  Iteration: 53
[07/11 20:35:25]  Generator returned sat in 0.520858 secs.
[07/11 20:35:25]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:35:25]  Verifer returned unsat in 0.131646 secs.
[07/11 20:35:25]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:35:25]  Iteration: 54
[07/11 20:35:26]  Generator returned sat in 0.713928 secs.
[07/11 20:35:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:35:26]  Verifer returned unsat in 0.085019 secs.
[07/11 20:35:26]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:35:26]  Iteration: 55
[07/11 20:35:27]  Generator returned sat in 0.536647 secs.
[07/11 20:35:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 0)[0m
[07/11 20:35:27]  Verifer returned unsat in 0.118829 secs.
[07/11 20:35:27]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 0)[0m
[07/11 20:35:27]  Iteration: 56
[07/11 20:35:28]  Generator returned sat in 0.782936 secs.
[07/11 20:35:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:35:28]  Verifer returned unsat in 0.080875 secs.
[07/11 20:35:28]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:35:28]  Iteration: 57
[07/11 20:35:29]  Generator returned sat in 0.508571 secs.
[07/11 20:35:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:35:29]  Verifer returned unsat in 0.097614 secs.
[07/11 20:35:29]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:35:29]  Iteration: 58
[07/11 20:35:29]  Generator returned sat in 0.491195 secs.
[07/11 20:35:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:35:29]  Verifer returned unsat in 0.080018 secs.
[07/11 20:35:29]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:35:29]  Iteration: 59
[07/11 20:35:30]  Generator returned sat in 0.475898 secs.
[07/11 20:35:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:35:30]  Verifer returned unsat in 0.102657 secs.
[07/11 20:35:30]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:35:30]  Iteration: 60
[07/11 20:35:31]  Generator returned sat in 0.619726 secs.
[07/11 20:35:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 3/2)[0m
[07/11 20:35:31]  Verifer returned unsat in 0.129379 secs.
[07/11 20:35:31]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 3/2)[0m
[07/11 20:35:31]  Iteration: 61
[07/11 20:35:31]  Generator returned sat in 0.492013 secs.
[07/11 20:35:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 2)[0m
[07/11 20:35:31]  Verifer returned unsat in 0.044340 secs.
[07/11 20:35:31]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 2)[0m
[07/11 20:35:31]  Iteration: 62
[07/11 20:35:32]  Generator returned sat in 0.501096 secs.
[07/11 20:35:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 1/2)[0m
[07/11 20:35:32]  Verifer returned unsat in 0.045864 secs.
[07/11 20:35:32]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 1/2)[0m
[07/11 20:35:32]  Iteration: 63
[07/11 20:35:33]  Generator returned sat in 0.489388 secs.
[07/11 20:35:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 1)[0m
[07/11 20:35:33]  Verifer returned unsat in 0.056131 secs.
[07/11 20:35:33]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 1)[0m
[07/11 20:35:33]  Iteration: 64
[07/11 20:35:34]  Generator returned sat in 1.093220 secs.
[07/11 20:35:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:35:34]  Verifer returned unsat in 0.063634 secs.
[07/11 20:35:34]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:35:34]  Iteration: 65
[07/11 20:35:34]  Generator returned sat in 0.471682 secs.
[07/11 20:35:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:35:34]  Verifer returned unsat in 0.087268 secs.
[07/11 20:35:34]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:35:34]  Iteration: 66
[07/11 20:35:35]  Generator returned sat in 0.728878 secs.
[07/11 20:35:35]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 3/2)[0m
[07/11 20:35:35]  Verifer returned unsat in 0.043356 secs.
[07/11 20:35:35]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 3/2)[0m
[07/11 20:35:35]  Iteration: 67
[07/11 20:35:36]  Generator returned sat in 0.560597 secs.
[07/11 20:35:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:35:36]  Verifer returned unsat in 0.082911 secs.
[07/11 20:35:36]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:35:36]  Iteration: 68
[07/11 20:35:37]  Generator returned sat in 0.503434 secs.
[07/11 20:35:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:35:37]  Verifer returned unsat in 0.098405 secs.
[07/11 20:35:37]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:35:37]  Iteration: 69
[07/11 20:35:37]  Generator returned sat in 0.593294 secs.
[07/11 20:35:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 2)[0m
[07/11 20:35:37]  Improved gap from 720897/65536 to 21.875
[07/11 20:35:38]  Improved number of small numbers from 34 to 54 out of a max of 77
[07/11 20:35:38]  Verifer returned sat in 0.863379 secs.
[07/11 20:35:38]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  354565.970459   0.000244  354465.970215 -354465.970215         0.0
1  354565.970459   0.000244  354565.970215 -354465.970215         0.0
2  354565.970459   0.000244  354565.970287 -354387.845287         0.0
3  354611.845256  45.874969  354587.845287 -354311.845256         0.0
4  354633.595287  45.750000  354611.845256 -354233.720256         0.0
5  354661.845195  49.999939  354633.720256 -354161.845215         0.0
6  354679.470256  45.750000  354661.845215 -354161.844971         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:39]  Iteration: 70
[07/11 20:35:39]  Generator returned sat in 0.760387 secs.
[07/11 20:35:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 2)[0m
[07/11 20:35:39]  Improved gap from 0 to 7.8125
[07/11 20:35:40]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:35:40]  Verifer returned sat in 0.294767 secs.
[07/11 20:35:40]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  354589.970459   0.000244  354482.157959 -354582.157959         0.0
1  354589.970459   0.000244  354582.157959 -354489.970703         0.0
2  354609.595459  27.437500  354601.782959 -354409.595459         0.0
3  354609.595459   7.812256  354609.595459 -354329.220459         0.0
4  354637.032959  27.437500  354629.220459 -354237.032959         0.0
5  354674.376709  45.156250  354637.032959 -354174.376709         0.0
6  354674.376709  27.437500  354674.376709 -354082.189453         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:40]  Iteration: 71
[07/11 20:35:41]  Generator returned sat in 0.617407 secs.
[07/11 20:35:41]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:35:41]  Improved gap from 1/8192 to 4.6875
[07/11 20:35:41]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:35:41]  Verifer returned sat in 0.542537 secs.
[07/11 20:35:41]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  355517.023682   0.000244  355517.023682 -355535.085938         0.0
1  355539.773438  22.749756  355535.086182 -355439.773682         0.0
2  355539.773926   4.687744  355539.773682 -355344.461182         0.0
3  355562.523438  22.749756  355544.461182 -355262.523682         0.0
4  355567.211182  22.750000  355562.523682 -355167.211182         0.0
5  355605.336182  42.812500  355567.211182 -355105.336182         0.0
6  355605.336182  22.750000  355605.336182 -355105.335938         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:41]  Iteration: 72
[07/11 20:35:42]  Generator returned sat in 0.921457 secs.
[07/11 20:35:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 2)[0m
[07/11 20:35:42]  Verifer returned unsat in 0.083946 secs.
[07/11 20:35:42]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 2)[0m
[07/11 20:35:42]  Iteration: 73
[07/11 20:35:43]  Generator returned sat in 0.611213 secs.
[07/11 20:35:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:35:43]  Verifer returned unsat in 0.043366 secs.
[07/11 20:35:43]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:35:43]  Iteration: 74
[07/11 20:35:46]  Generator returned sat in 2.504715 secs.
[07/11 20:35:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:35:46]  Improved gap from 1/8192 to 23.4375
[07/11 20:35:46]  Improved number of small numbers from 46 to 50 out of a max of 77
[07/11 20:35:46]  Verifer returned sat in 0.580187 secs.
[07/11 20:35:46]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  406944.773682   0.000244  406844.773560 -406844.773560         0.0
1  406944.773682   0.000244  406944.773560 -406844.773560         0.0
2  406944.773682   0.000122  406944.773560 -406768.211060         0.0
3  406968.211182  23.437622  406968.211060 -406691.648682         0.0
4  407020.211060  52.000000  406993.648682 -406620.211060         0.0
5  407030.804932  37.156250  407020.211060 -406543.648560         0.0
6  407072.086243  51.875183  407043.648560 -406543.648438         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:35:47]  Iteration: 75
[07/11 20:35:51]  Generator returned sat in 4.193765 secs.
[07/11 20:35:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:35:51]  Improved gap from 0 to 6.25
[07/11 20:35:51]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:35:51]  Verifer returned sat in 0.362744 secs.
[07/11 20:35:51]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  428289.221191   0.000244  428270.470947 -428289.220947         0.0
1  428289.221191   0.000244  428289.220947 -428195.470947         0.0
2  428295.471191   6.250244  428295.470947 -428101.720947         0.0
3  428301.721191   6.250244  428301.720947 -428020.470947         0.0
4  428326.720947  25.000000  428320.470947 -427926.720947         0.0
5  428364.220947  43.750000  428326.720947 -427864.220947         0.0
6  428364.220947  25.000000  428364.220947 -427864.220947         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:52]  Iteration: 76
[07/11 20:35:52]  Generator returned sat in 0.842256 secs.
[07/11 20:35:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:35:53]  Improved gap from 67/12 to 6.25
[07/11 20:35:54]  Improved number of small numbers from 36 to 42 out of a max of 77
[07/11 20:35:54]  Verifer returned sat in 1.130033 secs.
[07/11 20:35:54]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  430484.283936   0.000244  430455.409363 -430455.409424         0.0
1  430484.283936   0.000244  430478.033997 -430384.283997         0.0
2  430490.533997  12.500000  430484.283997 -430290.533997         0.0
3  430511.908875  27.624878  430490.533997 -430211.908875         0.0
4  430518.471313  27.937317  430511.908875 -430118.471313         0.0
5  430561.908630  49.999756  430518.471313 -430061.908630         0.0
6  430561.908630  27.937317  430561.908630 -430061.908447         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:54]  Iteration: 77
[07/11 20:35:55]  Generator returned sat in 0.832009 secs.
[07/11 20:35:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:35:55]  Improved gap from 1/16384 to 4.6875
[07/11 20:35:56]  Improved number of small numbers from 30 to 38 out of a max of 77
[07/11 20:35:56]  Verifer returned sat in 0.911311 secs.
[07/11 20:35:56]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  431263.461426   0.000244  431231.867533 -431231.867676         0.0
1  431263.461426  31.593506  431263.461100 -431168.148600         0.0
2  431268.148722   4.687622  431268.148600 -431072.836100         0.0
3  431294.742289  26.593689  431272.836100 -430994.742289         0.0
4  431301.851634  29.015533  431294.742289 -430901.851634         0.0
5  431344.742167  49.999878  431301.851634 -430844.742167         0.0
6  431344.742167  29.015533  431344.742167 -430844.741943         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:35:56]  Iteration: 78
[07/11 20:35:57]  Generator returned sat in 1.106599 secs.
[07/11 20:35:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:35:57]  Improved gap from 1/16384 to 23.4375
[07/11 20:35:58]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:35:58]  Verifer returned sat in 0.421876 secs.
[07/11 20:35:58]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  431294.742188    0.000244  431006.554688 -431090.054688         0.0
1  431294.742188  199.999756  431090.054688 -431090.054688         0.0
2  431294.742432  204.687744  431290.054688 -431090.054688         0.0
3  431294.742432    4.687500  431294.742188 -431018.179688         0.0
4  431364.367188   69.625000  431340.929688 -430964.367188         0.0
5  431364.367188    0.010000  431364.367188 -430890.929443         0.0
6  431433.992188   69.625000  431390.929443 -430890.929443         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:35:58]  Iteration: 79
[07/11 20:36:00]  Generator returned sat in 2.598105 secs.
[07/11 20:36:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:01]  Improved gap from 1/16384 to 100
[07/11 20:36:01]  Improved number of small numbers from 53 to 63 out of a max of 77
[07/11 20:36:01]  Verifer returned sat in 0.338858 secs.
[07/11 20:36:01]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  379411.929932    0.000244  379411.929688 -379411.929688         0.0
1  379411.929932    0.000244  379411.929688 -379411.929688         0.0
2  379611.929443  199.999756  379511.929688 -379411.929688         0.0
3  379711.679932  199.750244  379711.679718 -379411.929688         0.0
4  380111.679779  400.000061  379711.929688 -379411.929688         0.0
5  380111.679779  200.999939  379911.929688 -379411.929688         0.0
6  380711.929749  800.000061  379911.929688 -379411.929688         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/11 20:36:01]  Iteration: 80
[07/11 20:36:03]  Generator returned sat in 1.667668 secs.
[07/11 20:36:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:03]  Improved gap from 0 to 7.8125
[07/11 20:36:04]  Improved number of small numbers from 54 to 66 out of a max of 77
[07/11 20:36:04]  Verifer returned sat in 0.762399 secs.
[07/11 20:36:04]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  381374.929443   0.000244  381355.476685 -381355.476807         0.0
1  381374.929443   0.000244  381367.117188 -381274.929688         0.0
2  381374.929932   7.812744  381374.929688 -381182.742188         0.0
3  381382.742432   7.812744  381382.742188 -381090.554932         0.0
4  381418.241943  35.499756  381405.325439 -381018.241943         0.0
5  381455.325317  49.999878  381418.241943 -380955.325317         0.0
6  381455.325317  35.499756  381455.325317 -380955.325195         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:04]  Iteration: 81
[07/11 20:36:05]  Generator returned sat in 1.151818 secs.
[07/11 20:36:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:06]  Improved gap from 1/16384 to 6.25
[07/11 20:36:06]  Improved number of small numbers from 30 to 38 out of a max of 77
[07/11 20:36:06]  Verifer returned sat in 1.140946 secs.
[07/11 20:36:06]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  380647.594971   0.000244  380615.970269 -380615.970459         0.0
1  380647.594971   0.000244  380641.345085 -380547.595085         0.0
2  380647.595208   6.250122  380647.595085 -380453.845085         0.0
3  380675.470024  27.874939  380653.845085 -380375.470024         0.0
4  380682.657494  28.812408  380675.470024 -380282.657494         0.0
5  380725.469902  49.999878  380682.657494 -380225.469902         0.0
6  380725.469902  28.812408  380725.469902 -380225.469727         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:07]  Iteration: 82
[07/11 20:36:08]  Generator returned sat in 1.022871 secs.
[07/11 20:36:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:08]  Verifer returned unsat in 0.102214 secs.
[07/11 20:36:08]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:08]  Iteration: 83
[07/11 20:36:09]  Generator returned sat in 0.933805 secs.
[07/11 20:36:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:09]  Verifer returned unsat in 0.039626 secs.
[07/11 20:36:09]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:09]  Iteration: 84
[07/11 20:36:10]  Generator returned sat in 1.160503 secs.
[07/11 20:36:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:10]  Verifer returned unsat in 0.037758 secs.
[07/11 20:36:10]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:10]  Iteration: 85
[07/11 20:36:11]  Generator returned sat in 0.971817 secs.
[07/11 20:36:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:11]  Verifer returned unsat in 0.065644 secs.
[07/11 20:36:11]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:11]  Iteration: 86
[07/11 20:36:12]  Generator returned sat in 1.072582 secs.
[07/11 20:36:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2)[0m
[07/11 20:36:12]  Improved gap from 0 to 23.4375
[07/11 20:36:13]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:36:13]  Verifer returned sat in 0.367644 secs.
[07/11 20:36:13]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  382408.804199    0.000244  382408.803955 -382408.804199         0.0
1  382508.803955  100.000000  382484.366699 -382408.804199         0.0
2  382508.804199   24.437500  382508.804199 -382332.241699         0.0
3  382532.241699   23.437500  382532.241699 -382255.679199         0.0
4  382580.116699   47.875000  382556.679199 -382180.116699         0.0
5  382605.554199   48.875000  382580.116699 -382106.678711         0.0
6  382627.991699   47.875000  382606.678955 -382106.678711         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:13]  Iteration: 87
[07/11 20:36:14]  Generator returned sat in 1.110331 secs.
[07/11 20:36:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:15]  Improved gap from 1/8192 to 10.9375
[07/11 20:36:15]  Improved number of small numbers from 53 to 60 out of a max of 77
[07/11 20:36:15]  Verifer returned sat in 0.890170 secs.
[07/11 20:36:15]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  383156.075439   0.000244  383130.533610 -383130.533691         0.0
1  383156.075439   0.000244  383156.075277 -383067.012777         0.0
2  383167.012777  10.937500  383167.012777 -382977.950277         0.0
3  383198.366943  31.354167  383177.950277 -382898.366943         0.0
4  383213.096110  35.145833  383201.491943 -382813.096110         0.0
5  383248.241943  46.750000  383213.096110 -382748.241943         0.0
6  383248.241943  35.145833  383248.241943 -382659.179443         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:15]  Iteration: 88
[07/11 20:36:18]  Generator returned sat in 2.391631 secs.
[07/11 20:36:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:36:18]  Improved gap from 175/16 to 12.5
[07/11 20:36:19]  Improved number of small numbers from 34 to 41 out of a max of 77
[07/11 20:36:19]  Verifer returned sat in 1.026244 secs.
[07/11 20:36:19]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  383119.836171   0.000244  383085.711232 -383085.711426         0.0
1  383119.836171   0.000244  383102.586293 -383019.836171         0.0
2  383119.836171   0.000244  383119.836171 -382932.336171         0.0
3  383132.336293  12.500122  383132.336171 -382858.335938         0.0
4  383170.836171  38.500000  383158.336171 -382770.836171         0.0
5  383208.336049  49.999878  383170.836171 -382708.336049         0.0
6  383209.336171  38.500000  383208.336049 -382708.335938         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:19]  Iteration: 89
[07/11 20:36:21]  Generator returned sat in 1.466624 secs.
[07/11 20:36:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:36:21]  Verifer returned unsat in 0.052962 secs.
[07/11 20:36:21]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:36:21]  Iteration: 90
[07/11 20:36:22]  Generator returned sat in 1.106574 secs.
[07/11 20:36:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:22]  Verifer returned unsat in 0.045317 secs.
[07/11 20:36:22]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:22]  Iteration: 91
[07/11 20:36:23]  Generator returned sat in 1.059935 secs.
[07/11 20:36:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:23]  Verifer returned unsat in 0.059249 secs.
[07/11 20:36:23]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:23]  Iteration: 92
[07/11 20:36:24]  Generator returned sat in 1.080436 secs.
[07/11 20:36:24]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:25]  Verifer returned unsat in 0.083507 secs.
[07/11 20:36:25]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:25]  Iteration: 93
[07/11 20:36:26]  Generator returned sat in 1.152075 secs.
[07/11 20:36:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:26]  Verifer returned unsat in 0.055459 secs.
[07/11 20:36:26]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:26]  Iteration: 94
[07/11 20:36:27]  Generator returned sat in 1.152542 secs.
[07/11 20:36:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-2] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:36:27]  Improved gap from 0 to 15.625
[07/11 20:36:28]  Improved number of small numbers from 32 to 43 out of a max of 77
[07/11 20:36:28]  Verifer returned sat in 0.737564 secs.
[07/11 20:36:28]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  398482.959229   0.000244  398446.459604 -398446.459717         0.0
1  398482.959229   0.000244  398467.334360 -398382.959360         0.0
2  398482.959360  15.625000  398482.959360 -398298.584360         0.0
3  398498.584482  15.625122  398498.584360 -398219.458984         0.0
4  398553.833994  55.249634  398519.459116 -398153.833994         0.0
5  398566.834116  47.375000  398553.833994 -398069.458994         0.0
6  398609.083628  55.249634  398569.458994 -398069.458984         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:36:28]  Iteration: 95
[07/11 20:36:31]  Generator returned sat in 3.231006 secs.
[07/11 20:36:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:36:32]  Improved gap from 1/8192 to 15.625
[07/11 20:36:32]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:36:32]  Verifer returned sat in 0.423190 secs.
[07/11 20:36:32]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  398453.063721   0.000244  398453.063477 -398453.063477         0.0
1  398468.688477  15.625000  398468.688477 -398384.313477         0.0
2  398486.396973  17.708496  398486.396484 -398302.021484         0.0
3  398502.021729  15.625244  398502.021484 -398225.459229         0.0
4  398541.083984  39.062500  398525.459229 -398141.084229         0.0
5  398575.458984  49.999756  398541.084229 -398075.458984         0.0
6  398580.146729  39.062500  398575.458984 -398069.459229         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:32]  Iteration: 96
[07/11 20:36:35]  Generator returned sat in 2.714372 secs.
[07/11 20:36:35]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:36:35]  Improved gap from 0 to 4.6875
[07/11 20:36:36]  Improved number of small numbers from 30 to 39 out of a max of 77
[07/11 20:36:36]  Verifer returned sat in 1.170993 secs.
[07/11 20:36:36]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  430643.501221   0.000244  430635.688660 -430643.500977         0.0
1  430643.501221   0.000244  430643.501190 -430548.188690         0.0
2  430648.188812   4.687622  430648.188690 -430452.876190         0.0
3  430673.188629  24.999939  430652.876190 -430373.188629         0.0
4  430677.876251  25.000061  430673.188629 -430281.000977         0.0
5  430723.188507  49.999878  430681.001160 -430223.188507         0.0
6  430723.188507  25.000061  430723.188507 -430223.188477         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:36]  Iteration: 97
[07/11 20:36:38]  Generator returned sat in 1.429786 secs.
[07/11 20:36:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:36:38]  Improved gap from 0 to 7.8125
[07/11 20:36:38]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:36:38]  Verifer returned sat in 0.465824 secs.
[07/11 20:36:38]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  430652.875977   0.000244  430637.251221 -430637.251221         0.0
1  430652.875977  15.624756  430645.063721 -430552.876221         0.0
2  430652.876221   7.812500  430652.876221 -430460.688721         0.0
3  430683.605225  30.729004  430660.688721 -430383.605225         0.0
4  430688.032471  27.343750  430683.605225 -430291.417725         0.0
5  430733.604980  49.999756  430691.417725 -430233.604980         0.0
6  430733.604980  27.343750  430733.604980 -430233.604980         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:39]  Iteration: 98
[07/11 20:36:40]  Generator returned sat in 1.332893 secs.
[07/11 20:36:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:36:40]  Improved gap from 97067/16384 to 10.9375
[07/11 20:36:41]  Improved number of small numbers from 30 to 77 out of a max of 77
[07/11 20:36:41]  Verifer returned sat in 0.514176 secs.
[07/11 20:36:41]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  432388.282715   0.000244  432364.845459 -432377.345215         0.0
1  432388.282715   0.000244  432377.345459 -432288.282959         0.0
2  432388.282959  10.937500  432388.282959 -432199.220459         0.0
3  432427.345215  39.062256  432399.220459 -432127.345215         0.0
4  432435.157959  35.937500  432427.345215 -432038.282715         0.0
5  432477.344971  49.999756  432441.407715 -431977.344971         0.0
6  432477.345215  35.937500  432477.344971 -431977.344971         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:41]  Iteration: 99
[07/11 20:36:42]  Generator returned sat in 1.581225 secs.
[07/11 20:36:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:36:43]  Improved gap from 175/16 to 14.0625
[07/11 20:36:43]  Improved number of small numbers from 36 to 78 out of a max of 78
[07/11 20:36:43]  Verifer returned sat in 0.656907 secs.
[07/11 20:36:43]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  434833.536133   0.000244  434812.442383 -434812.442383         0.0
1  434833.536133   0.000244  434833.536133 -434747.598633         0.0
2  434847.598633  14.062500  434847.598633 -434661.661133         0.0
3  434861.661133  14.062500  434861.661133 -434591.348145         0.0
4  434917.911133  56.250000  434891.348145 -434517.911133         0.0
5  434941.347900  49.999756  434917.911133 -434441.347900         0.0
6  434974.161133  56.250000  434941.347900 -434441.347900         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:36:43]  Iteration: 100
[07/11 20:36:46]  Generator returned sat in 2.215213 secs.
[07/11 20:36:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:36:46]  Improved gap from 1/8192 to 6.25
[07/11 20:36:47]  Improved number of small numbers from 30 to 36 out of a max of 77
[07/11 20:36:47]  Verifer returned sat in 1.355261 secs.
[07/11 20:36:47]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  435771.209751   0.000244  435749.334812 -435749.334961         0.0
1  435771.209751   0.000244  435764.959751 -435671.209751         0.0
2  435771.209751   0.000244  435771.209751 -435577.459751         0.0
3  435811.834629  40.624878  435777.459751 -435511.834629         0.0
4  435818.084629  40.624878  435811.834629 -435418.084629         0.0
5  435861.834507  49.999878  435818.084629 -435361.834507         0.0
6  435861.834507  35.937439  435861.834507 -435361.834473         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:36:47]  Iteration: 101
[07/11 20:36:49]  Generator returned sat in 2.026601 secs.
[07/11 20:36:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:36:50]  Improved gap from 0 to 0
[07/11 20:36:50]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:36:50]  Verifer returned sat in 0.440361 secs.
[07/11 20:36:50]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  511916.434570  0.000244  511916.414551 -511916.434570         0.0
1  511916.434570  0.000244  511916.434570 -511816.434814         0.0
2  511916.434814  0.000244  511916.434814 -511716.434814         0.0
3  511916.435059  0.000244  511916.434814 -511616.435059         0.0
4  511916.445068  0.010254  511916.435059 -511516.445068         0.0
5  511916.445068  0.010000  511916.445068 -511416.445068         0.0
6  511916.455322  0.010254  511916.445312 -511416.445068         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:36:50]  Iteration: 102
[07/11 20:37:05]  Generator returned sat in 14.358497 secs.
[07/11 20:37:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -2S_f[0][t-3] + 1S_f[0][t-4] + 2)[0m
[07/11 20:37:05]  Improved gap from 0 to 35.9375
[07/11 20:37:06]  Improved number of small numbers from 34 to 48 out of a max of 77
[07/11 20:37:06]  Verifer returned sat in 0.952086 secs.
[07/11 20:37:06]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  510637.632568    0.000244  510394.758901 -510433.382925         0.0
1  510637.632568    0.000244  510433.382925 -510433.382925         0.0
2  510637.632568    0.000244  510633.382925 -510433.382925         0.0
3  510637.632568    0.000244  510637.632437 -510373.569937         0.0
4  510809.507437  171.875000  510759.507559 -510373.569937         0.0
5  510809.507437   49.999756  510773.569937 -510309.507437         0.0
6  510921.320303  147.750366  510809.507437 -510309.507437         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:37:06]  Iteration: 103
[07/11 20:37:08]  Generator returned sat in 1.948025 secs.
[07/11 20:37:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-3] + 2)[0m
[07/11 20:37:08]  Verifer returned unsat in 0.046775 secs.
[07/11 20:37:08]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-3] + 2)[0m
[07/11 20:37:08]  Iteration: 104
[07/11 20:37:10]  Generator returned sat in 1.670377 secs.
[07/11 20:37:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:37:10]  Improved gap from 0 to 23.4375
[07/11 20:37:10]  Improved number of small numbers from 48 to 63 out of a max of 77
[07/11 20:37:10]  Verifer returned sat in 0.629175 secs.
[07/11 20:37:10]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  509860.683838    0.000244  509661.619385 -509761.619385         0.0
1  509860.683838  199.064209  509860.683594 -509761.619385         0.0
2  509940.746826   80.063232  509940.746582 -509761.619385         0.0
3  509968.184082   27.437500  509968.184082 -509691.621582         0.0
4  510018.183960   49.999878  509991.621582 -509618.183960         0.0
5  510018.183960   26.562256  510018.183960 -509541.621460         0.0
6  510068.183838   49.999878  510041.621460 -509541.621338         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:37:11]  Iteration: 105
[07/11 20:37:12]  Generator returned sat in 1.648017 secs.
[07/11 20:37:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + 2)[0m
[07/11 20:37:12]  Verifer returned unsat in 0.053087 secs.
[07/11 20:37:12]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + 2)[0m
[07/11 20:37:13]  Iteration: 106
[07/11 20:37:14]  Generator returned sat in 1.553291 secs.
[07/11 20:37:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:37:14]  Verifer returned unsat in 0.062202 secs.
[07/11 20:37:14]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:37:14]  Iteration: 107
[07/11 20:37:16]  Generator returned sat in 1.489671 secs.
[07/11 20:37:16]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:37:16]  Improved gap from 0 to 7.8125
[07/11 20:37:16]  Improved number of small numbers from 30 to 77 out of a max of 77
[07/11 20:37:16]  Verifer returned sat in 0.557875 secs.
[07/11 20:37:16]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  510026.718262   0.000244  509789.430176 -509889.430176         0.0
1  510026.718262   0.000244  509989.430176 -509889.430176         0.0
2  510026.718506  37.288330  510026.718262 -509856.973389         0.0
3  510056.973633  30.255371  510056.973633 -509764.786133         0.0
4  510075.416504  18.442871  510067.604004 -509675.416504         0.0
5  510117.603760  49.999756  510075.416504 -509617.603760         0.0
6  510117.603760  18.442871  510117.603760 -509617.603760         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:37:17]  Iteration: 108
[07/11 20:37:22]  Generator returned sat in 5.602128 secs.
[07/11 20:37:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:37:23]  Improved gap from 0 to 10.9375
[07/11 20:37:23]  Improved number of small numbers from 36 to 46 out of a max of 77
[07/11 20:37:23]  Verifer returned sat in 1.046460 secs.
[07/11 20:37:23]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  509657.473389   0.000244  509620.223602 -509620.223633         0.0
1  509657.473389   0.000244  509646.536011 -509557.473511         0.0
2  509657.473633  10.937622  509657.473511 -509468.411133         0.0
3  509671.036072  13.562561  509671.035950 -509398.660645         0.0
4  509737.723206  66.687256  509698.660828 -509337.723206         0.0
5  509748.660706  49.999878  509737.723206 -509248.660706         0.0
6  509804.410461  66.687256  509748.660706 -509248.660645         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:37:24]  Iteration: 109
[07/11 20:37:26]  Generator returned sat in 2.653412 secs.
[07/11 20:37:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:37:27]  Improved gap from 0 to 17.1875
[07/11 20:37:28]  Improved number of small numbers from 30 to 41 out of a max of 77
[07/11 20:37:28]  Verifer returned sat in 1.118015 secs.
[07/11 20:37:28]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  509045.304688   0.000244  509045.304516 -509051.554688         0.0
1  509078.117230  32.812714  509060.929730 -508978.117230         0.0
2  509078.117230   0.000244  509078.117230 -508895.304730         0.0
3  509095.304852  17.187622  509095.304730 -508812.492432         0.0
4  509143.742657  48.437927  509115.617474 -508748.429688         0.0
5  509165.617352  49.999878  509148.429852 -508665.617432         0.0
6  509196.867779  48.437927  509165.617432 -508665.617188         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:37:28]  Iteration: 110
[07/11 20:37:34]  Generator returned sat in 5.830188 secs.
[07/11 20:37:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:37:34]  Improved gap from 1/16384 to 12.5
[07/11 20:37:35]  Improved number of small numbers from 36 to 43 out of a max of 77
[07/11 20:37:35]  Verifer returned sat in 1.249535 secs.
[07/11 20:37:35]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  508304.824219   0.000244  508279.324658 -508291.824463         0.0
1  508304.824414  25.499756  508291.824658 -508204.824414         0.0
2  508304.824414   0.000244  508304.824414 -508117.324414         0.0
3  508317.324536  12.500122  508317.324414 -508029.824463         0.0
4  508350.574414  33.250000  508338.074414 -507950.574414         0.0
5  508388.074292  49.999878  508350.574414 -507888.074292         0.0
6  508388.074292  33.250000  508388.074292 -507888.074219         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:37:35]  Iteration: 111
[07/11 20:37:43]  Generator returned sat in 7.241326 secs.
[07/11 20:37:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:37:43]  Improved gap from 1/16384 to 6.25
[07/11 20:37:44]  Improved number of small numbers from 30 to 37 out of a max of 77
[07/11 20:37:44]  Verifer returned sat in 1.218205 secs.
[07/11 20:37:44]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  507856.006721   0.000244  507835.944261 -507835.944336         0.0
1  507856.006721   0.000244  507849.756721 -507756.006721         0.0
2  507856.006721   0.000244  507856.006721 -507662.256836         0.0
3  507897.006585  40.999864  507864.006694 -507597.006585         0.0
4  507903.256585  39.249891  507897.006585 -507503.256585         0.0
5  507947.006463  49.999878  507903.256585 -507447.006463         0.0
6  507947.006463  39.249891  507947.006463 -507447.006348         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:37:44]  Iteration: 112
[07/11 20:37:47]  Generator returned sat in 2.915620 secs.
[07/11 20:37:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1/2)[0m
[07/11 20:37:47]  Verifer returned unsat in 0.032791 secs.
[07/11 20:37:47]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1/2)[0m
[07/11 20:37:47]  Iteration: 113
[07/11 20:37:50]  Generator returned sat in 2.427904 secs.
[07/11 20:37:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:37:50]  Verifer returned unsat in 0.066925 secs.
[07/11 20:37:50]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:37:50]  Iteration: 114
[07/11 20:37:52]  Generator returned sat in 1.964995 secs.
[07/11 20:37:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:37:52]  Verifer returned unsat in 0.067946 secs.
[07/11 20:37:52]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:37:52]  Iteration: 115
[07/11 20:37:54]  Generator returned sat in 1.670482 secs.
[07/11 20:37:54]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:37:54]  Verifer returned unsat in 0.043443 secs.
[07/11 20:37:54]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:37:54]  Iteration: 116
[07/11 20:37:56]  Generator returned sat in 2.051671 secs.
[07/11 20:37:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:37:56]  Improved gap from 1/16384 to 14.0625
[07/11 20:37:57]  Improved number of small numbers from 30 to 43 out of a max of 77
[07/11 20:37:57]  Verifer returned sat in 1.123304 secs.
[07/11 20:37:57]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  464514.314209   0.000244  464499.935308 -464499.935547         0.0
1  464514.314209   0.000244  464514.314077 -464428.517090         0.0
2  464528.517263  14.203186  464528.517141 -464342.579641         0.0
3  464542.579763  14.062622  464542.579641 -464257.204346         0.0
4  464593.141775  50.562134  464557.204397 -464193.141775         0.0
5  464607.204275  49.999878  464593.141775 -464107.204346         0.0
6  464643.703909  50.562134  464607.204346 -464107.204346         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:37:57]  Iteration: 117
[07/11 20:38:02]  Generator returned sat in 4.190019 secs.
[07/11 20:38:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -3/2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:38:02]  Improved gap from 1/8192 to 17.1875
[07/11 20:38:03]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:38:03]  Verifer returned sat in 0.857990 secs.
[07/11 20:38:03]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  464469.839844    0.000244  464214.214600 -464314.214600         0.0
1  464469.839844  255.625000  464414.214600 -464314.214600         0.0
2  464469.839844    0.000244  464469.839600 -464308.214600         0.0
3  464508.214600   38.375000  464508.214600 -464225.402100         0.0
4  464542.589600   34.375000  464525.402100 -464142.589600         0.0
5  464572.339600   46.937500  464542.589600 -464072.339844         0.0
6  464576.964600   34.375000  464572.339844 -464072.339600         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:38:03]  Iteration: 118
[07/11 20:38:05]  Generator returned sat in 2.510525 secs.
[07/11 20:38:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:38:06]  Verifer returned unsat in 0.085107 secs.
[07/11 20:38:06]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:38:06]  Iteration: 119
[07/11 20:38:08]  Generator returned sat in 2.163730 secs.
[07/11 20:38:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:38:08]  Improved gap from 1/16384 to 17.1875
[07/11 20:38:08]  Improved number of small numbers from 59 to 70 out of a max of 77
[07/11 20:38:08]  Verifer returned sat in 0.457886 secs.
[07/11 20:38:08]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  464491.027100   0.000244  464449.589600 -464449.589600         0.0
1  464491.027100   0.000244  464473.839600 -464391.027100         0.0
2  464491.027344  17.187744  464491.027100 -464308.214600         0.0
3  464508.214844  17.187744  464508.214600 -464235.464355         0.0
4  464563.777100  55.562500  464535.464355 -464163.777100         0.0
5  464585.464233  49.999878  464563.777100 -464085.464233         0.0
6  464619.339600  55.562500  464585.464233 -464085.464111         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:38:09]  Iteration: 120
[07/11 20:38:11]  Generator returned sat in 2.143129 secs.
[07/11 20:38:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/11 20:38:11]  Verifer returned unsat in 0.043237 secs.
[07/11 20:38:11]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/11 20:38:11]  Iteration: 121
[07/11 20:38:13]  Generator returned sat in 2.395877 secs.
[07/11 20:38:13]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:38:14]  Improved gap from 1/16384 to 9.375
[07/11 20:38:14]  Improved number of small numbers from 30 to 39 out of a max of 77
[07/11 20:38:14]  Verifer returned sat in 0.813923 secs.
[07/11 20:38:14]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  484635.099854   0.000244  484600.749974 -484600.750000         0.0
1  484635.099854   0.000244  484635.099648 -484544.474648         0.0
2  484644.474771   9.375122  484644.474648 -484453.849648         0.0
3  484653.849771   9.375122  484653.849648 -484363.224854         0.0
4  484691.774486  37.924837  484679.599567 -484291.774486         0.0
5  484729.599445  49.999878  484691.774486 -484229.599445         0.0
6  484729.599445  37.824837  484729.599445 -484229.599365         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:38:14]  Iteration: 122
[07/11 20:38:17]  Generator returned sat in 2.582822 secs.
[07/11 20:38:17]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:38:17]  Improved gap from 0 to 21.875
[07/11 20:38:18]  Improved number of small numbers from 32 to 41 out of a max of 77
[07/11 20:38:18]  Verifer returned sat in 0.976856 secs.
[07/11 20:38:18]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  484592.225098   0.000244  484592.224893 -484592.225098         0.0
1  484620.349893  28.125000  484620.349771 -484544.474609         0.0
2  484666.349648  45.999878  484644.474648 -484466.349648         0.0
3  484666.349771  21.875122  484666.349648 -484390.224609         0.0
4  484718.349526  51.999878  484690.224648 -484318.349526         0.0
5  484740.224526  49.999878  484718.349526 -484240.224609         0.0
6  484770.349404  51.999878  484740.224609 -484240.224365         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:38:18]  Iteration: 123
[07/11 20:38:24]  Generator returned sat in 5.087119 secs.
[07/11 20:38:24]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:38:24]  Improved gap from 1/16384 to 14.0625
[07/11 20:38:24]  Improved number of small numbers from 63 to 73 out of a max of 77
[07/11 20:38:24]  Verifer returned sat in 0.542539 secs.
[07/11 20:38:24]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  506540.120850   0.000244  506510.954346 -506510.954346         0.0
1  506540.120850   0.000244  506526.058350 -506440.120850         0.0
2  506540.121094  14.062744  506540.120850 -506354.183350         0.0
3  506554.183594  14.062744  506554.183350 -506268.246094         0.0
4  506604.964355  50.781006  506569.026978 -506204.964355         0.0
5  506618.245728  49.218750  506604.964355 -506119.026855         0.0
6  506655.745361  50.781006  506619.026855 -506119.026855         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:38:24]  Iteration: 124
[07/11 20:38:27]  Generator returned sat in 2.673301 secs.
[07/11 20:38:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-4] + 0)[0m
[07/11 20:38:27]  Improved gap from 1/32768 to 15.625
[07/11 20:38:28]  Improved number of small numbers from 63 to 77 out of a max of 77
[07/11 20:38:28]  Verifer returned sat in 0.342179 secs.
[07/11 20:38:28]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  513955.933105   0.000244  513916.870850 -513916.870850         0.0
1  513955.933105   0.000244  513929.371094 -513855.933350         0.0
2  513955.933594  26.562500  513955.933350 -513771.558350         0.0
3  513987.183105  31.249756  513971.558350 -513687.183350         0.0
4  514018.433350  46.875000  513987.183350 -513618.433350         0.0
5  514037.183105  49.999756  514018.433350 -513537.183105         0.0
6  514065.308350  46.875000  514037.183105 -513537.183105         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:38:28]  Iteration: 125
[07/11 20:38:30]  Generator returned sat in 2.428670 secs.
[07/11 20:38:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + 0)[0m
[07/11 20:38:31]  Improved gap from 0 to 0
[07/11 20:38:31]  Improved number of small numbers from 48 to 72 out of a max of 77
[07/11 20:38:31]  Verifer returned sat in 0.413467 secs.
[07/11 20:38:31]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  515073.682617  0.000244  515073.681885 -515073.682129         0.0
1  515073.682617  0.000244  515073.682129 -514973.682617         0.0
2  515073.682617  0.000488  515073.682617 -514873.682617         0.0
3  515073.682861  0.000244  515073.682617 -514773.682861         0.0
4  515073.692617  0.010000  515073.692383 -514673.692617         0.0
5  515073.702637  0.010254  515073.692617 -514573.702637         0.0
6  515073.702637  0.010000  515073.702637 -514573.702637         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:38:31]  Iteration: 126
[07/11 20:38:34]  Generator returned sat in 2.509701 secs.
[07/11 20:38:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 0)[0m
[07/11 20:38:34]  Improved gap from 0 to 0
[07/11 20:38:34]  Improved number of small numbers from 54 to 77 out of a max of 77
[07/11 20:38:34]  Verifer returned sat in 0.301969 secs.
[07/11 20:38:34]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  571421.682617   0.000244  571388.349365 -571388.349365         0.0
1  571421.682617   0.000244  571388.349609 -571321.682617         0.0
2  571421.682617  33.333008  571421.682617 -571221.682617         0.0
3  571421.682861   0.000244  571421.682861 -571121.682861         0.0
4  571471.682617  49.999756  571421.682861 -571071.682617         0.0
5  571471.682617   0.010000  571471.682617 -570971.682617         0.0
6  571521.682373  49.999756  571471.682617 -570971.682617         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:38:34]  Iteration: 127
[07/11 20:38:38]  Generator returned sat in 3.614252 secs.
[07/11 20:38:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/11 20:38:39]  Improved gap from 0 to 17.1875
[07/11 20:38:40]  Improved number of small numbers from 34 to 51 out of a max of 77
[07/11 20:38:40]  Verifer returned sat in 1.963249 secs.
[07/11 20:38:40]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  572510.259277   0.000244  572257.133173 -572355.571533         0.0
1  572510.259277   0.000244  572455.571406 -572355.571533         0.0
2  572510.259277   0.000244  572510.259150 -572327.446777         0.0
3  572544.634272  34.375122  572544.634150 -572261.821650         0.0
4  572579.009150  34.375000  572561.821650 -572179.009150         0.0
5  572611.821528  49.999878  572579.009150 -572111.821533         0.0
6  572613.384150  34.375000  572611.821533 -572111.821289         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:38:40]  Iteration: 128
[07/11 20:38:47]  Generator returned sat in 6.467774 secs.
[07/11 20:38:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:38:47]  Improved gap from 1/16384 to 3.125
[07/11 20:38:48]  Improved number of small numbers from 37 to 78 out of a max of 78
[07/11 20:38:48]  Verifer returned sat in 0.793599 secs.
[07/11 20:38:48]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  571181.926514   0.000244  571173.301514 -571173.301514         0.0
1  571181.926514   0.000244  571181.926514 -571085.051514         0.0
2  571185.051514   3.125000  571185.051514 -570988.176514         0.0
3  571188.176514   3.125000  571188.176514 -570891.301514         0.0
4  571210.926514  22.750000  571207.801514 -570810.926514         0.0
5  571255.301514  47.500000  571210.926514 -570755.301514         0.0
6  571255.301514  22.750000  571255.301514 -570755.301270         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:38:48]  Iteration: 129
[07/11 20:38:53]  Generator returned sat in 4.915690 secs.
[07/11 20:38:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:38:54]  Improved gap from 0 to 14.0625
[07/11 20:38:55]  Improved number of small numbers from 38 to 50 out of a max of 77
[07/11 20:38:55]  Verifer returned sat in 1.618779 secs.
[07/11 20:38:55]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  571210.846924   0.000244  570958.888360 -571058.888360         0.0
1  571210.846924   0.000244  571158.888360 -571058.888360         0.0
2  571210.846924   0.000244  571210.846694 -571024.909424         0.0
3  571257.034194  46.187500  571242.971694 -570957.034194         0.0
4  571271.096694  28.125000  571257.034194 -570871.096694         0.0
5  571302.336277  45.302083  571271.096694 -570802.336277         0.0
6  571302.336277  28.125000  571302.336277 -570802.336182         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:38:55]  Iteration: 130
[07/11 20:38:59]  Generator returned sat in 3.760521 secs.
[07/11 20:38:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/11 20:38:59]  Improved gap from 0 to 23.4375
[07/11 20:39:00]  Improved number of small numbers from 32 to 39 out of a max of 77
[07/11 20:39:00]  Verifer returned sat in 1.078573 secs.
[07/11 20:39:00]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  147667.039062    0.000244  147567.038976 -147667.038818         0.0
1  147667.039062    0.000244  147667.038976 -147662.038549         0.0
2  147862.038671  194.999695  147862.038549 -147662.038549         0.0
3  147862.038671    0.000122  147862.038549 -147585.476049         0.0
4  148009.038122  146.999573  147959.038244 -147585.476049         0.0
5  148009.038122   49.999756  147985.476049 -147509.038122         0.0
6  148124.132452  138.656403  148009.038122 -147509.038122         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:39:00]  Iteration: 131
[07/11 20:39:03]  Generator returned sat in 3.248448 secs.
[07/11 20:39:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-3] + 2)[0m
[07/11 20:39:04]  Verifer returned unsat in 0.048949 secs.
[07/11 20:39:04]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-3] + 2)[0m
[07/11 20:39:04]  Iteration: 132
[07/11 20:39:06]  Generator returned sat in 2.641449 secs.
[07/11 20:39:06]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:39:06]  Verifer returned unsat in 0.078300 secs.
[07/11 20:39:06]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:39:06]  Iteration: 133
[07/11 20:39:09]  Generator returned sat in 2.641349 secs.
[07/11 20:39:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/11 20:39:09]  Verifer returned unsat in 0.048674 secs.
[07/11 20:39:09]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/11 20:39:09]  Iteration: 134
[07/11 20:39:12]  Generator returned sat in 2.669803 secs.
[07/11 20:39:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + 2)[0m
[07/11 20:39:12]  Verifer returned unsat in 0.024126 secs.
[07/11 20:39:12]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + 2)[0m
[07/11 20:39:12]  Iteration: 135
[07/11 20:39:15]  Generator returned sat in 2.482714 secs.
[07/11 20:39:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:39:15]  Improved gap from 1/32768 to 12.5
[07/11 20:39:16]  Improved number of small numbers from 30 to 39 out of a max of 77
[07/11 20:39:16]  Verifer returned sat in 0.841976 secs.
[07/11 20:39:16]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  146576.382080   0.000244  146530.382192 -146530.382324         0.0
1  146576.382080   0.000244  146576.382070 -146488.882070         0.0
2  146588.882131  12.500061  146588.882070 -146401.382070         0.0
3  146601.382131  12.500061  146601.382070 -146313.882080         0.0
4  146668.131948  66.749878  146630.632009 -146268.131948         0.0
5  146680.631948  49.999939  146668.131948 -146180.631948         0.0
6  146734.756857  66.624908  146680.631948 -146180.631836         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:39:16]  Iteration: 136
[07/11 20:39:21]  Generator returned sat in 4.915197 secs.
[07/11 20:39:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:39:21]  Improved gap from 0 to 14.0625
[07/11 20:39:22]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:39:22]  Verifer returned sat in 0.613380 secs.
[07/11 20:39:22]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  146568.126709   0.000244  146540.001953 -146540.001953         0.0
1  146568.126709   0.000244  146554.064453 -146468.126953         0.0
2  146583.751465  29.687012  146569.688965 -146383.751465         0.0
3  146583.751465  14.062500  146583.751465 -146297.813965         0.0
4  146618.907715  35.156250  146604.845215 -146218.907715         0.0
5  146654.844971  49.999756  146618.907715 -146154.844971         0.0
6  146654.844971  35.156250  146654.844971 -146154.844971         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:39:22]  Iteration: 137
[07/11 20:39:25]  Generator returned sat in 3.131387 secs.
[07/11 20:39:25]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:39:25]  Improved gap from 0 to 0
[07/11 20:39:26]  Improved number of small numbers from 30 to 35 out of a max of 77
[07/11 20:39:26]  Verifer returned sat in 0.812279 secs.
[07/11 20:39:26]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  181713.949910  0.000244  181713.929788 -181713.949707         0.0
1  181713.949910  0.000244  181713.949788 -181613.949910         0.0
2  181713.949910  0.000122  181713.949910 -181513.949910         0.0
3  181713.950032  0.000122  181713.949910 -181413.950195         0.0
4  181713.960032  0.010122  181713.960032 -181313.960032         0.0
5  181713.980337  0.020305  181713.960032 -181213.980337         0.0
6  181713.980337  0.010122  181713.980337 -181213.980225         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:39:26]  Iteration: 138
[07/11 20:39:30]  Generator returned sat in 4.149937 secs.
[07/11 20:39:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:39:31]  Improved gap from 0 to 10.9375
[07/11 20:39:31]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:39:31]  Verifer returned sat in 0.554124 secs.
[07/11 20:39:31]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  181679.574463   0.000244  181646.761963 -181646.762207         0.0
1  181679.574463   0.000244  181668.636963 -181579.574463         0.0
2  181679.574707  10.937744  181679.574463 -181490.511963         0.0
3  181712.386963  32.812500  181690.511963 -181412.386963         0.0
4  181723.324463  32.812500  181712.386963 -181323.324463         0.0
5  181756.136963  43.750000  181723.324463 -181256.136963         0.0
6  181756.136963  32.812500  181756.136963 -181256.136963         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:39:31]  Iteration: 139
[07/11 20:39:35]  Generator returned sat in 3.375799 secs.
[07/11 20:39:35]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-4] + 0)[0m
[07/11 20:39:35]  Verifer returned unsat in 0.132933 secs.
[07/11 20:39:35]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-4] + 0)[0m
[07/11 20:39:35]  Iteration: 140
[07/11 20:39:45]  Generator returned sat in 10.223133 secs.
[07/11 20:39:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:39:46]  Improved gap from 0 to 9.375
[07/11 20:39:46]  Improved number of small numbers from 36 to 43 out of a max of 77
[07/11 20:39:46]  Verifer returned sat in 0.791135 secs.
[07/11 20:39:46]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  181293.656719   0.000244  181274.906719 -181284.281494         0.0
1  181293.656719   0.000244  181284.281719 -181193.656719         0.0
2  181293.656719   0.000244  181293.656719 -181103.031719         0.0
3  181312.406719  18.750000  181303.031719 -181012.406738         0.0
4  181331.156719  28.125000  181323.344158 -180932.719158         0.0
5  181373.344036  49.999878  181332.719158 -180873.344036         0.0
6  181373.344036  28.125000  181373.344036 -180873.343994         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:39:46]  Iteration: 141
[07/11 20:39:50]  Generator returned sat in 3.035015 secs.
[07/11 20:39:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-4] + 0)[0m
[07/11 20:39:50]  Improved gap from 0 to 0
[07/11 20:39:50]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:39:50]  Verifer returned sat in 0.351685 secs.
[07/11 20:39:50]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  279558.656738  0.000244  279558.646729 -279558.646729         0.0
1  279558.656738  0.000244  279558.646973 -279458.656738         0.0
2  279558.656738  0.000244  279558.656738 -279358.656738         0.0
3  279558.656982  0.000244  279558.656738 -279258.666504         0.0
4  279558.666748  0.010010  279558.666748 -279158.666748         0.0
5  279558.696533  0.029785  279558.666748 -279058.696533         0.0
6  279558.696533  0.010010  279558.696533 -279058.696533         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:39:50]  Iteration: 142
[07/11 20:39:53]  Generator returned sat in 3.006371 secs.
[07/11 20:39:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 0)[0m
[07/11 20:39:54]  Improved gap from 0 to 0
[07/11 20:39:54]  Improved number of small numbers from 30 to 40 out of a max of 77
[07/11 20:39:54]  Verifer returned sat in 1.044995 secs.
[07/11 20:39:55]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  284452.386072  0.000244  284352.385986 -284352.385986         0.0
1  284452.386072  0.000244  284452.375950 -284352.385986         0.0
2  284452.386072  0.000244  284452.386072 -284252.386072         0.0
3  284452.386194  0.000122  284452.386072 -284152.386230         0.0
4  284452.396194  0.010122  284452.396194 -284052.396194         0.0
5  284452.416438  0.020244  284452.396194 -283952.416438         0.0
6  284452.416438  0.010122  284452.416438 -283952.416260         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:39:55]  Iteration: 143
[07/11 20:39:58]  Generator returned sat in 3.387700 secs.
[07/11 20:39:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:39:58]  Verifer returned unsat in 0.083123 secs.
[07/11 20:39:58]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:39:58]  Iteration: 144
[07/11 20:40:02]  Generator returned sat in 3.106184 secs.
[07/11 20:40:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:40:02]  Verifer returned unsat in 0.103681 secs.
[07/11 20:40:02]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:40:02]  Iteration: 145
[07/11 20:40:05]  Generator returned sat in 2.860946 secs.
[07/11 20:40:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-4] + 0)[0m
[07/11 20:40:05]  Improved gap from 0 to 0
[07/11 20:40:05]  Improved number of small numbers from 46 to 57 out of a max of 77
[07/11 20:40:05]  Verifer returned sat in 0.519142 secs.
[07/11 20:40:05]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  239684.896484  0.000244  239684.896240 -239684.896240         0.0
1  239684.896484  0.000244  239684.896362 -239584.896484         0.0
2  239684.896484  0.000122  239684.896484 -239484.896484         0.0
3  239684.896729  0.000244  239684.896484 -239384.896729         0.0
4  239684.906484  0.010000  239684.906484 -239284.906484         0.0
5  239684.921606  0.015122  239684.906484 -239184.921606         0.0
6  239684.921606  0.010000  239684.921606 -239184.921387         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:40:06]  Iteration: 146
[07/11 20:40:10]  Generator returned sat in 4.601972 secs.
[07/11 20:40:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:40:11]  Improved gap from 0 to 15.625
[07/11 20:40:11]  Improved number of small numbers from 34 to 52 out of a max of 77
[07/11 20:40:11]  Verifer returned sat in 0.903180 secs.
[07/11 20:40:11]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  209020.902832   0.000244  209005.277644 -209005.277832         0.0
1  209020.902832  15.625000  209020.902644 -208936.527832         0.0
2  209055.277522  34.374878  209039.652522 -208855.277522         0.0
3  209055.277644  15.625122  209055.277522 -208770.902588         0.0
4  209108.402278  53.124756  209074.027400 -208708.402344         0.0
5  209124.027278  49.999878  209108.402344 -208624.027344         0.0
6  209161.527100  53.124756  209124.027344 -208624.027100         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:40:12]  Iteration: 147
[07/11 20:40:20]  Generator returned sat in 8.583614 secs.
[07/11 20:40:20]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:40:21]  Improved gap from 1/8192 to 9.375
[07/11 20:40:22]  Improved number of small numbers from 36 to 50 out of a max of 77
[07/11 20:40:22]  Verifer returned sat in 1.784562 secs.
[07/11 20:40:22]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  209992.031006   0.000244  209808.529802 -209866.155762         0.0
1  209992.031006   0.000244  209966.155535 -209866.155762         0.0
2  209992.031006   0.000244  209992.030779 -209801.406006         0.0
3  210030.530779  38.500000  210021.155779 -209730.530779         0.0
4  210039.905779  18.750000  210030.530779 -209639.905779         0.0
5  210080.530657  49.999878  210039.905779 -209580.530657         0.0
6  210080.530657  18.750000  210080.530657 -209580.530518         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:40:22]  Iteration: 148
[07/11 20:40:26]  Generator returned sat in 3.456915 secs.
[07/11 20:40:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-3] + 1/2)[0m
[07/11 20:40:26]  Verifer returned unsat in 0.049603 secs.
[07/11 20:40:26]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-3] + 1/2)[0m
[07/11 20:40:26]  Iteration: 149
[07/11 20:40:29]  Generator returned sat in 3.272238 secs.
[07/11 20:40:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-3] + 1/2)[0m
[07/11 20:40:29]  Verifer returned unsat in 0.068236 secs.
[07/11 20:40:29]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-3] + 1/2)[0m
[07/11 20:40:30]  Iteration: 150
[07/11 20:40:33]  Generator returned sat in 3.401207 secs.
[07/11 20:40:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:40:33]  Improved gap from 1/16384 to 9.375
[07/11 20:40:33]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:40:33]  Verifer returned sat in 0.288595 secs.
[07/11 20:40:33]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  211429.771729   0.000244  211409.397217 -211409.397217         0.0
1  211429.771729  20.374512  211420.396729 -211329.771729         0.0
2  211439.146729  18.750000  211429.771973 -211239.146973         0.0
3  211459.209229  29.437256  211439.146973 -211159.209229         0.0
4  211469.396484  30.249512  211459.209229 -211069.396484         0.0
5  211509.208984  49.999756  211469.396484 -211009.208984         0.0
6  211509.208984  30.249512  211509.208984 -211009.208984         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:40:34]  Iteration: 151
[07/11 20:40:37]  Generator returned sat in 3.114908 secs.
[07/11 20:40:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:40:37]  Verifer returned unsat in 0.052470 secs.
[07/11 20:40:37]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:40:37]  Iteration: 152
[07/11 20:40:40]  Generator returned sat in 3.405182 secs.
[07/11 20:40:41]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:40:41]  Improved gap from 1/8192 to 23.4375
[07/11 20:40:41]  Improved number of small numbers from 36 to 43 out of a max of 77
[07/11 20:40:41]  Verifer returned sat in 0.789066 secs.
[07/11 20:40:41]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  211304.646484    0.000244  211104.646362 -211204.646362         0.0
1  211304.646484  200.000000  211304.646362 -211204.646362         0.0
2  211358.996680   54.350317  211358.996558 -211204.646240         0.0
3  211418.596631   59.600073  211418.596509 -211142.034009         0.0
4  211465.471509   46.875000  211442.034009 -211065.471509         0.0
5  211492.033887   49.999878  211465.471509 -210992.033936         0.0
6  211494.765283   29.293774  211492.033936 -210992.033936         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:40:42]  Iteration: 153
[07/11 20:40:46]  Generator returned sat in 4.492200 secs.
[07/11 20:40:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:40:47]  Improved gap from 0 to 9.375
[07/11 20:40:47]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:40:47]  Verifer returned sat in 0.556643 secs.
[07/11 20:40:47]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  189284.602783   0.000244  189268.977539 -189268.977539         0.0
1  189284.602783   0.000244  189284.602539 -189193.977539         0.0
2  189293.977783   9.375244  189293.977539 -189103.352539         0.0
3  189303.352783   9.375244  189303.352539 -189012.727783         0.0
4  189340.852539  37.500000  189331.477539 -188940.852539         0.0
5  189378.352539  46.875000  189340.852539 -188878.352539         0.0
6  189378.352539  37.500000  189378.352539 -188878.352539         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:40:47]  Iteration: 154
[07/11 20:40:51]  Generator returned sat in 3.687340 secs.
[07/11 20:40:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:40:51]  Improved gap from 1/16384 to 4.6875
[07/11 20:40:52]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:40:52]  Verifer returned sat in 0.690692 secs.
[07/11 20:40:52]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  189007.672119   0.000244  189007.671875 -189007.671875         0.0
1  189021.734375  14.062500  189017.046875 -188921.734375         0.0
2  189021.734375   0.000244  189021.734375 -188826.421875         0.0
3  189026.421875   4.687500  189026.421875 -188731.109619         0.0
4  189049.859375  23.437500  189045.171875 -188649.859375         0.0
5  189082.671875  37.500000  189049.859375 -188582.671875         0.0
6  189082.671875  23.437500  189082.671875 -188582.671875         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:40:52]  Iteration: 155
[07/11 20:40:56]  Generator returned sat in 3.866934 secs.
[07/11 20:40:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:40:56]  Verifer returned unsat in 0.076601 secs.
[07/11 20:40:56]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:40:56]  Iteration: 156
[07/11 20:41:00]  Generator returned sat in 3.561710 secs.
[07/11 20:41:00]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-3] + 0)[0m
[07/11 20:41:00]  Verifer returned unsat in 0.053277 secs.
[07/11 20:41:00]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-3] + 0)[0m
[07/11 20:41:00]  Iteration: 157
[07/11 20:41:03]  Generator returned sat in 3.412001 secs.
[07/11 20:41:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:41:03]  Verifer returned unsat in 0.041943 secs.
[07/11 20:41:03]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:41:03]  Iteration: 158
[07/11 20:41:07]  Generator returned sat in 3.479554 secs.
[07/11 20:41:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 0)[0m
[07/11 20:41:07]  Improved gap from 0 to 0
[07/11 20:41:08]  Improved number of small numbers from 37 to 68 out of a max of 77
[07/11 20:41:08]  Verifer returned sat in 0.854868 secs.
[07/11 20:41:08]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  190168.401611    0.000244  190168.401123 -190168.401123         0.0
1  190268.401367  100.000244  190247.068115 -190168.401123         0.0
2  190268.401367    0.000244  190268.401367 -190068.401367         0.0
3  190289.734375   21.333008  190268.401367 -189989.734619         0.0
4  190289.734619   21.333252  190289.734619 -189889.734619         0.0
5  190321.734497   31.999878  190289.734619 -189821.734497         0.0
6  190321.734497   21.333252  190321.734497 -189821.734375         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:41:08]  Iteration: 159
[07/11 20:41:13]  Generator returned sat in 4.423773 secs.
[07/11 20:41:13]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:41:13]  Improved gap from 0 to 0
[07/11 20:41:13]  Improved number of small numbers from 34 to 35 out of a max of 77
[07/11 20:41:13]  Verifer returned sat in 0.560357 secs.
[07/11 20:41:13]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  140696.724497  0.000244  140696.724436 -140696.724436         0.0
1  140696.724558  0.000122  140696.724436 -140596.724558         0.0
2  140696.724558  0.000061  140696.724558 -140496.724558         0.0
3  140696.734497  0.009939  140696.724558 -140396.734558         0.0
4  140696.734558  0.010000  140696.734558 -140296.734558         0.0
5  140696.749619  0.015061  140696.734558 -140196.749619         0.0
6  140696.749619  0.010000  140696.749619 -140196.749512         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:41:14]  Iteration: 160
[07/11 20:41:17]  Generator returned sat in 3.644954 secs.
[07/11 20:41:17]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:41:18]  Verifer returned unsat in 0.132339 secs.
[07/11 20:41:18]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:41:18]  Iteration: 161
[07/11 20:41:34]  Generator returned sat in 16.467824 secs.
[07/11 20:41:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -3/2S_f[0][t-4] + 1)[0m
[07/11 20:41:35]  Improved gap from 1/16384 to 15.625
[07/11 20:41:36]  Improved number of small numbers from 36 to 49 out of a max of 77
[07/11 20:41:36]  Verifer returned sat in 1.451707 secs.
[07/11 20:41:36]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  141848.177734   0.000244  141818.636013 -141818.636230         0.0
1  141848.177734   0.000244  141832.552653 -141748.177734         0.0
2  141848.927694  16.375041  141848.927572 -141664.552572         0.0
3  141880.177572  31.250000  141864.552572 -141580.177734         0.0
4  141901.677572  37.125000  141886.052572 -141501.677572         0.0
5  141936.052450  49.999878  141901.677572 -141436.052490         0.0
6  141938.802572  37.125000  141936.052490 -141436.052490         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:41:36]  Iteration: 162
[07/11 20:41:40]  Generator returned sat in 3.727539 secs.
[07/11 20:41:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 1)[0m
[07/11 20:41:40]  Verifer returned unsat in 0.059722 secs.
[07/11 20:41:40]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 1)[0m
[07/11 20:41:40]  Iteration: 163
[07/11 20:41:45]  Generator returned sat in 4.940689 secs.
[07/11 20:41:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 1)[0m
[07/11 20:41:45]  Improved gap from 1/8192 to 7.8125
[07/11 20:41:46]  Improved number of small numbers from 34 to 43 out of a max of 77
[07/11 20:41:46]  Verifer returned sat in 0.931895 secs.
[07/11 20:41:46]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  142708.015137   0.000244  142692.390212 -142700.202637         0.0
1  142708.015137   0.000244  142700.202712 -142608.015212         0.0
2  142708.015334   7.812622  142708.015212 -142515.827712         0.0
3  142715.827834   7.812622  142715.827712 -142423.640381         0.0
4  142744.171462  28.343750  142738.077631 -142345.890131         0.0
5  142788.077509  49.999878  142745.890131 -142288.077509         0.0
6  142788.077509  28.343750  142788.077509 -142288.077393         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:41:46]  Iteration: 164
[07/11 20:41:51]  Generator returned sat in 4.922230 secs.
[07/11 20:41:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1)[0m
[07/11 20:41:52]  Improved gap from 0 to 6.25
[07/11 20:41:52]  Improved number of small numbers from 44 to 50 out of a max of 77
[07/11 20:41:52]  Verifer returned sat in 0.896035 secs.
[07/11 20:41:52]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  172783.265951   0.000244  172766.516032 -172766.516113         0.0
1  172783.265951   0.000244  172777.015951 -172683.265951         0.0
2  172783.265951   0.000244  172783.265951 -172589.515951         0.0
3  172809.328389  26.062439  172789.515951 -172509.328389         0.0
4  172818.765828  29.249878  172809.328389 -172418.765828         0.0
5  172859.328267  49.999878  172818.765828 -172359.328267         0.0
6  172859.328267  29.249878  172859.328267 -172359.328125         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:41:53]  Iteration: 165
[07/11 20:42:03]  Generator returned sat in 10.884943 secs.
[07/11 20:42:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:42:04]  Improved gap from 0 to 9.375
[07/11 20:42:04]  Improved number of small numbers from 44 to 77 out of a max of 77
[07/11 20:42:04]  Verifer returned sat in 0.407993 secs.
[07/11 20:42:04]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  172697.718262   0.000244  172674.280518 -172697.717773         0.0
1  172697.718262   0.000244  172697.718018 -172607.093018         0.0
2  172707.093018   9.375000  172707.093018 -172516.468018         0.0
3  172716.468262   9.375244  172716.468018 -172425.843018         0.0
4  172763.343018  46.875000  172725.843018 -172363.343018         0.0
5  172763.343018  32.812500  172763.343018 -172275.842773         0.0
6  172810.218018  46.875000  172775.842773 -172275.842773         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:42:04]  Iteration: 166
[07/11 20:42:14]  Generator returned sat in 10.073179 secs.
[07/11 20:42:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:42:15]  Improved gap from 149503/16384 to 15.625
[07/11 20:42:15]  Improved number of small numbers from 36 to 45 out of a max of 77
[07/11 20:42:15]  Verifer returned sat in 0.908463 secs.
[07/11 20:42:15]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  175059.968750   0.000244  175039.093852 -175039.093994         0.0
1  175059.968750   0.000244  175059.968608 -174975.593608         0.0
2  175075.593730  15.625122  175075.593608 -174891.218608         0.0
3  175091.218730  15.625122  175091.218608 -174806.843750         0.0
4  175143.843363  52.624756  175109.468486 -174743.843363         0.0
5  175156.843486  47.375000  175143.843363 -174659.468363         0.0
6  175196.468119  52.624756  175159.468363 -174659.468262         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:42:16]  Iteration: 167
[07/11 20:42:20]  Generator returned sat in 3.941164 secs.
[07/11 20:42:20]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 20:42:20]  Improved gap from 1/8192 to 9.375
[07/11 20:42:20]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:42:20]  Verifer returned sat in 0.476107 secs.
[07/11 20:42:20]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  188632.468750   0.000244  188608.531006 -188632.468506         0.0
1  188632.468750   0.000244  188632.468506 -188541.843506         0.0
2  188641.843750   9.375244  188641.843506 -188451.218506         0.0
3  188651.218750   9.375244  188651.218506 -188360.593506         0.0
4  188699.093506  47.875000  188660.593506 -188299.093506         0.0
5  188699.093506  33.312500  188699.093506 -188208.468750         0.0
6  188746.968506  47.875000  188708.468750 -188208.468750         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:42:21]  Iteration: 168
[07/11 20:42:26]  Generator returned sat in 5.226884 secs.
[07/11 20:42:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:42:27]  Improved gap from 25/8 to 6.25
[07/11 20:42:27]  Improved number of small numbers from 37 to 78 out of a max of 78
[07/11 20:42:27]  Verifer returned sat in 0.723117 secs.
[07/11 20:42:27]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  188900.538086   0.000244  188883.538086 -188883.538330         0.0
1  188900.538086   0.000244  188900.538086 -188806.788086         0.0
2  188906.788330   6.250244  188906.788086 -188713.038086         0.0
3  188913.038330   6.250244  188913.038086 -188619.288086         0.0
4  188957.788086  44.750000  188919.288086 -188557.788086         0.0
5  188957.788086  28.625000  188957.788086 -188464.038330         0.0
6  189002.538086  44.750000  188964.038330 -188464.038330         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:42:27]  Iteration: 169
[07/11 20:42:31]  Generator returned sat in 4.418186 secs.
[07/11 20:42:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:42:32]  Improved gap from 25/4 to 14.0625
[07/11 20:42:32]  Improved number of small numbers from 57 to 71 out of a max of 77
[07/11 20:42:32]  Verifer returned sat in 0.887287 secs.
[07/11 20:42:32]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  187747.850830   0.000244  187733.413493 -187733.413574         0.0
1  187747.850830   0.000244  187747.850830 -187661.913330         0.0
2  187761.913574  14.062744  187761.913330 -187575.975830         0.0
3  187775.976074  14.062744  187775.975830 -187490.319336         0.0
4  187826.256836  50.281006  187790.319458 -187426.256836         0.0
5  187840.038208  49.718750  187826.256836 -187340.319336         0.0
6  187876.537842  50.281006  187840.319336 -187340.319336         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:42:33]  Iteration: 170
[07/11 20:42:39]  Generator returned sat in 5.671241 secs.
[07/11 20:42:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:42:39]  Improved gap from 0 to 4.6875
[07/11 20:42:40]  Improved number of small numbers from 32 to 40 out of a max of 77
[07/11 20:42:40]  Verifer returned sat in 1.157421 secs.
[07/11 20:42:40]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  190122.226318   0.000244  190109.140289 -190122.226074         0.0
1  190122.226318   0.000244  190122.226196 -190026.913696         0.0
2  190131.601196   9.375000  190126.913696 -189931.601196         0.0
3  190153.085510  26.171814  190131.601196 -189853.085510         0.0
4  190156.405853  24.804657  190153.085510 -189757.773010         0.0
5  190203.085388  49.999878  190157.773010 -189703.085388         0.0
6  190203.085388  24.804657  190203.085388 -189703.085205         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:42:40]  Iteration: 171
[07/11 20:42:45]  Generator returned sat in 4.455429 secs.
[07/11 20:42:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 0)[0m
[07/11 20:42:45]  Improved gap from 1/16384 to 10.9375
[07/11 20:42:45]  Improved number of small numbers from 65 to 68 out of a max of 77
[07/11 20:42:45]  Verifer returned sat in 0.392093 secs.
[07/11 20:42:45]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  219009.413574   0.000244  218896.913574 -218896.913818         0.0
1  219009.413574   0.000244  218981.287842 -218896.913818         0.0
2  219009.413574   0.000244  218996.913818 -218809.413574         0.0
3  219020.351074  23.437256  219009.413574 -218720.351318         0.0
4  219042.226074  32.812500  219031.288574 -218642.226074         0.0
5  219081.288452  49.999878  219042.226074 -218581.288452         0.0
6  219081.288452  32.812500  219081.288452 -218581.288330         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:42:45]  Iteration: 172
[07/11 20:42:50]  Generator returned sat in 4.596626 secs.
[07/11 20:42:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:42:50]  Verifer returned unsat in 0.071859 secs.
[07/11 20:42:50]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:42:50]  Iteration: 173
[07/11 20:42:55]  Generator returned sat in 4.966687 secs.
[07/11 20:42:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:42:56]  Improved gap from 0 to 9.375
[07/11 20:42:56]  Improved number of small numbers from 34 to 46 out of a max of 77
[07/11 20:42:56]  Verifer returned sat in 0.964855 secs.
[07/11 20:42:56]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  265536.227051   0.000244  265513.310486 -265536.226807         0.0
1  265536.227051   0.000244  265536.226990 -265445.601990         0.0
2  265545.602112   9.375122  265545.601990 -265354.976990         0.0
3  265554.977112   9.375122  265554.976990 -265264.352051         0.0
4  265608.101746  53.124756  265567.476868 -265208.101746         0.0
5  265608.101746  34.374939  265608.101746 -265117.476807         0.0
6  265661.226501  53.124756  265617.476807 -265117.476562         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:42:57]  Iteration: 174
[07/11 20:43:01]  Generator returned sat in 4.573454 secs.
[07/11 20:43:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:43:02]  Verifer returned unsat in 0.266578 secs.
[07/11 20:43:02]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:43:02]  Iteration: 175
[07/11 20:43:06]  Generator returned sat in 4.722733 secs.
[07/11 20:43:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:43:07]  Verifer returned unsat in 0.059112 secs.
[07/11 20:43:07]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:43:07]  Iteration: 176
[07/11 20:43:15]  Generator returned sat in 8.445417 secs.
[07/11 20:43:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 2)[0m
[07/11 20:43:15]  Verifer returned unsat in 0.064400 secs.
[07/11 20:43:15]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 2)[0m
[07/11 20:43:15]  Iteration: 177
[07/11 20:43:21]  Generator returned sat in 5.090348 secs.
[07/11 20:43:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:43:21]  Improved gap from 0 to 21.875
[07/11 20:43:21]  Improved number of small numbers from 52 to 66 out of a max of 77
[07/11 20:43:21]  Verifer returned sat in 0.563492 secs.
[07/11 20:43:21]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  286844.727783   0.000244  286818.602783 -286818.602783         0.0
1  286844.727783   0.000244  286844.727783 -286766.602783         0.0
2  286888.477783  43.750000  286866.602783 -286688.477783         0.0
3  286914.602539  47.999756  286888.477783 -286614.602539         0.0
4  286936.352783  47.875000  286914.602661 -286536.477661         0.0
5  286964.602539  49.999878  286936.477661 -286464.602539         0.0
6  286984.352600  47.874939  286964.602539 -286464.602539         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:43:22]  Iteration: 178
[07/11 20:43:36]  Generator returned sat in 14.884220 secs.
[07/11 20:43:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:43:37]  Verifer returned unsat in 0.099054 secs.
[07/11 20:43:37]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:43:37]  Iteration: 179
[07/11 20:43:42]  Generator returned sat in 5.329881 secs.
[07/11 20:43:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 20:43:42]  Verifer returned unsat in 0.074059 secs.
[07/11 20:43:42]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 20:43:42]  Iteration: 180
[07/11 20:43:47]  Generator returned sat in 4.749439 secs.
[07/11 20:43:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:43:47]  Improved gap from 1/16384 to 10.9375
[07/11 20:43:48]  Improved number of small numbers from 36 to 47 out of a max of 77
[07/11 20:43:48]  Verifer returned sat in 0.926554 secs.
[07/11 20:43:48]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  285468.414551   0.000244  285449.185323 -285468.414307         0.0
1  285468.414551   0.000244  285468.414490 -285379.351990         0.0
2  285479.352112  10.937622  285479.351990 -285290.289490         0.0
3  285490.289612  10.937622  285490.289490 -285201.226990         0.0
4  285537.039490  46.750000  285501.226990 -285137.039490         0.0
5  285537.039490  34.312500  285537.039490 -285050.977051         0.0
6  285583.789490  46.750000  285550.977051 -285050.976807         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:43:48]  Iteration: 181
[07/11 20:44:01]  Generator returned sat in 12.203693 secs.
[07/11 20:44:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:44:01]  Improved gap from 1/16384 to 4.6875
[07/11 20:44:01]  Improved number of small numbers from 71 to 77 out of a max of 77
[07/11 20:44:01]  Verifer returned sat in 0.350323 secs.
[07/11 20:44:01]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  285472.976807   0.000244  285458.664307 -285458.664551         0.0
1  285472.976807   0.000244  285468.289307 -285372.976807         0.0
2  285472.977051   4.687744  285472.976807 -285277.664307         0.0
3  285502.101562  29.124756  285477.664307 -285202.101807         0.0
4  285506.789307  29.125000  285502.101807 -285106.789307         0.0
5  285550.976807  48.875000  285506.789307 -285050.976807         0.0
6  285550.976807  29.125000  285550.976807 -285050.976807         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:44:01]  Iteration: 182
[07/11 20:44:07]  Generator returned sat in 5.112220 secs.
[07/11 20:44:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:44:07]  Verifer returned unsat in 0.059945 secs.
[07/11 20:44:07]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:44:07]  Iteration: 183
[07/11 20:44:12]  Generator returned sat in 4.749522 secs.
[07/11 20:44:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:44:12]  Improved gap from 1/16384 to 12.5
[07/11 20:44:13]  Improved number of small numbers from 39 to 55 out of a max of 77
[07/11 20:44:13]  Verifer returned sat in 0.739832 secs.
[07/11 20:44:13]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  285459.476807   0.000244  285459.476807 -285459.476807         0.0
1  285459.477051   0.000244  285459.476807 -285372.976807         0.0
2  285472.977051  13.500244  285472.976807 -285285.477051         0.0
3  285511.039062  38.062256  285489.664291 -285211.039062         0.0
4  285523.539261  33.874969  285511.039261 -285123.539261         0.0
5  285561.039200  49.999939  285523.539261 -285061.039200         0.0
6  285561.039200  33.843742  285561.039200 -285061.039062         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:44:13]  Iteration: 184
[07/11 20:44:22]  Generator returned sat in 8.936984 secs.
[07/11 20:44:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:44:22]  Verifer returned unsat in 0.066709 secs.
[07/11 20:44:22]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:44:22]  Iteration: 185
[07/11 20:44:28]  Generator returned sat in 5.642167 secs.
[07/11 20:44:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-3] + 3/2)[0m
[07/11 20:44:28]  Verifer returned unsat in 0.097552 secs.
[07/11 20:44:28]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-3] + 3/2)[0m
[07/11 20:44:28]  Iteration: 186
[07/11 20:44:33]  Generator returned sat in 4.506784 secs.
[07/11 20:44:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:44:33]  Verifer returned unsat in 0.082358 secs.
[07/11 20:44:33]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:44:33]  Iteration: 187
[07/11 20:44:37]  Generator returned sat in 4.531561 secs.
[07/11 20:44:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:44:38]  Verifer returned unsat in 0.062796 secs.
[07/11 20:44:38]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:44:38]  Iteration: 188
[07/11 20:44:42]  Generator returned sat in 4.758020 secs.
[07/11 20:44:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:44:43]  Verifer returned unsat in 0.142222 secs.
[07/11 20:44:43]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 20:44:43]  Iteration: 189
[07/11 20:44:47]  Generator returned sat in 4.618339 secs.
[07/11 20:44:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:44:48]  Verifer returned unsat in 0.145221 secs.
[07/11 20:44:48]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:44:48]  Iteration: 190
[07/11 20:44:52]  Generator returned sat in 4.468921 secs.
[07/11 20:44:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:44:53]  Verifer returned unsat in 0.105974 secs.
[07/11 20:44:53]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:44:53]  Iteration: 191
[07/11 20:44:57]  Generator returned sat in 4.349433 secs.
[07/11 20:44:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:44:57]  Verifer returned unsat in 0.056575 secs.
[07/11 20:44:57]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:44:57]  Iteration: 192
[07/11 20:45:04]  Generator returned sat in 6.977113 secs.
[07/11 20:45:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:45:04]  Verifer returned unsat in 0.049034 secs.
[07/11 20:45:04]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:45:04]  Iteration: 193
[07/11 20:45:09]  Generator returned sat in 4.915226 secs.
[07/11 20:45:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-4] + 0)[0m
[07/11 20:45:10]  Improved gap from 1/16384 to 6.25
[07/11 20:45:10]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:45:10]  Verifer returned sat in 0.472011 secs.
[07/11 20:45:10]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  261382.376221   0.000244  261362.063721 -261376.126221         0.0
1  261382.376221   0.000244  261376.126221 -261282.376221         0.0
2  261382.376465   6.250244  261382.376221 -261188.626221         0.0
3  261388.626465   6.250244  261388.626221 -261094.876221         0.0
4  261432.376221  43.750000  261394.876221 -261032.376221         0.0
5  261432.376221  28.125000  261432.376221 -260938.626465         0.0
6  261476.126221  43.750000  261438.626465 -260938.626221         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:45:10]  Iteration: 194
[07/11 20:45:15]  Generator returned sat in 5.049816 secs.
[07/11 20:45:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:45:16]  Improved gap from 1/32768 to 4.6875
[07/11 20:45:16]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:45:16]  Verifer returned sat in 0.657907 secs.
[07/11 20:45:16]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  261963.616455   0.000244  261949.554199 -261949.554199         0.0
1  261963.616455   0.000244  261958.929199 -261863.616699         0.0
2  261968.304199   9.375000  261963.616699 -261768.304199         0.0
3  261991.741455  28.124756  261968.304199 -261691.741455         0.0
4  261996.429199  28.125000  261991.741699 -261596.429199         0.0
5  262038.616699  46.875000  261996.429199 -261538.616699         0.0
6  262038.616699  28.125000  262038.616699 -261538.616455         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:45:16]  Iteration: 195
[07/11 20:45:25]  Generator returned sat in 8.712514 secs.
[07/11 20:45:25]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 20:45:25]  Verifer returned unsat in 0.045590 secs.
[07/11 20:45:25]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 20:45:25]  Iteration: 196
[07/11 20:45:30]  Generator returned sat in 4.567559 secs.
[07/11 20:45:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:45:30]  Verifer returned unsat in 0.048878 secs.
[07/11 20:45:30]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:45:30]  Iteration: 197
[07/11 20:45:35]  Generator returned sat in 4.763069 secs.
[07/11 20:45:35]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 3/2)[0m
[07/11 20:45:35]  Verifer returned unsat in 0.045198 secs.
[07/11 20:45:35]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 3/2)[0m
[07/11 20:45:35]  Iteration: 198
[07/11 20:45:40]  Generator returned sat in 4.698773 secs.
[07/11 20:45:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:45:40]  Verifer returned unsat in 0.036433 secs.
[07/11 20:45:40]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:45:40]  Iteration: 199
[07/11 20:45:47]  Generator returned sat in 6.414437 secs.
[07/11 20:45:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + 3/2)[0m
[07/11 20:45:47]  Improved gap from 1/8192 to 23.4375
[07/11 20:45:47]  Improved number of small numbers from 61 to 70 out of a max of 77
[07/11 20:45:47]  Verifer returned sat in 0.387640 secs.
[07/11 20:45:47]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  262212.471436    0.000244  262212.471436 -262212.471436         0.0
1  262312.471436  100.000000  262288.395020 -262212.471436         0.0
2  262312.471680   24.076660  262312.471436 -262136.992188         0.0
3  262360.429443   47.958008  262336.992188 -262060.429688         0.0
4  262386.867188   49.875000  262360.429688 -261986.867188         0.0
5  262410.429565   49.999878  262386.867188 -261910.429565         0.0
6  262436.742188   49.875000  262410.429565 -261910.429443         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:45:48]  Iteration: 200
[07/11 20:45:54]  Generator returned sat in 6.288676 secs.
[07/11 20:45:54]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:45:55]  Improved gap from 1/32768 to 15.625
[07/11 20:45:55]  Improved number of small numbers from 37 to 42 out of a max of 78
[07/11 20:45:55]  Verifer returned sat in 1.226454 secs.
[07/11 20:45:55]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  261167.128906   0.000244  261167.128784 -261167.128784         0.0
1  261167.128906   0.000122  261167.128784 -261082.753906         0.0
2  261194.337077  27.208293  261194.336955 -261009.961955         0.0
3  261209.962077  15.625122  261209.961955 -260925.587158         0.0
4  261260.086711  50.124756  261225.711833 -260860.086711         0.0
5  261272.128357  46.416524  261260.086711 -260775.711711         0.0
6  261310.211466  50.124756  261275.711711 -260775.711670         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:45:56]  Iteration: 201
[07/11 20:46:02]  Generator returned sat in 6.391780 secs.
[07/11 20:46:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:46:02]  Improved gap from 0 to 9.375
[07/11 20:46:03]  Improved number of small numbers from 37 to 45 out of a max of 77
[07/11 20:46:03]  Verifer returned sat in 0.757994 secs.
[07/11 20:46:03]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  261180.795166   0.000244  261165.045431 -261180.795410         0.0
1  261180.795471  15.750041  261180.795410 -261094.336914         0.0
2  261194.337158  13.541748  261194.337016 -261003.712016         0.0
3  261203.712077   9.375061  261203.712016 -260913.087158         0.0
4  261253.836894  50.124878  261213.211955 -260853.836894         0.0
5  261253.836894  40.624878  261253.836894 -260763.211914         0.0
6  261303.961772  50.124878  261263.211914 -260763.211914         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:46:03]  Iteration: 202
[07/11 20:46:11]  Generator returned sat in 7.449937 secs.
[07/11 20:46:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:46:11]  Verifer returned unsat in 0.116341 secs.
[07/11 20:46:11]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:46:11]  Iteration: 203
[07/11 20:46:16]  Generator returned sat in 5.391385 secs.
[07/11 20:46:17]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-4] + 0)[0m
[07/11 20:46:17]  Verifer returned unsat in 0.070529 secs.
[07/11 20:46:17]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-4] + 0)[0m
[07/11 20:46:17]  Iteration: 204
[07/11 20:46:22]  Generator returned sat in 5.218378 secs.
[07/11 20:46:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-4] + 0)[0m
[07/11 20:46:22]  Verifer returned unsat in 0.034538 secs.
[07/11 20:46:22]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-4] + 0)[0m
[07/11 20:46:22]  Iteration: 205
[07/11 20:46:28]  Generator returned sat in 5.451849 secs.
[07/11 20:46:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + 0)[0m
[07/11 20:46:28]  Improved gap from 0 to 0
[07/11 20:46:28]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:46:28]  Verifer returned sat in 0.261518 secs.
[07/11 20:46:28]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  261393.285156    0.000244  261293.280273 -261293.280273         0.0
1  261393.285156  100.004883  261393.277588 -261293.280273         0.0
2  261393.285156    0.000244  261393.280273 -261193.285156         0.0
3  261393.285156    0.000244  261393.285156 -261093.285156         0.0
4  261393.295410    0.010254  261393.285156 -260993.295410         0.0
5  261393.295410    0.010000  261393.295410 -260893.295654         0.0
6  261393.305664    0.010254  261393.295654 -260893.295654         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:46:28]  Iteration: 206
[07/11 20:46:34]  Generator returned sat in 5.509813 secs.
[07/11 20:46:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:46:34]  Improved gap from 0 to 10.9375
[07/11 20:46:35]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:46:35]  Verifer returned sat in 0.609806 secs.
[07/11 20:46:35]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  282818.345947   0.000244  282818.345703 -282821.470703         0.0
1  282821.470947   3.125244  282821.470703 -282744.908203         0.0
2  282844.908203  23.437500  282844.908203 -282655.845703         0.0
3  282855.845947  10.937744  282855.845703 -282566.783203         0.0
4  282899.595703  43.750000  282866.783203 -282499.595703         0.0
5  282912.095703  45.312500  282899.595703 -282412.095947         0.0
6  282943.345703  43.750000  282912.095947 -282412.095947         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:46:35]  Iteration: 207
[07/11 20:46:41]  Generator returned sat in 5.932939 secs.
[07/11 20:46:41]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:46:41]  Improved gap from 3/8192 to 10.9375
[07/11 20:46:42]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 20:46:42]  Verifer returned sat in 0.446961 secs.
[07/11 20:46:42]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  283663.658447   0.000244  283663.658203 -283696.470703         0.0
1  283707.408203  43.750000  283696.470703 -283607.408203         0.0
2  283707.408447  10.937744  283707.408203 -283518.345703         0.0
3  283729.283203  21.875000  283718.345703 -283429.283203         0.0
4  283762.095703  43.750000  283729.283203 -283362.095703         0.0
5  283762.095703  32.812500  283762.095703 -283273.033447         0.0
6  283805.845703  43.750000  283773.033447 -283273.033447         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:46:42]  Iteration: 208
[07/11 20:46:48]  Generator returned sat in 5.670393 secs.
[07/11 20:46:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:46:48]  Verifer returned unsat in 0.185939 secs.
[07/11 20:46:48]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:46:48]  Iteration: 209
[07/11 20:46:56]  Generator returned sat in 8.315345 secs.
[07/11 20:46:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:46:57]  Improved gap from 1/16384 to 21.875
[07/11 20:46:58]  Improved number of small numbers from 34 to 39 out of a max of 77
[07/11 20:46:58]  Verifer returned sat in 1.621470 secs.
[07/11 20:46:58]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  283853.053711   0.000244  283853.053507 -283853.053711         0.0
1  283873.512004  20.458496  283873.511882 -283795.386882         0.0
2  283895.387004  21.875122  283895.386882 -283717.261882         0.0
3  283939.136882  43.750000  283917.261882 -283639.136963         0.0
4  283961.595256  44.333374  283941.970133 -283563.845133         0.0
5  283991.970011  49.999878  283963.845133 -283491.970011         0.0
6  284008.178507  44.333374  283991.970011 -283491.969971         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:46:58]  Iteration: 210
[07/11 20:47:05]  Generator returned sat in 6.457999 secs.
[07/11 20:47:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:47:05]  Improved gap from 1/16384 to 3.125
[07/11 20:47:06]  Improved number of small numbers from 32 to 41 out of a max of 77
[07/11 20:47:06]  Verifer returned sat in 1.208069 secs.
[07/11 20:47:06]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  283909.157959   0.000244  283900.516886 -283900.517090         0.0
1  283909.157959   0.000244  283909.157633 -283812.969727         0.0
2  283912.970011   3.812378  283912.969889 -283716.094889         0.0
3  283941.970133  29.000244  283916.094889 -283641.970133         0.0
4  283941.970133  25.875122  283941.970133 -283545.095133         0.0
5  283991.970011  49.999878  283945.095133 -283491.970011         0.0
6  283991.970011  25.875122  283991.970011 -283491.969971         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:47:07]  Iteration: 211
[07/11 20:47:14]  Generator returned sat in 7.045678 secs.
[07/11 20:47:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:47:14]  Improved gap from 0 to 15.625
[07/11 20:47:14]  Improved number of small numbers from 65 to 73 out of a max of 77
[07/11 20:47:14]  Verifer returned sat in 0.331398 secs.
[07/11 20:47:14]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  323605.283447   0.000244  323571.783691 -323571.783691         0.0
1  323605.283447   0.000244  323589.658447 -323505.283447         0.0
2  323605.283447   0.000244  323605.283447 -323420.908447         0.0
3  323620.908691  15.625244  323620.908447 -323336.533691         0.0
4  323672.033203  51.124756  323637.658325 -323272.033203         0.0
5  323686.533325  48.875000  323672.033203 -323187.658203         0.0
6  323723.157959  51.124756  323687.658203 -323187.658203         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:47:14]  Iteration: 212
[07/11 20:47:22]  Generator returned sat in 7.340665 secs.
[07/11 20:47:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 20:47:22]  Improved gap from 0 to 7.8125
[07/11 20:47:23]  Improved number of small numbers from 36 to 45 out of a max of 77
[07/11 20:47:23]  Verifer returned sat in 1.198728 secs.
[07/11 20:47:23]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  324052.687012   0.000244  324043.546336 -324043.546387         0.0
1  324052.687012   0.000244  324052.686839 -323960.499339         0.0
2  324060.499461   7.812622  324060.499339 -323868.311839         0.0
3  324076.124339  15.625000  324068.311839 -323776.124512         0.0
4  324099.811595  31.499756  324090.228424 -323699.811595         0.0
5  324140.228302  49.999878  324099.811595 -323640.228302         0.0
6  324140.228302  31.499756  324140.228302 -323640.228271         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:47:23]  Iteration: 213
[07/11 20:47:31]  Generator returned sat in 7.123335 secs.
[07/11 20:47:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + 2)[0m
[07/11 20:47:31]  Improved gap from 1/16384 to 23.4375
[07/11 20:47:32]  Improved number of small numbers from 34 to 46 out of a max of 77
[07/11 20:47:32]  Verifer returned sat in 0.811962 secs.
[07/11 20:47:32]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  363511.374023    0.000244  363511.374023 -363611.373892         0.0
1  363711.374023  200.000000  363699.686839 -363611.373892         0.0
2  363811.374014  111.687174  363811.373892 -363611.373892         0.0
3  363811.374014    0.000122  363811.373892 -363534.811523         0.0
4  363869.217418   57.843526  363843.373810 -363469.936035         0.0
5  363893.373688   49.999878  363869.936188 -363393.373779         0.0
6  363927.779714   57.843526  363893.373779 -363393.373779         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:47:32]  Iteration: 214
[07/11 20:47:38]  Generator returned sat in 5.836965 secs.
[07/11 20:47:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:47:38]  Verifer returned unsat in 0.103099 secs.
[07/11 20:47:38]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:47:38]  Iteration: 215
[07/11 20:47:48]  Generator returned sat in 10.044526 secs.
[07/11 20:47:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:47:48]  Improved gap from 0 to 14.0625
[07/11 20:47:49]  Improved number of small numbers from 32 to 41 out of a max of 77
[07/11 20:47:49]  Verifer returned sat in 0.902270 secs.
[07/11 20:47:49]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  382834.697266   0.000244  382798.759725 -382798.759766         0.0
1  382834.697266   0.000244  382834.697103 -382748.759603         0.0
2  382848.759725  14.062622  382848.759603 -382662.822266         0.0
3  382866.634603  17.875000  382866.634481 -382580.696981         0.0
4  382916.634359  49.999878  382880.696981 -382516.634359         0.0
5  382923.571798  42.874817  382916.634359 -382430.696859         0.0
6  382966.634237  49.999878  382930.696859 -382430.696777         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:47:49]  Iteration: 216
[07/11 20:48:01]  Generator returned sat in 11.736758 secs.
[07/11 20:48:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:48:02]  Verifer returned unsat in 0.079034 secs.
[07/11 20:48:02]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:48:02]  Iteration: 217
[07/11 20:48:08]  Generator returned sat in 6.431059 secs.
[07/11 20:48:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + 2)[0m
[07/11 20:48:08]  Improved gap from 0 to 21.875
[07/11 20:48:09]  Improved number of small numbers from 34 to 52 out of a max of 77
[07/11 20:48:09]  Verifer returned sat in 0.760670 secs.
[07/11 20:48:09]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  382385.010010   0.000244  382160.301758 -382260.301758         0.0
1  382385.010010   0.000244  382360.301554 -382260.301758         0.0
2  382385.010010   0.000244  382385.009806 -382206.884806         0.0
3  382428.759806  43.750000  382406.884806 -382128.759806         0.0
4  382456.884684  49.999878  382428.759806 -382056.884684         0.0
5  382474.509806  45.750000  382456.884684 -381978.759766         0.0
6  382505.759623  48.874939  382478.759766 -381978.759521         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:48:09]  Iteration: 218
[07/11 20:48:17]  Generator returned sat in 7.423028 secs.
[07/11 20:48:17]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:48:17]  Improved gap from 1/16384 to 3.125
[07/11 20:48:18]  Improved number of small numbers from 29 to 40 out of a max of 77
[07/11 20:48:18]  Verifer returned sat in 0.963252 secs.
[07/11 20:48:18]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  382853.746826   0.000244  382837.010050 -382849.536133         0.0
1  382853.746826  16.736572  382849.536334 -382753.746826         0.0
2  382853.746970   4.210636  382853.746848 -382657.957361         0.0
3  382857.957483   4.210636  382857.957361 -382578.799316         0.0
4  382883.009928  25.052567  382878.799415 -382483.009928         0.0
5  382928.799293  49.999878  382883.009928 -382428.799293         0.0
6  382928.799293  25.052567  382928.799293 -382428.799072         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:48:18]  Iteration: 219
[07/11 20:48:30]  Generator returned sat in 11.705167 secs.
[07/11 20:48:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:48:31]  Improved gap from 1/8192 to 9.375
[07/11 20:48:31]  Improved number of small numbers from 38 to 55 out of a max of 77
[07/11 20:48:31]  Verifer returned sat in 0.932893 secs.
[07/11 20:48:31]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  382476.322998   0.000244  382466.947754 -382466.947754         0.0
1  382476.322998   0.000244  382476.322754 -382385.697754         0.0
2  382496.322510  19.999756  382485.697754 -382296.322510         0.0
3  382496.322754  10.625000  382496.322700 -382218.947510         0.0
4  382528.322618  31.999919  382518.947618 -382128.322618         0.0
5  382568.947496  49.999878  382528.322618 -382068.947496         0.0
6  382568.947496  31.999919  382568.947496 -382068.947266         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:48:31]  Iteration: 220
[07/11 20:48:38]  Generator returned sat in 7.006561 secs.
[07/11 20:48:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:48:39]  Improved gap from 0 to 12.5
[07/11 20:48:39]  Improved number of small numbers from 30 to 77 out of a max of 77
[07/11 20:48:39]  Verifer returned sat in 0.577636 secs.
[07/11 20:48:39]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  382482.260254   0.000244  382471.218506 -382482.260254         0.0
1  382482.260254   0.000244  382482.260254 -382394.760254         0.0
2  382494.760498  12.500244  382494.760254 -382307.260254         0.0
3  382510.177002  15.416748  382510.176758 -382233.843262         0.0
4  382546.343262  36.166504  382533.843262 -382146.343262         0.0
5  382583.843018  49.999756  382546.343262 -382083.843018         0.0
6  382583.843018  36.166504  382583.843018 -382083.843018         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:48:39]  Iteration: 221
[07/11 20:48:46]  Generator returned sat in 6.624903 secs.
[07/11 20:48:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:48:47]  Improved gap from 137209/20480 to 7.8125
[07/11 20:48:48]  Improved number of small numbers from 30 to 35 out of a max of 77
[07/11 20:48:48]  Verifer returned sat in 1.240947 secs.
[07/11 20:48:48]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  383511.721191   0.000244  383511.720919 -383511.720947         0.0
1  383537.022941  25.302022  383529.210441 -383437.022941         0.0
2  383537.023063   7.812622  383537.022941 -383344.835441         0.0
3  383577.210319  40.187378  383544.835441 -383277.210319         0.0
4  383584.788475  39.953033  383577.210319 -383185.022949         0.0
5  383627.210197  49.999878  383587.257163 -383127.210197         0.0
6  383627.210197  39.953033  383627.210197 -383127.209961         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:48:48]  Iteration: 222
[07/11 20:48:55]  Generator returned sat in 7.231104 secs.
[07/11 20:48:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:48:55]  Verifer returned unsat in 0.046870 secs.
[07/11 20:48:55]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:48:55]  Iteration: 223
[07/11 20:49:02]  Generator returned sat in 6.154900 secs.
[07/11 20:49:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:49:02]  Improved gap from 1/16384 to 4.6875
[07/11 20:49:03]  Improved number of small numbers from 30 to 40 out of a max of 78
[07/11 20:49:03]  Verifer returned sat in 1.090242 secs.
[07/11 20:49:03]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  383536.512939   0.000244  383524.804350 -383524.804443         0.0
1  383536.512939  11.708252  383536.512656 -383441.200156         0.0
2  383541.200278   4.687622  383541.200156 -383345.887656         0.0
3  383545.887778   4.687622  383545.887656 -383250.575195         0.0
4  383574.825116  28.937459  383571.637575 -383176.325075         0.0
5  383621.637453  49.999878  383576.325075 -383121.637453         0.0
6  383621.637453  28.937459  383621.637453 -383121.637451         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:49:03]  Iteration: 224
[07/11 20:49:10]  Generator returned sat in 7.189455 secs.
[07/11 20:49:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:49:11]  Verifer returned unsat in 0.063302 secs.
[07/11 20:49:11]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:49:11]  Iteration: 225
[07/11 20:49:23]  Generator returned sat in 12.644091 secs.
[07/11 20:49:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 3/2)[0m
[07/11 20:49:24]  Verifer returned unsat in 0.047681 secs.
[07/11 20:49:24]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 3/2)[0m
[07/11 20:49:24]  Iteration: 226
[07/11 20:49:31]  Generator returned sat in 6.895991 secs.
[07/11 20:49:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:49:31]  Verifer returned unsat in 0.030860 secs.
[07/11 20:49:31]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:49:31]  Iteration: 227
[07/11 20:49:37]  Generator returned sat in 6.632584 secs.
[07/11 20:49:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:49:38]  Improved gap from 1/16384 to 3.125
[07/11 20:49:38]  Improved number of small numbers from 40 to 48 out of a max of 77
[07/11 20:49:38]  Verifer returned sat in 0.729277 secs.
[07/11 20:49:38]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  413384.669189   0.000244  413368.950562 -413368.950684         0.0
1  413384.669189   0.000244  413381.544373 -413284.669373         0.0
2  413384.669495   3.125122  413384.669373 -413187.794373         0.0
3  413387.794495   3.125122  413387.794373 -413090.919434         0.0
4  413409.700684  21.906311  413409.700562 -413012.825562         0.0
5  413459.700439  49.999878  413412.825562 -412959.700439         0.0
6  413459.700439  21.828094  413459.700439 -412959.700439         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:49:39]  Iteration: 228
[07/11 20:49:53]  Generator returned sat in 14.034537 secs.
[07/11 20:49:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 1)[0m
[07/11 20:49:53]  Improved gap from 1/8192 to 23.4375
[07/11 20:49:54]  Improved number of small numbers from 40 to 77 out of a max of 77
[07/11 20:49:54]  Verifer returned sat in 0.758581 secs.
[07/11 20:49:54]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  413537.774658    0.000244  413285.438965 -413361.211914         0.0
1  413537.774658    0.000244  413410.606689 -413361.211914         0.0
2  413537.774658  127.167969  413537.774414 -413361.211914         0.0
3  413583.524414   45.750000  413561.211914 -413284.649658         0.0
4  413610.086914   48.875000  413586.649414 -413210.086914         0.0
5  413610.086914    0.010000  413610.086914 -413133.524658         0.0
6  413658.961914   48.875000  413633.524658 -413133.524414         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:49:54]  Iteration: 229
[07/11 20:50:03]  Generator returned sat in 9.220261 secs.
[07/11 20:50:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 20:50:04]  Improved gap from 1/16384 to 14.0625
[07/11 20:50:04]  Improved number of small numbers from 36 to 45 out of a max of 77
[07/11 20:50:04]  Verifer returned sat in 0.805707 secs.
[07/11 20:50:04]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  414209.733154   0.000244  414192.076965 -414192.077148         0.0
1  414209.733154   0.000244  414209.732971 -414123.795471         0.0
2  414237.857971  28.125000  414223.795471 -414037.857971         0.0
3  414237.858093  14.062622  414237.857971 -413961.149414         0.0
4  414277.607727  39.749756  414261.149556 -413877.607727         0.0
5  414311.149434  49.999878  414277.607727 -413811.149434         0.0
6  414317.357483  39.749756  414311.149434 -413811.149414         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:50:04]  Iteration: 230
[07/11 20:50:19]  Generator returned sat in 14.545761 secs.
[07/11 20:50:19]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 1/2)[0m
[07/11 20:50:20]  Improved gap from 0 to 15.625
[07/11 20:50:20]  Improved number of small numbers from 30 to 77 out of a max of 77
[07/11 20:50:20]  Verifer returned sat in 1.002327 secs.
[07/11 20:50:20]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  414277.264893   0.000244  414022.896729 -414122.891357         0.0
1  414277.264893   0.000244  414222.891357 -414122.891357         0.0
2  414277.264893   0.000244  414277.264648 -414092.889648         0.0
3  414311.139648  33.875000  414311.139404 -414028.388916         0.0
4  414344.014160  32.874756  414328.388916 -413944.014160         0.0
5  414378.388672  49.999756  414344.014160 -413878.388672         0.0
6  414378.388672  32.874756  414378.388672 -413878.388672         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:50:21]  Iteration: 231
[07/11 20:50:31]  Generator returned sat in 10.568336 secs.
[07/11 20:50:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:50:31]  Verifer returned unsat in 0.065260 secs.
[07/11 20:50:31]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/11 20:50:31]  Iteration: 232
[07/11 20:50:39]  Generator returned sat in 7.406645 secs.
[07/11 20:50:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 20:50:39]  Improved gap from 1/16384 to 3.125
[07/11 20:50:40]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:50:40]  Verifer returned sat in 0.564152 secs.
[07/11 20:50:40]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  415363.076416   0.000244  415355.451416 -415355.451660         0.0
1  415363.076416   0.000244  415363.076416 -415266.201416         0.0
2  415366.201660   3.125244  415366.201416 -415169.326416         0.0
3  415369.326660   3.125244  415369.326416 -415072.451660         0.0
4  415389.076416  19.750000  415385.951416 -414989.076416         0.0
5  415425.951416  40.000000  415389.076416 -414925.951416         0.0
6  415425.951416  19.750000  415425.951416 -414925.951416         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:50:40]  Iteration: 233
[07/11 20:50:48]  Generator returned sat in 7.637311 secs.
[07/11 20:50:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2)[0m
[07/11 20:50:48]  Improved gap from 1/8192 to 9.375
[07/11 20:50:49]  Improved number of small numbers from 34 to 41 out of a max of 77
[07/11 20:50:49]  Verifer returned sat in 1.087387 secs.
[07/11 20:50:49]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  415465.933875   0.000244  415438.215088 -415438.215088         0.0
1  415465.933875   0.000244  415438.215308 -415365.933875         0.0
2  415465.933875   0.000244  415465.933875 -415275.308875         0.0
3  415484.683875  18.750000  415475.308875 -415184.684082         0.0
4  415508.418159  33.109283  415497.715064 -415108.418159         0.0
5  415547.714942  49.999878  415508.418159 -415047.714942         0.0
6  415547.714942  33.109283  415547.714942 -415047.714844         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:50:49]  Iteration: 234
[07/11 20:50:59]  Generator returned sat in 9.515144 secs.
[07/11 20:50:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:50:59]  Verifer returned unsat in 0.106797 secs.
[07/11 20:50:59]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:50:59]  Iteration: 235
[07/11 20:51:07]  Generator returned sat in 7.707816 secs.
[07/11 20:51:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:51:07]  Verifer returned unsat in 0.068918 secs.
[07/11 20:51:07]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:51:07]  Iteration: 236
[07/11 20:51:14]  Generator returned sat in 7.248138 secs.
[07/11 20:51:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:51:15]  Verifer returned unsat in 0.071854 secs.
[07/11 20:51:15]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:51:15]  Iteration: 237
[07/11 20:51:23]  Generator returned sat in 7.828143 secs.
[07/11 20:51:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:51:23]  Verifer returned unsat in 0.077236 secs.
[07/11 20:51:23]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:51:23]  Iteration: 238
[07/11 20:51:30]  Generator returned sat in 7.227163 secs.
[07/11 20:51:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:51:30]  Verifer returned unsat in 0.109185 secs.
[07/11 20:51:30]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 20:51:30]  Iteration: 239
[07/11 20:51:38]  Generator returned sat in 7.254223 secs.
[07/11 20:51:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:51:38]  Verifer returned unsat in 0.051126 secs.
[07/11 20:51:38]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 20:51:38]  Iteration: 240
[07/11 20:51:46]  Generator returned sat in 7.386438 secs.
[07/11 20:51:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:51:46]  Improved gap from 0 to 7.8125
[07/11 20:51:47]  Improved number of small numbers from 32 to 36 out of a max of 77
[07/11 20:51:47]  Verifer returned sat in 0.863242 secs.
[07/11 20:51:47]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  384746.930664   0.000244  384746.930468 -384767.242676         0.0
1  384767.242887  20.312419  384767.242887 -384675.055387         0.0
2  384775.055509   7.812622  384775.055387 -384582.867887         0.0
3  384782.868009   7.812622  384782.867887 -384490.680387         0.0
4  384832.867764  49.999878  384790.680387 -384432.867764         0.0
5  384832.867764  31.250000  384832.867764 -384340.680264         0.0
6  384881.305203  48.437439  384840.680264 -384340.680176         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:51:47]  Iteration: 241
[07/11 20:51:58]  Generator returned sat in 11.251329 secs.
[07/11 20:51:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:51:58]  Verifer returned unsat in 0.068309 secs.
[07/11 20:51:58]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:51:58]  Iteration: 242
[07/11 20:52:07]  Generator returned sat in 8.117560 secs.
[07/11 20:52:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:52:07]  Verifer returned unsat in 0.065643 secs.
[07/11 20:52:07]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:52:07]  Iteration: 243
[07/11 20:52:15]  Generator returned sat in 7.828466 secs.
[07/11 20:52:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:52:15]  Verifer returned unsat in 0.026171 secs.
[07/11 20:52:15]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:52:15]  Iteration: 244
[07/11 20:52:23]  Generator returned sat in 7.886771 secs.
[07/11 20:52:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:52:23]  Improved gap from 1/16384 to 7.8125
[07/11 20:52:24]  Improved number of small numbers from 30 to 42 out of a max of 77
[07/11 20:52:24]  Verifer returned sat in 1.229170 secs.
[07/11 20:52:24]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  383744.492920   0.000244  383736.680330 -383736.680330         0.0
1  383744.492920   0.000244  383736.680330 -383644.492920         0.0
2  383763.055264  26.374935  383755.242764 -383563.055264         0.0
3  383763.055387   7.812622  383763.055264 -383470.867920         0.0
4  383815.367602  52.312337  383773.180224 -383415.367602         0.0
5  383815.367602  35.874947  383815.367602 -383323.180176         0.0
6  383867.679939  52.312337  383823.180176 -383323.180176         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:52:25]  Iteration: 245
[07/11 20:52:33]  Generator returned sat in 8.651186 secs.
[07/11 20:52:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:52:34]  Improved gap from 1/16384 to 21.875
[07/11 20:52:35]  Improved number of small numbers from 34 to 46 out of a max of 77
[07/11 20:52:35]  Verifer returned sat in 1.213337 secs.
[07/11 20:52:35]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  388452.596436   0.000244  388403.847013 -388403.847168         0.0
1  388452.596436   0.000244  388430.721524 -388352.596524         0.0
2  388452.596646  21.875122  388452.596524 -388274.471524         0.0
3  388474.471646  21.875122  388474.471524 -388196.346680         0.0
4  388522.721280  48.249756  388499.179776 -388122.721280         0.0
5  388549.179654  49.999878  388522.721280 -388049.179688         0.0
6  388570.971036  48.249756  388549.179688 -388049.179688         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:52:35]  Iteration: 246
[07/11 20:52:47]  Generator returned sat in 11.666990 secs.
[07/11 20:52:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:52:47]  Improved gap from 0 to 23.4375
[07/11 20:52:48]  Improved number of small numbers from 34 to 44 out of a max of 77
[07/11 20:52:48]  Verifer returned sat in 1.047235 secs.
[07/11 20:52:48]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  398442.760203    0.000244  398077.472996 -398177.472996         0.0
1  398442.760203  365.287109  398277.472996 -398177.472996         0.0
2  398442.760203  165.287109  398371.772605 -398177.472996         0.0
3  398442.760203   70.987549  398419.322703 -398142.760203         0.0
4  398463.072703   43.750000  398442.760203 -398066.197703         0.0
5  398467.760447   25.000244  398466.197703 -397989.635254         0.0
6  398502.516404   36.318701  398489.635254 -397989.635010         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:52:48]  Iteration: 247
[07/11 20:52:58]  Generator returned sat in 9.305895 secs.
[07/11 20:52:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:52:58]  Improved gap from 0 to 10.9375
[07/11 20:52:59]  Improved number of small numbers from 34 to 43 out of a max of 77
[07/11 20:52:59]  Verifer returned sat in 1.146456 secs.
[07/11 20:52:59]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  398402.135325   0.000244  398364.572947 -398364.572998         0.0
1  398402.135325   0.000244  398391.197825 -398302.135325         0.0
2  398402.135325   0.000244  398402.135325 -398213.072825         0.0
3  398424.010325  21.875000  398413.072825 -398124.010325         0.0
4  398463.072703  49.999878  398424.010325 -398063.072703         0.0
5  398463.072703  34.312500  398463.072703 -397974.010254         0.0
6  398511.447642  48.374939  398474.010254 -397974.010010         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:52:59]  Iteration: 248
[07/11 20:53:15]  Generator returned sat in 15.252019 secs.
[07/11 20:53:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:53:15]  Verifer returned unsat in 0.086558 secs.
[07/11 20:53:15]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:53:15]  Iteration: 249
[07/11 20:53:23]  Generator returned sat in 8.101762 secs.
[07/11 20:53:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 20:53:24]  Improved gap from 0 to 7.8125
[07/11 20:53:24]  Improved number of small numbers from 36 to 77 out of a max of 77
[07/11 20:53:24]  Verifer returned sat in 0.451484 secs.
[07/11 20:53:24]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  398646.455078   0.000244  398630.830078 -398630.830078         0.0
1  398646.455078   0.000244  398646.455078 -398554.267578         0.0
2  398654.267822   7.812744  398654.267578 -398462.080078         0.0
3  398662.080078   7.812500  398662.080078 -398369.892578         0.0
4  398708.955078  46.875000  398669.892578 -398308.955078         0.0
5  398708.955078  31.250000  398708.955078 -398216.767578         0.0
6  398755.830078  46.875000  398719.892334 -398216.767578         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:53:24]  Iteration: 250
[07/11 20:53:34]  Generator returned sat in 10.011472 secs.
[07/11 20:53:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 20:53:34]  Improved gap from 0 to 0
[07/11 20:53:35]  Improved number of small numbers from 44 to 51 out of a max of 77
[07/11 20:53:35]  Verifer returned sat in 0.533439 secs.
[07/11 20:53:35]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  482859.079834  0.000244  482859.073086 -482859.073242         0.0
1  482859.079834  0.000244  482859.079834 -482759.079834         0.0
2  482859.079956  0.000122  482859.079956 -482659.079956         0.0
3  482859.080078  0.000122  482859.079956 -482559.080078         0.0
4  482859.090200  0.010244  482859.080078 -482459.090200         0.0
5  482859.090200  0.010000  482859.090200 -482359.090332         0.0
6  482859.100444  0.010244  482859.090332 -482359.090088         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:53:35]  Iteration: 251
[07/11 20:53:50]  Generator returned sat in 15.182549 secs.
[07/11 20:53:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:53:51]  Improved gap from 1/16384 to 15.625
[07/11 20:53:52]  Improved number of small numbers from 34 to 46 out of a max of 77
[07/11 20:53:52]  Verifer returned sat in 1.771982 secs.
[07/11 20:53:52]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  482503.236328   0.000244  482489.458492 -482489.458496         0.0
1  482503.236328   0.000244  482503.236053 -482418.861053         0.0
2  482518.861175  15.625122  482518.861053 -482334.486053         0.0
3  482534.486175  15.625122  482534.486053 -482250.111084         0.0
4  482572.277394  37.791341  482556.402638 -482172.277394         0.0
5  482606.402516  49.999878  482572.277394 -482106.402588         0.0
6  482610.068735  37.791341  482606.402588 -482106.402588         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:53:53]  Iteration: 252
[07/11 20:54:02]  Generator returned sat in 8.867271 secs.
[07/11 20:54:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:54:02]  Verifer returned unsat in 0.060479 secs.
[07/11 20:54:02]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:54:02]  Iteration: 253
[07/11 20:54:11]  Generator returned sat in 8.783656 secs.
[07/11 20:54:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:54:11]  Verifer returned unsat in 0.119679 secs.
[07/11 20:54:11]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:54:11]  Iteration: 254
[07/11 20:54:19]  Generator returned sat in 8.340913 secs.
[07/11 20:54:20]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:54:20]  Verifer returned unsat in 0.057601 secs.
[07/11 20:54:20]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:54:20]  Iteration: 255
[07/11 20:54:28]  Generator returned sat in 8.308119 secs.
[07/11 20:54:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:54:28]  Verifer returned unsat in 0.050182 secs.
[07/11 20:54:28]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:54:28]  Iteration: 256
[07/11 20:54:37]  Generator returned sat in 8.703779 secs.
[07/11 20:54:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:54:38]  Improved gap from 1/16384 to 10.9375
[07/11 20:54:38]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 20:54:38]  Verifer returned sat in 0.433994 secs.
[07/11 20:54:38]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  481672.277100   0.000244  481647.235352 -481647.235352         0.0
1  481672.277100   0.000244  481672.276855 -481583.214355         0.0
2  481694.151611  21.874756  481683.214355 -481494.151855         0.0
3  481719.193359  35.979004  481694.151855 -481419.193359         0.0
4  481730.047607  35.895752  481719.193359 -481330.130859         0.0
5  481769.193115  49.999756  481730.130859 -481269.193115         0.0
6  481769.193115  35.895752  481769.193115 -481269.193115         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:54:38]  Iteration: 257
[07/11 20:54:47]  Generator returned sat in 9.223928 secs.
[07/11 20:54:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:54:48]  Improved gap from 2389/1024 to 7.8125
[07/11 20:54:49]  Improved number of small numbers from 41 to 70 out of a max of 78
[07/11 20:54:49]  Verifer returned sat in 1.170460 secs.
[07/11 20:54:49]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  480172.951172   0.000244  480165.138550 -480165.138672         0.0
1  480172.951172   0.000244  480172.951050 -480080.763672         0.0
2  480180.802673   7.851624  480180.802490 -479988.614990         0.0
3  480188.614990   7.812500  480188.614990 -479910.146240         0.0
4  480217.958740  29.343750  480210.146240 -479817.958740         0.0
5  480260.145996  49.999756  480217.958740 -479760.145996         0.0
6  480260.145996  29.343750  480260.145996 -479760.145996         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:54:49]  Iteration: 258
[07/11 20:54:59]  Generator returned sat in 9.520190 secs.
[07/11 20:54:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:54:59]  Verifer returned unsat in 0.091365 secs.
[07/11 20:54:59]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:54:59]  Iteration: 259
[07/11 20:55:08]  Generator returned sat in 8.877366 secs.
[07/11 20:55:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:55:08]  Improved gap from 1/16384 to 6.25
[07/11 20:55:09]  Improved number of small numbers from 30 to 39 out of a max of 77
[07/11 20:55:09]  Verifer returned sat in 0.821192 secs.
[07/11 20:55:09]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  480351.302734   0.000244  480333.802643 -480351.302490         0.0
1  480351.302734   0.000244  480351.302561 -480257.552561         0.0
2  480357.552684   6.250122  480357.552561 -480163.802561         0.0
3  480363.802684   6.250122  480363.802561 -480089.552246         0.0
4  480395.802480  31.999919  480389.552480 -479995.802480         0.0
5  480439.552358  49.999878  480395.802480 -479939.552358         0.0
6  480439.552358  30.499959  480439.552358 -479939.552246         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:55:09]  Iteration: 260
[07/11 20:55:19]  Generator returned sat in 10.048958 secs.
[07/11 20:55:19]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:55:20]  Verifer returned unsat in 0.056652 secs.
[07/11 20:55:20]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:55:20]  Iteration: 261
[07/11 20:55:28]  Generator returned sat in 8.411654 secs.
[07/11 20:55:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:55:28]  Verifer returned unsat in 0.122896 secs.
[07/11 20:55:28]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:55:28]  Iteration: 262
[07/11 20:55:37]  Generator returned sat in 8.667248 secs.
[07/11 20:55:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-4] + 2)[0m
[07/11 20:55:37]  Verifer returned unsat in 0.121480 secs.
[07/11 20:55:37]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-4] + 2)[0m
[07/11 20:55:37]  Iteration: 263
[07/11 20:55:51]  Generator returned sat in 12.991632 secs.
[07/11 20:55:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1)[0m
[07/11 20:55:51]  Improved gap from 1/16384 to 9.375
[07/11 20:55:52]  Improved number of small numbers from 30 to 46 out of a max of 77
[07/11 20:55:52]  Verifer returned sat in 0.783762 secs.
[07/11 20:55:52]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  456593.792480   0.000244  456484.417480 -456484.417480         0.0
1  456593.792480   0.000244  456562.261434 -456484.417480         0.0
2  456593.792480   0.000244  456584.417622 -456393.792622         0.0
3  456593.792745   9.375122  456593.792622 -456315.948730         0.0
4  456624.620717  30.828094  456615.948811 -456225.323811         0.0
5  456665.948689  49.999878  456625.323811 -456165.948689         0.0
6  456665.948689  30.828094  456665.948689 -456165.948486         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:55:52]  Iteration: 264
[07/11 20:56:02]  Generator returned sat in 9.945807 secs.
[07/11 20:56:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + 1)[0m
[07/11 20:56:02]  Improved gap from 1/16384 to 4.6875
[07/11 20:56:03]  Improved number of small numbers from 36 to 47 out of a max of 77
[07/11 20:56:03]  Verifer returned sat in 1.048913 secs.
[07/11 20:56:03]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  456721.292969   0.000244  456716.870804 -456721.292725         0.0
1  456721.292969   0.000244  456721.292725 -456625.980225         0.0
2  456741.104980  19.812256  456736.417664 -456541.105164         0.0
3  456745.792664   9.375000  456741.105164 -456445.792664         0.0
4  456791.105103  49.999939  456745.792664 -456391.105103         0.0
5  456791.105103  45.312378  456791.105103 -456295.792603         0.0
6  456835.855072  44.749969  456795.792603 -456295.792480         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:56:03]  Iteration: 265
[07/11 20:56:13]  Generator returned sat in 9.129431 secs.
[07/11 20:56:13]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:56:13]  Improved gap from 0 to 4.6875
[07/11 20:56:14]  Improved number of small numbers from 30 to 39 out of a max of 77
[07/11 20:56:14]  Verifer returned sat in 0.866320 secs.
[07/11 20:56:14]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  456736.417480   0.000244  456713.344828 -456731.729980         0.0
1  456736.417480   0.000244  456731.730164 -456636.417664         0.0
2  456736.417786   4.687622  456736.417664 -456541.105164         0.0
3  456741.105286   4.687622  456741.105164 -456445.792725         0.0
4  456793.938334  52.833171  456748.625956 -456393.938334         0.0
5  456793.938334  26.854146  456793.938334 -456298.625834         0.0
6  456846.771505  52.833171  456798.625834 -456298.625732         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:56:14]  Iteration: 266
[07/11 20:56:23]  Generator returned sat in 9.004499 secs.
[07/11 20:56:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 20:56:23]  Improved gap from 0 to 4.6875
[07/11 20:56:24]  Improved number of small numbers from 47 to 54 out of a max of 77
[07/11 20:56:24]  Verifer returned sat in 0.664858 secs.
[07/11 20:56:24]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  475449.437744   0.000244  475427.531677 -475427.531738         0.0
1  475449.437744   0.000244  475444.750366 -475349.437866         0.0
2  475449.437988   4.687622  475449.437866 -475254.125366         0.0
3  475458.812866   9.375000  475454.125366 -475158.812866         0.0
4  475504.125244  49.999878  475458.812866 -475104.125244         0.0
5  475504.125244  24.937500  475504.125244 -475008.812744         0.0
6  475549.375183  45.249939  475508.812744 -475008.812744         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 20:56:24]  Iteration: 267
[07/11 20:56:36]  Generator returned sat in 11.903227 secs.
[07/11 20:56:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:56:36]  Verifer returned unsat in 0.049792 secs.
[07/11 20:56:36]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:56:36]  Iteration: 268
[07/11 20:56:48]  Generator returned sat in 11.174132 secs.
[07/11 20:56:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 2)[0m
[07/11 20:56:48]  Verifer returned unsat in 0.054969 secs.
[07/11 20:56:48]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 2)[0m
[07/11 20:56:48]  Iteration: 269
[07/11 20:56:58]  Generator returned sat in 9.861247 secs.
[07/11 20:56:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:56:58]  Verifer returned unsat in 0.111133 secs.
[07/11 20:56:58]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:56:58]  Iteration: 270
[07/11 20:57:07]  Generator returned sat in 9.113355 secs.
[07/11 20:57:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:57:08]  Verifer returned unsat in 0.097074 secs.
[07/11 20:57:08]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 20:57:08]  Iteration: 271
[07/11 20:57:18]  Generator returned sat in 10.117142 secs.
[07/11 20:57:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 2)[0m
[07/11 20:57:18]  Verifer returned unsat in 0.088023 secs.
[07/11 20:57:18]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 2)[0m
[07/11 20:57:18]  Iteration: 272
[07/11 20:57:36]  Generator returned sat in 17.452381 secs.
[07/11 20:57:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-4] + 3/2)[0m
[07/11 20:57:36]  Verifer returned unsat in 0.056283 secs.
[07/11 20:57:36]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-4] + 3/2)[0m
[07/11 20:57:36]  Iteration: 273
[07/11 20:57:45]  Generator returned sat in 9.023167 secs.
[07/11 20:57:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 3/2)[0m
[07/11 20:57:45]  Verifer returned unsat in 0.060108 secs.
[07/11 20:57:45]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 3/2)[0m
[07/11 20:57:45]  Iteration: 274
[07/11 20:57:56]  Generator returned sat in 9.987824 secs.
[07/11 20:57:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:57:56]  Verifer returned unsat in 0.048816 secs.
[07/11 20:57:56]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 20:57:56]  Iteration: 275
[07/11 20:58:10]  Generator returned sat in 14.308131 secs.
[07/11 20:58:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 20:58:11]  Improved gap from 0 to 6.25
[07/11 20:58:12]  Improved number of small numbers from 32 to 42 out of a max of 77
[07/11 20:58:12]  Verifer returned sat in 1.585085 secs.
[07/11 20:58:12]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  430703.014415   0.000244  430684.617445 -430684.617445         0.0
1  430703.014415   0.000244  430684.617445 -430603.014415         0.0
2  430703.014415  18.396729  430703.014415 -430509.264648         0.0
3  430716.985053  13.970638  430710.735053 -430416.985107         0.0
4  430762.587798  51.852745  430718.837920 -430362.587798         0.0
5  430762.587920  43.750000  430762.587798 -430268.837891         0.0
6  430814.440543  51.852745  430768.837891 -430268.837646         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:58:12]  Iteration: 276
[07/11 20:58:25]  Generator returned sat in 13.099547 secs.
[07/11 20:58:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:58:26]  Verifer returned unsat in 0.161093 secs.
[07/11 20:58:26]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 20:58:26]  Iteration: 277
[07/11 20:58:46]  Generator returned sat in 19.547951 secs.
[07/11 20:58:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:58:46]  Verifer returned unsat in 0.060614 secs.
[07/11 20:58:46]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:58:46]  Iteration: 278
[07/11 20:58:55]  Generator returned sat in 8.986203 secs.
[07/11 20:58:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 20:58:55]  Improved gap from 0 to 9.375
[07/11 20:58:56]  Improved number of small numbers from 36 to 49 out of a max of 77
[07/11 20:58:56]  Verifer returned sat in 0.935333 secs.
[07/11 20:58:56]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  417058.056396   0.000244  417045.493500 -417058.056152         0.0
1  417058.056396  12.562744  417058.056244 -416973.712158         0.0
2  417083.087280  25.031036  417073.712280 -416883.087280         0.0
3  417083.087402   9.375122  417083.087280 -416792.462402         0.0
4  417133.149597  50.062317  417092.524719 -416733.149597         0.0
5  417133.149597  40.624756  417133.149597 -416642.524658         0.0
6  417183.211914  50.062317  417142.524658 -416642.524414         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:58:56]  Iteration: 279
[07/11 20:59:06]  Generator returned sat in 9.946463 secs.
[07/11 20:59:06]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:59:07]  Improved gap from 50859/16384 to 6.25
[07/11 20:59:07]  Improved number of small numbers from 65 to 75 out of a max of 77
[07/11 20:59:07]  Verifer returned sat in 0.651407 secs.
[07/11 20:59:07]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  429082.899414   0.000244  429058.982992 -429076.649658         0.0
1  429082.899414   0.000244  429076.649658 -428982.899658         0.0
2  429082.899902   6.250244  429082.899658 -428889.149658         0.0
3  429089.149902   6.250244  429089.149658 -428795.399658         0.0
4  429135.899658  46.750000  429095.399658 -428735.899658         0.0
5  429135.899658  29.625000  429135.899658 -428642.149658         0.0
6  429182.649658  46.750000  429142.149658 -428642.149658         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:59:07]  Iteration: 280
[07/11 20:59:18]  Generator returned sat in 10.030127 secs.
[07/11 20:59:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:59:18]  Verifer returned unsat in 0.098130 secs.
[07/11 20:59:18]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:59:18]  Iteration: 281
[07/11 20:59:27]  Generator returned sat in 9.450922 secs.
[07/11 20:59:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:59:28]  Verifer returned unsat in 0.055066 secs.
[07/11 20:59:28]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:59:28]  Iteration: 282
[07/11 20:59:38]  Generator returned sat in 10.217422 secs.
[07/11 20:59:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:59:38]  Verifer returned unsat in 0.082232 secs.
[07/11 20:59:38]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 20:59:38]  Iteration: 283
[07/11 20:59:53]  Generator returned sat in 15.036694 secs.
[07/11 20:59:54]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 20:59:54]  Improved gap from 0 to 14.0625
[07/11 20:59:54]  Improved number of small numbers from 44 to 52 out of a max of 77
[07/11 20:59:54]  Verifer returned sat in 0.834331 secs.
[07/11 20:59:54]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  429039.555908   0.000244  429003.399780 -429003.399902         0.0
1  429039.555908   0.000244  429025.493530 -428939.556030         0.0
2  429039.556030  14.062500  429039.556030 -428853.618530         0.0
3  429053.618652  14.062622  429053.618530 -428767.681152         0.0
4  429113.868530  60.250000  429079.305786 -428713.868530         0.0
5  429129.305664  49.999878  429113.868530 -428629.305664         0.0
6  429174.118530  60.250000  429129.305664 -428629.305664         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 20:59:55]  Iteration: 284
[07/11 21:00:09]  Generator returned sat in 13.871094 secs.
[07/11 21:00:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-3] + 2)[0m
[07/11 21:00:09]  Improved gap from 0 to 14.0625
[07/11 21:00:09]  Improved number of small numbers from 48 to 60 out of a max of 77
[07/11 21:00:10]  Verifer returned sat in 0.590494 secs.
[07/11 21:00:10]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  429030.222412   0.000244  429030.222412 -429030.222412         0.0
1  429030.222656   0.000244  429030.222435 -428947.195068         0.0
2  429061.257599  31.035164  429047.195099 -428861.257812         0.0
3  429081.741943  34.546844  429067.679443 -428781.741943         0.0
4  429113.866943  46.187500  429081.741943 -428713.866943         0.0
5  429131.741882  49.999939  429113.866943 -428631.741882         0.0
6  429160.054443  46.187500  429131.741882 -428631.741699         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:00:10]  Iteration: 285
[07/11 21:00:30]  Generator returned sat in 20.511598 secs.
[07/11 21:00:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 3/2)[0m
[07/11 21:00:32]  Improved gap from 1/8192 to 14.0625
[07/11 21:00:32]  Improved number of small numbers from 36 to 41 out of a max of 77
[07/11 21:00:32]  Verifer returned sat in 1.888729 secs.
[07/11 21:00:32]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  427364.824707    0.000244  427364.824472 -427464.824463         0.0
1  427520.637826  155.813354  427520.637704 -427459.200439         0.0
2  427590.325448   69.687744  427559.200448 -427390.325448         0.0
3  427590.325570   31.125122  427590.325448 -427304.387948         0.0
4  427618.450448   28.125000  427604.387948 -427218.450448         0.0
5  427654.387826   49.999878  427618.450448 -427154.387826         0.0
6  427654.387826   28.125000  427654.387826 -427154.387695         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:00:33]  Iteration: 286
[07/11 21:00:44]  Generator returned sat in 11.567433 secs.
[07/11 21:00:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 21:00:45]  Improved gap from 0 to 14.0625
[07/11 21:00:45]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 21:00:45]  Verifer returned sat in 0.543624 secs.
[07/11 21:00:45]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  427665.560547   0.000244  427651.498047 -427665.560547         0.0
1  427665.560547   0.000244  427665.560547 -427579.623047         0.0
2  427694.232178  28.671631  427680.169678 -427494.232178         0.0
3  427694.232422  14.062744  427694.232178 -427416.825928         0.0
4  427730.888428  36.656250  427716.825928 -427330.888428         0.0
5  427766.825684  49.999756  427730.888428 -427266.825684         0.0
6  427767.544678  36.656250  427766.825684 -427266.825684         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:00:45]  Iteration: 287
[07/11 21:01:03]  Generator returned sat in 17.374650 secs.
[07/11 21:01:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 2)[0m
[07/11 21:01:03]  Verifer returned unsat in 0.036449 secs.
[07/11 21:01:03]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 2)[0m
[07/11 21:01:03]  Iteration: 288
[07/11 21:01:14]  Generator returned sat in 10.388356 secs.
[07/11 21:01:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:01:14]  Verifer returned unsat in 0.044425 secs.
[07/11 21:01:14]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:01:14]  Iteration: 289
[07/11 21:01:24]  Generator returned sat in 10.004710 secs.
[07/11 21:01:24]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 21:01:24]  Improved gap from 1/16384 to 6.25
[07/11 21:01:25]  Improved number of small numbers from 69 to 77 out of a max of 77
[07/11 21:01:25]  Verifer returned sat in 0.308054 secs.
[07/11 21:01:25]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  427665.560547   0.000244  427652.060547 -427665.560547         0.0
1  427665.560547  13.500000  427665.560547 -427571.810547         0.0
2  427678.060303  12.499756  427671.810547 -427478.060547         0.0
3  427678.060547   6.250000  427678.060547 -427384.310547         0.0
4  427719.560547  41.500000  427684.310547 -427319.560547         0.0
5  427719.560547  27.000000  427719.560547 -427225.810547         0.0
6  427761.060547  41.500000  427725.810547 -427225.810547         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:01:25]  Iteration: 290
[07/11 21:01:36]  Generator returned sat in 11.014255 secs.
[07/11 21:01:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-4] + 2)[0m
[07/11 21:01:36]  Verifer returned unsat in 0.037587 secs.
[07/11 21:01:36]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-4] + 2)[0m
[07/11 21:01:36]  Iteration: 291
[07/11 21:01:46]  Generator returned sat in 10.101926 secs.
[07/11 21:01:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:01:47]  Verifer returned unsat in 0.059545 secs.
[07/11 21:01:47]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:01:47]  Iteration: 292
[07/11 21:01:57]  Generator returned sat in 10.272073 secs.
[07/11 21:01:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 21:01:57]  Verifer returned unsat in 0.033679 secs.
[07/11 21:01:57]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 21:01:57]  Iteration: 293
[07/11 21:02:07]  Generator returned sat in 9.924426 secs.
[07/11 21:02:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:02:08]  Verifer returned unsat in 0.035105 secs.
[07/11 21:02:08]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:02:08]  Iteration: 294
[07/11 21:02:23]  Generator returned sat in 15.362256 secs.
[07/11 21:02:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:02:23]  Verifer returned unsat in 0.047067 secs.
[07/11 21:02:23]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:02:23]  Iteration: 295
[07/11 21:02:34]  Generator returned sat in 10.739359 secs.
[07/11 21:02:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:02:34]  Verifer returned unsat in 0.040035 secs.
[07/11 21:02:34]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:02:35]  Iteration: 296
[07/11 21:02:45]  Generator returned sat in 9.974396 secs.
[07/11 21:02:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:02:45]  Improved gap from 0 to 10.9375
[07/11 21:02:46]  Improved number of small numbers from 32 to 44 out of a max of 77
[07/11 21:02:46]  Verifer returned sat in 1.051620 secs.
[07/11 21:02:46]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  427648.061035   0.000244  427621.332092 -427621.332275         0.0
1  427648.061035   0.000244  427648.060852 -427558.998352         0.0
2  427658.998474  10.937622  427658.998352 -427469.935852         0.0
3  427669.935974  10.937622  427669.935852 -427380.873535         0.0
4  427728.435242  58.499390  427689.372864 -427328.435242         0.0
5  427728.435242  39.062256  427728.435242 -427239.372803         0.0
6  427785.809692  57.374451  427739.372803 -427239.372803         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:02:46]  Iteration: 297
[07/11 21:02:59]  Generator returned sat in 12.301911 secs.
[07/11 21:02:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:02:59]  Verifer returned unsat in 0.053624 secs.
[07/11 21:02:59]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:02:59]  Iteration: 298
[07/11 21:03:09]  Generator returned sat in 9.939723 secs.
[07/11 21:03:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:03:09]  Improved gap from 0 to 7.8125
[07/11 21:03:10]  Improved number of small numbers from 39 to 45 out of a max of 77
[07/11 21:03:10]  Verifer returned sat in 0.959404 secs.
[07/11 21:03:10]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  443856.250183   0.000244  443832.468964 -443832.468994         0.0
1  443856.250183   0.000244  443832.469086 -443756.250183         0.0
2  443856.250183   0.000244  443856.250183 -443664.062683         0.0
3  443864.062805   7.812622  443864.062683 -443571.875244         0.0
4  443917.531250  53.468567  443875.343872 -443517.531250         0.0
5  443922.390564  47.046692  443917.531250 -443425.343750         0.0
6  443970.999817  53.468567  443925.343750 -443425.343750         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:03:10]  Iteration: 299
[07/11 21:03:25]  Generator returned sat in 14.954404 secs.
[07/11 21:03:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/11 21:03:26]  Improved gap from 0 to 10.9375
[07/11 21:03:26]  Improved number of small numbers from 45 to 51 out of a max of 77
[07/11 21:03:26]  Verifer returned sat in 0.813451 secs.
[07/11 21:03:26]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  414986.531250   0.000244  414942.968974 -414942.968994         0.0
1  414986.531250   0.000244  414986.531108 -414897.468608         0.0
2  414997.468730  10.937622  414997.468608 -414808.406108         0.0
3  415019.343608  21.875000  415008.406108 -414719.343750         0.0
4  415059.530924  51.124817  415020.468547 -414659.530924         0.0
5  415059.530924  35.374969  415059.530924 -414570.468424         0.0
6  415110.655741  51.124817  415070.468424 -414570.468424         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:03:27]  Iteration: 300
[07/11 21:03:42]  Generator returned sat in 15.629896 secs.
[07/11 21:03:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 21:03:43]  Verifer returned unsat in 0.057972 secs.
[07/11 21:03:43]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 21:03:43]  Iteration: 301
[07/11 21:03:57]  Generator returned sat in 14.083153 secs.
[07/11 21:03:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 1)[0m
[07/11 21:03:58]  Improved gap from 0 to 3.125
[07/11 21:03:58]  Improved number of small numbers from 38 to 45 out of a max of 77
[07/11 21:03:58]  Verifer returned sat in 1.379443 secs.
[07/11 21:03:58]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  415793.038870   0.000244  415775.580537 -415789.913818         0.0
1  415793.038870   0.000244  415789.913870 -415693.038870         0.0
2  415793.038870   0.000244  415793.038870 -415596.163870         0.0
3  415799.288870   6.250000  415796.163870 -415499.289062         0.0
4  415832.080537  35.916667  415821.372204 -415432.080537         0.0
5  415867.997204  46.625000  415832.080537 -415367.997204         0.0
6  415867.997204  35.916667  415867.997204 -415367.997070         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:03:59]  Iteration: 302
[07/11 21:04:16]  Generator returned sat in 16.779303 secs.
[07/11 21:04:16]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 21:04:16]  Verifer returned unsat in 0.075754 secs.
[07/11 21:04:16]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 21:04:16]  Iteration: 303
[07/11 21:04:27]  Generator returned sat in 10.483535 secs.
[07/11 21:04:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 21:04:27]  Improved gap from 0 to 7.8125
[07/11 21:04:28]  Improved number of small numbers from 30 to 36 out of a max of 77
[07/11 21:04:28]  Verifer returned sat in 0.972574 secs.
[07/11 21:04:28]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  441369.414062   0.000244  441369.413931 -441369.413931         0.0
1  441369.414062   0.000061  441369.413931 -441287.451172         0.0
2  441395.263907  25.849976  441387.451407 -441195.263907         0.0
3  441395.263968   7.812561  441395.263907 -441103.076407         0.0
4  441445.263846  49.999939  441403.076407 -441045.263846         0.0
5  441445.551383  42.474976  441445.263846 -440953.076346         0.0
6  441494.701316  49.437469  441453.076346 -440953.076172         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:04:28]  Iteration: 304
[07/11 21:04:44]  Generator returned sat in 15.529871 secs.
[07/11 21:04:44]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 21:04:44]  Verifer returned unsat in 0.120535 secs.
[07/11 21:04:44]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 21:04:44]  Iteration: 305
[07/11 21:04:55]  Generator returned sat in 11.103085 secs.
[07/11 21:04:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 21:04:56]  Verifer returned unsat in 0.084143 secs.
[07/11 21:04:56]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 21:04:56]  Iteration: 306
[07/11 21:05:07]  Generator returned sat in 11.390455 secs.
[07/11 21:05:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:05:07]  Verifer returned unsat in 0.046738 secs.
[07/11 21:05:07]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:05:07]  Iteration: 307
[07/11 21:05:18]  Generator returned sat in 10.708907 secs.
[07/11 21:05:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:05:18]  Verifer returned unsat in 0.045135 secs.
[07/11 21:05:18]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:05:18]  Iteration: 308
[07/11 21:05:29]  Generator returned sat in 10.682355 secs.
[07/11 21:05:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:05:29]  Verifer returned unsat in 0.052186 secs.
[07/11 21:05:29]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:05:29]  Iteration: 309
[07/11 21:05:40]  Generator returned sat in 10.556293 secs.
[07/11 21:05:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + 2S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:05:40]  Improved gap from 1/16384 to 10.9375
[07/11 21:05:41]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 21:05:41]  Verifer returned sat in 0.378700 secs.
[07/11 21:05:41]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  441470.69458   0.000244  441448.44458 -441448.44458         0.0
1  441470.69458   0.000244  441459.75708 -441370.69458         0.0
2  441481.63208  21.875000  441470.69458 -441281.63208         0.0
3  441481.63208  10.937500  441481.63208 -441192.56958         0.0
4  441516.69458  35.062500  441505.00708 -441116.69458         0.0
5  441551.75708  46.750000  441516.69458 -441051.75708         0.0
6  441551.75708  35.062500  441551.75708 -441051.75708         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:05:41]  Iteration: 310
[07/11 21:05:54]  Generator returned sat in 12.423134 secs.
[07/11 21:05:54]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:05:54]  Improved gap from 1/16384 to 6.25
[07/11 21:05:55]  Improved number of small numbers from 34 to 41 out of a max of 77
[07/11 21:05:55]  Verifer returned sat in 1.178924 secs.
[07/11 21:05:55]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  441448.850830   0.000244  441409.726013 -441409.726074         0.0
1  441448.850830   0.000244  441442.600891 -441348.850891         0.0
2  441448.851013   6.250122  441448.850891 -441255.100891         0.0
3  441455.101013   6.250122  441455.100891 -441161.351074         0.0
4  441531.725647  76.624756  441487.975769 -441131.725647         0.0
5  441537.975647  49.999878  441531.725647 -441037.975647         0.0
6  441605.912964  74.187317  441537.975647 -441037.975586         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:05:55]  Iteration: 311
[07/11 21:06:10]  Generator returned sat in 14.734842 secs.
[07/11 21:06:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 3/2)[0m
[07/11 21:06:12]  Improved gap from 1/8192 to 9.375
[07/11 21:06:13]  Improved number of small numbers from 39 to 45 out of a max of 77
[07/11 21:06:13]  Verifer returned sat in 2.825323 secs.
[07/11 21:06:13]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  442945.880127   0.000244  442709.456088 -442809.456088         0.0
1  442945.880127   0.000244  442909.456088 -442809.456088         0.0
2  442945.880127   0.000244  442945.880022 -442755.255127         0.0
3  442977.369243  31.489221  442977.369121 -442686.744141         0.0
4  442996.483220  19.114099  442987.108220 -442596.483220         0.0
5  443037.108097  49.999878  442996.483220 -442537.108097         0.0
6  443037.108097  19.114099  443037.108097 -442537.107910         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:06:13]  Iteration: 312
[07/11 21:06:26]  Generator returned sat in 12.790613 secs.
[07/11 21:06:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 21:06:27]  Verifer returned unsat in 0.103677 secs.
[07/11 21:06:27]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 21:06:27]  Iteration: 313
[07/11 21:06:38]  Generator returned sat in 11.562184 secs.
[07/11 21:06:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 21:06:39]  Improved gap from 1/16384 to 4.6875
[07/11 21:06:40]  Improved number of small numbers from 36 to 46 out of a max of 77
[07/11 21:06:40]  Verifer returned sat in 1.216855 secs.
[07/11 21:06:40]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  442885.607910   0.000244  442867.656763 -442867.656982         0.0
1  442885.607910   0.000244  442876.587345 -442785.607910         0.0
2  442890.295597  13.708252  442885.608097 -442690.295597         0.0
3  442890.295720   4.687622  442890.295597 -442612.045410         0.0
4  442916.733097  26.437500  442912.045597 -442516.733097         0.0
5  442962.045475  49.999878  442916.733097 -442462.045475         0.0
6  442962.045475  26.437500  442962.045475 -442462.045410         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:06:40]  Iteration: 314
[07/11 21:06:54]  Generator returned sat in 13.972105 secs.
[07/11 21:06:54]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-4] + 3/2)[0m
[07/11 21:06:55]  Improved gap from 0 to 6.25
[07/11 21:06:55]  Improved number of small numbers from 30 to 40 out of a max of 77
[07/11 21:06:55]  Verifer returned sat in 0.840443 secs.
[07/11 21:06:55]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  412479.004470   0.000244  412455.504561 -412455.504639         0.0
1  412479.004470   0.000244  412472.754470 -412379.004470         0.0
2  412479.004470   0.000244  412479.004470 -412285.254470         0.0
3  412485.254592   6.250122  412485.254470 -412191.504639         0.0
4  412536.879286  51.624817  412493.129408 -412136.879286         0.0
5  412536.879286  30.437469  412536.879286 -412043.129395         0.0
6  412588.504103  51.624817  412543.129395 -412043.129395         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:06:56]  Iteration: 315
[07/11 21:07:14]  Generator returned sat in 18.097963 secs.
[07/11 21:07:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:07:14]  Improved gap from 0 to 6.25
[07/11 21:07:15]  Improved number of small numbers from 32 to 44 out of a max of 77
[07/11 21:07:15]  Verifer returned sat in 1.256955 secs.
[07/11 21:07:15]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  412473.629639   0.000244  412453.629558 -412453.629639         0.0
1  412473.629639   0.000244  412473.629449 -412379.879449         0.0
2  412479.879449   6.250000  412479.879449 -412286.129449         0.0
3  412486.129571   6.250122  412486.129449 -412193.129395         0.0
4  412536.879286  50.749837  412493.129408 -412136.879286         0.0
5  412536.879286  30.499980  412536.879286 -412043.129395         0.0
6  412587.629124  50.749837  412543.129395 -412043.129150         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:07:16]  Iteration: 316
[07/11 21:07:29]  Generator returned sat in 13.144855 secs.
[07/11 21:07:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:07:29]  Improved gap from 1/16384 to 7.8125
[07/11 21:07:30]  Improved number of small numbers from 32 to 40 out of a max of 77
[07/11 21:07:30]  Verifer returned sat in 0.876025 secs.
[07/11 21:07:30]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  448713.879639   0.000244  448701.129653 -448701.129883         0.0
1  448713.879639   0.000244  448713.879531 -448621.692031         0.0
2  448729.504531  15.625000  448721.692031 -448529.504531         0.0
3  448749.598220  27.906189  448729.504531 -448449.598220         0.0
4  448759.879408  30.374878  448749.598220 -448359.879408         0.0
5  448799.598097  49.999878  448759.879408 -448299.598097         0.0
6  448799.598097  30.374878  448799.598097 -448299.597900         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:07:30]  Iteration: 317
[07/11 21:07:51]  Generator returned sat in 21.154937 secs.
[07/11 21:07:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:07:52]  Verifer returned unsat in 0.133696 secs.
[07/11 21:07:52]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:07:52]  Iteration: 318
[07/11 21:08:04]  Generator returned sat in 12.194661 secs.
[07/11 21:08:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:08:04]  Verifer returned unsat in 0.043424 secs.
[07/11 21:08:04]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:08:04]  Iteration: 319
[07/11 21:08:18]  Generator returned sat in 13.499548 secs.
[07/11 21:08:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2)[0m
[07/11 21:08:18]  Verifer returned unsat in 0.064193 secs.
[07/11 21:08:18]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2)[0m
[07/11 21:08:18]  Iteration: 320
[07/11 21:08:31]  Generator returned sat in 12.394773 secs.
[07/11 21:08:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:08:31]  Verifer returned unsat in 0.068228 secs.
[07/11 21:08:31]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:08:31]  Iteration: 321
[07/11 21:08:47]  Generator returned sat in 15.623329 secs.
[07/11 21:08:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/11 21:08:47]  Improved gap from 1/16384 to 10.9375
[07/11 21:08:48]  Improved number of small numbers from 38 to 77 out of a max of 77
[07/11 21:08:48]  Verifer returned sat in 0.383647 secs.
[07/11 21:08:48]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  447749.587646   0.000244  447749.587646 -447749.587891         0.0
1  447773.462891  23.875244  447773.462646 -447684.400146         0.0
2  447784.400391  10.937744  447784.400146 -447595.337646         0.0
3  447806.275146  21.875000  447795.337646 -447506.275146         0.0
4  447843.087646  47.750000  447806.275146 -447443.087646         0.0
5  447843.087646  34.812500  447843.087646 -447354.025391         0.0
6  447890.837646  47.750000  447854.025391 -447354.025391         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:08:48]  Iteration: 322
[07/11 21:09:03]  Generator returned sat in 14.660252 secs.
[07/11 21:09:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:09:03]  Improved gap from 175/24 to 7.8125
[07/11 21:09:04]  Improved number of small numbers from 44 to 50 out of a max of 77
[07/11 21:09:04]  Verifer returned sat in 1.028313 secs.
[07/11 21:09:04]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  448896.233887   0.000244  448896.233765 -448910.983643         0.0
1  448910.983765  14.750000  448910.983643 -448818.796143         0.0
2  448930.254639  19.270996  448930.254435 -448738.066935         0.0
3  448938.067057   7.812622  448938.066935 -448645.879639         0.0
4  448995.004191  56.937256  448952.816813 -448595.004191         0.0
5  449002.816691  49.999878  448995.004191 -448502.816691         0.0
6  449051.941447  56.937256  449002.816691 -448502.816650         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:09:04]  Iteration: 323
[07/11 21:09:19]  Generator returned sat in 14.467927 secs.
[07/11 21:09:19]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/11 21:09:19]  Improved gap from 0 to 14.0625
[07/11 21:09:19]  Improved number of small numbers from 32 to 77 out of a max of 77
[07/11 21:09:19]  Verifer returned sat in 0.571295 secs.
[07/11 21:09:19]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  336704.260742   0.000244  336692.297119 -336692.297119         0.0
1  336704.260742   0.000244  336704.260742 -336618.323242         0.0
2  336718.323242  14.062500  336718.323242 -336534.682129         0.0
3  336758.072754  39.749512  336734.682373 -336458.072754         0.0
4  336772.135254  37.452881  336758.072754 -336372.135254         0.0
5  336808.072510  49.999756  336772.135254 -336308.072510         0.0
6  336808.072510  35.937256  336808.072510 -336308.072510         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:09:20]  Iteration: 324
[07/11 21:09:38]  Generator returned sat in 17.624203 secs.
[07/11 21:09:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/11 21:09:39]  Improved gap from 1/8192 to 9.375
[07/11 21:09:40]  Improved number of small numbers from 36 to 46 out of a max of 77
[07/11 21:09:40]  Verifer returned sat in 1.867461 secs.
[07/11 21:09:40]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  335015.524902   0.000244  334874.899058 -334915.524902         0.0
1  335015.524902   0.000244  335015.524790 -334915.524902         0.0
2  335037.400157  21.875366  335037.400035 -334865.524902         0.0
3  335074.900035  37.500000  335065.525035 -334774.900035         0.0
4  335084.275035  18.750000  335074.900035 -334684.275035         0.0
5  335124.899913  49.999878  335084.275035 -334624.899913         0.0
6  335124.899913  18.750000  335124.899913 -334624.899902         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:09:40]  Iteration: 325
[07/11 21:09:56]  Generator returned sat in 15.664912 secs.
[07/11 21:09:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -3/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 21:09:56]  Improved gap from 0 to 7.8125
[07/11 21:09:57]  Improved number of small numbers from 36 to 45 out of a max of 77
[07/11 21:09:57]  Verifer returned sat in 0.969008 secs.
[07/11 21:09:57]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  339216.089355   0.000244  339180.672862 -339180.673096         0.0
1  339216.089355   0.000244  339208.276866 -339116.089366         0.0
2  339223.901866  15.625000  339216.089366 -339023.901866         0.0
3  339223.901988   7.812622  339223.901866 -338931.714600         0.0
4  339274.943370  51.041504  339232.755992 -338874.943370         0.0
5  339274.943370  31.770813  339274.943370 -338782.755870         0.0
6  339325.984873  51.041504  339282.755870 -338782.755859         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:09:57]  Iteration: 326
[07/11 21:10:18]  Generator returned sat in 20.961431 secs.
[07/11 21:10:19]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 21:10:19]  Improved gap from 1/16384 to 9.375
[07/11 21:10:19]  Improved number of small numbers from 63 to 77 out of a max of 77
[07/11 21:10:19]  Verifer returned sat in 0.317201 secs.
[07/11 21:10:19]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  339208.277100   0.000244  339198.901855 -339208.276855         0.0
1  339208.277100   0.000244  339208.276855 -339117.651855         0.0
2  339217.652100   9.375244  339217.651855 -339027.026855         0.0
3  339227.027100   9.375244  339227.026855 -338936.402100         0.0
4  339256.151855  29.125000  339246.776855 -338856.151855         0.0
5  339296.651855  49.875000  339256.151855 -338796.651855         0.0
6  339296.651855  29.125000  339296.651855 -338796.651855         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:10:19]  Iteration: 327
[07/11 21:10:34]  Generator returned sat in 14.630733 secs.
[07/11 21:10:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/11 21:10:35]  Improved gap from 75/8 to 12.5
[07/11 21:10:35]  Improved number of small numbers from 34 to 38 out of a max of 77
[07/11 21:10:35]  Verifer returned sat in 1.398583 secs.
[07/11 21:10:35]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  339650.965576   0.000244  339650.965395 -339663.465332         0.0
1  339663.465517  12.500122  339663.465395 -339575.965395         0.0
2  339675.965517  12.500122  339675.965395 -339488.465395         0.0
3  339709.840334  33.874939  339688.465395 -339409.840334         0.0
4  339720.715395  32.250000  339709.840334 -339322.340334         0.0
5  339759.840211  49.999878  339722.340334 -339259.840211         0.0
6  339759.840211  32.250000  339759.840211 -339259.840088         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:10:36]  Iteration: 328
[07/11 21:10:58]  Generator returned sat in 22.320356 secs.
[07/11 21:10:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 21:10:59]  Verifer returned unsat in 0.093582 secs.
[07/11 21:10:59]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 21:10:59]  Iteration: 329
[07/11 21:11:12]  Generator returned sat in 13.782195 secs.
[07/11 21:11:13]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 21:11:13]  Improved gap from 1/16384 to 6.25
[07/11 21:11:14]  Improved number of small numbers from 32 to 42 out of a max of 77
[07/11 21:11:14]  Verifer returned sat in 1.109739 secs.
[07/11 21:11:14]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  339650.965576   0.000244  339645.590503 -339645.590576         0.0
1  339650.965576   5.375000  339650.965517 -339557.215517         0.0
2  339663.465517  12.500000  339657.215517 -339463.465576         0.0
3  339666.090598   8.875081  339666.090476 -339386.152832         0.0
4  339692.402915  26.312439  339686.152915 -339292.402915         0.0
5  339736.152793  49.999878  339692.402915 -339236.152793         0.0
6  339736.152793  26.312439  339736.152793 -339236.152588         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:11:14]  Iteration: 330
[07/11 21:11:37]  Generator returned sat in 23.182280 secs.
[07/11 21:11:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:11:38]  Improved gap from 0 to 10.9375
[07/11 21:11:39]  Improved number of small numbers from 38 to 51 out of a max of 77
[07/11 21:11:39]  Verifer returned sat in 0.942211 secs.
[07/11 21:11:39]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  341784.153320   0.000244  341755.965995 -341784.153076         0.0
1  341784.153320   0.000244  341784.153159 -341698.215576         0.0
2  341798.215842  14.062683  341798.215720 -341609.153220         0.0
3  341820.090720  21.875000  341809.153220 -341520.090820         0.0
4  341864.402976  55.249756  341825.340598 -341464.402976         0.0
5  341864.403098  39.062500  341864.402976 -341375.340576         0.0
6  341919.652732  55.249756  341875.340576 -341375.340576         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:11:39]  Iteration: 331
[07/11 21:12:04]  Generator returned sat in 25.115101 secs.
[07/11 21:12:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + 3/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/11 21:12:05]  Improved gap from 0 to 15.625
[07/11 21:12:05]  Improved number of small numbers from 34 to 45 out of a max of 77
[07/11 21:12:05]  Verifer returned sat in 1.114361 secs.
[07/11 21:12:05]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  342471.247223   0.000244  342427.025110 -342427.025146         0.0
1  342471.247223   0.000244  342455.622223 -342371.247223         0.0
2  342471.247223   0.000244  342471.247223 -342286.872314         0.0
3  342488.288931  17.041707  342488.288809 -342214.351074         0.0
4  342548.726064  60.437256  342514.351187 -342148.726064         0.0
5  342564.351064  49.999878  342548.726064 -342064.351074         0.0
6  342609.163320  60.437256  342564.351074 -342064.351074         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:12:06]  Iteration: 332
[07/11 21:12:29]  Generator returned sat in 22.601263 secs.
[07/11 21:12:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 21:12:29]  Verifer returned unsat in 0.046047 secs.
[07/11 21:12:29]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 21:12:29]  Iteration: 333
[07/11 21:12:42]  Generator returned sat in 13.479727 secs.
[07/11 21:12:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 2S_f[0][t-2] + -2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 21:12:43]  Verifer returned unsat in 0.079293 secs.
[07/11 21:12:43]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 2S_f[0][t-2] + -2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/11 21:12:43]  Iteration: 334
[07/11 21:12:57]  Generator returned sat in 13.797574 secs.
[07/11 21:12:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 21:12:57]  Improved gap from 0 to 0
[07/11 21:12:57]  Improved number of small numbers from 36 to 48 out of a max of 77
[07/11 21:12:57]  Verifer returned sat in 0.601036 secs.
[07/11 21:12:57]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  342118.703857   0.000244  342093.703870 -342093.704102         0.0
1  342118.703857   0.000244  342118.703809 -342018.703857         0.0
2  342118.703931   0.000122  342118.703931 -341918.703931         0.0
3  342118.703993   0.000061  342118.703931 -341818.704102         0.0
4  342168.703931  50.000000  342118.704102 -341768.703931         0.0
5  342168.703931   0.010000  342168.703931 -341668.703931         0.0
6  342218.703931  50.000000  342168.703931 -341668.703857         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:12:58]  Iteration: 335
[07/11 21:13:15]  Generator returned sat in 16.993158 secs.
[07/11 21:13:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/11 21:13:15]  Improved gap from 0 to 0
[07/11 21:13:16]  Improved number of small numbers from 30 to 37 out of a max of 77
[07/11 21:13:16]  Verifer returned sat in 0.808895 secs.
[07/11 21:13:16]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  397476.663818  0.000244  397476.663674 -397476.663674         0.0
1  397476.663818  0.000061  397476.663674 -397376.663818         0.0
2  397476.673735  0.010061  397476.673735 -397276.673735         0.0
3  397476.673796  0.000061  397476.673735 -397176.673828         0.0
4  397476.683796  0.010061  397476.683796 -397076.683796         0.0
5  397476.724041  0.040244  397476.683796 -396976.724041         0.0
6  397476.724041  0.010061  397476.724041 -396976.723877         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:13:16]  Iteration: 336
[07/11 21:13:40]  Generator returned sat in 23.629103 secs.
[07/11 21:13:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 21:13:41]  Improved gap from 0 to 6.25
[07/11 21:13:42]  Improved number of small numbers from 30 to 38 out of a max of 77
[07/11 21:13:42]  Verifer returned sat in 1.302110 secs.
[07/11 21:13:42]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  410582.170063   0.000244  410562.857603 -410562.857666         0.0
1  410582.170063   0.000244  410575.920063 -410482.170063         0.0
2  410582.170063   0.000244  410582.170063 -410388.420166         0.0
3  410595.420035  13.249973  410589.170035 -410295.420166         0.0
4  410627.419927  38.249891  410621.169927 -410227.419927         0.0
5  410671.169805  49.999878  410627.419927 -410171.169805         0.0
6  410671.169805  38.249891  410671.169805 -410171.169678         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:13:42]  Iteration: 337
[07/11 21:14:00]  Generator returned sat in 18.549145 secs.
[07/11 21:14:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -2S_f[0][t-4] + 2)[0m
[07/11 21:14:01]  Improved gap from 0 to 6.25
[07/11 21:14:01]  Improved number of small numbers from 46 to 55 out of a max of 77
[07/11 21:14:01]  Verifer returned sat in 0.520968 secs.
[07/11 21:14:01]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  399133.107422   0.000244  399110.107758 -399126.857666         0.0
1  399133.107422   0.000244  399126.857666 -399033.107666         0.0
2  399133.107910   6.250244  399133.107666 -398939.357666         0.0
3  399139.357666   6.250000  399139.357666 -398845.607910         0.0
4  399190.482483  51.124817  399146.732605 -398790.482483         0.0
5  399190.482483  30.687469  399190.482483 -398696.732483         0.0
6  399241.607300  51.124817  399196.732483 -398696.732422         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:14:02]  Iteration: 338
[07/11 21:14:21]  Generator returned sat in 19.289780 secs.
[07/11 21:14:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-3] + 0)[0m
[07/11 21:14:21]  Verifer returned unsat in 0.077839 secs.
[07/11 21:14:21]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-3] + 0)[0m
[07/11 21:14:21]  Iteration: 339
[07/11 21:14:38]  Generator returned sat in 16.731441 secs.
[07/11 21:14:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/11 21:14:39]  Improved gap from 1/16384 to 9.375
[07/11 21:14:39]  Improved number of small numbers from 30 to 40 out of a max of 77
[07/11 21:14:39]  Verifer returned sat in 1.082098 secs.
[07/11 21:14:39]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  343334.462646   0.000244  343334.462422 -343334.462422         0.0
1  343334.462646   0.000061  343334.462422 -343243.837646         0.0
2  343351.454678  16.992256  343351.454617 -343160.829834         0.0
3  343370.790593  19.335976  343361.415593 -343070.790593         0.0
4  343408.876568  47.460976  343370.790593 -343008.876568         0.0
5  343408.876629  38.086037  343408.876568 -342920.790527         0.0
6  343456.337544  47.460976  343420.790527 -342920.790527         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:14:40]  Iteration: 340
[07/11 21:14:59]  Generator returned sat in 19.130826 secs.
[07/11 21:14:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 1/2)[0m
[07/11 21:14:59]  Verifer returned unsat in 0.060190 secs.
[07/11 21:14:59]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 1/2)[0m
[07/11 21:14:59]  Iteration: 341
[07/11 21:15:15]  Generator returned sat in 15.583580 secs.
[07/11 21:15:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:15:15]  Verifer returned unsat in 0.056048 secs.
[07/11 21:15:15]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-4] + 1/2)[0m
[07/11 21:15:15]  Iteration: 342
[07/11 21:15:36]  Generator returned sat in 20.473203 secs.
[07/11 21:15:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 21:15:36]  Verifer returned unsat in 0.071784 secs.
[07/11 21:15:36]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 21:15:36]  Iteration: 343
[07/11 21:15:52]  Generator returned sat in 15.173414 secs.
[07/11 21:15:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/11 21:15:52]  Improved gap from 1/16384 to 7.8125
[07/11 21:15:53]  Improved number of small numbers from 32 to 41 out of a max of 77
[07/11 21:15:53]  Verifer returned sat in 0.863075 secs.
[07/11 21:15:53]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  342828.655518   0.000244  342797.671431 -342797.671631         0.0
1  342828.655518   0.000244  342828.655501 -342736.468001         0.0
2  342836.468123   7.812622  342836.468001 -342644.280501         0.0
3  342844.280623   7.812622  342844.280501 -342552.093018         0.0
4  342919.967391  75.686890  342877.780013 -342519.967391         0.0
5  342919.967391  42.187256  342919.967391 -342427.779891         0.0
6  342992.185591  72.218201  342927.779891 -342427.779785         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:15:53]  Iteration: 344
[07/11 21:16:10]  Generator returned sat in 16.988486 secs.
[07/11 21:16:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 2S_f[0][t-2] + -1S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/11 21:16:11]  Improved gap from 0 to 6.25
[07/11 21:16:11]  Improved number of small numbers from 34 to 77 out of a max of 77
[07/11 21:16:11]  Verifer returned sat in 0.983774 secs.
[07/11 21:16:11]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  345078.634277   0.000244  345072.384033 -345072.384033         0.0
1  345078.634277   0.000244  345078.634033 -344991.134033         0.0
2  345091.134277  12.500244  345091.134033 -344897.384033         0.0
3  345097.384277   6.250244  345097.384033 -344803.634033         0.0
4  345141.134033  43.750000  345103.634033 -344741.134033         0.0
5  345141.134033  37.500000  345141.134033 -344647.384277         0.0
6  345184.884033  43.750000  345147.384277 -344647.384033         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:16:12]  Iteration: 345
[07/11 21:16:42]  Generator returned sat in 29.778370 secs.
[07/11 21:16:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/11 21:16:42]  Improved gap from 25/4 to 10.9375
[07/11 21:16:42]  Improved number of small numbers from 69 to 75 out of a max of 77
[07/11 21:16:42]  Verifer returned sat in 0.431108 secs.
[07/11 21:16:42]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  345092.571289   0.000244  345054.820557 -345078.634033         0.0
1  345092.571289   0.000244  345078.634033 -344992.571289         0.0
2  345092.571289  13.937256  345092.571289 -344903.508789         0.0
3  345114.446045  21.874756  345103.508789 -344814.446289         0.0
4  345150.258789  46.750000  345114.446289 -344750.258789         0.0
5  345150.258789  35.812378  345150.258789 -344661.196289         0.0
6  345197.008789  46.750000  345161.196289 -344661.196289         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:16:43]  Iteration: 346
[07/11 21:17:00]  Generator returned sat in 17.696409 secs.
[07/11 21:17:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 21:17:01]  Verifer returned unsat in 0.110743 secs.
[07/11 21:17:01]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 21:17:01]  Iteration: 347
[07/11 21:17:15]  Generator returned sat in 14.117723 secs.
[07/11 21:17:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 21:17:15]  Verifer returned unsat in 0.082270 secs.
[07/11 21:17:15]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 21:17:15]  Iteration: 348
[07/11 21:17:37]  Generator returned sat in 21.332271 secs.
[07/11 21:17:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/11 21:17:37]  Improved gap from 0 to 7.8125
[07/11 21:17:38]  Improved number of small numbers from 46 to 54 out of a max of 77
[07/11 21:17:38]  Verifer returned sat in 0.787289 secs.
[07/11 21:17:38]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  385697.134033   0.000244  385670.023112 -385689.321533         0.0
1  385697.134033   0.000244  385689.321655 -385597.134155         0.0
2  385704.988281  15.666626  385697.134155 -385504.988281         0.0
3  385712.800781  15.666626  385704.988281 -385412.800781         0.0
4  385754.988159  49.999878  385712.800781 -385354.988159         0.0
5  385754.988159  32.833252  385754.988159 -385262.800659         0.0
6  385804.988037  49.999878  385762.800659 -385262.800537         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/11 21:17:38]  Iteration: 349
[07/11 21:18:29]  Generator returned sat in 50.725430 secs.
[07/11 21:18:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 21:18:29]  Verifer returned unsat in 0.054569 secs.
[07/11 21:18:29]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/11 21:18:29]  Iteration: 350
[07/11 21:18:50]  Generator returned sat in 20.192844 secs.
[07/11 21:18:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-3] + 1)[0m
[07/11 21:18:50]  Verifer returned unsat in 0.064140 secs.
[07/11 21:18:50]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-3] + 1)[0m
[07/11 21:18:50]  Iteration: 351
[07/11 21:19:06]  Generator returned sat in 15.995711 secs.
[07/11 21:19:06]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 1)[0m
[07/11 21:19:06]  Verifer returned unsat in 0.066078 secs.
[07/11 21:19:06]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + 1/2S_f[0][t-3] + -2S_f[0][t-4] + 1)[0m
[07/11 21:19:06]  Iteration: 352
[07/11 21:19:22]  Generator returned sat in 15.241071 secs.
[07/11 21:19:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 1)[0m
[07/11 21:19:22]  Improved gap from 0 to 6.25
[07/11 21:19:23]  Improved number of small numbers from 44 to 77 out of a max of 77
[07/11 21:19:23]  Verifer returned sat in 0.564325 secs.
[07/11 21:19:23]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  393636.634277   0.000244  393614.051025 -393614.051025         0.0
1  393636.634277   0.000244  393630.384277 -393536.634277         0.0
2  393636.634277   0.000244  393636.634277 -393442.884277         0.0
3  393669.300781  32.666504  393642.884277 -393369.300781         0.0
4  393672.717529  29.833252  393669.300781 -393275.550781         0.0
5  393719.300537  49.999756  393675.550781 -393219.300537         0.0
6  393719.300537  29.833252  393719.300537 -393219.300537         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/11 21:19:23]  Iteration: 353
