[07/18 17:47:11]  --------------------------------------------------------------------------------
[07/18 17:47:11]  Iteration: 1 (0 solution, 0 counterexamples)
[07/18 17:47:11]  Generator returned sat in 0.004578 secs.
[07/18 17:47:11]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:11]  Improved gap from 1/10 to 100
[07/18 17:47:12]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/18 17:47:12]  Verifer returned sat in 0.250459 secs.
[07/18 17:47:12]  Counter example: 
[93m    arrival_0,t  cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t  queue_t  bottle_queue_t
0  -3021.136667       0.1 -3021.136667  3021.136667        0.0                0.0      0.0             0.0
1  -2921.036667     100.1 -2921.136667  3021.136667        0.0                0.0      0.1             0.1
2    575.763333    3496.9 -2846.136667  3021.136667        0.0                0.0   3421.9          3396.9
3    575.763333       0.1 -2821.136667  3021.136667        0.0                0.0   3396.9          3296.9
4    575.763333     402.2 -2638.136667  3021.136667        0.0                0.0   3213.9          3196.9
5    575.763333    1372.4 -2621.136667  3021.136667        0.0                0.0   3196.9          3096.9
6    575.763333    3196.8 -2421.136667  3021.136667        0.0                0.0   2996.9          2996.9
7   4774.463333    7195.6 -2421.136667  3021.136667        0.0                0.0   7195.6          7095.6
8  12406.063333   14827.2 -2321.136667  3021.136667        0.0                0.0  14727.2         14627.2
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:12]  --------------------------------------------------------------------------------
[07/18 17:47:12]  Iteration: 2 (0 solution, 1 counterexamples)
[07/18 17:47:12]  Generator returned sat in 0.023206 secs.
[07/18 17:47:12]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:47:12]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:47:12]  Verifer returned sat in 0.143290 secs.
[07/18 17:47:12]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3021.136475    0.099854 -3121.136667  3021.136667        0.0                0.0  100.000192        0.000192
1 -2921.036667  200.100000 -3021.136667  3021.136667        0.0                0.0  100.100000        0.100000
2 -2421.141667  599.995000 -2921.136667  3021.136667        0.0                0.0  499.995000      399.995000
3 -2421.141667    0.100000 -2821.136667  3021.136667        0.0                0.0  399.995000      299.995000
4 -2421.141667    0.010000 -2721.136667  3021.136667        0.0                0.0  299.995000      199.995000
5 -2421.141667    0.010000 -2621.136667  3021.136667        0.0                0.0  199.995000       99.995000
6 -2320.131667  301.005000 -2421.136667  3021.136667        0.0                0.0  101.005000      101.005000
7 -1869.634167  551.502500 -2321.136667  3021.136667        0.0                0.0  451.502500      451.502500
8 -1869.634167    0.010000 -2321.136667  3021.136667        0.0                0.0  451.502500      351.502500
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:12]  --------------------------------------------------------------------------------
[07/18 17:47:12]  Iteration: 3 (0 solution, 2 counterexamples)
[07/18 17:47:12]  Generator returned sat in 0.092951 secs.
[07/18 17:47:12]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:13]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:47:13]  Verifer returned sat in 0.235276 secs.
[07/18 17:47:13]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t   queue_t  bottle_queue_t
0 -3173.404167    0.099609 -3173.406667  3073.406667        0.0                0.0    0.0025        -99.9975
1 -3073.404167  100.002500 -3073.406667  3073.406667        0.0                0.0    0.0025        -99.9975
2 -2598.406667  475.000000 -2873.406667  3073.406667        0.0                0.0  275.0000        275.0000
3 -2598.406667    0.100000 -2773.406667  3073.406667        0.0                0.0  175.0000        175.0000
4 -2598.406667    0.010000 -2773.406667  3073.406667        0.0                0.0  175.0000         75.0000
5 -2598.406667    0.010000 -2673.406667  3073.406667        0.0                0.0   75.0000        -25.0000
6 -2471.891667  201.515000 -2473.406667  3073.406667        0.0                0.0    1.5150          1.5150
7 -1869.634167  603.772500 -2473.406667  3073.406667        0.0                0.0  603.7725        503.7725
8 -1869.634167    0.010000 -2373.406667  3073.406667        0.0                0.0  503.7725        403.7725
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:13]  --------------------------------------------------------------------------------
[07/18 17:47:13]  Iteration: 4 (0 solution, 3 counterexamples)
[07/18 17:47:13]  Generator returned sat in 0.227954 secs.
[07/18 17:47:13]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:47:13]  Improved gap from 1/800 to 100
[07/18 17:47:13]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/18 17:47:13]  Verifer returned sat in 0.152892 secs.
[07/18 17:47:13]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t    queue_t  bottle_queue_t
0 -2973.406667    0.099365 -3073.406667  3073.406667        0.0                0.0  100.00000       100.00000
1 -2973.406667  100.000000 -2973.407917  3073.406667        0.0                0.0    0.00125         0.00000
2 -2598.406667  375.001250 -2910.401667  3073.406667        0.0                0.0  311.99500       275.00000
3 -2598.406667    0.001250 -2873.406667  3073.406667        0.0                0.0  275.00000       175.00000
4 -2598.406667    0.010000 -2773.406667  3073.406667        0.0                0.0  175.00000        75.00000
5 -2598.406667    0.010000 -2598.407917  3073.406667        0.0                0.0    0.00125       -25.00000
6 -1973.405417  625.002500 -2473.406667  3073.406667        0.0                0.0  500.00125       500.00125
7 -1973.405417    0.010000 -2373.406667  3073.406667        0.0                0.0  400.00125       400.00125
8 -1973.405417    0.010000 -2373.406667  3073.406667        0.0                0.0  400.00125       300.00125
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:14]  --------------------------------------------------------------------------------
[07/18 17:47:14]  Iteration: 5 (0 solution, 4 counterexamples)
[07/18 17:47:14]  Generator returned sat in 0.015578 secs.
[07/18 17:47:14]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:14]  Improved gap from 203/8192 to 98.4375
[07/18 17:47:14]  Improved number of small numbers from 62 to 101 out of a max of 101
[07/18 17:47:14]  Verifer returned sat in 0.370511 secs.
[07/18 17:47:14]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3600.151611    0.099121 -3784.625977  3121.348633        0.0                0.0  184.474365       95.411865
1 -3600.151611    0.049561 -3600.201416  3121.348633        0.0                0.0    0.049805       -4.588135
2 -3595.563477    4.637939 -3595.563477  3122.911133        0.0                0.0    0.000000      -98.437500
3 -3247.175537  348.387939 -3397.125977  3122.911133        0.0                0.0  149.950439      149.950439
4 -3203.375977  193.750000 -3298.638916  3122.911133        0.0                0.0   95.262939       93.750000
5 -3147.857666  150.781250 -3297.125977  3122.911133        0.0                0.0  149.268311       49.268311
6 -3147.857666  149.218750 -3147.907227  3122.911133        0.0                0.0    0.049561      -50.731689
7 -3023.297852  124.609375 -3097.125732  3124.473389        0.0                0.0   73.827881      -24.609619
8 -2996.369141  100.756592 -2998.688232  3124.473389        0.0                0.0    2.319092      -97.680908
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:14]  --------------------------------------------------------------------------------
[07/18 17:47:14]  Iteration: 6 (0 solution, 5 counterexamples)
[07/18 17:47:14]  Generator returned sat in 0.018219 secs.
[07/18 17:47:14]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:15]  Improved gap from 102197/2048 to 98.4375
[07/18 17:47:15]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/18 17:47:15]  Verifer returned sat in 0.302809 secs.
[07/18 17:47:15]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4549.867676    0.098877 -4549.870361  2872.578125        0.0                0.0    0.002686        0.002686
1 -4549.867676    0.001221 -4549.870361  2874.140625        0.0                0.0    0.002686      -98.434814
2 -4423.303955  126.566406 -4423.303955  2874.140625        0.0                0.0    0.000000      -71.871094
3 -4126.433838  296.870117 -4251.432861  2874.140625        0.0                0.0  124.999023      124.999023
4 -4102.214111  149.218750 -4151.432861  2874.140625        0.0                0.0   49.218750       49.218750
5 -3952.214111  199.218750 -4076.431396  2874.140625        0.0                0.0  124.217285       99.218750
6 -3902.995117  173.436279 -4051.432617  2874.140625        0.0                0.0  148.437500       48.437744
7 -3902.995117    0.010000 -3951.432861  2875.703125        0.0                0.0   48.437744      -49.999756
8 -3851.432861  100.000000 -3852.995117  2875.703125        0.0                0.0    1.562256      -98.437500
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:15]  --------------------------------------------------------------------------------
[07/18 17:47:15]  Iteration: 7 (0 solution, 6 counterexamples)
[07/18 17:47:15]  Generator returned sat in 0.375350 secs.
[07/18 17:47:15]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:47:16]  Improved gap from 8399/400 to 100
[07/18 17:47:16]  Improved number of small numbers from 65 to 89 out of a max of 101
[07/18 17:47:16]  Verifer returned sat in 0.654424 secs.
[07/18 17:47:16]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4550.470215    0.098877 -4850.470215  3073.178125        0.0                0.0  300.000000      200.000146
1 -4550.470215    0.002441 -4750.470215  3073.178125        0.0                0.0  200.000000      100.000146
2 -4550.470215    0.002441 -4650.470215  3073.178125        0.0                0.0  100.000000        0.000146
3 -4150.467773  500.002441 -4548.455361  3073.178125        0.0                0.0  397.987588      300.002588
4 -4150.467773    0.010000 -4450.470361  3073.178125        0.0                0.0  300.002588      200.002588
5 -4150.467773    0.010000 -4350.468018  3073.178125        0.0                0.0  200.000244      100.002588
6 -4150.467773    0.010000 -4150.470361  3073.178125        0.0                0.0    0.002588        0.002588
7 -3950.967861  199.502500 -4050.470361  3073.178125        0.0                0.0   99.502500       99.502500
8 -3650.467861  400.002500 -4050.470215  3073.178125        0.0                0.0  400.002354      300.002500
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:16]  --------------------------------------------------------------------------------
[07/18 17:47:16]  Iteration: 8 (0 solution, 7 counterexamples)
[07/18 17:47:17]  Generator returned sat in 0.161302 secs.
[07/18 17:47:17]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:17]  Improved number of small numbers from 47 to 71 out of a max of 100
[07/18 17:47:17]  Verifer returned sat in 0.738353 secs.
[07/18 17:47:17]  Counter example: 
[93m   arrival_0,t     cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t      queue_t  bottle_queue_t
0 -7578.774658     0.098877 -9274.258030  3073.178125        0.0                0.0  1695.483372     1695.483372
1 -7578.774658     0.024902 -9274.258030  3073.178125        0.0                0.0  1695.483372     1595.483372
2 -7578.774658     0.024902 -9174.257812  3073.178125        0.0                0.0  1595.483154     1495.483372
3 -7578.774658     0.024719 -9074.258030  3073.178125        0.0                0.0  1495.483372     1395.483372
4 -7578.774658   200.537079 -8964.258030  3073.178125        0.0                0.0  1385.483372     1295.483372
5 -7578.774658   611.305618 -8835.257812  3073.178125        0.0                0.0  1256.483154     1195.483372
6 -7578.774658  1256.458427 -8674.258030  3073.178125        0.0                0.0  1095.483372     1095.483372
7 -6389.070389  2285.187641 -8674.258030  3073.178125        0.0                0.0  2285.187641     2185.187641
8 -4955.976568  3718.281462 -8574.257812  3073.178125        0.0                0.0  3618.281244     3518.281462
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:18]  --------------------------------------------------------------------------------
[07/18 17:47:18]  Iteration: 9 (0 solution, 8 counterexamples)
[07/18 17:47:18]  Generator returned sat in 0.057561 secs.
[07/18 17:47:18]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:18]  Improved gap from 1/800 to 100
[07/18 17:47:18]  Improved number of small numbers from 41 to 101 out of a max of 101
[07/18 17:47:18]  Verifer returned sat in 0.357993 secs.
[07/18 17:47:18]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9765.297363    0.098877 -9865.297607  3664.217773        0.0                0.0  100.000244      100.000244
1 -9765.297363    0.049561 -9865.297607  3664.217773        0.0                0.0  100.000244        0.000244
2 -9765.297363    0.049561 -9765.297363  3664.217773        0.0                0.0    0.000000      -99.999756
3 -8964.248047  801.049316 -9631.447754  3664.217773        0.0                0.0  667.199707      601.049561
4 -8964.248047  468.699707 -9565.297607  3664.217773        0.0                0.0  601.049561      501.049561
5 -8964.248047  601.000000 -9454.514160  3664.217773        0.0                0.0  490.266113      401.049561
6 -8831.947754  622.566406 -9365.297607  3664.217773        0.0                0.0  533.349854      433.349854
7 -8831.947754  533.300293 -9231.947754  3664.217773        0.0                0.0  400.000000      333.349854
8 -8564.248047  667.699707 -9165.297607  3664.217773        0.0                0.0  601.049561      501.049561
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:19]  --------------------------------------------------------------------------------
[07/18 17:47:19]  Iteration: 10 (0 solution, 9 counterexamples)
[07/18 17:47:19]  Generator returned sat in 0.031551 secs.
[07/18 17:47:19]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:19]  Improved gap from 0 to 98.4375
[07/18 17:47:19]  Improved number of small numbers from 58 to 101 out of a max of 101
[07/18 17:47:19]  Verifer returned sat in 0.290323 secs.
[07/18 17:47:19]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9865.294922    0.098877 -9865.297607  3664.215088        0.0                0.0    0.002686        0.000244
1 -9865.294922    0.001465 -9865.294922  3664.215088        0.0                0.0    0.000000      -99.999756
2 -9166.857666  698.437256 -9765.294922  3664.215088        0.0                0.0  598.437256      498.437500
3 -9166.857666  549.998535 -9566.856445  3664.215088        0.0                0.0  399.998779      398.437500
4 -9166.857666    0.010000 -9465.295166  3664.215088        0.0                0.0  298.437500      298.437500
5 -9166.857666    0.010000 -9463.732422  3664.215088        0.0                0.0  296.874756      198.437500
6 -9166.857666    0.010000 -9265.295166  3664.215088        0.0                0.0   98.437500       98.437500
7 -9166.857666    0.010000 -9265.295166  3665.777588        0.0                0.0   98.437500        0.000000
8 -9166.857666    0.010000 -9166.857666  3665.777588        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:19]  --------------------------------------------------------------------------------
[07/18 17:47:19]  Iteration: 11 (0 solution, 10 counterexamples)
[07/18 17:47:20]  Generator returned sat in 0.451123 secs.
[07/18 17:47:20]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:20]  Improved number of small numbers from 67 to 92 out of a max of 100
[07/18 17:47:20]  Verifer returned sat in 0.400138 secs.
[07/18 17:47:20]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9864.005859    0.098877 -9964.005859  3664.215088        0.0                0.0  100.000000        0.000000
1 -9864.005859    0.049561 -9864.005859  3664.215088        0.0                0.0    0.000000     -100.000000
2 -9166.857666  697.148193 -9764.005859  3664.215088        0.0                0.0  597.148193      497.148193
3 -9166.857666  174.821723 -9566.808350  3664.215088        0.0                0.0  399.950684      397.148193
4 -9166.857666  263.732585 -9564.005859  3664.215088        0.0                0.0  397.148193      297.148193
5 -9166.857666  397.098877 -9364.005981  3664.215088        0.0                0.0  197.148315      197.148193
6 -8766.857666  597.148315 -9364.005859  3664.215088        0.0                0.0  597.148193      497.148193
7 -8766.857666    1.500000 -9264.005859  3664.215088        0.0                0.0  497.148193      397.148193
8 -8766.857666    1.500000 -9164.005859  3664.215088        0.0                0.0  397.148193      297.148193
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:21]  --------------------------------------------------------------------------------
[07/18 17:47:21]  Iteration: 12 (0 solution, 11 counterexamples)
[07/18 17:47:21]  Generator returned sat in 0.079580 secs.
[07/18 17:47:21]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:47:21]  Improved number of small numbers from 82 to 92 out of a max of 100
[07/18 17:47:21]  Verifer returned sat in 0.268905 secs.
[07/18 17:47:21]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9864.005859    0.098877 -9964.005859  3664.215088        0.0                0.0  100.000000        0.000000
1 -9864.005859    0.049561 -9864.005859  3664.215088        0.0                0.0    0.000000     -100.000000
2 -9164.931641  699.074219 -9764.005859  3664.215088        0.0                0.0  599.074219      499.074219
3 -9164.931641  176.799805 -9564.906982  3664.215088        0.0                0.0  399.975342      399.074219
4 -9164.931641  265.699707 -9564.005859  3664.215088        0.0                0.0  399.074219      299.074219
5 -9164.931641  399.049561 -9364.005859  3664.215088        0.0                0.0  199.074219      199.074219
6 -8764.931519  599.074341 -9364.005859  3664.215088        0.0                0.0  599.074341      499.074341
7 -8764.931519    0.500000 -9264.005859  3664.215088        0.0                0.0  499.074341      399.074341
8 -8764.931519    0.500000 -9164.005859  3664.215088        0.0                0.0  399.074341      299.074341
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:21]  --------------------------------------------------------------------------------
[07/18 17:47:21]  Iteration: 13 (0 solution, 12 counterexamples)
[07/18 17:47:22]  Generator returned sat in 0.579286 secs.
[07/18 17:47:22]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:22]  Improved gap from 0 to 100
[07/18 17:47:22]  Improved number of small numbers from 99 to 101 out of a max of 101
[07/18 17:47:22]  Verifer returned sat in 0.214859 secs.
[07/18 17:47:22]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9837.006104    0.098877 -9964.005859  3664.215088        0.0                0.0  126.999756            27.0
1 -9837.006104    0.049316 -9837.006104  3664.215088        0.0                0.0    0.000000           -73.0
2 -9162.006104  675.000000 -9764.006104  3664.215088        0.0                0.0  602.000000           502.0
3 -9162.006104  601.975342 -9664.006104  3664.215088        0.0                0.0  502.000000           402.0
4 -9162.006104  301.999756 -9464.006104  3664.215088        0.0                0.0  302.000000           302.0
5 -9089.006104  375.000000 -9364.006104  3664.215088        0.0                0.0  275.000000           275.0
6 -8962.006104  402.000000 -9264.006104  3664.215088        0.0                0.0  302.000000           302.0
7 -8862.006104  402.000000 -9264.006104  3664.215088        0.0                0.0  402.000000           302.0
8 -8862.006104  202.000000 -9164.006104  3664.215088        0.0                0.0  302.000000           202.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:23]  --------------------------------------------------------------------------------
[07/18 17:47:23]  Iteration: 14 (0 solution, 13 counterexamples)
[07/18 17:47:23]  Generator returned sat in 0.038316 secs.
[07/18 17:47:23]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:23]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:47:23]  Verifer returned sat in 0.131892 secs.
[07/18 17:47:23]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9837.006104    0.098877 -9964.005859  3664.215088        0.0                0.0  126.999756            27.0
1 -9837.006104    0.049316 -9837.006104  3664.215088        0.0                0.0    0.000000           -73.0
2 -9162.506104  674.500000 -9764.006104  3664.215088        0.0                0.0  601.500000           501.5
3 -9162.506104  601.475342 -9664.006104  3664.215088        0.0                0.0  501.500000           401.5
4 -9162.506104  301.499756 -9464.006104  3664.215088        0.0                0.0  301.500000           301.5
5 -9089.506104  374.500000 -9364.506104  3664.215088        0.0                0.0  275.000000           274.5
6 -8963.506104  401.000000 -9264.006104  3664.215088        0.0                0.0  300.500000           300.5
7 -8862.506104  401.500000 -9264.006104  3664.215088        0.0                0.0  401.500000           301.5
8 -8862.506104  201.500000 -9164.006104  3664.215088        0.0                0.0  301.500000           201.5
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:23]  --------------------------------------------------------------------------------
[07/18 17:47:23]  Iteration: 15 (0 solution, 14 counterexamples)
[07/18 17:47:23]  Generator returned sat in 0.044748 secs.
[07/18 17:47:23]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:24]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:47:24]  Verifer returned sat in 0.131222 secs.
[07/18 17:47:24]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t  queue_t  bottle_queue_t
0 -9837.506348    0.098633 -9964.006348  3664.215088        0.0                0.0    126.5            26.5
1 -9837.506348    0.049316 -9837.506348  3664.215088        0.0                0.0      0.0           -73.5
2 -9163.006348  674.500000 -9764.006348  3664.215088        0.0                0.0    601.0           501.0
3 -9163.006348  600.975342 -9664.006348  3664.215088        0.0                0.0    501.0           401.0
4 -9163.006348  301.000000 -9464.006348  3664.215088        0.0                0.0    301.0           301.0
5 -9089.506348  374.500000 -9364.506348  3664.215088        0.0                0.0    275.0           274.5
6 -8964.006348  400.500000 -9264.006348  3664.215088        0.0                0.0    300.0           300.0
7 -8863.006348  401.000000 -9264.006348  3664.215088        0.0                0.0    401.0           301.0
8 -8863.006348  201.000000 -9164.006348  3664.215088        0.0                0.0    301.0           201.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:24]  --------------------------------------------------------------------------------
[07/18 17:47:24]  Iteration: 16 (0 solution, 15 counterexamples)
[07/18 17:47:24]  Generator returned sat in 0.063738 secs.
[07/18 17:47:24]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:47:24]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:47:24]  Verifer returned sat in 0.125599 secs.
[07/18 17:47:24]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t  queue_t  bottle_queue_t
0 -9838.006348    0.098633 -9964.006348  3664.215088        0.0                0.0    126.0            26.0
1 -9838.006348    0.049316 -9838.006348  3664.215088        0.0                0.0      0.0           -74.0
2 -9163.506348  674.500000 -9764.006348  3664.215088        0.0                0.0    600.5           500.5
3 -9163.506348  600.475342 -9664.006348  3664.215088        0.0                0.0    500.5           400.5
4 -9163.506348  300.500000 -9464.006348  3664.215088        0.0                0.0    300.5           300.5
5 -9089.506348  374.500000 -9364.506348  3664.215088        0.0                0.0    275.0           274.5
6 -8964.506348  400.000000 -9264.006348  3664.215088        0.0                0.0    299.5           299.5
7 -8863.506348  400.500000 -9264.006348  3664.215088        0.0                0.0    400.5           300.5
8 -8863.506348  200.500000 -9164.006348  3664.215088        0.0                0.0    300.5           200.5
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:24]  --------------------------------------------------------------------------------
[07/18 17:47:24]  Iteration: 17 (0 solution, 16 counterexamples)
[07/18 17:47:25]  Generator returned sat in 0.644006 secs.
[07/18 17:47:25]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:26]  Improved gap from 0 to 48.4375
[07/18 17:47:26]  Improved number of small numbers from 56 to 93 out of a max of 101
[07/18 17:47:26]  Verifer returned sat in 0.941379 secs.
[07/18 17:47:26]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0  -9342.21875    0.098389 -9992.194336  3664.214844        0.0                0.0  649.975586      649.975586
1  -9342.21875    0.049316 -9992.194092  3664.214844        0.0                0.0  649.975342      549.975586
2  -9342.21875    0.024658 -9892.194092  3664.214844        0.0                0.0  549.975342      449.975586
3  -9342.21875  549.950684 -9692.194336  3664.214844        0.0                0.0  349.975586      349.975586
4  -9342.21875  276.475342 -9642.194092  3664.214844        0.0                0.0  299.975342      249.975586
5  -9342.21875  139.737671 -9592.194092  3664.214844        0.0                0.0  249.975342      149.975586
6  -9342.21875   71.368835 -9392.194336  3664.214844        0.0                0.0   49.975586       49.975586
7  -9342.21875   37.184418 -9390.656250  3714.239258        0.0                0.0   48.437500        0.000000
8  -9342.21875   20.092209 -9342.218750  3714.239258        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:27]  --------------------------------------------------------------------------------
[07/18 17:47:27]  Iteration: 18 (0 solution, 17 counterexamples)
[07/18 17:47:27]  Generator returned sat in 0.162410 secs.
[07/18 17:47:27]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:28]  Improved gap from 0 to 34.375
[07/18 17:47:29]  Improved number of small numbers from 56 to 86 out of a max of 101
[07/18 17:47:29]  Verifer returned sat in 1.796299 secs.
[07/18 17:47:29]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -10458.972656    0.098389 -10459.021240  3664.214844        0.0                0.0    0.048584        0.000005
1 -10458.972656    0.024414 -10458.972656  3664.214844        0.0                0.0    0.000000      -99.999995
2  -9858.996826  599.975830 -10358.972656  3664.214844        0.0                0.0  499.975830      399.975835
3  -9858.996826  490.779297 -10158.972900  3664.214844        0.0                0.0  299.976074      299.975835
4  -9858.996826  247.389648 -10058.972900  3664.214844        0.0                0.0  199.976074      199.975835
5  -9858.996826  125.694824 -10058.972656  3664.214844        0.0                0.0  199.975830       99.975835
6  -9858.996826   64.847412  -9859.021367  3664.214844        0.0                0.0    0.024541       -0.024165
7  -9824.597661   34.423706  -9858.972661  3729.839844        0.0                0.0   34.375000        0.000000
8  -9824.597661   19.211853  -9824.597661  3795.464600        0.0                0.0    0.000000      -34.375244
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:29]  --------------------------------------------------------------------------------
[07/18 17:47:29]  Iteration: 19 (0 solution, 18 counterexamples)
[07/18 17:47:29]  Generator returned sat in 0.100974 secs.
[07/18 17:47:29]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:30]  Improved gap from 269/8 to 32.8125
[07/18 17:47:31]  Improved number of small numbers from 49 to 99 out of a max of 101
[07/18 17:47:31]  Verifer returned sat in 1.547491 secs.
[07/18 17:47:31]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3488.588135    0.098389 -4188.539307 -2706.218506        0.0                0.0  699.951172      599.951416
1 -3488.588135    0.048584 -4088.539307 -2706.218506        0.0                0.0  599.951172      499.951416
2 -3488.588135    0.048828 -3988.539307 -2706.218506        0.0                0.0  499.951172      399.951416
3 -3488.588135  481.558594 -3788.539551 -2706.218506        0.0                0.0  299.951416      299.951416
4 -3488.588135  242.279297 -3688.539551 -2706.218506        0.0                0.0  199.951416      199.951416
5 -3488.588135  122.639648 -3688.539551 -2706.218506        0.0                0.0  199.951416       99.951416
6 -3488.588135   62.819824 -3488.636963 -2706.218506        0.0                0.0    0.048828       -0.048584
7 -3455.727051   32.909912 -3488.539551 -2639.031006        0.0                0.0   32.812500        0.000000
8 -3455.727051   17.954956 -3455.727051 -2639.031006        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:31]  --------------------------------------------------------------------------------
[07/18 17:47:31]  Iteration: 20 (0 solution, 19 counterexamples)
[07/18 17:47:32]  Generator returned sat in 0.532837 secs.
[07/18 17:47:32]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 13/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:47:32]  Improved gap from 399/16384 to 98.4375
[07/18 17:47:33]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/18 17:47:33]  Verifer returned sat in 0.591867 secs.
[07/18 17:47:33]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4048.650391    0.098145 -4051.775391 -2706.218506        0.0                0.0    3.125000        0.000244
1 -4048.650391    0.048584 -4048.650391 -2706.218506        0.0                0.0    0.000000      -99.999756
2 -3948.601807  100.048584 -3948.650391 -2706.218506        0.0                0.0    0.048584      -99.951172
3 -3350.213135  598.437256 -3784.879639 -2706.218506        0.0                0.0  434.666504      398.437500
4 -3350.213135  434.666504 -3648.650635 -2706.218506        0.0                0.0  298.437500      298.437500
5 -3350.213135    1.000000 -3548.650635 -2706.218506        0.0                0.0  198.437500      198.437500
6 -3350.213135    1.000000 -3448.650635 -2706.218506        0.0                0.0   98.437500       98.437500
7 -3350.213135    1.000000 -3448.650635 -2704.656006        0.0                0.0   98.437500        0.000000
8 -3350.213135    1.000000 -3350.213135 -2704.655762        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:33]  --------------------------------------------------------------------------------
[07/18 17:47:33]  Iteration: 21 (0 solution, 20 counterexamples)
[07/18 17:47:35]  Generator returned sat in 1.438701 secs.
[07/18 17:47:35]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:35]  Improved number of small numbers from 39 to 100 out of a max of 100
[07/18 17:47:35]  Verifer returned sat in 0.326133 secs.
[07/18 17:47:35]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3742.164551    0.098145 -3942.164551 -2912.70459        0.0                0.0  200.000000      100.000000
1 -3742.164551    0.024170 -3742.164795 -2912.70459        0.0                0.0    0.000244        0.000000
2 -3042.188965  699.975830 -3742.164551 -2912.70459        0.0                0.0  699.975586      599.975586
3 -3042.188965    0.024414 -3550.140381 -2912.70459        0.0                0.0  507.951416      499.975586
4 -3042.188965  392.024170 -3442.164551 -2912.70459        0.0                0.0  399.975586      399.975586
5 -3042.188965  394.024170 -3342.164551 -2912.70459        0.0                0.0  299.975586      299.975586
6 -2946.140381  396.024170 -3342.164551 -2912.70459        0.0                0.0  396.024170      296.024170
7 -2944.140381  398.024170 -3142.164551 -2912.70459        0.0                0.0  198.024170      198.024170
8 -2742.140381  400.024170 -3142.164551 -2912.70459        0.0                0.0  400.024170      300.024170
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:35]  --------------------------------------------------------------------------------
[07/18 17:47:35]  Iteration: 22 (0 solution, 21 counterexamples)
[07/18 17:47:36]  Generator returned sat in 0.244347 secs.
[07/18 17:47:36]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:36]  Improved number of small numbers from 65 to 100 out of a max of 100
[07/18 17:47:36]  Verifer returned sat in 0.195304 secs.
[07/18 17:47:36]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3742.164795    0.098145 -3842.188721 -3012.680420        0.0                0.0  100.023926        0.023926
1 -3742.164795    0.023926 -3742.165039 -3012.680176        0.0                0.0    0.000244      -99.975830
2 -3042.189209  699.975830 -3642.188721 -3012.680176        0.0                0.0  599.999512      499.999756
3 -3042.189209  390.000244 -3442.188965 -3012.680176        0.0                0.0  399.999756      399.999756
4 -3042.189209  392.000244 -3442.164795 -3012.680176        0.0                0.0  399.975586      299.999756
5 -3042.189209  394.000244 -3242.188965 -3012.680176        0.0                0.0  199.999756      199.999756
6 -2846.188721  396.000244 -3242.188965 -3012.680176        0.0                0.0  396.000244      296.000244
7 -2844.188721  398.000244 -3042.188965 -3012.680176        0.0                0.0  198.000244      198.000244
8 -2642.188721  400.000244 -3042.188965 -3012.680176        0.0                0.0  400.000244      300.000244
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:36]  --------------------------------------------------------------------------------
[07/18 17:47:36]  Iteration: 23 (0 solution, 22 counterexamples)
[07/18 17:47:37]  Generator returned sat in 0.368397 secs.
[07/18 17:47:37]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:37]  Improved gap from 204751/2048 to 100
[07/18 17:47:37]  Improved number of small numbers from 87 to 87 out of a max of 101
[07/18 17:47:37]  Verifer returned sat in 0.289268 secs.
[07/18 17:47:37]  Counter example: 
[93m   arrival_0,t     cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t      queue_t  bottle_queue_t
0 -3742.164795     0.098145 -3842.188721 -3012.680176        0.0                0.0   100.023926        0.024170
1 -3742.164795     0.023926 -3742.188965 -3012.680176        0.0                0.0     0.024170      -99.975830
2 -3042.189209   699.999756 -3642.188721 -3012.680176        0.0                0.0   599.999512      499.999756
3 -3042.189209    35.624992 -3442.188965 -3012.680176        0.0                0.0   399.999756      399.999756
4 -3042.189209    73.249985 -3442.164795 -3012.680176        0.0                0.0   399.975586      299.999756
5 -3042.189209   148.499969 -3242.188965 -3012.680176        0.0                0.0   199.999756      199.999756
6 -2943.189026   298.999939 -3242.188965 -3012.680176        0.0                0.0   298.999939      198.999939
7 -2642.189087   599.999878 -3042.188965 -3012.680176        0.0                0.0   399.999878      399.999878
8 -1840.189209  1201.999756 -3042.188965 -3012.680176        0.0                0.0  1201.999756     1101.999756
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:37]  --------------------------------------------------------------------------------
[07/18 17:47:37]  Iteration: 24 (0 solution, 23 counterexamples)
[07/18 17:47:39]  Generator returned sat in 0.957392 secs.
[07/18 17:47:39]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:39]  Improved gap from 97/8192 to 98.4375
[07/18 17:47:39]  Improved number of small numbers from 52 to 101 out of a max of 101
[07/18 17:47:39]  Verifer returned sat in 0.290411 secs.
[07/18 17:47:39]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -2842.234131    0.097900 -3042.234375 -3812.635010        0.0                0.0  200.000244      100.000244
1 -2842.234131    0.023438 -2845.329590 -3812.635010        0.0                0.0    3.095459        0.000244
2 -2743.784912  101.544678 -2842.222412 -3811.084473        0.0                0.0   98.437500        0.000000
3 -2643.784912  198.437500 -2743.784912 -3811.084473        0.0                0.0  100.000000        0.000000
4 -2445.335449  298.449463 -2545.335449 -3811.084473        0.0                0.0  100.000000       98.449463
5 -2245.341309  299.994141 -2543.784912 -3811.084473        0.0                0.0  298.443604      198.443604
6 -2245.341309  298.437500 -2343.784912 -3811.084473        0.0                0.0   98.443604       98.443604
7 -2245.341309    1.500000 -2343.779053 -3809.528076        0.0                0.0   98.437744        0.000000
8 -2245.341309    1.500000 -2245.341309 -3809.527832        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:39]  --------------------------------------------------------------------------------
[07/18 17:47:39]  Iteration: 25 (0 solution, 24 counterexamples)
[07/18 17:47:40]  Generator returned sat in 0.058172 secs.
[07/18 17:47:40]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:40]  Improved gap from 38397/512 to 73.4375
[07/18 17:47:40]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/18 17:47:40]  Verifer returned sat in 0.615952 secs.
[07/18 17:47:40]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -2417.651367    0.097900 -2417.651611 -3737.248047        0.0                0.0    0.000244      -74.951904
1 -2216.089111  201.562500 -2242.699463 -3737.248047        0.0                0.0   26.610352       26.610352
2 -2216.088867   26.610596 -2216.136963 -3737.248047        0.0                0.0    0.048096      -73.389404
3 -1672.435303  543.701660 -2042.699707 -3737.248047        0.0                0.0  370.264404      370.264160
4 -1667.747803  374.951904 -1967.699707 -3737.248047        0.0                0.0  299.951904      274.951660
5 -1667.747803  274.999756 -1942.699463 -3737.248047        0.0                0.0  274.951660      174.951660
6 -1667.747803  273.437500 -1742.699707 -3737.248047        0.0                0.0   74.951904       74.951660
7 -1667.747803    1.500000 -1741.185303 -3712.199707        0.0                0.0   73.437500        0.000000
8 -1667.747803    1.500000 -1667.747803 -3712.199707        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:41]  --------------------------------------------------------------------------------
[07/18 17:47:41]  Iteration: 26 (0 solution, 25 counterexamples)
[07/18 17:47:41]  Generator returned sat in 0.063883 secs.
[07/18 17:47:41]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:41]  Improved gap from 409599/8192 to 48.4375
[07/18 17:47:41]  Improved number of small numbers from 48 to 101 out of a max of 101
[07/18 17:47:41]  Verifer returned sat in 0.465996 secs.
[07/18 17:47:41]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3148.905762    0.097900 -3200.420166 -2879.527588        0.0                0.0   51.514404       51.514160
1 -3148.905762   51.514404 -3148.905762 -2879.479248        0.0                0.0    0.000000      -48.437500
2 -3050.372314   98.533447 -3050.420166 -2879.479248        0.0                0.0    0.047852      -49.904053
3 -2800.468262  249.951904 -3000.468262 -2879.479248        0.0                0.0  200.000000      100.000000
4 -2800.468262  199.951904 -2850.468262 -2879.479248        0.0                0.0   50.000000        0.000000
5 -2552.030762  298.437500 -2800.468018 -2879.479248        0.0                0.0  248.437256      148.437500
6 -2550.515869  249.952148 -2600.468262 -2879.479248        0.0                0.0   49.952393       49.952393
7 -2550.515869    1.500000 -2600.468018 -2829.431641        0.0                0.0   49.952148        0.000000
8 -2550.515869    1.500000 -2550.515869 -2829.431396        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:42]  --------------------------------------------------------------------------------
[07/18 17:47:42]  Iteration: 27 (0 solution, 26 counterexamples)
[07/18 17:47:43]  Generator returned sat in 0.713849 secs.
[07/18 17:47:43]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:43]  Improved gap from 204407/8192 to 100
[07/18 17:47:43]  Improved number of small numbers from 48 to 101 out of a max of 101
[07/18 17:47:43]  Verifer returned sat in 0.384040 secs.
[07/18 17:47:43]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3005.196045    0.097656 -3105.196045 -2974.751465        0.0                0.0  100.000000      100.000000
1 -3005.196045    0.023926 -3105.196045 -2974.751465        0.0                0.0  100.000000        0.000000
2 -3005.196045    0.023926 -3005.196045 -2974.751465        0.0                0.0    0.000000     -100.000000
3 -2875.196045  130.000000 -2900.196045 -2974.751465        0.0                0.0   25.000000      -70.000000
4 -2695.196045  205.000000 -2720.172119 -2974.751465        0.0                0.0   24.976074       10.000000
5 -1923.148193  797.023926 -2683.196045 -2974.751465        0.0                0.0  760.047852      682.047852
6 -1923.148193  322.000000 -2505.196289 -2974.751465        0.0                0.0  582.048096      582.047852
7 -1923.148193  394.999756 -2505.196045 -2974.751465        0.0                0.0  582.047852      482.047852
8 -1923.148193  214.976074 -2405.196045 -2974.751465        0.0                0.0  482.047852      382.047852
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:43]  --------------------------------------------------------------------------------
[07/18 17:47:43]  Iteration: 28 (0 solution, 27 counterexamples)
[07/18 17:47:44]  Generator returned sat in 0.080191 secs.
[07/18 17:47:44]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 0 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:44]  Improved gap from 49/8192 to 48.4375
[07/18 17:47:44]  Improved number of small numbers from 50 to 101 out of a max of 101
[07/18 17:47:44]  Verifer returned sat in 0.488515 secs.
[07/18 17:47:44]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3771.865234    0.097412 -3965.651123 -2211.177246        0.0                0.0  193.785889       96.905029
1 -3771.865234    0.023926 -3771.871338 -2211.177246        0.0                0.0    0.006104       -3.094971
2 -3668.770264  103.101074 -3668.770264 -2211.177246        0.0                0.0    0.000000        0.000000
3 -3668.764404    0.005859 -3668.770264 -2159.614746        0.0                0.0    0.005859      -48.431641
4 -3371.889404  296.880859 -3571.883301 -2159.614746        0.0                0.0  199.993896      148.443359
5 -3371.889404  199.988037 -3520.332764 -2159.614746        0.0                0.0  148.443359       48.443359
6 -3371.889404  148.437500 -3420.332764 -2108.058350        0.0                0.0   48.443359       -0.000244
7 -3171.895264  248.437500 -3371.886230 -2108.058350        0.0                0.0  199.990967       99.993896
8 -3171.889160  199.997070 -3271.889160 -2108.058350        0.0                0.0  100.000000        0.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:45]  --------------------------------------------------------------------------------
[07/18 17:47:45]  Iteration: 29 (0 solution, 28 counterexamples)
[07/18 17:47:46]  Generator returned sat in 0.714020 secs.
[07/18 17:47:46]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:47:46]  Improved gap from 0 to 98.4375
[07/18 17:47:46]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/18 17:47:46]  Verifer returned sat in 0.566006 secs.
[07/18 17:47:46]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4246.495117    0.097412 -4346.495117 -1733.452637        0.0                0.0  100.000000      100.000000
1 -4246.495117    0.023682 -4346.494873 -1733.452637        0.0                0.0   99.999756        0.000000
2 -4024.507080  321.987793 -4246.495117 -1733.452637        0.0                0.0  221.988037      121.988037
3 -4024.507080  201.922852 -4049.495117 -1733.452637        0.0                0.0   24.988037       21.988037
4 -3948.033691  101.461426 -3948.045654 -1733.452637        0.0                0.0    0.011963       -1.538574
5 -3896.814941   51.230713 -3946.495117 -1731.890137        0.0                0.0   49.680176      -48.757324
6 -3646.495117  300.000000 -3848.057617 -1731.890137        0.0                0.0  201.562500      101.562500
7 -3646.495117  201.437500 -3671.482910 -1731.890137        0.0                0.0   24.987793        1.562500
8 -3570.264160  101.218750 -3648.057373 -1731.890137        0.0                0.0   77.793213      -22.206543
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:47]  --------------------------------------------------------------------------------
[07/18 17:47:47]  Iteration: 30 (0 solution, 29 counterexamples)
[07/18 17:47:48]  Generator returned sat in 1.312854 secs.
[07/18 17:47:48]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 13/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:48]  Improved gap from 16579/8192 to 23.4375
[07/18 17:47:49]  Improved number of small numbers from 52 to 101 out of a max of 101
[07/18 17:47:49]  Verifer returned sat in 0.287687 secs.
[07/18 17:47:49]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4246.529053    0.097412 -4246.529053 -1933.418701        0.0                0.0    0.000000       -100.0000
1 -3523.091553  723.437500 -4146.528809 -1933.418701        0.0                0.0  623.437256        523.4375
2 -3523.091553    0.023926 -3946.529053 -1933.418701        0.0                0.0  423.437500        423.4375
3 -3523.091553    0.023926 -3848.067627 -1933.418701        0.0                0.0  324.976074        323.4375
4 -3523.091553    2.000000 -3823.067627 -1933.418701        0.0                0.0  299.976074        223.4375
5 -3523.091553    2.000000 -3646.529053 -1933.418701        0.0                0.0  123.437500        123.4375
6 -3523.091553    2.000000 -3646.528809 -1933.418701        0.0                0.0  123.437256         23.4375
7 -3523.091553    2.000000 -3546.529053 -1856.856201        0.0                0.0   23.437500          0.0000
8 -3523.091553    2.000000 -3523.091553 -1856.856201        0.0                0.0    0.000000       -100.0000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:49]  --------------------------------------------------------------------------------
[07/18 17:47:49]  Iteration: 31 (0 solution, 30 counterexamples)
[07/18 17:47:50]  Generator returned sat in 1.053719 secs.
[07/18 17:47:50]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:50]  Improved gap from 0 to 98.4375
[07/18 17:47:51]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/18 17:47:51]  Verifer returned sat in 0.258469 secs.
[07/18 17:47:51]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3823.043945    0.097412 -3921.481445 -2158.466309        0.0                0.0   98.437500       98.437500
1 -3823.043945    0.047607 -3921.481445 -2156.903809        0.0                0.0   98.437500        0.000000
2 -3567.481445  354.000000 -3759.966553 -2156.903809        0.0                0.0  192.485107      155.562500
3 -3567.481445  192.437500 -3717.433838 -2156.903809        0.0                0.0  149.952393       55.562500
4 -3522.996338  194.437500 -3523.043945 -2156.903809        0.0                0.0    0.047607        0.047607
5 -3326.606445  196.437500 -3423.043945 -2156.903809        0.0                0.0   96.437500       96.437500
6 -3224.606445  198.437500 -3374.606445 -2156.903809        0.0                0.0  150.000000       98.437500
7 -3224.606445    1.500000 -3323.043945 -2155.341309        0.0                0.0   98.437500        0.000000
8 -3224.606445    3.500000 -3224.606445 -2155.341309        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:51]  --------------------------------------------------------------------------------
[07/18 17:47:51]  Iteration: 32 (0 solution, 31 counterexamples)
[07/18 17:47:51]  Generator returned sat in 0.184688 secs.
[07/18 17:47:51]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:52]  Improved gap from 1559/16 to 98.4375
[07/18 17:47:52]  Improved number of small numbers from 70 to 101 out of a max of 101
[07/18 17:47:52]  Verifer returned sat in 0.331392 secs.
[07/18 17:47:52]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3621.418945    0.096924 -3621.466553 -2156.904053        0.0                0.0    0.047607        0.023926
1 -3621.418945    0.023682 -3621.442871 -2156.904053        0.0                0.0    0.023926      -99.976074
2 -3225.981445  395.461426 -3521.442627 -2156.904053        0.0                0.0  295.461182      195.461426
3 -3225.981445  295.437500 -3375.957764 -2156.904053        0.0                0.0  149.976318       95.461426
4 -3079.020264  296.937500 -3221.442871 -2156.904053        0.0                0.0  142.422607      142.422607
5 -2923.005371  298.437500 -3121.442871 -2156.904053        0.0                0.0  198.437500      198.437500
6 -2923.005371    1.500000 -3072.981445 -2156.904053        0.0                0.0  149.976074       98.437500
7 -2923.005371    3.000000 -3021.442871 -2155.341553        0.0                0.0   98.437500        0.000000
8 -2923.005371    4.500000 -2923.005371 -2155.341553        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:52]  --------------------------------------------------------------------------------
[07/18 17:47:52]  Iteration: 33 (0 solution, 32 counterexamples)
[07/18 17:47:53]  Generator returned sat in 0.292031 secs.
[07/18 17:47:53]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:47:53]  Improved gap from 97/8192 to 98.4375
[07/18 17:47:53]  Improved number of small numbers from 89 to 101 out of a max of 101
[07/18 17:47:53]  Verifer returned sat in 0.295149 secs.
[07/18 17:47:53]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3672.001953    0.096924 -3772.014160 -2156.904053        0.0                0.0  100.012207      100.011963
1 -3672.001953    0.023682 -3772.013916 -2156.904053        0.0                0.0  100.011963        0.011963
2 -3672.001953    0.011963 -3672.013916 -2156.904053        0.0                0.0    0.011963      -99.988037
3 -3374.576416  297.437500 -3524.564697 -2156.904053        0.0                0.0  149.988281       97.437500
4 -3226.627197  297.937500 -3372.013916 -2156.904053        0.0                0.0  145.386719      145.386719
5 -3073.576416  298.437500 -3372.013916 -2156.904053        0.0                0.0  298.437500      198.437500
6 -3073.576416    1.500000 -3272.013916 -2156.904053        0.0                0.0  198.437500       98.437500
7 -3073.576416    1.500000 -3172.013916 -2155.341553        0.0                0.0   98.437500        0.000000
8 -3073.576416    2.000000 -3073.576416 -2155.341553        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:53]  --------------------------------------------------------------------------------
[07/18 17:47:53]  Iteration: 34 (0 solution, 33 counterexamples)
[07/18 17:47:54]  Generator returned sat in 0.152450 secs.
[07/18 17:47:54]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:47:54]  Improved gap from 1575/16 to 98.4375
[07/18 17:47:54]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/18 17:47:54]  Verifer returned sat in 0.362732 secs.
[07/18 17:47:54]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3569.439697    0.096924 -3669.445557 -2259.472656        0.0                0.0  100.005859      100.005615
1 -3569.439697    0.023438 -3569.451416 -2259.472656        0.0                0.0    0.011719        0.005615
2 -3569.439697    0.006104 -3569.445312 -2259.472656        0.0                0.0    0.005615      -99.994385
3 -3273.007812  296.437500 -3423.001953 -2259.472656        0.0                0.0  149.994141       96.437500
4 -3125.564453  297.437500 -3269.445312 -2259.472656        0.0                0.0  143.880859      143.880859
5 -2971.007812  298.437500 -3169.445557 -2259.472656        0.0                0.0  198.437744      198.437500
6 -2971.007812    1.500000 -3121.001953 -2259.472656        0.0                0.0  149.994141       98.437500
7 -2971.007812    2.500000 -3069.445312 -2257.910156        0.0                0.0   98.437500        0.000000
8 -2971.007812    3.500000 -2971.007812 -2257.909912        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:47:55]  --------------------------------------------------------------------------------
[07/18 17:47:55]  Iteration: 35 (0 solution, 34 counterexamples)
[07/18 17:47:56]  Generator returned sat in 0.945103 secs.
[07/18 17:47:56]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:47:56]  Improved number of small numbers from 66 to 100 out of a max of 100
[07/18 17:47:56]  Verifer returned sat in 0.213316 secs.
[07/18 17:47:56]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3465.745117    0.096924 -4165.697998 -2259.472656        0.0                0.0  699.952881      699.952881
1 -3465.745117    0.047363 -4065.697998 -2259.472656        0.0                0.0  599.952881      599.952881
2 -3465.745117    0.047363 -4065.697754 -2259.472656        0.0                0.0  599.952637      499.952881
3 -3465.745117  392.547607 -3865.697998 -2259.472656        0.0                0.0  399.952881      399.952881
4 -3465.745117  394.047607 -3865.697754 -2259.472656        0.0                0.0  399.952637      299.952881
5 -3465.745117  395.547607 -3665.697998 -2259.472656        0.0                0.0  199.952881      199.952881
6 -3268.650391  397.047607 -3665.697998 -2259.472656        0.0                0.0  397.047607      297.047607
7 -3267.150391  398.547607 -3465.697998 -2259.472656        0.0                0.0  198.547607      198.547607
8 -3065.650391  400.047607 -3465.697998 -2259.472656        0.0                0.0  400.047607      300.047607
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:47:56]  --------------------------------------------------------------------------------
[07/18 17:47:56]  Iteration: 36 (0 solution, 35 counterexamples)
[07/18 17:47:58]  Generator returned sat in 0.707725 secs.
[07/18 17:47:58]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 15/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:47:58]  Improved number of small numbers from 55 to 100 out of a max of 100
[07/18 17:47:58]  Verifer returned sat in 0.247704 secs.
[07/18 17:47:58]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4640.565918    0.096680 -4940.565674 -1584.604736        0.0                0.0  299.999756      200.000000
1 -4640.565918    0.047363 -4840.565674 -1584.604736        0.0                0.0  199.999756      100.000000
2 -4640.565918    0.047119 -4720.944824 -1584.604736        0.0                0.0   80.378906        0.000000
3 -4228.897461  492.047363 -4603.850098 -1584.604736        0.0                0.0  374.952637      311.668457
4 -4109.802734  494.047363 -4484.755371 -1584.604736        0.0                0.0  374.952637      330.763184
5 -3988.708008  496.047363 -4363.660400 -1584.604736        0.0                0.0  374.952393      351.857910
6 -3865.613037  498.047363 -4240.565918 -1584.604736        0.0                0.0  374.952881      374.952881
7 -3740.518555  500.047363 -4140.565918 -1584.604736        0.0                0.0  400.047363      400.047363
8 -3740.518555  174.094727 -4140.565674 -1584.604736        0.0                0.0  400.047119      300.047363
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:47:58]  --------------------------------------------------------------------------------
[07/18 17:47:58]  Iteration: 37 (0 solution, 36 counterexamples)
[07/18 17:48:02]  Generator returned sat in 3.255873 secs.
[07/18 17:48:02]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:02]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:48:02]  Verifer returned sat in 0.135831 secs.
[07/18 17:48:02]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4290.613037    0.096680 -4940.565674 -1584.604736        0.0                0.0  649.952637      549.952881
1 -4290.613037    0.047363 -4840.565674 -1584.604736        0.0                0.0  549.952637      449.952881
2 -4290.613037    0.047119 -4683.160156 -1584.604736        0.0                0.0  392.547119      349.952881
3 -4290.613037  392.547119 -4640.565918 -1584.604736        0.0                0.0  349.952881      249.952881
4 -4246.518799  394.047119 -4486.160156 -1584.604736        0.0                0.0  239.641357      194.047119
5 -4090.613037  395.547119 -4440.565918 -1584.604736        0.0                0.0  349.952881      249.952881
6 -4043.518799  397.047119 -4340.565918 -1584.604736        0.0                0.0  297.047119      197.047119
7 -3942.018799  398.547119 -4140.565918 -1584.604736        0.0                0.0  198.547119      198.547119
8 -3740.518799  400.047119 -4140.565918 -1584.604736        0.0                0.0  400.047119      300.047119
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:48:02]  --------------------------------------------------------------------------------
[07/18 17:48:02]  Iteration: 38 (0 solution, 37 counterexamples)
[07/18 17:48:03]  Generator returned sat in 0.523755 secs.
[07/18 17:48:03]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 13/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:03]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:48:03]  Verifer returned sat in 0.117804 secs.
[07/18 17:48:03]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4315.589355    0.096680 -4940.565918 -1584.604736        0.0                0.0  624.976562      524.976807
1 -4315.589355    0.047119 -4840.565674 -1584.604736        0.0                0.0  524.976318      424.976807
2 -4315.589355    0.046875 -4708.112793 -1584.604736        0.0                0.0  392.523438      324.976807
3 -4315.589355  392.523438 -4640.565918 -1584.604736        0.0                0.0  324.976562      224.976807
4 -4246.542480  394.023438 -4511.089355 -1584.604736        0.0                0.0  264.546875      194.023682
5 -4115.565918  395.523438 -4440.542480 -1584.604736        0.0                0.0  324.976562      225.000244
6 -4043.519043  397.023438 -4340.542480 -1584.604736        0.0                0.0  297.023438      197.047119
7 -3942.019043  398.523438 -4140.566162 -1584.604736        0.0                0.0  198.547119      198.547119
8 -3740.542725  400.023438 -4140.566162 -1584.604736        0.0                0.0  400.023438      300.023438
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:48:04]  --------------------------------------------------------------------------------
[07/18 17:48:04]  Iteration: 39 (0 solution, 38 counterexamples)
[07/18 17:48:05]  Generator returned sat in 0.889758 secs.
[07/18 17:48:05]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 13/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:48:05]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:48:05]  Verifer returned sat in 0.124142 secs.
[07/18 17:48:05]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4317.089600    0.096436 -4940.566162 -1584.60498        0.0                0.0  623.476562      523.476562
1 -4317.089600    0.047119 -4840.565918 -1584.60498        0.0                0.0  523.476318      423.476562
2 -4317.089600    0.046631 -4708.113037 -1584.60498        0.0                0.0  391.023438      323.476562
3 -4317.089600  391.023438 -4639.565918 -1584.60498        0.0                0.0  322.476318      223.476562
4 -4246.542480  393.023438 -4511.089600 -1584.60498        0.0                0.0  264.547119      194.023682
5 -4116.066162  395.023438 -4440.542725 -1584.60498        0.0                0.0  324.476562      224.500000
6 -4043.519287  397.023438 -4340.542725 -1584.60498        0.0                0.0  297.023438      197.046875
7 -3941.519287  399.023438 -4140.566162 -1584.60498        0.0                0.0  199.046875      199.046875
8 -3739.542725  401.023438 -4140.566162 -1584.60498        0.0                0.0  401.023438      301.023438
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:48:06]  --------------------------------------------------------------------------------
[07/18 17:48:06]  Iteration: 40 (0 solution, 39 counterexamples)
[07/18 17:48:07]  Generator returned sat in 0.664285 secs.
[07/18 17:48:07]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:48:07]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:48:07]  Verifer returned sat in 0.121833 secs.
[07/18 17:48:07]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4350.519775    0.096191 -4940.566406 -1584.60498        0.0                0.0  590.046631      490.046631
1 -4350.519775    0.047119 -4840.565918 -1584.60498        0.0                0.0  490.046143      390.046631
2 -4350.519775    0.046631 -4740.566406 -1584.60498        0.0                0.0  390.046631      290.046631
3 -4350.519775  390.046631 -4625.473145 -1584.60498        0.0                0.0  274.953369      190.046631
4 -4233.426514  392.046631 -4508.379883 -1584.60498        0.0                0.0  274.953369      207.139893
5 -4114.333252  394.046631 -4389.286621 -1584.60498        0.0                0.0  274.953369      226.233154
6 -3993.239990  396.046631 -4268.193359 -1584.60498        0.0                0.0  274.953369      247.326416
7 -3870.146729  398.046631 -4140.566406 -1584.60498        0.0                0.0  270.419678      270.419678
8 -3740.519775  400.046631 -4140.566406 -1584.60498        0.0                0.0  400.046631      300.046631
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:48:07]  --------------------------------------------------------------------------------
[07/18 17:48:07]  Iteration: 41 (0 solution, 40 counterexamples)
[07/18 17:48:09]  Generator returned sat in 0.895527 secs.
[07/18 17:48:09]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 15/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:48:09]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:48:09]  Verifer returned sat in 0.112370 secs.
[07/18 17:48:09]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4350.519775    0.095947 -4940.566650 -1584.60498        0.0                0.0  590.046875      490.046875
1 -4350.519775    0.046875 -4840.565918 -1584.60498        0.0                0.0  490.046143      390.046875
2 -4350.519775    0.046631 -4740.566650 -1584.60498        0.0                0.0  390.046875      290.046875
3 -4345.520020  395.046631 -4629.473389 -1584.60498        0.0                0.0  283.953369      195.046631
4 -4233.426758  396.046631 -4508.379883 -1584.60498        0.0                0.0  274.953125      207.139893
5 -4111.333252  397.046631 -4391.286621 -1584.60498        0.0                0.0  279.953369      229.233398
6 -3993.239990  398.046631 -4269.193359 -1584.60498        0.0                0.0  275.953369      247.326660
7 -3870.146729  399.046631 -4140.566650 -1584.60498        0.0                0.0  270.419922      270.419922
8 -3740.520020  400.046631 -4140.566406 -1584.60498        0.0                0.0  400.046387      300.046631
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:48:09]  --------------------------------------------------------------------------------
[07/18 17:48:09]  Iteration: 42 (0 solution, 41 counterexamples)
[07/18 17:48:10]  Generator returned sat in 0.241042 secs.
[07/18 17:48:10]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 15/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:48:10]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:48:10]  Verifer returned sat in 0.114926 secs.
[07/18 17:48:10]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4350.519775    0.095947 -4940.566895 -1584.60498        0.0                0.0  590.047119      490.047119
1 -4350.519775    0.046875 -4840.566162 -1584.60498        0.0                0.0  490.046387      390.047119
2 -4350.519775    0.046631 -4740.566895 -1584.60498        0.0                0.0  390.047119      290.047119
3 -4343.020264  397.546631 -4629.473633 -1584.60498        0.0                0.0  286.453369      197.546631
4 -4231.427002  398.046631 -4508.380127 -1584.60498        0.0                0.0  276.953125      209.139893
5 -4109.833496  398.546631 -4392.286621 -1584.60498        0.0                0.0  282.453125      230.733398
6 -3993.239990  399.046631 -4269.693359 -1584.60498        0.0                0.0  276.453369      247.326904
7 -3870.146729  399.546631 -4140.566895 -1584.60498        0.0                0.0  270.420166      270.420166
8 -3740.520264  400.046631 -4140.566895 -1584.60498        0.0                0.0  400.046631      300.046631
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:48:10]  --------------------------------------------------------------------------------
[07/18 17:48:10]  Iteration: 43 (0 solution, 42 counterexamples)
[07/18 17:48:12]  Generator returned sat in 1.803786 secs.
[07/18 17:48:13]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:48:13]  Improved gap from 191/8192 to 1.5625
[07/18 17:48:13]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/18 17:48:13]  Verifer returned sat in 0.434380 secs.
[07/18 17:48:13]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3944.650391    0.095703 -4444.673828 -1780.628418        0.0                0.0  500.023438      500.023438
1 -3944.650391    0.046631 -4344.673828 -1780.628418        0.0                0.0  400.023438      400.023438
2 -3944.650391    0.046631 -4244.673828 -1780.628418        0.0                0.0  300.023438      300.023438
3 -3944.650391  300.023193 -4144.673828 -1780.628418        0.0                0.0  200.023438      200.023438
4 -3944.650391    2.000000 -4144.673584 -1780.628418        0.0                0.0  200.023193      100.023438
5 -3944.650391    2.000000 -3946.673828 -1780.628418        0.0                0.0    2.023438        0.023438
6 -3944.650391    2.000000 -3944.673828 -1682.604980        0.0                0.0    0.023438       -1.953125
7 -3942.673828    2.000000 -3942.697021 -1584.605225        0.0                0.0    0.023193       -1.976807
8 -3940.697021    2.000000 -3940.697021 -1584.605225        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:13]  --------------------------------------------------------------------------------
[07/18 17:48:13]  Iteration: 44 (0 solution, 43 counterexamples)
[07/18 17:48:16]  Generator returned sat in 2.077011 secs.
[07/18 17:48:16]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:48:16]  Improved gap from 381/8192 to 1.5625
[07/18 17:48:16]  Improved number of small numbers from 54 to 101 out of a max of 101
[07/18 17:48:16]  Verifer returned sat in 0.281406 secs.
[07/18 17:48:16]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4646.710449    0.095703 -4646.710449 -1578.592041        0.0                0.0    0.000000       -0.000244
1 -4244.710449  402.000000 -4546.710449 -1578.592041        0.0                0.0  302.000000      301.999756
2 -4244.663818  302.046631 -4546.710205 -1578.592041        0.0                0.0  302.046387      202.046387
3 -4244.663818  302.000000 -4346.710449 -1578.592041        0.0                0.0  102.046631      102.046387
4 -4244.663818    2.000000 -4246.710449 -1578.592041        0.0                0.0    2.046631        2.046387
5 -4244.663818    2.000000 -4246.710205 -1480.638428        0.0                0.0    2.046387        0.000000
6 -4244.663818    2.000000 -4244.663818 -1382.591797        0.0                0.0    0.000000       -1.953369
7 -4242.663818    2.000000 -4242.710449 -1284.154297        0.0                0.0    0.046631       -1.515869
8 -4240.710449    2.000000 -4241.147705 -1284.154297        0.0                0.0    0.437256      -99.562500
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:16]  --------------------------------------------------------------------------------
[07/18 17:48:16]  Iteration: 45 (0 solution, 44 counterexamples)
[07/18 17:48:17]  Generator returned sat in 0.345749 secs.
[07/18 17:48:17]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:18]  Improved gap from 5953/4096 to 0
[07/18 17:48:18]  Improved number of small numbers from 73 to 101 out of a max of 101
[07/18 17:48:18]  Verifer returned sat in 0.449232 secs.
[07/18 17:48:18]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4666.477783    0.095459 -4666.478027 -1578.592285        0.0                0.0    0.000244        0.000000
1 -4666.431396    0.046631 -4666.477783 -1578.592041        0.0                0.0    0.046387      -99.953369
2 -4266.431396  400.046387 -4466.478027 -1578.592041        0.0                0.0  200.046631      200.046631
3 -4266.431396  200.000000 -4366.478027 -1578.592041        0.0                0.0  100.046631      100.046631
4 -4266.431396    1.500000 -4267.977783 -1578.592041        0.0                0.0    1.546387        0.046631
5 -4266.431396    1.500000 -4266.478027 -1478.638672        0.0                0.0    0.046631        0.000000
6 -4264.978027    1.500000 -4266.431396 -1380.092041        0.0                0.0    1.453369        0.000000
7 -4264.931396    1.500000 -4264.978027 -1281.592041        0.0                0.0    0.046631       -1.453369
8 -4263.478027    1.500000 -4263.478027 -1281.592041        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:18]  --------------------------------------------------------------------------------
[07/18 17:48:18]  Iteration: 46 (0 solution, 45 counterexamples)
[07/18 17:48:19]  Generator returned sat in 0.362921 secs.
[07/18 17:48:19]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:48:19]  Improved gap from 1/8192 to 0
[07/18 17:48:20]  Improved number of small numbers from 70 to 101 out of a max of 101
[07/18 17:48:20]  Verifer returned sat in 0.489048 secs.
[07/18 17:48:20]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -4476.026123    0.095459 -4576.026123 -1405.128662        0.0                0.0  100.000000       99.999756
1 -4476.026123  100.000000 -4576.025879 -1405.128662        0.0                0.0   99.999756       -0.000244
2 -4276.026123  299.999756 -4376.026123 -1405.128662        0.0                0.0  100.000000       99.999756
3 -4276.026123    0.023193 -4276.049316 -1405.128662        0.0                0.0    0.023193       -0.000244
4 -4275.049316    1.000000 -4276.025879 -1306.105225        0.0                0.0    0.976562        0.000000
5 -4275.025879    1.000000 -4275.049072 -1207.082031        0.0                0.0    0.023193       -0.953369
6 -4274.049072    1.000000 -4274.072510 -1108.058594        0.0                0.0    0.023438       -0.953125
7 -4273.072510    1.000000 -4273.095703 -1008.082031        0.0                0.0    0.023193        0.000000
8 -4272.095703    1.000000 -4273.072266 -1008.082031        0.0                0.0    0.976562      -99.023193
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:48:20]  --------------------------------------------------------------------------------
[07/18 17:48:20]  Iteration: 47 (0 solution, 46 counterexamples)
[07/18 17:48:21]  Generator returned sat in 0.633187 secs.
[07/18 17:48:21]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:48:21]  Improved gap from 95/32768 to 0
[07/18 17:48:22]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/18 17:48:22]  Verifer returned sat in 0.414973 secs.
[07/18 17:48:22]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3782.649902    0.095459 -4282.673340 -1704.151855        0.0                0.0  500.023438      500.023438
1 -3782.649902  500.023193 -4182.673340 -1704.151855        0.0                0.0  400.023438      400.023438
2 -3782.649902  400.023193 -4082.673340 -1704.151855        0.0                0.0  300.023438      300.023438
3 -3782.649902    0.023193 -3982.673340 -1704.151855        0.0                0.0  200.023438      200.023438
4 -3782.649902    0.500000 -3982.673096 -1704.151855        0.0                0.0  200.023193      100.023438
5 -3782.649902    0.500000 -3882.673096 -1704.151855        0.0                0.0  100.023193        0.023438
6 -3782.649902    0.500000 -3782.673340 -1604.175293        0.0                0.0    0.023438        0.000000
7 -3782.173340    0.500000 -3782.649902 -1504.675049        0.0                0.0    0.476562       -0.023193
8 -3782.149902    0.500000 -3782.149902 -1504.675049        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:22]  --------------------------------------------------------------------------------
[07/18 17:48:22]  Iteration: 48 (0 solution, 47 counterexamples)
[07/18 17:48:24]  Generator returned sat in 1.812318 secs.
[07/18 17:48:24]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:25]  Improved gap from 379/16384 to 10.9375
[07/18 17:48:25]  Improved number of small numbers from 52 to 101 out of a max of 101
[07/18 17:48:25]  Verifer returned sat in 0.515066 secs.
[07/18 17:48:25]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -3880.069824    0.095459 -3980.116211 -2106.708984        0.0                0.0  100.046387        0.046387
1 -3880.069824    0.046143 -3880.116211 -2106.708984        0.0                0.0    0.046387      -99.953613
2 -3510.162598  369.953613 -3780.115967 -2106.708984        0.0                0.0  269.953369      169.953613
3 -3510.162598  257.000000 -3610.115967 -2106.708984        0.0                0.0   99.953369       69.953613
4 -3480.115967  130.000000 -3546.570068 -2106.708984        0.0                0.0   66.454102        0.000244
5 -3480.070068   66.500000 -3480.116211 -2017.646729        0.0                0.0    0.046143      -10.891602
6 -3445.366211   34.750000 -3456.303467 -1941.459229        0.0                0.0   10.937256       -0.000244
7 -3437.428467   18.875000 -3445.365967 -1852.396729        0.0                0.0    7.937500       -3.000000
8 -3434.428467   10.937500 -3434.428467 -1852.396484        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:25]  --------------------------------------------------------------------------------
[07/18 17:48:25]  Iteration: 49 (0 solution, 48 counterexamples)
[07/18 17:48:26]  Generator returned sat in 0.373965 secs.
[07/18 17:48:26]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:48:27]  Improved gap from 163/16 to 10.9375
[07/18 17:48:27]  Improved number of small numbers from 53 to 101 out of a max of 101
[07/18 17:48:27]  Verifer returned sat in 0.707287 secs.
[07/18 17:48:27]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8226.643311    0.095459 -8714.666260  1836.875244        0.0                0.0  488.022949      388.022949
1 -8226.643311    0.046143 -8614.666260  1836.875244        0.0                0.0  388.022949      288.022949
2 -8226.643311  388.022949 -8514.666260  1836.875244        0.0                0.0  288.022949      188.022949
3 -8226.643311  288.000000 -8321.893311  1836.875244        0.0                0.0   95.250000       88.022949
4 -8176.893311  145.000000 -8276.870117  1836.875244        0.0                0.0   99.976807       37.772949
5 -8176.893311   73.500000 -8214.666260  1899.102295        0.0                0.0   37.772949        0.000000
6 -8176.893311   37.750000 -8176.893311  1988.164795        0.0                0.0    0.000000      -10.937500
7 -8157.018311   19.875000 -8157.041260  2068.312744        0.0                0.0    0.022949      -10.914551
8 -8146.103760   10.937500 -8146.103760  2068.312744        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:27]  --------------------------------------------------------------------------------
[07/18 17:48:27]  Iteration: 50 (0 solution, 49 counterexamples)
[07/18 17:48:28]  Generator returned sat in 0.334149 secs.
[07/18 17:48:28]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:48:29]  Improved gap from 189/8192 to 9.375
[07/18 17:48:29]  Improved number of small numbers from 91 to 101 out of a max of 101
[07/18 17:48:29]  Verifer returned sat in 0.641324 secs.
[07/18 17:48:29]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8217.245117    0.095215 -8686.268555  1808.477295        0.0                0.0  469.023438      369.023438
1 -8217.245117    0.046143 -8586.268555  1808.477295        0.0                0.0  369.023438      269.023438
2 -8217.245117    0.022949 -8486.268555  1808.477295        0.0                0.0  269.023438      169.023438
3 -8217.245117  269.000000 -8317.222412  1808.477295        0.0                0.0   99.977295       69.023438
4 -8182.222412  135.000000 -8244.893311  1808.477295        0.0                0.0   62.670898        4.046143
5 -8176.893311   68.000000 -8186.268555  1899.102051        0.0                0.0    9.375244        0.000000
6 -8151.768555   34.500000 -8176.893311  1973.977295        0.0                0.0   25.124756        0.000000
7 -8151.768555   17.750000 -8151.768555  2064.602295        0.0                0.0    0.000000       -9.375000
8 -8142.393555    9.375000 -8142.393555  2064.602295        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:29]  --------------------------------------------------------------------------------
[07/18 17:48:29]  Iteration: 51 (0 solution, 50 counterexamples)
[07/18 17:48:31]  Generator returned sat in 1.146692 secs.
[07/18 17:48:31]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:48:31]  Improved number of small numbers from 51 to 77 out of a max of 100
[07/18 17:48:31]  Verifer returned sat in 0.604940 secs.
[07/18 17:48:31]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8229.000977    0.095215 -8829.000977  1973.977295        0.0                0.0  600.000000      500.000054
1 -8229.000977    0.046143 -8729.000977  1973.977295        0.0                0.0  500.000000      400.000054
2 -8229.000977    0.023193 -8529.001221  1973.977295        0.0                0.0  300.000244      300.000054
3 -8229.000977   51.809623 -8453.978027  1973.977295        0.0                0.0  224.977051      200.000054
4 -8229.000977   78.214434 -8346.845703  1973.977295        0.0                0.0  117.844727      100.000054
5 -8229.000977  117.821651 -8329.001031  1973.977295        0.0                0.0  100.000054        0.000054
6 -8151.768555  177.232476 -8229.001031  1973.977295        0.0                0.0   77.232476      -22.767524
7 -7962.652317  266.348714 -8029.001031  1973.977295        0.0                0.0   66.348714       66.348714
8 -7628.977960  400.023071 -8029.000977  1973.977295        0.0                0.0  400.023017      300.023071
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:48:32]  --------------------------------------------------------------------------------
[07/18 17:48:32]  Iteration: 52 (0 solution, 51 counterexamples)
[07/18 17:48:33]  Generator returned sat in 0.667843 secs.
[07/18 17:48:33]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:48:33]  Improved gap from 0 to 100
[07/18 17:48:34]  Improved number of small numbers from 64 to 82 out of a max of 101
[07/18 17:48:34]  Verifer returned sat in 0.608050 secs.
[07/18 17:48:34]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8729.000977    0.094971 -8729.005859  1973.977295        0.0                0.0    0.004883        0.000054
1 -8729.000977    0.002500 -8729.000977  1973.977295        0.0                0.0    0.000000      -99.999946
2 -8429.000977  300.000000 -8629.000977  1973.977295        0.0                0.0  200.000000      100.000054
3 -8429.000977   97.963457 -8429.001031  1973.977295        0.0                0.0    0.000054        0.000054
4 -8281.555846  147.445185 -8429.001031  1973.977295        0.0                0.0  147.445185       47.445185
5 -8207.333253  221.667778 -8329.001031  1973.977295        0.0                0.0  121.667778       21.667778
6 -7995.999364  333.001667 -8129.001031  1973.977295        0.0                0.0  133.001667      133.001667
7 -7628.998531  500.002500 -8029.001221  1973.977295        0.0                0.0  400.002690      400.002500
8 -7628.998531    0.010000 -8029.000977  1973.977295        0.0                0.0  400.002446      300.002500
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:48:34]  --------------------------------------------------------------------------------
[07/18 17:48:34]  Iteration: 53 (0 solution, 52 counterexamples)
[07/18 17:48:37]  Generator returned sat in 2.593128 secs.
[07/18 17:48:37]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:37]  Improved gap from 0 to 0
[07/18 17:48:38]  Improved number of small numbers from 82 to 101 out of a max of 101
[07/18 17:48:38]  Verifer returned sat in 0.340957 secs.
[07/18 17:48:38]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8729.000977    0.094971 -8729.046875  1873.977295        0.0                0.0    0.045898        0.000000
1 -8729.000977    0.022949 -8729.000977  1973.977051        0.0                0.0    0.000000       -0.000244
2 -8527.500977  201.500000 -8629.000977  1973.977051        0.0                0.0  101.500000      101.499756
3 -8527.500977    0.023193 -8529.000977  1973.977051        0.0                0.0    1.500000        1.499756
4 -8527.500977    1.500000 -8528.978027  2072.477295        0.0                0.0    1.477051        0.000000
5 -8527.478027    1.500000 -8527.500977  2172.454346        0.0                0.0    0.022949        0.000000
6 -8526.000977    1.500000 -8527.478027  2270.977295        0.0                0.0    1.477051        0.000000
7 -8525.978027    1.500000 -8526.000977  2370.954102        0.0                0.0    0.022949       -0.000244
8 -8524.500977    1.500000 -8525.977783  2370.954346        0.0                0.0    1.476807      -98.522949
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:38]  --------------------------------------------------------------------------------
[07/18 17:48:38]  Iteration: 54 (0 solution, 53 counterexamples)
[07/18 17:48:39]  Generator returned sat in 0.564497 secs.
[07/18 17:48:39]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:39]  Improved gap from 409553/4096 to 98.4375
[07/18 17:48:40]  Improved number of small numbers from 52 to 101 out of a max of 101
[07/18 17:48:40]  Verifer returned sat in 0.404787 secs.
[07/18 17:48:40]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8728.995605    0.094971 -9427.489502  2472.465820        0.0                0.0  698.493896      598.493896
1 -8728.995605    0.022949 -9319.972656  2472.465820        0.0                0.0  590.977051      498.493896
2 -8728.995605    0.005859 -9225.927246  2472.465820        0.0                0.0  496.931641      398.493896
3 -8728.995605    0.005615 -9027.489502  2472.465820        0.0                0.0  298.493896      298.493896
4 -8728.995605  200.000000 -8928.995605  2472.465820        0.0                0.0  200.000000      198.493896
5 -8728.995605  195.488525 -8925.978271  2472.465820        0.0                0.0  196.982666       98.493896
6 -8728.989746  196.988525 -8827.489502  2473.966064        0.0                0.0   98.499756        0.000000
7 -8629.000977  198.488525 -8728.989746  2473.977295        0.0                0.0   99.988770        0.000000
8 -8529.001221  199.988525 -8629.000977  2473.977539        0.0                0.0   99.999756        0.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:40]  --------------------------------------------------------------------------------
[07/18 17:48:40]  Iteration: 55 (0 solution, 54 counterexamples)
[07/18 17:48:42]  Generator returned sat in 1.461360 secs.
[07/18 17:48:42]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:43]  Improved gap from 198653/2048 to 98.4375
[07/18 17:48:43]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/18 17:48:43]  Verifer returned sat in 1.305024 secs.
[07/18 17:48:43]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8665.090332    0.094971 -9264.294434  2174.069336        0.0                0.0  599.204102      499.204102
1 -8665.090332    0.045898 -9164.294434  2174.069336        0.0                0.0  499.204102      399.204102
2 -8665.090332    0.045898 -9064.294434  2174.069336        0.0                0.0  399.204102      299.204102
3 -8665.090332  399.158203 -8865.044434  2174.069336        0.0                0.0  199.954102      199.204102
4 -8464.340332  400.704102 -8764.294434  2174.069336        0.0                0.0  299.954102      299.954102
5 -8464.340332  200.000000 -8764.294434  2174.069336        0.0                0.0  299.954102      199.954102
6 -8464.340332  150.000000 -8664.294434  2174.069336        0.0                0.0  199.954102       99.954102
7 -8464.340332  176.875000 -8564.294434  2174.115234        0.0                0.0   99.954102        0.000000
8 -8374.356934  189.937500 -8464.340332  2174.115234        0.0                0.0   89.983398      -10.016602
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:48:44]  --------------------------------------------------------------------------------
[07/18 17:48:44]  Iteration: 56 (0 solution, 55 counterexamples)
[07/18 17:48:48]  Generator returned sat in 3.590906 secs.
[07/18 17:48:48]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:48:48]  Improved number of small numbers from 72 to 92 out of a max of 100
[07/18 17:48:48]  Verifer returned sat in 0.346774 secs.
[07/18 17:48:48]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8925.305908    0.094727 -9256.635254  2185.069336        0.0                0.0  331.329346      249.988525
1 -8925.305908    0.045410 -9075.294434  2185.069336        0.0                0.0  149.988525      149.988525
2 -8925.305908    0.045410 -8975.294434  2185.069336        0.0                0.0   49.988525       49.988525
3 -8925.305908    0.011475 -8975.294434  2185.069336        0.0                0.0   49.988525      -50.011475
4 -8553.283203  422.011230 -8875.294434  2185.069336        0.0                0.0  322.011230      222.011230
5 -8553.283203  200.000000 -8764.294434  2185.069336        0.0                0.0  211.011230      122.011230
6 -8553.283203  211.000000 -8603.271606  2185.069336        0.0                0.0   49.988403       22.011230
7 -8045.237366  558.034241 -8575.294434  2185.069336        0.0                0.0  530.057068      430.057068
8 -8045.237366  300.000000 -8475.294434  2185.069336        0.0                0.0  430.057068      330.057068
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:48:49]  --------------------------------------------------------------------------------
[07/18 17:48:49]  Iteration: 57 (0 solution, 56 counterexamples)
[07/18 17:48:50]  Generator returned sat in 0.367367 secs.
[07/18 17:48:50]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:48:50]  Improved number of small numbers from 78 to 92 out of a max of 100
[07/18 17:48:50]  Verifer returned sat in 0.325890 secs.
[07/18 17:48:50]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8925.306152    0.094727 -9254.774414  2185.069336        0.0                0.0  329.468262      249.988281
1 -8925.306152    0.045410 -9075.294434  2185.069336        0.0                0.0  149.988281      149.988281
2 -8925.306152    0.045410 -8975.294434  2185.069336        0.0                0.0   49.988281       49.988281
3 -8925.306152    0.011475 -8975.294434  2185.069336        0.0                0.0   49.988281      -50.011719
4 -8554.074463  421.219971 -8875.294434  2185.069336        0.0                0.0  321.219971      221.219971
5 -8554.074463  200.000000 -8764.685791  2185.069336        0.0                0.0  210.611328      121.219971
6 -8554.074463  210.608643 -8604.071606  2185.069336        0.0                0.0   49.997144       21.219971
7 -8045.237366  558.834241 -8575.294434  2185.069336        0.0                0.0  530.057068      430.057068
8 -8045.237366  300.000000 -8475.294434  2185.069336        0.0                0.0  430.057068      330.057068
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:48:50]  --------------------------------------------------------------------------------
[07/18 17:48:50]  Iteration: 58 (0 solution, 57 counterexamples)
[07/18 17:48:52]  Generator returned sat in 1.126239 secs.
[07/18 17:48:52]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:48:53]  Improved gap from 1/400 to 98.4375
[07/18 17:48:53]  Improved number of small numbers from 40 to 101 out of a max of 101
[07/18 17:48:53]  Verifer returned sat in 0.569611 secs.
[07/18 17:48:53]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9445.502441    0.094727 -9445.548096  2455.277100        0.0                0.0    0.045654        0.000000
1 -9445.502441    0.022949 -9445.502441  2456.839600        0.0                0.0    0.000000      -98.437500
2 -9022.087646  423.414795 -9272.019043  2456.839600        0.0                0.0  249.931396      224.977295
3 -9022.087646    0.022705 -9247.064697  2456.839600        0.0                0.0  224.977051      124.977295
4 -9022.087646  198.483398 -9047.064941  2456.839600        0.0                0.0   24.977295       24.977295
5 -8947.823242   99.241699 -9047.064941  2456.862549        0.0                0.0   99.241699       -0.735352
6 -8822.110840  224.954102 -8847.087891  2456.862549        0.0                0.0   24.977051       24.977051
7 -8734.610840  112.477051 -8759.587891  2456.862549        0.0                0.0   24.977051       12.477051
8 -8703.349365   56.238525 -8747.087646  2456.862549        0.0                0.0   43.738281      -56.261475
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:48:53]  --------------------------------------------------------------------------------
[07/18 17:48:53]  Iteration: 59 (0 solution, 58 counterexamples)
[07/18 17:48:56]  Generator returned sat in 1.875911 secs.
[07/18 17:48:56]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:56]  Improved number of small numbers from 55 to 100 out of a max of 100
[07/18 17:48:56]  Verifer returned sat in 0.313529 secs.
[07/18 17:48:56]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9026.788818    0.094482 -9226.788818  2136.563477        0.0                0.0  200.000000      100.000000
1 -9026.788818    0.022705 -9026.788818  2136.563477        0.0                0.0    0.000000        0.000000
2 -8575.323242  451.465576 -9000.265869  2136.563477        0.0                0.0  424.942627      351.465576
3 -8575.323242  397.011475 -8850.312012  2136.563477        0.0                0.0  274.988770      251.465576
4 -8451.800537  398.511475 -8726.788818  2136.563477        0.0                0.0  274.988281      274.988281
5 -8326.777344  400.011475 -8726.788818  2136.563477        0.0                0.0  400.011475      300.011475
6 -8326.777344  273.477051 -8601.766113  2136.563477        0.0                0.0  274.988770      200.011475
7 -8326.777344  274.977051 -8426.789062  2136.563477        0.0                0.0  100.011719      100.011475
8 -8150.312012  276.477051 -8426.788818  2136.563477        0.0                0.0  276.476807      176.476807
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:48:56]  --------------------------------------------------------------------------------
[07/18 17:48:56]  Iteration: 60 (0 solution, 59 counterexamples)
[07/18 17:48:58]  Generator returned sat in 0.609679 secs.
[07/18 17:48:58]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:48:58]  Improved gap from 361/80 to 100
[07/18 17:48:58]  Improved number of small numbers from 72 to 101 out of a max of 101
[07/18 17:48:58]  Verifer returned sat in 0.332249 secs.
[07/18 17:48:58]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8762.289062    0.094482 -9256.298828  2136.563477        0.0                0.0  494.009766      494.009766
1 -8762.289062  494.009766 -9156.298828  2136.563477        0.0                0.0  394.009766      394.009766
2 -8762.289062    0.005000 -9156.298584  2136.563477        0.0                0.0  394.009521      294.009766
3 -8762.289062  394.005127 -9037.283936  2136.563477        0.0                0.0  274.994873      194.009766
4 -8641.778809  395.505127 -8916.773926  2136.563477        0.0                0.0  274.995117      214.520020
5 -8519.768799  397.005127 -8794.763916  2136.563477        0.0                0.0  274.995117      236.530029
6 -8396.258789  398.505127 -8656.298828  2136.563477        0.0                0.0  260.040039      260.040039
7 -8256.293701  400.005127 -8656.298584  2136.563477        0.0                0.0  400.004883      300.005127
8 -8256.293701    0.010000 -8556.298584  2136.563477        0.0                0.0  300.004883      200.005127
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:48:58]  --------------------------------------------------------------------------------
[07/18 17:48:58]  Iteration: 61 (0 solution, 60 counterexamples)
[07/18 17:49:01]  Generator returned sat in 1.744875 secs.
[07/18 17:49:01]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:49:01]  Improved number of small numbers from 49 to 100 out of a max of 100
[07/18 17:49:01]  Verifer returned sat in 0.312846 secs.
[07/18 17:49:01]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8063.616943    0.094238 -8660.708008  1440.972656        0.0                0.0  597.091064      497.091064
1 -8063.616943  597.090820 -8560.708008  1440.972656        0.0                0.0  497.091064      397.091064
2 -8063.616943    0.045410 -8460.707764  1440.972656        0.0                0.0  397.090820      297.091064
3 -8063.616943  397.045654 -8313.571533  1440.972656        0.0                0.0  249.954590      197.091064
4 -7915.025879  398.545654 -8160.708008  1440.972656        0.0                0.0  245.682129      245.682129
5 -7760.662354  400.045654 -8160.707764  1440.972656        0.0                0.0  400.045410      300.045654
6 -7760.662354  300.000000 -8010.662598  1440.972656        0.0                0.0  250.000244      200.045654
7 -7707.753662  302.908936 -7860.708008  1440.972656        0.0                0.0  152.954346      152.954346
8 -7556.299072  304.408936 -7860.708008  1440.972656        0.0                0.0  304.408936      204.408936
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:49:01]  --------------------------------------------------------------------------------
[07/18 17:49:01]  Iteration: 62 (0 solution, 61 counterexamples)
[07/18 17:49:03]  Generator returned sat in 1.109973 secs.
[07/18 17:49:03]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:49:03]  Improved gap from 1/400 to 98.4375
[07/18 17:49:04]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/18 17:49:04]  Verifer returned sat in 0.263840 secs.
[07/18 17:49:04]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -7760.685059    0.093994 -8384.150879  1164.415527        0.0                0.0  623.465820      523.466064
1 -7760.685059    0.002686 -8284.150879  1164.415527        0.0                0.0  523.465820      423.466064
2 -7760.682373  523.468506 -8184.150879  1164.415527        0.0                0.0  423.468506      323.468750
3 -7760.682373  423.466064 -8010.679688  1164.415527        0.0                0.0  249.997314      223.468750
4 -7585.713623  424.966064 -7884.151123  1164.415527        0.0                0.0  298.437500      298.437500
5 -7585.713623    0.010000 -7784.151123  1164.415527        0.0                0.0  198.437500      198.437500
6 -7585.713623    1.510000 -7684.151123  1164.415527        0.0                0.0   98.437500       98.437500
7 -7585.713623    3.010000 -7684.151123  1165.978027        0.0                0.0   98.437500        0.000000
8 -7585.713623    4.510000 -7585.713623  1165.978271        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:49:04]  --------------------------------------------------------------------------------
[07/18 17:49:04]  Iteration: 63 (0 solution, 62 counterexamples)
[07/18 17:49:06]  Generator returned sat in 1.563718 secs.
[07/18 17:49:06]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:49:11]  Improved gap from 1/800 to 4.6875
[07/18 17:49:12]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/18 17:49:12]  Verifer returned sat in 5.307432 secs.
[07/18 17:49:12]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8191.386475    0.093994 -8542.351807  1322.616211        0.0                0.0  350.965332      250.965332
1 -8191.386475    0.045410 -8342.351807  1322.616211        0.0                0.0  150.965332      150.965332
2 -8191.386230  150.965576 -8245.108154  1322.616211        0.0                0.0   53.721924       50.965576
3 -8191.386230   53.676514 -8196.073730  1371.650635        0.0                0.0    4.687500        0.000000
4 -7994.596436  201.477295 -8091.386230  1371.650635        0.0                0.0   96.789795       96.789795
5 -7863.664795  227.721436 -8091.386230  1371.650635        0.0                0.0  227.721436      127.721436
6 -7863.664795  192.221680 -7991.386230  1371.650635        0.0                0.0  127.721436       27.721436
7 -7791.431641  199.954590 -7891.386230  1371.696045        0.0                0.0   99.954590        0.000000
8 -7689.908936  201.477295 -7791.431641  1371.696045        0.0                0.0  101.522705        1.522705
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:49:12]  --------------------------------------------------------------------------------
[07/18 17:49:12]  Iteration: 64 (0 solution, 63 counterexamples)
[07/18 17:49:16]  Generator returned sat in 3.619728 secs.
[07/18 17:49:16]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:49:18]  Improved gap from 93/2048 to 48.4375
[07/18 17:49:19]  Improved number of small numbers from 97 to 101 out of a max of 101
[07/18 17:49:19]  Verifer returned sat in 2.222047 secs.
[07/18 17:49:19]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8337.411865    0.093994 -8490.491455  1317.698730        0.0                0.0  153.079590      100.022461
1 -8337.389404  153.102051 -8337.434570  1317.698730        0.0                0.0    0.045166        0.044922
2 -8337.389160    0.045410 -8337.411865  1369.238770        0.0                0.0    0.022705      -48.414795
3 -8237.457520   99.954346 -8288.974365  1417.721680        0.0                0.0   51.516846       -0.000244
4 -8087.457275  201.517090 -8137.457275  1417.721680        0.0                0.0   50.000000       50.000000
5 -7937.479980  199.977295 -8137.457275  1417.721680        0.0                0.0  199.977295       99.977295
6 -7937.479980  199.954590 -7987.457275  1417.744385        0.0                0.0   49.977295        0.000000
7 -7736.721436  250.735840 -7937.100586  1417.744385        0.0                0.0  200.379150      100.758545
8 -7736.721436  200.356689 -7837.479980  1417.744385        0.0                0.0  100.758545        0.758545
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:49:19]  --------------------------------------------------------------------------------
[07/18 17:49:19]  Iteration: 65 (0 solution, 64 counterexamples)
[07/18 17:49:23]  Generator returned sat in 3.775831 secs.
[07/18 17:49:24]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:49:24]  Improved gap from 371/16384 to 100
[07/18 17:49:24]  Improved number of small numbers from 67 to 101 out of a max of 101
[07/18 17:49:24]  Verifer returned sat in 0.266713 secs.
[07/18 17:49:24]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8421.049805    0.093750 -8521.094971  1301.359131        0.0                0.0  100.045166        0.045166
1 -8421.049561  100.045410 -8421.094971  1301.359131        0.0                0.0    0.045410      -99.954590
2 -7853.502686  567.592285 -8321.094971  1301.359131        0.0                0.0  467.592285      367.592285
3 -7853.502686  408.045410 -8153.457275  1301.359131        0.0                0.0  299.954590      267.592285
4 -7745.411865  408.045410 -8045.366699  1301.359131        0.0                0.0  299.954834      275.683105
5 -7637.321289  408.045410 -7937.276367  1301.359131        0.0                0.0  299.955078      283.773682
6 -7529.230957  408.045410 -7829.185791  1301.359131        0.0                0.0  299.954834      291.864014
7 -7421.140381  408.045410 -7721.095215  1301.359131        0.0                0.0  299.954834      299.954590
8 -7313.049805  408.045410 -7713.094971  1301.359131        0.0                0.0  400.045166      308.045166
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:49:24]  --------------------------------------------------------------------------------
[07/18 17:49:24]  Iteration: 66 (0 solution, 65 counterexamples)
[07/18 17:49:31]  Generator returned sat in 6.505737 secs.
[07/18 17:49:31]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:49:32]  Improved gap from 371/16384 to 98.4375
[07/18 17:49:32]  Improved number of small numbers from 75 to 101 out of a max of 101
[07/18 17:49:32]  Verifer returned sat in 0.367941 secs.
[07/18 17:49:32]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8421.094727    0.093750 -8421.094971  1298.234131        0.0                0.0    0.000244       -0.045166
1 -8421.049561    0.045410 -8421.049561  1299.796631        0.0                0.0    0.000000      -98.437500
2 -8022.612305  398.437256 -8322.612061  1299.796631        0.0                0.0  299.999756      199.999756
3 -8022.612305  103.079590 -8222.612061  1299.796631        0.0                0.0  199.999756       99.999756
4 -8022.612305  103.079590 -8027.254395  1299.796631        0.0                0.0    4.642090       -0.000244
5 -7924.174805  103.079590 -8022.612061  1301.359131        0.0                0.0   98.437256       -0.000244
6 -7919.532471  103.079590 -7924.174561  1302.921631        0.0                0.0    4.642090      -93.795410
7 -7821.094971  103.079590 -7825.737061  1304.484131        0.0                0.0    4.642090      -93.795410
8 -7722.657471  103.079590 -7727.299561  1304.484131        0.0                0.0    4.642090      -95.357910
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:49:32]  --------------------------------------------------------------------------------
[07/18 17:49:32]  Iteration: 67 (0 solution, 66 counterexamples)
[07/18 17:49:44]  Generator returned sat in 11.096799 secs.
[07/18 17:49:44]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:49:44]  Improved gap from 0 to 100
[07/18 17:49:45]  Improved number of small numbers from 64 to 86 out of a max of 101
[07/18 17:49:45]  Verifer returned sat in 0.549801 secs.
[07/18 17:49:45]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8799.892822    0.093750 -8799.897705  1299.796631        0.0                0.0    0.004883       -0.000043
1 -8799.892578    0.005127 -8799.892578  1299.796631        0.0                0.0    0.000000      -99.999799
2 -8481.372559  318.520020 -8599.892822  1299.796631        0.0                0.0  118.520264      118.520220
3 -8481.372559   79.013333 -8599.892578  1299.796631        0.0                0.0  118.520020       18.520220
4 -8481.372559  118.520000 -8499.892779  1299.796631        0.0                0.0   18.520220      -81.479780
5 -8322.112779  177.780000 -8399.892779  1299.796631        0.0                0.0   77.780000      -22.220000
6 -8133.222779  266.670000 -8199.892779  1299.796631        0.0                0.0   66.670000       66.670000
7 -7799.887779  400.005000 -8199.892578  1299.796631        0.0                0.0  400.004799      300.005000
8 -7799.887779    0.010000 -8099.892578  1299.796631        0.0                0.0  300.004799      200.005000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:49:45]  --------------------------------------------------------------------------------
[07/18 17:49:45]  Iteration: 68 (0 solution, 67 counterexamples)
[07/18 17:49:53]  Generator returned sat in 7.370776 secs.
[07/18 17:49:53]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:49:53]  Improved gap from 0 to 100
[07/18 17:49:53]  Improved number of small numbers from 62 to 101 out of a max of 101
[07/18 17:49:53]  Verifer returned sat in 0.239494 secs.
[07/18 17:49:53]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8781.272949    0.093750 -8881.272705  1299.796631        0.0                0.0   99.999756       99.999756
1 -8781.272705  100.000000 -8781.272705  1299.796631        0.0                0.0    0.000000        0.000000
2 -8506.362793  274.909912 -8747.999268  1299.796631        0.0                0.0  241.636475      174.909912
3 -8506.362793   50.000000 -8581.272705  1299.796631        0.0                0.0   74.909912       74.909912
4 -8506.272705   75.000000 -8581.272705  1299.796631        0.0                0.0   75.000000      -25.000000
5 -8381.272705  200.000000 -8481.272705  1299.796631        0.0                0.0  100.000000        0.000000
6 -8214.546143  266.726562 -8281.272705  1299.796631        0.0                0.0   66.726562       66.726562
7 -7881.182861  400.089844 -8281.272705  1299.796631        0.0                0.0  400.089844      300.089844
8 -7881.182861  300.000000 -8181.272705  1299.796631        0.0                0.0  300.089844      200.089844
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:49:54]  --------------------------------------------------------------------------------
[07/18 17:49:54]  Iteration: 69 (0 solution, 68 counterexamples)
[07/18 17:49:59]  Generator returned sat in 4.217077 secs.
[07/18 17:49:59]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:49:59]  Improved gap from 2667/40 to 100
[07/18 17:49:59]  Improved number of small numbers from 85 to 89 out of a max of 101
[07/18 17:49:59]  Verifer returned sat in 0.315087 secs.
[07/18 17:49:59]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8781.273193    0.093750 -8881.272705  1299.796631        0.0                0.0   99.999512       99.999512
1 -8781.272705  100.000000 -8781.272705  1299.796631        0.0                0.0    0.000000        0.000000
2 -8581.277588  199.995117 -8747.999512  1299.796631        0.0                0.0  166.721924       99.995117
3 -8581.277588   79.013333 -8681.272705  1299.796631        0.0                0.0   99.995117       -0.004883
4 -8562.752705  118.520000 -8562.757705  1299.796631        0.0                0.0    0.005000      -81.480000
5 -8384.977705  177.780000 -8481.272705  1299.796631        0.0                0.0   96.295000       -3.705000
6 -8214.602705  266.670000 -8281.272705  1299.796631        0.0                0.0   66.670000       66.670000
7 -7881.267705  400.005000 -8281.272705  1299.796631        0.0                0.0  400.005000      300.005000
8 -7881.267705    0.010000 -8181.272705  1299.796631        0.0                0.0  300.005000      200.005000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:49:59]  --------------------------------------------------------------------------------
[07/18 17:49:59]  Iteration: 70 (0 solution, 69 counterexamples)
[07/18 17:50:07]  Generator returned sat in 7.087609 secs.
[07/18 17:50:07]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:08]  Improved gap from 23/1024 to 1.5625
[07/18 17:50:08]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/18 17:50:08]  Verifer returned sat in 0.278594 secs.
[07/18 17:50:08]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t    queue_t  bottle_queue_t
0 -8581.240479    0.093506 -8681.240234  1299.796387        0.0                0.0  99.999756       99.999756
1 -8581.218018  100.022217 -8581.262695  1299.796387        0.0                0.0   0.044678        0.022217
2 -8581.218018    0.022217 -8581.240234  1299.796631        0.0                0.0   0.022217      -99.977539
3 -8281.262939  299.977295 -8381.240479  1299.796631        0.0                0.0  99.977539       99.977539
4 -8281.262939    2.000000 -8283.285156  1299.819092        0.0                0.0   2.022217        0.000000
5 -8281.262939    2.000000 -8281.262939  1398.256348        0.0                0.0   0.000000       -1.562744
6 -8279.262939    2.000000 -8279.700195  1496.693848        0.0                0.0   0.437256       -1.125244
7 -8277.700195    2.000000 -8277.722900  1594.716309        0.0                0.0   0.022705       -1.540039
8 -8275.722900    2.000000 -8276.160156  1594.716309        0.0                0.0   0.437256      -99.562744
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:50:08]  --------------------------------------------------------------------------------
[07/18 17:50:08]  Iteration: 71 (0 solution, 70 counterexamples)
[07/18 17:50:12]  Generator returned sat in 2.657620 secs.
[07/18 17:50:12]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 13/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:14]  Improved number of small numbers from 55 to 67 out of a max of 100
[07/18 17:50:14]  Verifer returned sat in 1.894563 secs.
[07/18 17:50:14]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8344.959961    0.093506 -9015.555582  1534.111735        0.0                0.0  670.595621      570.595621
1 -8344.959961  670.595500 -8915.555582  1534.111735        0.0                0.0  570.595621      470.595621
2 -8344.959961    0.002686 -8815.555420  1534.111735        0.0                0.0  470.595459      370.595621
3 -8344.959961  442.412000 -8669.957582  1534.111735        0.0                0.0  324.997621      270.595621
4 -8273.952582  396.005000 -8515.555582  1534.111735        0.0                0.0  241.603000      241.603000
5 -8115.553082  400.002500 -8515.555420  1534.111735        0.0                0.0  400.002338      300.002500
6 -8115.553082    0.010000 -8315.555582  1534.111735        0.0                0.0  200.002500      200.002500
7 -8115.553082  179.206000 -8215.555582  1534.111735        0.0                0.0  100.002500      100.002500
8 -7973.952582  241.603000 -8215.555582  1534.111735        0.0                0.0  241.603000      141.603000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:50:14]  --------------------------------------------------------------------------------
[07/18 17:50:14]  Iteration: 72 (0 solution, 71 counterexamples)
[07/18 17:50:17]  Generator returned sat in 2.590141 secs.
[07/18 17:50:17]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:18]  Improved number of small numbers from 57 to 67 out of a max of 100
[07/18 17:50:18]  Verifer returned sat in 0.579316 secs.
[07/18 17:50:18]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8369.958252    0.093506 -9015.555582  1534.111735        0.0                0.0  645.597330      545.597330
1 -8369.958252  645.596680 -8915.551832  1534.111735        0.0                0.0  545.593580      445.597330
2 -8369.958252    0.002686 -8815.555420  1534.111735        0.0                0.0  445.597168      345.597330
3 -8369.958252  442.412000 -8669.957582  1534.111735        0.0                0.0  299.999330      245.597330
4 -8273.952582  396.005000 -8515.555582  1534.111735        0.0                0.0  241.603000      241.603000
5 -8115.554957  400.000625 -8515.555420  1534.111735        0.0                0.0  400.000463      300.000625
6 -8115.554957    0.010000 -8315.555582  1534.111735        0.0                0.0  200.000625      200.000625
7 -8115.554957  179.206000 -8215.555582  1534.111735        0.0                0.0  100.000625      100.000625
8 -7973.952582  241.603000 -8215.555582  1534.111735        0.0                0.0  241.603000      141.603000
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:50:18]  --------------------------------------------------------------------------------
[07/18 17:50:18]  Iteration: 73 (0 solution, 72 counterexamples)
[07/18 17:50:28]  Generator returned sat in 8.591720 secs.
[07/18 17:50:28]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:28]  Improved gap from 0 to 98.4375
[07/18 17:50:28]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/18 17:50:28]  Verifer returned sat in 0.323599 secs.
[07/18 17:50:28]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8748.947754    0.093262 -8948.949951  1534.111572        0.0                0.0  200.002197      100.002197
1 -8748.947754    0.002686 -8848.949951  1534.111572        0.0                0.0  100.002197        0.002197
2 -8748.947754  100.000000 -8748.949951  1534.111816        0.0                0.0    0.002197      -99.997559
3 -8454.512451  294.437500 -8570.389893  1534.111816        0.0                0.0  115.877441       94.437744
4 -8273.952393  296.437500 -8448.950195  1534.111816        0.0                0.0  174.997803      174.997803
5 -8150.512695  298.437500 -8448.949951  1534.111816        0.0                0.0  298.437256      198.437500
6 -8150.512695    0.010000 -8348.950195  1534.111816        0.0                0.0  198.437500       98.437500
7 -8150.512695    0.010000 -8248.950195  1535.674316        0.0                0.0   98.437500        0.000000
8 -8150.512695    2.010000 -8150.512695  1535.674316        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:50:28]  --------------------------------------------------------------------------------
[07/18 17:50:28]  Iteration: 74 (0 solution, 73 counterexamples)
[07/18 17:50:31]  Generator returned sat in 1.736166 secs.
[07/18 17:50:31]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:31]  Improved gap from 11/16384 to 20.3125
[07/18 17:50:32]  Improved number of small numbers from 46 to 101 out of a max of 101
[07/18 17:50:32]  Verifer returned sat in 0.467954 secs.
[07/18 17:50:32]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8659.195801    0.093018 -8779.506836  1464.668457        0.0                0.0  120.311035      120.311035
1 -8659.195801    0.002441 -8680.192871  1464.668457        0.0                0.0   20.997070       20.311035
2 -8659.194336   20.998535 -8679.506836  1544.355957        0.0                0.0   20.312500        0.000000
3 -8384.194336  295.312500 -8581.851318  1544.355957        0.0                0.0  197.656982      175.000000
4 -8384.194336  197.655518 -8559.194336  1544.355957        0.0                0.0  175.000000       75.000000
5 -8384.194336  120.998535 -8404.506836  1569.355713        0.0                0.0   20.312500       -0.000244
6 -8281.508301  122.998535 -8384.194092  1569.355713        0.0                0.0  102.685791        2.685791
7 -8259.195557  124.998535 -8279.508057  1644.357178        0.0                0.0   20.312500        0.000000
8 -8152.509521  126.998535 -8259.195557  1644.357178        0.0                0.0  106.686035        6.686035
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:50:32]  --------------------------------------------------------------------------------
[07/18 17:50:32]  Iteration: 75 (0 solution, 74 counterexamples)
[07/18 17:50:34]  Generator returned sat in 1.715108 secs.
[07/18 17:50:35]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:35]  Improved gap from 325/16 to 98.4375
[07/18 17:50:35]  Improved number of small numbers from 60 to 101 out of a max of 101
[07/18 17:50:35]  Verifer returned sat in 0.521662 secs.
[07/18 17:50:35]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -7656.525391    0.092773 -7856.547852  1544.355957        0.0                0.0  200.022461      100.022461
1 -7656.525391    0.022461 -7656.547852  1544.355957        0.0                0.0    0.022461        0.022461
2 -7056.614746  599.933105 -7556.547852  1544.355957        0.0                0.0  499.933105      499.933105
3 -7056.614746    0.022217 -7556.547852  1544.355957        0.0                0.0  499.933105      399.933105
4 -7056.614746  300.000000 -7356.592529  1544.355957        0.0                0.0  299.977783      299.933105
5 -7056.614746  299.955322 -7356.547852  1544.355957        0.0                0.0  299.933105      199.933105
6 -7056.614746  200.000000 -7231.592529  1544.355957        0.0                0.0  174.977783       99.933105
7 -7056.614746  102.000000 -7155.052246  1544.422852        0.0                0.0   98.437500        0.000000
8 -7056.614746   53.000000 -7056.614746  1544.423096        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:50:35]  --------------------------------------------------------------------------------
[07/18 17:50:35]  Iteration: 76 (0 solution, 75 counterexamples)
[07/18 17:50:37]  Generator returned sat in 0.924678 secs.
[07/18 17:50:37]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 7/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:38]  Improved gap from 1/400 to 14.0625
[07/18 17:50:38]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/18 17:50:38]  Verifer returned sat in 0.572860 secs.
[07/18 17:50:38]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -7034.772705    0.092529 -7460.783936  1544.355713        0.0                0.0  426.011230      426.010986
1 -7034.772705    0.022217 -7460.783691  1544.355713        0.0                0.0  426.010986      326.010986
2 -7034.772705    0.010986 -7360.783691  1544.355713        0.0                0.0  326.010986      226.010986
3 -7034.772705  326.000000 -7199.783691  1544.355713        0.0                0.0  165.010986      126.010986
4 -7034.772705  165.000000 -7119.261230  1544.355713        0.0                0.0   84.488525       26.010986
5 -7034.761230   84.500000 -7034.772461  1604.281982        0.0                0.0    0.011230      -14.051270
6 -6990.522461   44.250000 -7014.658936  1674.094482        0.0                0.0   24.136475        0.000000
7 -6990.522461   24.125000 -6990.522461  1760.031982        0.0                0.0    0.000000      -14.062500
8 -6976.459961   14.062500 -6976.459961  1760.031982        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:50:38]  --------------------------------------------------------------------------------
[07/18 17:50:38]  Iteration: 77 (0 solution, 76 counterexamples)
[07/18 17:50:42]  Generator returned sat in 2.546410 secs.
[07/18 17:50:42]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:43]  Improved gap from 168915/16384 to 14.0625
[07/18 17:50:43]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/18 17:50:43]  Verifer returned sat in 1.021430 secs.
[07/18 17:50:43]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6824.567871    0.092529 -7274.522949  1358.094971        0.0                0.0  449.955078      449.955078
1 -6824.567871    0.044678 -7174.522949  1358.094971        0.0                0.0  349.955078      349.955078
2 -6824.567871    0.044678 -7174.522949  1358.094971        0.0                0.0  349.955078      249.955078
3 -6824.567871  326.000000 -6974.522949  1358.094971        0.0                0.0  149.955078      149.955078
4 -6809.522949  165.000000 -6959.478516  1358.094971        0.0                0.0  149.955566       65.000000
5 -6809.522949   84.500000 -6874.522949  1393.094971        0.0                0.0   65.000000        0.000000
6 -6809.522949   44.250000 -6809.522949  1479.032471        0.0                0.0    0.000000      -14.062500
7 -6785.397949   24.125000 -6785.442627  1554.952148        0.0                0.0    0.044678      -14.017822
8 -6771.380127   14.062500 -6771.380127  1554.952393        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:50:43]  --------------------------------------------------------------------------------
[07/18 17:50:43]  Iteration: 78 (0 solution, 77 counterexamples)
[07/18 17:50:54]  Generator returned sat in 9.667711 secs.
[07/18 17:50:54]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:50:54]  Improved gap from 1/400 to 98.4375
[07/18 17:50:55]  Improved number of small numbers from 55 to 66 out of a max of 101
[07/18 17:50:55]  Verifer returned sat in 1.285941 secs.
[07/18 17:50:55]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6964.979736    0.092529 -7163.417202  1542.752518        0.0                0.0  198.437466      198.437466
1 -6964.979736    0.044678 -7063.417236  1542.752518        0.0                0.0   98.437500       98.437466
2 -6964.979736    0.002686 -7063.417202  1544.315018        0.0                0.0   98.437466       -0.000034
3 -6608.881369  454.535833 -6864.979702  1544.315018        0.0                0.0  256.098333      256.098333
4 -6486.493036  378.486667 -6764.979702  1544.315018        0.0                0.0  278.486667      278.486667
5 -6486.493036    0.010000 -6761.490536  1544.315018        0.0                0.0  274.997500      178.486667
6 -6486.493036  152.968333 -6664.979702  1544.315018        0.0                0.0  178.486667       78.486667
7 -6486.493036  178.484167 -6563.419702  1544.317518        0.0                0.0   76.926667      -21.510833
8 -6371.397619  192.022083 -6464.982178  1544.317627        0.0                0.0   93.584559       -6.415307
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:50:55]  --------------------------------------------------------------------------------
[07/18 17:50:55]  Iteration: 79 (0 solution, 78 counterexamples)
[07/18 17:50:59]  Generator returned sat in 2.392610 secs.
[07/18 17:50:59]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:51:00]  Improved gap from 0 to 100
[07/18 17:51:01]  Improved number of small numbers from 47 to 101 out of a max of 101
[07/18 17:51:01]  Verifer returned sat in 1.727622 secs.
[07/18 17:51:01]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -5895.513428    0.092285 -6534.646973  1544.317627        0.0                0.0  639.133545      539.133789
1 -5895.513428    0.044678 -6434.646973  1544.317627        0.0                0.0  539.133545      439.133789
2 -5895.513428    0.044678 -6319.557861  1544.317627        0.0                0.0  424.044434      339.133789
3 -5895.513428  424.000000 -6170.468750  1544.317627        0.0                0.0  274.955322      239.133789
4 -5774.379639  396.089111 -6034.647217  1544.317627        0.0                0.0  260.267578      260.267578
5 -5634.602783  400.044434 -6034.647217  1544.317627        0.0                0.0  400.044434      300.044434
6 -5634.602783  284.910645 -5909.558105  1544.317627        0.0                0.0  274.955322      200.044434
7 -5634.602783  274.910645 -5734.647217  1544.317627        0.0                0.0  100.044434      100.044434
8 -5445.191895  289.455322 -5734.646973  1544.317627        0.0                0.0  289.455078      189.455322
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:51:01]  --------------------------------------------------------------------------------
[07/18 17:51:01]  Iteration: 80 (0 solution, 79 counterexamples)
[07/18 17:51:03]  Generator returned sat in 1.462383 secs.
[07/18 17:51:03]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:51:04]  Improved gap from 91/2048 to 84.375
[07/18 17:51:04]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/18 17:51:04]  Verifer returned sat in 0.820628 secs.
[07/18 17:51:04]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6631.878662    0.092285 -6720.414795  1528.692627        0.0                0.0   88.536133       84.375000
1 -6631.878662    0.044434 -6716.253662  1544.317627        0.0                0.0   84.375000        0.000000
2 -6456.878662  259.375000 -6532.039795  1544.317627        0.0                0.0   75.161133       75.000000
3 -6456.878662   75.116455 -6531.878662  1559.942627        0.0                0.0   75.000000       -9.375000
4 -6343.342529  188.536133 -6353.459229  1559.942627        0.0                0.0   10.116699        4.161133
5 -6162.923096  190.536133 -6347.503662  1559.942627        0.0                0.0  184.580566       84.580566
6 -6162.923096  184.536133 -6237.878418  1565.942383        0.0                0.0   74.955322       -9.419678
7 -6051.342285  186.536133 -6126.298096  1565.942383        0.0                0.0   74.955811        2.161133
8 -5937.761963  188.536133 -6053.503418  1565.942383        0.0                0.0  115.741455       15.741455
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:51:04]  --------------------------------------------------------------------------------
[07/18 17:51:04]  Iteration: 81 (0 solution, 80 counterexamples)
[07/18 17:51:06]  Generator returned sat in 0.978203 secs.
[07/18 17:51:07]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:51:07]  Improved gap from 0 to 98.4375
[07/18 17:51:07]  Improved number of small numbers from 87 to 101 out of a max of 101
[07/18 17:51:07]  Verifer returned sat in 0.510821 secs.
[07/18 17:51:07]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6385.324219    0.092041 -6485.346191  1297.762939        0.0                0.0  100.021973      100.000000
1 -6385.324219  100.021973 -6385.324219  1297.762939        0.0                0.0    0.000000        0.000000
2 -6185.324219  200.000000 -6285.324219  1297.762939        0.0                0.0  100.000000      100.000000
3 -6185.324219    0.021973 -6285.324219  1297.762939        0.0                0.0  100.000000        0.000000
4 -6085.302246  200.021973 -6085.324219  1297.762939        0.0                0.0    0.021973        0.021973
5 -5983.313232  102.010986 -6085.324219  1297.762939        0.0                0.0  102.010986        2.010986
6 -5885.324219  200.000000 -5912.324219  1297.762939        0.0                0.0   27.000000        0.000000
7 -5810.324219  102.000000 -5885.324219  1299.325439        0.0                0.0   75.000000      -23.437500
8 -5685.324219  200.000000 -5786.886719  1299.325439        0.0                0.0  101.562500        1.562500
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:51:07]  --------------------------------------------------------------------------------
[07/18 17:51:07]  Iteration: 82 (0 solution, 81 counterexamples)
[07/18 17:51:12]  Generator returned sat in 3.247500 secs.
[07/18 17:51:12]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:51:12]  Improved number of small numbers from 82 to 88 out of a max of 100
[07/18 17:51:12]  Verifer returned sat in 0.281718 secs.
[07/18 17:51:12]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6385.324219    0.091797 -6485.346191  1297.762939        0.0                0.0  100.021973      100.000000
1 -6385.324219  100.021973 -6385.324219  1297.762939        0.0                0.0    0.000000        0.000000
2 -6260.883301  124.440918 -6376.590088  1297.762939        0.0                0.0  115.706787       24.440918
3 -6260.883301  115.704444 -6260.883385  1297.762939        0.0                0.0    0.000085      -75.559082
4 -6085.326719  175.556667 -6185.324219  1297.762939        0.0                0.0   99.997500       -0.002500
5 -5919.989219  265.335000 -5985.324219  1297.762939        0.0                0.0   65.335000       65.335000
6 -5585.321719  400.002500 -5985.324219  1297.762939        0.0                0.0  400.002500      300.002500
7 -5585.321719    0.010000 -5885.324219  1297.762939        0.0                0.0  300.002500      200.002500
8 -5585.321719    0.010000 -5785.324219  1297.762939        0.0                0.0  200.002500      100.002500
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:51:12]  --------------------------------------------------------------------------------
[07/18 17:51:12]  Iteration: 83 (0 solution, 82 counterexamples)
[07/18 17:51:15]  Generator returned sat in 1.419720 secs.
[07/18 17:51:15]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:51:15]  Improved gap from 0 to 12.5
[07/18 17:51:16]  Improved number of small numbers from 58 to 101 out of a max of 101
[07/18 17:51:16]  Verifer returned sat in 0.950648 secs.
[07/18 17:51:16]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6681.392334    0.091553 -6681.436523  1297.762939        0.0                0.0    0.044189        0.000000
1 -6681.392334    0.043945 -6681.392334  1297.762939        0.0                0.0    0.000000     -100.000000
2 -6281.436523  399.955811 -6581.392334  1297.762939        0.0                0.0  299.955811      199.955811
3 -6281.436523  276.000000 -6381.392334  1297.762939        0.0                0.0   99.955811       99.955811
4 -6241.392334  140.000000 -6313.392578  1297.762939        0.0                0.0   72.000244       40.000000
5 -6241.392334   72.000000 -6281.392334  1357.762939        0.0                0.0   40.000000        0.000000
6 -6241.392334   38.000000 -6241.392334  1445.262695        0.0                0.0    0.000000      -12.500244
7 -6220.392334   21.000000 -6220.436279  1524.306885        0.0                0.0    0.043945      -12.456055
8 -6207.936279   12.500000 -6207.936279  1524.306885        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:51:16]  --------------------------------------------------------------------------------
[07/18 17:51:16]  Iteration: 84 (0 solution, 83 counterexamples)
[07/18 17:51:19]  Generator returned sat in 1.805868 secs.
[07/18 17:51:19]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:51:19]  Improved gap from 0 to 98.4375
[07/18 17:51:19]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/18 17:51:19]  Verifer returned sat in 0.397305 secs.
[07/18 17:51:19]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6660.337158    0.091309 -6860.337158  1365.770264        0.0                0.0  200.000000      100.000000
1 -6660.337158    0.002500 -6660.337158  1365.770264        0.0                0.0    0.000000        0.000000
2 -6335.339600  324.997559 -6560.337158  1365.770264        0.0                0.0  224.997559      224.997559
3 -6335.339600  192.437500 -6460.337402  1365.770264        0.0                0.0  124.997803      124.997559
4 -6265.899902  194.437500 -6360.337402  1365.770264        0.0                0.0   94.437500       94.437256
5 -6163.899902  196.437500 -6260.337158  1365.770264        0.0                0.0   96.437256       96.437256
6 -6061.899658  198.437500 -6197.837158  1365.770264        0.0                0.0  135.937500       98.437500
7 -6061.899658    0.010000 -6160.337158  1367.332764        0.0                0.0   98.437500        0.000000
8 -6061.899658    2.010000 -6061.899658  1367.332764        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:51:20]  --------------------------------------------------------------------------------
[07/18 17:51:20]  Iteration: 85 (0 solution, 84 counterexamples)
[07/18 17:51:36]  Generator returned sat in 15.106543 secs.
[07/18 17:51:36]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:51:36]  Improved gap from 763131/8192 to 100
[07/18 17:51:36]  Improved number of small numbers from 85 to 89 out of a max of 101
[07/18 17:51:36]  Verifer returned sat in 0.308289 secs.
[07/18 17:51:36]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6660.337158    0.091064 -6860.337158  1365.770264        0.0                0.0  200.000000      100.000000
1 -6660.337158    0.002441 -6660.337402  1365.770264        0.0                0.0    0.000244        0.000000
2 -6460.335938  200.001465 -6660.337158  1365.770264        0.0                0.0  200.001221      100.001221
3 -6460.335938   50.070123 -6460.337158  1365.770264        0.0                0.0    0.001221        0.001221
4 -6383.731973   76.605185 -6460.337158  1365.770264        0.0                0.0   76.605185      -23.394815
5 -6343.929380  116.407778 -6343.930630  1365.770264        0.0                0.0    0.001250      -83.592222
6 -6167.818964  176.111667 -6260.337158  1365.770264        0.0                0.0   92.518194       -7.481806
7 -5994.669658  265.667500 -6060.337158  1365.770264        0.0                0.0   65.667500       65.667500
8 -5660.335908  400.001250 -6060.337158  1365.770264        0.0                0.0  400.001250      300.001250
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/18 17:51:36]  --------------------------------------------------------------------------------
[07/18 17:51:36]  Iteration: 86 (0 solution, 85 counterexamples)
[07/18 17:51:41]  Generator returned sat in 3.439667 secs.
[07/18 17:51:41]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:51:41]  Improved gap from 0 to 98.4375
[07/18 17:51:41]  Improved number of small numbers from 80 to 101 out of a max of 101
[07/18 17:51:41]  Verifer returned sat in 0.259794 secs.
[07/18 17:51:41]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6261.824707    0.091064 -6860.324707  1365.770020        0.0                0.0  598.500000      498.500000
1 -6261.824707    0.002441 -6660.324707  1365.770020        0.0                0.0  398.500000      398.500000
2 -6261.824707  398.499756 -6660.324707  1365.770020        0.0                0.0  398.500000      298.500000
3 -6261.824707  398.498535 -6460.324707  1365.770020        0.0                0.0  198.500000      198.500000
4 -6060.326172  399.998535 -6360.324951  1365.770020        0.0                0.0  299.998779      299.998535
5 -6060.326172    0.500000 -6260.326172  1365.770020        0.0                0.0  200.000000      199.998535
6 -6060.326172    0.500000 -6260.324707  1365.770020        0.0                0.0  199.998535       99.998535
7 -6060.326172    2.000000 -6158.763672  1365.771484        0.0                0.0   98.437500        0.000000
8 -6060.326172    3.500000 -6060.326172  1365.771484        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:51:42]  --------------------------------------------------------------------------------
[07/18 17:51:42]  Iteration: 87 (0 solution, 86 counterexamples)
[07/18 17:51:52]  Generator returned sat in 9.100515 secs.
[07/18 17:51:52]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:51:52]  Improved gap from 359/16384 to 98.4375
[07/18 17:51:52]  Improved number of small numbers from 77 to 101 out of a max of 101
[07/18 17:51:52]  Verifer returned sat in 0.441750 secs.
[07/18 17:51:52]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -6557.225098    0.091064 -6657.224854  1365.77002        0.0                0.0   99.999756       99.999756
1 -6557.224854  100.000000 -6655.618652  1365.77002        0.0                0.0   98.393799        0.000000
2 -6261.824951  393.793701 -6557.224854  1365.77002        0.0                0.0  295.399902      195.399902
3 -6261.824951   98.481201 -6360.349854  1365.77002        0.0                0.0   98.524902       95.399902
4 -6261.824951   98.481201 -6261.868652  1365.77002        0.0                0.0    0.043701       -4.600098
5 -6163.387451   98.481201 -6257.224854  1367.33252        0.0                0.0   93.837402       -4.600098
6 -6158.743652   98.481201 -6158.787354  1368.89502        0.0                0.0    0.043701      -98.393799
7 -6060.306152   98.481201 -6060.349854  1370.45752        0.0                0.0    0.043701      -98.393799
8 -5961.868652   98.481201 -5961.912354  1370.45752        0.0                0.0    0.043701      -99.956299
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:51:53]  --------------------------------------------------------------------------------
[07/18 17:51:53]  Iteration: 88 (0 solution, 87 counterexamples)
[07/18 17:51:56]  Generator returned sat in 2.032259 secs.
[07/18 17:51:56]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:51:56]  Improved gap from 403379/65536 to 98.4375
[07/18 17:51:57]  Improved number of small numbers from 58 to 99 out of a max of 101
[07/18 17:51:57]  Verifer returned sat in 1.057397 secs.
[07/18 17:51:57]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9055.364990    0.090820 -9055.364990  1368.894775        0.0                0.0    0.000000      -98.437500
1 -8858.402588  196.962402 -8858.424316  1368.894775        0.0                0.0    0.021729       -1.475098
2 -8520.989990  337.434326 -8805.277588  1368.894775        0.0                0.0  284.287598      235.937500
3 -8520.989990    0.021973 -8656.927490  1368.894775        0.0                0.0  135.937500      135.937500
4 -8258.489990  398.437500 -8558.468018  1368.894775        0.0                0.0  299.978027      298.437500
5 -8258.489990  299.956299 -8556.927490  1368.894775        0.0                0.0  298.437500      198.437500
6 -8258.489990  248.350098 -8383.468262  1368.894775        0.0                0.0  124.978271       98.437500
7 -8258.489990  124.175049 -8356.927490  1370.457275        0.0                0.0   98.437500        0.000000
8 -8258.489990   62.087524 -8258.489990  1370.457275        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:51:57]  --------------------------------------------------------------------------------
[07/18 17:51:57]  Iteration: 89 (0 solution, 88 counterexamples)
[07/18 17:51:59]  Generator returned sat in 1.194395 secs.
[07/18 17:51:59]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:52:00]  Improved gap from 1407865/16384 to 98.4375
[07/18 17:52:00]  Improved number of small numbers from 52 to 101 out of a max of 101
[07/18 17:52:00]  Verifer returned sat in 0.510222 secs.
[07/18 17:52:00]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8015.765137    0.090576 -8290.721436  626.126221        0.0                0.0  274.956299      198.393799
1 -8015.765137    0.043457 -8114.158936  626.126221        0.0                0.0   98.393799       98.393799
2 -8015.721436   98.437500 -8114.158936  627.688721        0.0                0.0   98.437500        0.000000
3 -7517.240234  596.918701 -8015.721436  627.688721        0.0                0.0  498.481201      398.481201
4 -7517.240234  275.000000 -7817.196777  627.688721        0.0                0.0  299.956543      298.481201
5 -7517.240234  296.962158 -7815.721436  627.688721        0.0                0.0  298.481201      198.481201
6 -7517.240234  298.437500 -7666.459229  627.688721        0.0                0.0  149.218994       98.481201
7 -7517.240234  149.218750 -7615.677979  629.207520        0.0                0.0   98.437744        0.000000
8 -7517.240234   74.609375 -7517.240234  629.207764        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:52:00]  --------------------------------------------------------------------------------
[07/18 17:52:00]  Iteration: 90 (0 solution, 89 counterexamples)
[07/18 17:52:06]  Generator returned sat in 4.378510 secs.
[07/18 17:52:06]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:52:09]  Improved gap from 89/16384 to 23.4375
[07/18 17:52:09]  Improved number of small numbers from 52 to 101 out of a max of 101
[07/18 17:52:09]  Verifer returned sat in 3.599718 secs.
[07/18 17:52:10]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8129.876221    0.090576 -8306.449219  527.124023        0.0                0.0  176.572998      100.021484
1 -8129.876221    0.043213 -8129.897705  527.124023        0.0                0.0    0.021484        0.021484
2 -8129.876221    0.010742 -8129.897705  603.686523        0.0                0.0    0.021484      -23.416016
3 -8031.460205   98.437500 -8106.460205  628.686523        0.0                0.0   75.000000        0.000000
4 -7906.471191  199.989014 -7931.970215  628.686523        0.0                0.0   25.499023       24.989014
5 -7733.011963  198.958252 -7931.460205  628.686523        0.0                0.0  198.448242       98.448242
6 -7733.011963  198.437500 -7755.418701  629.207520        0.0                0.0   22.406738       -1.030762
7 -7480.679199  274.739502 -7731.981201  629.207520        0.0                0.0  251.302002      151.302002
8 -7480.679199  199.989014 -7631.981201  629.207520        0.0                0.0  151.302002       51.302002
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:52:10]  --------------------------------------------------------------------------------
[07/18 17:52:10]  Iteration: 91 (0 solution, 90 counterexamples)
[07/18 17:52:14]  Generator returned sat in 2.654499 secs.
[07/18 17:52:14]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:52:14]  Improved gap from 0 to 98.4375
[07/18 17:52:14]  Improved number of small numbers from 43 to 99 out of a max of 101
[07/18 17:52:14]  Verifer returned sat in 0.679122 secs.
[07/18 17:52:14]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -7734.443604    0.090332 -8528.301758  627.102295        0.0                0.0  793.858154      696.939697
1 -7734.443604    0.021729 -8331.383545  627.102295        0.0                0.0  596.939941      596.939697
2 -7734.443604    0.021484 -8234.334961  627.102295        0.0                0.0  499.891357      496.939697
3 -7734.443604    0.021729 -8131.383301  627.102295        0.0                0.0  396.939697      396.939697
4 -7734.443604  396.918457 -8032.924316  627.102295        0.0                0.0  298.480713      296.939697
5 -7734.443604  298.459229 -8031.383301  627.102295        0.0                0.0  296.939697      196.939697
6 -7734.443604  202.951660 -7834.421631  627.102295        0.0                0.0   99.978027       96.939697
7 -7732.945801  101.475830 -7831.383301  628.664795        0.0                0.0   98.437500        0.000000
8 -7732.945801   50.737915 -7732.945801  628.665039        0.0                0.0    0.000000      -99.999756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:52:15]  --------------------------------------------------------------------------------
[07/18 17:52:15]  Iteration: 92 (0 solution, 91 counterexamples)
[07/18 17:52:19]  Generator returned sat in 2.740237 secs.
[07/18 17:52:19]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[07/18 17:52:25]  Improved gap from 0 to 6.25
[07/18 17:52:26]  Improved number of small numbers from 41 to 55 out of a max of 101
[07/18 17:52:26]  Verifer returned sat in 7.523671 secs.
[07/18 17:52:26]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -7931.425293    0.090088 -8280.218488  375.947309        0.0                0.0  348.793195      248.793195
1 -7931.425293    0.043457 -8080.218488  375.947309        0.0                0.0  148.793195      148.793195
2 -7931.425293    0.043213 -7980.218488  375.947309        0.0                0.0   48.793195       48.793195
3 -7931.425293   48.750000 -7937.675153  427.153974        0.0                0.0    6.249860       -0.000140
4 -7742.028486  195.646667 -7841.985151  427.153974        0.0                0.0   99.956665       89.396667
5 -7625.045148  216.940002 -7831.425153  427.153974        0.0                0.0  206.380005      106.380005
6 -7625.045148  148.793335 -7725.001813  427.153974        0.0                0.0   99.956665        6.380005
7 -7544.268476  180.733337 -7631.425153  439.997297        0.0                0.0   87.156677        0.000000
8 -7435.778486  195.646667 -7544.268311  439.997297        0.0                0.0  108.489825        8.489990
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:52:26]  --------------------------------------------------------------------------------
[07/18 17:52:26]  Iteration: 93 (0 solution, 92 counterexamples)
[07/18 17:52:38]  Generator returned sat in 10.185777 secs.
[07/18 17:52:38]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:52:38]  Improved gap from 177/8192 to 98.4375
[07/18 17:52:38]  Improved number of small numbers from 91 to 101 out of a max of 101
[07/18 17:52:38]  Verifer returned sat in 0.367335 secs.
[07/18 17:52:38]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8481.098389    0.090088 -8679.535645  775.264648        0.0                0.0  198.437256       98.437500
1 -8481.098389    0.043213 -8579.535889  776.827148        0.0                0.0   98.437500        0.000000
2 -8181.141602  398.394287 -8481.098145  776.827148        0.0                0.0  299.956543      199.956787
3 -8181.141602  192.437500 -8281.098389  776.827148        0.0                0.0   99.956787       99.956787
4 -8086.660889  194.437500 -8182.617676  776.827148        0.0                0.0   95.956787       94.437500
5 -7986.180176  196.437500 -8081.098389  776.827148        0.0                0.0   94.918213       94.918213
6 -7882.660889  198.437500 -8081.098389  776.827148        0.0                0.0  198.437500       98.437500
7 -7882.660889    2.000000 -7981.098389  778.389648        0.0                0.0   98.437500        0.000000
8 -7882.660889    4.000000 -7882.660889  778.389648        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:52:38]  --------------------------------------------------------------------------------
[07/18 17:52:38]  Iteration: 94 (0 solution, 93 counterexamples)
[07/18 17:52:41]  Generator returned sat in 1.450463 secs.
[07/18 17:52:41]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:52:41]  Improved gap from 1567/16 to 98.4375
[07/18 17:52:42]  Improved number of small numbers from 75 to 101 out of a max of 101
[07/18 17:52:42]  Verifer returned sat in 0.330710 secs.
[07/18 17:52:42]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t   wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8682.313965    0.090088 -8976.294678  576.78418        0.0                0.0  293.980713      293.980713
1 -8682.313965    0.042969 -8976.294434  576.78418        0.0                0.0  293.980469      193.980713
2 -8682.313721  293.980713 -8876.294434  576.78418        0.0                0.0  193.980713       93.980957
3 -8682.313721  193.937500 -8757.583496  576.78418        0.0                0.0   75.269775       -6.019043
4 -8562.145996  195.437500 -8577.813965  576.78418        0.0                0.0   15.667969       14.148682
5 -8380.876465  196.937500 -8476.294678  576.78418        0.0                0.0   95.418213       95.418213
6 -8277.857178  198.437500 -8385.669678  576.78418        0.0                0.0  107.812500       98.437500
7 -8277.857178    2.000000 -8376.294678  578.34668        0.0                0.0   98.437500        0.000000
8 -8277.857178    3.500000 -8277.857178  578.34668        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:52:42]  --------------------------------------------------------------------------------
[07/18 17:52:42]  Iteration: 95 (0 solution, 94 counterexamples)
[07/18 17:52:45]  Generator returned sat in 1.662114 secs.
[07/18 17:52:45]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:52:45]  Improved gap from 1551/16 to 98.4375
[07/18 17:52:45]  Improved number of small numbers from 75 to 101 out of a max of 101
[07/18 17:52:45]  Verifer returned sat in 0.460933 secs.
[07/18 17:52:45]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8780.361084    0.089844 -8780.404053  576.784180        0.0                0.0    0.042969        0.000244
1 -8780.361084    0.021484 -8780.361328  576.784180        0.0                0.0    0.000244      -99.999756
2 -8484.421631  295.939697 -8680.361084  576.784180        0.0                0.0  195.939453       95.939697
3 -8484.421631  195.918213 -8578.798828  576.784180        0.0                0.0   94.377197       -4.060303
4 -8381.880615  196.918213 -8381.902100  576.784180        0.0                0.0    0.021484       -1.519287
5 -8183.983887  197.918213 -8280.841797  576.784180        0.0                0.0   96.857910       96.377441
6 -8081.923584  198.918213 -8181.923828  576.784180        0.0                0.0  100.000244       98.437744
7 -8081.923584    2.000000 -8180.361084  578.346436        0.0                0.0   98.437500        0.000000
8 -8081.923584    3.000000 -8081.923584  578.346436        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:52:46]  --------------------------------------------------------------------------------
[07/18 17:52:46]  Iteration: 96 (0 solution, 95 counterexamples)
[07/18 17:52:49]  Generator returned sat in 2.056905 secs.
[07/18 17:52:49]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:52:49]  Improved gap from 1575/16 to 98.4375
[07/18 17:52:49]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/18 17:52:49]  Verifer returned sat in 0.337015 secs.
[07/18 17:52:49]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8783.061279    0.089844 -9081.572021  576.783936        0.0                0.0  298.510742      298.510742
1 -8783.061279    0.021484 -8981.572021  576.783936        0.0                0.0  198.510742      198.510742
2 -8783.061279  198.510742 -8981.572021  576.783936        0.0                0.0  198.510742       98.510742
3 -8783.061279  198.500000 -8880.009521  576.783936        0.0                0.0   96.948242       -1.489258
4 -8681.009521  199.000000 -8683.123779  576.783936        0.0                0.0    2.114258        0.562500
5 -8483.623779  199.500000 -8583.134521  576.783936        0.0                0.0   99.510742       97.948242
6 -8383.134521  200.000000 -8581.572021  576.783936        0.0                0.0  198.437500       98.437500
7 -8383.134521    2.000000 -8481.572021  578.346436        0.0                0.0   98.437500        0.000000
8 -8383.134521    2.500000 -8383.134521  578.346436        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:52:50]  --------------------------------------------------------------------------------
[07/18 17:52:50]  Iteration: 97 (0 solution, 96 counterexamples)
[07/18 17:52:55]  Generator returned sat in 4.088654 secs.
[07/18 17:52:55]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:52:55]  Improved number of small numbers from 49 to 100 out of a max of 100
[07/18 17:52:55]  Verifer returned sat in 0.208748 secs.
[07/18 17:52:55]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -8983.079834    0.089600 -9083.122803  578.345947        0.0                0.0  100.042969        0.042969
1 -8983.079834   99.999756 -8983.122803  578.345947        0.0                0.0    0.042969      -99.957031
2 -8444.666016  538.456787 -8842.752197  578.345947        0.0                0.0  398.086182      338.456787
3 -8444.666016  398.042969 -8719.623047  578.345947        0.0                0.0  274.957031      238.456787
4 -8320.580078  399.042969 -8583.122803  578.345947        0.0                0.0  262.542725      262.542725
5 -8183.079834  400.042969 -8583.122803  578.345947        0.0                0.0  400.042969      300.042969
6 -8183.079834  259.629395 -8458.080078  578.345947        0.0                0.0  275.000244      200.042969
7 -8183.079834  261.542969 -8283.122803  578.345947        0.0                0.0  100.042969      100.042969
8 -8020.579834  262.542969 -8283.122803  578.345947        0.0                0.0  262.542969      162.542969
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:52:56]  --------------------------------------------------------------------------------
[07/18 17:52:56]  Iteration: 98 (0 solution, 97 counterexamples)
[07/18 17:53:01]  Generator returned sat in 4.102200 secs.
[07/18 17:53:01]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:53:01]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:53:01]  Verifer returned sat in 0.278533 secs.
[07/18 17:53:01]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9073.187500    0.089600 -9073.187500  568.410645        0.0                0.0    0.000000     -100.000000
1 -8973.187500  100.000000 -8973.187500  568.410645        0.0                0.0    0.000000     -100.000000
2 -8441.644531  531.542969 -8873.187500  568.410645        0.0                0.0  431.542969      331.542969
3 -8441.644531  431.521484 -8716.623047  568.410645        0.0                0.0  274.978516      231.542969
4 -8320.580078  396.042969 -8573.187500  568.410645        0.0                0.0  252.607422      252.607422
5 -8173.166016  400.021484 -8573.187500  568.410645        0.0                0.0  400.021484      300.021484
6 -8173.166016  150.000000 -8405.666016  568.410645        0.0                0.0  232.500000      200.021484
7 -8173.166016  232.478516 -8273.187500  568.410645        0.0                0.0  100.021484      100.021484
8 -8004.948242  268.239258 -8273.187500  568.410645        0.0                0.0  268.239258      168.239258
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:53:02]  --------------------------------------------------------------------------------
[07/18 17:53:02]  Iteration: 99 (0 solution, 98 counterexamples)
[07/18 17:53:15]  Generator returned sat in 12.038604 secs.
[07/18 17:53:15]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:53:15]  Verifer returned unsat in 0.172000 secs.
[07/18 17:53:15]  Proved solution: 
[1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:53:15]  --------------------------------------------------------------------------------
[07/18 17:53:15]  Iteration: 100 (1 solution, 98 counterexamples)
[07/18 17:53:19]  Generator returned sat in 2.791638 secs.
[07/18 17:53:19]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:53:19]  Improved gap from 1/400 to 98.4375
[07/18 17:53:20]  Improved number of small numbers from 62 to 101 out of a max of 101
[07/18 17:53:20]  Verifer returned sat in 0.260928 secs.
[07/18 17:53:20]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9865.217529    0.089111 -9865.217529  568.410645        0.0                0.0    0.000000     -100.000000
1 -9266.220215  598.997314 -9665.217773  568.410645        0.0                0.0  398.997559      398.997314
2 -9266.217773  399.000000 -9665.217529  568.410645        0.0                0.0  398.999756      298.999756
3 -9266.217773  398.997314 -9465.217529  568.410645        0.0                0.0  198.999756      198.999756
4 -9065.220215  399.997314 -9365.217529  568.410645        0.0                0.0  299.997314      299.997314
5 -9065.220215    0.010000 -9265.220215  568.410645        0.0                0.0  200.000000      199.997314
6 -9065.220215    0.010000 -9265.217529  568.410645        0.0                0.0  199.997314       99.997314
7 -9065.220215    1.010000 -9163.657959  568.413330        0.0                0.0   98.437744        0.000000
8 -9065.220215    2.010000 -9065.220215  568.413330        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:53:20]  --------------------------------------------------------------------------------
[07/18 17:53:20]  Iteration: 101 (1 solution, 99 counterexamples)
[07/18 17:53:23]  Generator returned sat in 1.879412 secs.
[07/18 17:53:23]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:53:23]  Improved number of small numbers from 64 to 100 out of a max of 100
[07/18 17:53:23]  Verifer returned sat in 0.276824 secs.
[07/18 17:53:23]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t  wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -10189.888916    0.089111 -10189.888916  568.4104        0.0                0.0    0.000000     -100.000000
1  -9589.017334  600.871582  -9989.888916  568.4104        0.0                0.0  400.871582      400.871582
2  -9589.017334  400.871338  -9987.103271  568.4104        0.0                0.0  398.085938      300.871582
3  -9589.017334  398.042969  -9838.974854  568.4104        0.0                0.0  249.957520      200.871582
4  -9439.931885  399.042969  -9689.889160  568.4104        0.0                0.0  249.957275      249.957031
5  -9289.846191  400.042969  -9689.888916  568.4104        0.0                0.0  400.042725      300.042725
6  -9289.846191  297.214355  -9564.431885  568.4104        0.0                0.0  274.585693      200.042725
7  -9289.846191  274.542969  -9389.888916  568.4104        0.0                0.0  100.042725      100.042725
8  -9114.345947  275.542969  -9389.888916  568.4104        0.0                0.0  275.542969      175.542969
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:53:24]  --------------------------------------------------------------------------------
[07/18 17:53:24]  Iteration: 102 (1 solution, 100 counterexamples)
[07/18 17:53:30]  Generator returned sat in 4.903764 secs.
[07/18 17:53:30]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:53:30]  Verifer returned unsat in 0.160224 secs.
[07/18 17:53:30]  Proved solution: 
[1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:53:30]  --------------------------------------------------------------------------------
[07/18 17:53:30]  Iteration: 103 (2 solution, 100 counterexamples)
[07/18 17:53:35]  Generator returned sat in 3.643160 secs.
[07/18 17:53:35]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:53:39]  Improved gap from 351/8192 to 25.0
[07/18 17:53:40]  Improved number of small numbers from 55 to 61 out of a max of 101
[07/18 17:53:40]  Verifer returned sat in 4.929731 secs.
[07/18 17:53:40]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -11275.681641    0.089111 -11275.681801  624.545016        0.0                0.0    0.000160      -99.999840
1 -10976.143339  299.538462 -11075.681801  624.545016        0.0                0.0   99.538462       99.538462
2 -10976.143339   99.538330 -10976.181801  624.545016        0.0                0.0    0.038462       -0.461538
3 -10913.451031   62.730769 -10938.451031  662.314247        0.0                0.0   25.000000        0.000000
4 -10737.470262  200.980769 -10818.547185  662.314247        0.0                0.0   81.076923       75.980769
5 -10588.489493  230.057692 -10813.451031  662.314247        0.0                0.0  224.961538      124.961538
6 -10588.489493  162.730769 -10713.451031  662.314247        0.0                0.0  124.961538       24.961538
7 -10518.585647  194.865385 -10613.451031  667.448730        0.0                0.0   94.865385       -0.000131
8 -10412.470262  200.980769 -10518.585449  667.448730        0.0                0.0  106.115187        6.115253
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:53:40]  --------------------------------------------------------------------------------
[07/18 17:53:40]  Iteration: 104 (2 solution, 101 counterexamples)
[07/18 17:53:58]  Generator returned sat in 16.097521 secs.
[07/18 17:53:58]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:53:58]  Improved gap from 7/2 to 98.4375
[07/18 17:53:58]  Improved number of small numbers from 75 to 101 out of a max of 101
[07/18 17:53:58]  Verifer returned sat in 0.383886 secs.
[07/18 17:53:58]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -10909.310303    0.088867 -11334.267578  629.459473        0.0                0.0  424.957275      424.957275
1 -10909.310303    0.042725 -11234.267578  629.459473        0.0                0.0  324.957275      324.957275
2 -10909.310303    0.042725 -11134.267578  629.459473        0.0                0.0  224.957275      224.957275
3 -10909.310303  193.937500 -11034.267578  629.459473        0.0                0.0  124.957275      124.957275
4 -10838.830078  195.437500 -10935.787109  629.459473        0.0                0.0   96.957031       95.437500
5 -10738.849609  196.937500 -10834.267578  629.459473        0.0                0.0   95.417969       95.417969
6 -10635.830078  198.437500 -10765.517578  629.459473        0.0                0.0  129.687500       98.437500
7 -10635.830078    0.500000 -10734.267578  631.021973        0.0                0.0   98.437500        0.000000
8 -10635.830078    2.000000 -10635.830078  631.021973        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:53:58]  --------------------------------------------------------------------------------
[07/18 17:53:58]  Iteration: 105 (2 solution, 102 counterexamples)
[07/18 17:54:02]  Generator returned sat in 2.030366 secs.
[07/18 17:54:02]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:54:02]  Improved gap from 1559/16 to 98.4375
[07/18 17:54:02]  Improved number of small numbers from 56 to 101 out of a max of 101
[07/18 17:54:02]  Verifer returned sat in 0.374453 secs.
[07/18 17:54:02]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -11011.428711    0.088623 -11436.385986  731.577637        0.0                0.0  424.957275      424.957275
1 -11011.428711    0.042480 -11336.385986  731.577637        0.0                0.0  324.957275      324.957275
2 -11011.428711    0.042725 -11336.385986  731.577637        0.0                0.0  324.957275      224.957275
3 -11011.428711  195.437500 -11136.385986  731.577637        0.0                0.0  124.957275      124.957275
4 -10939.948486  196.437500 -11037.905518  731.577637        0.0                0.0   97.957031       96.437500
5 -10840.468018  197.437500 -10936.385986  731.577637        0.0                0.0   95.917969       95.917969
6 -10737.948486  198.437500 -10873.885986  731.577637        0.0                0.0  135.937500       98.437500
7 -10737.948486    0.500000 -10836.385986  733.140137        0.0                0.0   98.437500        0.000000
8 -10737.948486    1.500000 -10737.948486  733.140137        0.0                0.0    0.000000     -100.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:54:03]  --------------------------------------------------------------------------------
[07/18 17:54:03]  Iteration: 106 (2 solution, 103 counterexamples)
[07/18 17:54:14]  Generator returned sat in 10.212435 secs.
[07/18 17:54:14]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:54:14]  Improved gap from 0 to 0
[07/18 17:54:14]  Improved number of small numbers from 101 to 101 out of a max of 101
[07/18 17:54:14]  Verifer returned sat in 0.227190 secs.
[07/18 17:54:14]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t     wasted_t  losts_0,t  loss_detected_0,t    queue_t  bottle_queue_t
0 -11135.907227    0.088623 -11436.385986   731.577637        0.0                0.0  300.47876       300.47876
1 -11135.907227    0.042480 -11336.385986   731.577637        0.0                0.0  200.47876       200.47876
2 -11135.907227    0.021240 -11336.385986   731.577637        0.0                0.0  200.47876       100.47876
3 -11135.907227  195.437500 -11136.407227   731.577637        0.0                0.0    0.50000         0.47876
4 -11135.907227    0.500000 -11136.385986   831.098877        0.0                0.0    0.47876         0.00000
5 -11135.885986    0.500000 -11135.907227   931.077637        0.0                0.0    0.02124         0.00000
6 -11135.407227    0.500000 -11135.428467  1030.598877        0.0                0.0    0.02124         0.00000
7 -11134.928467    0.500000 -11134.949707  1130.120117        0.0                0.0    0.02124         0.00000
8 -11134.449707    0.500000 -11134.928467  1130.120117        0.0                0.0    0.47876       -99.52124
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:54:15]  --------------------------------------------------------------------------------
[07/18 17:54:15]  Iteration: 107 (2 solution, 104 counterexamples)
[07/18 17:54:19]  Generator returned sat in 2.596292 secs.
[07/18 17:54:19]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:54:19]  Improved gap from 87/8192 to 48.4375
[07/18 17:54:19]  Improved number of small numbers from 70 to 101 out of a max of 101
[07/18 17:54:19]  Verifer returned sat in 0.586817 secs.
[07/18 17:54:19]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -11433.488525    0.088623 -11533.488770  828.679688        0.0                0.0  100.000244       100.00000
1 -11433.488525    0.042480 -11434.258301  828.679688        0.0                0.0    0.769775         0.00000
2 -11385.051025   49.207275 -11433.488525  880.242188        0.0                0.0   48.437500         0.00000
3 -11185.051025  248.437500 -11382.781250  880.242188        0.0                0.0  197.730225       100.00000
4 -11185.051025  150.707520 -11285.051025  880.242188        0.0                0.0  100.000000         0.00000
5 -11135.843750  149.207275 -11185.051025  930.492432        0.0                0.0   49.207275        -0.54248
6 -11035.343750  149.707275 -11135.301025  930.534912        0.0                0.0   99.957275         0.00000
7 -10985.093750  150.207275 -11035.343506  980.284912        0.0                0.0   50.249756         0.00000
8 -10884.636230  150.707275 -10985.093750  980.284912        0.0                0.0  100.457520         0.45752
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:54:20]  --------------------------------------------------------------------------------
[07/18 17:54:20]  Iteration: 108 (2 solution, 105 counterexamples)
[07/18 17:54:25]  Generator returned sat in 3.660917 secs.
[07/18 17:54:25]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:54:28]  Improved gap from 0 to 23.4375
[07/18 17:54:28]  Improved number of small numbers from 100 to 101 out of a max of 101
[07/18 17:54:28]  Verifer returned sat in 3.267715 secs.
[07/18 17:54:28]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -11361.809082    0.088623 -11538.434082  655.205322        0.0                0.0  176.625000      100.015625
1 -11361.809082    0.015381 -11361.824707  655.205322        0.0                0.0    0.015625        0.015625
2 -11361.809082    0.015381 -11361.824707  731.767822        0.0                0.0    0.015625      -23.421875
3 -11263.387207   98.437500 -11338.387207  756.767822        0.0                0.0   75.000000        0.000000
4 -11138.340332  200.046875 -11164.934082  756.767822        0.0                0.0   26.593750       25.046875
5 -10964.965332  199.968750 -11163.387207  756.767822        0.0                0.0  198.421875       98.421875
6 -10964.949707  198.437500 -10988.387207  758.330078        0.0                0.0   23.437500       -0.000244
7 -10712.668457  275.718750 -10964.887207  758.330078        0.0                0.0  252.218750      152.281006
8 -10712.668457  200.046875 -10864.949463  758.330078        0.0                0.0  152.281006       52.281006
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:54:28]  --------------------------------------------------------------------------------
[07/18 17:54:28]  Iteration: 109 (2 solution, 106 counterexamples)
[07/18 17:54:31]  Generator returned sat in 1.591847 secs.
[07/18 17:54:31]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 3/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:54:38]  Improved gap from 91455/4096 to 21.875
[07/18 17:54:39]  Improved number of small numbers from 48 to 101 out of a max of 101
[07/18 17:54:39]  Verifer returned sat in 7.277194 secs.
[07/18 17:54:39]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -11482.081299    0.088379 -11659.084961  628.635254        0.0                0.0  177.003662      100.000000
1 -11482.081299    0.015137 -11482.081299  628.635254        0.0                0.0    0.000000        0.000000
2 -11482.073486    0.007812 -11482.081055  706.760010        0.0                0.0    0.007568      -21.867432
3 -11385.206055   96.875000 -11460.206055  731.760010        0.0                0.0   75.000000        0.000000
4 -11261.327148  198.878906 -11287.202393  731.760010        0.0                0.0   25.875244       23.878906
5 -11088.323486  198.878906 -11285.206055  731.760010        0.0                0.0  196.882568       96.882568
6 -11088.323486  196.875000 -11163.323486  734.877441        0.0                0.0   75.000000        0.000000
7 -10866.440918  296.882568 -11088.323486  734.877441        0.0                0.0  221.882568      121.882568
8 -10866.440918  198.878906 -10987.209717  734.877441        0.0                0.0  120.768799       21.882568
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:54:39]  --------------------------------------------------------------------------------
[07/18 17:54:39]  Iteration: 110 (2 solution, 107 counterexamples)
[07/18 17:54:59]  Generator returned sat in 18.110107 secs.
[07/18 17:54:59]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:55:03]  Improved gap from 173/4096 to 1.5625
[07/18 17:55:03]  Improved number of small numbers from 50 to 101 out of a max of 101
[07/18 17:55:03]  Verifer returned sat in 4.456932 secs.
[07/18 17:55:03]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -11511.816650    0.088379 -11711.816650  658.370605        0.0                0.0  200.000000      100.000000
1 -11511.816650    0.042236 -11511.816650  658.370605        0.0                0.0    0.000000        0.000000
2 -11465.917969   45.898682 -11465.960205  710.951660        0.0                0.0    0.042236       -1.520264
3 -11410.951660   55.008545 -11412.514160  757.505615        0.0                0.0    1.562500        0.000000
4 -11233.858643  178.655518 -11333.858887  757.505615        0.0                0.0  100.000244       77.093018
5 -11155.901123  177.957764 -11310.951660  757.505615        0.0                0.0  155.050537       55.050537
6 -11155.901123  155.008545 -11175.441650  802.455078        0.0                0.0   19.540527        0.000000
7 -10977.901123  197.540527 -11155.901123  802.455078        0.0                0.0  178.000000       78.000000
8 -10977.901123  177.957764 -11033.900879  802.455078        0.0                0.0   55.999756      -22.000000
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:55:03]  --------------------------------------------------------------------------------
[07/18 17:55:03]  Iteration: 111 (2 solution, 108 counterexamples)
[07/18 17:55:07]  Generator returned sat in 1.700099 secs.
[07/18 17:55:07]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:55:07]  Improved gap from 173/8192 to 46.875
[07/18 17:55:07]  Improved number of small numbers from 69 to 101 out of a max of 101
[07/18 17:55:07]  Verifer returned sat in 0.489284 secs.
[07/18 17:55:07]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t     wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -12253.645996    0.088379 -12253.666992   944.313721        0.0                0.0    0.020996       -4.478760
1 -12149.125000  104.541992 -12149.167236   944.313721        0.0                0.0    0.042236        0.042236
2 -12149.125000    0.021240 -12149.167236   997.438721        0.0                0.0    0.042236      -46.832764
3 -11855.395996  293.771240 -12102.291992   997.438721        0.0                0.0  246.895996      146.896240
4 -11855.395996  151.375000 -12002.292236   997.438721        0.0                0.0  146.896240       46.896240
5 -11855.395996  146.875000 -11902.292236  1049.042725        0.0                0.0   46.896240       -1.499756
6 -11753.917236  148.375000 -11853.896240  1049.042725        0.0                0.0   99.979004       -0.020996
7 -11704.021240  149.875000 -11753.896240  1099.167480        0.0                0.0   49.875000       -0.000244
8 -11602.521240  151.375000 -11704.020996  1099.167480        0.0                0.0  101.499756        1.499756
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/18 17:55:07]  --------------------------------------------------------------------------------
[07/18 17:55:07]  Iteration: 112 (2 solution, 109 counterexamples)
[07/18 17:55:12]  Generator returned sat in 3.554195 secs.
[07/18 17:55:13]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:55:19]  Improved gap from 345/8192 to 23.4375
[07/18 17:55:19]  Improved number of small numbers from 55 to 101 out of a max of 101
[07/18 17:55:19]  Verifer returned sat in 6.300928 secs.
[07/18 17:55:19]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -11720.041504    0.088379 -12080.473145  910.217285        0.0                0.0  360.431641      260.431641
1 -11720.041260  360.431885 -11880.473389  910.217285        0.0                0.0  160.432129      160.431885
2 -11720.018066  160.455322 -11781.379639  910.217285        0.0                0.0   61.361572       60.455078
3 -11720.018066   61.338379 -11743.455566  949.762207        0.0                0.0   23.437500        0.000000
4 -11542.777588  200.677979 -11623.664062  949.762207        0.0                0.0   80.886475       77.240479
5 -11393.420410  230.243652 -11620.018066  949.762207        0.0                0.0  226.597656      126.597656
6 -11393.420410  161.361572 -11518.397217  949.762207        0.0                0.0  124.976807       26.597656
7 -11323.687256  194.709961 -11420.018066  953.431152        0.0                0.0   96.330811       -0.000244
8 -11219.340088  200.677979 -11323.687012  953.431152        0.0                0.0  104.346924        4.346924
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:55:19]  --------------------------------------------------------------------------------
[07/18 17:55:19]  Iteration: 113 (2 solution, 110 counterexamples)
[07/18 17:55:33]  Generator returned sat in 12.780188 secs.
[07/18 17:55:33]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 11/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:55:34]  Improved number of small numbers from 100 to 100 out of a max of 100
[07/18 17:55:34]  Verifer returned sat in 0.245723 secs.
[07/18 17:55:34]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -12019.976074    0.088379 -12020.018066  949.762207        0.0                0.0    0.041992        0.041992
1 -12019.976074    0.041992 -12020.018066  949.762207        0.0                0.0    0.041992      -99.958008
2 -11521.934082  498.083984 -11920.018066  949.762207        0.0                0.0  398.083984      298.083984
3 -11521.934082  398.041992 -11796.892090  949.762207        0.0                0.0  274.958008      198.083984
4 -11398.350098  398.541992 -11673.308105  949.762207        0.0                0.0  274.958008      221.667969
5 -11274.266113  399.041992 -11549.224121  949.762207        0.0                0.0  274.958008      245.751953
6 -11149.682129  399.541992 -11420.018066  949.762207        0.0                0.0  270.335938      270.335938
7 -11019.976074  400.041992 -11420.018066  949.762207        0.0                0.0  400.041992      300.041992
8 -11019.976074  253.290039 -11320.018066  949.762207        0.0                0.0  300.041992      200.041992
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:55:34]  --------------------------------------------------------------------------------
[07/18 17:55:34]  Iteration: 114 (2 solution, 111 counterexamples)
[07/18 17:55:38]  Generator returned sat in 2.373127 secs.
[07/18 17:55:38]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:55:38]  Verifer returned unsat in 0.137896 secs.
[07/18 17:55:38]  Proved solution: 
[1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:55:38]  --------------------------------------------------------------------------------
[07/18 17:55:38]  Iteration: 115 (3 solution, 111 counterexamples)
[07/18 17:55:41]  Generator returned sat in 1.761835 secs.
[07/18 17:55:41]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:55:41]  Improved gap from 343/8192 to 100
[07/18 17:55:42]  Improved number of small numbers from 40 to 101 out of a max of 101
[07/18 17:55:42]  Verifer returned sat in 0.286283 secs.
[07/18 17:55:42]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -12463.902832    0.088135 -12663.902588  749.730225        0.0                0.0  199.999756      100.000000
1 -12463.902832    0.041748 -12563.902832  749.730225        0.0                0.0  100.000000        0.000000
2 -12063.528320  500.374512 -12462.612061  749.730225        0.0                0.0  399.083740      300.374512
3 -12063.528320  399.041992 -12313.486572  749.730225        0.0                0.0  249.958252      200.374512
4 -11913.944580  399.541992 -12163.902832  749.730225        0.0                0.0  249.958252      249.958252
5 -11763.860840  400.041992 -12163.902832  749.730225        0.0                0.0  400.041992      300.041992
6 -11763.860840  298.709229 -12013.860840  749.730225        0.0                0.0  250.000000      200.041992
7 -11714.235107  299.625732 -11914.070068  749.730225        0.0                0.0  199.834961      149.667725
8 -11613.944336  300.125732 -11863.902588  749.730225        0.0                0.0  249.958252      149.958496
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/18 17:55:42]  --------------------------------------------------------------------------------
[07/18 17:55:42]  Iteration: 116 (3 solution, 112 counterexamples)
[07/18 17:55:47]  Generator returned sat in 3.225212 secs.
[07/18 17:55:47]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:55:49]  Improved gap from 171/8192 to 4.6875
[07/18 17:55:49]  Improved number of small numbers from 42 to 101 out of a max of 101
[07/18 17:55:49]  Verifer returned sat in 2.162023 secs.
[07/18 17:55:49]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -12373.115967    0.088135 -12571.291748  657.118896        0.0                0.0  198.175781       98.175781
1 -12373.115967    0.041748 -12373.136963  657.118896        0.0                0.0    0.020996       -1.824219
2 -12223.756104  149.380859 -12271.291748  657.118896        0.0                0.0   47.535645       47.535645
3 -12223.756104   47.535645 -12228.443604  709.583252        0.0                0.0    4.687500        0.000000
4 -12032.751709  195.691895 -12132.730713  709.583252        0.0                0.0   99.979004       91.004395
5 -11914.181641  218.549072 -12123.756104  709.583252        0.0                0.0  209.574463      109.574463
6 -11914.181641  147.535645 -12014.160889  709.583252        0.0                0.0   99.979248        9.574463
7 -11832.751709  181.409180 -11923.756104  718.578857        0.0                0.0   91.004395        0.000000
8 -11728.064209  195.691895 -11832.751709  718.578857        0.0                0.0  104.687500        4.687500
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:55:49]  --------------------------------------------------------------------------------
[07/18 17:55:49]  Iteration: 117 (3 solution, 113 counterexamples)
[07/18 17:55:57]  Generator returned sat in 6.059546 secs.
[07/18 17:55:57]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/4 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:56:04]  Improved gap from 75/16 to 29.6875
[07/18 17:56:05]  Improved number of small numbers from 45 to 57 out of a max of 101
[07/18 17:56:05]  Verifer returned sat in 7.912485 secs.
[07/18 17:56:05]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -11579.111816    0.087891 -11945.382355  789.423105        0.0                0.0  366.270538      266.270538
1 -11579.111816    0.041748 -11845.382355  789.423105        0.0                0.0  266.270538      166.270538
2 -11579.111816  266.270508 -11645.382355  789.423105        0.0                0.0   66.270538       66.270538
3 -11579.111816   66.249878 -11608.799103  823.152354        0.0                0.0   29.687286       -0.000214
4 -11405.382538  203.416565 -11479.111603  823.152354        0.0                0.0   73.729065       73.729065
5 -11192.267944  286.843658 -11479.111603  823.152354        0.0                0.0  286.843658      186.843658
6 -11192.267944  166.270752 -11379.111603  823.152354        0.0                0.0  186.843658       86.843658
7 -11179.132477  199.979126 -11279.111603  823.173096        0.0                0.0   99.979126       -0.000132
8 -11077.122040  201.989563 -11179.132324  823.173096        0.0                0.0  102.010284        2.010305
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:56:05]  --------------------------------------------------------------------------------
[07/18 17:56:05]  Iteration: 118 (3 solution, 114 counterexamples)
[07/18 17:56:19]  Generator returned sat in 12.755919 secs.
[07/18 17:56:19]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:56:19]  Verifer returned unsat in 0.172765 secs.
[07/18 17:56:19]  Proved solution: 
[1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:56:19]  --------------------------------------------------------------------------------
[07/18 17:56:19]  Iteration: 119 (4 solution, 114 counterexamples)
[07/18 17:56:26]  Generator returned sat in 5.135622 secs.
[07/18 17:56:26]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:56:26]  Verifer returned unsat in 0.128523 secs.
[07/18 17:56:26]  Proved solution: 
[1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:56:26]  --------------------------------------------------------------------------------
[07/18 17:56:26]  Iteration: 120 (5 solution, 114 counterexamples)
[07/18 17:56:30]  Generator returned sat in 1.806135 secs.
[07/18 17:56:30]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:56:30]  Verifer returned unsat in 0.137479 secs.
[07/18 17:56:30]  Proved solution: 
[1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:56:30]  --------------------------------------------------------------------------------
[07/18 17:56:30]  Iteration: 121 (6 solution, 114 counterexamples)
[07/18 17:56:33]  Generator returned sat in 1.889198 secs.
[07/18 17:56:33]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:56:33]  Verifer returned unsat in 0.148713 secs.
[07/18 17:56:33]  Proved solution: 
[1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:56:33]  --------------------------------------------------------------------------------
[07/18 17:56:33]  Iteration: 122 (7 solution, 114 counterexamples)
[07/18 17:56:37]  Generator returned sat in 2.415880 secs.
[07/18 17:56:37]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:56:42]  Improved gap from 0 to 3.125
[07/18 17:56:42]  Improved number of small numbers from 64 to 101 out of a max of 101
[07/18 17:56:42]  Verifer returned sat in 5.024779 secs.
[07/18 17:56:42]  Counter example: 
[93m   arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -9921.216064    0.087646 -10261.630371  763.566895        0.0                0.0  340.414307      240.414307
1 -9921.216064    0.041504 -10061.630371  763.566895        0.0                0.0  140.414307      140.414307
2 -9921.216064    0.041504  -9974.635254  763.566895        0.0                0.0   53.419189       40.414307
3 -9921.216064   53.377930  -9924.340820  823.152344        0.0                0.0    3.124756       -0.000244
4 -9728.007080  196.333740  -9827.965576  823.152344        0.0                0.0   99.958496       93.208740
5 -9611.966309  215.999268  -9821.215820  823.152344        0.0                0.0  209.249512      109.249512
6 -9611.966309  153.419434  -9711.924805  823.152344        0.0                0.0   99.958496        9.249512
7 -9528.007080  183.917725  -9621.215820  829.943604        0.0                0.0   93.208740        0.000000
8 -9424.882080  196.333740  -9528.007080  829.943604        0.0                0.0  103.125000        3.125000
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:56:43]  --------------------------------------------------------------------------------
[07/18 17:56:43]  Iteration: 123 (7 solution, 115 counterexamples)
[07/18 17:56:56]  Generator returned sat in 11.788651 secs.
[07/18 17:56:56]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1/2 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:56:56]  Improved gap from 85/8192 to 46.875
[07/18 17:56:57]  Improved number of small numbers from 86 to 101 out of a max of 101
[07/18 17:56:57]  Verifer returned sat in 0.503723 secs.
[07/18 17:56:57]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -10634.924316    0.087402 -10734.945312  676.808350        0.0                0.0  100.020996      100.020752
1 -10634.924316    0.041504 -10634.945068  676.808350        0.0                0.0    0.020752        0.020752
2 -10634.924316    0.010498 -10634.945068  729.933350        0.0                0.0    0.020752      -46.854248
3 -10388.070068  246.875000 -10582.070312  729.933350        0.0                0.0  194.000244      100.000000
4 -10388.070068  152.875000 -10488.070068  729.933350        0.0                0.0  100.000000        0.000000
5 -10341.195068  146.875000 -10388.070068  781.047852        0.0                0.0   46.875000       -2.010498
6 -10239.195068  148.875000 -10339.184570  781.058350        0.0                0.0   99.989502        0.000000
7 -10188.309570  150.875000 -10239.195068  829.943604        0.0                0.0   50.885498       -0.229248
8 -10086.320068  152.875000 -10188.080322  829.943604        0.0                0.0  101.760254        1.760254
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:56:57]  --------------------------------------------------------------------------------
[07/18 17:56:57]  Iteration: 124 (7 solution, 116 counterexamples)
[07/18 17:57:01]  Generator returned sat in 2.138832 secs.
[07/18 17:57:01]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:57:01]  Verifer returned unsat in 0.152202 secs.
[07/18 17:57:01]  Proved solution: 
[1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:57:01]  --------------------------------------------------------------------------------
[07/18 17:57:01]  Iteration: 125 (8 solution, 116 counterexamples)
[07/18 17:57:05]  Generator returned sat in 3.236512 secs.
[07/18 17:57:06]  Candidate solution: 
[1m[94mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 5/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:57:08]  Improved gap from 85/8192 to 21.875
[07/18 17:57:08]  Improved number of small numbers from 66 to 101 out of a max of 101
[07/18 17:57:08]  Verifer returned sat in 2.609351 secs.
[07/18 17:57:08]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t    wasted_t  losts_0,t  loss_detected_0,t     queue_t  bottle_queue_t
0 -10092.038574    0.087402 -10447.454346  736.494873        0.0                0.0  355.415771      255.415771
1 -10092.038574    0.041260 -10247.454346  736.494873        0.0                0.0  155.415771      155.415771
2 -10092.017822  155.436523 -10158.455811  736.494873        0.0                0.0   66.437988       55.436523
3 -10092.017822   66.417480 -10113.892822  781.058350        0.0                0.0   21.875000        0.000000
4  -9911.903320  201.989502  -9995.840332  781.058350        0.0                0.0   83.937012       80.114502
5  -9767.038574  228.801758  -9992.017822  781.058350        0.0                0.0  224.979248      124.979248
6  -9767.038574  166.437988  -9892.017822  781.058350        0.0                0.0  124.979248       24.979248
7  -9695.861328  196.156494  -9792.017822  784.901611        0.0                0.0   96.156494       -0.000244
8  -9590.028320  201.989502  -9695.861084  784.901611        0.0                0.0  105.832764        5.832764
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/18 17:57:09]  --------------------------------------------------------------------------------
[07/18 17:57:09]  Iteration: 126 (8 solution, 117 counterexamples)
[07/18 17:57:12]  Generator returned unsat in 1.568547 secs.
[07/18 17:57:12]  [96mNo more solutions found[0m
[07/18 17:57:12]  Final solutions:
[07/18 17:57:12]  0: [1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:57:12]  1: [1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:57:12]  2: [1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:57:12]  3: [1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[07/18 17:57:12]  4: [1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[07/18 17:57:12]  5: [1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 1 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:57:12]  6: [1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[07/18 17:57:12]  7: [1m[92mif(A_f[0][t-1] - Ld_f[0][t] - S_f[0][t-1] >= 9/8 * C * (R + D)):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[07/18 17:57:12]  Took 600.589499 secs.
