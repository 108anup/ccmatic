[07/12 13:24:39]  Iteration: 1
[07/12 13:24:39]  Generator returned sat in 0.004334 secs.
[07/12 13:24:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + 2S_f[0][t-2] + 2S_f[0][t-3] + 2S_f[0][t-4] + 2)[0m
[07/12 13:24:39]  Improved gap from 1/400 to 100
[07/12 13:24:40]  Improved number of small numbers from 79 to 79 out of a max of 79
[07/12 13:24:40]  Verifer returned sat in 0.175913 secs.
[07/12 13:24:40]  Counter example: 
[93m   arrival_0,t  cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   184.260312    0.0025  -215.749687  215.749687         0.0
1   184.260312    0.0025  -115.749687  215.749687         0.0
2   184.260312    0.0025  -115.749687  215.749687         0.0
3   184.260312    0.0025    -3.749687  215.749687         0.0
4   184.260312    0.0100   184.250313  215.749687         0.0
5   184.260312    0.0100   184.250313  215.749687         0.0
6   684.252813  500.0025   284.250313  215.749687         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:24:40]  Iteration: 2
[07/12 13:24:40]  Generator returned sat in 0.016274 secs.
[07/12 13:24:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/12 13:24:40]  Improved gap from 0 to 48.4375
[07/12 13:24:40]  Improved number of small numbers from 59 to 78 out of a max of 78
[07/12 13:24:40]  Verifer returned sat in 0.439181 secs.
[07/12 13:24:40]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   -79.374023    0.002441  -279.374756  215.749512         0.0
1   -79.374023    0.000488  -179.374756  215.749512         0.0
2   -79.374023    0.000488   -79.375244  215.749512         0.0
3   -79.374023    0.000732   -79.374512  267.311768         0.0
4   119.062256  198.436768    69.062744  267.311768         0.0
5   119.062256    0.010000    70.624512  317.312744         0.0
6   119.062256    0.010000   119.062256  317.312744         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:24:41]  Iteration: 3
[07/12 13:24:41]  Generator returned sat in 0.007630 secs.
[07/12 13:24:41]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 1)[0m
[07/12 13:24:41]  Improved gap from 198401/4096 to 48.4375
[07/12 13:24:41]  Improved number of small numbers from 39 to 78 out of a max of 78
[07/12 13:24:41]  Verifer returned sat in 0.521707 secs.
[07/12 13:24:41]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t    wasted_t  tot_lost_t
0   -95.828613    0.002197  -295.828613  132.203369         0.0
1   -95.828613  200.000000  -144.266113  132.203369         0.0
2   254.170166  398.436279   -95.828369  132.203369         0.0
3   254.170166    0.000977    30.171387  132.203369         0.0
4   254.170166    0.010000   204.171387  132.203369         0.0
5   254.170166    0.010000   204.171631  182.204590         0.0
6   254.170166    0.010000   254.170166  182.204834         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:24:41]  Iteration: 4
[07/12 13:24:41]  Generator returned sat in 0.041066 secs.
[07/12 13:24:41]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-4] + 1)[0m
[07/12 13:24:41]  Improved gap from 1/2048 to 100
[07/12 13:24:42]  Improved number of small numbers from 78 to 78 out of a max of 78
[07/12 13:24:42]  Verifer returned sat in 0.142662 secs.
[07/12 13:24:42]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t   wasted_t  tot_lost_t
0   -57.999756    0.002197  -257.999756  94.374512         0.0
1   -57.999756  200.000000  -157.999756  94.374512         0.0
2   342.000732  500.000488   -27.999756  94.374512         0.0
3   342.000732    0.000977    42.000244  94.374512         0.0
4   342.000732    0.010000   142.000244  94.374512         0.0
5   342.000732   85.000488   342.000244  94.374512         0.0
6   742.000732  400.000488   342.000244  94.374512         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:24:42]  Iteration: 5
[07/12 13:24:42]  Generator returned sat in 0.009848 secs.
[07/12 13:24:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:24:42]  Improved gap from inf to 100
[07/12 13:24:42]  Improved number of small numbers from 78 to 78 out of a max of 78
[07/12 13:24:42]  Verifer returned sat in 0.117569 secs.
[07/12 13:24:42]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t   wasted_t  tot_lost_t
0   -57.999756    0.002197  -257.999756  94.374512         0.0
1   -57.999756  200.000000  -157.999756  94.374512         0.0
2   342.000732  500.000488   -26.999756  94.374512         0.0
3   342.000732    0.000977    42.000244  94.374512         0.0
4   342.000732    0.010000   142.000244  94.374512         0.0
5   342.000732   84.500488   342.000244  94.374512         0.0
6   742.000732  400.000488   342.000244  94.374512         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:24:42]  Iteration: 6
[07/12 13:24:42]  Generator returned sat in 0.012117 secs.
[07/12 13:24:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-4] + -1)[0m
[07/12 13:24:42]  Improved gap from inf to 100
[07/12 13:24:42]  Improved number of small numbers from 74 to 74 out of a max of 78
[07/12 13:24:42]  Verifer returned sat in 0.168585 secs.
[07/12 13:24:42]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t   wasted_t  tot_lost_t
0   -58.000000    0.001953  -257.999756  94.374512         0.0
1   -58.000000  199.999756  -157.999756  94.374512         0.0
2   342.000488  500.000244   -24.000488  94.374512         0.0
3   342.000488    0.000732    42.000244  94.374512         0.0
4   342.000488    0.010000   142.000244  94.374512         0.0
5   342.000488   83.000488   342.000244  94.374512         0.0
6   742.000366  400.000122   342.000244  94.374512         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:24:43]  Iteration: 7
[07/12 13:24:43]  Generator returned sat in 0.072666 secs.
[07/12 13:24:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-2] + 3/2S_f[0][t-3] + -1S_f[0][t-4] + -3/2)[0m
[07/12 13:24:43]  Improved gap from 7/8192 to 100
[07/12 13:24:43]  Improved number of small numbers from 33 to 78 out of a max of 78
[07/12 13:24:43]  Verifer returned sat in 0.279110 secs.
[07/12 13:24:43]  Counter example: 
[93m    arrival_0,t      cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  15553.502197      0.001465  15553.501221 -15617.126953         0.0
1  15553.502197      0.000732  15553.501221 -15617.126953         0.0
2  31505.502686  15952.001465  15753.501221 -15617.126953         0.0
3  31505.502686      0.000977  15853.500244 -15617.126953         0.0
4  31505.502686  15652.001221  15953.501221 -15617.126953         0.0
5  31955.501953  16002.000732  15953.501465 -15617.126953         0.0
6  31955.501953  16001.999756  16053.501465 -15617.126953         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:24:43]  Iteration: 8
[07/12 13:24:43]  Generator returned sat in 0.147268 secs.
[07/12 13:24:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/12 13:24:44]  Improved gap from inf to 100
[07/12 13:24:44]  Improved number of small numbers from 58 to 68 out of a max of 78
[07/12 13:24:44]  Verifer returned sat in 0.509300 secs.
[07/12 13:24:44]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0   579.885986    0.001221  -220.114397 -15617.126953         0.0
1   579.885986  800.000000  -220.114397 -15617.126953         0.0
2   579.885986  800.000244   -56.114397 -15617.126953         0.0
3   579.885986    0.000732    26.742606 -15617.126953         0.0
4   579.885986  553.142997   179.885603 -15617.126953         0.0
5   679.886091  500.000488   279.885603 -15617.126953         0.0
6   679.886091   82.857492   279.885603 -15617.126953         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:44]  Iteration: 9
[07/12 13:24:44]  Generator returned sat in 0.020355 secs.
[07/12 13:24:44]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + 2)[0m
[07/12 13:24:44]  Improved gap from 2173/204800 to 100
[07/12 13:24:45]  Improved number of small numbers from 35 to 47 out of a max of 78
[07/12 13:24:45]  Verifer returned sat in 0.751199 secs.
[07/12 13:24:45]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t     wasted_t  tot_lost_t
0    52.952393    0.001221  -147.047561 -15690.19379         0.0
1    52.952393    0.000488  -113.714634 -15690.19379         0.0
2    52.952393  166.666992   -47.047561 -15690.19379         0.0
3   552.953049  600.000610    52.952439 -15690.19379         0.0
4   552.953049  500.000000   252.952439 -15690.19379         0.0
5   652.953049  400.000610   252.952637 -15690.19379         0.0
6   652.953049    0.010000   352.952439 -15690.19379         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:45]  Iteration: 10
[07/12 13:24:45]  Generator returned sat in 0.024305 secs.
[07/12 13:24:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + 3/2)[0m
[07/12 13:24:46]  Improved gap from 0 to 100
[07/12 13:24:46]  Improved number of small numbers from 32 to 79 out of a max of 79
[07/12 13:24:46]  Verifer returned sat in 0.376345 secs.
[07/12 13:24:46]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0  -128.141846    0.000977  -253.137207 -15690.193604         0.0
1  -128.141846    0.000732  -128.142090 -15690.193604         0.0
2   -28.147949   99.994141   -28.148438 -15690.193604         0.0
3   -28.141846    0.006592   -28.142090 -15690.193604         0.0
4   571.858154  600.000244   171.857910 -15690.193604         0.0
5   671.858398  500.000488   271.857910 -15690.193604         0.0
6   671.858398    0.010010   271.858154 -15690.193604         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:46]  Iteration: 11
[07/12 13:24:46]  Generator returned sat in 0.036038 secs.
[07/12 13:24:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + -1/2)[0m
[07/12 13:24:46]  Improved gap from inf to 100
[07/12 13:24:46]  Improved number of small numbers from 68 to 68 out of a max of 78
[07/12 13:24:46]  Verifer returned sat in 0.378232 secs.
[07/12 13:24:46]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0  -128.141846    0.000977  -252.949742 -15690.193604         0.0
1  -128.141846    0.000732  -128.891969 -15690.193604         0.0
2   -28.147949  100.744020   -29.148433 -15690.193604         0.0
3   -28.141846    1.006587   -28.142090 -15690.193604         0.0
4   571.858154  600.000244   171.857910 -15690.193604         0.0
5   671.858154  500.000244   271.857910 -15690.193604         0.0
6   671.858154    0.010000   271.857910 -15690.193604         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:47]  Iteration: 12
[07/12 13:24:47]  Generator returned sat in 0.027137 secs.
[07/12 13:24:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + -1)[0m
[07/12 13:24:47]  Improved gap from 1/2048 to 100
[07/12 13:24:47]  Improved number of small numbers from 43 to 51 out of a max of 78
[07/12 13:24:47]  Verifer returned sat in 0.564244 secs.
[07/12 13:24:47]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0  -137.142334    0.000977  -137.142927 -15781.192766         0.0
1  -137.142334    0.000244  -137.142927 -15781.192766         0.0
2   425.857561  563.000488    20.857073 -15781.192766         0.0
3   425.857561  405.000000    62.857073 -15781.192766         0.0
4   425.857561  363.000244   262.857073 -15781.192766         0.0
5   662.857317  400.000244   262.857178 -15781.192766         0.0
6   662.857317    0.010000   362.857178 -15781.192766         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:48]  Iteration: 13
[07/12 13:24:48]  Generator returned sat in 0.060657 secs.
[07/12 13:24:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + -3/2)[0m
[07/12 13:24:48]  Improved gap from inf to 100
[07/12 13:24:48]  Improved number of small numbers from 49 to 49 out of a max of 78
[07/12 13:24:48]  Verifer returned sat in 0.531032 secs.
[07/12 13:24:48]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0  -137.142334    0.000977  -137.142927 -15781.192766         0.0
1  -137.142334    0.000244  -137.142927 -15781.192766         0.0
2   427.357457  564.500384    19.857073 -15781.192766         0.0
3   427.357457  405.000000    62.857073 -15781.192766         0.0
4   427.357457  364.500244   262.857073 -15781.192766         0.0
5   662.857317  400.000244   262.857178 -15781.192766         0.0
6   662.857317    0.010000   362.857178 -15781.192766         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:49]  Iteration: 14
[07/12 13:24:49]  Generator returned sat in 0.029069 secs.
[07/12 13:24:49]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + -2)[0m
[07/12 13:24:49]  Improved gap from 1/2048 to 100
[07/12 13:24:49]  Improved number of small numbers from 42 to 78 out of a max of 78
[07/12 13:24:49]  Verifer returned sat in 0.324300 secs.
[07/12 13:24:49]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0    -5.143066    0.000977  -205.142822 -15881.182861         0.0
1    -5.142822  200.000000  -147.143066 -15881.182861         0.0
2    -5.142822    0.000488    -5.143066 -15881.182861         0.0
3   594.857422  600.000488    -5.142822 -15881.182861         0.0
4   594.857422  487.000488   194.857178 -15881.182861         0.0
5   694.857666  500.000488   194.857178 -15881.182861         0.0
6   694.857666    0.010000   294.857178 -15881.182861         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:49]  Iteration: 15
[07/12 13:24:49]  Generator returned sat in 0.141613 secs.
[07/12 13:24:49]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -3/2S_f[0][t-1] + -1/2S_f[0][t-3] + -2S_f[0][t-4] + -2)[0m
[07/12 13:24:50]  Improved gap from 1/4096 to 48.4375
[07/12 13:24:50]  Improved number of small numbers from 43 to 78 out of a max of 78
[07/12 13:24:50]  Verifer returned sat in 0.377112 secs.
[07/12 13:24:50]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0   -10.876953    0.000732  -110.877441 -15975.448486         0.0
1   -10.876953  100.000488   -10.877441 -15975.448486         0.0
2   -10.876953    0.000244   -10.877197 -15975.448486         0.0
3   337.560059  348.437256   150.122559 -15975.448486         0.0
4   337.560059    0.010000   289.122559 -15975.448486         0.0
5   337.560059    0.010000   289.122559 -15923.885986         0.0
6   337.560059    0.010000   337.560059 -15923.885742         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:24:50]  Iteration: 16
[07/12 13:24:50]  Generator returned sat in 0.317384 secs.
[07/12 13:24:50]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -3/2)[0m
[07/12 13:24:50]  Improved gap from 3/16384 to 23.4375
[07/12 13:24:51]  Improved number of small numbers from 46 to 78 out of a max of 78
[07/12 13:24:51]  Verifer returned sat in 0.239599 secs.
[07/12 13:24:51]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0   286.810059    0.000488    63.372559 -16149.698730         0.0
1   286.810059  223.437500   163.372559 -16149.698730         0.0
2   286.810059    0.000244   239.935303 -16149.698730         0.0
3   286.810059   46.874756   263.372803 -16073.136230         0.0
4   308.747803   45.375000   289.122559 -15998.885986         0.0
5   339.122070   49.999512   312.560059 -15925.448242         0.0
6   357.935059   45.375000   339.122314 -15925.448242         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:24:51]  Iteration: 17
[07/12 13:24:51]  Generator returned sat in 0.054979 secs.
[07/12 13:24:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 0)[0m
[07/12 13:24:51]  Improved gap from 377857/16384 to 23.4375
[07/12 13:24:51]  Improved number of small numbers from 62 to 68 out of a max of 79
[07/12 13:24:51]  Verifer returned sat in 0.584875 secs.
[07/12 13:24:51]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0   125.872803    0.000244    63.372314 -16046.281494         0.0
1   125.872803   62.500000   125.872803 -16032.219482         0.0
2   249.310303  123.437500   225.872803 -16032.219401         0.0
3   249.310303    0.000244   249.310303 -15957.219238         0.0
4   296.185303   46.875000   274.310181 -15880.656779         0.0
5   324.309937   49.999756   297.747681 -15807.219035         0.0
6   344.622681   46.875000   324.310059 -15807.218994         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:24:52]  Iteration: 18
[07/12 13:24:52]  Generator returned sat in 0.252566 secs.
[07/12 13:24:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-4] + -2)[0m
[07/12 13:24:52]  Improved gap from inf to 100
[07/12 13:24:53]  Improved number of small numbers from 50 to 72 out of a max of 78
[07/12 13:24:53]  Verifer returned sat in 0.521329 secs.
[07/12 13:24:53]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0     4.010000    0.000244  -113.990000 -16046.281738         0.0
1     4.010000    0.000244   -95.989990 -16046.281738         0.0
2   629.012451  725.002441   104.010000 -16046.281738         0.0
3   629.012451    0.000244   204.010000 -16046.281738         0.0
4   629.012451  141.005000   229.012439 -16046.281738         0.0
5   629.012451    0.010000   404.010000 -16046.281738         0.0
6   804.010122  400.000122   404.010010 -16046.281738         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:24:53]  Iteration: 19
[07/12 13:24:53]  Generator returned sat in 0.216070 secs.
[07/12 13:24:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-3] + -1/2S_f[0][t-4] + -2)[0m
[07/12 13:24:53]  Improved gap from 2073/204800 to 100
[07/12 13:24:53]  Improved number of small numbers from 44 to 78 out of a max of 78
[07/12 13:24:53]  Verifer returned sat in 0.217078 secs.
[07/12 13:24:53]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0  1670.666992    0.000244   670.666992 -16046.281982         0.0
1  1670.666992    0.000244   870.666992 -16046.281982         0.0
2  1670.666992  800.000000   937.333496 -16046.281982         0.0
3  1670.666992    0.000244   970.666992 -16046.281982         0.0
4  1670.666992  533.333496  1170.666992 -16046.281982         0.0
5  1670.666992  500.000000  1270.666748 -16046.281982         0.0
6  1770.666992  500.000244  1270.666992 -16046.281982         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:54]  Iteration: 20
[07/12 13:24:54]  Generator returned sat in 0.197626 secs.
[07/12 13:24:54]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-3] + -1S_f[0][t-4] + 2)[0m
[07/12 13:24:54]  Improved gap from 1/8192 to 48.4375
[07/12 13:24:54]  Improved number of small numbers from 58 to 78 out of a max of 78
[07/12 13:24:54]  Verifer returned sat in 0.223300 secs.
[07/12 13:24:54]  Counter example: 
[93m   arrival_0,t    cwnd_0,t  service_0,t      wasted_t  tot_lost_t
0  1670.666992    0.000244  1120.667236 -16496.282227         0.0
1  1670.666992    0.000244  1287.333740 -16496.282227         0.0
2  1670.666992  383.333008  1335.333496 -16496.282227         0.0
3  1670.666992    0.000244  1502.000000 -16496.282227         0.0
4  1670.666992  168.666504  1620.667236 -16496.282227         0.0
5  1670.666992   49.999756  1620.667236 -16446.281982         0.0
6  1789.333740  168.666504  1670.666992 -16446.281982         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:54]  Iteration: 21
[07/12 13:24:55]  Generator returned sat in 0.223140 secs.
[07/12 13:24:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1)[0m
[07/12 13:24:55]  Improved gap from 0 to 100
[07/12 13:24:55]  Improved number of small numbers from 60 to 74 out of a max of 78
[07/12 13:24:55]  Verifer returned sat in 0.418303 secs.
[07/12 13:24:55]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  17460.667236    0.000244  17329.333496 -16496.282227         0.0
1  17460.667236    0.000244  17360.666992 -16496.282227         0.0
2  17460.667236    0.000244  17460.666992 -16496.282227         0.0
3  17560.667236  100.000244  17560.667236 -16496.282227         0.0
4  17758.667603  198.000366  17758.667236 -16496.282227         0.0
5  18108.667480  350.000244  17860.666992 -16496.282227         0.0
6  18260.667236  400.000244  17860.666992 -16496.282227         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:24:55]  Iteration: 22
[07/12 13:24:55]  Generator returned sat in 0.122566 secs.
[07/12 13:24:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/12 13:24:56]  Improved gap from 1/16384 to 100
[07/12 13:24:56]  Improved number of small numbers from 72 to 78 out of a max of 78
[07/12 13:24:56]  Verifer returned sat in 0.217308 secs.
[07/12 13:24:56]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  64249.667236    0.000244  64249.667236 -16496.282471         0.0
1  64249.667480    0.000244  64249.667236 -16496.282471         0.0
2  65000.167236  750.500000  64449.667236 -16496.282471         0.0
3  65000.167236  550.499756  64549.667236 -16496.282471         0.0
4  65000.167236  250.500000  64649.667236 -16496.282471         0.0
5  65100.167236  450.500000  64649.667236 -16496.282471         0.0
6  65100.167236  250.500000  64749.667236 -16496.282471         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:56]  Iteration: 23
[07/12 13:24:56]  Generator returned sat in 0.274767 secs.
[07/12 13:24:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/12 13:24:56]  Improved gap from inf to 100
[07/12 13:24:56]  Improved number of small numbers from 72 to 79 out of a max of 79
[07/12 13:24:56]  Verifer returned sat in 0.171432 secs.
[07/12 13:24:56]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  64199.917236    0.000244  64199.917236 -16496.282715         0.0
1  64250.167480   50.250244  64250.167236 -16496.282715         0.0
2  65000.167236  750.000000  64450.167236 -16496.282715         0.0
3  65000.167236  549.999756  64550.167236 -16496.282715         0.0
4  65000.167236  250.500000  64650.167236 -16496.282715         0.0
5  65100.167236  450.000000  64671.167236 -16496.282715         0.0
6  65100.167236  289.500000  64750.167236 -16496.282715         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:24:57]  Iteration: 24
[07/12 13:24:57]  Generator returned sat in 0.225039 secs.
[07/12 13:24:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -3/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:24:57]  Improved gap from 800993/1638400 to 48.4375
[07/12 13:24:58]  Improved number of small numbers from 41 to 76 out of a max of 78
[07/12 13:24:58]  Verifer returned sat in 0.628340 secs.
[07/12 13:24:58]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  79573.740234    0.000244  79573.740234 -16496.282959         0.0
1  80033.881104  460.140869  79583.881348 -16496.282959         0.0
2  80033.881104  449.999756  79783.881348 -16496.282959         0.0
3  80033.881104    0.000244  79787.588379 -16496.282959         0.0
4  80033.881104    0.010010  79983.881219 -16496.282959         0.0
5  80033.881104    0.010000  79985.443604 -16446.282715         0.0
6  80033.881104    0.010000  80033.881104 -16446.282471         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:24:58]  Iteration: 25
[07/12 13:24:58]  Generator returned sat in 0.420108 secs.
[07/12 13:24:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -3/2S_f[0][t-1] + 2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2)[0m
[07/12 13:24:58]  Improved gap from 0 to 48.4375
[07/12 13:24:59]  Improved number of small numbers from 38 to 78 out of a max of 78
[07/12 13:24:59]  Verifer returned sat in 0.298363 secs.
[07/12 13:24:59]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  106955.871582    0.000244  106455.871338 -16496.292969         0.0
1  106955.871582    0.000244  106555.910400 -16496.292969         0.0
2  106955.871582  399.960938  106755.871094 -16496.292969         0.0
3  106955.871582    0.000244  106755.871338 -16496.292969         0.0
4  106955.871582  100.479980  106955.861328 -16496.292969         0.0
5  106955.871582    0.010000  106955.871338 -16446.282715         0.0
6  107056.351318  100.479980  107005.861084 -16446.282715         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:24:59]  Iteration: 26
[07/12 13:25:00]  Generator returned sat in 0.621591 secs.
[07/12 13:25:00]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1/2S_f[0][t-2] + 1)[0m
[07/12 13:25:00]  Improved gap from 8151/8192 to 48.4375
[07/12 13:25:00]  Improved number of small numbers from 37 to 48 out of a max of 78
[07/12 13:25:00]  Verifer returned sat in 0.684217 secs.
[07/12 13:25:00]  Counter example: 
[93m     arrival_0,t  cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  106679.930278  0.000244  106229.930420 -16496.293213         0.0
1  106679.930278  0.000244  106329.930176 -16496.293213         0.0
2  106679.930278  0.000244  106429.930400 -16496.293213         0.0
3  106679.930278  0.000244  106431.492778 -16496.293213         0.0
4  106679.930278  0.218811  106629.930400 -16496.293213         0.0
5  106679.930278  0.010000  106631.492778 -16446.292847         0.0
6  106679.930278  0.218811  106679.930278 -16446.292725         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:01]  Iteration: 27
[07/12 13:25:01]  Generator returned sat in 0.795895 secs.
[07/12 13:25:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -2S_f[0][t-3] + 3/2S_f[0][t-4] + -3/2)[0m
[07/12 13:25:01]  Improved gap from 775/16 to 48.4375
[07/12 13:25:02]  Improved number of small numbers from 47 to 78 out of a max of 78
[07/12 13:25:02]  Verifer returned sat in 0.205389 secs.
[07/12 13:25:02]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  26904.930664    0.000244  26746.270508  62928.706543         0.0
1  26904.930664    0.000244  26804.930664  62928.706543         0.0
2  26904.930664   99.999756  26904.930664  62949.706787         0.0
3  27232.367920  327.437256  26983.930664  62949.706787         0.0
4  27232.367920    0.010000  27183.930420  62949.706787         0.0
5  27232.367920    0.010000  27183.930420  63001.269287         0.0
6  27232.367920    0.010000  27232.367920  63001.269287         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:02]  Iteration: 28
[07/12 13:25:02]  Generator returned sat in 0.226935 secs.
[07/12 13:25:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -2S_f[0][t-3] + 3/2S_f[0][t-4] + 2)[0m
[07/12 13:25:02]  Improved gap from 0 to 48.4375
[07/12 13:25:02]  Improved number of small numbers from 60 to 78 out of a max of 78
[07/12 13:25:02]  Verifer returned sat in 0.265116 secs.
[07/12 13:25:02]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  27472.240967    0.000244  27183.493164  62949.706543         0.0
1  27472.240967    0.000244  27297.617188  62949.706543         0.0
2  27472.240967  174.623535  27472.240967  62949.706543         0.0
3  27731.930664  259.689697  27526.830322  62949.706543         0.0
4  27731.930664    0.010000  27681.930908  62949.706543         0.0
5  27731.930664    0.010000  27683.493164  63001.269043         0.0
6  27731.930664    0.010000  27731.930664  63001.269043         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:03]  Iteration: 29
[07/12 13:25:03]  Generator returned sat in 0.273044 secs.
[07/12 13:25:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + 1S_f[0][t-4] + 2)[0m
[07/12 13:25:03]  Improved gap from 0 to 100
[07/12 13:25:03]  Improved number of small numbers from 47 to 78 out of a max of 78
[07/12 13:25:03]  Verifer returned sat in 0.370119 secs.
[07/12 13:25:03]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t     wasted_t  tot_lost_t
0  46678.740967    0.000244  46678.740723  43454.45874         0.0
1  47278.740723  600.000000  46826.750488  43454.45874         0.0
2  47278.740723    0.000244  46978.740723  43454.45874         0.0
3  47278.740723    0.000244  46978.740723  43454.45874         0.0
4  47278.740723    5.980469  47078.740723  43454.45874         0.0
5  47278.740723    0.010000  47278.740723  43454.45874         0.0
6  47680.740723  402.000000  47278.740967  43454.45874         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:25:04]  Iteration: 30
[07/12 13:25:04]  Generator returned sat in 0.161564 secs.
[07/12 13:25:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -2S_f[0][t-3] + 1S_f[0][t-4] + -1/2)[0m
[07/12 13:25:04]  Improved gap from 2023/204800 to 48.4375
[07/12 13:25:04]  Improved number of small numbers from 34 to 38 out of a max of 78
[07/12 13:25:04]  Verifer returned sat in 0.608495 secs.
[07/12 13:25:04]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  15398.187988    0.000244  15116.938538  43454.792155         0.0
1  15398.188110  281.249573  15149.750610  43454.792155         0.0
2  15398.188110    0.000244  15349.750610  43454.792155         0.0
3  15398.188110    0.000244  15349.750610  43506.354655         0.0
4  15516.438538  166.687927  15496.625732  43506.354655         0.0
5  15516.438538   19.812683  15498.188110  43557.917155         0.0
6  15646.906799  148.718689  15546.625610  43557.917155         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:05]  Iteration: 31
[07/12 13:25:05]  Generator returned sat in 0.446125 secs.
[07/12 13:25:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1)[0m
[07/12 13:25:06]  Improved gap from 0 to 29.6875
[07/12 13:25:06]  Improved number of small numbers from 38 to 49 out of a max of 78
[07/12 13:25:06]  Verifer returned sat in 1.076268 secs.
[07/12 13:25:06]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  14647.041016    0.000244  14484.104248  43880.354829         0.0
1  14647.041260  162.937012  14484.104315  43880.354829         0.0
2  14647.041260    0.000244  14647.041205  43880.354829         0.0
3  14907.230658  260.189453  14784.104315  43880.354829         0.0
4  14907.230658  123.126221  14863.791937  43880.354829         0.0
5  14913.791815   49.999878  14884.104315  43950.667329         0.0
6  14913.791815    0.010000  14913.791815  43950.667480         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:07]  Iteration: 32
[07/12 13:25:07]  Generator returned sat in 0.216714 secs.
[07/12 13:25:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -2)[0m
[07/12 13:25:07]  Improved gap from 0 to 31.25
[07/12 13:25:08]  Improved number of small numbers from 36 to 45 out of a max of 78
[07/12 13:25:08]  Verifer returned sat in 0.776892 secs.
[07/12 13:25:08]  Counter example: 
[93m   arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  35147.56752    0.000244  34716.317383  23648.141624         0.0
1  35147.56752    0.000244  34716.317520  23648.141624         0.0
2  35147.56752    0.000244  34876.566666  23648.141624         0.0
3  35147.56752  141.795410  35016.317520  23648.141624         0.0
4  35147.56752  127.501709  35097.567642  23648.141624         0.0
5  35147.56752   49.999756  35116.317520  23716.891624         0.0
6  35147.56752    0.010000  35147.567520  23716.891846         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:08]  Iteration: 33
[07/12 13:25:08]  Generator returned sat in 0.174135 secs.
[07/12 13:25:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2)[0m
[07/12 13:25:08]  Improved gap from 2023/204800 to 31.25
[07/12 13:25:09]  Improved number of small numbers from 35 to 48 out of a max of 78
[07/12 13:25:09]  Verifer returned sat in 0.795436 secs.
[07/12 13:25:09]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  35047.547363    0.000244  35047.547119  23316.911968         0.0
1  35047.547363    0.000244  35047.547261  23316.911968         0.0
2  35479.047078  431.499817  35206.047383  23316.911968         0.0
3  35479.047078    0.000244  35347.547261  23316.911968         0.0
4  35479.047078  131.499756  35429.047139  23316.911968         0.0
5  35479.047078   49.999878  35447.547363  23385.412151         0.0
6  35479.047078    0.010000  35479.047078  23385.412354         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:09]  Iteration: 34
[07/12 13:25:09]  Generator returned sat in 0.269051 secs.
[07/12 13:25:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + 3/2)[0m
[07/12 13:25:10]  Improved gap from 0 to 28.125
[07/12 13:25:10]  Improved number of small numbers from 35 to 54 out of a max of 78
[07/12 13:25:10]  Verifer returned sat in 0.852555 secs.
[07/12 13:25:10]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  35605.955322    0.000244  35179.703613  23184.755458         0.0
1  35605.955322    0.000244  35179.703770  23184.755458         0.0
2  35605.955322    0.000244  35342.328160  23184.755458         0.0
3  35605.955322    0.000244  35479.703770  23184.755458         0.0
4  35605.955322  126.251221  35557.828892  23184.755458         0.0
5  35607.828770   49.999878  35579.703770  23256.630458         0.0
6  35607.828770    0.010000  35607.828770  23256.630615         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:11]  Iteration: 35
[07/12 13:25:11]  Generator returned sat in 0.270409 secs.
[07/12 13:25:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2)[0m
[07/12 13:25:11]  Improved gap from 0 to 29.6875
[07/12 13:25:12]  Improved number of small numbers from 38 to 49 out of a max of 78
[07/12 13:25:12]  Verifer returned sat in 1.095689 secs.
[07/12 13:25:12]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  35906.169678    0.000244  35906.169189  23184.755458         0.0
1  35906.169678    0.000244  35906.169513  23184.755458         0.0
2  36335.857013  429.687500  36068.106158  23184.755458         0.0
3  36335.857013    0.000244  36206.169513  23184.755458         0.0
4  36335.857013  125.626709  36285.857135  23184.755458         0.0
5  36335.857013   49.999756  36306.169513  23255.067958         0.0
6  36335.857013    0.010000  36335.857013  23255.068115         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:12]  Iteration: 36
[07/12 13:25:13]  Generator returned sat in 0.986272 secs.
[07/12 13:25:13]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-2] + -1/2S_f[0][t-4] + 0)[0m
[07/12 13:25:13]  Improved gap from 1/32768 to 48.4375
[07/12 13:25:14]  Improved number of small numbers from 32 to 42 out of a max of 78
[07/12 13:25:14]  Verifer returned sat in 0.635082 secs.
[07/12 13:25:14]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  36087.419434    0.000244  35887.419207  23103.505763         0.0
1  36087.419434  200.000000  36087.419207  23103.505763         0.0
2  36182.731830   95.312622  36134.294330  23108.193141         0.0
3  36431.169330  296.875000  36182.731830  23108.193141         0.0
4  36431.169330  123.437561  36381.169452  23108.193141         0.0
5  36431.169330   47.656311  36382.731830  23159.755615         0.0
6  36506.169391  123.437561  36431.169434  23159.755859         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:14]  Iteration: 37
[07/12 13:25:15]  Generator returned sat in 0.621011 secs.
[07/12 13:25:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + -1/2)[0m
[07/12 13:25:15]  Improved gap from 1/16384 to 48.4375
[07/12 13:25:15]  Improved number of small numbers from 33 to 78 out of a max of 78
[07/12 13:25:15]  Verifer returned sat in 0.344232 secs.
[07/12 13:25:15]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  24574.731934    0.000244  24374.731934  34616.193115         0.0
1  24574.731934  200.000000  24574.731934  34616.193115         0.0
2  24674.731934  100.000000  24575.731445  34616.193115         0.0
3  24674.731934   99.000244  24674.731934  34616.193359         0.0
4  24874.731689  199.999756  24873.169434  34616.193359         0.0
5  24923.169189   49.999756  24874.731689  34667.755859         0.0
6  25072.450928  197.719238  24923.169189  34667.755859         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:15]  Iteration: 38
[07/12 13:25:16]  Generator returned sat in 0.531264 secs.
[07/12 13:25:16]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1S_f[0][t-3] + -1/2S_f[0][t-4] + -1)[0m
[07/12 13:25:17]  Improved gap from 0 to 23.4375
[07/12 13:25:17]  Improved number of small numbers from 51 to 58 out of a max of 78
[07/12 13:25:17]  Verifer returned sat in 0.961404 secs.
[07/12 13:25:17]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  89972.513672   0.000244  89972.513550 -30881.588501         0.0
1  89972.513672   0.000122  89972.513550 -30805.026123         0.0
2  90000.731445  28.217896  90000.731445 -30733.243896         0.0
3  90067.574707  66.843262  90044.137329 -30676.649780         0.0
4  90094.137207  49.999878  90067.574829 -30603.212158         0.0
5  90094.137207  26.562256  90094.137207 -30526.649658         0.0
6  90142.964966  48.827759  90117.574707 -30526.649658         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:17]  Iteration: 39
[07/12 13:25:19]  Generator returned sat in 1.284778 secs.
[07/12 13:25:19]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + -1)[0m
[07/12 13:25:19]  Improved gap from 1/8192 to 42.1875
[07/12 13:25:19]  Improved number of small numbers from 31 to 41 out of a max of 78
[07/12 13:25:19]  Verifer returned sat in 0.828979 secs.
[07/12 13:25:19]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  89743.020020    0.000244  89443.019708 -30452.094659         0.0
1  89743.020020    0.000244  89585.901558 -30452.094659         0.0
2  89743.020020    0.000244  89743.019708 -30452.094659         0.0
3  89826.439779   83.420071  89784.252279 -30435.514731         0.0
4  89968.104866  183.852587  89918.627401 -30435.514731         0.0
5  89968.104866   49.477342  89926.439779 -30377.702231         0.0
6  90110.292366  183.852587  89968.627279 -30377.702231         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:20]  Iteration: 40
[07/12 13:25:20]  Generator returned sat in 0.396566 secs.
[07/12 13:25:20]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/12 13:25:21]  Improved gap from 1/8192 to 40.625
[07/12 13:25:21]  Improved number of small numbers from 66 to 68 out of a max of 78
[07/12 13:25:21]  Verifer returned sat in 0.984561 secs.
[07/12 13:25:21]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  89218.104492    0.000244  89018.104736 -30027.179688         0.0
1  89218.104492  199.999756  89155.608276 -30027.179688         0.0
2  89349.359741  193.751465  89308.734375 -30027.179688         0.0
3  89349.359741    0.000244  89349.359619 -29999.059814         0.0
4  89530.609619  181.250000  89480.609741 -29999.059814         0.0
5  89530.609619   49.999878  89489.984619 -29939.684814         0.0
6  89671.234619  181.250000  89530.609619 -29939.684814         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:21]  Iteration: 41
[07/12 13:25:22]  Generator returned sat in 0.335034 secs.
[07/12 13:25:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:25:22]  Improved gap from 2460653/61440 to 39.0625
[07/12 13:25:23]  Improved number of small numbers from 33 to 51 out of a max of 78
[07/12 13:25:23]  Verifer returned sat in 1.560602 secs.
[07/12 13:25:23]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  89380.300293    0.000244  89001.175142 -30010.250337         0.0
1  89380.300293    0.000244  89142.895357 -30010.250337         0.0
2  89380.300293    0.000244  89301.175142 -30010.250337         0.0
3  89380.300293    0.000244  89341.237886 -29989.375581         0.0
4  89528.328829  187.090942  89478.328951 -29989.375581         0.0
5  89528.328829   49.999756  89480.300386 -29937.404053         0.0
6  89667.391329  187.090942  89528.328857 -29937.404053         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:24]  Iteration: 42
[07/12 13:25:24]  Generator returned sat in 0.483101 secs.
[07/12 13:25:24]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/12 13:25:25]  Improved gap from 1/8192 to 35.9375
[07/12 13:25:25]  Improved number of small numbers from 33 to 41 out of a max of 78
[07/12 13:25:25]  Verifer returned sat in 1.195647 secs.
[07/12 13:25:25]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  127641.157715    0.000244  127495.374895 -68504.450091         0.0
1  127641.157715    0.000244  127641.157610 -68504.450091         0.0
2  127835.312761  194.155151  127795.374895 -68504.450091         0.0
3  127835.312761   39.937744  127835.312639 -68480.325335         0.0
4  128015.716082  180.403442  127965.716204 -68480.325335         0.0
5  128015.716082   49.999756  127971.250139 -68424.791277         0.0
6  128151.653582  180.403442  128015.716082 -68424.791277         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:26]  Iteration: 43
[07/12 13:25:27]  Generator returned sat in 1.058124 secs.
[07/12 13:25:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + 3/2)[0m
[07/12 13:25:27]  Improved gap from 1/8192 to 23.4375
[07/12 13:25:28]  Improved number of small numbers from 37 to 57 out of a max of 78
[07/12 13:25:28]  Verifer returned sat in 1.097573 secs.
[07/12 13:25:28]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  127491.236328   0.000244  127366.979248 -68276.054688         0.0
1  127491.236328   0.000244  127466.979306 -68276.054688         0.0
2  127491.236328   0.000244  127491.236101 -68223.749023         0.0
3  127515.715349  24.479248  127515.715227 -68148.352783         0.0
4  127565.839983  50.124756  127539.277605 -68074.915178         0.0
5  127589.277483  49.999878  127565.839983 -67998.352783         0.0
6  127615.964739  50.124756  127589.277588 -67998.352539         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:28]  Iteration: 44
[07/12 13:25:29]  Generator returned sat in 0.433267 secs.
[07/12 13:25:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -3/2S_f[0][t-3] + 2)[0m
[07/12 13:25:29]  Improved gap from 0 to 21.875
[07/12 13:25:30]  Improved number of small numbers from 36 to 54 out of a max of 78
[07/12 13:25:30]  Verifer returned sat in 0.876364 secs.
[07/12 13:25:30]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  127091.965332   0.000244  126968.756836 -68283.644531         0.0
1  127091.965332   0.000244  127068.756851 -68283.644531         0.0
2  127091.965332  23.208252  127091.965184 -68228.727678         0.0
3  127113.840306  21.875122  127113.840184 -68150.602678         0.0
4  127161.590184  47.750000  127135.715184 -68076.477678         0.0
5  127181.465184  45.750000  127161.590184 -67998.352783         0.0
6  127209.340184  47.750000  127183.465332 -67998.352539         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:30]  Iteration: 45
[07/12 13:25:33]  Generator returned sat in 3.035444 secs.
[07/12 13:25:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -1S_f[0][t-4] + -3/2)[0m
[07/12 13:25:33]  Improved gap from 0 to 48.4375
[07/12 13:25:33]  Improved number of small numbers from 36 to 78 out of a max of 78
[07/12 13:25:33]  Verifer returned sat in 0.337504 secs.
[07/12 13:25:33]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  284338.590332    0.000244  284338.590088 -68175.122314         0.0
1  284390.027588   51.437500  284338.590088 -68126.559814         0.0
2  284390.027588    0.000244  284390.027588 -68076.477539         0.0
3  284639.935791  249.908203  284539.945312 -68076.477539         0.0
4  284639.935791   96.980225  284639.935547 -68076.477539         0.0
5  284639.945557    0.010010  284639.945557 -68024.915283         0.0
6  284688.383057   48.437500  284688.383057 -68024.915039         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:34]  Iteration: 46
[07/12 13:25:36]  Generator returned sat in 2.506118 secs.
[07/12 13:25:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -2S_f[0][t-2] + 2S_f[0][t-3] + -1S_f[0][t-4] + -2)[0m
[07/12 13:25:36]  Improved gap from 4908799/102400 to 48.4375
[07/12 13:25:36]  Improved number of small numbers from 66 to 79 out of a max of 79
[07/12 13:25:36]  Verifer returned sat in 0.269856 secs.
[07/12 13:25:36]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  284489.152588    0.000244  284289.152832 -68076.477783         0.0
1  284489.152588  199.999756  284289.590088 -68076.477783         0.0
2  284489.152588  199.562500  284390.027344 -68076.477539         0.0
3  284737.590088  347.562744  284563.027588 -68076.477539         0.0
4  284737.590088   71.000244  284687.590332 -68076.477539         0.0
5  284737.590088   49.999756  284689.152588 -68024.915039         0.0
6  284737.590088   47.999756  284737.590088 -68024.915039         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:37]  Iteration: 47
[07/12 13:25:40]  Generator returned sat in 3.087489 secs.
[07/12 13:25:40]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 3/2)[0m
[07/12 13:25:40]  Improved gap from 2073/204800 to 48.4375
[07/12 13:25:40]  Improved number of small numbers from 54 to 70 out of a max of 78
[07/12 13:25:40]  Verifer returned sat in 0.413369 secs.
[07/12 13:25:40]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  367958.017578    0.000244  367558.027344 -68076.477783         0.0
1  367958.017578  399.990234  367558.027344 -68076.477783         0.0
2  367958.017578  399.990234  367758.027344 -68076.477783         0.0
3  367958.017578  199.990234  367758.027344 -68076.477783         0.0
4  367958.017578  101.500000  367958.017466 -68076.477783         0.0
5  367958.027466    0.010000  367958.027344 -68024.915283         0.0
6  368059.512527  101.485183  368006.464844 -68024.915283         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:41]  Iteration: 48
[07/12 13:25:43]  Generator returned sat in 2.222883 secs.
[07/12 13:25:43]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -3/2S_f[0][t-3] + -3/2)[0m
[07/12 13:25:43]  Improved gap from 0 to 37.5
[07/12 13:25:44]  Improved number of small numbers from 35 to 50 out of a max of 78
[07/12 13:25:44]  Verifer returned sat in 0.954359 secs.
[07/12 13:25:44]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  367494.245117    0.000244  367494.245117 -68112.695557         0.0
1  367794.245117  300.000000  367658.634500 -68112.695557         0.0
2  367794.245117  135.610352  367794.244919 -68112.695557         0.0
3  368032.577154  238.332235  367867.077887 -68112.695557         0.0
4  368032.577154  165.499146  367982.577276 -68112.695557         0.0
5  368032.577154   49.999756  367995.077154 -68051.027594         0.0
6  368160.576300  165.499146  368032.577154 -68051.027594         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:44]  Iteration: 49
[07/12 13:25:45]  Generator returned sat in 0.994511 secs.
[07/12 13:25:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -3/2S_f[0][t-3] + 3/2)[0m
[07/12 13:25:46]  Improved gap from 63/2 to 32.8125
[07/12 13:25:46]  Improved number of small numbers from 30 to 50 out of a max of 78
[07/12 13:25:46]  Verifer returned sat in 1.121957 secs.
[07/12 13:25:46]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  368463.520996    0.000244  367931.372314 -68118.215094         0.0
1  368463.520996  200.000244  368100.924144 -68118.215094         0.0
2  368463.520996   32.339844  368231.372243 -68118.215094         0.0
3  368463.520996    0.000244  368301.325338 -68118.215094         0.0
4  368463.520996  162.195602  368414.184866 -68118.215094         0.0
5  368464.184743   49.999878  368431.372243 -68051.027594         0.0
6  368593.567846  162.195602  368464.184814 -68051.027594         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:47]  Iteration: 50
[07/12 13:25:51]  Generator returned sat in 3.932887 secs.
[07/12 13:25:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 1/2S_f[0][t-4] + -1/2)[0m
[07/12 13:25:51]  Improved gap from 0 to 25.0
[07/12 13:25:52]  Improved number of small numbers from 32 to 44 out of a max of 78
[07/12 13:25:52]  Verifer returned sat in 1.164593 secs.
[07/12 13:25:52]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  236992.519043    0.000244  236693.518992  63120.638158         0.0
1  236992.519043  299.000000  236792.518992  63120.638158         0.0
2  236992.519043    0.000244  236992.518992  63120.638158         0.0
3  236992.519114    0.000122  236992.518992  63195.638158         0.0
4  237142.518992  150.000000  237092.519053  63195.638158         0.0
5  237142.518992   49.500092  237117.518992  63270.638158         0.0
6  237254.518962  136.999969  237142.519043  63270.638158         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:25:52]  Iteration: 51
[07/12 13:25:53]  Generator returned sat in 0.819432 secs.
[07/12 13:25:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/12 13:25:54]  Improved gap from 163839751/6553600 to 23.4375
[07/12 13:25:54]  Improved number of small numbers from 34 to 76 out of a max of 78
[07/12 13:25:54]  Verifer returned sat in 1.420140 secs.
[07/12 13:25:54]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  236888.646484   0.000244  236677.708252  63082.116943         0.0
1  236888.646484   0.000244  236794.896240  63082.116943         0.0
2  236888.646484   0.000244  236865.208984  63096.178955         0.0
3  236888.646729  23.437744  236888.646484  63172.741455         0.0
4  236935.521484  46.875000  236912.083984  63249.303955         0.0
5  236935.521484  23.437378  236935.521484  63325.866211         0.0
6  236982.396484  46.875000  236958.959229  63325.866211         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:25:55]  Iteration: 52
[07/12 13:25:57]  Generator returned sat in 2.188582 secs.
[07/12 13:25:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -1)[0m
[07/12 13:25:57]  Improved gap from inf to 100
[07/12 13:25:57]  Improved number of small numbers from 68 to 78 out of a max of 78
[07/12 13:25:57]  Verifer returned sat in 0.191484 secs.
[07/12 13:25:57]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  307945.958984    0.000244  307445.959229  63325.865967         0.0
1  307945.958984    0.000244  307545.959229  63325.865967         0.0
2  307945.958984    0.000244  307545.959229  63325.865967         0.0
3  307945.958984    0.000244  307745.959229  63325.865967         0.0
4  307945.958984  199.000000  307845.959229  63325.865967         0.0
5  307945.958984   99.000000  307896.959473  63325.865967         0.0
6  308345.959473  449.000000  307945.959229  63325.865967         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:25:57]  Iteration: 53
[07/12 13:25:59]  Generator returned sat in 2.083762 secs.
[07/12 13:25:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-3] + -2S_f[0][t-4] + 1/2)[0m
[07/12 13:26:00]  Improved gap from inf to 100
[07/12 13:26:00]  Improved number of small numbers from 68 to 78 out of a max of 78
[07/12 13:26:00]  Verifer returned sat in 0.127582 secs.
[07/12 13:26:00]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  307945.958984    0.000244  307445.959229  63325.865723         0.0
1  307945.958984    0.000244  307545.708984  63325.865723         0.0
2  307945.958984    0.000244  307545.959229  63325.865723         0.0
3  307945.958984    0.000244  307745.959229  63325.865723         0.0
4  307945.958984  199.999512  307845.959229  63325.865723         0.0
5  307945.958984    1.000488  307945.459473  63325.865723         0.0
6  308345.959473  400.500000  307945.959229  63325.865723         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:26:00]  Iteration: 54
[07/12 13:26:03]  Generator returned sat in 3.071362 secs.
[07/12 13:26:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + -1)[0m
[07/12 13:26:03]  Improved gap from 2073/204800 to 48.4375
[07/12 13:26:04]  Improved number of small numbers from 45 to 61 out of a max of 78
[07/12 13:26:04]  Verifer returned sat in 0.603000 secs.
[07/12 13:26:04]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  307975.983154    0.000244  307527.545770  63325.865723         0.0
1  307975.983154    0.000244  307564.686548  63325.865723         0.0
2  307975.983154    0.000244  307727.545770  63325.865723         0.0
3  307975.983154    0.000244  307774.983636  63325.865723         0.0
4  307975.983154  200.999512  307925.983392  63325.865723         0.0
5  307975.983154    0.010000  307927.545770  63377.428223         0.0
6  308128.545282  200.999512  307975.983270  63377.428223         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:04]  Iteration: 55
[07/12 13:26:06]  Generator returned sat in 1.798749 secs.
[07/12 13:26:06]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + -1)[0m
[07/12 13:26:06]  Improved gap from 0 to 23.4375
[07/12 13:26:07]  Improved number of small numbers from 34 to 44 out of a max of 78
[07/12 13:26:07]  Verifer returned sat in 0.836920 secs.
[07/12 13:26:07]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  307527.545898    0.000244  307527.545770  63257.030473         0.0
1  307835.273143  307.727373  307727.545770  63257.030473         0.0
2  307835.273143    0.000244  307807.841269  63257.030473         0.0
3  307835.273143    0.000244  307835.273021  63325.865723         0.0
4  307882.148021   46.875000  307858.710521  63402.428223         0.0
5  307882.148021   23.437378  307882.148021  63475.865967         0.0
6  307926.025895   43.877874  307908.710449  63475.865967         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:26:07]  Iteration: 56
[07/12 13:26:10]  Generator returned sat in 3.310527 secs.
[07/12 13:26:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/12 13:26:11]  Improved gap from 0 to 48.4375
[07/12 13:26:11]  Improved number of small numbers from 38 to 48 out of a max of 78
[07/12 13:26:11]  Verifer returned sat in 0.924208 secs.
[07/12 13:26:11]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  317639.752686    0.000244  317440.086131  63257.030473         0.0
1  317639.752686  199.666504  317573.273265  63257.030473         0.0
2  317639.752686    0.000244  317639.752635  63257.030473         0.0
3  317923.273143  283.520508  317673.273265  63257.030473         0.0
4  317923.273143  249.999756  317873.273265  63257.030473         0.0
5  317923.273143   33.739685  317874.835643  63307.030595         0.0
6  318124.835398  249.999756  317923.273193  63307.030595         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:12]  Iteration: 57
[07/12 13:26:12]  Generator returned sat in 0.856513 secs.
[07/12 13:26:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 3/2)[0m
[07/12 13:26:13]  Improved gap from 1/16384 to 48.4375
[07/12 13:26:13]  Improved number of small numbers from 31 to 41 out of a max of 78
[07/12 13:26:13]  Verifer returned sat in 0.801706 secs.
[07/12 13:26:13]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  317639.752930    0.000244  317444.315257  63285.988698         0.0
1  317639.752930    0.000244  317544.315257  63285.988698         0.0
2  317639.752930    0.000244  317639.752635  63285.988698         0.0
3  317888.971446  249.218811  317644.315257  63285.988698         0.0
4  317888.971446  244.656067  317842.752879  63285.988698         0.0
5  317892.752757   49.999878  317844.315257  63337.551198         0.0
6  318050.315623  206.000366  317892.752757  63337.551198         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:14]  Iteration: 58
[07/12 13:26:14]  Generator returned sat in 0.865897 secs.
[07/12 13:26:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + 2)[0m
[07/12 13:26:15]  Improved gap from 0 to 48.4375
[07/12 13:26:15]  Improved number of small numbers from 35 to 45 out of a max of 78
[07/12 13:26:15]  Verifer returned sat in 0.830052 secs.
[07/12 13:26:15]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  274520.970947    0.000244  274324.971324  106405.332631         0.0
1  274520.970947    0.000244  274424.971324  106405.332631         0.0
2  274520.970947    0.000244  274520.970835  106405.332631         0.0
3  274774.971202  254.000366  274524.971324  106405.332631         0.0
4  274774.971202  245.999268  274724.971324  106405.332631         0.0
5  274774.971202   49.999756  274726.533702  106455.332753         0.0
6  274933.753245  207.219543  274774.971202  106455.332753         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:16]  Iteration: 59
[07/12 13:26:20]  Generator returned sat in 3.950690 secs.
[07/12 13:26:20]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + -2)[0m
[07/12 13:26:20]  Improved gap from 0 to 23.4375
[07/12 13:26:21]  Improved number of small numbers from 31 to 37 out of a max of 78
[07/12 13:26:21]  Verifer returned sat in 1.210327 secs.
[07/12 13:26:21]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  295141.971436    0.000244  295141.971324  106405.332631         0.0
1  295341.971446  200.000122  295341.971324  106405.332631         0.0
2  295430.346364   88.375041  295430.346242  106405.332631         0.0
3  295449.783864   19.437622  295449.783742  106474.082713         0.0
4  295499.783620   49.999878  295473.221242  106547.520335         0.0
5  295499.783620    6.406291  295499.783620  106624.082764         0.0
6  295549.783498   49.999878  295523.221191  106624.083008         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:26:21]  Iteration: 60
[07/12 13:26:23]  Generator returned sat in 1.695820 secs.
[07/12 13:26:23]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + -3/2)[0m
[07/12 13:26:23]  Improved gap from 1/8192 to 23.4375
[07/12 13:26:24]  Improved number of small numbers from 32 to 78 out of a max of 78
[07/12 13:26:24]  Verifer returned sat in 0.774707 secs.
[07/12 13:26:24]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  295487.285889    0.000244  295155.666992  106369.992676         0.0
1  295487.285889    0.000244  295355.666992  106369.992676         0.0
2  295487.286133  131.619141  295436.053223  106369.992676         0.0
3  295487.286133   51.232910  295463.848633  106438.373535         0.0
4  295510.723389   46.874756  295487.286133  106514.936035         0.0
5  295510.723633   23.437500  295510.723633  106591.498535         0.0
6  295553.919678   43.196045  295534.161133  106591.498535         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:26:24]  Iteration: 61
[07/12 13:26:25]  Generator returned sat in 1.058550 secs.
[07/12 13:26:25]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + -1/2)[0m
[07/12 13:26:25]  Improved gap from 359/16 to 23.4375
[07/12 13:26:26]  Improved number of small numbers from 33 to 42 out of a max of 78
[07/12 13:26:26]  Verifer returned sat in 1.304663 secs.
[07/12 13:26:26]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  295215.983154   0.000244  295015.983153  106401.623201         0.0
1  295215.983154   0.000244  295215.983153  106401.623201         0.0
2  295301.358193  85.375041  295301.358071  106401.623201         0.0
3  295338.233128  36.875057  295338.233006  106455.935791         0.0
4  295402.670319  64.437313  295376.107941  106514.936035         0.0
5  295426.107819  49.999878  295402.670319  106591.498535         0.0
6  295467.107632  64.437313  295426.107910  106591.498535         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:27]  Iteration: 62
[07/12 13:26:28]  Generator returned sat in 1.211461 secs.
[07/12 13:26:28]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 3/2)[0m
[07/12 13:26:28]  Improved gap from 4833271/524288 to 100
[07/12 13:26:29]  Improved number of small numbers from 41 to 45 out of a max of 78
[07/12 13:26:29]  Verifer returned sat in 0.772082 secs.
[07/12 13:26:29]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  292524.514160    0.000244  292524.513979  106455.935791         0.0
1  292624.514101  100.000122  292624.513979  106455.935791         0.0
2  293074.514223  450.000244  292821.514223  106455.935791         0.0
3  293074.514223    0.000244  292824.513979  106455.935791         0.0
4  293074.514223  250.000122  293024.513979  106455.935791         0.0
5  293132.013490  107.499512  293124.513979  106455.935791         0.0
6  293524.514101  400.000122  293124.513979  106455.935791         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:26:29]  Iteration: 63
[07/12 13:26:30]  Generator returned sat in 1.235856 secs.
[07/12 13:26:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:26:30]  Improved gap from inf to 100
[07/12 13:26:31]  Improved number of small numbers from 43 to 46 out of a max of 79
[07/12 13:26:31]  Verifer returned sat in 0.765794 secs.
[07/12 13:26:31]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  292524.514160    0.000244  292524.514101  106455.935791         0.0
1  292624.514040   99.999939  292624.513979  106455.935791         0.0
2  293074.514223  450.000244  292823.514101  106455.935791         0.0
3  293074.514223    0.000244  292824.513979  106455.935791         0.0
4  293074.514223  250.000122  293024.513979  106455.935791         0.0
5  293127.013734  102.499756  293124.513979  106455.935791         0.0
6  293524.514040  400.000061  293124.513979  106455.935791         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:26:31]  Iteration: 64
[07/12 13:26:33]  Generator returned sat in 1.144567 secs.
[07/12 13:26:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/12 13:26:33]  Improved gap from 0 to 23.4375
[07/12 13:26:34]  Improved number of small numbers from 36 to 41 out of a max of 78
[07/12 13:26:34]  Verifer returned sat in 1.096537 secs.
[07/12 13:26:34]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  293094.011963    0.000244  293094.011736  106455.935547         0.0
1  293347.136920  253.125183  293270.574358  106455.935547         0.0
2  293347.136920    0.000244  293347.136858  106455.935791         0.0
3  293372.136920   25.000061  293372.136858  106530.935791         0.0
4  293423.699297   51.562439  293397.136858  106602.810852         0.0
5  293423.699297   24.218750  293423.699297  106679.373352         0.0
6  293475.261736   51.562439  293447.136797  106679.373535         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:34]  Iteration: 65
[07/12 13:26:37]  Generator returned sat in 2.869536 secs.
[07/12 13:26:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 3/2)[0m
[07/12 13:26:37]  Improved gap from 1/8192 to 48.4375
[07/12 13:26:37]  Improved number of small numbers from 45 to 78 out of a max of 78
[07/12 13:26:37]  Verifer returned sat in 0.249413 secs.
[07/12 13:26:37]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  329479.980469    0.000244  329240.199463  106598.091797         0.0
1  329479.980469  239.780518  329409.699463  106598.091797         0.0
2  329479.980469   70.281006  329409.699463  106627.810791         0.0
3  329707.698975  297.999512  329479.980713  106627.810791         0.0
4  329707.698975  171.000000  329678.418213  106627.810791         0.0
5  329715.058838   36.640625  329679.980469  106679.373291         0.0
6  329850.980469  171.000000  329728.417969  106679.373291         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:38]  Iteration: 66
[07/12 13:26:42]  Generator returned sat in 4.106058 secs.
[07/12 13:26:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -3/2S_f[0][t-3] + 1S_f[0][t-4] + -1/2)[0m
[07/12 13:26:42]  Improved gap from 1242129/81920 to 48.4375
[07/12 13:26:42]  Improved number of small numbers from 35 to 78 out of a max of 78
[07/12 13:26:42]  Verifer returned sat in 0.419665 secs.
[07/12 13:26:42]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  280609.759521    0.000244  280352.819092  155490.986572         0.0
1  280609.759521    0.000244  280416.804688  155490.986572         0.0
2  280609.759521    0.000244  280609.759521  155490.986572         0.0
3  280816.804443  207.044922  280678.434570  155490.986572         0.0
4  280816.804443  135.004395  280816.804443  155490.986572         0.0
5  280865.241943   48.437500  280816.804443  155542.549072         0.0
6  280865.241943    0.010000  280865.241943  155542.549072         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:42]  Iteration: 67
[07/12 13:26:47]  Generator returned sat in 4.256631 secs.
[07/12 13:26:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-4] + 0)[0m
[07/12 13:26:47]  Improved gap from 0 to 23.4375
[07/12 13:26:47]  Improved number of small numbers from 47 to 71 out of a max of 78
[07/12 13:26:47]  Verifer returned sat in 0.490056 secs.
[07/12 13:26:47]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  355631.821533   0.000244  355502.133789  80375.969727         0.0
1  355631.821533   0.000244  355631.821289  80375.969727         0.0
2  355631.821533   0.000244  355631.821289  80452.532227         0.0
3  355655.258789  23.437500  355655.258789  80529.094727         0.0
4  355731.821289  76.562500  355731.821045  80549.407715         0.0
5  355781.820923  49.999878  355758.383301  80625.970093         0.0
6  355821.664307  63.281006  355781.820923  80625.970215         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:48]  Iteration: 68
[07/12 13:26:49]  Generator returned sat in 1.650296 secs.
[07/12 13:26:49]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:26:49]  Improved gap from 1/8192 to 23.4375
[07/12 13:26:50]  Improved number of small numbers from 51 to 60 out of a max of 78
[07/12 13:26:50]  Verifer returned sat in 0.449162 secs.
[07/12 13:26:50]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  432706.009521    0.000244  432706.009521  80375.969727         0.0
1  432885.821533  179.812012  432885.821289  80375.969727         0.0
2  432909.258545   23.437256  432885.821289  80452.532227         0.0
3  432909.259033   23.437744  432909.258789  80529.094482         0.0
4  433011.383423  102.124634  432984.821045  80550.407593         0.0
5  433034.820923   49.999878  433011.383423  80626.970093         0.0
6  433074.664490   63.281067  433034.820923  80626.970215         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:50]  Iteration: 69
[07/12 13:26:51]  Generator returned sat in 1.391734 secs.
[07/12 13:26:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-4] + 1)[0m
[07/12 13:26:52]  Improved gap from 1/8192 to 23.4375
[07/12 13:26:52]  Improved number of small numbers from 42 to 58 out of a max of 78
[07/12 13:26:52]  Verifer returned sat in 0.498579 secs.
[07/12 13:26:52]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  507082.696289   0.000244  507082.696289  80274.969971         0.0
1  507082.696533   0.000244  507082.696411  80351.532227         0.0
2  507157.258789  74.562378  507133.821289  80400.407532         0.0
3  507157.259033  23.437744  507157.258789  80476.970032         0.0
4  507195.540039  38.281250  507180.696289  80550.407715         0.0
5  507230.696228  49.999939  507207.258728  80626.970093         0.0
6  507244.977448  37.718719  507230.696228  80626.970215         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:26:52]  Iteration: 70
[07/12 13:26:54]  Generator returned sat in 1.455368 secs.
[07/12 13:26:54]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-4] + 3/2)[0m
[07/12 13:26:54]  Improved gap from 367619/16384 to 23.4375
[07/12 13:26:55]  Improved number of small numbers from 48 to 62 out of a max of 78
[07/12 13:26:55]  Verifer returned sat in 0.650762 secs.
[07/12 13:26:55]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  506005.165771    0.000244  506005.165649  80373.969727         0.0
1  506128.603149  123.437500  506105.165649  80373.969727         0.0
2  506128.603149   23.437500  506105.165771  80450.532227         0.0
3  506202.165283   96.999512  506135.498901  80476.970215         0.0
4  506202.165527   66.666626  506202.165405  80550.407715         0.0
5  506252.165283   49.999878  506228.727783  80626.970215         0.0
6  506292.008789   63.281006  506252.165283  80626.970215         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:55]  Iteration: 71
[07/12 13:26:56]  Generator returned sat in 1.566035 secs.
[07/12 13:26:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:26:57]  Improved gap from 359/16 to 23.4375
[07/12 13:26:57]  Improved number of small numbers from 49 to 78 out of a max of 78
[07/12 13:26:57]  Verifer returned sat in 0.349354 secs.
[07/12 13:26:57]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  523582.666260    0.000244  523482.666016  80373.969727         0.0
1  523582.666260  100.000244  523582.666016  80373.969727         0.0
2  523606.103516   23.437500  523582.666016  80450.532227         0.0
3  523670.603516   87.937500  523606.624512  80486.032227         0.0
4  523670.603760   63.979248  523670.603516  80562.594727         0.0
5  523716.572266   45.968750  523694.041016  80639.157227         0.0
6  523751.728516   57.687500  523717.478516  80639.157227         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:26:57]  Iteration: 72
[07/12 13:27:06]  Generator returned sat in 8.491951 secs.
[07/12 13:27:06]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 2)[0m
[07/12 13:27:06]  Verifer returned unsat in 0.037244 secs.
[07/12 13:27:06]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 2)[0m
[07/12 13:27:06]  Iteration: 73
[07/12 13:27:09]  Generator returned sat in 2.807221 secs.
[07/12 13:27:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/12 13:27:09]  Improved gap from 1/8192 to 23.4375
[07/12 13:27:09]  Improved number of small numbers from 33 to 49 out of a max of 78
[07/12 13:27:09]  Verifer returned sat in 0.828938 secs.
[07/12 13:27:09]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  626835.566406    0.000244  626615.370660 -22778.930325         0.0
1  626835.566406  220.195557  626635.566067 -22778.930325         0.0
2  626835.566406  200.000000  626835.566067 -22778.930325         0.0
3  626835.566406    0.000244  626835.566067 -22744.270020         0.0
4  626927.468363   91.902297  626900.905986 -22670.832621         0.0
5  626927.468363    0.010000  626927.468363 -22594.270121         0.0
6  627001.981890   74.513526  626950.905863 -22594.270020         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:27:10]  Iteration: 74
[07/12 13:27:18]  Generator returned sat in 8.508427 secs.
[07/12 13:27:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/12 13:27:19]  Improved gap from 2073/204800 to 48.4375
[07/12 13:27:19]  Improved number of small numbers from 35 to 41 out of a max of 78
[07/12 13:27:19]  Verifer returned sat in 0.867502 secs.
[07/12 13:27:19]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  627204.771579    0.000244  626656.334079 -22645.832621         0.0
1  627204.771579    0.000244  626756.334079 -22645.832621         0.0
2  627204.771579    0.000244  626956.334079 -22645.832621         0.0
3  627204.771579    0.000244  627056.334079 -22645.832621         0.0
4  627204.771579  102.000000  627154.771701 -22645.832621         0.0
5  627204.771579   49.656433  627156.334079 -22594.270121         0.0
6  627204.771579    0.010000  627204.771579 -22594.270020         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:27:20]  Iteration: 75
[07/12 13:27:22]  Generator returned sat in 2.639292 secs.
[07/12 13:27:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-3] + 2)[0m
[07/12 13:27:22]  Improved gap from 1/8192 to 23.4375
[07/12 13:27:23]  Improved number of small numbers from 34 to 46 out of a max of 78
[07/12 13:27:23]  Verifer returned sat in 0.678329 secs.
[07/12 13:27:23]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  726929.208984   0.000244  726729.208740 -22790.395203         0.0
1  726929.208984   0.000244  726822.334079 -22790.395203         0.0
2  726929.208984   0.000244  726929.208917 -22790.395203         0.0
3  726961.208835  31.999919  726929.208917 -22722.395121         0.0
4  726984.646335  55.437419  726961.208835 -22645.832621         0.0
5  727011.208713  49.999878  726984.646335 -22572.395020         0.0
6  727037.802545  53.156209  727011.208740 -22572.395020         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:27:23]  Iteration: 76
[07/12 13:27:26]  Generator returned sat in 2.700313 secs.
[07/12 13:27:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:27:26]  Improved gap from 0 to 31.25
[07/12 13:27:27]  Improved number of small numbers from 52 to 70 out of a max of 78
[07/12 13:27:27]  Verifer returned sat in 0.658650 secs.
[07/12 13:27:27]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  726647.521973    0.000244  726414.021973 -22575.208252         0.0
1  726647.521973    0.000244  726614.021973 -22575.208252         0.0
2  726647.521973   33.499756  726647.521729 -22539.958008         0.0
3  726678.771729   31.250000  726678.771729 -22476.582520         0.0
4  726814.271484  135.499756  726796.646484 -22476.582520         0.0
5  726846.646362   49.999878  726815.396240 -22407.832642         0.0
6  726950.895996  135.499756  726846.646362 -22407.832642         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:27:27]  Iteration: 77
[07/12 13:27:36]  Generator returned sat in 8.732438 secs.
[07/12 13:27:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -3/2)[0m
[07/12 13:27:36]  Improved gap from 1/8192 to 48.4375
[07/12 13:27:37]  Improved number of small numbers from 31 to 43 out of a max of 78
[07/12 13:27:37]  Verifer returned sat in 0.884078 secs.
[07/12 13:27:37]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  730240.593750    0.000244  730138.869542 -26201.779887         0.0
1  730240.593750    0.000244  730240.593608 -26201.779887         0.0
2  730240.593750    0.000122  730240.593608 -26201.779887         0.0
3  730589.062663  348.469055  730440.562541 -26201.779887         0.0
4  730589.062663  101.963664  730540.593608 -26201.779887         0.0
5  730589.062663   48.468933  730540.625163 -26150.249023         0.0
6  730989.062785  448.437622  730589.062744 -26150.249023         0.0
high_util=False, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:27:37]  Iteration: 78
[07/12 13:27:39]  Generator returned sat in 1.731396 secs.
[07/12 13:27:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -1)[0m
[07/12 13:27:39]  Improved gap from 1/98304 to 48.4375
[07/12 13:27:40]  Improved number of small numbers from 34 to 42 out of a max of 78
[07/12 13:27:40]  Verifer returned sat in 1.115719 secs.
[07/12 13:27:40]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  787169.593750    0.000244  787169.593608 -26201.436442         0.0
1  787569.218892  399.625285  787269.593608 -26201.436442         0.0
2  787569.218892    0.000244  787269.593608 -26201.436442         0.0
3  787569.218892    0.000244  787469.593608 -26201.436442         0.0
4  787569.218892   99.000000  787569.218770 -26201.436442         0.0
5  787618.406189   49.187419  787569.968689 -26150.249023         0.0
6  788018.406311  448.437622  787618.406250 -26150.249023         0.0
high_util=False, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:27:40]  Iteration: 79
[07/12 13:27:44]  Generator returned sat in 3.347872 secs.
[07/12 13:27:44]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -1/2)[0m
[07/12 13:27:44]  Improved gap from 0 to 48.4375
[07/12 13:27:44]  Improved number of small numbers from 36 to 42 out of a max of 78
[07/12 13:27:44]  Verifer returned sat in 0.780833 secs.
[07/12 13:27:44]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  787325.499756    0.000244  787226.030853 -26201.436442         0.0
1  787325.499756    0.000244  787325.499725 -26201.436442         0.0
2  787326.030975    0.531250  787326.030853 -26201.436442         0.0
3  787626.030975  300.000122  787526.030853 -26201.436442         0.0
4  787626.030975   98.703308  787626.030853 -26201.436442         0.0
5  787676.593109   50.562256  787628.155609 -26151.998698         0.0
6  788076.593231  448.437622  787676.593109 -26151.998698         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:27:45]  Iteration: 80
[07/12 13:27:47]  Generator returned sat in 1.721377 secs.
[07/12 13:27:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/12 13:27:47]  Improved gap from 775/16 to 48.4375
[07/12 13:27:47]  Improved number of small numbers from 35 to 78 out of a max of 78
[07/12 13:27:47]  Verifer returned sat in 0.416950 secs.
[07/12 13:27:47]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  787726.030762    0.000244  787373.687744 -26200.436523         0.0
1  787726.030762    0.000244  787374.468750 -26200.436523         0.0
2  787726.030762  351.562012  787574.468750 -26200.436523         0.0
3  787726.030762    0.000244  787674.468750 -26200.436523         0.0
4  787726.030762   51.562012  787677.593262 -26151.998535         0.0
5  788126.031006  448.437744  787726.030762 -26151.998535         0.0
6  788126.031006  177.343506  787826.030762 -26151.998535         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:27:47]  Iteration: 81
[07/12 13:27:52]  Generator returned sat in 4.555422 secs.
[07/12 13:27:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-3] + -2S_f[0][t-4] + -3/2)[0m
[07/12 13:27:52]  Improved gap from 2023/204800 to 48.4375
[07/12 13:27:52]  Improved number of small numbers from 52 to 65 out of a max of 78
[07/12 13:27:52]  Verifer returned sat in 0.414819 secs.
[07/12 13:27:52]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  787574.468750    0.000244  787374.468750 -26200.436768         0.0
1  787574.468750    0.000244  787474.468750 -26200.436768         0.0
2  787574.468750  100.000000  787500.218689 -26200.436523         0.0
3  787574.468750    0.000244  787574.468750 -26150.374023         0.0
4  787772.968750  198.500000  787724.406250 -26150.374023         0.0
5  787774.406128   49.999878  787725.968628 -26100.373901         0.0
6  787872.968750  147.000122  787774.406128 -26100.373779         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:27:53]  Iteration: 82
[07/12 13:27:55]  Generator returned sat in 2.065802 secs.
[07/12 13:27:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-3] + -2S_f[0][t-4] + -1)[0m
[07/12 13:27:55]  Improved gap from 0 to 48.4375
[07/12 13:27:55]  Improved number of small numbers from 44 to 79 out of a max of 79
[07/12 13:27:55]  Verifer returned sat in 0.333118 secs.
[07/12 13:27:55]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  787373.968506    0.000244  787273.968506 -26152.441162         0.0
1  787373.968506    0.000244  787373.463623 -26152.441162         0.0
2  787373.968506    0.504639  787373.968506 -26151.936279         0.0
3  787721.901367  347.932861  787473.463623 -26151.936279         0.0
4  787721.901367  197.990234  787671.901611 -26151.936279         0.0
5  787721.901367    0.010000  787673.463623 -26100.374023         0.0
6  787871.453857  197.990234  787721.901367 -26100.374023         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:27:55]  Iteration: 83
[07/12 13:28:02]  Generator returned sat in 6.941676 secs.
[07/12 13:28:03]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + 2S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/12 13:28:03]  Improved gap from 0 to 48.4375
[07/12 13:28:03]  Improved number of small numbers from 35 to 78 out of a max of 78
[07/12 13:28:03]  Verifer returned sat in 0.536413 secs.
[07/12 13:28:03]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  792932.049805    0.000244  792765.370850 -31660.512939         0.0
1  792932.049805    0.000244  792882.040283 -31660.512939         0.0
2  792932.049805   50.009521  792882.040283 -31610.522705         0.0
3  792982.059082  100.018799  792932.050049 -31560.531982         0.0
4  793132.059082  200.009033  793082.059326 -31560.531982         0.0
5  793132.059082   49.999756  793082.059326 -31510.531738         0.0
6  793132.059082    0.010010  793132.059082 -31510.531738         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:28:03]  Iteration: 84
[07/12 13:28:06]  Generator returned sat in 2.124729 secs.
[07/12 13:28:06]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + -1S_f[0][t-2] + 2S_f[0][t-3] + -3/2S_f[0][t-4] + 1/2)[0m
[07/12 13:28:06]  Improved gap from 409599/8192 to 100
[07/12 13:28:06]  Improved number of small numbers from 74 to 78 out of a max of 78
[07/12 13:28:06]  Verifer returned sat in 0.201689 secs.
[07/12 13:28:06]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  792832.050049    0.000244  792622.049805 -31510.522705         0.0
1  792832.050049    0.000244  792632.049805 -31510.522705         0.0
2  792832.050049  199.999756  792732.049805 -31510.522705         0.0
3  793132.049805  400.000000  792932.049805 -31510.522705         0.0
4  793132.049805   65.500000  792932.049805 -31510.522705         0.0
5  793132.049805   50.500000  793131.716797 -31510.522705         0.0
6  793532.050293  400.333496  793132.050049 -31510.522705         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:28:06]  Iteration: 85
[07/12 13:28:11]  Generator returned sat in 4.573812 secs.
[07/12 13:28:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 3/2S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/12 13:28:11]  Improved gap from 0 to 48.4375
[07/12 13:28:12]  Improved number of small numbers from 31 to 41 out of a max of 78
[07/12 13:28:12]  Verifer returned sat in 0.795664 secs.
[07/12 13:28:12]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t     wasted_t  tot_lost_t
0  770578.617432    0.000244  770319.554744 -9298.027644         0.0
1  770578.617432    0.000244  770519.554744 -9298.027644         0.0
2  770578.617432    0.000244  770578.617317 -9298.027644         0.0
3  770867.992244  289.374927  770619.554744 -9298.027644         0.0
4  770867.992244  240.593860  770817.992366 -9298.027644         0.0
5  770867.992244    2.781189  770819.554744 -9246.465144         0.0
6  771060.148604  240.593860  770867.992244 -9246.465144         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:28:12]  Iteration: 86
[07/12 13:28:21]  Generator returned sat in 9.340253 secs.
[07/12 13:28:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + -2)[0m
[07/12 13:28:22]  Improved gap from 1/16384 to 14.0625
[07/12 13:28:22]  Improved number of small numbers from 37 to 78 out of a max of 78
[07/12 13:28:22]  Verifer returned sat in 0.680192 secs.
[07/12 13:28:22]  Counter example: 
[93m   arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  816708.5979   0.000244  816684.472900 -55562.945801         0.0
1  816708.5979   0.000244  816708.597900 -55501.133301         0.0
2  816722.6604  14.062500  816722.660400 -55415.195801         0.0
3  816736.7229  14.062500  816736.722900 -55339.320801         0.0
4  816774.9104  38.187500  816760.847900 -55253.383301         0.0
5  816809.0979  48.250000  816774.910400 -55189.320557         0.0
6  816813.0979  38.187500  816810.847656 -55189.320312         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:28:22]  Iteration: 87
[07/12 13:28:25]  Generator returned sat in 3.165851 secs.
[07/12 13:28:26]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + 0)[0m
[07/12 13:28:26]  Improved gap from 19583/2048 to 10.9375
[07/12 13:28:26]  Improved number of small numbers from 37 to 78 out of a max of 78
[07/12 13:28:26]  Verifer returned sat in 0.776094 secs.
[07/12 13:28:26]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  818366.008301   0.000244  818356.632812 -55581.862305         0.0
1  818366.008301   0.000244  818366.008301 -55502.175293         0.0
2  818389.445557  23.437256  818389.445312 -55425.612305         0.0
3  818400.382812  10.937500  818400.382812 -55336.549805         0.0
4  818433.195312  32.812500  818422.257812 -55258.424805         0.0
5  818472.257568  49.999756  818433.195312 -55197.487061         0.0
6  818472.257568  32.812500  818472.257568 -55197.487061         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:28:27]  Iteration: 88
[07/12 13:28:29]  Generator returned sat in 2.508464 secs.
[07/12 13:28:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + -1)[0m
[07/12 13:28:30]  Improved gap from 0 to 12.5
[07/12 13:28:30]  Improved number of small numbers from 39 to 78 out of a max of 78
[07/12 13:28:30]  Verifer returned sat in 0.456551 secs.
[07/12 13:28:30]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  818350.479248   0.000244  818350.479004 -55574.145996         0.0
1  818376.945312  26.466309  818376.945312 -55513.112305         0.0
2  818389.445557  12.500244  818389.445312 -55425.612305         0.0
3  818401.945557  12.500244  818401.945312 -55351.278809         0.0
4  818439.178467  37.233154  818427.611816 -55263.778809         0.0
5  818477.611572  49.999756  818440.378418 -55201.278564         0.0
6  818477.611572  37.233154  818477.611572 -55201.278564         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:28:30]  Iteration: 89
[07/12 13:28:32]  Generator returned sat in 2.244589 secs.
[07/12 13:28:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + -3/2)[0m
[07/12 13:28:33]  Improved gap from 0 to 12.5
[07/12 13:28:34]  Improved number of small numbers from 35 to 44 out of a max of 78
[07/12 13:28:34]  Verifer returned sat in 1.246481 secs.
[07/12 13:28:34]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t      wasted_t  tot_lost_t
0  817814.363037   0.000244  817795.360861 -55019.028076         0.0
1  817814.363037  19.001953  817814.362937 -54950.529929         0.0
2  817826.863059  12.500122  817826.862937 -54863.030029         0.0
3  817867.362448  40.499512  817842.362326 -54791.029440         0.0
4  817879.862448  37.500122  817867.362448 -54703.529440         0.0
5  817917.362326  49.999878  817879.862448 -54641.029318         0.0
6  817917.362326  37.499756  817917.362326 -54641.029297         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:28:34]  Iteration: 90
[07/12 13:28:37]  Generator returned sat in 2.823623 secs.
[07/12 13:28:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -1/2S_f[0][t-4] + -1/2)[0m
[07/12 13:28:37]  Improved gap from 0 to 12.5
[07/12 13:28:38]  Improved number of small numbers from 33 to 44 out of a max of 78
[07/12 13:28:38]  Verifer returned sat in 1.292791 secs.
[07/12 13:28:38]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  876044.030029   0.000244  876004.597165 -113228.264160         0.0
1  876044.030029   0.000244  876031.530173 -113167.697165         0.0
2  876056.530173  25.000000  876044.030173 -113080.197165         0.0
3  876056.530173   0.000244  876056.530173 -112992.697266         0.0
4  876094.496677  37.966504  876081.863425 -112918.163669         0.0
5  876131.863303  49.999878  876094.496677 -112855.530295         0.0
6  876131.863303  37.366504  876131.863303 -112855.530273         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:28:38]  Iteration: 91
[07/12 13:28:46]  Generator returned sat in 7.983364 secs.
[07/12 13:28:47]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/12 13:28:47]  Improved gap from 2023/204800 to 23.4375
[07/12 13:28:47]  Improved number of small numbers from 41 to 78 out of a max of 78
[07/12 13:28:47]  Verifer returned sat in 0.254330 secs.
[07/12 13:28:47]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  876044.030273    0.000244  875869.030273 -113167.697021         0.0
1  876044.030273    0.000244  875944.030273 -113167.697021         0.0
2  876144.030029  199.999756  876120.592529 -113167.697021         0.0
3  876190.905029   70.312500  876167.467529 -113114.572266         0.0
4  876223.717529   56.250000  876200.280029 -113047.384766         0.0
5  876223.717529    0.010000  876223.717529 -112970.822266         0.0
6  876247.155029   23.437500  876247.155029 -112970.822266         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:28:47]  Iteration: 92
[07/12 13:28:52]  Generator returned sat in 4.778064 secs.
[07/12 13:28:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -2S_f[0][t-2] + 1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/12 13:28:53]  Improved gap from 0 to 23.4375
[07/12 13:28:53]  Improved number of small numbers from 37 to 44 out of a max of 78
[07/12 13:28:53]  Verifer returned sat in 1.232108 secs.
[07/12 13:28:53]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  922755.430908   0.000244  922753.870027 -159977.537354         0.0
1  922755.430908   1.560791  922755.430818 -159902.535554         0.0
2  922778.868440  23.437622  922778.868318 -159825.973145         0.0
3  922842.931306  64.062988  922819.493806 -159766.598542         0.0
4  922869.493684  49.999878  922842.931306 -159693.160920         0.0
5  922869.493684  26.562256  922869.493684 -159616.598420         0.0
6  922917.931245  48.437561  922892.931184 -159616.598389         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:28:54]  Iteration: 93
[07/12 13:29:04]  Generator returned sat in 10.234411 secs.
[07/12 13:29:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + -3/2)[0m
[07/12 13:29:04]  Improved gap from 13388663/819200 to 23.4375
[07/12 13:29:04]  Improved number of small numbers from 34 to 78 out of a max of 78
[07/12 13:29:04]  Verifer returned sat in 0.497318 secs.
[07/12 13:29:04]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  923325.025391   0.000244  923278.150391 -159962.629639         0.0
1  923325.025391   0.000244  923301.587891 -159909.504639         0.0
2  923325.025391   0.000244  923325.025391 -159832.942139         0.0
3  923382.119385  57.093994  923348.462891 -159766.598633         0.0
4  923382.119385  33.656250  923382.119385 -159690.036133         0.0
5  923425.994629  43.875244  923405.556885 -159613.473633         0.0
6  923439.213135  33.656250  923428.994385 -159613.473633         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:29:05]  Iteration: 94
[07/12 13:29:08]  Generator returned sat in 2.918263 secs.
[07/12 13:29:08]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + -3/2)[0m
[07/12 13:29:08]  Improved gap from 0 to 23.4375
[07/12 13:29:08]  Improved number of small numbers from 35 to 78 out of a max of 78
[07/12 13:29:08]  Verifer returned sat in 0.364661 secs.
[07/12 13:29:08]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  923275.307129    0.000244  923175.306885 -159859.786377         0.0
1  923275.307129   99.999756  923175.307129 -159859.786377         0.0
2  923275.307129    0.000244  923275.307129 -159812.786133         0.0
3  923379.806885  104.499756  923328.307129 -159764.286377         0.0
4  923379.807129   51.500000  923379.806885 -159687.723877         0.0
5  923429.806641   49.999756  923405.556885 -159614.286133         0.0
6  923429.806885   24.250000  923429.806641 -159614.286133         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:29:08]  Iteration: 95
[07/12 13:29:12]  Generator returned sat in 3.344752 secs.
[07/12 13:29:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-4] + -3/2)[0m
[07/12 13:29:12]  Improved gap from 0 to 23.4375
[07/12 13:29:13]  Improved number of small numbers from 31 to 38 out of a max of 79
[07/12 13:29:13]  Verifer returned sat in 1.159296 secs.
[07/12 13:29:13]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  935031.798584   0.000244  935031.798472 -171716.278076         0.0
1  935083.298350  51.499878  935059.860850 -171667.777842         0.0
2  935083.298350   0.000244  935083.298350 -171591.215342         0.0
3  935134.798228  51.499878  935106.735850 -171519.277720         0.0
4  935154.423289  47.687439  935134.798228 -171442.715220         0.0
5  935184.798105  49.999878  935158.235728 -171369.277598         0.0
6  935205.923167  47.687439  935184.798105 -171369.277588         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:29:13]  Iteration: 96
[07/12 13:29:17]  Generator returned sat in 3.876350 secs.
[07/12 13:29:17]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:29:18]  Improved gap from 263/16 to 21.875
[07/12 13:29:18]  Improved number of small numbers from 30 to 36 out of a max of 78
[07/12 13:29:18]  Verifer returned sat in 1.046819 secs.
[07/12 13:29:18]  Counter example: 
[93m     arrival_0,t   cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  934243.871094   0.000244  934243.870879 -171724.840576         0.0
1  934291.870818  47.999939  934269.995818 -171672.840281         0.0
2  934291.870818   0.000244  934291.870818 -171594.715281         0.0
3  934339.870757  47.999939  934313.745818 -171520.840220         0.0
4  934361.620788  47.874969  934339.870757 -171442.715220         0.0
5  934389.870696  49.999939  934361.745757 -171370.840159         0.0
6  934409.620727  47.874969  934389.870696 -171370.840088         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:29:19]  Iteration: 97
[07/12 13:29:33]  Generator returned sat in 13.841126 secs.
[07/12 13:29:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + -1/2)[0m
[07/12 13:29:33]  Improved gap from 0 to 98.4375
[07/12 13:29:33]  Improved number of small numbers from 42 to 46 out of a max of 78
[07/12 13:29:33]  Verifer returned sat in 0.734283 secs.
[07/12 13:29:33]  Counter example: 
[93m     arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  946158.121338    0.000244  946158.121155 -171343.090739         0.0
1  946158.121338    0.000061  946158.121277 -171343.090739         0.0
2  946358.120972  199.999695  946358.120911 -171343.090739         0.0
3  946557.620850  199.499939  946458.121277 -171343.090739         0.0
4  946557.620850   99.499512  946459.183350 -171342.590312         0.0
5  946957.620911  498.437561  946557.620850 -171342.590312         0.0
6  946957.620911  102.125305  946657.620850 -171342.590312         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:29:34]  Iteration: 98
[07/12 13:29:37]  Generator returned sat in 3.397688 secs.
[07/12 13:29:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + 0)[0m
[07/12 13:29:37]  Improved gap from 0 to 98.4375
[07/12 13:29:38]  Improved number of small numbers from 30 to 36 out of a max of 78
[07/12 13:29:38]  Verifer returned sat in 0.791563 secs.
[07/12 13:29:38]  Counter example: 
[93m    arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  9.998261e+05    0.000244  999326.121490 -224511.095938         0.0
1  9.998261e+05    0.000244  999426.126475 -224511.095938         0.0
2  9.998261e+05  300.005127  999426.126475 -224511.095938         0.0
3  9.998261e+05    0.000244  999626.126414 -224511.095938         0.0
4  9.998261e+05    0.010031  999726.126475 -224511.095938         0.0
5  9.998261e+05   99.999878  999727.688884 -224511.095846         0.0
6  1.000226e+06  498.437531  999826.126384 -224511.095846         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:29:38]  Iteration: 99
[07/12 13:29:45]  Generator returned sat in 6.133330 secs.
[07/12 13:29:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + -2)[0m
[07/12 13:29:45]  Improved gap from 0 to 96.875
[07/12 13:29:45]  Improved number of small numbers from 50 to 78 out of a max of 78
[07/12 13:29:45]  Verifer returned sat in 0.339649 secs.
[07/12 13:29:45]  Counter example: 
[93m    arrival_0,t    cwnd_0,t    service_0,t       wasted_t  tot_lost_t
0  9.993296e+05    0.000244  999130.376465 -224414.595947         0.0
1  9.993296e+05    0.000244  999329.626465 -224414.595947         0.0
2  9.993296e+05    0.000244  999329.626465 -224414.221191         0.0
3  9.995289e+05  199.250000  999528.876465 -224414.221191         0.0
4  9.997261e+05  197.250000  999629.251709 -224414.221191         0.0
5  9.997261e+05   96.874756  999629.251709 -224411.096191         0.0
6  1.000126e+06  496.875244  999726.126709 -224411.096191         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:29:45]  Iteration: 100
[07/12 13:29:55]  Generator returned sat in 9.359262 secs.
[07/12 13:29:55]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1S_f[0][t-4] + 1)[0m
[07/12 13:29:55]  Improved gap from 1/16384 to 48.4375
[07/12 13:29:55]  Improved number of small numbers from 54 to 60 out of a max of 78
[07/12 13:29:55]  Verifer returned sat in 0.378665 secs.
[07/12 13:29:55]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.012542e+06    0.000244  1.012341e+06 -237626.096558         0.0
1  1.012542e+06    0.000244  1.012541e+06 -237626.096558         0.0
2  1.012542e+06    0.562256  1.012542e+06 -237575.096436         0.0
3  1.012590e+06   48.437500  1.012590e+06 -237528.783691         0.0
4  1.012792e+06  201.562378  1.012742e+06 -237528.783691         0.0
5  1.012792e+06   49.999878  1.012744e+06 -237477.221191         0.0
6  1.012945e+06  201.562378  1.012792e+06 -237477.221191         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:29:55]  Iteration: 101
[07/12 13:30:07]  Generator returned sat in 11.790898 secs.
[07/12 13:30:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -1/2S_f[0][t-4] + -2)[0m
[07/12 13:30:08]  Improved gap from 0 to 48.4375
[07/12 13:30:08]  Improved number of small numbers from 50 to 78 out of a max of 78
[07/12 13:30:08]  Verifer returned sat in 0.376595 secs.
[07/12 13:30:08]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.012347e+06    0.000244  1.012342e+06 -237434.803223         0.0
1  1.012347e+06    0.000244  1.012347e+06 -237434.803223         0.0
2  1.012442e+06   95.750488  1.012442e+06 -237434.803223         0.0
3  1.012792e+06  349.999756  1.012641e+06 -237434.803223         0.0
4  1.012792e+06  151.124512  1.012742e+06 -237434.803223         0.0
5  1.012792e+06   47.562744  1.012744e+06 -237384.802979         0.0
6  1.012792e+06   48.437256  1.012792e+06 -237384.802979         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:30:08]  Iteration: 102
[07/12 13:30:13]  Generator returned sat in 5.322225 secs.
[07/12 13:30:14]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + -2)[0m
[07/12 13:30:14]  Improved gap from 0 to 23.4375
[07/12 13:30:14]  Improved number of small numbers from 49 to 54 out of a max of 78
[07/12 13:30:14]  Verifer returned sat in 0.534266 secs.
[07/12 13:30:14]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.012648e+06   0.000244  1.012548e+06 -237434.803223         0.0
1  1.012648e+06   0.000244  1.012648e+06 -237434.803223         0.0
2  1.012648e+06   0.000122  1.012648e+06 -237358.240723         0.0
3  1.012671e+06  23.437500  1.012671e+06 -237281.678467         0.0
4  1.012731e+06  59.718811  1.012705e+06 -237217.959534         0.0
5  1.012743e+06  38.015778  1.012731e+06 -237141.397034         0.0
6  1.012787e+06  56.156372  1.012755e+06 -237141.396973         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:30:14]  Iteration: 103
[07/12 13:30:24]  Generator returned sat in 9.493539 secs.
[07/12 13:30:24]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:30:24]  Improved gap from 0 to 23.4375
[07/12 13:30:25]  Improved number of small numbers from 37 to 49 out of a max of 78
[07/12 13:30:25]  Verifer returned sat in 0.887366 secs.
[07/12 13:30:25]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.038201e+06   0.000244  1.038159e+06 -263045.647217         0.0
1  1.038201e+06   0.000244  1.038175e+06 -262988.022217         0.0
2  1.038201e+06  25.687439  1.038201e+06 -262911.459819         0.0
3  1.038225e+06  23.437561  1.038225e+06 -262834.897319         0.0
4  1.038273e+06  48.875000  1.038248e+06 -262760.334961         0.0
5  1.038298e+06  49.999939  1.038273e+06 -262684.897257         0.0
6  1.038322e+06  48.875000  1.038298e+06 -262684.897217         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:30:25]  Iteration: 104
[07/12 13:30:38]  Generator returned sat in 12.782136 secs.
[07/12 13:30:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + 0)[0m
[07/12 13:30:38]  Improved gap from 0 to 0
[07/12 13:30:39]  Improved number of small numbers from 33 to 47 out of a max of 78
[07/12 13:30:39]  Verifer returned sat in 0.799767 secs.
[07/12 13:30:39]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.091302e+06  0.000244  1.091302e+06 -316189.334717         0.0
1  1.091302e+06  0.000244  1.091302e+06 -316089.335205         0.0
2  1.091302e+06  0.006728  1.091302e+06 -315989.341668         0.0
3  1.091302e+06  0.000061  1.091302e+06 -315889.341668         0.0
4  1.091302e+06  0.010061  1.091302e+06 -315789.351729         0.0
5  1.091302e+06  0.010000  1.091302e+06 -315689.361572         0.0
6  1.091302e+06  0.010061  1.091302e+06 -315689.361572         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:30:39]  Iteration: 105
[07/12 13:30:45]  Generator returned sat in 5.914363 secs.
[07/12 13:30:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/12 13:30:46]  Improved gap from 1/8192 to 48.4375
[07/12 13:30:46]  Improved number of small numbers from 34 to 54 out of a max of 78
[07/12 13:30:46]  Verifer returned sat in 0.996345 secs.
[07/12 13:30:46]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.106857e+06    0.000244  1.106691e+06 -315889.341553         0.0
1  1.106857e+06    0.000244  1.106705e+06 -315889.341553         0.0
2  1.106857e+06    0.000244  1.106857e+06 -315889.341553         0.0
3  1.107153e+06  296.875000  1.106956e+06 -315889.341553         0.0
4  1.107153e+06  170.302805  1.107103e+06 -315889.341553         0.0
5  1.107153e+06    0.010000  1.107105e+06 -315837.779297         0.0
6  1.107275e+06  170.302805  1.107153e+06 -315837.779297         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:30:47]  Iteration: 106
[07/12 13:30:51]  Generator returned sat in 3.876009 secs.
[07/12 13:30:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 0)[0m
[07/12 13:30:51]  Improved gap from 0 to 48.4375
[07/12 13:30:51]  Improved number of small numbers from 35 to 78 out of a max of 78
[07/12 13:30:51]  Verifer returned sat in 0.482358 secs.
[07/12 13:30:51]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.106769e+06    0.000244  1.106669e+06 -315953.298096         0.0
1  1.106769e+06    0.000244  1.106769e+06 -315953.298096         0.0
2  1.106933e+06  164.453369  1.106933e+06 -315953.298096         0.0
3  1.107021e+06   87.109619  1.107021e+06 -315953.298096         0.0
4  1.107217e+06  196.875000  1.107169e+06 -315953.298096         0.0
5  1.107217e+06   48.437500  1.107169e+06 -315901.735840         0.0
6  1.107348e+06  179.101562  1.107217e+06 -315901.735840         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:30:51]  Iteration: 107
[07/12 13:31:02]  Generator returned sat in 10.307086 secs.
[07/12 13:31:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -2)[0m
[07/12 13:31:02]  Improved gap from 0 to 3.125
[07/12 13:31:03]  Improved number of small numbers from 37 to 45 out of a max of 78
[07/12 13:31:03]  Verifer returned sat in 0.967055 secs.
[07/12 13:31:03]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.103312e+06  0.000244  1.103312e+06 -316241.839681         0.0
1  1.103317e+06  5.208415  1.103312e+06 -316147.048096         0.0
2  1.103317e+06  0.000244  1.103317e+06 -316050.173096         0.0
3  1.103323e+06  6.250000  1.103320e+06 -315953.298096         0.0
4  1.103329e+06  8.937622  1.103323e+06 -315859.110718         0.0
5  1.103329e+06  5.812500  1.103329e+06 -315762.235840         0.0
6  1.103337e+06  8.500122  1.103332e+06 -315762.235840         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:31:03]  Iteration: 108
[07/12 13:31:07]  Generator returned sat in 3.955445 secs.
[07/12 13:31:07]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1)[0m
[07/12 13:31:08]  Improved gap from 2 to 1.5625
[07/12 13:31:09]  Improved number of small numbers from 38 to 51 out of a max of 78
[07/12 13:31:09]  Verifer returned sat in 1.389788 secs.
[07/12 13:31:09]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.103832e+06    0.000244  1.103728e+06 -316658.455566         0.0
1  1.103832e+06  103.472168  1.103828e+06 -316658.455566         0.0
2  1.103832e+06    0.000244  1.103829e+06 -316561.927710         0.0
3  1.103832e+06    2.604289  1.103832e+06 -316463.490210         0.0
4  1.103835e+06    2.906250  1.103833e+06 -316365.052710         0.0
5  1.103838e+06    4.468750  1.103835e+06 -316267.958960         0.0
6  1.103838e+06    2.906250  1.103838e+06 -316267.958740         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:31:09]  Iteration: 109
[07/12 13:31:13]  Generator returned sat in 3.925668 secs.
[07/12 13:31:13]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -1/2)[0m
[07/12 13:31:13]  Improved gap from 0 to 0
[07/12 13:31:14]  Improved number of small numbers from 35 to 46 out of a max of 78
[07/12 13:31:14]  Verifer returned sat in 0.857991 secs.
[07/12 13:31:14]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.103341e+06  0.000244  1.103241e+06 -316658.455566         0.0
1  1.103341e+06  0.000244  1.103341e+06 -316658.455566         0.0
2  1.103341e+06  0.000244  1.103341e+06 -316558.455627         0.0
3  1.103341e+06  0.000122  1.103341e+06 -316458.795410         0.0
4  1.103341e+06  0.339980  1.103341e+06 -316358.795607         0.0
5  1.103341e+06  0.010000  1.103341e+06 -316258.805546         0.0
6  1.103341e+06  0.010000  1.103341e+06 -316258.805420         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:31:14]  Iteration: 110
[07/12 13:31:29]  Generator returned sat in 14.439888 secs.
[07/12 13:31:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 1S_f[0][t-2] + 3/2S_f[0][t-3] + -2S_f[0][t-4] + -2)[0m
[07/12 13:31:29]  Improved gap from 1/8192 to 48.4375
[07/12 13:31:30]  Improved number of small numbers from 34 to 46 out of a max of 78
[07/12 13:31:30]  Verifer returned sat in 0.936792 secs.
[07/12 13:31:30]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.102945e+06    0.000244  1.102806e+06 -316358.795654         0.0
1  1.102945e+06    0.000244  1.102945e+06 -316358.795654         0.0
2  1.103045e+06  100.000000  1.102969e+06 -316358.795607         0.0
3  1.103045e+06   76.390381  1.103045e+06 -316358.795607         0.0
4  1.103295e+06  249.999878  1.103245e+06 -316358.795607         0.0
5  1.103295e+06    0.010000  1.103247e+06 -316308.795485         0.0
6  1.103497e+06  249.999878  1.103295e+06 -316308.795485         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:31:30]  Iteration: 111
[07/12 13:31:37]  Generator returned sat in 6.725216 secs.
[07/12 13:31:37]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + 1/2S_f[0][t-2] + -3/2S_f[0][t-3] + -3/2)[0m
[07/12 13:31:37]  Improved gap from 0 to 1.5625
[07/12 13:31:38]  Improved number of small numbers from 32 to 48 out of a max of 78
[07/12 13:31:38]  Verifer returned sat in 1.032827 secs.
[07/12 13:31:38]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.103287e+06  0.000244  1.103185e+06 -316698.826857         0.0
1  1.103287e+06  0.000244  1.103281e+06 -316698.826857         0.0
2  1.103287e+06  0.000244  1.103285e+06 -316600.389357         0.0
3  1.103287e+06  1.562622  1.103287e+06 -316501.951904         0.0
4  1.103294e+06  6.843628  1.103290e+06 -316407.232985         0.0
5  1.103294e+06  3.843750  1.103294e+06 -316308.795485         0.0
6  1.103301e+06  6.843628  1.103295e+06 -316308.795410         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:31:38]  Iteration: 112
[07/12 13:31:51]  Generator returned sat in 12.797085 secs.
[07/12 13:31:51]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + -1S_f[0][t-4] + 3/2)[0m
[07/12 13:31:51]  Improved gap from 1/16384 to 48.4375
[07/12 13:31:51]  Improved number of small numbers from 51 to 78 out of a max of 78
[07/12 13:31:51]  Verifer returned sat in 0.261627 secs.
[07/12 13:31:51]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.134675e+06    0.000244  1.134675e+06 -348284.607422         0.0
1  1.134871e+06  196.312744  1.134871e+06 -348284.607422         0.0
2  1.134912e+06   40.437500  1.134871e+06 -348233.044922         0.0
3  1.134968e+06   96.875000  1.134920e+06 -348181.482422         0.0
4  1.135117e+06  197.812744  1.135068e+06 -348181.482422         0.0
5  1.135117e+06   49.937500  1.135068e+06 -348130.919922         0.0
6  1.135266e+06  197.812744  1.135118e+06 -348130.919922         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:31:52]  Iteration: 113
[07/12 13:31:59]  Generator returned sat in 7.203681 secs.
[07/12 13:31:59]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/12 13:31:59]  Improved gap from 0 to 100
[07/12 13:31:59]  Improved number of small numbers from 66 to 78 out of a max of 78
[07/12 13:31:59]  Verifer returned sat in 0.235479 secs.
[07/12 13:31:59]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.134871e+06    0.000244  1.134771e+06 -348384.607422         0.0
1  1.134871e+06  100.000000  1.134871e+06 -348384.607422         0.0
2  1.134971e+06  100.000244  1.134971e+06 -348384.607422         0.0
3  1.135573e+06  601.500244  1.135071e+06 -348384.607422         0.0
4  1.135573e+06  251.500000  1.135271e+06 -348384.607422         0.0
5  1.135573e+06  301.500000  1.135371e+06 -348384.607422         0.0
6  1.135773e+06  401.500000  1.135371e+06 -348384.607422         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:32:00]  Iteration: 114
[07/12 13:32:11]  Generator returned sat in 11.037822 secs.
[07/12 13:32:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + -2)[0m
[07/12 13:32:11]  Improved gap from 1/16384 to 23.4375
[07/12 13:32:11]  Improved number of small numbers from 39 to 78 out of a max of 78
[07/12 13:32:11]  Verifer returned sat in 0.243842 secs.
[07/12 13:32:11]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t      wasted_t  tot_lost_t
0  1.135050e+06    0.000244  1.134850e+06 -348363.17041         0.0
1  1.135050e+06    0.000244  1.134950e+06 -348363.17041         0.0
2  1.135050e+06  100.000000  1.135044e+06 -348363.17041         0.0
3  1.135173e+06  129.687500  1.135101e+06 -348363.17041         0.0
4  1.135173e+06   55.375000  1.135150e+06 -348286.60791         0.0
5  1.135197e+06   46.875000  1.135173e+06 -348210.04541         0.0
6  1.135197e+06   21.437500  1.135197e+06 -348210.04541         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:32:11]  Iteration: 115
[07/12 13:32:17]  Generator returned sat in 5.749856 secs.
[07/12 13:32:17]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + -2)[0m
[07/12 13:32:18]  Improved gap from 0 to 15.625
[07/12 13:32:19]  Improved number of small numbers from 30 to 36 out of a max of 78
[07/12 13:32:19]  Verifer returned sat in 1.443773 secs.
[07/12 13:32:19]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.134683e+06   0.000244  1.134683e+06 -348327.085205         0.0
1  1.134724e+06  40.843689  1.134724e+06 -348283.553643         0.0
2  1.134740e+06  15.625122  1.134740e+06 -348199.178643         0.0
3  1.134755e+06  15.625122  1.134755e+06 -348114.803711         0.0
4  1.134817e+06  62.281067  1.134784e+06 -348062.115723         0.0
5  1.134834e+06  49.999878  1.134818e+06 -347977.740898         0.0
6  1.134880e+06  62.281067  1.134834e+06 -347977.740723         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:32:19]  Iteration: 116
[07/12 13:32:30]  Generator returned sat in 10.515427 secs.
[07/12 13:32:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + -2)[0m
[07/12 13:32:30]  Improved gap from 1/16384 to 34.375
[07/12 13:32:31]  Improved number of small numbers from 36 to 52 out of a max of 78
[07/12 13:32:31]  Verifer returned sat in 0.725271 secs.
[07/12 13:32:31]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.185165e+06    0.000244  1.184993e+06 -348168.581787         0.0
1  1.185165e+06    0.000244  1.185153e+06 -348168.581787         0.0
2  1.185165e+06   11.555664  1.185165e+06 -348114.803650         0.0
3  1.185450e+06  284.666382  1.185200e+06 -348114.803650         0.0
4  1.185450e+06  249.999756  1.185400e+06 -348114.803650         0.0
5  1.185450e+06   49.999756  1.185415e+06 -348064.803528         0.0
6  1.185665e+06  249.999756  1.185450e+06 -348064.803528         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:32:31]  Iteration: 117
[07/12 13:32:41]  Generator returned sat in 10.519598 secs.
[07/12 13:32:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/12 13:32:42]  Improved gap from 335857/8192 to 48.4375
[07/12 13:32:42]  Improved number of small numbers from 36 to 78 out of a max of 78
[07/12 13:32:42]  Verifer returned sat in 0.357347 secs.
[07/12 13:32:42]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.201702e+06    0.000244  1.201646e+06 -364760.756104         0.0
1  1.201702e+06    0.000244  1.201646e+06 -364717.630127         0.0
2  1.201702e+06    0.000244  1.201702e+06 -364677.379883         0.0
3  1.202011e+06  308.187256  1.201860e+06 -364677.379883         0.0
4  1.202011e+06  129.312988  1.201961e+06 -364677.379883         0.0
5  1.202011e+06   49.999512  1.201962e+06 -364625.817383         0.0
6  1.202011e+06   30.218506  1.202011e+06 -364625.817383         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:32:42]  Iteration: 118
[07/12 13:32:48]  Generator returned sat in 5.918653 secs.
[07/12 13:32:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-2] + -1S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/12 13:32:49]  Improved gap from 1/16384 to 15.625
[07/12 13:32:49]  Improved number of small numbers from 47 to 59 out of a max of 78
[07/12 13:32:49]  Verifer returned sat in 0.703806 secs.
[07/12 13:32:49]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.225932e+06   0.000244  1.225932e+06 -365011.234253         0.0
1  1.225932e+06   0.000244  1.225932e+06 -364926.859375         0.0
2  1.225962e+06  30.208252  1.225962e+06 -364857.067505         0.0
3  1.225993e+06  31.249756  1.225977e+06 -364772.692627         0.0
4  1.226030e+06  53.124878  1.225996e+06 -364710.192383         0.0
5  1.226044e+06  47.916595  1.226030e+06 -364625.817383         0.0
6  1.226084e+06  53.124878  1.226046e+06 -364625.817383         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:32:49]  Iteration: 119
[07/12 13:33:02]  Generator returned sat in 12.430017 secs.
[07/12 13:33:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:33:02]  Improved gap from 0 to 21.875
[07/12 13:33:02]  Improved number of small numbers from 40 to 78 out of a max of 78
[07/12 13:33:02]  Verifer returned sat in 0.385765 secs.
[07/12 13:33:02]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.364536e+06   0.000244  1.364436e+06 -364916.380127         0.0
1  1.364536e+06   0.000244  1.364535e+06 -364916.380127         0.0
2  1.364536e+06   1.000000  1.364536e+06 -364838.255127         0.0
3  1.364558e+06  21.875000  1.364558e+06 -364760.130127         0.0
4  1.364622e+06  63.437500  1.364596e+06 -364701.692627         0.0
5  1.364639e+06  43.156250  1.364622e+06 -364625.817383         0.0
6  1.364685e+06  63.437500  1.364646e+06 -364625.817383         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:33:03]  Iteration: 120
[07/12 13:33:11]  Generator returned sat in 8.779902 secs.
[07/12 13:33:12]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-2] + -2S_f[0][t-3] + 1/2S_f[0][t-4] + 2)[0m
[07/12 13:33:12]  Improved gap from 2023/204800 to 48.4375
[07/12 13:33:13]  Improved number of small numbers from 36 to 50 out of a max of 78
[07/12 13:33:13]  Verifer returned sat in 1.324324 secs.
[07/12 13:33:13]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.364204e+06    0.000244  1.364036e+06 -364825.797363         0.0
1  1.364204e+06    0.000244  1.364135e+06 -364825.797363         0.0
2  1.364553e+06  417.793660  1.364299e+06 -364825.797363         0.0
3  1.364553e+06  253.125000  1.364353e+06 -364825.797363         0.0
4  1.364553e+06  199.562073  1.364503e+06 -364825.797363         0.0
5  1.364553e+06    0.010000  1.364504e+06 -364774.235107         0.0
6  1.364704e+06  199.562073  1.364553e+06 -364774.235107         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:33:13]  Iteration: 121
[07/12 13:33:29]  Generator returned sat in 15.800909 secs.
[07/12 13:33:29]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -2)[0m
[07/12 13:33:30]  Improved gap from 0 to 3.125
[07/12 13:33:30]  Improved number of small numbers from 45 to 78 out of a max of 78
[07/12 13:33:30]  Verifer returned sat in 0.554687 secs.
[07/12 13:33:30]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.368491e+06  0.000244  1.368391e+06 -364825.797607         0.0
1  1.368491e+06  0.000244  1.368488e+06 -364825.797607         0.0
2  1.368491e+06  0.000244  1.368491e+06 -364728.922607         0.0
3  1.368498e+06  6.250000  1.368494e+06 -364632.047607         0.0
4  1.368500e+06  5.812500  1.368498e+06 -364535.172607         0.0
5  1.368503e+06  5.812500  1.368501e+06 -364438.297607         0.0
6  1.368507e+06  5.812500  1.368504e+06 -364438.297607         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:33:30]  Iteration: 122
[07/12 13:33:42]  Generator returned sat in 11.701958 secs.
[07/12 13:33:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1/2)[0m
[07/12 13:33:42]  Verifer returned unsat in 0.041023 secs.
[07/12 13:33:42]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1/2)[0m
[07/12 13:33:42]  Iteration: 123
[07/12 13:33:56]  Generator returned sat in 14.035361 secs.
[07/12 13:33:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -3/2S_f[0][t-2] + 1S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:33:56]  Improved gap from 0 to 48.4375
[07/12 13:33:57]  Improved number of small numbers from 59 to 78 out of a max of 78
[07/12 13:33:57]  Verifer returned sat in 0.324876 secs.
[07/12 13:33:57]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.369620e+06    0.000244  1.369529e+06 -365967.360596         0.0
1  1.369620e+06    0.000244  1.369533e+06 -365954.672363         0.0
2  1.369620e+06   87.311768  1.369620e+06 -365942.860107         0.0
3  1.369957e+06  336.625244  1.369808e+06 -365942.860107         0.0
4  1.369957e+06  148.437500  1.369907e+06 -365942.860107         0.0
5  1.369957e+06   49.999756  1.369908e+06 -365891.297607         0.0
6  1.369957e+06   48.437256  1.369957e+06 -365891.297607         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:33:57]  Iteration: 124
[07/12 13:34:04]  Generator returned sat in 7.214901 secs.
[07/12 13:34:04]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:34:04]  Verifer returned unsat in 0.033746 secs.
[07/12 13:34:04]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:34:04]  Iteration: 125
[07/12 13:34:10]  Generator returned sat in 5.748405 secs.
[07/12 13:34:10]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1/2S_f[0][t-2] + -1S_f[0][t-4] + 2)[0m
[07/12 13:34:10]  Improved gap from 1/16384 to 14.0625
[07/12 13:34:11]  Improved number of small numbers from 42 to 65 out of a max of 78
[07/12 13:34:11]  Verifer returned sat in 0.608686 secs.
[07/12 13:34:11]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.369606e+06   0.000244  1.369555e+06 -365989.922852         0.0
1  1.369606e+06   0.000244  1.369606e+06 -365954.672363         0.0
2  1.369620e+06  14.062500  1.369620e+06 -365868.734863         0.0
3  1.369634e+06  14.062500  1.369634e+06 -365782.797607         0.0
4  1.369708e+06  73.781006  1.369674e+06 -365744.421875         0.0
5  1.369724e+06  49.999878  1.369710e+06 -365658.484497         0.0
6  1.369784e+06  73.780945  1.369724e+06 -365658.484375         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:34:11]  Iteration: 126
[07/12 13:34:33]  Generator returned sat in 21.413131 secs.
[07/12 13:34:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + -2)[0m
[07/12 13:34:33]  Improved gap from 1/8192 to 1.5625
[07/12 13:34:33]  Improved number of small numbers from 48 to 78 out of a max of 78
[07/12 13:34:33]  Verifer returned sat in 0.483372 secs.
[07/12 13:34:33]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.369079e+06   0.000244  1.369030e+06 -365989.922852         0.0
1  1.369079e+06   0.000244  1.369076e+06 -365893.048096         0.0
2  1.369079e+06   0.000244  1.369079e+06 -365794.610596         0.0
3  1.369128e+06  48.874756  1.369080e+06 -365741.922852         0.0
4  1.369129e+06  48.437256  1.369128e+06 -365643.485352         0.0
5  1.369178e+06  49.999756  1.369129e+06 -365591.922607         0.0
6  1.369178e+06  48.437256  1.369178e+06 -365591.922607         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:34:34]  Iteration: 127
[07/12 13:34:39]  Generator returned sat in 5.513547 secs.
[07/12 13:34:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + -1)[0m
[07/12 13:34:40]  Improved gap from 2305/4096 to 0
[07/12 13:34:40]  Improved number of small numbers from 36 to 78 out of a max of 78
[07/12 13:34:40]  Verifer returned sat in 0.404408 secs.
[07/12 13:34:40]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.369707e+06  0.000244  1.369707e+06 -367121.706299         0.0
1  1.369707e+06  0.000244  1.369707e+06 -367021.716553         0.0
2  1.369707e+06  0.000244  1.369707e+06 -366922.716309         0.0
3  1.369708e+06  1.000000  1.369708e+06 -366822.716553         0.0
4  1.369708e+06  0.010254  1.369708e+06 -366722.726562         0.0
5  1.369708e+06  0.010000  1.369708e+06 -366622.726562         0.0
6  1.369709e+06  0.010010  1.369708e+06 -366622.726562         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:34:40]  Iteration: 128
[07/12 13:34:46]  Generator returned sat in 5.621444 secs.
[07/12 13:34:46]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + -1/2)[0m
[07/12 13:34:46]  Improved gap from 0 to 0
[07/12 13:34:46]  Improved number of small numbers from 34 to 78 out of a max of 78
[07/12 13:34:46]  Verifer returned sat in 0.479177 secs.
[07/12 13:34:46]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.369104e+06   0.000244  1.369104e+06 -367121.716309         0.0
1  1.369154e+06  50.009766  1.369154e+06 -367021.716553         0.0
2  1.369154e+06   0.000244  1.369154e+06 -366922.216553         0.0
3  1.369155e+06   0.510010  1.369155e+06 -366822.226562         0.0
4  1.369205e+06  50.009766  1.369155e+06 -366772.226318         0.0
5  1.369205e+06   0.010010  1.369205e+06 -366672.226318         0.0
6  1.369255e+06  50.009766  1.369205e+06 -366672.226318         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:34:47]  Iteration: 129
[07/12 13:34:52]  Generator returned sat in 5.588782 secs.
[07/12 13:34:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-2] + -1/2S_f[0][t-3] + -1S_f[0][t-4] + -1/2)[0m
[07/12 13:34:53]  Improved gap from 0 to 18.75
[07/12 13:34:53]  Improved number of small numbers from 47 to 55 out of a max of 78
[07/12 13:34:53]  Verifer returned sat in 1.063690 secs.
[07/12 13:34:53]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.368416e+06   0.000244  1.368387e+06 -367055.092041         0.0
1  1.368416e+06  29.624512  1.368416e+06 -367003.466553         0.0
2  1.368435e+06  18.750122  1.368435e+06 -366922.216553         0.0
3  1.368473e+06  37.500000  1.368454e+06 -366840.966797         0.0
4  1.368511e+06  57.249634  1.368480e+06 -366779.466187         0.0
5  1.368526e+06  46.375000  1.368511e+06 -366698.216187         0.0
6  1.368568e+06  57.249634  1.368530e+06 -366698.216064         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:34:54]  Iteration: 130
[07/12 13:35:02]  Generator returned sat in 8.533280 secs.
[07/12 13:35:02]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/12 13:35:03]  Improved gap from 0 to 0
[07/12 13:35:03]  Improved number of small numbers from 42 to 78 out of a max of 78
[07/12 13:35:03]  Verifer returned sat in 0.398499 secs.
[07/12 13:35:03]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.280743e+06   0.000244  1.280643e+06 -279411.446777         0.0
1  1.280743e+06   0.000244  1.280743e+06 -279311.447021         0.0
2  1.280743e+06   0.019531  1.280743e+06 -279211.466309         0.0
3  1.280743e+06   0.000244  1.280743e+06 -279111.466553         0.0
4  1.280793e+06  50.000000  1.280743e+06 -279061.466309         0.0
5  1.280793e+06   0.010010  1.280793e+06 -278961.466309         0.0
6  1.280843e+06  50.000000  1.280793e+06 -278961.466064         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:35:03]  Iteration: 131
[07/12 13:35:09]  Generator returned sat in 5.872608 secs.
[07/12 13:35:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/12 13:35:09]  Verifer returned unsat in 0.046314 secs.
[07/12 13:35:09]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/12 13:35:09]  Iteration: 132
[07/12 13:35:15]  Generator returned sat in 5.174691 secs.
[07/12 13:35:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:35:15]  Verifer returned unsat in 0.049501 secs.
[07/12 13:35:15]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:35:15]  Iteration: 133
[07/12 13:35:27]  Generator returned sat in 11.959789 secs.
[07/12 13:35:27]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + -3/2)[0m
[07/12 13:35:27]  Improved gap from 0 to 98.4375
[07/12 13:35:27]  Improved number of small numbers from 37 to 78 out of a max of 78
[07/12 13:35:27]  Verifer returned sat in 0.385226 secs.
[07/12 13:35:27]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.262902e+06    0.000244  1.262702e+06 -279311.447021         0.0
1  1.262902e+06    0.000244  1.262902e+06 -279311.447021         0.0
2  1.262902e+06    0.000244  1.262902e+06 -279311.447021         0.0
3  1.263102e+06  199.937744  1.263102e+06 -279311.447021         0.0
4  1.263300e+06  198.437744  1.263202e+06 -279311.447021         0.0
5  1.263300e+06   98.375488  1.263202e+06 -279309.884521         0.0
6  1.263700e+06  498.437744  1.263300e+06 -279309.884521         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:35:28]  Iteration: 134
[07/12 13:35:34]  Generator returned sat in 5.798773 secs.
[07/12 13:35:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1S_f[0][t-1] + 2S_f[0][t-2] + 1S_f[0][t-3] + -2S_f[0][t-4] + -1)[0m
[07/12 13:35:34]  Improved gap from 132865/2048 to 98.4375
[07/12 13:35:35]  Improved number of small numbers from 39 to 49 out of a max of 78
[07/12 13:35:35]  Verifer returned sat in 0.920577 secs.
[07/12 13:35:35]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.219280e+06    0.000244  1.219280e+06 -235789.934136         0.0
1  1.219480e+06  200.000000  1.219380e+06 -235789.934136         0.0
2  1.219480e+06    0.000244  1.219380e+06 -235789.934136         0.0
3  1.219778e+06  397.875244  1.219580e+06 -235789.934136         0.0
4  1.219778e+06    0.010000  1.219680e+06 -235789.934136         0.0
5  1.219778e+06   97.875244  1.219680e+06 -235788.371636         0.0
6  1.220179e+06  498.437622  1.219779e+06 -235788.371636         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:35:35]  Iteration: 135
[07/12 13:35:44]  Generator returned sat in 9.213097 secs.
[07/12 13:35:44]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + -1)[0m
[07/12 13:35:45]  Improved gap from 0 to 32.8125
[07/12 13:35:45]  Improved number of small numbers from 32 to 78 out of a max of 78
[07/12 13:35:45]  Verifer returned sat in 0.359514 secs.
[07/12 13:35:45]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.219277e+06    0.000244  1.219277e+06 -235905.559082         0.0
1  1.219436e+06  158.986084  1.219436e+06 -235905.559082         0.0
2  1.219448e+06   11.333496  1.219448e+06 -235838.371826         0.0
3  1.219730e+06  282.811523  1.219482e+06 -235838.371826         0.0
4  1.219730e+06  248.812256  1.219680e+06 -235838.371826         0.0
5  1.219730e+06   49.999268  1.219680e+06 -235788.371582         0.0
6  1.219929e+06  248.812012  1.219730e+06 -235788.371582         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:35:45]  Iteration: 136
[07/12 13:35:53]  Generator returned sat in 7.769694 secs.
[07/12 13:35:53]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + -1)[0m
[07/12 13:35:53]  Improved gap from 1/16384 to 18.75
[07/12 13:35:54]  Improved number of small numbers from 40 to 48 out of a max of 78
[07/12 13:35:54]  Verifer returned sat in 0.749768 secs.
[07/12 13:35:54]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.219407e+06   0.000244  1.219383e+06 -235976.538574         0.0
1  1.219407e+06   0.000244  1.219407e+06 -235919.621826         0.0
2  1.219426e+06  18.750122  1.219426e+06 -235838.371826         0.0
3  1.219463e+06  37.500000  1.219444e+06 -235757.122070         0.0
4  1.219499e+06  54.250000  1.219471e+06 -235692.621826         0.0
5  1.219521e+06  49.999878  1.219499e+06 -235615.371460         0.0
6  1.219553e+06  54.250000  1.219521e+06 -235615.371338         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:35:54]  Iteration: 137
[07/12 13:36:05]  Generator returned sat in 10.435996 secs.
[07/12 13:36:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + -3/2)[0m
[07/12 13:36:05]  Improved gap from 2357223/327680 to 23.4375
[07/12 13:36:05]  Improved number of small numbers from 45 to 78 out of a max of 78
[07/12 13:36:05]  Verifer returned sat in 0.422056 secs.
[07/12 13:36:05]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.201625e+06   0.000244  1.201425e+06 -235972.788574         0.0
1  1.201625e+06   0.000244  1.201425e+06 -235972.788574         0.0
2  1.201625e+06   0.000244  1.201625e+06 -235972.788574         0.0
3  1.201672e+06  47.624756  1.201649e+06 -235920.413574         0.0
4  1.201696e+06  46.875000  1.201672e+06 -235843.851074         0.0
5  1.201696e+06   0.010000  1.201696e+06 -235767.288574         0.0
6  1.201729e+06  33.281250  1.201719e+06 -235767.288574         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:36:05]  Iteration: 138
[07/12 13:36:34]  Generator returned sat in 28.365640 secs.
[07/12 13:36:34]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + -1/2)[0m
[07/12 13:36:34]  Improved gap from 375/16 to 23.4375
[07/12 13:36:34]  Improved number of small numbers from 52 to 78 out of a max of 78
[07/12 13:36:34]  Verifer returned sat in 0.440106 secs.
[07/12 13:36:34]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.201741e+06    0.000244  1.201741e+06 -235919.446045         0.0
1  1.201789e+06   48.660645  1.201789e+06 -235919.446045         0.0
2  1.202108e+06  318.936279  1.201989e+06 -235919.446045         0.0
3  1.202108e+06  118.936279  1.202039e+06 -235919.446045         0.0
4  1.202114e+06   74.659912  1.202089e+06 -235843.851074         0.0
5  1.202114e+06    0.010000  1.202114e+06 -235767.288574         0.0
6  1.202137e+06   23.437500  1.202137e+06 -235767.288574         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:36:35]  Iteration: 139
[07/12 13:36:48]  Generator returned sat in 13.132819 secs.
[07/12 13:36:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:36:48]  Improved gap from 0 to 100
[07/12 13:36:49]  Improved number of small numbers from 49 to 59 out of a max of 78
[07/12 13:36:49]  Verifer returned sat in 0.694080 secs.
[07/12 13:36:49]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.207456e+06    0.000244  1.207456e+06 -235919.446045         0.0
1  1.207556e+06  100.000000  1.207556e+06 -235919.446045         0.0
2  1.207556e+06    0.000122  1.207556e+06 -235919.446045         0.0
3  1.208156e+06  600.000000  1.207755e+06 -235919.446045         0.0
4  1.208156e+06  349.000366  1.207756e+06 -235919.446045         0.0
5  1.208156e+06    1.999512  1.207956e+06 -235919.446045         0.0
6  1.208356e+06  400.000122  1.207956e+06 -235919.446045         0.0
high_util=True, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:36:49]  Iteration: 140
[07/12 13:37:01]  Generator returned sat in 11.980702 secs.
[07/12 13:37:01]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + -2)[0m
[07/12 13:37:01]  Improved gap from 1/8192 to 3.125
[07/12 13:37:02]  Improved number of small numbers from 48 to 60 out of a max of 78
[07/12 13:37:02]  Verifer returned sat in 0.595169 secs.
[07/12 13:37:02]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.130202e+06   0.000244  1.130019e+06 -237708.716777         0.0
1  1.130202e+06   0.000244  1.130202e+06 -237708.716777         0.0
2  1.130205e+06   3.124756  1.130202e+06 -237611.841777         0.0
3  1.130205e+06   3.125244  1.130205e+06 -237514.966797         0.0
4  1.130298e+06  92.624634  1.130251e+06 -237504.466411         0.0
5  1.130298e+06  46.874756  1.130298e+06 -237407.591411         0.0
6  1.130390e+06  92.187134  1.130301e+06 -237407.591309         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:37:02]  Iteration: 141
[07/12 13:37:09]  Generator returned sat in 6.761922 secs.
[07/12 13:37:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/12 13:37:09]  Verifer returned unsat in 0.030543 secs.
[07/12 13:37:09]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/12 13:37:09]  Iteration: 142
[07/12 13:37:16]  Generator returned sat in 6.216872 secs.
[07/12 13:37:16]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + -1/2)[0m
[07/12 13:37:16]  Improved gap from 1/32768 to 0
[07/12 13:37:16]  Improved number of small numbers from 34 to 78 out of a max of 78
[07/12 13:37:16]  Verifer returned sat in 0.443164 secs.
[07/12 13:37:16]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.177880e+06  0.000244  1.177880e+06 -285486.826904         0.0
1  1.177880e+06  0.000244  1.177880e+06 -285386.827148         0.0
2  1.177881e+06  0.509766  1.177881e+06 -285287.336670         0.0
3  1.177881e+06  0.255127  1.177881e+06 -285187.591797         0.0
4  1.177881e+06  0.010000  1.177881e+06 -285087.591797         0.0
5  1.177881e+06  0.010010  1.177881e+06 -284987.601807         0.0
6  1.177881e+06  0.010000  1.177881e+06 -284987.601807         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:37:16]  Iteration: 143
[07/12 13:37:33]  Generator returned sat in 16.699916 secs.
[07/12 13:37:33]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -3/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 0)[0m
[07/12 13:37:34]  Improved gap from 0 to 23.4375
[07/12 13:37:34]  Improved number of small numbers from 33 to 43 out of a max of 78
[07/12 13:37:34]  Verifer returned sat in 1.164851 secs.
[07/12 13:37:34]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.177380e+06   0.000244  1.177347e+06 -284953.945557         0.0
1  1.177380e+06  32.812012  1.177380e+06 -284911.757324         0.0
2  1.177405e+06  24.999939  1.177405e+06 -284835.194954         0.0
3  1.177453e+06  48.437439  1.177428e+06 -284760.194893         0.0
4  1.177480e+06  51.562317  1.177453e+06 -284686.757271         0.0
5  1.177503e+06  49.999878  1.177480e+06 -284610.194824         0.0
6  1.177532e+06  51.562317  1.177503e+06 -284610.194824         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:37:35]  Iteration: 144
[07/12 13:37:42]  Generator returned sat in 7.461786 secs.
[07/12 13:37:42]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 0)[0m
[07/12 13:37:43]  Improved gap from 0 to 0
[07/12 13:37:43]  Improved number of small numbers from 32 to 38 out of a max of 78
[07/12 13:37:43]  Verifer returned sat in 0.773508 secs.
[07/12 13:37:43]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.246365e+06    0.000244  1.246365e+06 -284911.757324         0.0
1  1.246498e+06  133.333110  1.246465e+06 -284911.757324         0.0
2  1.246498e+06    0.000244  1.246498e+06 -284845.090434         0.0
3  1.246532e+06   33.333171  1.246498e+06 -284778.423584         0.0
4  1.246532e+06   33.333171  1.246532e+06 -284678.423604         0.0
5  1.246582e+06   49.999878  1.246532e+06 -284628.423482         0.0
6  1.246582e+06   33.333171  1.246582e+06 -284628.423340         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:37:44]  Iteration: 145
[07/12 13:37:59]  Generator returned sat in 15.861253 secs.
[07/12 13:38:00]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -3/2S_f[0][t-3] + 1S_f[0][t-4] + 2)[0m
[07/12 13:38:00]  Improved gap from 0 to 48.4375
[07/12 13:38:01]  Improved number of small numbers from 32 to 47 out of a max of 78
[07/12 13:38:01]  Verifer returned sat in 1.233289 secs.
[07/12 13:38:01]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.244756e+06    0.000244  1.244506e+06 -284786.571177         0.0
1  1.244756e+06    0.000244  1.244506e+06 -284786.571177         0.0
2  1.244756e+06  250.687256  1.244706e+06 -284786.571177         0.0
3  1.244756e+06    0.000244  1.244756e+06 -284785.695933         0.0
4  1.244934e+06  178.030884  1.244905e+06 -284785.695933         0.0
5  1.244955e+06   49.999878  1.244905e+06 -284735.695811         0.0
6  1.244955e+06   25.531494  1.244955e+06 -284735.695801         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:38:01]  Iteration: 146
[07/12 13:38:15]  Generator returned sat in 13.953819 secs.
[07/12 13:38:15]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -3/2S_f[0][t-4] + 0)[0m
[07/12 13:38:16]  Improved gap from 0 to 48.4375
[07/12 13:38:16]  Improved number of small numbers from 32 to 44 out of a max of 78
[07/12 13:38:16]  Verifer returned sat in 0.940166 secs.
[07/12 13:38:16]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.253776e+06    0.000244  1.253576e+06 -293957.105713         0.0
1  1.253776e+06    0.000244  1.253776e+06 -293957.105713         0.0
2  1.253776e+06    0.520508  1.253776e+06 -293956.584978         0.0
3  1.253976e+06  199.479207  1.253876e+06 -293956.584978         0.0
4  1.254126e+06  249.999878  1.254076e+06 -293956.584978         0.0
5  1.254126e+06   49.999756  1.254077e+06 -293906.584855         0.0
6  1.254526e+06  448.437622  1.254126e+06 -293906.584855         0.0
high_util=False, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:38:17]  Iteration: 147
[07/12 13:38:39]  Generator returned sat in 22.546052 secs.
[07/12 13:38:39]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + -2)[0m
[07/12 13:38:40]  Improved gap from 1/8192 to 23.4375
[07/12 13:38:40]  Improved number of small numbers from 34 to 51 out of a max of 78
[07/12 13:38:40]  Verifer returned sat in 1.108437 secs.
[07/12 13:38:40]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.254391e+06    0.000244  1.254044e+06 -294502.513916         0.0
1  1.254391e+06  347.125244  1.254191e+06 -294502.513916         0.0
2  1.254391e+06  199.999756  1.254291e+06 -294502.513916         0.0
3  1.254391e+06    0.000244  1.254367e+06 -294502.513916         0.0
4  1.254445e+06   77.562317  1.254418e+06 -294456.638636         0.0
5  1.254468e+06   49.999878  1.254445e+06 -294380.076136         0.0
6  1.254468e+06   12.843506  1.254468e+06 -294380.075928         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:38:41]  Iteration: 148
[07/12 13:39:09]  Generator returned sat in 28.351933 secs.
[07/12 13:39:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 2S_f[0][t-1] + -2S_f[0][t-2] + -1/2S_f[0][t-3] + 1/2S_f[0][t-4] + -1)[0m
[07/12 13:39:10]  Improved gap from 1/8192 to 23.4375
[07/12 13:39:10]  Improved number of small numbers from 34 to 52 out of a max of 78
[07/12 13:39:10]  Verifer returned sat in 0.913295 secs.
[07/12 13:39:10]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.254066e+06   0.000244  1.253916e+06 -294378.200928         0.0
1  1.254066e+06   0.000244  1.254043e+06 -294378.200928         0.0
2  1.254135e+06  91.730225  1.254135e+06 -294369.931641         0.0
3  1.254192e+06  57.374634  1.254192e+06 -294327.305923         0.0
4  1.254242e+06  49.999878  1.254216e+06 -294253.868301         0.0
5  1.254242e+06   0.010000  1.254242e+06 -294177.305801         0.0
6  1.254266e+06  23.437500  1.254266e+06 -294177.305664         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:39:11]  Iteration: 149
[07/12 13:39:22]  Generator returned sat in 11.567951 secs.
[07/12 13:39:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + -1/2S_f[0][t-1] + 2S_f[0][t-2] + -3/2S_f[0][t-4] + -1/2)[0m
[07/12 13:39:23]  Improved gap from 1/8192 to 48.4375
[07/12 13:39:23]  Improved number of small numbers from 36 to 40 out of a max of 78
[07/12 13:39:23]  Verifer returned sat in 0.736118 secs.
[07/12 13:39:23]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.303182e+06    0.000244  1.303182e+06 -313048.034479         0.0
1  1.303382e+06  199.666951  1.303382e+06 -313048.034479         0.0
2  1.303482e+06  100.000000  1.303382e+06 -313048.034479         0.0
3  1.303732e+06  349.999878  1.303482e+06 -313048.034479         0.0
4  1.303732e+06  249.000244  1.303682e+06 -313048.034479         0.0
5  1.303732e+06   49.500000  1.303683e+06 -312998.034357         0.0
6  1.304132e+06  448.718811  1.303732e+06 -312998.034357         0.0
high_util=False, low_delay=False, ramp_up=True, ramp_down=False.[0m
[07/12 13:39:23]  Iteration: 150
[07/12 13:39:32]  Generator returned sat in 8.645717 secs.
[07/12 13:39:32]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + -1/2)[0m
[07/12 13:39:32]  Improved gap from 1/8192 to 23.4375
[07/12 13:39:33]  Improved number of small numbers from 36 to 58 out of a max of 78
[07/12 13:39:33]  Verifer returned sat in 0.734356 secs.
[07/12 13:39:33]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.303458e+06   0.000244  1.303458e+06 -313124.596924         0.0
1  1.303458e+06   0.000244  1.303458e+06 -313048.034479         0.0
2  1.303482e+06  23.437561  1.303482e+06 -312971.472168         0.0
3  1.303555e+06  72.937500  1.303555e+06 -312971.471924         0.0
4  1.303627e+06  72.437500  1.303605e+06 -312894.909479         0.0
5  1.303655e+06  49.999939  1.303629e+06 -312821.471918         0.0
6  1.303655e+06  22.937500  1.303655e+06 -312821.471680         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:39:33]  Iteration: 151
[07/12 13:39:48]  Generator returned sat in 14.814769 secs.
[07/12 13:39:48]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -3/2S_f[0][t-3] + 1S_f[0][t-4] + 1)[0m
[07/12 13:39:49]  Improved gap from 0 to 48.4375
[07/12 13:39:49]  Improved number of small numbers from 34 to 76 out of a max of 78
[07/12 13:39:49]  Verifer returned sat in 0.713242 secs.
[07/12 13:39:49]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.303309e+06    0.000244  1.302911e+06 -312676.169678         0.0
1  1.303309e+06  397.825439  1.303010e+06 -312676.169678         0.0
2  1.303309e+06    0.000244  1.303210e+06 -312676.169678         0.0
3  1.303309e+06    0.000244  1.303309e+06 -312676.169678         0.0
4  1.303458e+06  149.791016  1.303408e+06 -312676.169678         0.0
5  1.303458e+06    0.010000  1.303410e+06 -312624.607178         0.0
6  1.303458e+06    0.010000  1.303458e+06 -312624.606934         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:39:49]  Iteration: 152
[07/12 13:39:56]  Generator returned sat in 6.800589 secs.
[07/12 13:39:56]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -3/2S_f[0][t-3] + 1S_f[0][t-4] + 3/2)[0m
[07/12 13:39:57]  Improved gap from 24624169/512000 to 48.4375
[07/12 13:39:57]  Improved number of small numbers from 35 to 78 out of a max of 78
[07/12 13:39:57]  Verifer returned sat in 0.459097 secs.
[07/12 13:39:57]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.321798e+06    0.000244  1.321498e+06 -312676.169678         0.0
1  1.321798e+06    0.000244  1.321498e+06 -312676.169678         0.0
2  1.321798e+06    0.000244  1.321698e+06 -312676.169678         0.0
3  1.321798e+06    0.000244  1.321749e+06 -312676.169678         0.0
4  1.321928e+06  178.885254  1.321898e+06 -312676.169678         0.0
5  1.321948e+06   49.999756  1.321898e+06 -312626.169434         0.0
6  1.321948e+06   24.114746  1.321948e+06 -312626.169434         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:39:57]  Iteration: 153
[07/12 13:40:11]  Generator returned sat in 13.862300 secs.
[07/12 13:40:11]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -3/2S_f[0][t-3] + 1S_f[0][t-4] + 1/2)[0m
[07/12 13:40:12]  Improved gap from 204799/4096 to 48.4375
[07/12 13:40:12]  Improved number of small numbers from 58 to 77 out of a max of 79
[07/12 13:40:12]  Verifer returned sat in 0.654752 secs.
[07/12 13:40:12]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.321993e+06    0.000244  1.321892e+06 -312676.169678         0.0
1  1.321993e+06  101.135742  1.321993e+06 -312676.169678         0.0
2  1.322291e+06  298.146484  1.322191e+06 -312676.169678         0.0
3  1.322291e+06    0.000244  1.322291e+06 -312676.169678         0.0
4  1.322440e+06  148.437500  1.322390e+06 -312676.169678         0.0
5  1.322440e+06    0.010000  1.322391e+06 -312624.607178         0.0
6  1.322440e+06    0.010000  1.322440e+06 -312624.607178         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:40:12]  Iteration: 154
[07/12 13:40:21]  Generator returned sat in 8.789225 secs.
[07/12 13:40:21]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:40:22]  Improved gap from 1/8192 to 48.4375
[07/12 13:40:22]  Improved number of small numbers from 72 to 74 out of a max of 78
[07/12 13:40:22]  Verifer returned sat in 0.345985 secs.
[07/12 13:40:22]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.321877e+06    0.000244  1.321847e+06 -312676.169922         0.0
1  1.321942e+06   95.627930  1.321942e+06 -312676.169922         0.0
2  1.322242e+06  300.000000  1.322142e+06 -312676.169922         0.0
3  1.322242e+06    0.000244  1.322240e+06 -312676.169922         0.0
4  1.322391e+06  150.561768  1.322341e+06 -312676.169922         0.0
5  1.322391e+06   49.999756  1.322342e+06 -312624.607422         0.0
6  1.322391e+06    3.405457  1.322391e+06 -312624.607422         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:40:22]  Iteration: 155
[07/12 13:40:36]  Generator returned sat in 14.101160 secs.
[07/12 13:40:36]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1S_f[0][t-2] + -3/2S_f[0][t-3] + 1S_f[0][t-4] + -3/2)[0m
[07/12 13:40:36]  Improved gap from 2073/204800 to 48.4375
[07/12 13:40:37]  Improved number of small numbers from 39 to 79 out of a max of 79
[07/12 13:40:37]  Verifer returned sat in 0.393511 secs.
[07/12 13:40:37]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.436038e+06    0.000244  1.435940e+06 -312676.169922         0.0
1  1.436038e+06   97.745117  1.436038e+06 -312674.660156         0.0
2  1.436486e+06  448.489990  1.436236e+06 -312674.660156         0.0
3  1.436486e+06    0.000244  1.436336e+06 -312674.660156         0.0
4  1.436486e+06  149.999756  1.436436e+06 -312674.660156         0.0
5  1.436486e+06    0.010000  1.436436e+06 -312624.659912         0.0
6  1.436486e+06    0.010000  1.436486e+06 -312624.659912         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:40:37]  Iteration: 156
[07/12 13:40:48]  Generator returned sat in 11.343538 secs.
[07/12 13:40:49]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -3/2)[0m
[07/12 13:40:49]  Improved gap from 0 to 1.5625
[07/12 13:40:50]  Improved number of small numbers from 30 to 47 out of a max of 78
[07/12 13:40:50]  Verifer returned sat in 1.058246 secs.
[07/12 13:40:50]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.436434e+06  0.000244  1.436334e+06 -312573.833350         0.0
1  1.436434e+06  0.000244  1.436430e+06 -312573.833350         0.0
2  1.436434e+06  0.000244  1.436434e+06 -312475.395850         0.0
3  1.436435e+06  1.562561  1.436435e+06 -312376.958496         0.0
4  1.436440e+06  4.958293  1.436437e+06 -312280.354143         0.0
5  1.436440e+06  2.999939  1.436440e+06 -312181.916748         0.0
6  1.436445e+06  4.958293  1.436442e+06 -312181.916748         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:40:50]  Iteration: 157
[07/12 13:41:00]  Generator returned sat in 9.656751 secs.
[07/12 13:41:00]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-2] + -1)[0m
[07/12 13:41:00]  Improved gap from 0 to 23.4375
[07/12 13:41:00]  Improved number of small numbers from 32 to 78 out of a max of 78
[07/12 13:41:00]  Verifer returned sat in 0.411404 secs.
[07/12 13:41:00]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.436337e+06    0.000244  1.436137e+06 -312566.479248         0.0
1  1.436337e+06    0.000244  1.436237e+06 -312566.479248         0.0
2  1.436337e+06    0.000244  1.436314e+06 -312566.479248         0.0
3  1.436459e+06  145.737549  1.436386e+06 -312566.479248         0.0
4  1.436459e+06   71.587646  1.436437e+06 -312489.916748         0.0
5  1.436487e+06   49.850098  1.436461e+06 -312416.329346         0.0
6  1.436487e+06   22.437500  1.436487e+06 -312416.329102         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:41:01]  Iteration: 158
[07/12 13:41:09]  Generator returned sat in 8.505295 secs.
[07/12 13:41:09]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1)[0m
[07/12 13:41:10]  Improved gap from 0 to 1.5625
[07/12 13:41:11]  Improved number of small numbers from 36 to 48 out of a max of 79
[07/12 13:41:11]  Verifer returned sat in 1.290575 secs.
[07/12 13:41:11]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.439489e+06   0.000244  1.439489e+06 -315918.582275         0.0
1  1.439489e+06   0.000244  1.439489e+06 -315851.759277         0.0
2  1.439522e+06  33.177124  1.439522e+06 -315753.322001         0.0
3  1.439524e+06   1.562622  1.439524e+06 -315686.280029         0.0
4  1.439559e+06  34.520752  1.439557e+06 -315587.842753         0.0
5  1.439607e+06  49.999878  1.439559e+06 -315536.280131         0.0
6  1.439607e+06  34.302002  1.439607e+06 -315536.280029         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:41:11]  Iteration: 159
[07/12 13:41:22]  Generator returned sat in 11.134586 secs.
[07/12 13:41:22]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + -1)[0m
[07/12 13:41:23]  Improved gap from 0 to 1.5625
[07/12 13:41:23]  Improved number of small numbers from 72 to 78 out of a max of 78
[07/12 13:41:23]  Verifer returned sat in 0.377725 secs.
[07/12 13:41:23]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.515312e+06   0.000244  1.515211e+06 -391640.144531         0.0
1  1.515312e+06   0.000244  1.515311e+06 -391640.144531         0.0
2  1.515312e+06   1.562500  1.515311e+06 -391541.707031         0.0
3  1.515314e+06   3.124756  1.515312e+06 -391443.269775         0.0
4  1.515363e+06  50.562500  1.515315e+06 -391392.269531         0.0
5  1.515363e+06   2.687744  1.515363e+06 -391293.832031         0.0
6  1.515413e+06  50.343750  1.515365e+06 -391293.832031         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:41:23]  Iteration: 160
[07/12 13:41:38]  Generator returned sat in 14.587282 secs.
[07/12 13:41:38]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + -3/2)[0m
[07/12 13:41:38]  Improved gap from 25/16 to 1.5625
[07/12 13:41:39]  Improved number of small numbers from 31 to 38 out of a max of 78
[07/12 13:41:39]  Verifer returned sat in 1.376621 secs.
[07/12 13:41:39]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.540231e+06  0.000244  1.540231e+06 -416660.144379         0.0
1  1.540231e+06  0.000061  1.540231e+06 -416564.831787         0.0
2  1.540236e+06  4.687683  1.540236e+06 -416466.394501         0.0
3  1.540237e+06  1.562561  1.540237e+06 -416367.957031         0.0
4  1.540242e+06  4.750122  1.540240e+06 -416271.144623         0.0
5  1.540246e+06  5.593933  1.540242e+06 -416175.176056         0.0
6  1.540246e+06  4.031372  1.540246e+06 -416175.176025         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:41:40]  Iteration: 161
[07/12 13:41:52]  Generator returned sat in 12.382958 secs.
[07/12 13:41:52]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1/2S_f[0][t-1] + 1S_f[0][t-3] + -3/2S_f[0][t-4] + 0)[0m
[07/12 13:41:52]  Improved gap from 1/16384 to 17.1875
[07/12 13:41:53]  Improved number of small numbers from 41 to 49 out of a max of 78
[07/12 13:41:53]  Verifer returned sat in 0.932603 secs.
[07/12 13:41:53]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.540139e+06   0.000244  1.540117e+06 -416559.512939         0.0
1  1.540139e+06   0.000244  1.540139e+06 -416498.228271         0.0
2  1.540160e+06  21.354167  1.540160e+06 -416419.582275         0.0
3  1.540177e+06  17.187622  1.540177e+06 -416336.770020         0.0
4  1.540229e+06  51.562500  1.540196e+06 -416271.144775         0.0
5  1.540246e+06  49.999878  1.540229e+06 -416188.332275         0.0
6  1.540280e+06  51.562500  1.540246e+06 -416188.332275         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:41:53]  Iteration: 162
[07/12 13:42:05]  Generator returned sat in 11.740850 secs.
[07/12 13:42:05]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + 0)[0m
[07/12 13:42:06]  Improved gap from 0 to 0
[07/12 13:42:06]  Improved number of small numbers from 44 to 78 out of a max of 78
[07/12 13:42:06]  Verifer returned sat in 0.347463 secs.
[07/12 13:42:06]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.565722e+06  0.000244  1.565722e+06 -442164.374756         0.0
1  1.565722e+06  0.000244  1.565722e+06 -442064.384521         0.0
2  1.565722e+06  0.000244  1.565722e+06 -441964.384521         0.0
3  1.565722e+06  0.000244  1.565722e+06 -441864.384766         0.0
4  1.565722e+06  0.010254  1.565722e+06 -441764.394775         0.0
5  1.565722e+06  0.010000  1.565722e+06 -441664.394775         0.0
6  1.565722e+06  0.010254  1.565722e+06 -441664.394775         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:42:06]  Iteration: 163
[07/12 13:42:18]  Generator returned sat in 11.495136 secs.
[07/12 13:42:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-4] + -3/2)[0m
[07/12 13:42:18]  Improved gap from 0 to 0
[07/12 13:42:19]  Improved number of small numbers from 35 to 74 out of a max of 78
[07/12 13:42:19]  Verifer returned sat in 0.830623 secs.
[07/12 13:42:19]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.565720e+06  0.000244  1.565720e+06 -442162.894287         0.0
1  1.565720e+06  0.000244  1.565720e+06 -442062.894287         0.0
2  1.565720e+06  0.000244  1.565720e+06 -441962.894531         0.0
3  1.565722e+06  1.500000  1.565722e+06 -441864.394287         0.0
4  1.565722e+06  0.010010  1.565722e+06 -441764.404297         0.0
5  1.565722e+06  0.010000  1.565722e+06 -441664.404541         0.0
6  1.565722e+06  0.010010  1.565722e+06 -441664.404297         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:42:19]  Iteration: 164
[07/12 13:42:30]  Generator returned sat in 11.108041 secs.
[07/12 13:42:30]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 3/2)[0m
[07/12 13:42:30]  Verifer returned unsat in 0.048731 secs.
[07/12 13:42:30]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 3/2)[0m
[07/12 13:42:30]  Iteration: 165
[07/12 13:42:41]  Generator returned sat in 10.711154 secs.
[07/12 13:42:41]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + 1/2S_f[0][t-4] + 3/2)[0m
[07/12 13:42:42]  Improved gap from 1/8192 to 46.875
[07/12 13:42:42]  Improved number of small numbers from 37 to 48 out of a max of 78
[07/12 13:42:42]  Verifer returned sat in 0.872360 secs.
[07/12 13:42:42]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.565923e+06    0.000244  1.565623e+06 -442165.895284         0.0
1  1.565923e+06  300.000000  1.565725e+06 -442165.895284         0.0
2  1.565923e+06    0.000244  1.565923e+06 -442165.895284         0.0
3  1.566170e+06  246.875000  1.566022e+06 -442165.895284         0.0
4  1.566170e+06  148.250732  1.566120e+06 -442165.895284         0.0
5  1.566170e+06   49.999756  1.566123e+06 -442112.770284         0.0
6  1.566170e+06    4.438293  1.566170e+06 -442112.770264         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:42:43]  Iteration: 166
[07/12 13:42:57]  Generator returned sat in 13.946701 secs.
[07/12 13:42:57]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1)[0m
[07/12 13:42:57]  Verifer returned unsat in 0.035155 secs.
[07/12 13:42:57]  Proved solution: 
[1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1)[0m
[07/12 13:42:57]  Iteration: 167
[07/12 13:43:17]  Generator returned sat in 20.448309 secs.
[07/12 13:43:18]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-2] + 1/2S_f[0][t-3] + -3/2S_f[0][t-4] + -1/2)[0m
[07/12 13:43:18]  Improved gap from 1/8192 to 32.8125
[07/12 13:43:18]  Improved number of small numbers from 35 to 43 out of a max of 78
[07/12 13:43:18]  Verifer returned sat in 0.713428 secs.
[07/12 13:43:18]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.615832e+06    0.000244  1.615677e+06 -492174.082784         0.0
1  1.615832e+06    0.000244  1.615832e+06 -492174.082784         0.0
2  1.615832e+06    0.000122  1.615832e+06 -492106.895284         0.0
3  1.616096e+06  264.343994  1.615864e+06 -492106.895284         0.0
4  1.616096e+06  231.531372  1.616047e+06 -492106.895284         0.0
5  1.616096e+06   32.312500  1.616064e+06 -492039.707784         0.0
6  1.616296e+06  231.531372  1.616097e+06 -492039.707784         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=False.[0m
[07/12 13:43:19]  Iteration: 168
[07/12 13:43:31]  Generator returned sat in 11.945543 secs.
[07/12 13:43:31]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 3/2S_f[0][t-1] + -1/2S_f[0][t-2] + -1S_f[0][t-3] + -1/2)[0m
[07/12 13:43:31]  Improved gap from 0 to 0
[07/12 13:43:32]  Improved number of small numbers from 34 to 49 out of a max of 78
[07/12 13:43:32]  Verifer returned sat in 1.175398 secs.
[07/12 13:43:32]  Counter example: 
[93m    arrival_0,t  cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.544422e+06  0.000244  1.544321e+06 -492174.083008         0.0
1  1.544422e+06  0.000244  1.544421e+06 -492174.083008         0.0
2  1.544422e+06  0.000244  1.544422e+06 -492075.036009         0.0
3  1.544422e+06  0.000122  1.544422e+06 -491975.036133         0.0
4  1.544422e+06  0.453225  1.544422e+06 -491875.489234         0.0
5  1.544422e+06  0.010000  1.544422e+06 -491775.489258         0.0
6  1.544422e+06  0.010000  1.544422e+06 -491775.489014         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:43:32]  Iteration: 169
[07/12 13:43:45]  Generator returned sat in 12.846697 secs.
[07/12 13:43:45]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 0)[0m
[07/12 13:43:46]  Improved gap from 0 to 14.0625
[07/12 13:43:46]  Improved number of small numbers from 38 to 78 out of a max of 78
[07/12 13:43:46]  Verifer returned sat in 0.507429 secs.
[07/12 13:43:46]  Counter example: 
[93m    arrival_0,t   cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.543616e+06   0.000244  1.543595e+06 -492205.063477         0.0
1  1.543616e+06   0.000244  1.543616e+06 -492119.125977         0.0
2  1.543630e+06  14.062744  1.543630e+06 -492033.188477         0.0
3  1.543658e+06  28.125000  1.543644e+06 -491947.250977         0.0
4  1.543686e+06  42.187500  1.543672e+06 -491875.375977         0.0
5  1.543721e+06  49.218750  1.543686e+06 -491811.313232         0.0
6  1.543728e+06  42.187500  1.543722e+06 -491811.313232         0.0
high_util=False, low_delay=True, ramp_up=False, ramp_down=True.[0m
[07/12 13:43:46]  Iteration: 170
[07/12 13:43:57]  Generator returned sat in 11.150021 secs.
[07/12 13:43:58]  Candidate solution: 
[1m[94mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-2] + 1/2S_f[0][t-3] + -1S_f[0][t-4] + 1/2)[0m
[07/12 13:43:58]  Improved gap from 217/16 to 100
[07/12 13:43:58]  Improved number of small numbers from 66 to 78 out of a max of 78
[07/12 13:43:58]  Verifer returned sat in 0.226882 secs.
[07/12 13:43:58]  Counter example: 
[93m    arrival_0,t    cwnd_0,t   service_0,t       wasted_t  tot_lost_t
0  1.543458e+06    0.000244  1.543259e+06 -491947.250977         0.0
1  1.543458e+06    0.000244  1.543358e+06 -491947.250977         0.0
2  1.543558e+06  199.999756  1.543557e+06 -491947.250977         0.0
3  1.543658e+06  100.999268  1.543558e+06 -491947.250977         0.0
4  1.543758e+06  200.000000  1.543758e+06 -491947.250977         0.0
5  1.544158e+06  400.000244  1.543758e+06 -491947.250977         0.0
6  1.544158e+06  101.499512  1.543858e+06 -491947.250977         0.0
high_util=True, low_delay=False, ramp_up=False, ramp_down=False.[0m
[07/12 13:43:58]  Iteration: 171
[07/12 13:43:59]  Generator returned unsat in 0.814578 secs.
[07/12 13:43:59]  [96mNo more solutions found[0m
[07/12 13:43:59]  Final solutions:
[07/12 13:43:59]  0: [1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 3/2)[0m
[07/12 13:43:59]  1: [1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 2)[0m
[07/12 13:43:59]  2: [1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1)[0m
[07/12 13:43:59]  3: [1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 2)[0m
[07/12 13:43:59]  4: [1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 1/2)[0m
[07/12 13:43:59]  5: [1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1)[0m
[07/12 13:43:59]  6: [1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1/2S_f[0][t-3] + -1/2S_f[0][t-4] + 3/2)[0m
[07/12 13:43:59]  7: [1m[92mc_f[0][t] = max(0.01, + 1S_f[0][t-1] + -1S_f[0][t-3] + 1/2)[0m
[07/12 13:43:59]  Took 1160.003143 secs.
