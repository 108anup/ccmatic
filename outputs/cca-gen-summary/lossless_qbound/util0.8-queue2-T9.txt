[08/23 15:41:04]  --------------------------------------------------------------------------------
[08/23 15:41:04]  Iteration: 1 (0 solution, 0 counterexamples)
[08/23 15:41:04]  Generator returned sat in 0.004367 secs.
[08/23 15:41:04]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 15:41:05]  Improved gap from 0.0 to 100
[08/23 15:41:05]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 15:41:05]  Verifer returned sat in 0.343711 secs.
[08/23 15:41:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0         -200.1         -200.1       0.0       -200.1     200.2       -200.1        0.0      0.0             0.0     9.0           -200.1            -1.0            -1
1            0.0         -200.1       0.0          0.0     200.1       -200.1        0.0    200.1           100.1     9.0              0.0             1.0         False
2            0.0           -0.2       0.0          0.0       0.2         -0.2        0.0      0.2             0.1     2.0              0.0             1.0         False
3            0.0           -0.1       0.0          0.0       0.1         -0.1        0.0      0.1           -99.9     3.0              0.0             0.0         False
4          402.1           99.9       0.0        402.1     402.2         99.9        2.2    300.0           200.0     1.0              0.0             0.0         False
5         1508.5          199.9       0.0       1508.5    1406.4        199.9     1008.6    300.0           200.0     2.0              0.0             0.0         False
6         4423.5          378.9       0.0       4423.5    3215.0        378.9     3823.6    221.0           200.0     3.0              0.0             0.0         False
7        11392.5          444.9       0.0      11392.5    7190.0        444.9    10692.6    255.0           200.0     3.0              0.0             0.0         False
8        26209.5          500.0       0.0      26209.5   15072.0        500.0    25409.6    299.9           200.0     3.0              0.0             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=5.[0m
[08/23 15:41:05]  --------------------------------------------------------------------------------
[08/23 15:41:05]  Iteration: 2 (0 solution, 1 counterexamples)
[08/23 15:41:05]  Generator returned sat in 0.076043 secs.
[08/23 15:41:05]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:06]  Improved gap from 0.1998046875 to 100
[08/23 15:41:07]  Improved number of small numbers from 38 to 50 out of a max of 110
[08/23 15:41:07]  Verifer returned sat in 1.468451 secs.
[08/23 15:41:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0    -293.640625    -393.740649       0.0  -293.640625  100.000000  -393.740649    0.000000  100.100024      100.000122     8.0      -393.740649            -1.0            -1
1    -293.640625    -393.640747       0.0  -293.640625  100.000000  -393.640747    0.000000  100.000122        0.000122     7.0      -393.740649             1.0         False
2    -293.640625    -293.640747       0.0  -293.640625   99.900146  -293.640747    0.000000    0.000122      -99.999878     6.0      -293.640625             1.0          True
3     106.459155    -193.640747       0.0   106.459155  400.099902  -193.640747    0.099902  300.000000      200.000000     1.0      -293.640625             1.0         False
4     106.609009     -30.890503       0.0   106.609009  300.149854   -30.890503    0.099902  137.399609      100.149854     2.0       106.509106             0.0         False
5     513.334766      43.675610       0.0   513.334766  544.125366    43.675610  206.975513  262.683643      200.000000     3.0       106.509106             0.0         False
6     756.625659     143.609009       0.0   756.625659  505.974536   143.609009  350.266406  262.750244      200.000000     2.0       406.359253             1.0         False
7     999.750049     306.359253       0.0   999.750049  505.874634   306.359253  493.390796  200.000000      200.000000     3.0       506.359253             0.0         False
8    1305.624683     306.458984       0.0  1305.624683  505.874634   306.458984  699.265430  299.900269      200.000000     3.0       506.359253             1.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=4.[0m
[08/23 15:41:07]  --------------------------------------------------------------------------------
[08/23 15:41:07]  Iteration: 3 (0 solution, 2 counterexamples)
[08/23 15:41:08]  Generator returned sat in 0.019793 secs.
[08/23 15:41:08]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:08]  Improved number of small numbers from 36 to 109 out of a max of 109
[08/23 15:41:08]  Verifer returned sat in 0.373638 secs.
[08/23 15:41:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0     -93.815430    -393.765381 -0.000244   -93.815430    0.025146  -393.765381    0.000000  299.949951      199.949951     4.0      -393.765381            -1.0            -1
1     -93.790527    -193.765381 -0.000244   -93.790527  299.974854  -193.765381    0.000000   99.974854       99.974854     4.0      -393.765381             1.0         False
2     106.209717    -193.740723 -0.000244   106.209717  299.975098  -193.740723    0.000000  299.950439      199.975098     4.0      -393.765381             1.0          True
3     206.234375     -43.752930 -0.000244   206.234375  399.975098   -43.752930    0.000000  249.987305      199.999756     2.0      -393.765381             1.0          True
4     306.259521       6.334473 -0.000244   306.259521  350.012451     6.334473    0.024902  299.900146      200.000000     3.0       306.234619             0.0         False
5     306.259521     206.234375 -0.000244   306.259521  200.099854   206.234375    0.024902  100.000244      100.000000     3.0       306.234619             1.0         False
6     606.234375     306.234619 -0.000244   606.234375  399.975098   306.234619   99.999756  200.000000      200.000000     3.0       306.234619             1.0         False
7     756.221924     356.297119 -0.000244   756.221924  349.987549   356.297119  149.987305  249.937500      200.000000     2.0       606.234619             1.0         False
8     856.247070     406.234619 -0.000244   856.247070  349.962646   406.234619  150.012451  300.000000      200.000000     3.0       706.234619             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 15:41:08]  --------------------------------------------------------------------------------
[08/23 15:41:08]  Iteration: 4 (0 solution, 3 counterexamples)
[08/23 15:41:09]  Generator returned sat in 0.347055 secs.
[08/23 15:41:09]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:41:09]  Improved gap from 0.0498046875 to 100
[08/23 15:41:09]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 15:41:09]  Verifer returned sat in 0.221151 secs.
[08/23 15:41:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -6524.231201   -6724.131592 -0.000244  -6524.231201   200.000000 -6724.131592      0.000000  199.900391       99.900391     4.0     -6724.131592            -1.0            -1
1   -6524.131592   -6624.131592 -0.000244  -6524.131592   200.000000 -6624.131592      0.000000  100.000000        0.000000     4.0     -6724.131592             0.0         False
2   -6324.231201   -6524.131592 -0.000244  -6324.231201   299.900391 -6524.131592      0.000000  199.900391       99.900391     2.0     -6724.131592             0.0         False
3    2986.055908   -6324.131592 -0.000244   2986.055908  9510.187500 -6324.131592   9110.187500  200.000000      200.000000     1.0     -6724.131592             0.0         False
4    7542.649658   -6224.131592 -0.000244   7542.649658  4756.593750 -6224.131592  13566.781250  200.000000      200.000000     2.0     -6024.131592             0.0         False
5    9722.446533   -6124.131592 -0.000244   9722.446533  2379.796875 -6124.131592  15646.578125  200.000000      200.000000     3.0     -5924.131592             0.0         False
6   10713.844971   -6024.131592 -0.000244  10713.844971  1191.398438 -6024.131592  16537.976562  200.000000      200.000000     3.0     -5824.131592             0.0         False
7   11111.044189   -5924.131592 -0.000244  11111.044189   597.199219 -5924.131592  16835.175781  200.000000      200.000000     3.0     -5724.131592             0.0         False
8   11211.143799   -5824.131592 -0.000244  11211.143799   300.099609 -5824.131592  16835.275391  200.000000      200.000000     3.0     -5624.131592             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 15:41:10]  --------------------------------------------------------------------------------
[08/23 15:41:10]  Iteration: 5 (0 solution, 4 counterexamples)
[08/23 15:41:10]  Generator returned sat in 0.046453 secs.
[08/23 15:41:10]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 15:41:10]  Improved number of small numbers from 103 to 103 out of a max of 109
[08/23 15:41:10]  Verifer returned sat in 0.266651 secs.
[08/23 15:41:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -6524.231445   -6724.131592 -0.000244  -6524.231445   199.999756 -6724.131592      0.000000  199.900146       99.900146     4.0     -6724.131592            -1.0            -1
1   -6524.131592   -6624.131592 -0.000244  -6524.131592   200.000000 -6624.131592      0.000000  100.000000        0.000000     4.0     -6724.131592             0.0         False
2   -6324.231445   -6524.131592 -0.000244  -6324.231445   299.900146 -6524.131592      0.000000  199.900146       99.900146     2.0     -6724.131592             0.0         False
3    3044.872314   -6324.131836 -0.000244   3044.872314  9569.003906 -6324.131836   9169.003906  200.000244      200.000000     1.0     -6724.131592             0.0         False
4    7629.874023   -6324.131592 -0.000244   7629.874023  4785.001953 -6324.131592  13654.005615  300.000000      200.000000     2.0     -6024.131592             0.0         False
5    9722.875000   -6124.131592 -0.000244   9722.875000  2393.000977 -6124.131592  15647.006592  200.000000      200.000000     3.0     -5924.131592             0.0         False
6   10719.875488   -6024.131592 -0.000244  10719.875488  1197.000488 -6024.131592  16544.007080  200.000000      200.000000     3.0     -5824.131592             0.0         False
7   11118.875732   -5924.131592 -0.000244  11118.875732   599.000244 -5924.131592  16843.007324  200.000000      200.000000     3.0     -5724.131592             0.0         False
8   11218.875854   -5824.131592 -0.000244  11218.875854   300.000122 -5824.131592  16843.007446  200.000000      200.000000     3.0     -5624.131592             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 15:41:11]  --------------------------------------------------------------------------------
[08/23 15:41:11]  Iteration: 6 (0 solution, 5 counterexamples)
[08/23 15:41:11]  Generator returned sat in 0.202894 secs.
[08/23 15:41:11]  Candidate solution: 
[1m[94mif(qbound[t-1][5]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 15:41:11]  Improved gap from 0.0 to 0
[08/23 15:41:11]  Improved number of small numbers from 88 to 110 out of a max of 110
[08/23 15:41:11]  Verifer returned sat in 0.428327 secs.
[08/23 15:41:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -6099.156494   -6199.206299 -398.426025 -6099.156494  100.074463 -6199.206299        0.0  100.049805      100.049805     4.0     -6199.206299            -1.0            -1
1   -6099.131836   -6099.206299 -398.426025 -6099.131836  100.074463 -6099.206299        0.0    0.074463        0.074463     3.0     -6199.206299             0.0         False
2   -6099.131836   -6099.206055 -298.500488 -6099.131836    0.049805 -6099.206055        0.0    0.074219        0.000000     3.0     -6099.131836             0.0         False
3   -6099.131836   -6099.131836 -198.500488 -6099.131836    0.024902 -6099.131836        0.0    0.000000        0.000000     3.0     -6099.131836             0.0         False
4   -6098.631836   -6098.631836  -99.500488 -6098.631836    0.500000 -6098.631836        0.0    0.000000       -0.500000     1.0     -6099.131836             0.0         False
5   -6098.131836   -6098.131836    0.499512 -6098.131836    0.500000 -6098.131836        0.0    0.000000        0.000000     1.0     -6099.131836             0.0         False
6   -6097.631836   -6098.131592   99.999512 -6097.631836    0.500000 -6098.131592        0.0    0.499756        0.000000     1.0     -6099.131836             0.0         False
7   -6097.631592   -6097.631592  199.999268 -6097.631592    0.500000 -6097.631592        0.0    0.000000        0.000000     1.0     -6099.131836             0.0         False
8   -6097.131592   -6097.606689  199.999512 -6097.131592    0.500000 -6097.606689        0.0    0.475098      -99.499756     1.0     -6099.131836             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 15:41:12]  --------------------------------------------------------------------------------
[08/23 15:41:12]  Iteration: 7 (0 solution, 6 counterexamples)
[08/23 15:41:12]  Generator returned sat in 0.321275 secs.
[08/23 15:41:12]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 15:41:13]  Improved gap from 0.0 to 100
[08/23 15:41:14]  Improved number of small numbers from 55 to 57 out of a max of 110
[08/23 15:41:14]  Verifer returned sat in 1.100086 secs.
[08/23 15:41:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7093.731445   -7159.047974  496.049194 -7093.731445  165.366211 -7159.047974    0.000000   65.316528       -0.049927     1.0     -7159.047974            -1.0            -1
1   -6993.731201   -7093.681519  496.049194 -6993.731201  165.316772 -7093.681519    0.000000   99.950317       -0.049683     1.0     -6993.731201             0.0         False
2   -6893.681519   -6993.681519  496.049194 -6893.681519  200.000000 -6993.681519    0.000000  100.000000        0.000000     1.0     -6993.731201             0.0         False
3   -6793.681519   -6893.681519  496.049194 -6793.681519  200.000000 -6893.681519    0.000000  100.000000        0.000000     2.0     -6993.731201             0.0         False
4   -6493.631836   -6793.681519  496.049194 -6493.631836  400.049683 -6793.681519    0.049683  300.000000      200.000000     2.0     -6993.731201             1.0          True
5   -6341.631836   -6656.681519  496.049194 -6341.631836  452.000000 -6656.681519   52.049683  263.000000      200.000000     2.0     -6993.731201             1.0          True
6   -6097.131836   -6556.681519  496.049194 -6097.131836  507.500000 -6556.681519  196.549683  263.000000      200.000000     3.0     -6993.731201             1.0          True
7   -5852.631836   -6456.714640  496.049194 -5852.631836  507.500000 -6456.714640  341.049683  263.033122      200.000000     3.0     -6993.731201             1.0          True
8   -5608.214640   -6293.681641  496.049194 -5608.214640  507.450317 -6293.681641  485.466878  200.000122      200.000000     3.0     -6093.681519             1.0          True
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=5.[0m
[08/23 15:41:14]  --------------------------------------------------------------------------------
[08/23 15:41:14]  Iteration: 8 (0 solution, 7 counterexamples)
[08/23 15:41:15]  Generator returned sat in 0.382513 secs.
[08/23 15:41:15]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:41:15]  Improved gap from 0.0 to 100
[08/23 15:41:15]  Improved number of small numbers from 29 to 110 out of a max of 110
[08/23 15:41:15]  Verifer returned sat in 0.447381 secs.
[08/23 15:41:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7499.106934   -7599.131836  901.499512 -7499.106934  100.000000 -7599.131836    0.000000  100.024902        0.024902     3.0     -7599.131836            -1.0            -1
1   -7499.106934   -7499.131836  901.499512 -7499.106934  100.000000 -7499.131836    0.000000    0.024902      -99.975098     3.0     -7599.131836             1.0         False
2   -7250.119385   -7349.144287  901.499512 -7250.119385  249.012451 -7349.144287    0.000000   99.024902       49.012451     1.0     -7599.131836             1.0          True
3   -6999.107178   -7250.119385  901.499512 -6999.107178  350.037109 -7250.119385    0.024658  250.987549      200.000000     2.0     -7599.131836             0.0         False
4   -6899.082275   -7149.119385  901.499512 -6899.082275  351.012451 -7149.119385    0.049561  249.987549      200.000000     2.0     -7599.131836             1.0          True
5   -6797.057373   -6999.131836  901.499512 -6797.057373  352.012451 -6999.131836    2.074463  200.000000      200.000000     3.0     -7599.131836             1.0          True
6   -6645.044922   -6899.131836  901.499512 -6645.044922  352.012451 -6899.131836   54.086914  200.000000      200.000000     3.0     -7599.131836             1.0          True
7   -6492.057373   -6825.113281  901.499512 -6492.057373  352.987549 -6825.113281  107.074463  225.981445      200.000000     3.0     -7599.131836             1.0          True
8   -6392.032715   -6699.131836  901.499512 -6392.032715  326.006104 -6699.131836  107.099121  200.000000      200.000000     3.0     -6499.131836             1.0          True
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 15:41:16]  --------------------------------------------------------------------------------
[08/23 15:41:16]  Iteration: 9 (0 solution, 8 counterexamples)
[08/23 15:41:16]  Generator returned sat in 0.270016 secs.
[08/23 15:41:16]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 15:41:16]  Improved gap from 0.0247802734375 to 100
[08/23 15:41:17]  Improved number of small numbers from 98 to 106 out of a max of 110
[08/23 15:41:17]  Verifer returned sat in 0.522111 secs.
[08/23 15:41:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7199.181641   -7299.206543  701.573975 -7199.181641     0.024902 -7299.206543     0.000000  100.024902      100.024658     4.0     -7299.206543            -1.0            -1
1   -7199.181641   -7199.206299  701.573975 -7199.181641     0.074463 -7199.206299     0.000000    0.024658        0.024658     2.0     -7299.206543             1.0         False
2   -7199.156738   -7199.206299  701.573975 -7199.156738     0.049561 -7199.206299     0.000000    0.049561      -99.950439     2.0     -7199.156738             0.0         False
3   -7099.181519   -7099.206299  701.573975 -7099.181519   100.024780 -7099.206299     0.000000    0.024780      -99.975220     1.0     -7199.156738             0.0         False
4   -6898.156738   -6899.206543  701.573975 -6898.156738   201.049561 -6899.206543     0.000000    1.049805        1.049561     1.0     -7199.156738             0.0         False
5   -6496.107422   -6799.206299  701.573975 -6496.107422   403.099121 -6799.206299   103.098877  200.000000      200.000000     1.0     -7199.156738             0.0         False
6   -5888.909180   -6699.206299  701.573975 -5888.909180   807.198242 -6699.206299   610.297119  200.000000      200.000000     2.0     -7199.156738             0.0         False
7   -4473.512695   -6699.206299  701.573975 -4473.512695  1615.396484 -6699.206299  1925.693604  300.000000      200.000000     2.0     -7199.156738             0.0         False
8   -1541.719727   -6499.206543  701.573975 -1541.719727  3231.792969 -6499.206543  4757.486572  200.000244      200.000000     3.0     -7199.156738             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=4.[0m
[08/23 15:41:17]  --------------------------------------------------------------------------------
[08/23 15:41:17]  Iteration: 10 (0 solution, 9 counterexamples)
[08/23 15:41:19]  Generator returned sat in 1.419446 secs.
[08/23 15:41:19]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:19]  Improved gap from 0.0016666666666666668 to 0
[08/23 15:41:20]  Improved number of small numbers from 60 to 95 out of a max of 110
[08/23 15:41:20]  Verifer returned sat in 0.816937 secs.
[08/23 15:41:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -6899.218750   -6899.220703   501.577393 -6899.218750    0.000732 -6899.220703        0.0   0.001953        0.001800     8.0     -6899.220703            -1.0            -1
1   -6899.218750   -6899.220459   601.575439 -6899.218750    0.000732 -6899.220459        0.0   0.001709       -0.000153     2.0     -6899.220703             1.0         False
2   -6899.217041   -6899.218018   701.573730 -6899.217041    0.003418 -6899.218018        0.0   0.000977       -0.000153     1.0     -6899.220703             0.0         False
3   -6699.225586   -6799.217041   701.573730 -6699.225586  199.992432 -6799.217041        0.0  99.991455       99.991302     1.0     -6899.220703             0.0         False
4   -6699.225586   -6699.226299   701.573975 -6699.225586    0.010000 -6699.226299        0.0   0.000713       -0.008454     2.0     -6699.225586             0.0         False
5   -6699.216299   -6699.217132   801.572998 -6699.216299    0.010000 -6699.217132        0.0   0.000833       -0.000143     1.0     -6699.225586             0.0         False
6   -6699.207132   -6699.215465   901.563965 -6699.207132    0.010000 -6699.215465        0.0   0.008333       -0.000010     1.0     -6699.225586             0.0         False
7   -6699.205465   -6699.206299  1001.562256 -6699.205465    0.010000 -6699.206299        0.0   0.000833       -0.000052     1.0     -6699.225586             0.0         False
8   -6699.196299   -6699.204834  1101.552979 -6699.196299    0.010000 -6699.204834        0.0   0.008535       -0.000163     1.0     -6699.225586             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 15:41:20]  --------------------------------------------------------------------------------
[08/23 15:41:20]  Iteration: 11 (0 solution, 10 counterexamples)
[08/23 15:41:21]  Generator returned sat in 0.805816 secs.
[08/23 15:41:21]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 15:41:22]  Improved gap from 0.0 to 23.4375
[08/23 15:41:22]  Improved number of small numbers from 87 to 105 out of a max of 110
[08/23 15:41:22]  Verifer returned sat in 0.867690 secs.
[08/23 15:41:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -6922.359619   -7034.448486  501.328613 -6922.359619  50.075684 -7034.448486        0.0  112.088867      100.000000     9.0     -7034.448486            -1.0            -1
1   -6922.359619   -6948.948242  501.328613 -6922.359619  50.025879 -6948.948242        0.0   26.588623        0.000000     2.0     -6922.359619             1.0         False
2   -6898.922119   -6922.359619  577.891113 -6898.922119  50.026123 -6922.359619        0.0   23.437500        0.000000     3.0     -6922.359619             1.0         False
3   -6858.198242   -6898.922119  637.167236 -6858.198242  64.161377 -6898.922119        0.0   40.723877        0.000000     2.0     -6922.359619             1.0         False
4   -6829.658936   -6858.198242  708.627686 -6829.658936  69.263184 -6858.198242        0.0   28.539307       -0.000244     2.0     -6922.359619             1.0          True
5   -6811.323242   -6829.609619  785.141113 -6811.323242  46.875000 -6829.609619        0.0   18.286377       -5.151123     1.0     -6811.323242             1.0          True
6   -6782.734619   -6806.172119  861.703613 -6782.734619  46.875000 -6806.172119        0.0   23.437500        0.000000     1.0     -6811.323242             0.0         False
7   -6759.297119   -6782.734619  938.216553 -6759.297119  46.875000 -6782.734619        0.0   23.437500       -0.049561     2.0     -6811.323242             0.0         False
8   -6743.502808   -6759.247559  938.216553 -6743.502808  39.231812 -6759.247559        0.0   15.744751      -84.255249     1.0     -6743.502808             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 15:41:23]  --------------------------------------------------------------------------------
[08/23 15:41:23]  Iteration: 12 (0 solution, 11 counterexamples)
[08/23 15:41:23]  Generator returned sat in 0.342043 secs.
[08/23 15:41:23]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 15:41:24]  Improved gap from 0.0 to 23.4375
[08/23 15:41:25]  Improved number of small numbers from 55 to 67 out of a max of 110
[08/23 15:41:25]  Verifer returned sat in 1.317218 secs.
[08/23 15:41:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -6969.950928   -7026.969614  505.938477 -6969.950928   0.049316 -7026.969614        0.0  57.018687       57.018555     3.0     -7026.969614            -1.0            -1
1   -6969.950928   -6993.914561  548.919922 -6969.950928   0.049316 -6993.914561        0.0  23.963633        0.000000     3.0     -7026.969614             1.0         False
2   -6944.365122   -6969.901499  623.334116 -6944.365122  49.549438 -6969.901499        0.0  25.536377        0.000000     1.0     -7026.969614             1.0          True
3   -6901.013437   -6944.365122  679.982432 -6901.013437  68.888062 -6944.365122        0.0  43.351685        0.000000     2.0     -7026.969614             0.0         False
4   -6901.013437   -6901.013437  755.969482 -6901.013437  43.302246 -6901.013437        0.0   0.000000      -24.012949     2.0     -6901.013437             1.0          True
5   -6853.562876   -6877.000376  832.531870 -6853.562876  47.450562 -6877.000376        0.0  23.437500        0.000000     1.0     -6901.013437             1.0         False
6   -6829.549814   -6853.562876  908.518799 -6829.549814  47.450562 -6853.562876        0.0  24.013062       -0.000010     2.0     -6901.013437             0.0         False
7   -6806.161753   -6825.500376  981.031738 -6806.161753  47.401123 -6825.500376        0.0  19.338623       -4.099009     1.0     -6806.161753             1.0          True
8   -6786.743845   -6802.062744  981.031738 -6786.743845  38.756531 -6802.062744        0.0  15.318899      -84.681101     1.0     -6786.743845             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 15:41:25]  --------------------------------------------------------------------------------
[08/23 15:41:25]  Iteration: 13 (0 solution, 12 counterexamples)
[08/23 15:41:26]  Generator returned sat in 0.245943 secs.
[08/23 15:41:26]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:41:26]  Improved gap from 0.0494384765625 to 0
[08/23 15:41:27]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 15:41:27]  Verifer returned sat in 0.646914 secs.
[08/23 15:41:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7190.713867   -7490.713867  577.133301 -7190.713867  299.950439 -7490.713867   0.000000  300.000000           200.0     1.0     -7490.713867            -1.0            -1
1   -7190.713867   -7290.714111  577.133301 -7190.713867  299.950439 -7290.714111   0.000000  100.000244           100.0     2.0     -7490.713867             0.0         False
2   -6990.664551   -7190.763672  577.133301 -6990.664551  300.049561 -7190.763672   0.049316  200.049805           200.0     3.0     -7490.713867             1.0          True
3   -6990.664551   -7190.713867  577.133301 -6990.664551    1.500000 -7190.713867   0.049316  200.000000           100.0     4.0     -6990.713867             1.0          True
4   -6990.664551   -6990.713867  577.133301 -6990.664551    1.500000 -6990.713867   0.049316    0.000000             0.0     3.0     -6990.713867             1.0         False
5   -6989.164551   -6990.713867  675.633301 -6989.164551    1.500000 -6990.713867   0.049316    1.500000             0.0     3.0     -6990.713867             1.0         False
6   -6989.164551   -6989.213867  775.633301 -6989.164551    1.500000 -6989.213867   0.049316    0.000000             0.0     2.0     -6990.713867             1.0         False
7   -6987.164551   -6989.164551  873.633301 -6987.164551    2.000000 -6989.164551   0.049316    1.950684             0.0     1.0     -6990.713867             1.0          True
8   -6987.164551   -6987.213867  873.633301 -6987.164551    1.500000 -6987.213867   0.049316    0.000000          -100.0     2.0     -6987.213867             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 15:41:27]  --------------------------------------------------------------------------------
[08/23 15:41:27]  Iteration: 14 (0 solution, 13 counterexamples)
[08/23 15:41:27]  Generator returned sat in 0.068012 secs.
[08/23 15:41:28]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:41:28]  Improved gap from 0.0 to 23.4375
[08/23 15:41:28]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 15:41:28]  Verifer returned sat in 0.473194 secs.
[08/23 15:41:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7028.314209   -7136.501709  314.733643 -7028.314209   0.024658 -7136.501709        0.0  108.187500        100.0000     1.0     -7136.501709            -1.0            -1
1   -7028.314209   -7051.751709  314.733643 -7028.314209   0.049316 -7051.751709        0.0   23.437500          0.0000     2.0     -7136.501709             0.0         False
2   -7028.314209   -7028.314209  391.296143 -7028.314209   0.024658 -7028.314209        0.0    0.000000        -23.4375     3.0     -7028.314209             1.0          True
3   -6966.227051   -7004.876709  452.646484 -6966.227051  62.087158 -7004.876709        0.0   38.649658          0.0000     1.0     -7028.314209             1.0         False
4   -6937.564209   -6966.227051  523.983643 -6937.564209  67.312500 -6966.227051        0.0   28.662842          0.0000     2.0     -7028.314209             0.0         False
5   -6937.564209   -6937.564209  600.546143 -6937.564209   2.000000 -6937.564209        0.0    0.000000        -23.4375     2.0     -6937.564209             1.0          True
6   -6890.689209   -6914.126709  677.108643 -6890.689209  46.875000 -6914.126709        0.0   23.437500          0.0000     1.0     -6937.564209             1.0         False
7   -6867.251709   -6890.689209  753.671143 -6867.251709  46.875000 -6890.689209        0.0   23.437500          0.0000     2.0     -6937.564209             0.0         False
8   -6867.251709   -6867.251709  753.671143 -6867.251709   2.000000 -6867.251709        0.0    0.000000       -100.0000     2.0     -6867.251709             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 15:41:29]  --------------------------------------------------------------------------------
[08/23 15:41:29]  Iteration: 15 (0 solution, 14 counterexamples)
[08/23 15:41:29]  Generator returned sat in 0.365501 secs.
[08/23 15:41:29]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:41:30]  Improved gap from 0.0 to 0
[08/23 15:41:30]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 15:41:30]  Verifer returned sat in 0.523657 secs.
[08/23 15:41:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -6961.801025   -7061.788574  258.183105 -6961.801025    0.012207 -7061.788574        0.0  99.987549       -0.012207     8.0     -7061.788574            -1.0            -1
1   -6961.776367   -6961.788818  358.170654 -6961.776367  100.012207 -6961.788818        0.0   0.012451        0.000000     1.0     -7061.788574             0.0         False
2   -6961.739746   -6961.764404  458.121582 -6961.739746    0.049072 -6961.764404        0.0   0.024658       -0.012451     1.0     -6961.739746             0.0         False
3   -6960.251953   -6961.727295  556.646240 -6960.251953    1.512451 -6961.727295        0.0   1.475342        0.000000     1.0     -6961.739746             0.0         False
4   -6960.227295   -6960.239746  655.146240 -6960.227295    1.500000 -6960.239746        0.0   0.012451       -1.475342     1.0     -6960.227295             0.0         False
5   -6958.739746   -6958.751953  755.134033 -6958.739746    1.500000 -6958.751953        0.0   0.012207        0.000000     1.0     -6960.227295             0.0         False
6   -6957.251953   -6957.264160  853.646240 -6957.251953    1.500000 -6957.264160        0.0   0.012207        0.000000     1.0     -6960.227295             0.0         False
7   -6955.764160   -6957.251953  952.158447 -6955.764160    1.500000 -6957.251953        0.0   1.487793        0.000000     2.0     -6960.227295             0.0         False
8   -6955.751953   -6955.751953  952.158691 -6955.751953    1.500000 -6955.751953        0.0   0.000000      -99.987549     1.0     -6960.227295             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 15:41:30]  --------------------------------------------------------------------------------
[08/23 15:41:30]  Iteration: 16 (0 solution, 15 counterexamples)
[08/23 15:41:31]  Generator returned sat in 0.346982 secs.
[08/23 15:41:31]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:41:32]  Improved gap from 0.0016666666666666668 to 0
[08/23 15:41:32]  Improved number of small numbers from 59 to 99 out of a max of 110
[08/23 15:41:32]  Verifer returned sat in 1.095287 secs.
[08/23 15:41:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -6764.794434   -6864.793213   458.174805 -6764.794434    0.011963 -6864.793213        0.0  99.998779       99.998584     1.0     -6864.793213            -1.0            -1
1   -6764.793213   -6764.793945   458.174805 -6764.793213  100.000000 -6764.793945        0.0   0.000732       -0.000195     1.0     -6864.793213             0.0         False
2   -6763.292236   -6764.790527   556.673340 -6763.292236    1.501709 -6764.790527        0.0   1.498291       -0.000684     1.0     -6763.292236             0.0         False
3   -6763.289795   -6763.291260   656.671387 -6763.289795    1.500732 -6763.291260        0.0   0.001465       -0.000195     1.0     -6763.289795             0.0         False
4   -6761.791260   -6763.289551   755.172363 -6761.791260    1.500000 -6763.289551        0.0   1.498291       -0.000684     1.0     -6761.791260             0.0         False
5   -6761.789551   -6761.790485   855.170654 -6761.789551    1.500000 -6761.790485        0.0   0.000934       -0.000684     1.0     -6761.791260             0.0         False
6   -6760.290485   -6761.788818   953.672272 -6760.290485    1.500000 -6761.788818        0.0   1.498333        0.000000     1.0     -6761.791260             0.0         False
7   -6760.288818   -6760.290485  1053.662354 -6760.288818    1.500000 -6760.290485        0.0   0.001667       -0.008252     2.0     -6761.791260             0.0         False
8   -6760.280485   -6760.280518  1053.662354 -6760.280485    0.010000 -6760.280518        0.0   0.000033      -99.999919     1.0     -6760.280485             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 15:41:33]  --------------------------------------------------------------------------------
[08/23 15:41:33]  Iteration: 17 (0 solution, 16 counterexamples)
[08/23 15:41:36]  Generator returned sat in 2.764323 secs.
[08/23 15:41:36]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:36]  Improved number of small numbers from 28 to 109 out of a max of 109
[08/23 15:41:36]  Verifer returned sat in 0.344123 secs.
[08/23 15:41:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7460.314941   -7660.327148  1253.696777 -7460.314941  300.012207 -7660.327148    0.000000  200.012207           200.0     2.0     -7660.327148            -1.0            -1
1   -7360.314941   -7660.302734  1253.696777 -7360.314941  300.012207 -7660.302734    0.000000  299.987793           200.0     2.0     -7660.327148             0.0         False
2   -7260.314941   -7560.314941  1253.696777 -7260.314941  399.987793 -7560.314941    0.000000  300.000000           200.0     3.0     -7660.327148             0.0         False
3   -7160.290527   -7460.314941  1253.696777 -7160.290527  400.024414 -7460.314941    0.024414  300.000000           200.0     4.0     -7660.327148             0.0         False
4   -7060.266113   -7360.314941  1253.696777 -7060.266113  400.024414 -7360.314941    0.048828  300.000000           200.0     4.0     -7660.327148             1.0          True
5   -6760.290527   -7260.314941  1253.696777 -6760.290527  599.975586 -7260.314941  200.024414  300.000000           200.0     4.0     -7660.327148             1.0          True
6   -6460.290527   -7160.314941  1253.696777 -6460.290527  600.000000 -7160.314941  400.024414  300.000000           200.0     4.0     -7660.327148             1.0          True
7   -6160.290527   -6960.314941  1253.696777 -6160.290527  600.000000 -6960.314941  600.024414  200.000000           200.0     3.0     -7660.327148             1.0          True
8   -6060.290527   -6860.315186  1253.696777 -6060.290527  300.000000 -6860.315186  600.024414  200.000244           200.0     3.0     -6660.314941             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 15:41:37]  --------------------------------------------------------------------------------
[08/23 15:41:37]  Iteration: 18 (0 solution, 17 counterexamples)
[08/23 15:41:37]  Generator returned sat in 0.090911 secs.
[08/23 15:41:38]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:38]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/23 15:41:38]  Verifer returned sat in 0.150753 secs.
[08/23 15:41:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7460.314941   -7660.327148  1253.696777 -7460.314941  300.012207 -7660.327148        0.0  200.012207           200.0     2.0     -7660.327148            -1.0            -1
1   -7360.314941   -7660.302734  1253.696777 -7360.314941  300.012207 -7660.302734        0.0  299.987793           200.0     2.0     -7660.327148             0.0         False
2   -7260.314941   -7560.314941  1253.696777 -7260.314941  399.987793 -7560.314941        0.0  300.000000           200.0     3.0     -7660.327148             0.0         False
3   -6960.314941   -7460.314941  1253.696777 -6960.314941  600.000000 -7460.314941      200.0  300.000000           200.0     4.0     -7660.327148             0.0         False
4   -6660.314941   -7360.314941  1253.696777 -6660.314941  600.000000 -7360.314941      400.0  300.000000           200.0     4.0     -7660.327148             1.0          True
5   -6360.314941   -7260.314941  1253.696777 -6360.314941  600.000000 -7260.314941      600.0  300.000000           200.0     4.0     -7660.327148             1.0          True
6   -6060.314941   -7160.314941  1253.696777 -6060.314941  600.000000 -7160.314941      800.0  300.000000           200.0     4.0     -7660.327148             1.0          True
7   -5760.314941   -6960.314941  1253.696777 -5760.314941  600.000000 -6960.314941     1000.0  200.000000           200.0     3.0     -7660.327148             1.0          True
8   -5660.314941   -6860.315186  1253.696777 -5660.314941  300.000000 -6860.315186     1000.0  200.000244           200.0     3.0     -6660.314941             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 15:41:38]  --------------------------------------------------------------------------------
[08/23 15:41:38]  Iteration: 19 (0 solution, 18 counterexamples)
[08/23 15:41:39]  Generator returned sat in 0.089595 secs.
[08/23 15:41:39]  Candidate solution: 
[1m[94mif(qbound[t-1][3]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:39]  Improved number of small numbers from 109 to 109 out of a max of 109
[08/23 15:41:39]  Verifer returned sat in 0.224500 secs.
[08/23 15:41:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7460.314941   -7760.314941  1253.696777 -7460.314941     400.0 -7760.314941        0.0  300.000000           200.0     2.0     -7760.314941            -1.0            -1
1   -7360.314941   -7660.314941  1253.696777 -7360.314941     400.0 -7660.314941        0.0  300.000000           200.0     2.0     -7760.314941             0.0         False
2   -7260.314941   -7560.314941  1253.696777 -7260.314941     400.0 -7560.314941        0.0  300.000000           200.0     3.0     -7760.314941             0.0         False
3   -6960.314941   -7460.314941  1253.696777 -6960.314941     600.0 -7460.314941      200.0  300.000000           200.0     4.0     -7760.314941             0.0         False
4   -6660.314941   -7360.314941  1253.696777 -6660.314941     600.0 -7360.314941      400.0  300.000000           200.0     4.0     -7760.314941             1.0          True
5   -6360.314941   -7260.314941  1253.696777 -6360.314941     600.0 -7260.314941      600.0  300.000000           200.0     4.0     -7760.314941             1.0          True
6   -6060.314941   -7160.314941  1253.696777 -6060.314941     600.0 -7160.314941      800.0  300.000000           200.0     4.0     -7760.314941             1.0          True
7   -5760.314941   -6960.314941  1253.696777 -5760.314941     600.0 -6960.314941     1000.0  200.000000           200.0     3.0     -7760.314941             1.0          True
8   -5660.314941   -6860.315186  1253.696777 -5660.314941     300.0 -6860.315186     1000.0  200.000244           200.0     3.0     -6660.314941             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 15:41:40]  --------------------------------------------------------------------------------
[08/23 15:41:40]  Iteration: 20 (0 solution, 19 counterexamples)
[08/23 15:41:41]  Generator returned sat in 0.779528 secs.
[08/23 15:41:41]  Candidate solution: 
[1m[94mif(qbound[t-1][6]):
	c_f[0][t] = max(0.01, 3/2c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 15:41:41]  Improved gap from 0.0 to 1.5625
[08/23 15:41:41]  Improved number of small numbers from 50 to 110 out of a max of 110
[08/23 15:41:41]  Verifer returned sat in 0.375572 secs.
[08/23 15:41:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0   -7265.828857   -7265.877686   859.259277 -7265.828857    0.024170 -7265.877686    0.00000    0.048828        0.048584     2.0     -7265.877686            -1.0            -1
1   -7265.828857   -7265.877441   957.696777 -7265.828857    0.024414 -7265.877441    0.00000    0.048584       -1.513916     2.0     -7265.877686             0.0         False
2   -6964.290771   -7264.314941   957.696777 -6964.290771  301.586670 -7264.314941    0.02417  300.000000      200.000000     1.0     -7265.877686             0.0         False
3   -6964.290771   -7064.314941   957.696777 -6964.290771    0.024414 -7064.314941    0.02417  100.000000      100.000000     2.0     -6964.314941             0.0         False
4   -6964.290771   -6966.290527   957.696777 -6964.290771    2.000000 -6966.290527    0.02417    1.975586        0.000000     3.0     -6964.314941             0.0         False
5   -6964.266357   -6964.290527  1056.109863 -6964.266357    2.000000 -6964.290527    0.02417    0.000000       -1.562500     1.0     -6964.314941             0.0         False
6   -6962.266357   -6962.728027  1154.547363 -6962.266357    2.000000 -6962.728027    0.02417    0.437500       -1.125000     1.0     -6964.314941             0.0         False
7   -6960.703857   -6961.165527  1252.984863 -6960.703857    2.000000 -6961.165527    0.02417    0.437500       -1.125000     1.0     -6964.314941             0.0         False
8   -6959.141357   -6959.165771  1350.984863 -6959.141357    2.000000 -6959.165771    0.02417    0.000244       -1.562500     1.0     -6964.314941             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 15:41:42]  --------------------------------------------------------------------------------
[08/23 15:41:42]  Iteration: 21 (0 solution, 20 counterexamples)
[08/23 15:41:44]  Generator returned sat in 1.719584 secs.
[08/23 15:41:44]  Candidate solution: 
[1m[94mif(qbound[t-1][8]):
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:44]  Improved gap from 0.0033333333333333335 to 100
[08/23 15:41:45]  Improved number of small numbers from 30 to 48 out of a max of 110
[08/23 15:41:45]  Verifer returned sat in 1.118454 secs.
[08/23 15:41:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -17067.579346  -17167.725586  10760.912361 -17067.579346   100.097168 -17167.725586      0.000000  100.146240       99.951180     8.0    -17167.725586            -1.0            -1
1  -17067.579346  -17167.530518  10760.912361 -17067.579346   100.097412 -17167.530518      0.000000   99.951172       -0.048820     3.0    -17167.725586             0.0         False
2  -17067.481689  -17067.530525  10760.912361 -17067.481689   100.048828 -17067.530525      0.000000    0.048836      -99.951164     1.0    -17067.481689             0.0         False
3   -7465.874519  -16967.530525  10760.912361  -7465.874519  9601.656006 -16967.530525   9201.656006  300.000000      200.000000     1.0    -17067.481689             0.0         False
4   -2965.046516  -16867.530525  10760.912361  -2965.046516  4800.828003 -16867.530525  13602.484009  300.000000      200.000000     2.0    -16567.530525             0.0         False
5    -864.632515  -16767.530525  10760.912361   -864.632515  2400.414001 -16767.530525  15602.898010  300.000000      200.000000     3.0    -16467.530525             0.0         False
6      35.574486  -16667.481819  10760.912361     35.574486  1200.207001 -16667.481819  16403.105011  299.951294      200.000000     3.0    -16367.530525             0.0         False
7     335.726692  -16467.530525  10760.912361    335.726692   600.103500 -16467.530525  16603.257217  200.000000      200.000000     3.0    -16267.530525             0.0         False
8     435.778442  -16367.530762  10760.912361    435.778442   300.051750 -16367.530762  16603.308968  200.000237      200.000000     3.0    -16167.530525             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 15:41:46]  --------------------------------------------------------------------------------
[08/23 15:41:46]  Iteration: 22 (0 solution, 21 counterexamples)
[08/23 15:41:47]  Generator returned sat in 0.866856 secs.
[08/23 15:41:47]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:48]  Improved number of small numbers from 48 to 71 out of a max of 109
[08/23 15:41:48]  Verifer returned sat in 0.995219 secs.
[08/23 15:41:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -17167.481934  -17167.530518  10760.912354 -17167.481934   200.036377 -17167.530518      0.000000    0.048584        0.000000     1.0    -17167.530518            -1.0            -1
1  -16967.493896  -17167.481934  10760.912354 -16967.493896   200.036621 -17167.481934      0.000000  199.988037       99.988037     2.0    -17167.530518             0.0         False
2  -16967.457520  -16967.481934  10760.912354 -16967.457520   200.024414 -16967.481934      0.000000    0.024414        0.024414     1.0    -16967.457520             1.0          True
3  -16767.469788  -16967.445496  10760.912354 -16767.469788   200.012146 -16967.445496      0.000000  199.975708      100.012146     1.0    -16767.469788             0.0         False
4  -16567.421204  -16867.481934  10760.912354 -16567.421204   400.024292 -16867.481934      0.060730  300.000000      200.000000     2.0    -16767.469788             0.0         False
5  -16067.372620  -16767.481934  10760.912354 -16067.372620   800.048584 -16767.481934    400.109314  300.000000      200.000000     3.0    -16767.469788             1.0         False
6  -14767.275452  -16567.481934  10760.912354 -14767.275452  1600.097168 -16567.481934   1600.206482  200.000000      200.000000     3.0    -16767.469788             1.0         False
7  -11767.081116  -16567.481934  10760.912354 -11767.081116  3200.194336 -16567.481934   4500.400818  300.000000      200.000000     3.0    -16767.469788             1.0         False
8   -5666.692444  -16467.469971  10760.912354  -5666.692444  6400.388672 -16467.469971  10500.789490  299.988037      200.000000     3.0    -16767.469788             1.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=5.[0m
[08/23 15:41:49]  --------------------------------------------------------------------------------
[08/23 15:41:49]  Iteration: 23 (0 solution, 22 counterexamples)
[08/23 15:41:50]  Generator returned sat in 0.679447 secs.
[08/23 15:41:50]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:41:50]  Improved gap from 0.0008333333333333334 to 100
[08/23 15:41:50]  Improved number of small numbers from 84 to 110 out of a max of 110
[08/23 15:41:50]  Verifer returned sat in 0.331645 secs.
[08/23 15:41:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -17667.348389  -17667.372559  10760.912354 -17667.348389  499.927246 -17667.372559    0.000000    0.024170        0.024170     6.0    -17667.372559            -1.0            -1
1  -17167.469727  -17667.324219  10760.912354 -17167.469727  499.902832 -17667.324219  199.902832  299.951660      200.000000     1.0    -17367.372559             1.0         False
2  -17067.445557  -17567.299561  10760.912354 -17067.445557  399.975830 -17567.299561  199.927002  299.927002      200.000000     2.0    -17267.372559             0.0         False
3  -16967.421143  -17367.372559  10760.912354 -16967.421143  399.951416 -17367.372559  199.951416  200.000000      200.000000     3.0    -17167.372559             0.0         False
4  -16767.469727  -17367.348389  10760.912354 -16767.469727  399.951416 -17367.348389  299.902832  299.975830      200.000000     3.0    -17167.372559             1.0         False
5  -16667.494141  -17267.299805  10760.912354 -16667.494141  399.951416 -17267.299805  299.902832  299.902832      199.975586     3.0    -17167.372559             1.0         False
6  -16567.445557  -17167.299805  10760.912354 -16567.445557  399.951416 -17167.299805  299.927002  299.927246      200.000000     3.0    -17167.372559             1.0         False
7  -16467.421387  -16967.372559  10760.912354 -16467.421387  399.951416 -16967.372559  299.951172  200.000000      200.000000     2.0    -17167.372559             1.0         False
8  -16267.469971  -16867.372803  10760.912354 -16267.469971  399.951416 -16867.372803  399.902588  200.000244      200.000000     3.0    -17167.372559             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=4.[0m
[08/23 15:41:51]  --------------------------------------------------------------------------------
[08/23 15:41:51]  Iteration: 24 (0 solution, 23 counterexamples)
[08/23 15:41:53]  Generator returned sat in 0.991328 secs.
[08/23 15:41:53]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 15:41:53]  Improved gap from 0.0 to 23.4375
[08/23 15:41:54]  Improved number of small numbers from 49 to 110 out of a max of 110
[08/23 15:41:54]  Verifer returned sat in 0.922273 secs.
[08/23 15:41:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -17326.316650  -17373.143066  10707.738770 -17326.316650   0.024170 -17373.143066        0.0  46.826416       46.826416     3.0    -17373.143066            -1.0            -1
1  -17326.316650  -17349.802490  10760.912354 -17326.316650   0.048584 -17349.802490        0.0  23.485840        0.000000     2.0    -17373.143066             1.0         False
2  -17326.316650  -17326.316650  10837.474609 -17326.316650   0.024170 -17326.316650        0.0   0.000000      -23.437744     3.0    -17326.316650             0.0         False
3  -17256.802490  -17299.181152  10891.398193 -17256.802490  69.514160 -17299.181152        0.0  42.378662        0.000000     1.0    -17326.316650             1.0         False
4  -17256.802490  -17256.802490  10967.960693 -17256.802490  38.980957 -17256.802490        0.0   0.000000      -23.437500     2.0    -17256.802490             0.0         False
5  -17208.302490  -17233.364990  11040.874023 -17208.302490  48.500000 -17233.364990        0.0  25.062500       -2.024170     1.0    -17256.802490             0.0         False
6  -17184.889160  -17206.278320  11117.436523 -17184.889160  48.475830 -17206.278320        0.0  21.389160       -2.048340     1.0    -17184.889160             0.0         False
7  -17157.826904  -17182.840576  11192.422607 -17157.826904  48.451416 -17182.840576        0.0  25.013672        0.000000     1.0    -17157.826904             0.0         False
8  -17143.859619  -17157.826904  11192.422607 -17143.859619  38.980957 -17157.826904        0.0  13.967285      -86.032715     2.0    -17143.859619             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 15:41:54]  --------------------------------------------------------------------------------
[08/23 15:41:54]  Iteration: 25 (0 solution, 24 counterexamples)
[08/23 15:41:57]  Generator returned sat in 2.628235 secs.
[08/23 15:41:57]  Candidate solution: 
[1m[94mif(qbound[t-1][7]):
	c_f[0][t] = max(0.01, 2c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 15:41:58]  Improved gap from 0.0 to 0
[08/23 15:41:58]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 15:41:58]  Verifer returned sat in 0.387157 secs.
[08/23 15:41:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -17276.736816  -17476.712646  10707.738770 -17276.736816  299.97583 -17476.712646        0.0  199.97583        99.97583     2.0    -17476.712646            -1.0            -1
1  -17176.736816  -17276.712646  10707.738770 -17176.736816  299.97583 -17276.712646        0.0   99.97583        99.97583     1.0    -17476.712646             0.0         False
2  -17175.785156  -17176.712646  10707.738770 -17175.785156  100.92749 -17176.712646        0.0    0.92749         0.92749     1.0    -17175.785156             0.0         False
3  -17175.785156  -17176.712646  10806.787109 -17175.785156    0.02417 -17176.712646        0.0    0.92749        -0.02417     1.0    -17175.785156             0.0         False
4  -17175.712646  -17175.760986  10906.738770 -17175.712646    1.00000 -17175.760986        0.0    0.04834         0.00000     1.0    -17175.785156             0.0         False
5  -17174.760986  -17175.712646  11005.787109 -17174.760986    1.00000 -17175.712646        0.0    0.95166         0.00000     2.0    -17175.785156             0.0         False
6  -17174.712646  -17174.736816  11105.738770 -17174.712646    1.00000 -17174.736816        0.0    0.02417         0.00000     1.0    -17175.785156             0.0         False
7  -17173.736816  -17173.760986  11204.762939 -17173.736816    1.00000 -17173.760986        0.0    0.02417         0.00000     1.0    -17175.785156             0.0         False
8  -17172.760986  -17173.712646  11303.787109 -17172.760986    1.00000 -17173.712646        0.0    0.95166         0.00000     1.0    -17175.785156             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 15:41:58]  --------------------------------------------------------------------------------
[08/23 15:41:58]  Iteration: 26 (0 solution, 25 counterexamples)
[08/23 15:42:00]  Generator returned sat in 1.254066 secs.
[08/23 15:42:00]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 15:42:01]  Improved gap from 0.003265380859375 to 0
[08/23 15:42:01]  Improved number of small numbers from 59 to 110 out of a max of 110
[08/23 15:42:01]  Verifer returned sat in 0.627804 secs.
[08/23 15:42:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -17726.280029  -17826.282471  10806.740967 -17726.280029    0.001221 -17826.282471        0.0  100.002441      100.002441     5.0    -17826.282471            -1.0            -1
1  -17726.280029  -17726.282471  10806.740967 -17726.280029    0.001221 -17726.282471        0.0    0.002441        0.002441     3.0    -17826.282471             1.0         False
2  -17726.280029  -17726.282471  10906.738525 -17726.280029    0.001221 -17726.282471        0.0    0.002441        0.000000     3.0    -17826.282471             1.0          True
3  -17526.278564  -17726.280029  10906.738525 -17526.278564  200.003906 -17726.280029        0.0  200.001465      100.001465     4.0    -17826.282471             1.0         False
4  -17526.278564  -17526.282471  10906.738525 -17526.278564    0.010000 -17526.282471        0.0    0.003906        0.001465     2.0    -17526.278564             1.0          True
5  -17525.282471  -17526.280029  11005.740967 -17525.282471    1.000000 -17526.280029        0.0    0.997559        0.000000     3.0    -17526.278564             1.0         False
6  -17525.280029  -17525.281250  11105.738525 -17525.280029    1.000000 -17525.281250        0.0    0.001221        0.000000     1.0    -17526.278564             1.0         False
7  -17524.281250  -17525.280029  11204.739746 -17524.281250    1.000000 -17525.280029        0.0    0.998779        0.000000     2.0    -17526.278564             0.0         False
8  -17524.281250  -17524.281250  11204.739990 -17524.281250    0.010000 -17524.281250        0.0    0.000000      -99.999756     2.0    -17524.281250             1.0          True
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 15:42:02]  --------------------------------------------------------------------------------
[08/23 15:42:02]  Iteration: 27 (0 solution, 26 counterexamples)
[08/23 15:42:03]  Generator returned sat in 0.940967 secs.
[08/23 15:42:03]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 15:42:04]  Improved number of small numbers from 47 to 109 out of a max of 109
[08/23 15:42:04]  Verifer returned sat in 0.384273 secs.
[08/23 15:42:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t   cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -18211.379150  -18511.378906  11104.72583 -18211.379150    0.02417 -18511.378906    0.000000  299.999756      199.999756     5.0    -18511.378906            -1.0            -1
1  -18111.354736  -18411.378906  11104.72583 -18111.354736  400.02417 -18411.378906    0.024170  300.000000      200.000000     4.0    -18511.378906             1.0         False
2  -18021.306396  -18301.378906  11104.72583 -18021.306396  390.04834 -18301.378906    0.024170  280.048340      190.048340     3.0    -18021.330566             1.0          True
3  -17911.330566  -18111.378906  11104.72583 -17911.330566  390.02417 -18111.378906    0.048340  200.000000      200.000000     3.0    -17911.378906             1.0         False
4  -17719.306396  -18011.379150  11104.72583 -17719.306396  392.02417 -18011.379150   92.072510  200.000244      200.000000     2.0    -17911.378906             1.0         False
5  -17525.282471  -18007.427002  11104.72583 -17525.282471  394.02417 -18007.427002  186.096436  296.048096      200.000000     3.0    -17911.378906             0.0         False
6  -17425.306396  -17811.378906  11104.72583 -17425.306396  396.02417 -17811.378906  186.096436  199.976074      199.976074     3.0    -17911.378906             1.0         False
7  -17227.258301  -17811.378906  11104.72583 -17227.258301  398.02417 -17811.378906  284.120605  300.000000      200.000000     3.0    -17911.378906             1.0         False
8  -17127.234131  -17611.379150  11104.72583 -17127.234131  400.02417 -17611.379150  284.144775  200.000244      200.000000     2.0    -17911.378906             1.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=4.[0m
[08/23 15:42:04]  --------------------------------------------------------------------------------
[08/23 15:42:04]  Iteration: 28 (0 solution, 27 counterexamples)
[08/23 15:42:05]  Generator returned sat in 0.308090 secs.
[08/23 15:42:05]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:42:06]  Improved number of small numbers from 71 to 109 out of a max of 109
[08/23 15:42:06]  Verifer returned sat in 0.344955 secs.
[08/23 15:42:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -18211.379150  -18511.378906  11104.725586 -18211.379150    0.024170 -18511.378906    0.000000  299.999756      199.999756     2.0    -18511.378906            -1.0            -1
1  -18111.366943  -18411.378906  11104.725586 -18111.366943  400.011963 -18411.378906    0.011963  300.000000      200.000000     2.0    -18511.378906             0.0         False
2  -18018.842773  -18301.379150  11104.725586 -18018.842773  392.524170 -18301.379150    0.011963  282.524414      192.524170     3.0    -18018.854736             0.0         False
3  -17908.854980  -18117.818604  11104.725586 -17908.854980  392.512207 -18117.818604    2.523926  206.439697      200.000000     3.0    -17911.378906             1.0         False
4  -17721.282471  -18011.379150  11104.725586 -17721.282471  394.012207 -18011.379150   90.096436  200.000244      200.000000     2.0    -17911.378906             1.0         False
5  -17525.770508  -18008.403320  11104.725586 -17525.770508  395.512207 -18008.403320  185.608398  297.024414      200.000000     3.0    -17911.378906             0.0         False
6  -17425.782715  -17811.378906  11104.725586 -17425.782715  397.012207 -17811.378906  185.608398  199.987793      199.987793     3.0    -17911.378906             1.0         False
7  -17227.258301  -17811.378906  11104.725586 -17227.258301  398.512207 -17811.378906  284.120605  300.000000      200.000000     3.0    -17911.378906             1.0         False
8  -17127.246094  -17611.379150  11104.725586 -17127.246094  400.012207 -17611.379150  284.132812  200.000244      200.000000     2.0    -17911.378906             1.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=4.[0m
[08/23 15:42:06]  --------------------------------------------------------------------------------
[08/23 15:42:06]  Iteration: 29 (0 solution, 28 counterexamples)
[08/23 15:42:07]  Generator returned sat in 0.216392 secs.
[08/23 15:42:07]  Candidate solution: 
[1m[94mif(qbound[t-1][2]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 15:42:07]  Improved number of small numbers from 61 to 109 out of a max of 109
[08/23 15:42:07]  Verifer returned sat in 0.325850 secs.
[08/23 15:42:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -18211.384766  -18411.378906  11104.725342 -18211.384766    0.024170 -18411.378906   0.000000  199.994141      199.994141     1.0    -18411.378906            -1.0            -1
1  -18111.372803  -18411.378906  11104.725342 -18111.372803  300.006104 -18411.378906   0.006104  300.000000      200.000000     1.0    -18411.378906             0.0         False
2  -18011.366943  -18211.378906  11104.725342 -18011.366943  400.005859 -18211.378906   0.011963  200.000000      200.000000     2.0    -18411.378906             0.0         False
3  -17911.360840  -18111.379150  11104.725342 -17911.360840  300.006104 -18111.379150   0.018066  200.000244      200.000000     3.0    -17911.378906             0.0         False
4  -17810.854980  -18014.890869  11104.725342 -17810.854980  300.506104 -18014.890869   0.523926  203.511963      200.000000     3.0    -17911.378906             1.0         False
5  -17713.360840  -17911.384766  11104.725342 -17713.360840  301.006104 -17911.384766   0.523926  197.500000      197.494141     3.0    -17911.378906             1.0         False
6  -17609.354736  -17813.379150  11104.725342 -17609.354736  301.506104 -17813.379150   2.024170  202.000244      200.000000     3.0    -17911.378906             1.0         False
7  -17509.348877  -17713.878906  11104.725342 -17509.348877  302.006104 -17713.878906   2.030029  202.500000      200.000000     2.0    -17911.378906             1.0         False
8  -17409.342773  -17611.379150  11104.725342 -17409.342773  302.506104 -17611.379150   2.036133  200.000244      200.000000     3.0    -17911.378906             0.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=4.[0m
[08/23 15:42:08]  --------------------------------------------------------------------------------
[08/23 15:42:08]  Iteration: 30 (0 solution, 29 counterexamples)
[08/23 15:42:12]  Generator returned sat in 3.598356 secs.
[08/23 15:42:12]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 15:42:13]  Improved number of small numbers from 45 to 109 out of a max of 109
[08/23 15:42:13]  Verifer returned sat in 0.258872 secs.
[08/23 15:42:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -18308.897217  -18411.379150  11104.725342 -18308.897217    0.024170 -18411.379150    0.000000  102.481934      102.481689     1.0    -18411.379150            -1.0            -1
1  -18111.373047  -18411.378906  11104.725342 -18111.373047  300.006104 -18411.378906    0.005859  300.000000      200.000000     2.0    -18411.379150             0.0         False
2  -18011.366943  -18308.890869  11104.725342 -18011.366943  400.006104 -18308.890869    0.011963  297.511963      200.000000     2.0    -18411.379150             1.0          True
3  -17911.372803  -18209.385010  11104.725342 -17911.372803  397.506104 -18209.385010    0.011963  298.000244      199.994141     3.0    -17911.384766             1.0          True
4  -17811.366943  -18011.378906  11104.725342 -17811.366943  398.006104 -18011.378906    0.011963  200.000000      200.000000     3.0    -17911.384766             1.0         False
5  -17612.860840  -18010.379150  11104.725342 -17612.860840  398.506104 -18010.379150   98.518066  299.000244      200.000000     3.0    -17911.384766             1.0         False
6  -17512.854980  -17811.378906  11104.725342 -17512.854980  399.006104 -17811.378906   98.523926  200.000000      200.000000     3.0    -17911.384766             1.0         False
7  -17313.348877  -17811.378906  11104.725342 -17313.348877  399.506104 -17811.378906  198.030029  300.000000      200.000000     3.0    -17911.384766             1.0         False
8  -17213.342773  -17711.372803  11104.725342 -17213.342773  400.006104 -17711.372803  198.036133  299.993896      200.000000     3.0    -17911.384766             1.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=4.[0m
[08/23 15:42:13]  --------------------------------------------------------------------------------
[08/23 15:42:13]  Iteration: 31 (0 solution, 30 counterexamples)
[08/23 15:42:16]  Generator returned sat in 1.533343 secs.
[08/23 15:42:16]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:42:16]  Improved gap from 0.02398681640625 to 100
[08/23 15:42:16]  Improved number of small numbers from 67 to 110 out of a max of 110
[08/23 15:42:16]  Verifer returned sat in 0.379601 secs.
[08/23 15:42:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -18214.408691  -18315.861084  11104.725342 -18214.408691    0.048096 -18315.861084   0.000000  101.452393      100.000244     1.0    -18315.861084            -1.0            -1
1  -18214.408691  -18214.408936  11104.725342 -18214.408691  101.404053 -18214.408936   0.000000    0.000244        0.000244     2.0    -18315.861084             0.0         False
2  -17914.408936  -18214.408936  11104.725342 -17914.408936  300.000000 -18214.408936   0.000000  300.000000      200.000000     2.0    -18315.861084             1.0          True
3  -17914.408936  -18015.861084  11104.725342 -17914.408936  300.000000 -18015.861084   0.000000  101.452148      100.000000     2.0    -18315.861084             1.0         False
4  -17714.361084  -17914.408936  11104.725342 -17714.361084  301.500000 -17914.408936   0.047852  200.000000      200.000000     3.0    -18315.861084             1.0          True
5  -17612.861084  -17913.956787  11104.725342 -17612.861084  301.500000 -17913.956787   1.547852  299.547852      200.000000     2.0    -18315.861084             1.0          True
6  -17610.456787  -17715.408936  11104.725342 -17610.456787  301.952148 -17715.408936   1.547852  103.404297      102.404297     3.0    -18315.861084             1.0          True
7  -17411.908936  -17615.135010  11104.725342 -17411.908936  301.952148 -17615.135010   2.500000  200.726074      200.000000     3.0    -18315.861084             1.0          True
8  -17311.861084  -17514.408936  11104.725342 -17311.861084  300.773926 -17514.408936   2.547852  200.000000      200.000000     2.0    -17314.408936             1.0          True
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 15:42:17]  --------------------------------------------------------------------------------
[08/23 15:42:17]  Iteration: 32 (0 solution, 31 counterexamples)
[08/23 15:42:18]  Generator returned sat in 0.533789 secs.
[08/23 15:42:18]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:42:18]  Improved gap from 0.00299072265625 to 0
[08/23 15:42:19]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 15:42:19]  Verifer returned sat in 0.592601 secs.
[08/23 15:42:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -18315.182861  -18413.658936  11203.975342 -18315.182861    0.023926 -18413.658936   0.000000   98.476074       98.476074     9.0    -18413.658936            -1.0            -1
1  -18313.682861  -18315.182861  11203.975342 -18313.682861   99.976074 -18315.182861   0.000000    1.500000       -0.023926     4.0    -18413.658936             1.0         False
2  -18013.635010  -18313.658936  11203.975342 -18013.635010  301.547852 -18313.658936   0.023926  300.000000      200.000000     1.0    -18413.658936             1.0          True
3  -18012.087158  -18164.408936  11203.975342 -18012.087158  301.547852 -18164.408936   0.023926  152.297852      101.547852     2.0    -18413.658936             0.0         False
4  -18012.087158  -18013.658936  11203.975342 -18012.087158  152.273926 -18013.658936   0.023926    1.547852        1.547852     3.0    -18012.111084             1.0          True
5  -18012.087158  -18013.635010  11302.427490 -18012.087158    1.500000 -18013.635010   0.023926    1.523926        0.000000     3.0    -18012.111084             1.0         False
6  -18012.087158  -18012.111084  11402.427490 -18012.087158    1.500000 -18012.111084   0.023926    0.000000        0.000000     4.0    -18012.111084             1.0         False
7  -18010.587158  -18010.635010  11500.927490 -18010.587158    1.500000 -18010.635010   0.023926    0.023926        0.000000     1.0    -18012.111084             1.0         False
8  -18009.111084  -18010.587158  11599.451416 -18009.111084    1.500000 -18010.587158   0.023926    1.452148        0.000000     1.0    -18012.111084             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 15:42:19]  --------------------------------------------------------------------------------
[08/23 15:42:19]  Iteration: 33 (0 solution, 32 counterexamples)
[08/23 15:42:21]  Generator returned sat in 1.466450 secs.
[08/23 15:42:21]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:42:22]  Improved gap from 0.0 to 100
[08/23 15:42:22]  Improved number of small numbers from 110 to 110 out of a max of 110
[08/23 15:42:22]  Verifer returned sat in 0.314516 secs.
[08/23 15:42:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -18405.730713  -18505.754639  11203.975342 -18405.730713    0.023926 -18505.754639   0.000000  100.023926        7.928223     1.0    -18505.754639            -1.0            -1
1  -18405.706787  -18405.730713  11203.975342 -18405.706787  100.047852 -18405.730713   0.000000    0.023926      -92.047852     2.0    -18505.754639             0.0         False
2  -18159.706787  -18305.730713  11203.975342 -18159.706787  246.023926 -18305.730713   0.000000  146.023926       53.952148     1.0    -18505.754639             1.0          True
3  -17959.706787  -18159.706787  11203.975342 -17959.706787  346.023926 -18159.706787   0.000000  200.000000      153.952148     2.0    -18505.754639             0.0         False
4  -17813.658936  -18059.682861  11203.975342 -17813.658936  346.047852 -18059.682861   0.000000  246.023926      200.000000     2.0    -18505.754639             1.0          True
5  -17713.635010  -17959.682861  11203.975342 -17713.635010  346.047852 -17959.682861   0.023926  246.023926      200.000000     2.0    -18505.754639             1.0          True
6  -17613.611084  -17813.658936  11203.975342 -17613.611084  346.047852 -17813.658936   0.047852  200.000000      200.000000     3.0    -18505.754639             1.0          True
7  -17467.563232  -17713.658936  11203.975342 -17467.563232  346.047852 -17713.658936  46.095703  200.000000      200.000000     3.0    -18505.754639             1.0          True
8  -17321.539307  -17613.658936  11203.975342 -17321.539307  346.023926 -17613.658936  92.119629  200.000000      200.000000     3.0    -17413.658936             1.0          True
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 15:42:22]  --------------------------------------------------------------------------------
[08/23 15:42:22]  Iteration: 34 (0 solution, 33 counterexamples)
[08/23 15:42:25]  Generator returned sat in 1.799400 secs.
[08/23 15:42:25]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 1/2c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 15:42:26]  Improved gap from 0.0059814453125 to 1.5625
[08/23 15:42:26]  Improved number of small numbers from 56 to 110 out of a max of 110
[08/23 15:42:26]  Verifer returned sat in 0.695386 secs.
[08/23 15:42:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -17521.335205  -17621.303955  10411.620117 -17521.335205  0.031006 -17621.303955        0.0  99.96875        99.96875     9.0    -17621.303955            -1.0            -1
1  -17521.335205  -17523.741455  10411.620117 -17521.335205  0.031006 -17523.741455        0.0   2.40625        -0.03125     3.0    -17621.303955             1.0         False
2  -17519.741455  -17521.303955  10510.057617 -17519.741455  4.000000 -17521.303955        0.0   1.56250         0.00000     1.0    -17621.303955             1.0          True
3  -17517.303955  -17519.741455  10607.620117 -17517.303955  4.000000 -17519.741455        0.0   2.43750         0.00000     2.0    -17621.303955             0.0         False
4  -17515.741455  -17517.303955  10706.057617 -17515.741455  4.000000 -17517.303955        0.0   1.56250         0.00000     2.0    -17621.303955             1.0          True
5  -17513.303955  -17515.741455  10803.620117 -17513.303955  4.000000 -17515.741455        0.0   2.43750         0.00000     2.0    -17621.303955             1.0          True
6  -17511.741455  -17513.303955  10902.057617 -17511.741455  4.000000 -17513.303955        0.0   1.56250         0.00000     2.0    -17621.303955             1.0          True
7  -17509.303955  -17510.866455  10999.620117 -17509.303955  4.000000 -17510.866455        0.0   1.56250         0.00000     1.0    -17621.303955             1.0          True
8  -17509.303955  -17509.303955  11098.057617 -17509.303955  1.500000 -17509.303955        0.0   0.00000        -1.56250     2.0    -17509.303955             0.0         False
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 15:42:26]  --------------------------------------------------------------------------------
[08/23 15:42:26]  Iteration: 35 (0 solution, 34 counterexamples)
[08/23 15:42:29]  Generator returned sat in 2.108342 secs.
[08/23 15:42:29]  Candidate solution: 
[1m[94mif(qbound[t-1][1]):
	c_f[0][t] = max(0.01, 0c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 15:42:30]  Improved gap from 0.0016666666666666668 to 100
[08/23 15:42:30]  Improved number of small numbers from 64 to 110 out of a max of 110
[08/23 15:42:30]  Verifer returned sat in 0.515671 secs.
[08/23 15:42:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t  qdelay  last_decrease_f  exceed_queue_f this_decrease
0  -17916.038330  -18115.990723  10999.620117 -17916.038330  400.143555 -18115.990723    0.000000  199.952393       99.952393     1.0    -18115.990723            -1.0            -1
1  -17715.847168  -17915.990723  10999.620117 -17715.847168  400.143555 -17915.990723    0.143555  200.000000      200.000000     1.0    -18115.990723             0.0         False
2  -17515.751465  -17815.990723  10999.620117 -17515.751465  400.095703 -17815.990723  100.239258  200.000000      200.000000     2.0    -17615.990723             0.0         False
3  -17315.703613  -17815.990723  10999.620117 -17315.703613  400.047852 -17815.990723  200.287109  300.000000      200.000000     2.0    -17515.990723             1.0         False
4  -17215.655762  -17715.942871  10999.620117 -17215.655762  400.047852 -17715.942871  200.334961  299.952148      200.000000     3.0    -17515.990723             1.0         False
5  -17115.560059  -17516.038574  10999.620117 -17115.560059  400.047852 -17516.038574  200.430664  200.047852      200.000000     3.0    -17515.990723             1.0         False
6  -16915.560059  -17415.990723  10999.620117 -16915.560059  400.047852 -17415.990723  300.430664  200.000000      200.000000     3.0    -17515.990723             1.0         False
7  -16715.512207  -17415.990723  10999.620117 -16715.512207  400.047852 -17415.990723  400.478516  300.000000      200.000000     3.0    -17515.990723             1.0         False
8  -16615.464355  -17215.990723  10999.620117 -16615.464355  400.047852 -17215.990723  400.526367  200.000000      200.000000     3.0    -17515.990723             1.0         False
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=5.[0m
[08/23 15:42:30]  --------------------------------------------------------------------------------
[08/23 15:42:30]  Iteration: 36 (0 solution, 35 counterexamples)
[08/23 15:42:32]  Generator returned unsat in 0.770001 secs.
[08/23 15:42:32]  [96mNo more solutions found[0m
[08/23 15:42:32]  Final solutions:
[08/23 15:42:32]  Took 88.276398 secs.
