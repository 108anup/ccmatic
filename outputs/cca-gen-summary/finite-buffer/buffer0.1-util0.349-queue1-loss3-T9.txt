[08/23 17:49:05]  --------------------------------------------------------------------------------
[08/23 17:49:05]  Iteration: 1 (0 solution, 0 counterexamples)
[08/23 17:49:05]  Generator returned sat in 0.004324 secs.
[08/23 17:49:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:05]  Improved gap from 0.0 to 100
[08/23 17:49:06]  Improved number of small numbers from 98 to 98 out of a max of 100
[08/23 17:49:06]  Verifer returned sat in 0.413830 secs.
[08/23 17:49:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t
0   -1194.242500   -1194.442500   271.075  -1194.242500     0.100000 -1194.442500      0.000000    0.200000             0.0
1   -1194.242500   -1194.242500   271.075  -1194.242500     0.100000 -1194.242500      0.000000    0.000000          -100.0
2    -974.342500    -994.242500   271.075   -974.342500   219.900000  -994.242500      0.000000   19.900000            19.9
3    -874.142500    -943.375833   271.075   -874.142500   120.100000  -943.375833      0.100000   69.133333            20.0
4    -258.992500    -794.442500   271.075   -258.992500   684.283333  -794.442500    515.250000   20.200000            20.0
5    1548.832500    -694.342500   271.075   1548.832500  1828.025000  -694.342500   2223.075000   20.100000            20.0
6    4872.570000    -694.242500   271.075   4872.570000  3343.837500  -694.242500   5446.812500  120.000000            20.0
7   10268.592917    -594.242500   271.075  10268.592917  5516.022917  -594.242500  10742.835417  120.000000            20.0
8   18825.027292    -494.242500   271.075  18825.027292  8676.434375  -494.242500  19199.269792  120.000000            20.0
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=5.[0m
[08/23 17:49:06]  --------------------------------------------------------------------------------
[08/23 17:49:06]  Iteration: 2 (0 solution, 1 counterexamples)
[08/23 17:49:06]  Generator returned sat in 0.042971 secs.
[08/23 17:49:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:49:06]  Improved gap from 0.00125 to 25.0
[08/23 17:49:07]  Improved number of small numbers from 56 to 100 out of a max of 100
[08/23 17:49:07]  Verifer returned sat in 0.501200 secs.
[08/23 17:49:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    1148.532715    1028.532959  271.074951  1148.532715    0.100000  1028.532959   0.000000  119.999756       20.000000
1    1248.632812    1128.532813  271.074951  1248.632812  220.099854  1128.532813   0.100098  119.999902       20.000000
2    1348.532813    1328.532715  271.074951  1348.532813  219.899902  1328.532715   0.100098   19.900000       19.900000
3    1358.632812    1329.632568  341.074951  1358.632812   30.000000  1329.632568   0.100098   28.900146        0.000000
4    1358.732666    1358.532715  416.074951  1358.732666   29.000000  1358.532715   0.100098    0.099854      -24.900146
5    1386.632812    1383.532715  491.074951  1386.632812   28.000000  1383.532715   0.100098    3.000000      -22.000000
6    1410.632812    1408.532715  565.074951  1410.632812   27.000000  1408.532715   0.100098    2.000000      -24.000000
7    1434.632812    1434.532715  640.074951  1434.632812   26.000000  1434.532715   0.100098    0.000000      -25.000000
8    1459.632812    1459.532715  640.074951  1459.632812   25.000000  1459.532715   0.100098    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:49:07]  --------------------------------------------------------------------------------
[08/23 17:49:07]  Iteration: 3 (0 solution, 2 counterexamples)
[08/23 17:49:07]  Generator returned sat in 0.009819 secs.
[08/23 17:49:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 17:49:07]  Improved gap from 25.0 to 25.0
[08/23 17:49:07]  Improved number of small numbers from 66 to 100 out of a max of 100
[08/23 17:49:07]  Verifer returned sat in 0.506892 secs.
[08/23 17:49:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0    1168.632568    1148.632812  210.875244  1168.632568    0.099854  1148.632812        0.0  19.999756       19.999756
1    1248.632812    1248.532715  210.875244  1248.632812  100.000000  1248.532715        0.0   0.100098        0.000000
2    1273.632568    1248.632812  285.875000  1273.632568   25.099854  1248.632812        0.0  24.999756       -0.000488
3    1283.632812    1283.532959  350.974854  1283.632812   35.000000  1283.532959        0.0   0.099854      -24.900391
4    1316.532959    1316.432861  418.074951  1316.532959   33.000000  1316.432861        0.0   0.100098      -24.900146
5    1347.432861    1341.433105  493.074951  1347.432861   31.000000  1341.433105        0.0   5.999756      -19.000244
6    1370.433105    1370.333008  563.475098  1370.433105   29.000000  1370.333008        0.0   0.100098      -25.599854
7    1397.333008    1396.032959  638.475098  1397.333008   27.000000  1396.032959        0.0   1.300049      -23.699951
8    1421.032959    1421.032959  713.474854  1421.032959   25.000000  1421.032959        0.0   0.000000      -25.000244
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:49:08]  --------------------------------------------------------------------------------
[08/23 17:49:08]  Iteration: 4 (0 solution, 3 counterexamples)
[08/23 17:49:08]  Generator returned sat in 0.073172 secs.
[08/23 17:49:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:49:08]  Verifer returned unsat in 0.137159 secs.
[08/23 17:49:08]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:49:08]  --------------------------------------------------------------------------------
[08/23 17:49:08]  Iteration: 5 (1 solution, 3 counterexamples)
[08/23 17:49:08]  Generator returned sat in 0.005173 secs.
[08/23 17:49:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:08]  Verifer returned unsat in 0.130278 secs.
[08/23 17:49:08]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:08]  --------------------------------------------------------------------------------
[08/23 17:49:08]  Iteration: 6 (2 solution, 3 counterexamples)
[08/23 17:49:08]  Generator returned sat in 0.004739 secs.
[08/23 17:49:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:49:08]  Improved gap from 0.000625 to 0
[08/23 17:49:09]  Improved number of small numbers from 49 to 69 out of a max of 100
[08/23 17:49:09]  Verifer returned sat in 0.931729 secs.
[08/23 17:49:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0    1018.086914    1017.935952   341.572021  1018.086914  0.099609  1017.935952        0.0  0.150962        0.150879
1    1018.086914    1018.085693   441.421143  1018.086914  0.001221  1018.085693        0.0  0.001221        0.000000
2    1018.281250    1018.087094   541.226807  1018.281250  0.195557  1018.087094        0.0  0.194156        0.000000
3    1018.282604    1018.281354   641.225453  1018.282604  0.195509  1018.281354        0.0  0.001250        0.000000
4    1018.494965    1018.282604   741.013092  1018.494965  0.213611  1018.282604        0.0  0.212361        0.000000
5    1018.494965    1018.494965   841.012939  1018.494965  0.010000  1018.494965        0.0  0.000000       -0.000152
6    1018.616770    1018.495117   940.891286  1018.616770  0.121806  1018.495117        0.0  0.121653        0.000000
7    1018.616770    1018.616770  1040.880127  1018.616770  0.010000  1018.616770        0.0  0.000000       -0.011159
8    1018.628020    1018.627930  1140.879883  1018.628020  0.011250  1018.627930        0.0  0.000091       -0.000153
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:49:09]  --------------------------------------------------------------------------------
[08/23 17:49:09]  Iteration: 7 (2 solution, 4 counterexamples)
[08/23 17:49:10]  Generator returned sat in 0.041412 secs.
[08/23 17:49:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  Verifer returned unsat in 0.078897 secs.
[08/23 17:49:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  --------------------------------------------------------------------------------
[08/23 17:49:10]  Iteration: 8 (3 solution, 4 counterexamples)
[08/23 17:49:10]  Generator returned sat in 0.009121 secs.
[08/23 17:49:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  Verifer returned unsat in 0.084509 secs.
[08/23 17:49:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  --------------------------------------------------------------------------------
[08/23 17:49:10]  Iteration: 9 (4 solution, 4 counterexamples)
[08/23 17:49:10]  Generator returned sat in 0.006527 secs.
[08/23 17:49:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  Verifer returned unsat in 0.061835 secs.
[08/23 17:49:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  --------------------------------------------------------------------------------
[08/23 17:49:10]  Iteration: 10 (5 solution, 4 counterexamples)
[08/23 17:49:10]  Generator returned sat in 0.006462 secs.
[08/23 17:49:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  Verifer returned unsat in 0.088517 secs.
[08/23 17:49:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  --------------------------------------------------------------------------------
[08/23 17:49:10]  Iteration: 11 (6 solution, 4 counterexamples)
[08/23 17:49:10]  Generator returned sat in 0.020188 secs.
[08/23 17:49:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  Verifer returned unsat in 0.143198 secs.
[08/23 17:49:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:10]  --------------------------------------------------------------------------------
[08/23 17:49:10]  Iteration: 12 (7 solution, 4 counterexamples)
[08/23 17:49:11]  Generator returned sat in 0.005570 secs.
[08/23 17:49:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:11]  Verifer returned unsat in 0.111693 secs.
[08/23 17:49:11]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:11]  --------------------------------------------------------------------------------
[08/23 17:49:11]  Iteration: 13 (8 solution, 4 counterexamples)
[08/23 17:49:11]  Generator returned sat in 0.005472 secs.
[08/23 17:49:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:11]  Verifer returned unsat in 0.126744 secs.
[08/23 17:49:11]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:11]  --------------------------------------------------------------------------------
[08/23 17:49:11]  Iteration: 14 (9 solution, 4 counterexamples)
[08/23 17:49:11]  Generator returned sat in 0.005393 secs.
[08/23 17:49:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:11]  Verifer returned unsat in 0.105116 secs.
[08/23 17:49:11]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:11]  --------------------------------------------------------------------------------
[08/23 17:49:11]  Iteration: 15 (10 solution, 4 counterexamples)
[08/23 17:49:11]  Generator returned sat in 0.017070 secs.
[08/23 17:49:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:11]  Verifer returned unsat in 0.213999 secs.
[08/23 17:49:11]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:11]  --------------------------------------------------------------------------------
[08/23 17:49:11]  Iteration: 16 (11 solution, 4 counterexamples)
[08/23 17:49:11]  Generator returned sat in 0.006617 secs.
[08/23 17:49:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  Verifer returned unsat in 0.074883 secs.
[08/23 17:49:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  --------------------------------------------------------------------------------
[08/23 17:49:12]  Iteration: 17 (12 solution, 4 counterexamples)
[08/23 17:49:12]  Generator returned sat in 0.006452 secs.
[08/23 17:49:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  Verifer returned unsat in 0.054831 secs.
[08/23 17:49:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  --------------------------------------------------------------------------------
[08/23 17:49:12]  Iteration: 18 (13 solution, 4 counterexamples)
[08/23 17:49:12]  Generator returned sat in 0.006193 secs.
[08/23 17:49:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  Verifer returned unsat in 0.090854 secs.
[08/23 17:49:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  --------------------------------------------------------------------------------
[08/23 17:49:12]  Iteration: 19 (14 solution, 4 counterexamples)
[08/23 17:49:12]  Generator returned sat in 0.013026 secs.
[08/23 17:49:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  Verifer returned unsat in 0.121281 secs.
[08/23 17:49:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  --------------------------------------------------------------------------------
[08/23 17:49:12]  Iteration: 20 (15 solution, 4 counterexamples)
[08/23 17:49:12]  Generator returned sat in 0.005396 secs.
[08/23 17:49:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  Verifer returned unsat in 0.078884 secs.
[08/23 17:49:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  --------------------------------------------------------------------------------
[08/23 17:49:12]  Iteration: 21 (16 solution, 4 counterexamples)
[08/23 17:49:12]  Generator returned sat in 0.005293 secs.
[08/23 17:49:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  Verifer returned unsat in 0.072120 secs.
[08/23 17:49:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:12]  --------------------------------------------------------------------------------
[08/23 17:49:12]  Iteration: 22 (17 solution, 4 counterexamples)
[08/23 17:49:12]  Generator returned sat in 0.006747 secs.
[08/23 17:49:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  Verifer returned unsat in 0.063255 secs.
[08/23 17:49:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  --------------------------------------------------------------------------------
[08/23 17:49:13]  Iteration: 23 (18 solution, 4 counterexamples)
[08/23 17:49:13]  Generator returned sat in 0.005201 secs.
[08/23 17:49:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  Verifer returned unsat in 0.093035 secs.
[08/23 17:49:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  --------------------------------------------------------------------------------
[08/23 17:49:13]  Iteration: 24 (19 solution, 4 counterexamples)
[08/23 17:49:13]  Generator returned sat in 0.006535 secs.
[08/23 17:49:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  Verifer returned unsat in 0.111007 secs.
[08/23 17:49:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  --------------------------------------------------------------------------------
[08/23 17:49:13]  Iteration: 25 (20 solution, 4 counterexamples)
[08/23 17:49:13]  Generator returned sat in 0.005254 secs.
[08/23 17:49:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  Verifer returned unsat in 0.142853 secs.
[08/23 17:49:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  --------------------------------------------------------------------------------
[08/23 17:49:13]  Iteration: 26 (21 solution, 4 counterexamples)
[08/23 17:49:13]  Generator returned sat in 0.005339 secs.
[08/23 17:49:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  Verifer returned unsat in 0.153415 secs.
[08/23 17:49:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:13]  --------------------------------------------------------------------------------
[08/23 17:49:13]  Iteration: 27 (22 solution, 4 counterexamples)
[08/23 17:49:13]  Generator returned sat in 0.005337 secs.
[08/23 17:49:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  Verifer returned unsat in 0.150837 secs.
[08/23 17:49:14]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  --------------------------------------------------------------------------------
[08/23 17:49:14]  Iteration: 28 (23 solution, 4 counterexamples)
[08/23 17:49:14]  Generator returned sat in 0.005179 secs.
[08/23 17:49:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  Verifer returned unsat in 0.138838 secs.
[08/23 17:49:14]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  --------------------------------------------------------------------------------
[08/23 17:49:14]  Iteration: 29 (24 solution, 4 counterexamples)
[08/23 17:49:14]  Generator returned sat in 0.010969 secs.
[08/23 17:49:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  Verifer returned unsat in 0.096914 secs.
[08/23 17:49:14]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  --------------------------------------------------------------------------------
[08/23 17:49:14]  Iteration: 30 (25 solution, 4 counterexamples)
[08/23 17:49:14]  Generator returned sat in 0.005800 secs.
[08/23 17:49:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  Verifer returned unsat in 0.070234 secs.
[08/23 17:49:14]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  --------------------------------------------------------------------------------
[08/23 17:49:14]  Iteration: 31 (26 solution, 4 counterexamples)
[08/23 17:49:14]  Generator returned sat in 0.005770 secs.
[08/23 17:49:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  Verifer returned unsat in 0.059245 secs.
[08/23 17:49:14]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:14]  --------------------------------------------------------------------------------
[08/23 17:49:14]  Iteration: 32 (27 solution, 4 counterexamples)
[08/23 17:49:14]  Generator returned sat in 0.005740 secs.
[08/23 17:49:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  Verifer returned unsat in 0.071001 secs.
[08/23 17:49:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  --------------------------------------------------------------------------------
[08/23 17:49:15]  Iteration: 33 (28 solution, 4 counterexamples)
[08/23 17:49:15]  Generator returned sat in 0.005777 secs.
[08/23 17:49:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  Verifer returned unsat in 0.062747 secs.
[08/23 17:49:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  --------------------------------------------------------------------------------
[08/23 17:49:15]  Iteration: 34 (29 solution, 4 counterexamples)
[08/23 17:49:15]  Generator returned sat in 0.017082 secs.
[08/23 17:49:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  Verifer returned unsat in 0.077480 secs.
[08/23 17:49:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  --------------------------------------------------------------------------------
[08/23 17:49:15]  Iteration: 35 (30 solution, 4 counterexamples)
[08/23 17:49:15]  Generator returned sat in 0.005578 secs.
[08/23 17:49:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  Verifer returned unsat in 0.080868 secs.
[08/23 17:49:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  --------------------------------------------------------------------------------
[08/23 17:49:15]  Iteration: 36 (31 solution, 4 counterexamples)
[08/23 17:49:15]  Generator returned sat in 0.008400 secs.
[08/23 17:49:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  Verifer returned unsat in 0.068096 secs.
[08/23 17:49:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  --------------------------------------------------------------------------------
[08/23 17:49:15]  Iteration: 37 (32 solution, 4 counterexamples)
[08/23 17:49:15]  Generator returned sat in 0.005673 secs.
[08/23 17:49:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  Verifer returned unsat in 0.043060 secs.
[08/23 17:49:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  --------------------------------------------------------------------------------
[08/23 17:49:15]  Iteration: 38 (33 solution, 4 counterexamples)
[08/23 17:49:15]  Generator returned sat in 0.006829 secs.
[08/23 17:49:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  Verifer returned unsat in 0.091798 secs.
[08/23 17:49:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:15]  --------------------------------------------------------------------------------
[08/23 17:49:15]  Iteration: 39 (34 solution, 4 counterexamples)
[08/23 17:49:16]  Generator returned sat in 0.006558 secs.
[08/23 17:49:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:16]  Verifer returned unsat in 0.118035 secs.
[08/23 17:49:16]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:16]  --------------------------------------------------------------------------------
[08/23 17:49:16]  Iteration: 40 (35 solution, 4 counterexamples)
[08/23 17:49:16]  Generator returned sat in 0.006737 secs.
[08/23 17:49:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:16]  Verifer returned unsat in 0.064954 secs.
[08/23 17:49:16]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:16]  --------------------------------------------------------------------------------
[08/23 17:49:16]  Iteration: 41 (36 solution, 4 counterexamples)
[08/23 17:49:16]  Generator returned sat in 0.006391 secs.
[08/23 17:49:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:16]  Verifer returned unsat in 0.091251 secs.
[08/23 17:49:16]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:16]  --------------------------------------------------------------------------------
[08/23 17:49:16]  Iteration: 42 (37 solution, 4 counterexamples)
[08/23 17:49:16]  Generator returned sat in 0.126705 secs.
[08/23 17:49:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:49:16]  Improved gap from 0.02490234375 to 100
[08/23 17:49:17]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/23 17:49:17]  Verifer returned sat in 0.383957 secs.
[08/23 17:49:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0      83.565674      63.565918  2338.131836    83.565674    0.099609    63.565918     0.000000   19.999756       19.999756
1     163.565674      63.565918  2338.131836   163.565674   99.999756    63.565918     0.000000   99.999756       -0.000244
2     263.565918     163.565918  2338.131836   263.565918  200.000000   163.565918     0.000000  100.000000        0.000000
3     363.565918     263.565918  2338.131836   363.565918  200.000000   263.565918     0.000000  100.000000        0.000000
4     762.565918     463.565918  2338.131836   762.565918  499.000000   463.565918   279.000000   20.000000       20.000000
5    1140.565918     513.615723  2338.131836  1140.565918  398.000000   513.615723   557.000000   69.950195       20.000000
6    1418.665527     663.565918  2338.131836  1418.665527  348.049805   663.565918   735.099609   20.000000       20.000000
7    1796.665527     674.615723  2338.131836  1796.665527  398.000000   674.615723  1013.099609  108.950195       20.000000
8    1896.765137     763.565918  2338.131836  1896.765137  209.049805   763.565918  1013.199219  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 17:49:17]  --------------------------------------------------------------------------------
[08/23 17:49:17]  Iteration: 43 (37 solution, 5 counterexamples)
[08/23 17:49:17]  Generator returned sat in 0.169129 secs.
[08/23 17:49:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:49:17]  Improved gap from 0.0 to 0
[08/23 17:49:18]  Improved number of small numbers from 67 to 98 out of a max of 100
[08/23 17:49:18]  Verifer returned sat in 0.686077 secs.
[08/23 17:49:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0    1796.158203    1796.022705   605.541016  1796.158203  0.099365  1796.022705        0.0  0.135498        0.001465
1    1796.158203    1796.156738   705.539551  1796.158203  0.135254  1796.156738        0.0  0.001465        0.000000
2    1796.399658    1796.398682   805.297852  1796.399658  0.242920  1796.398682        0.0  0.000977       -0.000244
3    1796.411133    1796.399902   905.286621  1796.411133  0.012451  1796.399902        0.0  0.011230        0.000000
4    1796.654297    1796.411133  1005.043457  1796.654297  0.254395  1796.411133        0.0  0.243164        0.000000
5    1796.654297    1796.654297  1105.043457  1796.654297  0.010000  1796.654297        0.0  0.000000        0.000000
6    1796.665527    1796.654297  1205.032227  1796.665527  0.011230  1796.654297        0.0  0.011230        0.000000
7    1796.665527    1796.665527  1305.022461  1796.665527  0.010000  1796.665527        0.0  0.000000       -0.009766
8    1796.675527    1796.675293  1305.022461  1796.675527  0.010000  1796.675293        0.0  0.000234      -99.999766
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:49:18]  --------------------------------------------------------------------------------
[08/23 17:49:18]  Iteration: 44 (37 solution, 6 counterexamples)
[08/23 17:49:19]  Generator returned sat in 0.395632 secs.
[08/23 17:49:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:49:19]  Improved gap from 0.0 to 0
[08/23 17:49:20]  Improved number of small numbers from 60 to 73 out of a max of 100
[08/23 17:49:20]  Verifer returned sat in 1.338699 secs.
[08/23 17:49:20]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0     407.497314     407.477783  1235.800293   407.497314  0.099365   407.477783        0.0  0.019531        0.000777
1     407.497314     407.496621  1335.799072   407.497314  0.019531   407.496621        0.0  0.000693       -0.000443
2     407.815684     407.504883  1435.481147   407.815684  0.319063   407.504883        0.0  0.310801        0.000000
3     407.815684     407.815684  1535.472168   407.815684  0.001953   407.815684        0.0  0.000000       -0.008979
4     407.825684     407.824746  1635.463135   407.825684  0.010000   407.824746        0.0  0.000937       -0.008012
5     407.834746     407.833809  1735.461914   407.834746  0.010000   407.833809        0.0  0.000937       -0.000170
6     407.843809     407.842871  1835.453022   407.843809  0.010000   407.842871        0.0  0.000937        0.000000
7     407.852871     407.843809  1935.443115   407.852871  0.010000   407.843809        0.0  0.009062       -0.000844
8     407.853809     407.853760  2035.442139   407.853809  0.010000   407.853760        0.0  0.000049       -0.000883
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 17:49:20]  --------------------------------------------------------------------------------
[08/23 17:49:20]  Iteration: 45 (37 solution, 7 counterexamples)
[08/23 17:49:21]  Generator returned sat in 0.314358 secs.
[08/23 17:49:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:49:21]  Improved gap from 0.000234375 to 0
[08/23 17:49:22]  Improved number of small numbers from 54 to 64 out of a max of 100
[08/23 17:49:22]  Verifer returned sat in 1.370090 secs.
[08/23 17:49:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0    1835.819570    1835.469014 -296.982422  1835.819570  0.099121  1835.469014        0.0  0.350556        0.001151
1    1835.819570    1835.818604 -196.983573  1835.819570  0.000732  1835.818604        0.0  0.000966        0.000000
2    1835.819570    1835.819570  -96.983573  1835.819570  0.000488  1835.819570        0.0  0.000000        0.000000
3    1835.837070    1835.819570    2.998927  1835.837070  0.017500  1835.819570        0.0  0.017500        0.000000
4    1836.055681    1835.837158  102.780316  1836.055681  0.236111  1835.837158        0.0  0.218522        0.000000
5    1836.055681    1836.055681  202.770996  1836.055681  0.010000  1836.055681        0.0  0.000000       -0.009320
6    1836.065681    1836.065125  302.770264  1836.065681  0.010000  1836.065125        0.0  0.000556       -0.000052
7    1836.076236    1836.065918  402.759761  1836.076236  0.011111  1836.065918        0.0  0.010318        0.000000
8    1836.076236    1836.076236  502.759521  1836.076236  0.010000  1836.076236        0.0  0.000000       -0.000239
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:49:22]  --------------------------------------------------------------------------------
[08/23 17:49:22]  Iteration: 46 (37 solution, 8 counterexamples)
[08/23 17:49:24]  Generator returned sat in 0.990010 secs.
[08/23 17:49:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:25]  Improved number of small numbers from 32 to 38 out of a max of 99
[08/23 17:49:25]  Verifer returned sat in 1.397117 secs.
[08/23 17:49:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    1207.016357    1207.016120  231.819877  1207.016357    0.099121  1207.016120    0.000000    0.000237      -99.999763
1    1427.040900    1307.016120  231.819877  1427.040900  220.024780  1307.016120    0.024780  120.000000       20.000000
2    1427.040900    1407.016120  231.819877  1427.040900  119.975342  1407.016120    0.024780   20.000000      -80.000000
3    1627.065681    1607.016120  231.819877  1627.065681  220.024780  1607.016120    0.049561   20.000000       20.000000
4    1806.565681    1607.016120  231.819877  1806.565681  199.500000  1607.016120   79.549561  120.000000       20.000000
5    1836.065681    1756.491340  231.819877  1836.065681  149.500000  1756.491340   79.549561    0.024780      -50.500000
6    2410.266120    1887.365974  231.819877  2410.266120  574.225220  1887.365974  483.250000   39.650146       20.000000
7    2510.290900    2007.016120  231.819877  2510.290900  139.674927  2007.016120  483.274780   20.000000       20.000000
8    2689.790900    2007.016357  231.819877  2689.790900  199.500000  2007.016357  562.774780  119.999763       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=4.[0m
[08/23 17:49:25]  --------------------------------------------------------------------------------
[08/23 17:49:25]  Iteration: 47 (37 solution, 9 counterexamples)
[08/23 17:49:26]  Generator returned sat in 0.525795 secs.
[08/23 17:49:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:26]  Verifer returned unsat in 0.171285 secs.
[08/23 17:49:26]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:26]  --------------------------------------------------------------------------------
[08/23 17:49:26]  Iteration: 48 (38 solution, 9 counterexamples)
[08/23 17:49:26]  Generator returned sat in 0.027984 secs.
[08/23 17:49:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:26]  Verifer returned unsat in 0.117290 secs.
[08/23 17:49:26]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:26]  --------------------------------------------------------------------------------
[08/23 17:49:26]  Iteration: 49 (39 solution, 9 counterexamples)
[08/23 17:49:27]  Generator returned sat in 0.032159 secs.
[08/23 17:49:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:27]  Verifer returned unsat in 0.056501 secs.
[08/23 17:49:27]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:27]  --------------------------------------------------------------------------------
[08/23 17:49:27]  Iteration: 50 (40 solution, 9 counterexamples)
[08/23 17:49:27]  Generator returned sat in 0.026052 secs.
[08/23 17:49:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:27]  Verifer returned unsat in 0.078390 secs.
[08/23 17:49:27]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:27]  --------------------------------------------------------------------------------
[08/23 17:49:27]  Iteration: 51 (41 solution, 9 counterexamples)
[08/23 17:49:27]  Generator returned sat in 0.023998 secs.
[08/23 17:49:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:27]  Verifer returned unsat in 0.074665 secs.
[08/23 17:49:27]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:27]  --------------------------------------------------------------------------------
[08/23 17:49:27]  Iteration: 52 (42 solution, 9 counterexamples)
[08/23 17:49:27]  Generator returned sat in 0.027100 secs.
[08/23 17:49:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:27]  Verifer returned unsat in 0.071637 secs.
[08/23 17:49:27]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:27]  --------------------------------------------------------------------------------
[08/23 17:49:27]  Iteration: 53 (43 solution, 9 counterexamples)
[08/23 17:49:28]  Generator returned sat in 0.024613 secs.
[08/23 17:49:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:28]  Verifer returned unsat in 0.050873 secs.
[08/23 17:49:28]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:28]  --------------------------------------------------------------------------------
[08/23 17:49:28]  Iteration: 54 (44 solution, 9 counterexamples)
[08/23 17:49:28]  Generator returned sat in 0.022294 secs.
[08/23 17:49:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:28]  Verifer returned unsat in 0.043126 secs.
[08/23 17:49:28]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:28]  --------------------------------------------------------------------------------
[08/23 17:49:28]  Iteration: 55 (45 solution, 9 counterexamples)
[08/23 17:49:28]  Generator returned sat in 0.334471 secs.
[08/23 17:49:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:29]  Improved gap from 0.0 to 100
[08/23 17:49:29]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/23 17:49:29]  Verifer returned sat in 0.335865 secs.
[08/23 17:49:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t     cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6049.766113    -6049.81543  231.819824 -6049.766113     0.098877  -6049.81543        0.0    0.049316      -99.950684
1   -5849.815674    -5949.81543  231.819824 -5849.815674   199.999756  -5949.81543        0.0   99.999756       -0.000244
2   -5849.815430    -5849.81543  231.819824 -5849.815430   100.000000  -5849.81543        0.0    0.000000     -100.000000
3   -2133.815430    -5649.81543  231.819824 -2133.815430  3716.000000  -5649.81543     3496.0   20.000000       20.000000
4    -293.815430    -5549.81543  231.819824  -293.815430  1860.000000  -5549.81543     5236.0   20.000000       20.000000
5     618.184570    -5449.81543  231.819824   618.184570   932.000000  -5449.81543     6048.0   20.000000       20.000000
6    1066.184570    -5349.81543  231.819824  1066.184570   468.000000  -5349.81543     6396.0   20.000000       20.000000
7    1282.184570    -5249.81543  231.819824  1282.184570   236.000000  -5249.81543     6512.0   20.000000       20.000000
8    1382.184570    -5249.81543  231.819824  1382.184570   120.000000  -5249.81543     6512.0  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 17:49:29]  --------------------------------------------------------------------------------
[08/23 17:49:29]  Iteration: 56 (45 solution, 10 counterexamples)
[08/23 17:49:29]  Generator returned sat in 0.035301 secs.
[08/23 17:49:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:30]  Improved gap from 0.0 to 26.5625
[08/23 17:49:31]  Improved number of small numbers from 31 to 43 out of a max of 100
[08/23 17:49:31]  Verifer returned sat in 1.622439 secs.
[08/23 17:49:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     848.762695     728.762695  221.869824   848.762695    0.098877   728.762695    0.00000  120.000000       20.000000
1     902.218945     902.200439  221.869824   902.218945  173.456250   902.200439    0.00000    0.018506      -26.543750
2     992.250244     992.250195  231.819580   992.250244   90.049805   992.250195    0.00000    0.000049      -26.562695
3    1018.943945    1018.925195  305.144824  1018.943945   26.693750  1018.925195    0.00000    0.018750      -26.543750
4    1165.506445    1145.487695  305.144824  1165.506445  146.581250  1145.487695    0.01875   20.000000       20.000000
5    1165.506445    1145.487695  378.582324  1165.506445    2.000000  1145.487695    0.01875   20.000000       -6.562500
6    1223.625195    1172.050195  427.026074  1223.625195   78.118750  1172.050195    0.01875   51.556250        0.000000
7    1250.131445    1223.606445  500.463379  1250.131445   78.062500  1223.606445    0.01875   26.506250       -0.056445
8    1264.184570    1250.169189  500.463379  1264.184570   40.559375  1250.169189    0.01875   13.996631      -86.003320
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:49:31]  --------------------------------------------------------------------------------
[08/23 17:49:31]  Iteration: 57 (45 solution, 11 counterexamples)
[08/23 17:49:32]  Generator returned sat in 0.962434 secs.
[08/23 17:49:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:32]  Improved gap from 0.024658203125 to 100
[08/23 17:49:34]  Improved number of small numbers from 50 to 62 out of a max of 100
[08/23 17:49:34]  Verifer returned sat in 1.227056 secs.
[08/23 17:49:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0     902.243408     882.243604  500.463379   902.243408    0.098633   882.243604    0.000000   19.999805       19.999805
1    1002.218945     982.243408  500.463379  1002.218945  119.975342   982.243408    0.000000   19.975537       19.975342
2    1082.268066    1082.218994  500.463379  1082.268066  100.024658  1082.218994    0.000000    0.049072        0.024463
3    1082.268066    1082.243604  500.463379  1082.268066    0.024658  1082.243604    0.000000    0.024463      -99.975537
4    1383.768262    1250.005933  500.463379  1383.768262  301.524658  1250.005933   81.524658   52.237671       20.000000
5    1483.792920    1382.243604  500.463379  1483.792920  152.262329  1382.243604   81.549316   20.000000       20.000000
6    1541.424084    1382.243604  500.463379  1541.424084   77.631165  1382.243604   81.549316   77.631165      -22.368835
7    1992.924084    1511.184186  500.463379  1992.924084  529.131165  1511.184186  390.680481   91.059418       20.000000
8    2167.930249    1582.243652  500.463379  2167.930249  266.065582  1582.243652  465.686646  119.999951       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 17:49:34]  --------------------------------------------------------------------------------
[08/23 17:49:34]  Iteration: 58 (45 solution, 12 counterexamples)
[08/23 17:49:35]  Generator returned sat in 0.595846 secs.
[08/23 17:49:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:35]  Verifer returned unsat in 0.212465 secs.
[08/23 17:49:35]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:35]  --------------------------------------------------------------------------------
[08/23 17:49:35]  Iteration: 59 (46 solution, 12 counterexamples)
[08/23 17:49:35]  Generator returned sat in 0.033119 secs.
[08/23 17:49:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:35]  Verifer returned unsat in 0.090586 secs.
[08/23 17:49:35]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:35]  --------------------------------------------------------------------------------
[08/23 17:49:35]  Iteration: 60 (47 solution, 12 counterexamples)
[08/23 17:49:35]  Generator returned sat in 0.044321 secs.
[08/23 17:49:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:36]  Verifer returned unsat in 0.110242 secs.
[08/23 17:49:36]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:36]  --------------------------------------------------------------------------------
[08/23 17:49:36]  Iteration: 61 (48 solution, 12 counterexamples)
[08/23 17:49:36]  Generator returned sat in 0.039901 secs.
[08/23 17:49:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:36]  Verifer returned unsat in 0.072704 secs.
[08/23 17:49:36]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:36]  --------------------------------------------------------------------------------
[08/23 17:49:36]  Iteration: 62 (49 solution, 12 counterexamples)
[08/23 17:49:36]  Generator returned sat in 0.032049 secs.
[08/23 17:49:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:36]  Verifer returned unsat in 0.130174 secs.
[08/23 17:49:36]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:36]  --------------------------------------------------------------------------------
[08/23 17:49:36]  Iteration: 63 (50 solution, 12 counterexamples)
[08/23 17:49:37]  Generator returned sat in 0.104492 secs.
[08/23 17:49:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:37]  Verifer returned unsat in 0.305289 secs.
[08/23 17:49:37]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:37]  --------------------------------------------------------------------------------
[08/23 17:49:37]  Iteration: 64 (51 solution, 12 counterexamples)
[08/23 17:49:37]  Generator returned sat in 0.042101 secs.
[08/23 17:49:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:37]  Verifer returned unsat in 0.112626 secs.
[08/23 17:49:37]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:37]  --------------------------------------------------------------------------------
[08/23 17:49:37]  Iteration: 65 (52 solution, 12 counterexamples)
[08/23 17:49:37]  Generator returned sat in 0.032192 secs.
[08/23 17:49:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:38]  Verifer returned unsat in 0.169630 secs.
[08/23 17:49:38]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:38]  --------------------------------------------------------------------------------
[08/23 17:49:38]  Iteration: 66 (53 solution, 12 counterexamples)
[08/23 17:49:38]  Generator returned sat in 0.031774 secs.
[08/23 17:49:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:38]  Verifer returned unsat in 0.168460 secs.
[08/23 17:49:38]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:38]  --------------------------------------------------------------------------------
[08/23 17:49:38]  Iteration: 67 (54 solution, 12 counterexamples)
[08/23 17:49:38]  Generator returned sat in 0.029816 secs.
[08/23 17:49:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:38]  Verifer returned unsat in 0.117380 secs.
[08/23 17:49:38]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:38]  --------------------------------------------------------------------------------
[08/23 17:49:38]  Iteration: 68 (55 solution, 12 counterexamples)
[08/23 17:49:39]  Generator returned sat in 0.029336 secs.
[08/23 17:49:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:39]  Verifer returned unsat in 0.146783 secs.
[08/23 17:49:39]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:39]  --------------------------------------------------------------------------------
[08/23 17:49:39]  Iteration: 69 (56 solution, 12 counterexamples)
[08/23 17:49:39]  Generator returned sat in 0.031699 secs.
[08/23 17:49:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:39]  Verifer returned unsat in 0.077032 secs.
[08/23 17:49:39]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:39]  --------------------------------------------------------------------------------
[08/23 17:49:39]  Iteration: 70 (57 solution, 12 counterexamples)
[08/23 17:49:39]  Generator returned sat in 0.028327 secs.
[08/23 17:49:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:40]  Verifer returned unsat in 0.130567 secs.
[08/23 17:49:40]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:40]  --------------------------------------------------------------------------------
[08/23 17:49:40]  Iteration: 71 (58 solution, 12 counterexamples)
[08/23 17:49:40]  Generator returned sat in 0.161923 secs.
[08/23 17:49:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:40]  Improved gap from 0.0123291015625 to 100
[08/23 17:49:41]  Improved number of small numbers from 35 to 47 out of a max of 100
[08/23 17:49:41]  Verifer returned sat in 1.195262 secs.
[08/23 17:49:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0       8.875732       8.826454  500.430501     8.875732    0.098389     8.826454    0.000000    0.049278        0.049278
1     128.777138     108.826416  500.430501   128.777138  119.950684   108.826416    0.000000   19.950722       19.950684
2     128.777138     108.826660  500.430501   128.777138    0.049072   108.826660    0.000000   19.950477      -80.049316
3     208.875977     208.826454  500.430501   208.875977  100.049316   208.826454    0.000000    0.049523      -99.950477
4     560.851112     408.826454  500.430501   560.851112  352.024658   408.826454  132.024658   20.000000       20.000000
5     715.863441     442.320068  500.430501   715.863441  175.012329   442.320068  187.036987   86.506386       20.000000
6     715.863441     508.826454  500.430501   715.863441   86.506165   508.826454  187.036987   20.000000      -80.000000
7    1191.116524     664.082619  500.430501  1191.116524  495.253082   664.082619  462.290070   64.743835       20.000000
8    1372.999229     708.826660  500.430501  1372.999229  246.626541   708.826660  544.172775  119.999794       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 17:49:41]  --------------------------------------------------------------------------------
[08/23 17:49:41]  Iteration: 72 (58 solution, 13 counterexamples)
[08/23 17:49:43]  Generator returned sat in 1.220127 secs.
[08/23 17:49:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:44]  Improved number of small numbers from 47 to 61 out of a max of 99
[08/23 17:49:44]  Verifer returned sat in 0.918236 secs.
[08/23 17:49:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0     545.952148     445.903076 -36.646092   545.952148     0.098145   445.903076     0.000000  100.049072        0.049101
1     545.952148     545.903076 -36.646092   545.952148     0.049316   545.903076     0.000000    0.049072      -99.950899
2     745.902832     645.903048 -36.646092   745.902832   199.999756   645.903048     0.000000   99.999784       -0.000216
3    4580.477266     845.903048 -36.646092  4580.477266  3934.574219   845.903048  3714.574219   20.000000       20.000000
4    6526.264376     845.903048 -36.646092  6526.264376  1965.787109   845.903048  5560.361328  120.000000       20.000000
5    7387.657930    1045.903048 -36.646092  7387.657930   981.393555  1045.903048  6321.754883   20.000000       20.000000
6    7856.854708    1045.903048 -36.646092  7856.854708   489.196777  1045.903048  6690.951660  120.000000       20.000000
7    7979.953096    1245.903048 -36.646092  7979.953096   243.098389  1245.903048  6714.050049   20.000000       20.000000
8    8080.002291    1245.903076 -36.646092  8080.002291   120.049194  1245.903076  6714.099243  119.999971       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 17:49:44]  --------------------------------------------------------------------------------
[08/23 17:49:44]  Iteration: 73 (58 solution, 14 counterexamples)
[08/23 17:49:45]  Generator returned sat in 0.497808 secs.
[08/23 17:49:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:45]  Verifer returned unsat in 0.117275 secs.
[08/23 17:49:45]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:45]  --------------------------------------------------------------------------------
[08/23 17:49:45]  Iteration: 74 (59 solution, 14 counterexamples)
[08/23 17:49:45]  Generator returned sat in 0.047385 secs.
[08/23 17:49:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:45]  Verifer returned unsat in 0.088739 secs.
[08/23 17:49:45]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:45]  --------------------------------------------------------------------------------
[08/23 17:49:45]  Iteration: 75 (60 solution, 14 counterexamples)
[08/23 17:49:46]  Generator returned sat in 0.033674 secs.
[08/23 17:49:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:46]  Verifer returned unsat in 0.087716 secs.
[08/23 17:49:46]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:46]  --------------------------------------------------------------------------------
[08/23 17:49:46]  Iteration: 76 (61 solution, 14 counterexamples)
[08/23 17:49:46]  Generator returned sat in 0.329469 secs.
[08/23 17:49:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:49:46]  Verifer returned unsat in 0.109324 secs.
[08/23 17:49:46]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:49:46]  --------------------------------------------------------------------------------
[08/23 17:49:46]  Iteration: 77 (62 solution, 14 counterexamples)
[08/23 17:49:47]  Generator returned sat in 0.047874 secs.
[08/23 17:49:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:49:47]  Verifer returned unsat in 0.158711 secs.
[08/23 17:49:47]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:49:47]  --------------------------------------------------------------------------------
[08/23 17:49:47]  Iteration: 78 (63 solution, 14 counterexamples)
[08/23 17:49:47]  Generator returned sat in 0.043235 secs.
[08/23 17:49:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:49:47]  Verifer returned unsat in 0.110134 secs.
[08/23 17:49:47]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:49:47]  --------------------------------------------------------------------------------
[08/23 17:49:47]  Iteration: 79 (64 solution, 14 counterexamples)
[08/23 17:49:49]  Generator returned sat in 1.208757 secs.
[08/23 17:49:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:49]  Improved gap from 0.0025 to 0
[08/23 17:49:50]  Improved number of small numbers from 54 to 73 out of a max of 100
[08/23 17:49:50]  Verifer returned sat in 0.999368 secs.
[08/23 17:49:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0    5316.208252    5296.208252 -4786.951416  5316.208252    0.098145  5296.208252     0.0000  20.000000       19.999881
1    5316.208252    5316.206055 -4786.951387  5316.208252    0.002686  5316.206055     0.0000   0.002197      -80.000090
2    5516.205811    5496.208342 -4786.951387  5516.205811  199.999756  5496.208342     0.0000  19.997468       19.997468
3    5615.710842    5596.208342 -4786.951387  5615.710842  119.502500  5596.208342     0.0000  19.502500       19.502500
4    5716.210842    5696.208252 -4786.951387  5716.210842  120.002500  5696.208252     0.0025  20.000090       20.000000
5    5716.210842    5715.696045 -4706.951387  5716.210842    0.010000  5715.696045     0.0025   0.512297        0.000000
6    5716.210842    5716.208342 -4606.951387  5716.210842    0.510000  5716.208342     0.0025   0.000000        0.000000
7    5717.220842    5716.208342 -4507.961426  5717.220842    1.010000  5716.208342     0.0025   1.010000       -0.000039
8    5717.720842    5717.218506 -4409.468994  5717.720842    1.510000  5717.218506     0.0025   0.499837       -1.007607
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:49:50]  --------------------------------------------------------------------------------
[08/23 17:49:50]  Iteration: 80 (64 solution, 15 counterexamples)
[08/23 17:49:51]  Generator returned sat in 0.407239 secs.
[08/23 17:49:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:51]  Verifer returned unsat in 0.073844 secs.
[08/23 17:49:51]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:51]  --------------------------------------------------------------------------------
[08/23 17:49:51]  Iteration: 81 (65 solution, 15 counterexamples)
[08/23 17:49:51]  Generator returned sat in 0.045275 secs.
[08/23 17:49:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:51]  Verifer returned unsat in 0.058351 secs.
[08/23 17:49:51]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:51]  --------------------------------------------------------------------------------
[08/23 17:49:51]  Iteration: 82 (66 solution, 15 counterexamples)
[08/23 17:49:51]  Generator returned sat in 0.046723 secs.
[08/23 17:49:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:51]  Verifer returned unsat in 0.082996 secs.
[08/23 17:49:51]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:51]  --------------------------------------------------------------------------------
[08/23 17:49:51]  Iteration: 83 (67 solution, 15 counterexamples)
[08/23 17:49:52]  Generator returned sat in 0.044190 secs.
[08/23 17:49:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:52]  Verifer returned unsat in 0.060817 secs.
[08/23 17:49:52]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:52]  --------------------------------------------------------------------------------
[08/23 17:49:52]  Iteration: 84 (68 solution, 15 counterexamples)
[08/23 17:49:52]  Generator returned sat in 0.066803 secs.
[08/23 17:49:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:52]  Verifer returned unsat in 0.065897 secs.
[08/23 17:49:52]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:52]  --------------------------------------------------------------------------------
[08/23 17:49:52]  Iteration: 85 (69 solution, 15 counterexamples)
[08/23 17:49:52]  Generator returned sat in 0.063676 secs.
[08/23 17:49:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:53]  Verifer returned unsat in 0.061778 secs.
[08/23 17:49:53]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:53]  --------------------------------------------------------------------------------
[08/23 17:49:53]  Iteration: 86 (70 solution, 15 counterexamples)
[08/23 17:49:53]  Generator returned sat in 0.049913 secs.
[08/23 17:49:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:53]  Verifer returned unsat in 0.057183 secs.
[08/23 17:49:53]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:53]  --------------------------------------------------------------------------------
[08/23 17:49:53]  Iteration: 87 (71 solution, 15 counterexamples)
[08/23 17:49:53]  Generator returned sat in 0.055569 secs.
[08/23 17:49:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:53]  Verifer returned unsat in 0.055148 secs.
[08/23 17:49:53]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:53]  --------------------------------------------------------------------------------
[08/23 17:49:53]  Iteration: 88 (72 solution, 15 counterexamples)
[08/23 17:49:54]  Generator returned sat in 0.051345 secs.
[08/23 17:49:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:54]  Verifer returned unsat in 0.093084 secs.
[08/23 17:49:54]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:54]  --------------------------------------------------------------------------------
[08/23 17:49:54]  Iteration: 89 (73 solution, 15 counterexamples)
[08/23 17:49:54]  Generator returned sat in 0.051354 secs.
[08/23 17:49:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:54]  Verifer returned unsat in 0.076931 secs.
[08/23 17:49:54]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:54]  --------------------------------------------------------------------------------
[08/23 17:49:54]  Iteration: 90 (74 solution, 15 counterexamples)
[08/23 17:49:54]  Generator returned sat in 0.053548 secs.
[08/23 17:49:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:54]  Verifer returned unsat in 0.068167 secs.
[08/23 17:49:54]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:54]  --------------------------------------------------------------------------------
[08/23 17:49:54]  Iteration: 91 (75 solution, 15 counterexamples)
[08/23 17:49:55]  Generator returned sat in 0.046300 secs.
[08/23 17:49:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:55]  Verifer returned unsat in 0.064869 secs.
[08/23 17:49:55]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:55]  --------------------------------------------------------------------------------
[08/23 17:49:55]  Iteration: 92 (76 solution, 15 counterexamples)
[08/23 17:49:55]  Generator returned sat in 0.049237 secs.
[08/23 17:49:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:55]  Verifer returned unsat in 0.076000 secs.
[08/23 17:49:55]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:55]  --------------------------------------------------------------------------------
[08/23 17:49:55]  Iteration: 93 (77 solution, 15 counterexamples)
[08/23 17:49:56]  Generator returned sat in 0.048235 secs.
[08/23 17:49:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:56]  Verifer returned unsat in 0.045274 secs.
[08/23 17:49:56]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:56]  --------------------------------------------------------------------------------
[08/23 17:49:56]  Iteration: 94 (78 solution, 15 counterexamples)
[08/23 17:49:56]  Generator returned sat in 0.045202 secs.
[08/23 17:49:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:56]  Verifer returned unsat in 0.073613 secs.
[08/23 17:49:56]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:56]  --------------------------------------------------------------------------------
[08/23 17:49:56]  Iteration: 95 (79 solution, 15 counterexamples)
[08/23 17:49:56]  Generator returned sat in 0.049504 secs.
[08/23 17:49:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:56]  Verifer returned unsat in 0.055048 secs.
[08/23 17:49:56]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:56]  --------------------------------------------------------------------------------
[08/23 17:49:56]  Iteration: 96 (80 solution, 15 counterexamples)
[08/23 17:49:57]  Generator returned sat in 0.046756 secs.
[08/23 17:49:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:57]  Verifer returned unsat in 0.067191 secs.
[08/23 17:49:57]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:57]  --------------------------------------------------------------------------------
[08/23 17:49:57]  Iteration: 97 (81 solution, 15 counterexamples)
[08/23 17:49:57]  Generator returned sat in 0.047952 secs.
[08/23 17:49:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:57]  Verifer returned unsat in 0.036017 secs.
[08/23 17:49:57]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:57]  --------------------------------------------------------------------------------
[08/23 17:49:57]  Iteration: 98 (82 solution, 15 counterexamples)
[08/23 17:49:57]  Generator returned sat in 0.039743 secs.
[08/23 17:49:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:57]  Verifer returned unsat in 0.072269 secs.
[08/23 17:49:57]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:57]  --------------------------------------------------------------------------------
[08/23 17:49:57]  Iteration: 99 (83 solution, 15 counterexamples)
[08/23 17:49:58]  Generator returned sat in 0.152594 secs.
[08/23 17:49:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:58]  Verifer returned unsat in 0.068807 secs.
[08/23 17:49:58]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:58]  --------------------------------------------------------------------------------
[08/23 17:49:58]  Iteration: 100 (84 solution, 15 counterexamples)
[08/23 17:49:58]  Generator returned sat in 0.050931 secs.
[08/23 17:49:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:58]  Verifer returned unsat in 0.071373 secs.
[08/23 17:49:58]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:49:58]  --------------------------------------------------------------------------------
[08/23 17:49:58]  Iteration: 101 (85 solution, 15 counterexamples)
[08/23 17:49:59]  Generator returned sat in 0.072826 secs.
[08/23 17:49:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:59]  Verifer returned unsat in 0.067000 secs.
[08/23 17:49:59]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:49:59]  --------------------------------------------------------------------------------
[08/23 17:49:59]  Iteration: 102 (86 solution, 15 counterexamples)
[08/23 17:49:59]  Generator returned sat in 0.046117 secs.
[08/23 17:49:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:59]  Verifer returned unsat in 0.048246 secs.
[08/23 17:49:59]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:49:59]  --------------------------------------------------------------------------------
[08/23 17:49:59]  Iteration: 103 (87 solution, 15 counterexamples)
[08/23 17:49:59]  Generator returned sat in 0.056335 secs.
[08/23 17:49:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:59]  Verifer returned unsat in 0.088405 secs.
[08/23 17:49:59]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:49:59]  --------------------------------------------------------------------------------
[08/23 17:49:59]  Iteration: 104 (88 solution, 15 counterexamples)
[08/23 17:50:00]  Generator returned sat in 0.053666 secs.
[08/23 17:50:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:00]  Verifer returned unsat in 0.064412 secs.
[08/23 17:50:00]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:00]  --------------------------------------------------------------------------------
[08/23 17:50:00]  Iteration: 105 (89 solution, 15 counterexamples)
[08/23 17:50:00]  Generator returned sat in 0.049534 secs.
[08/23 17:50:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:00]  Verifer returned unsat in 0.082191 secs.
[08/23 17:50:00]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:00]  --------------------------------------------------------------------------------
[08/23 17:50:00]  Iteration: 106 (90 solution, 15 counterexamples)
[08/23 17:50:01]  Generator returned sat in 0.051102 secs.
[08/23 17:50:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:01]  Verifer returned unsat in 0.087753 secs.
[08/23 17:50:01]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:01]  --------------------------------------------------------------------------------
[08/23 17:50:01]  Iteration: 107 (91 solution, 15 counterexamples)
[08/23 17:50:01]  Generator returned sat in 0.043228 secs.
[08/23 17:50:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:01]  Verifer returned unsat in 0.079762 secs.
[08/23 17:50:01]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:01]  --------------------------------------------------------------------------------
[08/23 17:50:01]  Iteration: 108 (92 solution, 15 counterexamples)
[08/23 17:50:01]  Generator returned sat in 0.041844 secs.
[08/23 17:50:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:01]  Verifer returned unsat in 0.054585 secs.
[08/23 17:50:01]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:01]  --------------------------------------------------------------------------------
[08/23 17:50:01]  Iteration: 109 (93 solution, 15 counterexamples)
[08/23 17:50:02]  Generator returned sat in 0.116023 secs.
[08/23 17:50:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:02]  Verifer returned unsat in 0.058021 secs.
[08/23 17:50:02]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:02]  --------------------------------------------------------------------------------
[08/23 17:50:02]  Iteration: 110 (94 solution, 15 counterexamples)
[08/23 17:50:02]  Generator returned sat in 0.042458 secs.
[08/23 17:50:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:02]  Verifer returned unsat in 0.077393 secs.
[08/23 17:50:02]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:02]  --------------------------------------------------------------------------------
[08/23 17:50:02]  Iteration: 111 (95 solution, 15 counterexamples)
[08/23 17:50:02]  Generator returned sat in 0.041823 secs.
[08/23 17:50:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:03]  Verifer returned unsat in 0.113586 secs.
[08/23 17:50:03]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:03]  --------------------------------------------------------------------------------
[08/23 17:50:03]  Iteration: 112 (96 solution, 15 counterexamples)
[08/23 17:50:03]  Generator returned sat in 0.057951 secs.
[08/23 17:50:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:03]  Verifer returned unsat in 0.112307 secs.
[08/23 17:50:03]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:03]  --------------------------------------------------------------------------------
[08/23 17:50:03]  Iteration: 113 (97 solution, 15 counterexamples)
[08/23 17:50:03]  Generator returned sat in 0.058561 secs.
[08/23 17:50:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:03]  Verifer returned unsat in 0.052852 secs.
[08/23 17:50:03]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:03]  --------------------------------------------------------------------------------
[08/23 17:50:03]  Iteration: 114 (98 solution, 15 counterexamples)
[08/23 17:50:05]  Generator returned sat in 0.940430 secs.
[08/23 17:50:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:05]  Improved gap from 20.0 to 26.5625
[08/23 17:50:05]  Improved number of small numbers from 52 to 100 out of a max of 100
[08/23 17:50:05]  Verifer returned sat in 0.465632 secs.
[08/23 17:50:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0    2747.685791    2747.683350 -2852.164062  2747.685791    0.097900  2747.683350   0.000000   0.002441      -99.997559
1    2967.685791    2947.683350 -2852.164062  2967.685791  220.002441  2947.683350   0.002441  20.000000       20.000000
2    3047.688477    3047.683350 -2852.164062  3047.688477  100.002686  3047.683350   0.002441   0.002686        0.002686
3    3074.248291    3047.683350 -2778.726562  3074.248291   26.562500  3047.683350   0.002441  26.562500        0.000000
4    3197.685791    3174.245605 -2778.726562  3197.685791  150.000000  3174.245605   3.439941  20.000244       20.000000
5    3197.685791    3174.245850 -2705.289062  3197.685791    0.010000  3174.245850   3.439941  20.000000       -6.562500
6    3240.967041    3200.808350 -2656.861328  3240.967041   63.281250  3200.808350   3.439941  36.718750      -14.853516
7    3280.810791    3252.380859 -2583.424072  3280.810791   76.562500  3252.380859   3.439941  24.989990       -1.572510
8    3294.888428    3278.943359 -2583.423828  3294.888428   39.067627  3278.943359   3.439941  12.505127      -87.494629
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:50:05]  --------------------------------------------------------------------------------
[08/23 17:50:05]  Iteration: 115 (98 solution, 16 counterexamples)
[08/23 17:50:06]  Generator returned sat in 0.561939 secs.
[08/23 17:50:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:06]  Verifer returned unsat in 0.093561 secs.
[08/23 17:50:06]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:06]  --------------------------------------------------------------------------------
[08/23 17:50:06]  Iteration: 116 (99 solution, 16 counterexamples)
[08/23 17:50:07]  Generator returned sat in 0.047122 secs.
[08/23 17:50:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:07]  Verifer returned unsat in 0.160399 secs.
[08/23 17:50:07]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:07]  --------------------------------------------------------------------------------
[08/23 17:50:07]  Iteration: 117 (100 solution, 16 counterexamples)
[08/23 17:50:08]  Generator returned sat in 0.925650 secs.
[08/23 17:50:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:08]  Verifer returned unsat in 0.081514 secs.
[08/23 17:50:08]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:08]  --------------------------------------------------------------------------------
[08/23 17:50:08]  Iteration: 118 (101 solution, 16 counterexamples)
[08/23 17:50:08]  Generator returned sat in 0.062969 secs.
[08/23 17:50:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:09]  Verifer returned unsat in 0.092129 secs.
[08/23 17:50:09]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:09]  --------------------------------------------------------------------------------
[08/23 17:50:09]  Iteration: 119 (102 solution, 16 counterexamples)
[08/23 17:50:09]  Generator returned sat in 0.065215 secs.
[08/23 17:50:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:09]  Verifer returned unsat in 0.078644 secs.
[08/23 17:50:09]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:09]  --------------------------------------------------------------------------------
[08/23 17:50:09]  Iteration: 120 (103 solution, 16 counterexamples)
[08/23 17:50:09]  Generator returned sat in 0.061135 secs.
[08/23 17:50:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:09]  Verifer returned unsat in 0.113755 secs.
[08/23 17:50:09]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:09]  --------------------------------------------------------------------------------
[08/23 17:50:09]  Iteration: 121 (104 solution, 16 counterexamples)
[08/23 17:50:10]  Generator returned sat in 0.069171 secs.
[08/23 17:50:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:10]  Verifer returned unsat in 0.064531 secs.
[08/23 17:50:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:10]  --------------------------------------------------------------------------------
[08/23 17:50:10]  Iteration: 122 (105 solution, 16 counterexamples)
[08/23 17:50:10]  Generator returned sat in 0.081556 secs.
[08/23 17:50:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:10]  Verifer returned unsat in 0.087240 secs.
[08/23 17:50:10]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:10]  --------------------------------------------------------------------------------
[08/23 17:50:10]  Iteration: 123 (106 solution, 16 counterexamples)
[08/23 17:50:11]  Generator returned sat in 0.049668 secs.
[08/23 17:50:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:11]  Verifer returned unsat in 0.060658 secs.
[08/23 17:50:11]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:11]  --------------------------------------------------------------------------------
[08/23 17:50:11]  Iteration: 124 (107 solution, 16 counterexamples)
[08/23 17:50:11]  Generator returned sat in 0.048700 secs.
[08/23 17:50:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:11]  Verifer returned unsat in 0.069518 secs.
[08/23 17:50:11]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:11]  --------------------------------------------------------------------------------
[08/23 17:50:11]  Iteration: 125 (108 solution, 16 counterexamples)
[08/23 17:50:11]  Generator returned sat in 0.048943 secs.
[08/23 17:50:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:12]  Verifer returned unsat in 0.132792 secs.
[08/23 17:50:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:12]  --------------------------------------------------------------------------------
[08/23 17:50:12]  Iteration: 126 (109 solution, 16 counterexamples)
[08/23 17:50:12]  Generator returned sat in 0.048713 secs.
[08/23 17:50:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:12]  Verifer returned unsat in 0.081767 secs.
[08/23 17:50:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:12]  --------------------------------------------------------------------------------
[08/23 17:50:12]  Iteration: 127 (110 solution, 16 counterexamples)
[08/23 17:50:12]  Generator returned sat in 0.053046 secs.
[08/23 17:50:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:12]  Verifer returned unsat in 0.069476 secs.
[08/23 17:50:12]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:12]  --------------------------------------------------------------------------------
[08/23 17:50:12]  Iteration: 128 (111 solution, 16 counterexamples)
[08/23 17:50:13]  Generator returned sat in 0.045295 secs.
[08/23 17:50:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:13]  Verifer returned unsat in 0.055430 secs.
[08/23 17:50:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:13]  --------------------------------------------------------------------------------
[08/23 17:50:13]  Iteration: 129 (112 solution, 16 counterexamples)
[08/23 17:50:13]  Generator returned sat in 0.044070 secs.
[08/23 17:50:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:13]  Verifer returned unsat in 0.086433 secs.
[08/23 17:50:13]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:13]  --------------------------------------------------------------------------------
[08/23 17:50:13]  Iteration: 130 (113 solution, 16 counterexamples)
[08/23 17:50:13]  Generator returned sat in 0.043471 secs.
[08/23 17:50:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:14]  Verifer returned unsat in 0.091702 secs.
[08/23 17:50:14]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:14]  --------------------------------------------------------------------------------
[08/23 17:50:14]  Iteration: 131 (114 solution, 16 counterexamples)
[08/23 17:50:14]  Generator returned sat in 0.049328 secs.
[08/23 17:50:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:14]  Verifer returned unsat in 0.109710 secs.
[08/23 17:50:14]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:14]  --------------------------------------------------------------------------------
[08/23 17:50:14]  Iteration: 132 (115 solution, 16 counterexamples)
[08/23 17:50:14]  Generator returned sat in 0.048482 secs.
[08/23 17:50:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:14]  Verifer returned unsat in 0.091846 secs.
[08/23 17:50:14]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:14]  --------------------------------------------------------------------------------
[08/23 17:50:14]  Iteration: 133 (116 solution, 16 counterexamples)
[08/23 17:50:15]  Generator returned sat in 0.056118 secs.
[08/23 17:50:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:15]  Verifer returned unsat in 0.087307 secs.
[08/23 17:50:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:15]  --------------------------------------------------------------------------------
[08/23 17:50:15]  Iteration: 134 (117 solution, 16 counterexamples)
[08/23 17:50:15]  Generator returned sat in 0.055275 secs.
[08/23 17:50:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:15]  Verifer returned unsat in 0.065061 secs.
[08/23 17:50:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:15]  --------------------------------------------------------------------------------
[08/23 17:50:15]  Iteration: 135 (118 solution, 16 counterexamples)
[08/23 17:50:16]  Generator returned sat in 0.046732 secs.
[08/23 17:50:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:16]  Verifer returned unsat in 0.072637 secs.
[08/23 17:50:16]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:50:16]  --------------------------------------------------------------------------------
[08/23 17:50:16]  Iteration: 136 (119 solution, 16 counterexamples)
[08/23 17:50:16]  Generator returned sat in 0.068889 secs.
[08/23 17:50:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:16]  Verifer returned unsat in 0.085025 secs.
[08/23 17:50:16]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:16]  --------------------------------------------------------------------------------
[08/23 17:50:16]  Iteration: 137 (120 solution, 16 counterexamples)
[08/23 17:50:16]  Generator returned sat in 0.044748 secs.
[08/23 17:50:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:16]  Verifer returned unsat in 0.087871 secs.
[08/23 17:50:16]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:16]  --------------------------------------------------------------------------------
[08/23 17:50:16]  Iteration: 138 (121 solution, 16 counterexamples)
[08/23 17:50:17]  Generator returned sat in 0.043818 secs.
[08/23 17:50:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:17]  Verifer returned unsat in 0.099955 secs.
[08/23 17:50:17]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:17]  --------------------------------------------------------------------------------
[08/23 17:50:17]  Iteration: 139 (122 solution, 16 counterexamples)
[08/23 17:50:17]  Generator returned sat in 0.054019 secs.
[08/23 17:50:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:17]  Verifer returned unsat in 0.096431 secs.
[08/23 17:50:17]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:17]  --------------------------------------------------------------------------------
[08/23 17:50:17]  Iteration: 140 (123 solution, 16 counterexamples)
[08/23 17:50:18]  Generator returned sat in 0.047558 secs.
[08/23 17:50:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:18]  Verifer returned unsat in 0.074373 secs.
[08/23 17:50:18]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:18]  --------------------------------------------------------------------------------
[08/23 17:50:18]  Iteration: 141 (124 solution, 16 counterexamples)
[08/23 17:50:18]  Generator returned sat in 0.045682 secs.
[08/23 17:50:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:18]  Verifer returned unsat in 0.096144 secs.
[08/23 17:50:18]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:18]  --------------------------------------------------------------------------------
[08/23 17:50:18]  Iteration: 142 (125 solution, 16 counterexamples)
[08/23 17:50:18]  Generator returned sat in 0.062119 secs.
[08/23 17:50:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:19]  Verifer returned unsat in 0.130749 secs.
[08/23 17:50:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:50:19]  --------------------------------------------------------------------------------
[08/23 17:50:19]  Iteration: 143 (126 solution, 16 counterexamples)
[08/23 17:50:19]  Generator returned sat in 0.050320 secs.
[08/23 17:50:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:19]  Verifer returned unsat in 0.056968 secs.
[08/23 17:50:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:50:19]  --------------------------------------------------------------------------------
[08/23 17:50:19]  Iteration: 144 (127 solution, 16 counterexamples)
[08/23 17:50:19]  Generator returned sat in 0.083970 secs.
[08/23 17:50:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:50:20]  Improved gap from 0.00125 to 0
[08/23 17:50:21]  Improved number of small numbers from 51 to 60 out of a max of 100
[08/23 17:50:21]  Verifer returned sat in 1.838358 secs.
[08/23 17:50:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0    5067.752441    5067.679215 -2951.647705  5067.752441  0.097656  5067.679215        0.0  0.073226        0.073120
1    5067.752441    5067.750150 -2851.720947  5067.752441  0.002441  5067.750150        0.0  0.002291       -0.000122
2    5068.045516    5067.752650 -2752.013900  5068.045516  0.295366  5067.752650        0.0  0.292866        0.000000
3    5068.045516    5068.045516 -2652.013900  5068.045516  0.002500  5068.045516        0.0  0.000000        0.000000
4    5068.099967    5068.045516 -2552.068351  5068.099967  0.054451  5068.045516        0.0  0.054451        0.000000
5    5068.099967    5068.099967 -2452.190674  5068.099967  0.051951  5068.099967        0.0  0.000000       -0.122323
6    5068.224845    5068.222345 -2352.193229  5068.224845  0.124878  5068.222345        0.0  0.002500        0.000000
7    5068.237345    5068.224854 -2252.205729  5068.237345  0.015000  5068.224854        0.0  0.012492        0.000000
8    5068.237345    5068.237345 -2152.205811  5068.237345  0.010000  5068.237345        0.0  0.000000       -0.000081
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:50:22]  --------------------------------------------------------------------------------
[08/23 17:50:22]  Iteration: 145 (127 solution, 17 counterexamples)
[08/23 17:50:23]  Generator returned sat in 0.922586 secs.
[08/23 17:50:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:50:23]  Improved gap from 0.0 to 0
[08/23 17:50:25]  Improved number of small numbers from 44 to 65 out of a max of 100
[08/23 17:50:25]  Verifer returned sat in 1.784477 secs.
[08/23 17:50:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0    4967.800293    4967.799242 -2851.768066  4967.800293  0.097412  4967.799242        0.0  0.001051        0.000610
1    4967.800293    4967.799805 -2751.768753  4967.800293  0.000732  4967.799805        0.0  0.000488       -0.000076
2    4967.801025    4967.800369 -2651.769531  4967.801025  0.001221  4967.800369        0.0  0.000656       -0.000122
3    4968.013429    4968.012866 -2551.981934  4968.013429  0.213060  4968.012866        0.0  0.000564       -0.000120
4    4968.046643    4968.046080 -2452.015137  4968.046643  0.033777  4968.046080        0.0  0.000564       -0.000110
5    4968.056080    4968.054127 -2352.024463  4968.056080  0.010000  4968.054127        0.0  0.001952        0.000000
6    4968.066643    4968.056152 -2252.035027  4968.066643  0.012516  4968.056152        0.0  0.010491        0.000000
7    4968.066643    4968.066643 -2152.035027  4968.066643  0.010000  4968.066643        0.0  0.000000        0.000000
8    4968.076643    4968.066650 -2152.034912  4968.076643  0.010000  4968.066650        0.0  0.009993      -99.989885
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:50:25]  --------------------------------------------------------------------------------
[08/23 17:50:25]  Iteration: 146 (127 solution, 18 counterexamples)
[08/23 17:50:25]  Generator returned sat in 0.288337 secs.
[08/23 17:50:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:50:26]  Improved gap from 0.000625 to 0
[08/23 17:50:27]  Improved number of small numbers from 54 to 68 out of a max of 100
[08/23 17:50:27]  Verifer returned sat in 1.458018 secs.
[08/23 17:50:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0    4967.698242    4967.698145 -2871.338379  4967.698242  0.097168  4967.698145        0.0  0.000097        0.000049
1    4968.065556    4968.063965 -2771.705742  4968.065556  0.367411  4968.063965        0.0  0.001591        0.000000
2    4968.067871    4968.065556 -2671.708242  4968.067871  0.003906  4968.065556        0.0  0.002315       -0.000185
3    4968.069484    4968.068056 -2571.709670  4968.069484  0.003929  4968.068056        0.0  0.001429        0.000000
4    4968.313770    4968.069484 -2471.953956  4968.313770  0.245714  4968.069484        0.0  0.244286        0.000000
5    4968.313770    4968.313770 -2371.954102  4968.313770  0.010000  4968.313770        0.0  0.000000       -0.000146
6    4968.325199    4968.313965 -2271.965385  4968.325199  0.011429  4968.313965        0.0  0.011234        0.000000
7    4968.325199    4968.325199 -2171.991699  4968.325199  0.010000  4968.325199        0.0  0.000000       -0.026315
8    4968.351627    4968.351562 -2171.991699  4968.351627  0.026429  4968.351562        0.0  0.000065      -99.999886
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:50:27]  --------------------------------------------------------------------------------
[08/23 17:50:27]  Iteration: 147 (127 solution, 19 counterexamples)
[08/23 17:50:31]  Generator returned sat in 3.405783 secs.
[08/23 17:50:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:31]  Verifer returned unsat in 0.152210 secs.
[08/23 17:50:31]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:31]  --------------------------------------------------------------------------------
[08/23 17:50:31]  Iteration: 148 (128 solution, 19 counterexamples)
[08/23 17:50:31]  Generator returned sat in 0.059710 secs.
[08/23 17:50:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:32]  Verifer returned unsat in 0.097396 secs.
[08/23 17:50:32]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:32]  --------------------------------------------------------------------------------
[08/23 17:50:32]  Iteration: 149 (129 solution, 19 counterexamples)
[08/23 17:50:32]  Generator returned sat in 0.060169 secs.
[08/23 17:50:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:32]  Verifer returned unsat in 0.110186 secs.
[08/23 17:50:32]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:32]  --------------------------------------------------------------------------------
[08/23 17:50:32]  Iteration: 150 (130 solution, 19 counterexamples)
[08/23 17:50:32]  Generator returned sat in 0.058969 secs.
[08/23 17:50:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:33]  Verifer returned unsat in 0.094081 secs.
[08/23 17:50:33]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:33]  --------------------------------------------------------------------------------
[08/23 17:50:33]  Iteration: 151 (131 solution, 19 counterexamples)
[08/23 17:50:33]  Generator returned sat in 0.057731 secs.
[08/23 17:50:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:33]  Verifer returned unsat in 0.078918 secs.
[08/23 17:50:33]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:33]  --------------------------------------------------------------------------------
[08/23 17:50:33]  Iteration: 152 (132 solution, 19 counterexamples)
[08/23 17:50:34]  Generator returned sat in 0.454876 secs.
[08/23 17:50:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:34]  Improved gap from 0.0025 to 25.0
[08/23 17:50:35]  Improved number of small numbers from 42 to 100 out of a max of 100
[08/23 17:50:35]  Verifer returned sat in 0.725577 secs.
[08/23 17:50:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0    4491.733154    4465.423828 -2375.373291  4491.733154   0.097168  4465.423828        0.0  26.309326       20.000000
1    4491.733154    4491.684570 -2321.324463  4491.733154   0.048340  4491.684570        0.0   0.048584      -25.951172
2    4543.684570    4517.684570 -2247.324707  4543.684570  52.000000  4517.684570        0.0  26.000000        0.000000
3    4592.205566    4543.684570 -2195.845703  4592.205566  74.520996  4543.684570        0.0  48.520996        0.000000
4    4592.205566    4592.205566 -2121.845703  4592.205566  41.130371  4592.205566        0.0   0.000000      -26.000000
5    4644.466064    4618.205566 -2048.106445  4644.466064  52.260498  4618.205566        0.0  26.260498       -0.000244
6    4670.466064    4644.466309 -1974.106201  4670.466064  52.260498  4644.466309        0.0  25.999756        0.000000
7    4696.857178    4670.466309 -1900.497314  4696.857178  52.390869  4670.466309        0.0  26.390869        0.000000
8    4711.596680    4696.857178 -1826.497070  4711.596680  41.130371  4696.857178        0.0  14.739502      -11.260254
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 17:50:35]  --------------------------------------------------------------------------------
[08/23 17:50:35]  Iteration: 153 (132 solution, 20 counterexamples)
[08/23 17:50:36]  Generator returned sat in 0.746286 secs.
[08/23 17:50:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:36]  Verifer returned unsat in 0.147941 secs.
[08/23 17:50:36]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:36]  --------------------------------------------------------------------------------
[08/23 17:50:36]  Iteration: 154 (133 solution, 20 counterexamples)
[08/23 17:50:36]  Generator returned sat in 0.056418 secs.
[08/23 17:50:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:37]  Verifer returned unsat in 0.106104 secs.
[08/23 17:50:37]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:37]  --------------------------------------------------------------------------------
[08/23 17:50:37]  Iteration: 155 (134 solution, 20 counterexamples)
[08/23 17:50:37]  Generator returned sat in 0.055330 secs.
[08/23 17:50:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:37]  Verifer returned unsat in 0.126757 secs.
[08/23 17:50:37]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:37]  --------------------------------------------------------------------------------
[08/23 17:50:37]  Iteration: 156 (135 solution, 20 counterexamples)
[08/23 17:50:37]  Generator returned sat in 0.053142 secs.
[08/23 17:50:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:38]  Verifer returned unsat in 0.116918 secs.
[08/23 17:50:38]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:38]  --------------------------------------------------------------------------------
[08/23 17:50:38]  Iteration: 157 (136 solution, 20 counterexamples)
[08/23 17:50:38]  Generator returned sat in 0.052490 secs.
[08/23 17:50:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:38]  Verifer returned unsat in 0.108421 secs.
[08/23 17:50:38]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:38]  --------------------------------------------------------------------------------
[08/23 17:50:38]  Iteration: 158 (137 solution, 20 counterexamples)
[08/23 17:50:38]  Generator returned sat in 0.060394 secs.
[08/23 17:50:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:39]  Verifer returned unsat in 0.096124 secs.
[08/23 17:50:39]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:39]  --------------------------------------------------------------------------------
[08/23 17:50:39]  Iteration: 159 (138 solution, 20 counterexamples)
[08/23 17:50:39]  Generator returned sat in 0.054167 secs.
[08/23 17:50:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:39]  Verifer returned unsat in 0.133874 secs.
[08/23 17:50:39]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:39]  --------------------------------------------------------------------------------
[08/23 17:50:39]  Iteration: 160 (139 solution, 20 counterexamples)
[08/23 17:50:40]  Generator returned sat in 0.054404 secs.
[08/23 17:50:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:40]  Verifer returned unsat in 0.107485 secs.
[08/23 17:50:40]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:40]  --------------------------------------------------------------------------------
[08/23 17:50:40]  Iteration: 161 (140 solution, 20 counterexamples)
[08/23 17:50:40]  Generator returned sat in 0.053073 secs.
[08/23 17:50:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:40]  Verifer returned unsat in 0.087591 secs.
[08/23 17:50:40]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:50:40]  --------------------------------------------------------------------------------
[08/23 17:50:40]  Iteration: 162 (141 solution, 20 counterexamples)
[08/23 17:50:42]  Generator returned sat in 1.490947 secs.
[08/23 17:50:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:50:42]  Improved gap from 0.0 to 0
[08/23 17:50:43]  Improved number of small numbers from 54 to 75 out of a max of 100
[08/23 17:50:43]  Verifer returned sat in 1.152044 secs.
[08/23 17:50:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0    4518.687988    4518.687256 -2476.769775  4518.687988  0.096924  4518.687256        0.0  0.000732        0.000686
1    4518.687988    4518.687500 -2376.770508  4518.687988  0.000714  4518.687500        0.0  0.000488       -0.000046
2    4518.688965    4518.688154 -2276.903809  4518.688965  0.001465  4518.688154        0.0  0.000811       -0.132370
3    4518.929583    4518.821533 -2177.012056  4518.929583  0.241429  4518.821533        0.0  0.108050        0.000000
4    4518.929583    4518.929583 -2077.021240  4518.929583  0.010000  4518.929583        0.0  0.000000       -0.009184
5    4518.939583    4518.938869 -1977.022056  4518.939583  0.010000  4518.938869        0.0  0.000714        0.000000
6    4518.950297    4518.939697 -1877.032771  4518.950297  0.011429  4518.939697        0.0  0.010600        0.000000
7    4518.950297    4518.950297 -1777.032771  4518.950297  0.010000  4518.950297        0.0  0.000000        0.000000
8    4518.960297    4518.950439 -1777.032715  4518.960297  0.010000  4518.950439        0.0  0.009858      -99.989944
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 17:50:43]  --------------------------------------------------------------------------------
[08/23 17:50:43]  Iteration: 163 (141 solution, 21 counterexamples)
[08/23 17:50:47]  Generator returned sat in 3.027475 secs.
[08/23 17:50:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:47]  Improved gap from 0.012115478515625 to 100
[08/23 17:50:47]  Improved number of small numbers from 55 to 77 out of a max of 100
[08/23 17:50:47]  Verifer returned sat in 0.597618 secs.
[08/23 17:50:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0    4518.687988    4455.091064 -2456.770264  4518.687988    0.096924  4455.091064    0.000000   63.596924        20.00000
1    4518.687988    4498.687988 -2456.770264  4518.687988    0.048584  4498.687988    0.000000   20.000000       -80.00000
2    4598.736328    4598.687988 -2456.770264  4598.736328  100.048340  4598.687988    0.000000    0.048340       -99.95166
3    4698.736328    4698.687988 -2456.770264  4698.736328  100.048340  4698.687988    0.000000    0.048340       -99.95166
4    4942.784912    4898.687988 -2456.770264  4942.784912  244.096924  4898.687988   24.096924   20.000000        20.00000
5    5042.833374    4960.615479 -2456.770264  5042.833374  120.048462  4960.615479   24.145386   58.072510        20.00000
6    5042.833374    4998.687988 -2456.770264  5042.833374   58.024231  4998.687988   24.145386   20.000000       -80.00000
7    5323.333374    5198.687988 -2456.770264  5323.333374  300.500000  5198.687988  104.645386   20.000000        20.00000
8    5451.583374    5198.687988 -2456.770264  5451.583374  148.250000  5198.687988  132.895386  120.000000        20.00000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=4.[0m
[08/23 17:50:48]  --------------------------------------------------------------------------------
[08/23 17:50:48]  Iteration: 164 (141 solution, 22 counterexamples)
[08/23 17:50:48]  Generator returned sat in 0.294744 secs.
[08/23 17:50:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:48]  Verifer returned unsat in 0.108550 secs.
[08/23 17:50:48]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:48]  --------------------------------------------------------------------------------
[08/23 17:50:48]  Iteration: 165 (142 solution, 22 counterexamples)
[08/23 17:50:49]  Generator returned sat in 0.200337 secs.
[08/23 17:50:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:49]  Verifer returned unsat in 0.141715 secs.
[08/23 17:50:49]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:49]  --------------------------------------------------------------------------------
[08/23 17:50:49]  Iteration: 166 (143 solution, 22 counterexamples)
[08/23 17:50:50]  Generator returned sat in 0.068348 secs.
[08/23 17:50:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:50]  Verifer returned unsat in 0.118884 secs.
[08/23 17:50:50]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:50]  --------------------------------------------------------------------------------
[08/23 17:50:50]  Iteration: 167 (144 solution, 22 counterexamples)
[08/23 17:50:50]  Generator returned sat in 0.062725 secs.
[08/23 17:50:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:50]  Verifer returned unsat in 0.144001 secs.
[08/23 17:50:50]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:50]  --------------------------------------------------------------------------------
[08/23 17:50:50]  Iteration: 168 (145 solution, 22 counterexamples)
[08/23 17:50:51]  Generator returned sat in 0.063969 secs.
[08/23 17:50:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:51]  Verifer returned unsat in 0.171655 secs.
[08/23 17:50:51]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:51]  --------------------------------------------------------------------------------
[08/23 17:50:51]  Iteration: 169 (146 solution, 22 counterexamples)
[08/23 17:50:51]  Generator returned sat in 0.133530 secs.
[08/23 17:50:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:52]  Verifer returned unsat in 0.193141 secs.
[08/23 17:50:52]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:52]  --------------------------------------------------------------------------------
[08/23 17:50:52]  Iteration: 170 (147 solution, 22 counterexamples)
[08/23 17:50:52]  Generator returned sat in 0.068964 secs.
[08/23 17:50:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:52]  Verifer returned unsat in 0.130469 secs.
[08/23 17:50:52]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:52]  --------------------------------------------------------------------------------
[08/23 17:50:52]  Iteration: 171 (148 solution, 22 counterexamples)
[08/23 17:50:53]  Generator returned sat in 0.070008 secs.
[08/23 17:50:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:53]  Verifer returned unsat in 0.126234 secs.
[08/23 17:50:53]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:53]  --------------------------------------------------------------------------------
[08/23 17:50:53]  Iteration: 172 (149 solution, 22 counterexamples)
[08/23 17:50:53]  Generator returned sat in 0.062823 secs.
[08/23 17:50:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:53]  Verifer returned unsat in 0.130543 secs.
[08/23 17:50:53]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:53]  --------------------------------------------------------------------------------
[08/23 17:50:53]  Iteration: 173 (150 solution, 22 counterexamples)
[08/23 17:50:54]  Generator returned sat in 0.602783 secs.
[08/23 17:50:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:54]  Verifer returned unsat in 0.106972 secs.
[08/23 17:50:54]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:54]  --------------------------------------------------------------------------------
[08/23 17:50:54]  Iteration: 174 (151 solution, 22 counterexamples)
[08/23 17:50:55]  Generator returned sat in 0.073672 secs.
[08/23 17:50:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:55]  Verifer returned unsat in 0.084875 secs.
[08/23 17:50:55]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:55]  --------------------------------------------------------------------------------
[08/23 17:50:55]  Iteration: 175 (152 solution, 22 counterexamples)
[08/23 17:50:55]  Generator returned sat in 0.077058 secs.
[08/23 17:50:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:56]  Verifer returned unsat in 0.072923 secs.
[08/23 17:50:56]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:56]  --------------------------------------------------------------------------------
[08/23 17:50:56]  Iteration: 176 (153 solution, 22 counterexamples)
[08/23 17:50:56]  Generator returned sat in 0.072859 secs.
[08/23 17:50:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:56]  Verifer returned unsat in 0.058447 secs.
[08/23 17:50:56]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:56]  --------------------------------------------------------------------------------
[08/23 17:50:56]  Iteration: 177 (154 solution, 22 counterexamples)
[08/23 17:50:57]  Generator returned sat in 0.091213 secs.
[08/23 17:50:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:57]  Verifer returned unsat in 0.078591 secs.
[08/23 17:50:57]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:57]  --------------------------------------------------------------------------------
[08/23 17:50:57]  Iteration: 178 (155 solution, 22 counterexamples)
[08/23 17:50:57]  Generator returned sat in 0.086837 secs.
[08/23 17:50:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:57]  Verifer returned unsat in 0.075257 secs.
[08/23 17:50:57]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:57]  --------------------------------------------------------------------------------
[08/23 17:50:57]  Iteration: 179 (156 solution, 22 counterexamples)
[08/23 17:50:58]  Generator returned sat in 0.093527 secs.
[08/23 17:50:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:58]  Verifer returned unsat in 0.066085 secs.
[08/23 17:50:58]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:58]  --------------------------------------------------------------------------------
[08/23 17:50:58]  Iteration: 180 (157 solution, 22 counterexamples)
[08/23 17:50:58]  Generator returned sat in 0.080759 secs.
[08/23 17:50:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:58]  Verifer returned unsat in 0.057042 secs.
[08/23 17:50:58]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:58]  --------------------------------------------------------------------------------
[08/23 17:50:58]  Iteration: 181 (158 solution, 22 counterexamples)
[08/23 17:50:59]  Generator returned sat in 0.081105 secs.
[08/23 17:50:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:59]  Verifer returned unsat in 0.122965 secs.
[08/23 17:50:59]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:50:59]  --------------------------------------------------------------------------------
[08/23 17:50:59]  Iteration: 182 (159 solution, 22 counterexamples)
[08/23 17:51:02]  Generator returned sat in 2.372742 secs.
[08/23 17:51:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:51:02]  Improved gap from 0.02423095703125 to 7.8125
[08/23 17:51:03]  Improved number of small numbers from 18 to 33 out of a max of 100
[08/23 17:51:03]  Verifer returned sat in 1.461189 secs.
[08/23 17:51:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0    6496.038330    6495.989746 -2511.437015  6496.038330    0.096924  6495.989746   0.000000    0.048584        0.024149
1    6496.038330    6496.014181 -2511.437015  6496.038330    0.024414  6496.014181   0.000000    0.024149      -99.975851
2    6716.038412    6597.989950 -2511.437015  6716.038412  220.024231  6597.989950   0.024231  118.024231       20.000000
3    6796.062643    6796.014181 -2511.437015  6796.062643  198.048462  6796.014181   0.024231    0.024231        0.024231
4    6896.062643    6845.002197 -2511.437015  6896.062643  100.024231  6845.002197   0.024231   51.036215        0.024231
5    6896.062643    6896.014181 -2437.918701  6896.062643   51.012115  6896.014181   0.024231    0.024231      -26.457455
6    6922.544470    6922.496008 -2352.147461  6922.544470   26.506058  6922.496008   0.024231    0.024231      -14.204388
7    6936.773267    6936.724806 -2259.960140  6936.773267   14.253029  6936.724806   0.024231    0.024231       -7.788269
8    6944.875551    6944.537354 -2167.772705  6944.875551    8.126514  6944.537354   0.024231    0.313966       -7.498551
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
