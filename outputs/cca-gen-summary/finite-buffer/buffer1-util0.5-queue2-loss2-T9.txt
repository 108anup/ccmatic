[08/23 16:56:13]  --------------------------------------------------------------------------------
[08/23 16:56:13]  Iteration: 1 (0 solution, 0 counterexamples)
[08/23 16:56:13]  Generator returned sat in 0.004181 secs.
[08/23 16:56:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:13]  Improved gap from 0.0 to 100
[08/23 16:56:14]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 16:56:14]  Verifer returned sat in 0.316647 secs.
[08/23 16:56:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t   cwnd_0,t  service_0,t   losts_0,t  queue_t  bottle_queue_t
0     -3188.4125     -3288.4125  3288.4125   -3188.4125     0.1000   -3288.4125      0.0000    100.0           100.0
1     -3188.4125     -3188.4125  3288.4125   -3188.4125     0.1000   -3188.4125      0.0000      0.0             0.0
2     -3159.4125     -3159.4125  3288.4125   -3159.4125    29.0000   -3159.4125      0.0000      0.0           -71.0
3     -2988.4125     -2988.5125  3288.4125   -2988.4125   171.0000   -2988.5125      0.0000      0.1             0.0
4     -2044.7125     -2988.4125  3288.4125   -2044.7125   943.8000   -2988.4125    643.7000    300.0           200.0
5      -527.0125     -2888.4125  3288.4125    -527.0125  1817.7000   -2888.4125   2061.4000    300.0           200.0
6      2443.5375     -2688.4125  3288.4125    2443.5375  3270.5500   -2688.4125   4931.9500    200.0           200.0
7      7751.5625     -2688.4125  3288.4125    7751.5625  5508.0250   -2688.4125  10139.9750    300.0           200.0
8     16315.6000     -2588.4125  3288.4125   16315.6000  8864.0375   -2588.4125  18604.0125    300.0           200.0
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=5.[0m
[08/23 16:56:14]  --------------------------------------------------------------------------------
[08/23 16:56:14]  Iteration: 2 (0 solution, 1 counterexamples)
[08/23 16:56:14]  Generator returned sat in 0.018333 secs.
[08/23 16:56:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 16:56:14]  Improved gap from 53.36397433810764 to 100
[08/23 16:56:15]  Improved number of small numbers from 36 to 42 out of a max of 100
[08/23 16:56:15]  Verifer returned sat in 1.114709 secs.
[08/23 16:56:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t     cwnd_0,t  service_0,t     losts_0,t     queue_t  bottle_queue_t
0   -2938.584717   -3388.412500  3388.4125  -2938.584717     0.099854 -3388.412500    403.133480   46.694303       46.694303
1   -2938.584717   -3341.718226  3388.4125  -2938.584717     0.050049 -3341.718226    403.133480    0.000030      -53.305697
2   -2785.279020   -3188.412500  3388.4125  -2785.279020   153.305726 -3188.412500    403.133480    0.000000        0.000000
3   -2485.229093   -3188.412500  3388.4125  -2485.229093   300.049927 -3188.412500    403.183407  300.000000      200.000000
4   -2036.154203   -3050.970797  3388.4125  -2036.154203   749.074890 -3050.970797    752.258297  262.558297      200.000000
5    -739.979020   -2980.412500  3388.4125   -739.979020  1558.733480 -2980.412500   1948.433480  292.000000      200.000000
6    1617.121200   -2788.412500  3388.4125   1617.121200  2649.100220 -2788.412500   4205.533700  200.000000      200.000000
7    5989.771529   -2688.412500  3388.4125   5989.771529  4572.650330 -2688.412500   8478.184029  200.000000      200.000000
8   13191.584469   -2688.412354  3388.4125  13191.584469  7401.812939 -2688.412354  15579.996969  299.999854      200.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=5.[0m
[08/23 16:56:15]  --------------------------------------------------------------------------------
[08/23 16:56:15]  Iteration: 3 (0 solution, 2 counterexamples)
[08/23 16:56:16]  Generator returned sat in 0.222819 secs.
[08/23 16:56:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 16:56:16]  Improved gap from 0.0 to 100
[08/23 16:56:16]  Improved number of small numbers from 35 to 59 out of a max of 100
[08/23 16:56:16]  Verifer returned sat in 0.836274 secs.
[08/23 16:56:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0   -1535.971680   -3186.407598  3086.407598 -1535.971680    0.099854 -3186.407598  1450.436035  199.999883       99.999883
1   -1535.971680   -3086.407471  3086.407598 -1535.971680    0.002686 -3086.407471  1450.436035   99.999756       -0.000117
2   -1435.971436   -2986.407598  3086.407598 -1435.971436  200.000000 -2986.407598  1450.436035  100.000127        0.000127
3   -1135.974004   -2786.407598  3086.407598 -1135.974004  399.997559 -2786.407598  1450.436035  199.997559      199.997559
4    -537.974004   -2688.400098  3086.407598  -537.974004  797.997559 -2688.400098  1948.433594  201.992500      200.000000
5    -537.974004   -2635.411348  3086.407598  -537.974004    0.010000 -2635.411348  1948.433594  149.003750      100.000000
6    -337.971504   -2586.407471  3086.407598  -337.971504  349.006250 -2586.407471  1948.436094  299.999873      200.000000
7    -337.971504   -2386.407598  3086.407598  -337.971504    0.010000 -2386.407598  1948.436094  100.000000      100.000000
8    -137.969004   -2386.407471  3086.407598  -137.969004  300.002500 -2386.407471  1948.438594  299.999873      200.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=3.[0m
[08/23 16:56:17]  --------------------------------------------------------------------------------
[08/23 16:56:17]  Iteration: 4 (0 solution, 3 counterexamples)
[08/23 16:56:17]  Generator returned sat in 0.317367 secs.
[08/23 16:56:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/23 16:56:17]  Improved gap from 0.00125 to 1.5625
[08/23 16:56:18]  Improved number of small numbers from 61 to 89 out of a max of 100
[08/23 16:56:18]  Verifer returned sat in 0.767963 secs.
[08/23 16:56:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0   -1037.938477   -2986.372070  2886.372314 -1037.938477    0.099854 -2986.372070  1948.433594    0.000000      -99.999756
1    -837.938477   -2787.934814  2886.372314  -837.938477  200.000000 -2787.934814  1948.433594    1.562744        0.000244
2    -537.974365   -2686.372314  2886.372314  -537.974365  301.526855 -2686.372314  1948.433594  199.964355      199.964355
3    -537.974365   -2586.372314  2886.372314  -537.974365    2.905350 -2586.372314  1948.433594   99.964355       99.964355
4    -537.974365   -2486.443209  2886.372314  -537.974365    2.858025 -2486.443209  1948.433594    0.035250       -0.035645
5    -535.222578   -2486.372070  2983.656172  -535.222578    2.787037 -2486.372070  1948.433594    2.715899        0.000000
6    -535.222578   -2483.656172  3081.170898  -535.222578    2.680556 -2483.656172  1948.433594    0.000000       -2.485273
7    -532.701745   -2481.170654  3178.889648  -532.701745    2.520833 -2481.170654  1948.433594    0.035316       -2.245690
8    -530.455811   -2478.889404  3277.326904  -530.455811    2.281250 -2478.889404  1948.433594    0.000000       -1.562500
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:56:18]  --------------------------------------------------------------------------------
[08/23 16:56:18]  Iteration: 5 (0 solution, 4 counterexamples)
[08/23 16:56:18]  Generator returned sat in 0.070075 secs.
[08/23 16:56:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:18]  Verifer returned unsat in 0.079774 secs.
[08/23 16:56:18]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:18]  --------------------------------------------------------------------------------
[08/23 16:56:18]  Iteration: 6 (1 solution, 4 counterexamples)
[08/23 16:56:18]  Generator returned sat in 0.010323 secs.
[08/23 16:56:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:19]  Verifer returned unsat in 0.042070 secs.
[08/23 16:56:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:19]  --------------------------------------------------------------------------------
[08/23 16:56:19]  Iteration: 7 (2 solution, 4 counterexamples)
[08/23 16:56:19]  Generator returned sat in 0.012598 secs.
[08/23 16:56:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:19]  Verifer returned unsat in 0.024414 secs.
[08/23 16:56:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:19]  --------------------------------------------------------------------------------
[08/23 16:56:19]  Iteration: 8 (3 solution, 4 counterexamples)
[08/23 16:56:19]  Generator returned sat in 0.013016 secs.
[08/23 16:56:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:19]  Verifer returned unsat in 0.026871 secs.
[08/23 16:56:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:19]  --------------------------------------------------------------------------------
[08/23 16:56:19]  Iteration: 9 (4 solution, 4 counterexamples)
[08/23 16:56:19]  Generator returned sat in 0.009335 secs.
[08/23 16:56:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:19]  Verifer returned unsat in 0.044751 secs.
[08/23 16:56:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:19]  --------------------------------------------------------------------------------
[08/23 16:56:19]  Iteration: 10 (5 solution, 4 counterexamples)
[08/23 16:56:19]  Generator returned sat in 0.014226 secs.
[08/23 16:56:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:56:19]  Verifer returned unsat in 0.051102 secs.
[08/23 16:56:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 16:56:19]  --------------------------------------------------------------------------------
[08/23 16:56:19]  Iteration: 11 (6 solution, 4 counterexamples)
[08/23 16:56:19]  Generator returned sat in 0.013866 secs.
[08/23 16:56:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:19]  Verifer returned unsat in 0.026959 secs.
[08/23 16:56:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:19]  --------------------------------------------------------------------------------
[08/23 16:56:19]  Iteration: 12 (7 solution, 4 counterexamples)
[08/23 16:56:19]  Generator returned sat in 0.009391 secs.
[08/23 16:56:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:56:19]  Verifer returned unsat in 0.024672 secs.
[08/23 16:56:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:56:19]  --------------------------------------------------------------------------------
[08/23 16:56:19]  Iteration: 13 (8 solution, 4 counterexamples)
[08/23 16:56:19]  Generator returned sat in 0.010220 secs.
[08/23 16:56:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:19]  Verifer returned unsat in 0.022000 secs.
[08/23 16:56:19]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:19]  --------------------------------------------------------------------------------
[08/23 16:56:19]  Iteration: 14 (9 solution, 4 counterexamples)
[08/23 16:56:19]  Generator returned sat in 0.009263 secs.
[08/23 16:56:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:56:20]  Verifer returned unsat in 0.026606 secs.
[08/23 16:56:20]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:56:20]  --------------------------------------------------------------------------------
[08/23 16:56:20]  Iteration: 15 (10 solution, 4 counterexamples)
[08/23 16:56:20]  Generator returned sat in 0.009269 secs.
[08/23 16:56:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:20]  Verifer returned unsat in 0.028782 secs.
[08/23 16:56:20]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:20]  --------------------------------------------------------------------------------
[08/23 16:56:20]  Iteration: 16 (11 solution, 4 counterexamples)
[08/23 16:56:20]  Generator returned sat in 0.007928 secs.
[08/23 16:56:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:20]  Verifer returned unsat in 0.029554 secs.
[08/23 16:56:20]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:20]  --------------------------------------------------------------------------------
[08/23 16:56:20]  Iteration: 17 (12 solution, 4 counterexamples)
[08/23 16:56:20]  Generator returned sat in 0.007734 secs.
[08/23 16:56:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:20]  Verifer returned unsat in 0.027537 secs.
[08/23 16:56:20]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 16:56:20]  --------------------------------------------------------------------------------
[08/23 16:56:20]  Iteration: 18 (13 solution, 4 counterexamples)
[08/23 16:56:20]  Generator returned sat in 0.010908 secs.
[08/23 16:56:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:56:20]  Verifer returned unsat in 0.025869 secs.
[08/23 16:56:20]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 16:56:20]  --------------------------------------------------------------------------------
[08/23 16:56:20]  Iteration: 19 (14 solution, 4 counterexamples)
[08/23 16:56:20]  Generator returned sat in 0.008252 secs.
[08/23 16:56:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 16:56:20]  Improved gap from 0.01 to 1.5625
[08/23 16:56:21]  Improved number of small numbers from 26 to 100 out of a max of 100
[08/23 16:56:21]  Verifer returned sat in 0.454142 secs.
[08/23 16:56:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0   -1890.546875   -3302.885742  2883.705811 -1890.546875    0.099609 -3302.885742  1115.281982  297.056885      199.999756
1   -1792.447266   -3105.828613  2883.705811 -1792.447266  395.156494 -3105.828613  1115.281982  198.099365      198.099365
2   -1792.447021   -3005.828613  2883.705811 -1792.447021  198.099609 -3005.828613  1115.281982   98.099609       98.099609
3   -1792.447021   -2907.778809  2883.705811 -1792.447021    2.000000 -2907.778809  1115.281982    0.049805       -1.900391
4   -1790.496826   -2905.828613  2981.755859 -1790.496826    2.000000 -2905.828613  1115.281982    0.049805       -1.900146
5   -1788.546631   -2903.878662  3079.805664 -1788.546631    2.000000 -2903.878662  1115.281982    0.050049       -1.900146
6   -1786.596680   -2901.928467  3178.243164 -1786.596680    2.000000 -2901.928467  1115.281982    0.049805       -1.512695
7   -1784.646484   -2899.978027  3275.855469 -1784.646484    2.000000 -2899.978027  1115.281982    0.049561       -1.950195
8   -1782.696045   -2897.978271  3275.855469 -1782.696045    2.000000 -2897.978271  1115.281982    0.000244      -99.999756
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:56:21]  --------------------------------------------------------------------------------
[08/23 16:56:21]  Iteration: 20 (14 solution, 5 counterexamples)
[08/23 16:56:21]  Generator returned sat in 0.018761 secs.
[08/23 16:56:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 16:56:21]  Improved gap from 0.005 to 3.125
[08/23 16:56:22]  Improved number of small numbers from 59 to 82 out of a max of 100
[08/23 16:56:22]  Verifer returned sat in 1.247107 secs.
[08/23 16:56:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1933.900879   -2233.900635  2883.705811 -1933.900879    0.099365 -2233.900635        0.0  299.999756      199.999768
1   -1833.922363   -2133.900635  2883.705811 -1833.922363  399.978271 -2133.900635        0.0  299.978271      199.978284
2   -1733.922363   -2033.900635  2883.705811 -1733.922363  399.978271 -2033.900635        0.0  299.978271      199.978284
3   -1733.922363   -1833.900879  2883.705811 -1733.922363    3.942387 -1833.900879        0.0   99.978516       99.978284
4   -1733.922363   -1733.943857  2883.705811 -1733.922363    3.913580 -1733.943857        0.0    0.021494       -0.021716
5   -1730.073486   -1733.900635  2979.878650 -1730.073486    3.870370 -1733.900635        0.0    3.827148        0.000000
6   -1730.073486   -1730.073486  3076.753650 -1730.073486    3.805556 -1730.073486        0.0    0.000000       -3.125000
7   -1726.365153   -1726.948486  3173.628650 -1726.365153    3.708333 -1726.948486        0.0    0.583333       -2.541667
8   -1723.385986   -1723.823486  3173.628662 -1723.385986    3.562500 -1723.823486        0.0    0.437500      -99.562488
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:56:22]  --------------------------------------------------------------------------------
[08/23 16:56:22]  Iteration: 21 (14 solution, 6 counterexamples)
[08/23 16:56:24]  Generator returned sat in 1.092821 secs.
[08/23 16:56:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:24]  Verifer returned unsat in 0.049047 secs.
[08/23 16:56:24]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:24]  --------------------------------------------------------------------------------
[08/23 16:56:24]  Iteration: 22 (15 solution, 6 counterexamples)
[08/23 16:56:24]  Generator returned sat in 0.027703 secs.
[08/23 16:56:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:24]  Improved gap from 96.07452392578125 to 100
[08/23 16:56:24]  Improved number of small numbers from 24 to 100 out of a max of 100
[08/23 16:56:24]  Verifer returned sat in 0.388538 secs.
[08/23 16:56:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2126.187500   -2130.137939  2879.943115 -2126.187500    0.099121 -2130.137939   0.000000    3.950439        3.950439
1   -2126.187500   -2130.137939  2879.943115 -2126.187500    3.950195 -2130.137939   0.000000    3.950439      -96.049561
2   -2030.113037   -2030.137939  2879.943115 -2030.113037  100.024902 -2030.137939   0.000000    0.024902      -99.975098
3   -1766.088135   -1926.187744  2879.943115 -1766.088135  264.049805 -1926.187744   0.000000  160.099609       64.049805
4   -1530.113037   -1734.104736  2879.943115 -1530.113037  396.074707 -1734.104736   0.024902  203.966797      200.000000
5   -1530.113037   -1630.138184  2879.943115 -1530.113037  200.016602 -1630.138184   0.024902  100.000244      100.000000
6   -1330.088379   -1530.154541  2879.943115 -1330.088379  300.024902 -1530.154541   0.049561  200.016602      200.000000
7   -1330.088379   -1430.137939  2879.943115 -1330.088379  200.016602 -1430.137939   0.049561  100.000000      100.000000
8   -1130.063477   -1430.137939  2879.943115 -1130.063477  300.024902 -1430.137939   0.074463  300.000000      200.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=3.[0m
[08/23 16:56:25]  --------------------------------------------------------------------------------
[08/23 16:56:25]  Iteration: 23 (15 solution, 7 counterexamples)
[08/23 16:56:25]  Generator returned sat in 0.131624 secs.
[08/23 16:56:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:25]  Improved gap from 0.00125 to 100
[08/23 16:56:25]  Improved number of small numbers from 96 to 100 out of a max of 100
[08/23 16:56:25]  Verifer returned sat in 0.180478 secs.
[08/23 16:56:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t     cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t
0  -15548.442627  -15648.491943  2879.942871 -15548.442627     0.098877 -15648.491943      0.000000  100.049316        0.049316
1  -15548.442627  -15548.491943  2879.942871 -15548.442627     3.949951 -15548.491943      0.000000    0.049316      -99.950684
2  -15448.432617  -15448.491943  2879.942871 -15448.432617   100.059326 -15448.491943      0.000000    0.059326      -99.940674
3   -5970.906006  -15348.491943  2879.942871  -5970.906006  9477.585938 -15348.491943   9077.585938  300.000000      200.000000
4   -1530.113037  -15248.491943  2879.942871  -1530.113037  4740.792969 -15248.491943  13418.378906  300.000000      200.000000
5     542.283447  -15148.491943  2879.942871    542.283447  2372.396484 -15148.491943  15390.775391  300.000000      200.000000
6    1430.481689  -15048.491943  2879.942871   1430.481689  1188.198242 -15048.491943  16178.973633  300.000000      200.000000
7    1726.580811  -14848.491943  2879.942871   1726.580811   596.099121 -14848.491943  16375.072754  200.000000      200.000000
8    1826.630371  -14848.491943  2879.942871   1826.630371   300.049561 -14848.491943  16375.122314  300.000000      200.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 16:56:25]  --------------------------------------------------------------------------------
[08/23 16:56:25]  Iteration: 24 (15 solution, 8 counterexamples)
[08/23 16:56:26]  Generator returned sat in 0.284105 secs.
[08/23 16:56:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 16:56:26]  Improved gap from 0.0 to 0
[08/23 16:56:26]  Improved number of small numbers from 64 to 92 out of a max of 100
[08/23 16:56:26]  Verifer returned sat in 0.489671 secs.
[08/23 16:56:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -15448.432861  -15648.434082  2679.976318 -15448.432861    0.098633 -15648.434082        0.0  200.001221      100.001465
1  -15448.432861  -15448.434326  2679.976318 -15448.432861    3.949951 -15448.434326        0.0    0.001465        0.001465
2  -15448.432861  -15448.434326  2679.976318 -15448.432861    0.001465 -15448.434326        0.0    0.001465      -99.998535
3  -15048.441162  -15248.434326  2679.976318 -15048.441162  399.993164 -15248.434326        0.0  199.993164      199.993164
4  -15048.441162  -15148.434326  2679.976318 -15048.441162    0.010000 -15148.434326        0.0   99.993164       99.993164
5  -15048.441162  -15048.442617  2679.976318 -15048.441162    0.010000 -15048.442617        0.0    0.001455       -0.006836
6  -15048.432617  -15048.434284  2779.974609 -15048.432617    0.010000 -15048.434284        0.0    0.001667        0.000000
7  -15048.424284  -15048.432617  2879.966064 -15048.424284    0.010000 -15048.432617        0.0    0.008333       -0.000212
8  -15048.422617  -15048.424072  2879.966064 -15048.422617    0.010000 -15048.424072        0.0    0.001455      -99.998545
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 16:56:26]  --------------------------------------------------------------------------------
[08/23 16:56:26]  Iteration: 25 (15 solution, 9 counterexamples)
[08/23 16:56:27]  Generator returned sat in 0.059179 secs.
[08/23 16:56:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 16:56:27]  Improved gap from 0.0025 to 10.9375
[08/23 16:56:27]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/23 16:56:27]  Verifer returned sat in 0.516142 secs.
[08/23 16:56:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -15185.192627  -15296.129883  2711.732422 -15185.192627    0.098633 -15296.129883   0.000000  110.937256       10.937500
1  -15185.192627  -15196.130127  2800.794678 -15185.192627    3.949707 -15196.130127   0.000000   10.937500       -0.000244
2  -14885.143311  -15185.192383  2800.794678 -14885.143311  310.986816 -15185.192383   0.049072  300.000000      200.000000
3  -14805.143311  -14994.192383  2800.794678 -14805.143311  380.000000 -14994.192383   0.049072  189.000000      180.000000
4  -14805.143311  -14898.741699  2800.794678 -14805.143311  189.000000 -14898.741699   0.049072   93.549316       80.000000
5  -14805.143311  -14840.004883  2820.794678 -14805.143311   93.500000 -14840.004883   0.049072   34.812500        0.000000
6  -14794.205811  -14805.192383  2909.857178 -14794.205811   45.750000 -14805.192383   0.049072   10.937500        0.000000
7  -14783.268311  -14794.254883  2998.919678 -14783.268311   21.875000 -14794.254883   0.049072   10.937500        0.000000
8  -14783.268311  -14783.317383  2998.919922 -14783.268311    9.937500 -14783.317383   0.049072    0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 16:56:27]  --------------------------------------------------------------------------------
[08/23 16:56:27]  Iteration: 26 (15 solution, 10 counterexamples)
