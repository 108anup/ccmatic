[08/23 17:35:47]  --------------------------------------------------------------------------------
[08/23 17:35:47]  Iteration: 1 (0 solution, 0 counterexamples)
[08/23 17:35:47]  Generator returned sat in 0.004272 secs.
[08/23 17:35:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:35:47]  Improved gap from 0.0 to 100
[08/23 17:35:48]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/23 17:35:48]  Verifer returned sat in 0.325847 secs.
[08/23 17:35:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t    losts_0,t  queue_t  bottle_queue_t
0  -12558.337917  -12558.537917  12558.537917 -12558.337917     0.10000 -12558.537917      0.00000      0.2             0.2
1  -12458.237917  -12558.537917  12558.537917 -12458.237917   100.30000 -12558.537917      0.10000    100.2             0.2
2  -12458.237917  -12458.437917  12558.537917 -12458.237917   100.10000 -12458.437917      0.10000      0.1           -99.8
3  -12258.137917  -12302.537917  12558.537917 -12258.137917   200.20000 -12302.537917      0.20000     44.2             0.2
4  -11488.037917  -12217.537917  12558.537917 -11488.037917   814.30000 -12217.537917    670.30000     59.2             0.2
5   -9641.787917  -12158.537917  12558.537917  -9641.787917  1905.45000 -12158.537917   2416.55000    100.2             0.2
6   -6282.012917  -11958.537917  12558.537917  -6282.012917  3459.97500 -11958.537917   5676.32500      0.2             0.2
7    -402.250417  -11958.537917  12558.537917   -402.250417  5879.96250 -11958.537917  11456.08750    100.2             0.2
8    8837.493333  -11858.537917  12558.537917   8837.493333  9339.94375 -11858.537917  20595.83125    100.2             0.2
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=5, buffer=1/5.[0m
[08/23 17:35:48]  --------------------------------------------------------------------------------
[08/23 17:35:48]  Iteration: 2 (0 solution, 1 counterexamples)
[08/23 17:35:48]  Generator returned sat in 0.084181 secs.
[08/23 17:35:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:35:48]  Improved gap from 0.000625 to 100
[08/23 17:35:49]  Improved number of small numbers from 56 to 72 out of a max of 101
[08/23 17:35:49]  Verifer returned sat in 0.874233 secs.
[08/23 17:35:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -12457.355469  -12657.355469  12557.355635 -12457.355469    0.099854 -12657.355469     0.0000  200.000000      100.000166
1  -12457.355469  -12557.355635  12557.355635 -12457.355469  199.999756 -12557.355635     0.0000  100.000166        0.000166
2  -12156.848135  -12357.355713  12557.355635 -12156.848135  400.507500 -12357.355713     0.0000  200.507578      200.507500
3  -12156.848135  -12357.355469  12557.355635 -12156.848135   51.005000 -12357.355469     0.0000  200.507334      100.507500
4  -12156.848135  -12157.355635  12557.355635 -12156.848135  200.505000 -12157.355635     0.0000    0.507500        0.507500
5  -11757.350635  -12157.355469  12557.355635 -11757.350635  400.005000 -12157.355469     0.0025  400.002334      300.002500
6  -11757.350635  -11999.355469  12557.355635 -11757.350635    0.010000 -11999.355469     0.0025  242.002334      200.002500
7  -11757.350635  -11857.355635  12557.355635 -11757.350635  178.510000 -11857.355635     0.0025  100.002500      100.002500
8  -11529.343135  -11857.355469  12557.355635 -11529.343135  328.010000 -11857.355469     0.0025  328.009834      228.010000
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=1, buffer=120001/400.[0m
[08/23 17:35:49]  --------------------------------------------------------------------------------
[08/23 17:35:49]  Iteration: 3 (0 solution, 2 counterexamples)
[08/23 17:35:49]  Generator returned sat in 0.183456 secs.
[08/23 17:35:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:35:50]  Improved number of small numbers from 72 to 100 out of a max of 100
[08/23 17:35:50]  Verifer returned sat in 0.264863 secs.
[08/23 17:35:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -12457.355469  -12762.360840  12557.355713 -12457.355469    0.099609 -12762.360840    0.000000  305.005371      205.005615
1  -12457.355469  -12662.360840  12557.355713 -12457.355469    0.001465 -12662.360840    0.000000  205.005371      105.005615
2  -12162.361084  -12562.360840  12557.355713 -12162.361084  499.999756 -12562.360840    0.000000  399.999756      300.000000
3  -12059.358154  -12462.361084  12557.355713 -12059.358154  503.002686 -12462.361084    3.001465  400.001465      300.001465
4  -11957.356934  -12362.361084  12557.355713 -11957.356934  502.002686 -12362.361084    5.002686  400.001465      300.001465
5  -11856.355713  -12262.360840  12557.355713 -11856.355713  501.002686 -12262.360840    6.003906  400.001221      300.001465
6  -11756.354248  -12161.360840  12557.355713 -11756.354248  500.002686 -12161.360840    6.005371  399.001221      300.001465
7  -11656.352783  -11962.361084  12557.355713 -11656.352783  499.002686 -11962.361084    6.006836  300.001465      300.001465
8  -11458.351562  -11962.360840  12557.355713 -11458.351562  498.002686 -11962.360840  104.008057  400.001221      300.001465
fefficient=True, bounded_queue=False, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=5, buffer=614403/2048.[0m
[08/23 17:35:50]  --------------------------------------------------------------------------------
[08/23 17:35:50]  Iteration: 4 (0 solution, 3 counterexamples)
[08/23 17:35:50]  Generator returned sat in 0.023556 secs.
[08/23 17:35:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:35:50]  Improved gap from 0.0498046875 to 100
[08/23 17:35:50]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/23 17:35:50]  Verifer returned sat in 0.254000 secs.
[08/23 17:35:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -12553.473877  -12553.473877  12857.30835 -12553.473877    0.099609 -12553.473877    0.000000    0.000000        0.000000
1  -12453.436523  -12453.499023  12857.30835 -12453.436523  100.037354 -12453.499023    0.012451    0.050049        0.024902
2  -12353.424316  -12353.473877  12857.30835 -12353.424316  100.062256 -12353.473877    0.024658    0.024902        0.024902
3  -12151.411865  -12353.473877  12857.30835 -12151.411865  202.037354 -12353.473877  102.037109  100.024902        0.024902
4  -12051.399414  -12251.473877  12857.30835 -12051.399414  200.037354 -12251.473877  102.049561   98.024902        0.024902
5  -11951.386963  -12085.457275  12857.30835 -11951.386963  198.037354 -12085.457275  102.062012   32.008301        0.024902
6  -11787.357910  -11953.473877  12857.30835 -11787.357910  196.037354 -11953.473877  166.091064    0.024902        0.024902
7  -11593.345459  -11945.473877  12857.30835 -11593.345459  194.037354 -11945.473877  260.103516   92.024902        0.024902
8  -11493.333008  -11853.473877  12857.30835 -11493.333008  192.037354 -11853.473877  260.115967  100.024902        0.024902
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5, buffer=51/2048.[0m
[08/23 17:35:51]  --------------------------------------------------------------------------------
[08/23 17:35:51]  Iteration: 5 (0 solution, 4 counterexamples)
[08/23 17:35:51]  Generator returned sat in 0.277525 secs.
[08/23 17:35:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:35:51]  Improved number of small numbers from 92 to 100 out of a max of 100
[08/23 17:35:51]  Verifer returned sat in 0.202993 secs.
[08/23 17:35:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -12653.467529  -12653.473877  12857.308105 -12653.467529    0.099365 -12653.473877    0.006348    0.000000     -100.000000
1  -12453.436523  -12553.473877  12857.308105 -12453.436523  200.031006 -12553.473877    0.012451  100.024902        0.024902
2  -12353.424316  -12353.473877  12857.308105 -12353.424316  200.037109 -12353.473877    0.024658    0.024902        0.024902
3  -12122.870361  -12319.119873  12857.308105 -12122.870361  230.578857 -12319.119873  130.578613   65.670898        0.024902
4  -12022.864258  -12195.786377  12857.308105 -12022.864258  165.677002 -12195.786377  130.584717   42.337402        0.024902
5  -11887.857910  -12085.457275  12857.308105 -11887.857910  177.343750 -12085.457275  165.591064   32.008301        0.024902
6  -11787.357910  -11953.473877  12857.308105 -11787.357910  132.508301 -11953.473877  166.091064    0.024902        0.024902
7  -11606.059814  -11899.890869  12857.308105 -11606.059814  181.322998 -11899.890869  247.389160   46.441895        0.024902
8  -11506.053955  -11853.473877  12857.308105 -11506.053955  146.447754 -11853.473877  247.395020  100.024902        0.024902
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5, buffer=51/2048.[0m
[08/23 17:35:52]  --------------------------------------------------------------------------------
[08/23 17:35:52]  Iteration: 6 (0 solution, 5 counterexamples)
[08/23 17:35:52]  Generator returned sat in 0.026585 secs.
[08/23 17:35:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:35:52]  Improved number of small numbers from 75 to 75 out of a max of 100
[08/23 17:35:52]  Verifer returned sat in 0.544471 secs.
[08/23 17:35:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -12653.467529  -12653.473877  12857.308105 -12653.467529    0.099365 -12653.473877    0.006348    0.000000     -100.000000
1  -12453.436523  -12553.473877  12857.308105 -12453.436523  200.031006 -12553.473877    0.012451  100.024902        0.024902
2  -12353.424316  -12353.473877  12857.308105 -12353.424316  200.037109 -12353.473877    0.024658    0.024902        0.024902
3  -12122.870361  -12318.788574  12857.308105 -12122.870361  230.578857 -12318.788574  130.578613   65.339600        0.024902
4  -12022.867310  -12194.786377  12857.308105 -12022.867310  165.342651 -12194.786377  130.581665   41.337402        0.024902
5  -11886.860962  -12085.455241  12857.308105 -11886.860962  177.343750 -12085.455241  166.588013   32.006266        0.024902
6  -11786.857910  -11953.473877  12857.308105 -11786.857910  132.009318 -11953.473877  166.591064    0.024902        0.024902
7  -11606.225464  -11899.226074  12857.308105 -11606.225464  180.657349 -11899.226074  247.223511   45.777100        0.024902
8  -11506.222412  -11853.473877  12857.308105 -11506.222412  145.780151 -11853.473877  247.226562  100.024902        0.024902
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5, buffer=51/2048.[0m
[08/23 17:35:53]  --------------------------------------------------------------------------------
[08/23 17:35:53]  Iteration: 7 (0 solution, 6 counterexamples)
[08/23 17:35:53]  Generator returned sat in 0.539502 secs.
[08/23 17:35:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:35:53]  Improved gap from 0.0 to 100
[08/23 17:35:54]  Improved number of small numbers from 27 to 39 out of a max of 101
[08/23 17:35:54]  Verifer returned sat in 1.074578 secs.
[08/23 17:35:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -12304.875732  -12471.463758  12757.317861 -12304.875732    0.099121 -12471.463758  166.588013    0.000013      -99.999987
1  -11885.649542  -12371.463623  12757.317861 -11885.649542  419.226204 -12371.463623  166.588013  319.226069      219.226204
2  -11885.649542  -12171.463867  12757.317861 -11885.649542    0.002686 -12171.463867  166.588013  119.226313      119.226204
3  -11885.649542  -12171.463623  12757.317861 -11885.649542   79.815802 -12171.463623  166.588013  119.226069       19.226204
4  -11885.649542  -12071.463758  12757.317861 -11885.649542  119.223704 -12071.463758  166.588013   19.226204      -80.773796
5  -11726.540190  -11893.128203  12757.317861 -11726.540190  178.335556 -11893.128203  166.588013    0.000000      -21.664444
6  -11459.536857  -11771.463758  12757.317861 -11459.536857  267.003333 -11771.463758  166.588013  145.338889      145.338889
7  -11204.870745  -11771.463623  12757.317861 -11204.870745  400.005000 -11771.463623  166.590513  400.002365      300.002500
8  -11204.870745  -11671.463623  12757.317861 -11204.870745    0.010000 -11671.463623  166.590513  300.002365      200.002500
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1, buffer=120001/400.[0m
[08/23 17:35:55]  --------------------------------------------------------------------------------
[08/23 17:35:55]  Iteration: 8 (0 solution, 7 counterexamples)
[08/23 17:35:55]  Generator returned sat in 0.297074 secs.
[08/23 17:35:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:35:55]  Improved gap from 0.0 to 100
[08/23 17:35:55]  Improved number of small numbers from 54 to 101 out of a max of 101
[08/23 17:35:55]  Verifer returned sat in 0.409718 secs.
[08/23 17:35:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t      cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t
0  -12217.832520  -12617.881836  12903.736328 -12217.832520      0.098877 -12617.881836      0.000000  400.049316      300.049561
1  -12117.881836  -12517.881836  12903.736328 -12117.881836    500.000000 -12517.881836      0.000000  400.000000      300.000244
2  -12117.881836  -12417.882080  12903.736328 -12117.881836      0.049561 -12417.882080      0.000000  300.000244      200.000244
3     292.289795  -12217.882080  12903.736328    292.289795  12710.171875 -12217.882080  12210.122314  300.049561      300.049561
4    6348.826172  -12117.882080  12903.736328   6348.826172   6356.585938 -12117.882080  18166.658691  300.049561      300.049561
5    9228.569580  -12017.882080  12903.736328   9228.569580   3179.792969 -12017.882080  20946.402100  300.049561      300.049561
6   10519.916504  -12017.882080  12903.736328  10519.916504   1591.396484 -12017.882080  22137.749023  400.049561      300.049561
7   10917.065186  -11817.882080  12903.736328  10917.065186    797.198242 -11817.882080  22434.897705  300.049561      300.049561
8   11017.114746  -11817.881836  12903.736328  11017.114746    400.099121 -11817.881836  22434.947266  400.049316      300.049561
fefficient=True, bounded_queue=False, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5, buffer=1229003/4096.[0m
[08/23 17:35:56]  --------------------------------------------------------------------------------
[08/23 17:35:56]  Iteration: 9 (0 solution, 8 counterexamples)
[08/23 17:35:56]  Generator returned sat in 0.042618 secs.
[08/23 17:35:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:35:56]  Improved number of small numbers from 94 to 94 out of a max of 100
[08/23 17:35:56]  Verifer returned sat in 0.244756 secs.
[08/23 17:35:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t      cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t
0  -12217.832520  -12617.881836  12903.736328 -12217.832520      0.098877 -12617.881836      0.000000  400.049316      300.049561
1  -12117.881836  -12517.881836  12903.736328 -12117.881836    500.000000 -12517.881836      0.000000  400.000000      300.000244
2  -12117.881836  -12417.882080  12903.736328 -12117.881836      0.049561 -12417.882080      0.000000  300.000244      200.000244
3     322.496826  -12217.882080  12903.736328    322.496826  12740.378906 -12217.882080  12240.329346  300.049561      300.049561
4    6393.636719  -12117.882080  12903.736328   6393.636719   6371.189453 -12117.882080  18211.469238  300.049561      300.049561
5    9280.181885  -12017.882080  12903.736328   9280.181885   3186.594727 -12017.882080  20998.014404  300.049561      300.049561
6   10574.429688  -12017.882080  12903.736328  10574.429688   1594.297363 -12017.882080  22192.262207  400.049561      300.049561
7   10972.528809  -11817.882080  12903.736328  10972.528809    798.148682 -11817.882080  22490.361328  300.049561      300.049561
8   11072.553589  -11817.882080  12903.736328  11072.553589    400.074341 -11817.882080  22490.386108  400.049561      300.049561
fefficient=True, bounded_queue=False, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5, buffer=1229003/4096.[0m
[08/23 17:35:56]  --------------------------------------------------------------------------------
[08/23 17:35:56]  Iteration: 10 (0 solution, 9 counterexamples)
[08/23 17:35:57]  Generator returned sat in 0.636431 secs.
[08/23 17:35:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:35:57]  Improved gap from 0.0 to 0
[08/23 17:35:58]  Improved number of small numbers from 61 to 79 out of a max of 101
[08/23 17:35:58]  Verifer returned sat in 0.566621 secs.
[08/23 17:35:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -12117.896973  -12117.899658  13901.032959 -12117.896973    0.098633 -12117.899658        0.0    0.002686        0.002607
1  -12017.898193  -12117.899414  13901.032959 -12017.898193  100.001465 -12117.899414        0.0  100.001221        0.001387
2  -12017.898193  -12017.899414  13901.032959 -12017.898193    0.001250 -12017.899414        0.0    0.001221      -99.998613
3  -11817.898193  -11817.899580  13901.032959 -11817.898193  200.001221 -11817.899580        0.0    0.001387        0.001387
4  -11817.889580  -11817.890830  14001.022949 -11817.889580    0.010000 -11817.890830        0.0    0.001250       -0.000010
5  -11817.880830  -11817.882080  14101.014160 -11817.880830    0.010000 -11817.882080        0.0    0.001250       -0.000049
6  -11817.872080  -11817.873330  14201.005459 -11817.872080    0.010000 -11817.873330        0.0    0.001250        0.000000
7  -11817.863330  -11817.872080  14300.995605 -11817.863330    0.010000 -11817.872080        0.0    0.008750       -0.001104
8  -11817.862080  -11817.862080  14400.994141 -11817.862080    0.010000 -11817.862080        0.0    0.000000       -0.001318
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0, buffer=11/4096.[0m
[08/23 17:35:58]  --------------------------------------------------------------------------------
[08/23 17:35:58]  Iteration: 11 (0 solution, 10 counterexamples)
[08/23 17:35:58]  Generator returned sat in 0.079967 secs.
[08/23 17:35:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 17:35:59]  Improved gap from 0.000244140625 to 7.8125
[08/23 17:35:59]  Improved number of small numbers from 54 to 101 out of a max of 101
[08/23 17:35:59]  Verifer returned sat in 0.908450 secs.
[08/23 17:35:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -16570.625244  -16980.723633  13791.936035 -16570.625244    0.098633 -16980.723633        0.0  410.098389      310.098633
1  -16470.674561  -16880.723633  13791.936035 -16470.674561  510.049072 -16880.723633        0.0  410.049072      310.049316
2  -16470.674561  -16780.723877  13791.936035 -16470.674561    0.049316 -16780.723877        0.0  310.049316      210.049316
3  -16470.674561  -16623.723633  13791.936035 -16470.674561  310.000000 -16623.723633        0.0  153.049072      110.049316
4  -16470.674561  -16480.723877  13791.936035 -16470.674561  153.000000 -16480.723877        0.0   10.049316       10.049316
5  -16406.223877  -16424.835693  13817.436035 -16406.223877   74.500000 -16424.835693        0.0   18.611816        0.000000
6  -16389.585693  -16397.398193  13900.797852 -16389.585693   35.250000 -16397.398193        0.0    7.812500        0.000000
7  -16381.773193  -16389.585693  13992.985352 -16381.773193   15.625000 -16389.585693        0.0    7.812500        0.000000
8  -16381.773193  -16381.773193  14085.172607 -16381.773193    5.812500 -16381.773193        0.0    0.000000       -7.812744
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=317541/1024.[0m
[08/23 17:36:00]  --------------------------------------------------------------------------------
[08/23 17:36:00]  Iteration: 12 (0 solution, 11 counterexamples)
[08/23 17:36:00]  Generator returned sat in 0.538671 secs.
[08/23 17:36:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:36:00]  Improved gap from 0.049365234375 to 100
[08/23 17:36:01]  Improved number of small numbers from 61 to 99 out of a max of 101
[08/23 17:36:01]  Verifer returned sat in 0.597976 secs.
[08/23 17:36:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t  losts_0,t      queue_t  bottle_queue_t
0  -16969.413330  -18471.807617  13900.797852 -16969.413330     0.098633 -18471.807617   0.000000  1502.394287     1402.394287
1  -16869.462646  -18371.807617  13900.797852 -16869.462646  1602.344971 -18371.807617   0.000000  1502.344971     1402.344971
2  -16869.462646  -18271.807617  13900.797852 -16869.462646     0.049316 -18271.807617   0.000000  1402.344971     1302.344971
3  -16869.462646  -18171.807617  13900.797852 -16869.462646   199.589313 -18171.807617   0.000000  1302.344971     1202.344971
4  -16869.462646  -17971.807861  13900.797852 -16869.462646   298.383970 -17971.807861   0.000000  1102.345215     1102.344971
5  -16869.462646  -17971.807617  13900.797852 -16869.462646   446.575955 -17971.807617   0.000000  1102.344971     1002.344971
6  -16869.462646  -17871.807617  13900.797852 -16869.462646   668.863932 -17871.807617   0.000000  1002.344971      902.344971
7  -16869.462646  -17671.807861  13900.797852 -16869.462646  1002.295898 -17671.807861   0.000000   802.345215      802.344971
8  -16169.364014  -17571.807861  13900.797852 -16169.364014  1502.443848 -17571.807861   0.049316  1402.394531     1402.394287
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=1, buffer=5744207/4096.[0m
[08/23 17:36:01]  --------------------------------------------------------------------------------
[08/23 17:36:01]  Iteration: 13 (0 solution, 12 counterexamples)
[08/23 17:36:02]  Generator returned sat in 0.283717 secs.
[08/23 17:36:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/23 17:36:02]  Improved gap from 0.0 to 25.0
[08/23 17:36:03]  Improved number of small numbers from 58 to 66 out of a max of 101
[08/23 17:36:03]  Verifer returned sat in 1.353258 secs.
[08/23 17:36:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -17791.818359  -17791.819839  13725.792607 -17791.818359    0.098633 -17791.819839   0.000000   0.001480      -27.011853
1  -17764.804839  -17764.806396  13725.792607 -17764.804839   27.015000 -17764.806396   0.000000   0.001557      -99.998333
2  -17564.804688  -17564.806506  13725.792607 -17564.804688  200.001709 -17564.806506   0.000000   0.001819        0.001819
3  -17513.809839  -17538.809839  13774.795941 -17513.809839   50.996667 -17538.809839   0.000000  25.000000        0.000000
4  -17413.804839  -17413.809839  13774.795941 -17413.804839  125.005000 -17413.809839   0.001667   0.003333        0.003333
5  -17413.798173  -17413.809839  13849.795941 -17413.798173    0.010000 -17413.809839   0.001667   0.010000      -24.990000
6  -17339.809839  -17388.809839  13900.797607 -17339.809839   73.998333 -17388.809839   0.001667  48.998333        0.000000
7  -17315.308173  -17339.811506  13975.797607 -17315.308173   73.500000 -17339.811506   0.001667  24.501667       -0.498333
8  -17304.310673  -17314.811279  13975.797607 -17304.310673   35.499167 -17314.811279   0.001667  10.498940      -89.500833
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1, buffer=1/300.[0m
[08/23 17:36:03]  --------------------------------------------------------------------------------
[08/23 17:36:03]  Iteration: 14 (0 solution, 13 counterexamples)
[08/23 17:36:04]  Generator returned sat in 0.168659 secs.
[08/23 17:36:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/23 17:36:04]  Improved gap from 0.0 to 0
[08/23 17:36:05]  Improved number of small numbers from 56 to 101 out of a max of 101
[08/23 17:36:05]  Verifer returned sat in 0.939822 secs.
[08/23 17:36:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t
0  -17464.841064  -17464.842041  13827.314941 -17464.841064  0.098633 -17464.842041        0.0  0.000977        0.000977
1  -17461.833984  -17463.334473  13924.306885 -17461.833984  3.008057 -17463.334473        0.0  1.500488        0.000000
2  -17461.833252  -17461.833984  14024.306152 -17461.833252  1.501221 -17461.833984        0.0  0.000732        0.000000
3  -17461.832764  -17461.833252  14122.798340 -17461.832764  0.001221 -17461.833252        0.0  0.000488       -1.507324
4  -17460.324463  -17460.325195  14222.797363 -17460.324463  1.508789 -17460.325195        0.0  0.000732        0.000000
5  -17458.815918  -17460.324463  14321.288818 -17458.815918  1.509277 -17460.324463        0.0  1.508545        0.000000
6  -17458.815918  -17458.815918  14421.288818 -17458.815918  0.010000 -17458.815918        0.0  0.000000        0.000000
7  -17457.298584  -17458.815674  14519.771484 -17457.298584  1.517334 -17458.815674        0.0  1.517090        0.000000
8  -17457.298584  -17457.298584  14519.771484 -17457.298584  0.010000 -17457.298584        0.0  0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=1/800.[0m
[08/23 17:36:05]  --------------------------------------------------------------------------------
[08/23 17:36:05]  Iteration: 15 (0 solution, 14 counterexamples)
[08/23 17:36:06]  Generator returned sat in 0.492784 secs.
[08/23 17:36:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:36:07]  Improved gap from 0.0 to 0
[08/23 17:36:07]  Improved number of small numbers from 60 to 78 out of a max of 101
[08/23 17:36:07]  Verifer returned sat in 1.423378 secs.
[08/23 17:36:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t
0  -17761.825195  -17761.826172  13820.306641 -17761.825195  0.098389 -17761.826172        0.0  0.000977        0.000945
1  -17761.825195  -17761.825928  13920.305664 -17761.825195  0.000977 -17761.825928        0.0  0.000732       -0.000031
2  -17761.823975  -17761.824984  14020.304443 -17761.823975  0.001953 -17761.824984        0.0  0.001010       -0.000031
3  -17761.316984  -17761.325984  14119.797484 -17761.316984  0.508000 -17761.325984        0.0  0.009000        0.000000
4  -17761.315984  -17761.316984  14219.796484 -17761.315984  0.010000 -17761.316984        0.0  0.001000        0.000000
5  -17761.306984  -17761.307984  14319.787354 -17761.306984  0.010000 -17761.307984        0.0  0.001000       -0.000131
6  -17761.290984  -17761.301758  14419.771484 -17761.290984  0.017000 -17761.301758        0.0  0.010773        0.000000
7  -17761.290984  -17761.290984  14519.771484 -17761.290984  0.010000 -17761.290984        0.0  0.000000        0.000000
8  -17761.280984  -17761.290771  14519.771484 -17761.280984  0.010000 -17761.290771        0.0  0.009787      -99.990000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0, buffer=1/512.[0m
[08/23 17:36:07]  --------------------------------------------------------------------------------
[08/23 17:36:07]  Iteration: 16 (0 solution, 15 counterexamples)
[08/23 17:36:08]  Generator returned sat in 0.160979 secs.
[08/23 17:36:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:08]  Verifer returned unsat in 0.163748 secs.
[08/23 17:36:08]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:08]  --------------------------------------------------------------------------------
[08/23 17:36:08]  Iteration: 17 (1 solution, 15 counterexamples)
[08/23 17:36:08]  Generator returned sat in 0.048141 secs.
[08/23 17:36:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:08]  Verifer returned unsat in 0.201805 secs.
[08/23 17:36:08]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:08]  --------------------------------------------------------------------------------
[08/23 17:36:08]  Iteration: 18 (2 solution, 15 counterexamples)
[08/23 17:36:09]  Generator returned sat in 0.039791 secs.
[08/23 17:36:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:09]  Verifer returned unsat in 0.165722 secs.
[08/23 17:36:09]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:09]  --------------------------------------------------------------------------------
[08/23 17:36:09]  Iteration: 19 (3 solution, 15 counterexamples)
[08/23 17:36:09]  Generator returned sat in 0.053553 secs.
[08/23 17:36:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:09]  Improved gap from 0.0491943359375 to 100
[08/23 17:36:10]  Improved number of small numbers from 51 to 101 out of a max of 101
[08/23 17:36:10]  Verifer returned sat in 0.247224 secs.
[08/23 17:36:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t
0  -31091.547607  -31091.547607  14419.77124 -31091.547607      0.098389 -31091.547607      0.000000    0.000000        0.000000
1  -30991.547852  -31091.547607  14419.77124 -30991.547852     99.999756 -31091.547607      0.000000   99.999756       -0.000244
2  -30591.449219  -30891.547852  14419.77124 -30591.449219    500.098389 -30891.547852      0.049316  300.049316      300.049072
3  -18057.350098  -30891.547607  14419.77124 -18057.350098  12834.148438 -30891.547607  12434.148438  400.049072      300.049072
4  -12040.824951  -30691.547852  14419.77124 -12040.824951   6416.574219 -30691.547852  18350.673584  300.049316      300.049072
5   -9133.087158  -30691.547607  14419.77124  -9133.087158   3207.787109 -30691.547607  21158.411377  400.049072      300.049072
6   -7929.742676  -30491.547852  14419.77124  -7929.742676   1603.393555 -30491.547852  22261.755859  300.049316      300.049072
7   -7428.595215  -30391.547852  14419.77124  -7428.595215    801.196777 -30391.547852  22662.903320  300.049316      300.049072
8   -7328.546143  -30391.547607  14419.77124  -7328.546143    400.098389 -30391.547607  22662.952393  400.049072      300.049072
fefficient=True, bounded_queue=False, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5, buffer=1229001/4096.[0m
[08/23 17:36:10]  --------------------------------------------------------------------------------
[08/23 17:36:10]  Iteration: 20 (3 solution, 16 counterexamples)
[08/23 17:36:10]  Generator returned sat in 0.085855 secs.
[08/23 17:36:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:10]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:36:10]  Verifer returned sat in 0.145714 secs.
[08/23 17:36:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t      cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t
0  -31091.547607  -31091.547607  14419.77124 -31091.547607      0.098389 -31091.547607      0.000000    0.000000        0.000000
1  -30991.547852  -31091.547607  14419.77124 -30991.547852     99.999756 -31091.547607      0.000000   99.999756       -0.000244
2  -30591.449219  -30991.547607  14419.77124 -30591.449219    500.098389 -30991.547607      0.049316  400.049072      300.049072
3  -18095.357666  -30891.547607  14419.77124 -18095.357666  12896.140625 -30891.547607  12396.140869  400.049072      300.049072
4  -12048.836426  -30703.533447  14419.77124 -12048.836426   6446.570312 -30703.533447  18342.662109  312.034912      300.049072
5   -9139.086182  -30691.547607  14419.77124  -9139.086182   3221.785156 -30691.547607  21152.412354  400.049072      300.049072
6   -7929.742676  -30493.547363  14419.77124  -7929.742676   1609.392578 -30493.547363  22261.755859  302.048828      300.049072
7   -7428.595215  -30391.547607  14419.77124  -7428.595215    803.196289 -30391.547607  22662.903320  300.049072      300.049072
8   -7328.546143  -30391.547607  14419.77124  -7328.546143    400.098145 -30391.547607  22662.952393  400.049072      300.049072
fefficient=True, bounded_queue=False, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5, buffer=1229001/4096.[0m
[08/23 17:36:11]  --------------------------------------------------------------------------------
[08/23 17:36:11]  Iteration: 21 (3 solution, 17 counterexamples)
[08/23 17:36:11]  Generator returned sat in 0.081978 secs.
[08/23 17:36:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:11]  Improved gap from 99.999755859375 to 100
[08/23 17:36:12]  Improved number of small numbers from 67 to 91 out of a max of 101
[08/23 17:36:12]  Verifer returned sat in 0.559592 secs.
[08/23 17:36:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t      cwnd_0,t   service_0,t     losts_0,t     queue_t  bottle_queue_t
0  -31091.547852  -31091.547852  14419.770996 -31091.547852      0.098145 -31091.547852      0.000000    0.000000        0.000000
1  -30991.548096  -31091.547852  14419.770996 -30991.548096     99.999756 -31091.547852      0.000000   99.999756       -0.000244
2  -30591.486328  -30991.547852  14419.770996 -30591.486328    500.061523 -30991.547852      0.012451  400.049072      300.049072
3  -18065.572510  -30891.547852  14419.770996 -18065.572510  12925.962891 -30891.547852  12425.926270  400.049072      300.049072
4  -12004.640137  -30703.533936  14419.770996 -12004.640137   6460.981445 -30703.533936  18386.858643  312.035156      300.049072
5   -9088.184570  -30691.510986  14419.770996  -9088.184570   3228.490723 -30691.510986  21203.314209  400.012207      300.049072
6   -7875.951416  -30548.265503  14419.770996  -7875.951416   1612.245361 -30548.265503  22315.547363  356.766724      300.049072
7   -7428.595459  -30391.547852  14419.770996  -7428.595459    804.122681 -30391.547852  22662.903320  300.049072      300.049072
8   -7328.583191  -30391.547852  14419.770996  -7328.583191    400.061340 -30391.547852  22662.915588  400.049072      300.049072
fefficient=True, bounded_queue=False, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5, buffer=1229001/4096.[0m
[08/23 17:36:12]  --------------------------------------------------------------------------------
[08/23 17:36:12]  Iteration: 22 (3 solution, 18 counterexamples)
[08/23 17:36:13]  Generator returned sat in 1.383086 secs.
[08/23 17:36:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:14]  Improved gap from 0.0245361328125 to 100
[08/23 17:36:14]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/23 17:36:14]  Verifer returned sat in 0.198197 secs.
[08/23 17:36:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30991.548096  -31091.548096  14419.77124 -30991.548096    0.098145 -31091.548096   0.000000  100.000000      100.000000
1  -30991.548096  -31091.548096  14419.77124 -30991.548096    0.049072 -31091.548096   0.000000  100.000000        0.000000
2  -30491.548096  -30891.646240  14419.77124 -30491.548096  600.000000 -30891.646240   0.000000  400.098145      400.000000
3  -30391.548096  -30891.548096  14419.77124 -30391.548096  500.098145 -30891.548096   0.000000  500.000000      400.000000
4  -30391.449951  -30691.646240  14419.77124 -30391.449951  500.098145 -30691.646240   0.000000  300.196289      300.098145
5  -30191.548096  -30591.597168  14419.77124 -30191.548096  500.098145 -30591.597168   0.000000  400.049072      400.000000
6  -30091.499023  -30491.646240  14419.77124 -30091.499023  500.098145 -30491.646240   0.000000  400.147217      400.049072
7  -29991.548096  -30391.548096  14419.77124 -29991.548096  500.098145 -30391.548096   0.000000  400.000000      400.000000
8  -29891.449951  -30391.548096  14419.77124 -29891.449951  500.098145 -30391.548096   0.049072  500.049072      400.049072
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=1, buffer=1638601/4096.[0m
[08/23 17:36:14]  --------------------------------------------------------------------------------
[08/23 17:36:14]  Iteration: 23 (3 solution, 19 counterexamples)
[08/23 17:36:15]  Generator returned sat in 0.855703 secs.
[08/23 17:36:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:16]  Improved gap from 0.02447509765625 to 9.375
[08/23 17:36:16]  Improved number of small numbers from 59 to 101 out of a max of 101
[08/23 17:36:16]  Verifer returned sat in 0.682022 secs.
[08/23 17:36:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -32000.581787  -32009.956787  14085.396240 -32000.581787    0.097900 -32009.956787        0.0    9.375000        9.374756
1  -32000.581787  -32009.956543  14176.020996 -32000.581787    0.048828 -32009.956543        0.0    9.374756       -0.000488
2  -31963.081787  -31963.130615  14176.021240 -31963.081787   46.874756 -31963.130615        0.0    0.048828      -62.500244
3  -31663.130615  -31813.179443  14176.021240 -31663.130615  300.000000 -31813.179443        0.0  150.048828      137.450928
4  -31663.130615  -31743.282471  14176.021240 -31663.130615  150.000000 -31743.282471        0.0   80.151855       37.450928
5  -31663.130615  -31700.581543  14238.570312 -31663.130615   75.000000 -31700.581543        0.0   37.450928        0.000000
6  -31663.081543  -31663.130615  14329.195312 -31663.081543   37.500000 -31663.130615        0.0    0.049072       -9.325928
7  -31644.380615  -31653.706543  14419.771240 -31644.380615   18.750000 -31653.706543        0.0    9.325928       -0.049072
8  -31644.331543  -31644.331543  14419.771240 -31644.331543    9.375000 -31644.331543        0.0    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=563199/4096.[0m
[08/23 17:36:16]  --------------------------------------------------------------------------------
[08/23 17:36:16]  Iteration: 24 (3 solution, 20 counterexamples)
[08/23 17:36:18]  Generator returned sat in 1.208185 secs.
[08/23 17:36:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:36:18]  Improved gap from 0.02447509765625 to 100
[08/23 17:36:19]  Improved number of small numbers from 41 to 63 out of a max of 101
[08/23 17:36:19]  Verifer returned sat in 1.575928 secs.
[08/23 17:36:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -32400.614746  -33098.761498  14215.043088 -32400.614746    0.097900 -33098.761498        0.0  698.146752      598.146752
1  -32400.614746  -32998.761498  14215.043088 -32400.614746    0.049072 -32998.761498        0.0  598.146752      498.146752
2  -32400.614746  -32898.761475  14215.043088 -32400.614746    0.049072 -32898.761475        0.0  498.146729      398.146752
3  -32400.614746  -32798.761498  14215.043088 -32400.614746  494.195801 -32798.761498        0.0  398.146752      298.146752
4  -32400.614746  -32598.761498  14215.043088 -32400.614746  398.097900 -32598.761498        0.0  198.146752      198.146752
5  -32198.712548  -32598.761475  14215.043088 -32198.712548  400.048950 -32598.761475        0.0  400.048926      300.048950
6  -32198.712548  -32484.761498  14215.043088 -32198.712548  351.024475 -32484.761498        0.0  286.048950      200.048950
7  -32151.249261  -32311.834344  14215.043088 -32151.249261  333.512238 -32311.834344        0.0  160.585083      147.512238
8  -32000.614648  -32298.761475  14215.043088 -32000.614648  311.219696 -32298.761475        0.0  298.146827      198.146851
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0, buffer=1225005/2048.[0m
[08/23 17:36:20]  --------------------------------------------------------------------------------
[08/23 17:36:20]  Iteration: 25 (3 solution, 21 counterexamples)
[08/23 17:36:21]  Generator returned sat in 0.903416 secs.
[08/23 17:36:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:36:21]  Improved gap from 0.0 to 23.4375
[08/23 17:36:22]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/23 17:36:22]  Verifer returned sat in 0.695036 secs.
[08/23 17:36:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -32244.156738  -32344.169189  14215.043213 -32244.156738    0.097900 -32344.169189   0.000000  100.012451        0.012451
1  -32167.606689  -32167.606689  14215.043213 -32167.606689  176.562500 -32167.606689   0.000000    0.000000      -23.437500
2  -32124.946533  -32124.946533  14271.137939 -32124.946533   42.660156 -32124.946533   0.000000    0.000000      -24.682617
3  -32100.261719  -32100.263916  14347.700439 -32100.261719   24.684814 -32100.263916   0.000000    0.002197      -23.435303
4  -31976.811279  -31976.826416  14347.700439 -31976.811279  123.452637 -31976.826416   0.002441    0.012695        0.012695
5  -31976.811279  -31976.826416  14423.848145 -31976.811279    0.010000 -31976.826416   0.002441    0.012695      -23.839600
6  -31901.263916  -31952.973877  14472.140381 -31901.263916   75.560059 -31952.973877   0.002441   51.707520        0.000000
7  -31877.826416  -31901.266357  14548.702881 -31877.826416   75.145020 -31901.266357   0.002441   23.437500        0.000000
8  -31861.983887  -31877.828857  14555.734375 -31861.983887   39.280029 -31877.828857   0.002441   15.842529      -77.125977
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1, buffer=13/1024.[0m
[08/23 17:36:22]  --------------------------------------------------------------------------------
[08/23 17:36:22]  Iteration: 26 (3 solution, 22 counterexamples)
[08/23 17:36:24]  Generator returned sat in 1.548074 secs.
[08/23 17:36:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:36:24]  Improved gap from 0.000625 to 0
[08/23 17:36:25]  Improved number of small numbers from 61 to 81 out of a max of 101
[08/23 17:36:25]  Verifer returned sat in 1.004199 secs.
[08/23 17:36:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t
0  -31903.284912  -31904.279357  13874.159424 -31903.284912  0.097900 -31904.279357        0.0  0.994445        0.000488
1  -31903.284912  -31903.285400  13973.152588 -31903.284912  0.000500 -31903.285400        0.0  0.000488       -1.006348
2  -31902.278076  -31902.278564  14073.152100 -31902.278076  1.007324 -31902.278564        0.0  0.000488        0.000000
3  -31902.277588  -31902.277857  14173.151367 -31902.277588  0.000977 -31902.277857        0.0  0.000270       -0.000244
4  -31901.276357  -31902.275635  14272.150381 -31901.276357  1.001500 -31902.275635        0.0  0.999277        0.000000
5  -31901.276357  -31901.276357  14372.149658 -31901.276357  0.010000 -31901.276357        0.0  0.000000       -0.000723
6  -31901.266357  -31901.266857  14472.140381 -31901.266357  0.010000 -31901.266857        0.0  0.000500        0.000000
7  -31901.255857  -31901.266357  14572.129881 -31901.255857  0.011000 -31901.266357        0.0  0.010500        0.000000
8  -31901.255857  -31901.255857  14572.129883 -31901.255857  0.010000 -31901.255857        0.0  0.000000      -99.999998
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=1/1024.[0m
[08/23 17:36:25]  --------------------------------------------------------------------------------
[08/23 17:36:25]  Iteration: 27 (3 solution, 23 counterexamples)
[08/23 17:36:26]  Generator returned sat in 0.451484 secs.
[08/23 17:36:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:36:26]  Improved gap from 0.0 to 0
[08/23 17:36:26]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/23 17:36:26]  Verifer returned sat in 0.389192 secs.
[08/23 17:36:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -32102.195312  -32202.244141  13973.152344 -32102.195312    0.097656 -32202.244141        0.0  100.048828        0.048828
1  -32102.195312  -32102.244141  13973.152344 -32102.195312    0.024414 -32102.244141        0.0    0.048828      -99.951172
2  -31800.744385  -31902.244141  13973.152344 -31800.744385  301.499756 -31902.244141        0.0  101.499756      101.499756
3  -31700.744385  -31802.244385  13973.152344 -31700.744385  201.499756 -31802.244385        0.0  101.500000      101.499756
4  -31700.744385  -31702.244141  13973.152344 -31700.744385    1.500000 -31702.244141        0.0    1.499756        1.499756
5  -31700.744141  -31700.769043  14070.201660 -31700.744141    1.500000 -31700.769043        0.0    0.024902       -1.450684
6  -31699.269043  -31699.293213  14168.726074 -31699.269043    1.500000 -31699.293213        0.0    0.024170       -1.451172
7  -31697.793213  -31697.817871  14268.701416 -31697.793213    1.500000 -31697.817871        0.0    0.024658        0.000000
8  -31696.317871  -31697.793213  14367.225830 -31696.317871    1.500000 -31697.793213        0.0    1.475342       -0.000244
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0, buffer=415845/4096.[0m
[08/23 17:36:27]  --------------------------------------------------------------------------------
[08/23 17:36:27]  Iteration: 28 (3 solution, 24 counterexamples)
[08/23 17:36:28]  Generator returned sat in 1.067896 secs.
[08/23 17:36:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:28]  Verifer returned unsat in 0.154845 secs.
[08/23 17:36:28]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:28]  --------------------------------------------------------------------------------
[08/23 17:36:28]  Iteration: 29 (4 solution, 24 counterexamples)
[08/23 17:36:29]  Generator returned sat in 0.060573 secs.
[08/23 17:36:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:29]  Verifer returned unsat in 0.112406 secs.
[08/23 17:36:29]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:29]  --------------------------------------------------------------------------------
[08/23 17:36:29]  Iteration: 30 (5 solution, 24 counterexamples)
[08/23 17:36:29]  Generator returned sat in 0.062343 secs.
[08/23 17:36:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:29]  Verifer returned unsat in 0.125667 secs.
[08/23 17:36:29]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:29]  --------------------------------------------------------------------------------
[08/23 17:36:29]  Iteration: 31 (6 solution, 24 counterexamples)
[08/23 17:36:30]  Generator returned sat in 0.057485 secs.
[08/23 17:36:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:30]  Verifer returned unsat in 0.103296 secs.
[08/23 17:36:30]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:30]  --------------------------------------------------------------------------------
[08/23 17:36:30]  Iteration: 32 (7 solution, 24 counterexamples)
[08/23 17:36:30]  Generator returned sat in 0.070251 secs.
[08/23 17:36:30]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:31]  Verifer returned unsat in 0.153769 secs.
[08/23 17:36:31]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:31]  --------------------------------------------------------------------------------
[08/23 17:36:31]  Iteration: 33 (8 solution, 24 counterexamples)
[08/23 17:36:31]  Generator returned sat in 0.566501 secs.
[08/23 17:36:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:36:32]  Improved gap from 0.0244140625 to 1.5625
[08/23 17:36:32]  Improved number of small numbers from 80 to 101 out of a max of 101
[08/23 17:36:32]  Verifer returned sat in 0.245844 secs.
[08/23 17:36:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30500.294189  -30700.294189  13073.348877 -30500.294189    0.097656 -30700.294189   0.000000  200.000000      200.000000
1  -30500.294189  -30700.293945  13073.348877 -30500.294189    0.024414 -30700.293945   0.000000  199.999756      100.000000
2  -30300.269775  -30500.294189  13073.348877 -30300.269775  400.024170 -30500.294189   0.024414  200.000000      200.000000
3  -30300.269775  -30500.294189  13073.348877 -30300.269775    0.024414 -30500.294189   0.024414  200.000000      100.000000
4  -30300.269775  -30300.318604  13073.348877 -30300.269775    2.000000 -30300.318604   0.024414    0.024414        0.000000
5  -30298.294189  -30300.293945  13171.373291 -30298.294189    2.000000 -30300.293945   0.024414    1.975342        0.000000
6  -30298.269531  -30298.318604  13269.810791 -30298.269531    2.000000 -30298.318604   0.024414    0.024658       -1.537842
7  -30296.294189  -30296.755859  13368.248047 -30296.294189    2.000000 -30296.755859   0.024414    0.437256       -1.125244
8  -30294.731445  -30295.193359  13368.248291 -30294.731445    2.000000 -30295.193359   0.024414    0.437500      -99.562256
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0, buffer=200.[0m
[08/23 17:36:32]  --------------------------------------------------------------------------------
[08/23 17:36:32]  Iteration: 34 (8 solution, 25 counterexamples)
[08/23 17:36:33]  Generator returned sat in 0.183613 secs.
[08/23 17:36:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:36:33]  Improved gap from 0.981689453125 to 0
[08/23 17:36:33]  Improved number of small numbers from 100 to 101 out of a max of 101
[08/23 17:36:33]  Verifer returned sat in 0.357293 secs.
[08/23 17:36:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30401.257812  -30799.245361  13073.348633 -30401.257812    0.097656 -30799.245361   0.000000  397.987549      297.987549
1  -30401.257812  -30599.245605  13073.348633 -30401.257812    0.012207 -30599.245605   0.000000  197.987793      197.987549
2  -30201.245605  -30499.245361  13073.348633 -30201.245605  398.000000 -30499.245361   0.012207  297.987549      297.987549
3  -30201.245605  -30499.245361  13073.348633 -30201.245605    0.024414 -30499.245361   0.012207  297.987549      197.987549
4  -30201.245605  -30299.245605  13073.348633 -30201.245605    1.000000 -30299.245605   0.012207   97.987793       97.987549
5  -30201.245605  -30202.270020  13075.361084 -30201.245605    1.000000 -30202.270020   0.012207    1.012207        0.000000
6  -30201.245605  -30201.257812  13175.360840 -30201.245605    1.000000 -30201.257812   0.012207    0.000000       -0.000244
7  -30200.245605  -30201.257568  13274.361084 -30200.245605    1.000000 -30201.257568   0.012207    0.999756        0.000000
8  -30200.245361  -30200.257568  13274.361084 -30200.245361    1.000000 -30200.257568   0.012207    0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0, buffer=1220557/4096.[0m
[08/23 17:36:33]  --------------------------------------------------------------------------------
[08/23 17:36:33]  Iteration: 35 (8 solution, 26 counterexamples)
[08/23 17:36:34]  Generator returned sat in 0.156625 secs.
[08/23 17:36:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:36:34]  Improved gap from 0.0 to 0
[08/23 17:36:34]  Improved number of small numbers from 71 to 101 out of a max of 101
[08/23 17:36:34]  Verifer returned sat in 0.456066 secs.
[08/23 17:36:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30357.501709  -30457.504639  13073.848633 -30357.501709    0.097656 -30457.504639   0.000000  100.002930        0.002930
1  -30357.501709  -30357.504639  13073.848633 -30357.501709    0.012207 -30357.504639   0.000000    0.002930      -99.997070
2  -30157.495605  -30157.504883  13073.848633 -30157.495605  200.009033 -30157.504883   0.003174    0.006104        0.005859
3  -30057.492676  -30058.501709  13073.848633 -30057.492676  100.009033 -30058.501709   0.006104    1.002930        0.005859
4  -30057.492676  -30057.501953  13173.348633 -30057.492676    1.000000 -30057.501953   0.006104    0.003174       -0.494141
5  -30056.995850  -30057.004639  13273.345459 -30056.995850    0.500000 -30057.004639   0.006104    0.002686       -0.000488
6  -30056.498535  -30056.507812  13372.848633 -30056.498535    0.500000 -30056.507812   0.006104    0.003174        0.000000
7  -30056.001709  -30056.504639  13472.351807 -30056.001709    0.500000 -30056.504639   0.006104    0.496826        0.000000
8  -30055.998535  -30056.007812  13572.348389 -30055.998535    0.500000 -30056.007812   0.006104    0.003174       -0.000244
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0, buffer=3/512.[0m
[08/23 17:36:35]  --------------------------------------------------------------------------------
[08/23 17:36:35]  Iteration: 36 (8 solution, 27 counterexamples)
[08/23 17:36:35]  Generator returned sat in 0.322839 secs.
[08/23 17:36:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:36:36]  Improved gap from 0.0244140625 to 0
[08/23 17:36:36]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/23 17:36:36]  Verifer returned sat in 0.298205 secs.
[08/23 17:36:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30357.090332  -30556.687988  13173.031982 -30357.090332    0.097656 -30556.687988   0.000000  199.597656       99.597656
1  -30357.090332  -30456.687988  13173.434326 -30357.090332    0.048828 -30456.687988   0.000000   99.597656        0.000000
2  -30357.090332  -30357.090332  13173.434326 -30357.090332    0.048828 -30357.090332   0.000000    0.000000     -100.000000
3  -30057.443848  -30157.090332  13173.434326 -30057.443848  299.646484 -30157.090332   0.048828   99.597656       99.597656
4  -30057.443848  -30057.541504  13173.434326 -30057.443848    2.000000 -30057.541504   0.048828    0.048828       -0.402344
5  -30056.992676  -30057.090332  13273.385498 -30056.992676    0.500000 -30057.090332   0.048828    0.048828        0.000000
6  -30056.541504  -30057.041504  13372.934326 -30056.541504    0.500000 -30057.041504   0.048828    0.451172        0.000000
7  -30056.492676  -30056.590332  13472.434326 -30056.492676    0.500000 -30056.590332   0.048828    0.048828       -0.451172
8  -30056.041504  -30056.090332  13572.385498 -30056.041504    0.500000 -30056.090332   0.048828    0.000000       -0.048828
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=25497/256.[0m
[08/23 17:36:36]  --------------------------------------------------------------------------------
[08/23 17:36:36]  Iteration: 37 (8 solution, 28 counterexamples)
[08/23 17:36:37]  Generator returned sat in 0.956045 secs.
[08/23 17:36:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:36:38]  Improved gap from 0.00125 to 100
[08/23 17:36:38]  Improved number of small numbers from 74 to 101 out of a max of 101
[08/23 17:36:38]  Verifer returned sat in 0.513404 secs.
[08/23 17:36:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30953.072998  -30953.072998  13173.031494 -30953.072998    0.097656 -30953.072998   0.000000    0.000000      -96.979980
1  -30856.090576  -30856.093018  13173.031494 -30856.090576   96.982422 -30856.093018   0.000000    0.002441      -99.997559
2  -30356.087891  -30755.115723  13173.031494 -30356.087891  500.005127 -30755.115723   0.002441  399.025391      300.002686
3  -30256.090576  -30655.095703  13173.031494 -30256.090576  499.022705 -30655.095703   0.002441  399.002686      300.000000
4  -30256.090576  -30456.093018  13173.031494 -30256.090576  399.000000 -30456.093018   0.002441  200.000000      200.000000
5  -30056.090576  -30356.100586  13173.031494 -30056.090576  400.000000 -30356.100586   0.002441  300.007568      300.000000
6  -29956.090576  -30256.093018  13173.031494 -29956.090576  400.007568 -30256.093018   0.002441  300.000000      300.000000
7  -29856.085449  -30256.093018  13173.031494 -29856.085449  400.005127 -30256.093018   0.004883  400.002686      300.002686
8  -29856.085449  -30156.093018  13173.031494 -29856.085449    0.010000 -30156.093018   0.004883  300.002686      200.002686
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1, buffer=1228811/4096.[0m
[08/23 17:36:38]  --------------------------------------------------------------------------------
[08/23 17:36:38]  Iteration: 38 (8 solution, 29 counterexamples)
[08/23 17:36:42]  Generator returned sat in 2.967585 secs.
[08/23 17:36:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:36:42]  Improved gap from 0.0 to 0
[08/23 17:36:42]  Improved number of small numbers from 91 to 101 out of a max of 101
[08/23 17:36:42]  Verifer returned sat in 0.245546 secs.
[08/23 17:36:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30855.071533  -31055.071289  13271.524414 -30855.071533    0.097656 -31055.071289        0.0  199.999756       99.999756
1  -30855.071533  -30855.071533  13271.524414 -30855.071533    0.024414 -30855.071533        0.0    0.000000       -0.000244
2  -30555.522705  -30755.071533  13271.524414 -30555.522705  299.548828 -30755.071533        0.0  199.548828      199.548584
3  -30555.522705  -30755.071289  13271.524414 -30555.522705    0.024414 -30755.071289        0.0  199.548584       99.548584
4  -30555.522705  -30555.546875  13271.524414 -30555.522705    0.500000 -30555.546875        0.0    0.024170       -0.451416
5  -30555.046875  -30555.071289  13371.499756 -30555.046875    0.500000 -30555.071289        0.0    0.024414       -0.000244
6  -30554.571289  -30554.595703  13471.024414 -30554.571289    0.500000 -30554.595703        0.0    0.024414        0.000000
7  -30554.095703  -30554.571289  13570.524414 -30554.095703    0.500000 -30554.571289        0.0    0.475586       -0.024414
8  -30554.071289  -30554.071289  13670.524170 -30554.071289    0.500000 -30554.071289        0.0    0.000000       -0.000244
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0, buffer=612939/1024.[0m
[08/23 17:36:42]  --------------------------------------------------------------------------------
[08/23 17:36:42]  Iteration: 39 (8 solution, 30 counterexamples)
[08/23 17:36:45]  Generator returned sat in 2.424773 secs.
[08/23 17:36:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/23 17:36:46]  Improved gap from 0.0 to 7.8125
[08/23 17:36:46]  Improved number of small numbers from 55 to 101 out of a max of 101
[08/23 17:36:46]  Verifer returned sat in 1.246528 secs.
[08/23 17:36:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30703.250244  -30703.299072  13995.688721 -30703.250244    0.097656 -30703.299072        0.0    0.048828      -99.950928
1  -30503.347900  -30503.348145  13995.688721 -30503.347900  199.951172 -30503.348145        0.0    0.000244       -0.048584
2  -30503.299316  -30503.299316  13995.688965 -30503.299316    0.048828 -30503.299316        0.0    0.000000      -99.999756
3  -30208.299316  -30315.000488  13995.688965 -30208.299316  295.000000 -30315.000488        0.0  106.701172       95.000244
4  -30169.000488  -30252.326416  13995.688965 -30169.000488  146.000000 -30252.326416        0.0   83.325928       34.299072
5  -30169.000488  -30203.299072  14061.389893 -30169.000488   71.500000 -30203.299072        0.0   34.298584        0.000000
6  -30169.000488  -30169.000488  14153.577393 -30169.000488   34.250000 -30169.000488        0.0    0.000000       -7.812500
7  -30153.375488  -30161.187988  14245.764893 -30153.375488   15.625000 -30161.187988        0.0    7.812500        0.000000
8  -30153.375488  -30153.375488  14245.764893 -30153.375488    6.312500 -30153.375488        0.0    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=48665/512.[0m
[08/23 17:36:47]  --------------------------------------------------------------------------------
[08/23 17:36:47]  Iteration: 40 (8 solution, 31 counterexamples)
[08/23 17:36:48]  Generator returned sat in 1.026295 secs.
[08/23 17:36:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/23 17:36:49]  Improved gap from 0.0 to 100
[08/23 17:36:50]  Improved number of small numbers from 58 to 101 out of a max of 101
[08/23 17:36:50]  Verifer returned sat in 1.482717 secs.
[08/23 17:36:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -31729.707764  -31929.756592  15222.145996 -31729.707764    0.097412 -31929.756592        0.0  200.048828      100.048828
1  -31729.707764  -31829.756592  15222.145996 -31729.707764    0.048828 -31829.756592        0.0  100.048828        0.048828
2  -31729.707764  -31729.756592  15222.145996 -31729.707764    0.048584 -31729.756592        0.0    0.048828      -99.951172
3  -31209.365967  -31628.756592  15222.145996 -31209.365967  520.390625 -31628.756592        0.0  419.390625      320.390625
4  -31209.365967  -31429.756592  15222.145996 -31209.365967  409.195312 -31429.756592        0.0  220.390625      220.390625
5  -31026.658936  -31329.756592  15222.145996 -31026.658936  403.097656 -31329.756592        0.0  303.097656      303.097656
6  -30929.707764  -31329.756592  15222.145996 -30929.707764  400.048828 -31329.756592        0.0  400.048828      300.048828
7  -30929.707764  -31129.756592  15222.145996 -30929.707764  348.024414 -31129.756592        0.0  200.048828      200.048828
8  -30807.244385  -31129.756592  15222.145996 -30807.244385  322.512207 -31129.756592        0.0  322.512207      222.512207
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0, buffer=1312519/4096.[0m
[08/23 17:36:50]  --------------------------------------------------------------------------------
[08/23 17:36:50]  Iteration: 41 (8 solution, 32 counterexamples)
[08/23 17:36:52]  Generator returned sat in 1.476548 secs.
[08/23 17:36:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:52]  Verifer returned unsat in 0.196801 secs.
[08/23 17:36:52]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:36:52]  --------------------------------------------------------------------------------
[08/23 17:36:52]  Iteration: 42 (9 solution, 32 counterexamples)
[08/23 17:36:53]  Generator returned sat in 0.245552 secs.
[08/23 17:36:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 17:36:54]  Improved gap from 0.0 to 1.5625
[08/23 17:36:54]  Improved number of small numbers from 56 to 101 out of a max of 101
[08/23 17:36:54]  Verifer returned sat in 0.830853 secs.
[08/23 17:36:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t
0  -31563.358887  -31566.282471  14632.833496 -31563.358887  0.097168 -31566.282471        0.0  2.923584        0.048584
1  -31563.358887  -31563.407471  14731.270996 -31563.358887  0.024414 -31563.407471        0.0  0.048584       -1.513916
2  -31561.820557  -31561.844971  14829.708496 -31561.820557  1.586914 -31561.844971        0.0  0.024414       -1.538086
3  -31560.258301  -31560.282471  14928.145996 -31560.258301  1.586670 -31560.282471        0.0  0.024170       -1.538330
4  -31556.282471  -31558.719971  15025.708496 -31556.282471  4.000000 -31558.719971        0.0  2.437500        0.000000
5  -31556.032471  -31556.282471  15124.145996 -31556.032471  2.687500 -31556.282471        0.0  0.250000       -1.312500
6  -31552.719971  -31554.719971  15222.145996 -31552.719971  3.562500 -31554.719971        0.0  2.000000        0.000000
7  -31551.157471  -31552.719971  15320.583496 -31551.157471  3.562500 -31552.719971        0.0  1.562500        0.000000
8  -31548.719971  -31551.157471  15320.583496 -31548.719971  4.000000 -31551.157471        0.0  2.437500      -97.562500
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0, buffer=199/4096.[0m
[08/23 17:36:54]  --------------------------------------------------------------------------------
[08/23 17:36:54]  Iteration: 43 (9 solution, 33 counterexamples)
[08/23 17:36:55]  Generator returned sat in 0.939183 secs.
[08/23 17:36:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:36:56]  Improved gap from 0.00604248046875 to 23.4375
[08/23 17:36:56]  Improved number of small numbers from 58 to 101 out of a max of 101
[08/23 17:36:56]  Verifer returned sat in 0.663583 secs.
[08/23 17:36:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30397.011475  -30497.012451  14789.778564 -30397.011475    0.096924 -30497.012451   0.000000  100.000977        0.001221
1  -30397.011475  -30397.012695  14789.778564 -30397.011475    0.001465 -30397.012695   0.000000    0.001221      -99.998779
2  -30254.360107  -30277.797607  14847.125977 -30254.360107  142.652588 -30277.797607   0.000000   23.437500        0.000000
3  -30230.692627  -30254.130127  14923.458496 -30230.692627   47.104980 -30254.130127   0.000000   23.437500        0.000000
4  -30130.688965  -30130.701172  14923.458496 -30130.688965  123.441162 -30130.701172   0.001221    0.010986        0.002441
5  -30130.688965  -30130.692627  15000.020996 -30130.688965    0.010000 -30130.692627   0.001221    0.002441      -23.435059
6  -30055.138916  -30107.255127  15047.906006 -30055.138916   75.552490 -30107.255127   0.001221   52.114990        0.000000
7  -30031.816406  -30055.140137  15124.468506 -30031.816406   75.437500 -30055.140137   0.001221   23.322510       -0.114990
8  -30015.358398  -30031.702393  15124.468506 -30015.358398   39.780518 -30031.702393   0.001221   16.342773      -83.656982
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1, buffer=5/2048.[0m
[08/23 17:36:56]  --------------------------------------------------------------------------------
[08/23 17:36:56]  Iteration: 44 (9 solution, 34 counterexamples)
[08/23 17:36:59]  Generator returned sat in 1.581862 secs.
[08/23 17:36:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 17:36:59]  Improved gap from 0.0 to 100
[08/23 17:37:00]  Improved number of small numbers from 42 to 56 out of a max of 101
[08/23 17:37:00]  Verifer returned sat in 1.201339 secs.
[08/23 17:37:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -29984.323975  -30184.323792  14477.089661 -29984.323975    0.096680 -30184.323792        0.0  199.999817       99.999817
1  -29984.323975  -30084.323792  14477.089661 -29984.323975    0.048340 -30084.323792        0.0   99.999817       -0.000183
2  -29476.129944  -29984.323730  14477.089661 -29476.129944  608.193848 -29984.323730        0.0  508.193787      408.193848
3  -29476.129944  -29880.275330  14477.089661 -29476.129944  508.145386 -29880.275330        0.0  404.145386      308.193848
4  -29476.129944  -29684.323792  14477.089661 -29476.129944  404.096924 -29684.323792        0.0  208.193848      208.193848
5  -29284.275330  -29684.323730  14477.089661 -29284.275330  400.048462 -29684.323730        0.0  400.048401      300.048462
6  -29284.275330  -29484.323792  14477.089661 -29284.275330  348.024231 -29484.323792        0.0  200.048462      200.048462
7  -29114.335907  -29384.323792  14477.089661 -29114.335907  369.987885 -29384.323792        0.0  269.987885      269.987885
8  -29051.329849  -29384.323730  14477.089661 -29051.329849  332.993942 -29384.323730        0.0  332.993881      232.993942
fefficient=True, bounded_queue=False, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0, buffer=1672161/4096.[0m
[08/23 17:37:00]  --------------------------------------------------------------------------------
[08/23 17:37:00]  Iteration: 45 (9 solution, 35 counterexamples)
[08/23 17:37:01]  Generator returned sat in 0.553456 secs.
[08/23 17:37:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 17:37:02]  Improved gap from 0.0 to 25.0
[08/23 17:37:02]  Improved number of small numbers from 56 to 101 out of a max of 101
[08/23 17:37:02]  Verifer returned sat in 1.153938 secs.
[08/23 17:37:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -29326.312744  -29426.323730  13719.089600 -29326.312744    0.096436 -29426.323730   0.000000  100.010986        0.011230
1  -29326.312744  -29326.313721  13765.064453 -29326.312744    0.001465 -29326.313721   0.000000    0.000977      -54.013916
2  -29172.298584  -29172.298828  13765.064453 -29172.298584  154.015137 -29172.298828   0.000000    0.000244        0.000244
3  -29172.297607  -29172.298828  13840.064453 -29172.297607    0.001221 -29172.298828   0.000000    0.001221      -24.998779
4  -29047.286377  -29047.298828  13840.064453 -29047.286377  125.012451 -29047.298828   0.001221    0.011230        0.011230
5  -29047.286377  -29047.298828  13915.064453 -29047.286377    0.010000 -29047.298828   0.001221    0.011230      -24.988770
6  -28986.797607  -29022.298828  13973.398682 -28986.797607   60.500000 -29022.298828   0.001221   35.500000       -6.165771
7  -28949.297607  -28980.632812  14042.064453 -28949.297607   73.000000 -28980.632812   0.001221   31.333984        0.000000
8  -28949.297607  -28949.298828  14042.064453 -28949.297607   31.333008 -28949.298828   0.001221    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1, buffer=23/2048.[0m
[08/23 17:37:03]  --------------------------------------------------------------------------------
[08/23 17:37:03]  Iteration: 46 (9 solution, 36 counterexamples)
[08/23 17:37:04]  Generator returned sat in 0.620168 secs.
[08/23 17:37:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:37:04]  Improved gap from 24.0 to 23.4375
[08/23 17:37:05]  Improved number of small numbers from 58 to 69 out of a max of 101
[08/23 17:37:05]  Verifer returned sat in 1.243227 secs.
[08/23 17:37:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -28801.231934  -28869.584661  13194.000488 -28801.231934    0.096436 -28869.584661        0.0  68.352728        0.002930
1  -28801.231934  -28801.234619  13200.250286 -28801.231934    0.002500 -28801.234619        0.0   0.002686      -93.747272
2  -28607.481934  -28607.484661  13200.250286 -28607.481934  193.752686 -28607.484661        0.0   0.002728        0.002728
3  -28586.324661  -28607.484661  13276.812786 -28586.324661   21.160000 -28607.484661        0.0  21.160000       -2.277500
4  -28476.934661  -28484.047161  13276.812786 -28476.934661  130.550000 -28484.047161        7.1   0.012500        0.012500
5  -28476.934661  -28484.047161  13353.375244 -28476.934661    0.010000 -28484.047161        7.1   0.012500      -23.425042
6  -28415.728411  -28458.861328  13415.594036 -28415.728411   61.218750 -28458.861328        7.1  36.032917        0.000000
7  -28377.949661  -28422.828411  13477.815286 -28377.949661   73.811667 -28422.828411        7.1  37.778750        0.000000
8  -28377.949661  -28385.049661  13477.815430 -28377.949661   30.109375 -28385.049661        7.1   0.000000      -99.999857
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1, buffer=1/80.[0m
[08/23 17:37:05]  --------------------------------------------------------------------------------
[08/23 17:37:05]  Iteration: 47 (9 solution, 37 counterexamples)
[08/23 17:37:06]  Generator returned sat in 0.415189 secs.
[08/23 17:37:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:37:07]  Improved gap from 22.9375 to 23.4375
[08/23 17:37:08]  Improved number of small numbers from 56 to 67 out of a max of 101
[08/23 17:37:08]  Verifer returned sat in 1.264441 secs.
[08/23 17:37:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28866.280029  -28966.292363  12688.768066 -28866.280029    0.096191 -28966.292363     0.0000  100.012334        0.012412
1  -28866.280029  -28866.282227  12739.862988 -28866.280029    0.002686 -28866.282227     0.0000    0.002197      -48.892666
2  -28717.377197  -28717.387363  12739.862988 -28717.377197  148.905029 -28717.387363     0.0000    0.010166        0.010166
3  -28693.949863  -28717.387363  12816.425488 -28693.949863   23.437500 -28717.387363     0.0000   23.437500        0.000000
4  -28593.934863  -28593.949863  12816.425488 -28593.934863  123.452500 -28593.949863     0.0025    0.012500        0.012500
5  -28593.934863  -28593.949863  12892.987793 -28593.934863    0.010000 -28593.949863     0.0025    0.012500      -23.425195
6  -28533.228613  -28568.430697  12955.706738 -28533.228613   60.718750 -28568.430697     0.0025   35.199583        0.000000
7  -28494.949863  -28533.231113  13017.427988 -28494.949863   73.478333 -28533.231113     0.0025   38.278750        0.000000
8  -28494.949863  -28494.952363  13093.990479 -28494.949863   29.359375 -28494.952363     0.0025    0.000000      -23.437510
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1, buffer=1/80.[0m
[08/23 17:37:08]  --------------------------------------------------------------------------------
[08/23 17:37:08]  Iteration: 48 (9 solution, 38 counterexamples)
[08/23 17:37:10]  Generator returned sat in 1.463939 secs.
[08/23 17:37:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:37:11]  Improved gap from 0.0 to 7.8125
[08/23 17:37:11]  Improved number of small numbers from 32 to 101 out of a max of 101
[08/23 17:37:11]  Verifer returned sat in 1.211839 secs.
[08/23 17:37:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -28367.434082  -28367.482178  12189.934082 -28367.434082    0.095947 -28367.482178    0.00000    0.048096        0.024414
1  -28367.434082  -28367.458496  12189.934082 -28367.434082    0.024170 -28367.458496    0.00000    0.024414      -99.975586
2  -28087.410400  -28267.458252  12189.934082 -28087.410400  280.048096 -28267.458252    0.02417  180.023682       80.023926
3  -27987.434082  -28167.458252  12189.934082 -27987.434082  280.000000 -28167.458252    0.02417  180.000000       80.000244
4  -27987.434082  -28002.684326  12189.934082 -27987.434082  139.000000 -28002.684326    0.02417   15.226074      -19.999756
5  -27934.160156  -27967.458252  12256.659912 -27934.160156   68.500000 -27967.458252    0.02417   33.273926        0.000000
6  -27934.160156  -27934.184326  12348.847412 -27934.160156   33.250000 -27934.184326    0.02417    0.000000       -7.812500
7  -27918.535156  -27926.371826  12441.034912 -27918.535156   15.625000 -27926.371826    0.02417    7.812500        0.000000
8  -27918.535156  -27918.559326  12441.034912 -27918.535156    6.812500 -27918.559326    0.02417    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=163889/2048.[0m
[08/23 17:37:12]  --------------------------------------------------------------------------------
[08/23 17:37:12]  Iteration: 49 (9 solution, 39 counterexamples)
[08/23 17:37:14]  Generator returned sat in 1.905024 secs.
[08/23 17:37:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:37:15]  Improved gap from 0.0 to 23.4375
[08/23 17:37:15]  Improved number of small numbers from 47 to 101 out of a max of 101
[08/23 17:37:15]  Verifer returned sat in 0.747673 secs.
[08/23 17:37:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -28426.265869  -28525.303467  12248.741455 -28426.265869    0.095703 -28525.303467   0.000000  99.037598        0.000000
1  -28426.217773  -28426.265625  12325.303711 -28426.217773   99.085693 -28426.265625   0.000000   0.047852      -23.389648
2  -28302.780273  -28302.828369  12325.303711 -28302.780273  123.485352 -28302.828369   0.000000   0.048096        0.047852
3  -28255.953369  -28279.390869  12378.428955 -28255.953369   46.875000 -28279.390869   0.000000  23.437500        0.000000
4  -28155.434570  -28157.030518  12378.428955 -28155.434570  123.956299 -28157.030518   0.047852   1.548096        0.470947
5  -28155.434570  -28155.953369  12454.991455 -28155.434570    1.500000 -28155.953369   0.047852   0.470947      -22.966553
6  -28081.468018  -28132.515869  12503.991455 -28081.468018   74.437500 -28132.515869   0.047852  51.000000        0.000000
7  -28058.030518  -28081.515869  12580.553711 -28058.030518   74.437500 -28081.515869   0.047852  23.437500       -0.000244
8  -28042.710693  -28058.078125  12580.553955 -28042.710693   38.757324 -28058.078125   0.047852  15.319580      -84.680176
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1, buffer=1929/4096.[0m
[08/23 17:37:15]  --------------------------------------------------------------------------------
[08/23 17:37:15]  Iteration: 50 (9 solution, 40 counterexamples)
[08/23 17:37:18]  Generator returned sat in 2.525725 secs.
[08/23 17:37:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:19]  Improved gap from 0.0 to 23.4375
[08/23 17:37:19]  Improved number of small numbers from 60 to 101 out of a max of 101
[08/23 17:37:19]  Verifer returned sat in 0.739694 secs.
[08/23 17:37:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -27811.664307  -27911.666748  11634.142334 -27811.664307    0.095703 -27911.666748   0.000000  100.002441        0.002441
1  -27735.102783  -27735.104492  11634.142578 -27735.102783  176.563965 -27735.104492   0.000000    0.001709      -23.435791
2  -27664.784424  -27688.221924  11687.260010 -27664.784424   70.320068 -27688.221924   0.000000   23.437500        0.000000
3  -27664.782959  -27664.784424  11763.822510 -27664.782959   23.438965 -27664.784424   0.000000    0.001465      -23.436035
4  -27541.343262  -27541.355469  11763.822510 -27541.343262  123.441162 -27541.355469   0.001221    0.010986        0.002441
5  -27541.343262  -27541.346924  11840.385010 -27541.343262    0.010000 -27541.346924   0.001221    0.002441      -23.435059
6  -27467.908203  -27517.909424  11890.384766 -27467.908203   73.437500 -27517.909424   0.001221   50.000000       -0.000244
7  -27444.470703  -27467.909180  11966.947266 -27444.470703   73.437500 -27467.909180   0.001221   23.437256       -0.000244
8  -27431.184814  -27444.471680  11966.947266 -27431.184814   36.723145 -27444.471680   0.001221   13.285645      -86.714355
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1, buffer=5/2048.[0m
[08/23 17:37:19]  --------------------------------------------------------------------------------
[08/23 17:37:19]  Iteration: 51 (9 solution, 41 counterexamples)
[08/23 17:37:21]  Generator returned sat in 1.280189 secs.
[08/23 17:37:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:37:22]  Improved gap from 0.0004931640625 to 9.375
[08/23 17:37:22]  Improved number of small numbers from 96 to 97 out of a max of 101
[08/23 17:37:22]  Verifer returned sat in 1.036043 secs.
[08/23 17:37:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30125.496582  -30125.544434  11671.459229 -30125.496582    0.095459 -30125.544434        0.0    0.047852      -99.952148
1  -30025.496582  -30025.544434  11762.083984 -30025.496582  100.047852 -30025.544434        0.0    0.047852       -9.327393
2  -29917.312988  -29917.360840  11762.083984 -29917.312988  108.231445 -29917.360840        0.0    0.047852       -1.143799
3  -29648.169434  -29916.169189  11762.083984 -29648.169434  269.191406 -29916.169189        0.0  267.999756      167.999756
4  -29648.169434  -29716.169189  11762.083984 -29648.169434  135.095703 -29716.169189        0.0   67.999756       67.999756
5  -29648.121338  -29716.169189  11794.036133 -29648.121338   68.047852 -29716.169189        0.0   68.047852        0.000000
6  -29648.121338  -29648.121338  11884.661133 -29648.121338   34.523926 -29648.121338        0.0    0.000000       -9.375000
7  -29630.359375  -29630.407227  11966.947021 -29630.359375   17.761963 -29630.407227        0.0    0.047852       -9.327148
8  -29621.026245  -29621.032227  11966.947266 -29621.026245    9.380981 -29621.032227        0.0    0.005981      -99.993774
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=172081/1024.[0m
[08/23 17:37:23]  --------------------------------------------------------------------------------
[08/23 17:37:23]  Iteration: 52 (9 solution, 42 counterexamples)
[08/23 17:37:25]  Generator returned sat in 1.980635 secs.
[08/23 17:37:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:37:26]  Improved gap from 0.0 to 10.9375
[08/23 17:37:26]  Improved number of small numbers from 78 to 101 out of a max of 101
[08/23 17:37:26]  Verifer returned sat in 0.743576 secs.
[08/23 17:37:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -30025.496826  -30038.044434  11671.459229 -30025.496826    0.095459 -30038.044434        0.0   12.547607       12.547607
1  -30025.496582  -30038.044434  11677.709229 -30025.496582   12.547852 -30038.044434        0.0   12.547852      -81.202148
2  -29609.496826  -29866.544434  11677.709229 -29609.496826  428.547607 -29866.544434        0.0  257.047607      234.797607
3  -29609.496826  -29744.294434  11677.709229 -29609.496826  257.000000 -29744.294434        0.0  134.797607      134.797607
4  -29609.496826  -29678.684082  11677.709229 -29609.496826  130.000000 -29678.684082        0.0   69.187256       34.797607
5  -29609.496826  -29644.294189  11742.911621 -29609.496826   66.500000 -29644.294189        0.0   34.797363        0.000000
6  -29609.496826  -29609.496826  11824.084229 -29609.496826   34.750000 -29609.496826        0.0    0.000000      -18.827393
7  -29590.621826  -29590.669189  11913.146484 -29590.621826   18.875000 -29590.669189        0.0    0.047363      -10.890137
8  -29579.731689  -29579.731689  11913.146484 -29579.731689   10.937500 -29579.731689        0.0    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=480963/2048.[0m
[08/23 17:37:26]  --------------------------------------------------------------------------------
[08/23 17:37:26]  Iteration: 53 (9 solution, 43 counterexamples)
[08/23 17:37:28]  Generator returned sat in 1.071892 secs.
[08/23 17:37:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:37:29]  Improved gap from 1.6011962890625 to 9.375
[08/23 17:37:29]  Improved number of small numbers from 54 to 101 out of a max of 101
[08/23 17:37:29]  Verifer returned sat in 1.171549 secs.
[08/23 17:37:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -31717.917236  -31717.917236  11787.911621 -31717.917236    0.095459 -31717.917236        0.0    0.000000        0.000000
1  -31402.869385  -31717.917236  11787.911621 -31402.869385  315.047852 -31717.917236        0.0  315.047852      215.047852
2  -31302.869385  -31617.917236  11787.911621 -31302.869385  415.047852 -31617.917236        0.0  315.047852      215.047852
3  -31302.869385  -31517.916992  11787.911621 -31302.869385  315.000000 -31517.916992        0.0  215.047607      115.047852
4  -31302.869385  -31359.666992  11787.911621 -31302.869385  157.000000 -31359.666992        0.0   56.797607       15.047852
5  -31281.666992  -31317.917236  11849.459229 -31281.666992   78.000000 -31317.917236        0.0   36.250244       -2.202148
6  -31279.417236  -31279.464844  11940.084229 -31279.417236   38.500000 -31279.464844        0.0    0.047607       -9.327393
7  -31260.714844  -31270.089844  12030.709229 -31260.714844   18.750000 -31270.089844        0.0    9.375000        0.000000
8  -31260.714844  -31260.714844  12121.333984 -31260.714844    8.875000 -31260.714844        0.0    0.000000       -9.375244
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=440515/2048.[0m
[08/23 17:37:30]  --------------------------------------------------------------------------------
[08/23 17:37:30]  Iteration: 54 (9 solution, 44 counterexamples)
[08/23 17:37:32]  Generator returned sat in 1.368753 secs.
[08/23 17:37:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:37:33]  Improved gap from 6.85107421875 to 10.9375
[08/23 17:37:34]  Improved number of small numbers from 43 to 75 out of a max of 101
[08/23 17:37:34]  Verifer returned sat in 1.907214 secs.
[08/23 17:37:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -36555.276123  -36655.323730  16625.318359 -36555.276123    0.095215 -36655.323730        0.0  100.047607        0.047852
1  -36555.276123  -36555.323975  16625.318359 -36555.276123    0.047852 -36555.323975        0.0    0.047852      -99.952148
2  -36152.967285  -36455.323730  16625.318359 -36152.967285  402.356689 -36455.323730        0.0  302.356445      202.356689
3  -36152.967285  -36305.073730  16625.318359 -36152.967285  302.309082 -36305.073730        0.0  152.106445      102.356689
4  -36152.919189  -36203.800002  16625.318359 -36152.919189  152.154541 -36203.800002        0.0   50.880812        2.404785
5  -36126.722731  -36155.323867  16696.717116 -36126.722731   77.077271 -36155.323867        0.0   28.601135        0.000000
6  -36115.785231  -36126.722731  16785.779616 -36115.785231   39.538635 -36126.722731        0.0   10.937500        0.000000
7  -36105.953414  -36115.785231  16874.842041 -36105.953414   20.769318 -36115.785231        0.0    9.831818       -1.105758
8  -36104.400573  -36104.847656  16874.842285 -36104.400573   11.384659 -36104.847656        0.0    0.447084      -99.552672
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0, buffer=829049/4096.[0m
[08/23 17:37:34]  --------------------------------------------------------------------------------
[08/23 17:37:34]  Iteration: 55 (9 solution, 45 counterexamples)
[08/23 17:37:35]  Generator returned unsat in 0.512008 secs.
[08/23 17:37:35]  [96mNo more solutions found[0m
[08/23 17:37:35]  Final solutions:
[08/23 17:37:35]  0: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  1: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  2: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  3: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  4: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  5: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  6: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  7: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  8: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:37:35]  Took 108.146289 secs.
