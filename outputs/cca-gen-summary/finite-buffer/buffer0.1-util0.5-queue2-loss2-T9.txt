[08/23 17:19:07]  --------------------------------------------------------------------------------
[08/23 17:19:07]  Iteration: 1 (0 solution, 0 counterexamples)
[08/23 17:19:07]  Generator returned sat in 0.004251 secs.
[08/23 17:19:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:19:07]  Improved gap from 0.1 to 100
[08/23 17:19:07]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:19:07]  Verifer returned sat in 0.346847 secs.
[08/23 17:19:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t   cwnd_0,t  service_0,t   losts_0,t  queue_t  bottle_queue_t
0      -199.9000         -200.1     200.1    -199.9000     0.1000       -200.1      0.0000      0.2             0.2
1      -199.9000         -200.1     200.1    -199.9000     0.1000       -200.1      0.0000      0.2           -99.8
2        -0.1000         -100.1     200.1      -0.1000   200.0000       -100.1      0.0000    100.0             0.0
3        -0.1000           -0.1     200.1      -0.1000     0.1000         -0.1      0.0000      0.0          -100.0
4       402.1000           99.9     200.1     402.1000   402.2000         99.9    182.2000    120.0            20.0
5      1487.4000          208.9     200.1    1487.4000  1205.3000        208.9   1167.5000    111.0            20.0
6      3804.3500          323.9     200.1    3804.3500  2427.9500        323.9   3384.4500     96.0            20.0
7      8000.2750          444.9     200.1    8000.2750  4291.9250        444.9   7480.3750     75.0            20.0
8     15055.1625          499.9     200.1   15055.1625  7129.8875        499.9  14435.2625    120.0            20.0
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=5.[0m
[08/23 17:19:08]  --------------------------------------------------------------------------------
[08/23 17:19:08]  Iteration: 2 (0 solution, 1 counterexamples)
[08/23 17:19:08]  Generator returned sat in 0.063630 secs.
[08/23 17:19:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:19:08]  Improved gap from 20.0 to 100
[08/23 17:19:08]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:19:08]  Verifer returned sat in 0.222410 secs.
[08/23 17:19:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0       986.8975      966.89750 -966.8975     986.8975    0.099854    966.89750     0.0000   20.00000         20.0000
1       986.8975      986.89500 -966.8975     986.8975   19.997500    986.89500     0.0000    0.00250        -80.0000
2      1066.9000     1066.89750 -966.8975    1066.9000   80.005000   1066.89750     0.0000    0.00250        -99.9975
3      1286.8975     1176.64875 -966.8975    1286.8975  220.000000   1176.64875     0.0000  110.24875         20.0000
4      1386.9000     1347.39500 -966.8975    1386.9000  210.251250   1347.39500     0.0025   39.50250         20.0000
5      1386.9000     1366.89750 -966.8975    1386.9000    0.010000   1366.89750     0.0025   20.00000        -80.0000
6      1667.4000     1466.89750 -966.8975    1667.4000  300.500000   1466.89750    80.5025  120.00000         20.0000
7      1667.4000     1566.89750 -966.8975    1667.4000    0.010000   1566.89750    80.5025   20.00000        -80.0000
8      1867.4025     1666.89750 -966.8975    1867.4025  220.002500   1666.89750    80.5050  120.00000         20.0000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=3.[0m
[08/23 17:19:08]  --------------------------------------------------------------------------------
[08/23 17:19:08]  Iteration: 3 (0 solution, 2 counterexamples)
[08/23 17:19:08]  Generator returned sat in 0.019803 secs.
[08/23 17:19:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:19:09]  Improved gap from 0.0025 to 35.9375
[08/23 17:19:09]  Improved number of small numbers from 32 to 100 out of a max of 100
[08/23 17:19:09]  Verifer returned sat in 0.452224 secs.
[08/23 17:19:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0     750.267822     650.268066 -1010.785156   750.267822    0.099854   650.268066   0.000000  99.999756       -0.000244
1     750.318115     750.268066 -1010.785156   750.318115  100.050049   750.268066   0.000000   0.050049      -99.949951
2     970.318115     949.718018 -1010.785156   970.318115  220.050049   949.718018   0.050049  20.550049       20.000000
3    1014.268066     950.268066  -974.735107  1014.268066   64.500000   950.268066   0.050049  63.949951        0.000000
4    1014.318115    1014.218018  -910.672607  1014.318115   64.000000  1014.218018   0.050049   0.050049      -35.887451
5    1077.768066    1050.155518  -852.810059  1077.768066   63.500000  1050.155518   0.050049  27.562500      -14.574951
6    1113.205566    1092.292969  -788.747559  1113.205566   63.000000  1092.292969   0.050049  20.862549      -15.074951
7    1154.843018    1128.230713  -724.685303  1154.843018   62.500000  1128.230713   0.050049  26.562256       -9.375244
8    1190.280762    1164.168213  -724.685059  1190.280762   62.000000  1164.168213   0.050049  26.062500      -73.937256
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:19:09]  --------------------------------------------------------------------------------
[08/23 17:19:09]  Iteration: 4 (0 solution, 3 counterexamples)
[08/23 17:19:09]  Generator returned sat in 0.015018 secs.
[08/23 17:19:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:19:09]  Improved gap from 0.0 to 0
[08/23 17:19:10]  Improved number of small numbers from 41 to 60 out of a max of 100
[08/23 17:19:10]  Verifer returned sat in 0.605735 secs.
[08/23 17:19:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     970.310547     970.258057 -1230.775146   970.310547    0.099854   970.258057   0.050049    0.002441        0.002441
1    1070.310547     970.258301 -1230.775146  1070.310547  100.002441   970.258301   0.050049  100.002197        0.002441
2    1070.310547    1070.258066 -1130.777656  1070.310547    0.002441  1070.258066   0.050049    0.002432       -0.000068
3    1190.313115    1170.260498 -1130.777656  1190.313115  120.005000  1170.260498   0.052549   20.000068       20.000000
4    1190.313115    1190.258066 -1050.777656  1190.313115    0.010000  1190.258066   0.052549    0.002500        0.000000
5    1190.320615    1190.260566  -950.785156  1190.320615    0.010000  1190.260566   0.052549    0.007500        0.000000
6    1190.323115    1190.268066  -850.792480  1190.323115    0.010000  1190.268066   0.052549    0.002500       -0.004824
7    1190.330615    1190.275566  -750.795166  1190.330615    0.010000  1190.275566   0.052549    0.002500       -0.000010
8    1190.338115    1190.278076  -750.794922  1190.338115    0.010000  1190.278076   0.052549    0.007490      -99.992266
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 17:19:10]  --------------------------------------------------------------------------------
[08/23 17:19:10]  Iteration: 5 (0 solution, 4 counterexamples)
[08/23 17:19:11]  Generator returned sat in 0.472342 secs.
[08/23 17:19:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:11]  Improved gap from 0.0025 to 100
[08/23 17:19:11]  Improved number of small numbers from 55 to 100 out of a max of 100
[08/23 17:19:11]  Verifer returned sat in 0.313202 secs.
[08/23 17:19:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0     860.313232     860.263184 -1120.780518   860.313232    0.099854   860.263184   0.000000    0.050049        0.050049
1     980.213379     960.263184 -1120.780518   980.213379  119.950195   960.263184   0.000000   19.950195       19.950195
2     980.213379     960.263184 -1120.780518   980.213379    0.049805   960.263184   0.000000   19.950195      -80.049805
3    1190.312988    1060.263184 -1120.780518  1190.312988  230.049805  1060.263184  10.049805  120.000000       20.000000
4    1298.362793    1160.263184 -1120.780518  1298.362793  228.049805  1160.263184  18.099609  120.000000       20.000000
5    1404.412598    1260.263184 -1120.780518  1404.412598  226.049805  1260.263184  24.149414  120.000000       20.000000
6    1508.462402    1360.263184 -1120.780518  1508.462402  224.049805  1360.263184  28.199219  120.000000       20.000000
7    1610.512207    1460.263184 -1120.780518  1610.512207  222.049805  1460.263184  30.249023  120.000000       20.000000
8    1710.562012    1560.263184 -1120.780518  1710.562012  220.049805  1560.263184  30.298828  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 17:19:11]  --------------------------------------------------------------------------------
[08/23 17:19:11]  Iteration: 6 (0 solution, 5 counterexamples)
[08/23 17:19:11]  Generator returned sat in 0.042505 secs.
[08/23 17:19:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:12]  Improved number of small numbers from 85 to 93 out of a max of 99
[08/23 17:19:12]  Verifer returned sat in 0.341175 secs.
[08/23 17:19:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t     cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0   -5370.369873   -5490.369629 -1120.780518 -5370.369873     0.099854 -5490.369629     0.000000  119.999756       19.999756
1   -5270.419434   -5390.369629 -1120.780518 -5270.419434   219.950195 -5390.369629     0.000000  119.950195       19.950195
2   -5270.419434   -5290.369629 -1120.780518 -5270.419434     0.049561 -5290.369629     0.000000   19.950195      -80.049805
3   -1324.779785   -5190.369629 -1120.780518 -1324.779785  3965.589844 -5190.369629  3745.589844  120.000000       20.000000
4     536.015137   -5090.369629 -1120.780518   536.015137  1980.794922 -5090.369629  5506.384766  120.000000       20.000000
5    1404.412598   -4890.369629 -1120.780518  1404.412598   988.397461 -4890.369629  6274.782227   20.000000       20.000000
6    1876.611328   -4890.369629 -1120.780518  1876.611328   492.198730 -4890.369629  6646.980957  120.000000       20.000000
7    2000.710693   -4690.369629 -1120.780518  2000.710693   244.099365 -4690.369629  6671.080322   20.000000       20.000000
8    2100.760376   -4690.369629 -1120.780518  2100.760376   120.049683 -4690.369629  6671.130005  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 17:19:12]  --------------------------------------------------------------------------------
[08/23 17:19:12]  Iteration: 7 (0 solution, 6 counterexamples)
[08/23 17:19:12]  Generator returned sat in 0.133392 secs.
[08/23 17:19:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:19:12]  Improved gap from 0.0 to 100
[08/23 17:19:12]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/23 17:19:12]  Verifer returned sat in 0.222286 secs.
[08/23 17:19:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5290.344971   -5290.369629 -1120.780762 -5290.344971    0.099609 -5290.369629   0.000000    0.024658        0.024658
1   -5190.369629   -5190.369629 -1120.780762 -5190.369629  100.000000 -5190.369629   0.000000    0.000000        0.000000
2   -5070.344727   -5110.894531 -1120.780762 -5070.344727  120.024902 -5110.894531   0.024902   40.524902       20.000000
3   -5070.344727   -5090.369629 -1120.780762 -5070.344727   40.499756 -5090.369629   0.024902   20.000000      -80.000000
4   -4850.844971   -4910.894531 -1120.780762 -4850.844971  239.499756 -4910.894531  19.524658   40.524902       20.000000
5   -4850.844971   -4890.369629 -1120.780762 -4850.844971    0.500000 -4890.369629  19.524658   20.000000      -80.000000
6   -4650.820068   -4790.369629 -1120.780762 -4650.820068  220.024902 -4790.369629  19.549561  120.000000       20.000000
7   -4650.820068   -4690.369629 -1120.780762 -4650.820068    0.500000 -4690.369629  19.549561   20.000000      -80.000000
8   -4450.795166   -4590.369629 -1120.780762 -4450.795166  220.024902 -4590.369629  19.574463  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=3.[0m
[08/23 17:19:13]  --------------------------------------------------------------------------------
[08/23 17:19:13]  Iteration: 8 (0 solution, 7 counterexamples)
[08/23 17:19:13]  Generator returned sat in 0.175803 secs.
[08/23 17:19:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:19:13]  Improved gap from 0.01239013671875 to 48.4375
[08/23 17:19:13]  Improved number of small numbers from 71 to 100 out of a max of 100
[08/23 17:19:13]  Verifer returned sat in 0.331876 secs.
[08/23 17:19:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5183.988770   -5303.988525 -1174.142334 -5183.988770    0.099609 -5303.988525   0.000000  119.999756       19.999756
1   -5103.988525   -5103.988525 -1174.142334 -5103.988525  200.000000 -5103.988525   0.000000    0.000000        0.000000
2   -4983.938965   -5003.988525 -1174.142334 -4983.938965  120.049561 -5003.988525   0.049561   20.000000       20.000000
3   -4954.125977   -4954.224854 -1172.343506 -4954.125977   49.812988 -4954.224854   0.049561    0.049316      -48.388184
4   -4778.793457   -4805.787354 -1172.343506 -4778.793457  175.381836 -4805.787354   6.993896   20.000000       20.000000
5   -4778.793457   -4805.787354 -1120.781006 -4778.793457    1.500000 -4805.787354   6.993896   20.000000      -28.437500
6   -4699.192871   -4755.633057 -1071.944092 -4699.192871   99.600586 -4755.633057   6.993896   49.446289        0.000000
7   -4648.843262   -4706.186768 -1022.293701 -4648.843262   99.795898 -4706.186768   6.993896   50.349609        0.000000
8   -4648.843262   -4655.837158  -970.731201 -4648.843262   50.300293 -4655.837158   6.993896    0.000000      -48.437500
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:14]  --------------------------------------------------------------------------------
[08/23 17:19:14]  Iteration: 9 (0 solution, 8 counterexamples)
[08/23 17:19:14]  Generator returned sat in 0.036580 secs.
[08/23 17:19:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:19:14]  Improved gap from 0.0 to 48.4375
[08/23 17:19:15]  Improved number of small numbers from 57 to 69 out of a max of 100
[08/23 17:19:15]  Verifer returned sat in 0.679586 secs.
[08/23 17:19:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5215.537598   -5335.537354 -1278.142334 -5215.537598    0.099609 -5335.537354   0.000000  119.999756       19.999756
1   -5215.537598   -5215.586670 -1260.576904 -5215.537598    0.049561 -5215.586670   0.000000    0.049072      -62.434814
2   -5053.102783   -5053.152100 -1260.576904 -5053.102783  162.483887 -5053.152100   0.000000    0.049316        0.000000
3   -4954.126221   -5002.563477 -1259.553711 -4954.126221   99.025879 -5002.563477   0.000000   48.437256       -0.000244
4   -4834.076538   -4854.125977 -1259.553711 -4834.076538  168.486938 -4854.125977   0.049438   20.000000       20.000000
5   -4834.076538   -4854.125977 -1207.991211 -4834.076538    1.500000 -4854.125977   0.049438   20.000000      -28.437500
6   -4752.563477   -4804.971436 -1161.066772 -4752.563477  101.513062 -4804.971436   0.049438   52.358521        0.000000
7   -4704.125977   -4752.612915 -1109.504395 -4704.125977  100.796021 -4752.612915   0.049438   48.437500       -0.000122
8   -4699.806946   -4704.175293 -1057.941895 -4699.806946   52.756531 -4704.175293   0.049438    4.318909      -44.118591
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:15]  --------------------------------------------------------------------------------
[08/23 17:19:15]  Iteration: 10 (0 solution, 9 counterexamples)
[08/23 17:19:16]  Generator returned sat in 0.533232 secs.
[08/23 17:19:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:19:16]  Improved gap from 0.0123291015625 to 100
[08/23 17:19:16]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:19:16]  Verifer returned sat in 0.176962 secs.
[08/23 17:19:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t  queue_t  bottle_queue_t
0   -5421.020752   -5421.020752 -1108.708496 -5421.020752    0.099609 -5421.020752    0.000000      0.0      -16.049316
1   -5284.946777   -5304.971436 -1108.708496 -5284.946777  136.073975 -5304.971436    0.024658     20.0       20.000000
2   -5204.946777   -5304.971436 -1108.708496 -5204.946777  100.000000 -5304.971436    0.024658    100.0        0.000000
3   -5084.922119   -5104.971436 -1108.708496 -5084.922119  220.024658 -5104.971436    0.049316     20.0       20.000000
4   -4944.897461   -5015.971436 -1108.708496 -4944.897461  160.024658 -5015.971436   40.073975     31.0       20.000000
5   -4829.397461   -4904.971436 -1108.708496 -4829.397461  146.500000 -4904.971436   55.573975     20.0       20.000000
6   -4647.397461   -4804.971436 -1108.708496 -4647.397461  202.000000 -4804.971436  137.573975     20.0       20.000000
7   -4515.397461   -4704.971436 -1108.708496 -4515.397461  152.000000 -4704.971436  169.573975     20.0       20.000000
8   -4377.897461   -4704.971436 -1108.708496 -4377.897461  157.500000 -4704.971436  207.073975    120.0       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=5.[0m
[08/23 17:19:16]  --------------------------------------------------------------------------------
[08/23 17:19:16]  Iteration: 11 (0 solution, 10 counterexamples)
[08/23 17:19:16]  Generator returned sat in 0.262367 secs.
[08/23 17:19:16]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:17]  Improved gap from 0.0 to 0
[08/23 17:19:17]  Improved number of small numbers from 79 to 82 out of a max of 100
[08/23 17:19:17]  Verifer returned sat in 0.584984 secs.
[08/23 17:19:17]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5244.971436   -5244.971436 -1368.708740 -5244.971436    0.099365 -5244.971436    0.00000    0.000000     -100.000000
1   -5024.970186   -5144.971436 -1368.708740 -5024.970186  220.001250 -5144.971436    0.00125  120.000000       20.000000
2   -4924.968936   -4991.639893 -1368.708740 -4924.968936  220.001250 -4991.639893    0.00250   66.668457       20.000000
3   -4924.968936   -4924.972686 -1288.708740 -4924.968936   66.668333 -4924.972686    0.00250    0.001250        0.000000
4   -4824.967686   -4824.971436 -1288.708740 -4824.967686  100.002500 -4824.971436    0.00250    0.001250        0.001250
5   -4674.965186   -4724.971680 -1288.708740 -4674.965186  150.003750 -4724.971680   30.00625   20.000244       20.000000
6   -4674.965186   -4724.971436 -1208.708740 -4674.965186    0.010000 -4724.971436   30.00625   20.000000        0.000000
7   -4674.965186   -4704.971436 -1108.708740 -4674.965186    0.015000 -4704.971436   30.00625    0.000000        0.000000
8   -4674.942686   -4704.971436 -1008.731445 -4674.942686    0.022500 -4704.971436   30.00625    0.022500       -0.000205
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:17]  --------------------------------------------------------------------------------
[08/23 17:19:17]  Iteration: 12 (0 solution, 11 counterexamples)
[08/23 17:19:18]  Generator returned sat in 0.093824 secs.
[08/23 17:19:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/23 17:19:18]  Improved gap from 0.0 to 1.5625
[08/23 17:19:19]  Improved number of small numbers from 28 to 34 out of a max of 100
[08/23 17:19:19]  Verifer returned sat in 1.147304 secs.
[08/23 17:19:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5110.953125   -5110.953214 -1483.323967 -5110.953125    0.099365 -5110.953214   0.000000    0.000089      -99.999911
1   -4890.904019   -5010.953214 -1483.323967 -4890.904019  220.049194 -5010.953214   0.049194  120.000000       20.000000
2   -4808.044125   -4810.953369 -1483.323967 -4808.044125  202.859894 -4810.953369   0.049194    2.860049        2.859894
3   -4808.044125   -4809.655820 -1386.183860 -4808.044125    2.810700 -4809.655820   0.049194    1.562500        0.000000
4   -4806.890576   -4808.093320 -1288.708740 -4806.890576    2.716049 -4808.093320   0.049194    1.153549       -1.371330
5   -4805.470051   -4805.568440 -1191.020508 -4805.470051    2.574074 -4805.568440   0.049194    0.049194       -2.262573
6   -4803.158134   -4803.256523 -1092.583157 -4803.158134    2.361111 -4803.256523   0.049194    0.049194       -1.513306
7   -4801.165662   -4801.694023  -994.145657 -4801.165662    2.041667 -4801.694023   0.049194    0.479167       -1.083333
8   -4800.082329   -4800.131523  -994.145508 -4800.082329    1.562500 -4800.131523   0.049194    0.000000      -99.999851
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:19:19]  --------------------------------------------------------------------------------
[08/23 17:19:19]  Iteration: 13 (0 solution, 12 counterexamples)
[08/23 17:19:20]  Generator returned sat in 0.683223 secs.
[08/23 17:19:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:19:20]  Improved gap from 0.5344895401314943 to 1.5625
[08/23 17:19:21]  Improved number of small numbers from 23 to 100 out of a max of 100
[08/23 17:19:21]  Verifer returned sat in 0.674551 secs.
[08/23 17:19:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4990.953369   -5110.953369 -1483.323975 -4990.953369    0.099365 -5110.953369   0.000000  120.000000       20.000000
1   -4890.904053   -5010.953125 -1483.323975 -4890.904053  220.049316 -5010.953125   0.049316  119.999756       20.000000
2   -4790.928467   -4910.953125 -1483.323975 -4790.928467  219.975342 -4910.953125   0.049316  119.975342       19.975586
3   -4790.928467   -4792.540283 -1403.299561 -4790.928467   81.724609 -4792.540283   0.049316    1.562500        0.000000
4   -4670.904053   -4690.977783 -1403.299561 -4670.904053  121.586914 -4690.977783   0.073730   20.000000       20.000000
5   -4670.904053   -4671.002441 -1325.250244 -4670.904053    2.000000 -4671.002441   0.073730    0.024658       -1.950684
6   -4668.928711   -4669.027100 -1227.225342 -4668.928711    2.000000 -4669.027100   0.073730    0.024658       -1.950439
7   -4666.953369   -4667.051758 -1128.788086 -4666.953369    2.000000 -4667.051758   0.073730    0.024658       -1.537842
8   -4664.978027   -4665.489258 -1030.350586 -4664.978027    2.000000 -4665.489258   0.073730    0.437500       -1.125000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:21]  --------------------------------------------------------------------------------
[08/23 17:19:21]  Iteration: 14 (0 solution, 13 counterexamples)
[08/23 17:19:22]  Generator returned sat in 0.853399 secs.
[08/23 17:19:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:19:22]  Improved gap from 0.01220703125 to 10.9375
[08/23 17:19:22]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:19:22]  Verifer returned sat in 0.383329 secs.
[08/23 17:19:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t    queue_t  bottle_queue_t
0   -4918.333496   -4929.270996 -1547.937256 -4918.333496    0.099365 -4929.270996    0.000000  10.937500       10.937500
1   -4918.333496   -4929.270996 -1458.874756 -4918.333496   10.937500 -4929.270996    0.000000  10.937500        0.000000
2   -4914.768799   -4914.817871 -1458.874756 -4914.768799   14.502197 -4914.817871    0.000000   0.049072      -96.435303
3   -4815.940674   -4815.989746 -1458.874756 -4815.940674   98.877197 -4815.989746    0.000000   0.049072      -97.607178
4   -4617.235352   -4637.346924 -1458.874756 -4617.235352  198.754395 -4637.346924    0.000000  20.111572        1.098145
5   -4238.838135   -4518.333496 -1458.874756 -4238.838135  398.508789 -4518.333496  259.495361  20.000000       20.000000
6   -4238.838135   -4509.270996 -1378.874756 -4238.838135    2.000000 -4509.270996  259.495361  10.937500        0.000000
7   -4238.838135   -4498.333496 -1289.812256 -4238.838135    5.000000 -4498.333496  259.495361   0.000000      -10.937500
8   -4227.838135   -4487.395996 -1289.812256 -4227.838135   11.000000 -4487.395996  259.495361   0.062500      -99.937500
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:23]  --------------------------------------------------------------------------------
[08/23 17:19:23]  Iteration: 15 (0 solution, 14 counterexamples)
[08/23 17:19:23]  Generator returned sat in 0.216016 secs.
[08/23 17:19:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:23]  Improved gap from 2.0 to 1.5625
[08/23 17:19:24]  Improved number of small numbers from 43 to 100 out of a max of 100
[08/23 17:19:24]  Verifer returned sat in 0.542736 secs.
[08/23 17:19:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -4750.808838   -4750.858154 -1706.518555 -4750.808838    0.099121 -4750.858154   0.000000   0.049316        0.024658
1   -4750.808838   -4750.833496 -1608.081055 -4750.808838    0.024658 -4750.833496   0.000000   0.024658       -1.537842
2   -4749.246582   -4749.270996 -1509.643555 -4749.246582    1.586914 -4749.270996   0.000000   0.024414       -1.538086
3   -4698.477539   -4700.040039 -1458.874756 -4698.477539   50.793457 -4700.040039   0.000000   1.562500       -0.000244
4   -4598.453125   -4598.477295 -1458.874756 -4598.453125  101.586914 -4598.477295   0.000000   0.024170        0.024170
5   -4395.303467   -4498.477539 -1458.874756 -4395.303467  203.173828 -4498.477539  83.173828  20.000244       20.000000
6   -4395.303467   -4480.039795 -1378.874756 -4395.303467    0.500000 -4480.039795  83.173828   1.562500        0.000000
7   -4395.303467   -4478.477295 -1280.437256 -4395.303467    1.000000 -4478.477295  83.173828   0.000000       -1.562500
8   -4393.303467   -4476.914795 -1182.000000 -4393.303467    2.000000 -4476.914795  83.173828   0.437500       -1.125244
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:24]  --------------------------------------------------------------------------------
[08/23 17:19:24]  Iteration: 16 (0 solution, 15 counterexamples)
[08/23 17:19:25]  Generator returned sat in 0.473482 secs.
[08/23 17:19:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:25]  Improved gap from 0.0025 to 100
[08/23 17:19:25]  Improved number of small numbers from 67 to 100 out of a max of 100
[08/23 17:19:25]  Verifer returned sat in 0.270877 secs.
[08/23 17:19:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -4998.475830   -4998.478760 -1458.874756 -4998.475830    0.099121 -4998.478760    0.000000    0.002930        0.002686
1   -4998.475830   -4998.478516 -1458.874756 -4998.475830    0.001250 -4998.478516    0.000000    0.002686      -99.997314
2   -4898.477295   -4898.478516 -1458.874756 -4898.477295  100.001221 -4898.478516    0.000000    0.001221      -99.998779
3   -4698.477295   -4698.478760 -1458.874756 -4698.477295  200.001221 -4698.478760    0.000000    0.001465        0.001221
4   -4398.478760   -4598.478516 -1458.874756 -4398.478760  300.000000 -4598.478516  179.999756   20.000000       20.000000
5   -4398.478760   -4578.478516 -1458.874756 -4398.478760    0.010000 -4578.478516  179.999756    0.000000      -80.000000
6   -4078.478760   -4498.478516 -1458.874756 -4078.478760  320.000000 -4498.478516  299.999756  120.000000       20.000000
7   -4078.478760   -4378.479736 -1458.874756 -4078.478760    0.010000 -4378.479736  299.999756    0.001221      -80.000000
8   -3858.481201   -4298.478516 -1458.874756 -3858.481201  219.998779 -4298.478516  319.997314  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=3.[0m
[08/23 17:19:25]  --------------------------------------------------------------------------------
[08/23 17:19:25]  Iteration: 17 (0 solution, 16 counterexamples)
[08/23 17:19:26]  Generator returned sat in 0.467106 secs.
[08/23 17:19:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:26]  Improved gap from 0.048828125 to 23.4375
[08/23 17:19:26]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:19:26]  Verifer returned sat in 0.416961 secs.
[08/23 17:19:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4440.247314   -4440.296143 -1458.874756 -4440.247314    0.099121 -4440.296143   0.000000    0.048828      -99.951172
1   -4240.296143   -4340.296143 -1458.874756 -4240.296143  200.000000 -4340.296143   0.000000  100.000000        0.000000
2   -4120.247314   -4239.296143 -1458.874756 -4120.247314  220.048828 -4239.296143   0.048828  119.000000       20.000000
3   -4120.247314   -4140.296143 -1458.874756 -4120.247314  119.000000 -4140.296143   0.048828   20.000000      -80.000000
4   -3871.247314   -3940.296143 -1458.874756 -3871.247314  269.000000 -3940.296143  49.048828   20.000000       20.000000
5   -3871.247314   -3940.296143 -1382.312256 -3871.247314    1.000000 -3940.296143  49.048828   20.000000       -3.437500
6   -3740.747314   -3816.858643 -1382.312256 -3740.747314  150.500000 -3816.858643  56.111328   20.000000       20.000000
7   -3740.747314   -3816.858643 -1308.825928 -3740.747314    1.000000 -3816.858643  56.111328   20.000000       -6.513672
8   -3698.028564   -3790.344971 -1308.825928 -3698.028564   62.718750 -3790.344971  56.111328   36.205078      -63.794922
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=2.[0m
[08/23 17:19:27]  --------------------------------------------------------------------------------
[08/23 17:19:27]  Iteration: 18 (0 solution, 17 counterexamples)
[08/23 17:19:27]  Generator returned sat in 0.129972 secs.
[08/23 17:19:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:27]  Improved gap from 3.4617919921875 to 48.4375
[08/23 17:19:28]  Improved number of small numbers from 59 to 59 out of a max of 100
[08/23 17:19:28]  Verifer returned sat in 0.790902 secs.
[08/23 17:19:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4320.247559   -4420.296265 -1473.465088 -4320.247559    0.098877 -4420.296265   0.000000  100.048706        0.048706
1   -4220.296265   -4220.344971 -1473.465088 -4220.296265  200.000000 -4220.344971   0.000000    0.048706        0.000000
2   -4120.247559   -4120.296265 -1473.465088 -4120.247559  100.097412 -4120.296265   0.000000    0.048706        0.048706
3   -4034.886353   -4083.323853 -1458.875000 -4034.886353   85.409912 -4083.323853   0.000000   48.437500        0.000000
4   -3914.837646   -3934.886353 -1458.875000 -3914.837646  168.486206 -3934.886353   0.048706   20.000000       20.000000
5   -3914.837646   -3934.886353 -1407.312500 -3914.837646    1.000000 -3934.886353   0.048706   20.000000      -28.437500
6   -3842.132690   -3886.448853 -1355.750000 -3842.132690   92.704956 -3886.448853   0.048706   44.267456       -4.170044
7   -3787.962646   -3836.969686 -1305.750000 -3787.962646   98.437500 -3836.969686   0.048706   48.958333        0.000000
8   -3787.962646   -3788.011353 -1305.750000 -3787.962646   48.958333 -3788.011353   0.048706    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:28]  --------------------------------------------------------------------------------
[08/23 17:19:28]  Iteration: 19 (0 solution, 18 counterexamples)
[08/23 17:19:29]  Generator returned sat in 0.370190 secs.
[08/23 17:19:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:29]  Improved gap from 20.0 to 32.8125
[08/23 17:19:30]  Improved number of small numbers from 60 to 68 out of a max of 100
[08/23 17:19:30]  Verifer returned sat in 1.037351 secs.
[08/23 17:19:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -3290.262695   -3310.262559 -1473.465332 -3290.262695    0.098633 -3310.262559    0.00000  19.999863       19.999619
1   -3290.262695   -3290.265059 -1473.465088 -3290.262695    0.002441 -3290.265059    0.00000   0.002363      -80.000137
2   -3090.260059   -3110.262559 -1473.465088 -3090.260059  200.005000 -3110.262559    0.00250  20.000000       20.000000
3   -3010.257559   -3010.262559 -1473.465088 -3010.257559  100.002500 -3010.262559    0.00250   0.002500        0.002500
4   -2810.258809   -2911.038809 -1473.465088 -2810.258809  200.001250 -2911.038809   80.00375  20.776250       20.000000
5   -2810.258809   -2910.262559 -1406.277588 -2810.258809    0.010000 -2910.262559   80.00375  20.000000      -12.812500
6   -2730.253809   -2877.450059 -1373.470215 -2730.253809  100.005000 -2877.450059   80.00375  67.192500       -0.000127
7   -2681.037559   -2793.853809 -1322.686338 -2681.037559  116.408750 -2793.853809   80.00375  32.812500        0.000000
8   -2597.053184   -2761.041260 -1322.686279 -2597.053184  116.796875 -2761.041260   80.00375  83.984326      -16.015566
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:30]  --------------------------------------------------------------------------------
[08/23 17:19:30]  Iteration: 20 (0 solution, 19 counterexamples)
[08/23 17:19:32]  Generator returned sat in 1.252275 secs.
[08/23 17:19:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:19:32]  Improved gap from 32.1425 to 48.4375
[08/23 17:19:32]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/23 17:19:32]  Verifer returned sat in 0.399674 secs.
[08/23 17:19:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3131.753174   -3251.752930 -1458.656250 -3131.753174    0.098389 -3251.752930   0.000000  119.999756       20.000000
1   -3051.753174   -3051.753174 -1458.656250 -3051.753174  199.999756 -3051.753174   0.000000    0.000000        0.000000
2   -2969.553223   -2969.555664 -1458.656250 -2969.553223   82.199951 -2969.555664   0.000000    0.002441      -17.800049
3   -2864.435547   -2912.873047 -1445.973877 -2864.435547  105.120117 -2912.873047   0.000000   48.437500        0.000000
4   -2744.433105   -2764.435547 -1445.973877 -2744.433105  168.439941 -2764.435547   0.002441   20.000000       20.000000
5   -2744.433105   -2764.435547 -1394.411377 -2744.433105    0.010000 -2764.435547   0.002441   20.000000      -28.437500
6   -2662.873047   -2715.998047 -1347.533936 -2662.873047  101.560059 -2715.998047   0.002441   53.122559        0.000000
7   -2618.558105   -2662.875488 -1295.971436 -2618.558105   97.437500 -2662.875488   0.002441   44.314941       -4.122559
8   -2613.093018   -2614.437988 -1295.971191 -2613.093018   49.780029 -2614.437988   0.002441    1.342529      -98.657227
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:32]  --------------------------------------------------------------------------------
[08/23 17:19:32]  Iteration: 21 (0 solution, 20 counterexamples)
[08/23 17:19:33]  Generator returned sat in 0.651890 secs.
[08/23 17:19:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:19:34]  Improved gap from 48.104166666666664 to 48.4375
[08/23 17:19:34]  Improved number of small numbers from 94 to 100 out of a max of 100
[08/23 17:19:34]  Verifer returned sat in 0.300165 secs.
[08/23 17:19:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3283.642334   -3403.642090 -1306.767334 -3283.642334    0.098389 -3403.642090   0.000000  119.999756       20.000000
1   -3252.079834   -3252.079834 -1306.767334 -3252.079834  151.562256 -3252.079834   0.000000    0.000000      -48.437500
2   -3103.593750   -3103.642334 -1306.767334 -3103.593750  148.486084 -3103.642334   0.000000    0.048584        0.048584
3   -2983.690918   -3056.609863 -1306.767334 -2983.690918  119.951416 -3056.609863   0.000000   72.918945       19.951416
4   -2883.593750   -2903.642334 -1306.767334 -2883.593750  173.016113 -2903.642334   0.048584   20.000000       20.000000
5   -2883.593750   -2903.642334 -1255.205078 -2883.593750    1.500000 -2903.642334   0.048584   20.000000      -28.437744
6   -2804.093750   -2854.330566 -1206.267334 -2804.093750   99.500000 -2854.330566   0.048584   50.188232        0.000000
7   -2753.642334   -2804.142334 -1156.718750 -2753.642334  100.639648 -2804.142334   0.048584   50.451416        0.000000
8   -2753.642334   -2753.690918 -1105.156494 -2753.642334   49.250000 -2753.690918   0.048584    0.000000      -48.437744
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:34]  --------------------------------------------------------------------------------
[08/23 17:19:34]  Iteration: 22 (0 solution, 21 counterexamples)
[08/23 17:19:35]  Generator returned sat in 0.424738 secs.
[08/23 17:19:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:19:35]  Improved gap from 0.0 to 32.8125
[08/23 17:19:36]  Improved number of small numbers from 43 to 100 out of a max of 100
[08/23 17:19:36]  Verifer returned sat in 0.873278 secs.
[08/23 17:19:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -2608.255615   -2608.255615 -1373.955078 -2608.255615    0.098389 -2608.255615   0.000000   0.000000        0.000000
1   -2608.207031   -2608.255615 -1306.767578 -2608.207031    0.048584 -2608.255615   0.000000   0.048584      -32.763916
2   -2455.394531   -2475.443115 -1306.767578 -2455.394531  152.861084 -2475.443115   0.048584  20.000000       20.000000
3   -2355.443359   -2375.443115 -1306.767578 -2355.443359  119.951172 -2375.443115   0.048584  19.951172       19.951172
4   -2199.512695   -2275.443115 -1306.767578 -2199.512695  175.881836 -2275.443115  55.930420  20.000000       20.000000
5   -2199.512695   -2275.443115 -1239.580078 -2199.512695    1.500000 -2275.443115  55.930420  20.000000      -12.812500
6   -2119.262695   -2241.892334 -1207.017578 -2119.262695  100.250000 -2241.892334  55.930420  66.699219        0.000000
7   -2069.561523   -2160.193115 -1156.718750 -2069.561523  116.400391 -2160.193115  55.930420  34.701172        0.000000
8   -1988.937500   -2125.491699 -1156.718750 -1988.937500  115.325195 -2125.491699  55.930420  80.623779      -19.375977
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:36]  --------------------------------------------------------------------------------
[08/23 17:19:36]  Iteration: 23 (0 solution, 22 counterexamples)
[08/23 17:19:36]  Generator returned sat in 0.106668 secs.
[08/23 17:19:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:19:37]  Improved gap from 32.8125 to 32.8125
[08/23 17:19:37]  Improved number of small numbers from 36 to 100 out of a max of 100
[08/23 17:19:37]  Verifer returned sat in 0.828199 secs.
[08/23 17:19:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -2152.882324   -2152.882324 -1345.316162 -2152.882324    0.098389 -2152.882324   0.000000   0.000000      -74.909668
1   -1977.972900   -2010.785156 -1345.316162 -1977.972900  174.909424 -2010.785156   0.000000  32.812256       -0.000244
2   -1877.924072   -1877.972656 -1345.316162 -1877.924072  132.861084 -1877.972656   0.000000   0.048584        0.048584
3   -1844.160156   -1877.972656 -1279.128662 -1844.160156   33.812500 -1877.972656   0.000000  33.812500        0.000000
4   -1724.111572   -1744.160156 -1279.128662 -1724.111572  153.861084 -1744.160156   0.048584  20.000000       20.000000
5   -1724.111572   -1744.160156 -1211.941162 -1724.111572    2.000000 -1744.160156   0.048584  20.000000      -12.812500
6   -1676.705322   -1711.347656 -1146.534912 -1676.705322   67.406250 -1711.347656   0.048584  34.593750        0.000000
7   -1594.783447   -1676.753906 -1128.456787 -1594.783447  116.515625 -1676.753906   0.048584  81.921875        0.000000
8   -1585.244385   -1594.832031 -1128.456787 -1585.244385   91.460938 -1594.832031   0.048584   9.539062      -90.460938
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:38]  --------------------------------------------------------------------------------
[08/23 17:19:38]  Iteration: 24 (0 solution, 23 counterexamples)
[08/23 17:19:38]  Generator returned sat in 0.602854 secs.
[08/23 17:19:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/23 17:19:39]  Improved gap from 0.0025 to 1.5625
[08/23 17:19:40]  Improved number of small numbers from 58 to 81 out of a max of 100
[08/23 17:19:40]  Verifer returned sat in 1.426886 secs.
[08/23 17:19:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1945.073730   -2046.668457 -1377.157471 -1945.073730    0.098145 -2046.668457        0.0  101.594727       19.999777
1   -1845.088135   -1865.073730 -1377.157471 -1845.088135  201.580322 -1865.073730        0.0   19.985596       19.985373
2   -1763.116943   -1765.073510 -1377.157471 -1763.116943  101.956787 -1765.073510        0.0    1.956566        1.956564
3   -1763.102316   -1765.073486 -1279.128662 -1763.102316    1.971193 -1765.073486        0.0    1.971170        0.000000
4   -1763.102316   -1763.102316 -1180.691162 -1763.102316    1.956790 -1763.102316        0.0    0.000000       -1.562500
5   -1761.167131   -1761.539816 -1082.253662 -1761.167131    1.935185 -1761.539816        0.0    0.372685       -1.189815
6   -1759.637038   -1759.977316  -983.816406 -1759.637038    1.902778 -1759.977316        0.0    0.340278       -1.222466
7   -1758.123149   -1758.137695  -885.656006 -1758.123149    1.854167 -1758.137695        0.0    0.014546       -1.548177
8   -1756.356445   -1756.574951  -885.655762 -1756.356445    1.781250 -1756.574951        0.0    0.218506      -99.781229
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:19:40]  --------------------------------------------------------------------------------
[08/23 17:19:40]  Iteration: 25 (0 solution, 24 counterexamples)
[08/23 17:19:42]  Generator returned sat in 1.529443 secs.
[08/23 17:19:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:19:42]  Improved gap from 0.0 to 0
[08/23 17:19:43]  Improved number of small numbers from 54 to 76 out of a max of 100
[08/23 17:19:43]  Verifer returned sat in 0.807533 secs.
[08/23 17:19:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1990.595215   -2010.595215 -1331.636006 -1990.595215    0.097900 -2010.595215      0.000   20.000000       19.999758
1   -1890.597656   -2010.594971 -1331.636006 -1890.597656  119.997559 -2010.594971      0.000  119.997314       19.997316
2   -1790.597412   -1910.594971 -1331.636006 -1790.597412  219.997559 -1910.594971      0.000  119.997559       19.997560
3   -1790.597412   -1790.599972 -1331.636006 -1790.597412   90.003750 -1790.599972      0.000    0.002560      -80.002440
4   -1610.592472   -1610.594972 -1331.636006 -1610.592472  180.007500 -1610.594972      0.000    0.002500        0.002500
5   -1250.579972   -1510.595215 -1331.636006 -1250.579972  360.015000 -1510.595215    240.015   20.000242       20.000000
6   -1250.579972   -1510.594971 -1251.636006 -1250.579972    0.010000 -1510.594971    240.015   19.999998        0.000000
7   -1250.579972   -1490.594972 -1151.636230 -1250.579972    0.020000 -1490.594972    240.015    0.000000       -0.000225
8   -1250.539972   -1490.555176 -1151.635986 -1250.539972    0.040000 -1490.555176    240.015    0.000203      -99.959980
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:43]  --------------------------------------------------------------------------------
[08/23 17:19:43]  Iteration: 26 (0 solution, 25 counterexamples)
[08/23 17:19:47]  Generator returned sat in 3.426306 secs.
[08/23 17:19:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:19:47]  Improved gap from 0.0 to 6.25
[08/23 17:19:49]  Improved number of small numbers from 18 to 40 out of a max of 100
[08/23 17:19:49]  Verifer returned sat in 1.983137 secs.
[08/23 17:19:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1624.721436   -1724.769531 -1357.542714 -1624.721436    0.098145 -1724.769531   0.000000  100.048096        0.048265
1   -1624.721436   -1624.769700 -1357.542714 -1624.721436  100.048096 -1624.769700   0.000000    0.048265      -99.951735
2   -1404.721482   -1524.769531 -1357.542714 -1404.721482  220.048218 -1524.769531   0.048218  119.999831       20.000000
3   -1304.769531   -1414.341797 -1357.542714 -1304.769531  219.951782 -1414.341797   0.048218  109.524048       19.951951
4   -1304.769531   -1304.866136 -1331.635986 -1304.769531  109.475891 -1304.866136   0.048218    0.048387      -54.141322
5   -1250.579972   -1250.676408 -1258.206543 -1250.579972   54.237946 -1250.676408   0.048218    0.048218      -26.522319
6   -1224.009217   -1224.105653 -1164.456787 -1224.009217   26.618973 -1224.105653   0.048218    0.048218       -6.201808
7   -1211.247949   -1217.546387 -1071.016247 -1211.247949   12.809486 -1217.546387   0.048218    6.250220        0.000000
8   -1211.247949   -1211.296167 -1071.016113 -1211.247949    5.904743 -1211.296167   0.048218    0.000000      -99.999866
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:19:49]  --------------------------------------------------------------------------------
[08/23 17:19:49]  Iteration: 27 (0 solution, 26 counterexamples)
[08/23 17:19:51]  Generator returned sat in 1.352988 secs.
[08/23 17:19:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:19:52]  Improved gap from 0.0025 to 0
[08/23 17:19:52]  Improved number of small numbers from 54 to 73 out of a max of 100
[08/23 17:19:52]  Verifer returned sat in 1.086595 secs.
[08/23 17:19:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1634.489258   -1754.489014 -1327.823200 -1634.489258    0.098145 -1754.489014        0.0  119.999756       19.999956
1   -1634.489258   -1654.489213 -1247.823242 -1634.489258  119.997559 -1654.489213        0.0   19.999956       -0.000086
2   -1534.150880   -1534.489258 -1247.823242 -1534.150880  120.338333 -1534.489258        0.0    0.338378        0.338292
3   -1534.150880   -1534.163574 -1148.161534 -1534.150880    0.338333 -1534.163574        0.0    0.012694        0.000000
4   -1534.150880   -1534.150880 -1048.168945 -1534.150880    0.010000 -1534.150880        0.0    0.000000       -0.007412
5   -1534.140880   -1534.143380  -948.171631 -1534.140880    0.010000 -1534.143380        0.0    0.002500       -0.000097
6   -1534.133380   -1534.135880  -848.179199 -1534.133380    0.010000 -1534.135880        0.0    0.002500       -0.000165
7   -1534.125880   -1534.128380  -748.186768 -1534.125880    0.010000 -1534.128380        0.0    0.002500       -0.000234
8   -1534.118380   -1534.118408  -648.196777 -1534.118380    0.010000 -1534.118408        0.0    0.000028       -0.002744
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 17:19:53]  --------------------------------------------------------------------------------
[08/23 17:19:53]  Iteration: 28 (0 solution, 27 counterexamples)
[08/23 17:19:54]  Generator returned sat in 0.770418 secs.
[08/23 17:19:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:19:54]  Improved gap from 0.002597085683076767 to 0
[08/23 17:19:54]  Improved number of small numbers from 52 to 100 out of a max of 100
[08/23 17:19:54]  Verifer returned sat in 0.612991 secs.
[08/23 17:19:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1552.902588   -1572.902588 -1409.409912 -1552.902588    0.098145 -1572.902588   0.000000   20.000000       20.000000
1   -1552.902588   -1572.902344 -1329.410156 -1552.902588    0.048096 -1572.902344   0.000000   19.999756       -0.000244
2   -1432.950684   -1543.272461 -1329.410156 -1432.950684  139.951660 -1543.272461   0.000000  110.321777       19.951660
3   -1432.950684   -1452.902344 -1329.410156 -1432.950684  110.273926 -1452.902344   0.000000   19.951660      -80.048340
4   -1232.854492   -1252.902588 -1329.410156 -1232.854492  220.047852 -1252.902588   0.047852   20.000244       20.000000
5   -1232.854492   -1232.950439 -1249.813721 -1232.854492    0.500000 -1232.950439   0.047852    0.048096       -0.403564
6   -1232.402588   -1232.498535 -1149.862061 -1232.402588    0.500000 -1232.498535   0.047852    0.048096        0.000000
7   -1231.950684   -1232.046631 -1050.313965 -1231.950684    0.500000 -1232.046631   0.047852    0.048096        0.000000
8   -1231.498779   -1231.998535  -950.765869 -1231.498779    0.500000 -1231.998535   0.047852    0.451904        0.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:19:55]  --------------------------------------------------------------------------------
[08/23 17:19:55]  Iteration: 29 (0 solution, 28 counterexamples)
[08/23 17:20:01]  Generator returned sat in 6.199568 secs.
[08/23 17:20:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:20:01]  Improved gap from 1.5125 to 1.5625
[08/23 17:20:02]  Improved number of small numbers from 84 to 84 out of a max of 100
[08/23 17:20:02]  Verifer returned sat in 0.415134 secs.
[08/23 17:20:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0   -1732.950439   -1732.950439 -1329.410156 -1732.950439    0.098145 -1732.950439     0.0000    0.0000          0.0000
1   -1632.950439   -1732.950439 -1329.410156 -1632.950439  100.000000 -1732.950439     0.0000  100.0000          0.0000
2   -1532.950439   -1568.457939 -1329.410156 -1532.950439  200.000000 -1568.457939     0.0000   35.5075          0.0000
3   -1451.452939   -1451.455439 -1329.410156 -1451.452939  117.005000 -1451.455439     0.0000    0.0025        -18.5025
4   -1332.950439   -1332.952939 -1329.410156 -1332.950439  118.505000 -1332.952939     0.0000    0.0025          0.0000
5   -1212.947939   -1232.950439 -1329.410156 -1212.947939  120.005000 -1232.950439     0.0025   20.0000         20.0000
6   -1212.947939   -1214.512939 -1249.410156 -1212.947939    0.010000 -1214.512939     0.0025    1.5625          0.0000
7   -1212.947939   -1212.950439 -1150.972656 -1212.947939    1.510000 -1212.950439     0.0025    0.0000         -1.5625
8   -1209.937939   -1211.387939 -1150.972656 -1209.937939    3.010000 -1211.387939     0.0025    1.4475        -98.5525
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:02]  --------------------------------------------------------------------------------
[08/23 17:20:02]  Iteration: 30 (0 solution, 29 counterexamples)
[08/23 17:20:03]  Generator returned sat in 0.339469 secs.
[08/23 17:20:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:20:03]  Improved gap from 0.0479736328125 to 4.6875
[08/23 17:20:03]  Improved number of small numbers from 45 to 100 out of a max of 100
[08/23 17:20:03]  Verifer returned sat in 0.402135 secs.
[08/23 17:20:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1733.533691   -1733.533691 -1611.631348 -1733.533691    0.097900 -1733.533691   0.000000    0.000000      -99.951660
1   -1633.533936   -1633.582031 -1516.318848 -1633.533936   99.999756 -1633.582031   0.000000    0.048096       -4.639404
2   -1628.894531   -1628.894531 -1421.006348 -1628.894531    4.687500 -1628.894531   0.000000    0.000000       -4.687500
3   -1510.346436   -1524.207031 -1421.006348 -1510.346436  118.548096 -1524.207031   0.000000   13.860596       13.860596
4   -1404.158936   -1524.206787 -1421.006348 -1404.158936  120.048096 -1524.206787   0.048096  119.999756       20.000000
5   -1404.158936   -1424.207031 -1341.006348 -1404.158936    2.000000 -1424.207031   0.048096   20.000000        0.000000
6   -1404.158936   -1404.207031 -1245.693848 -1404.158936    3.500000 -1404.207031   0.048096    0.000000       -4.687500
7   -1399.158936   -1399.519531 -1150.381348 -1399.158936    5.000000 -1399.519531   0.048096    0.312500       -4.375000
8   -1392.971436   -1394.832031 -1150.381348 -1392.971436    6.500000 -1394.832031   0.048096    1.812500      -98.187500
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:03]  --------------------------------------------------------------------------------
[08/23 17:20:03]  Iteration: 31 (0 solution, 30 counterexamples)
[08/23 17:20:05]  Generator returned sat in 0.829321 secs.
[08/23 17:20:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:20:05]  Improved gap from 0.0 to 31.25
[08/23 17:20:06]  Improved number of small numbers from 74 to 79 out of a max of 100
[08/23 17:20:06]  Verifer returned sat in 1.059642 secs.
[08/23 17:20:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -1768.638428   -1788.638281 -1611.631348 -1768.638428    0.097900 -1788.638281   0.000000  19.999854       19.999854
1   -1668.637031   -1725.638281 -1611.631348 -1668.637031  120.001250 -1725.638281   0.001250  57.000000       20.000000
2   -1568.635781   -1592.123281 -1611.631348 -1568.635781  157.001250 -1592.123281   0.002500  23.485000       20.000000
3   -1488.634531   -1488.638281 -1611.631348 -1488.634531  103.486250 -1488.638281   0.002500   0.001250        0.001250
4   -1285.392656   -1388.638281 -1611.631348 -1285.392656  203.243125 -1388.638281  83.245625  20.000000       20.000000
5   -1285.392656   -1388.638281 -1542.881348 -1285.392656    0.010000 -1388.638281  83.245625  20.000000      -11.250000
6   -1202.145156   -1357.388281 -1530.379883 -1202.145156  103.247500 -1357.388281  83.245625  71.997500      -15.501035
7   -1155.393906   -1269.889531 -1461.630127 -1155.393906  118.748750 -1269.889531  83.245625  31.250000       -0.000029
8   -1066.395156   -1238.639404 -1461.629883 -1066.395156  120.248750 -1238.639404  83.245625  88.998623      -11.001035
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:06]  --------------------------------------------------------------------------------
[08/23 17:20:06]  Iteration: 32 (0 solution, 31 counterexamples)
[08/23 17:20:07]  Generator returned sat in 0.179093 secs.
[08/23 17:20:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:20:07]  Improved gap from 0.0 to 31.25
[08/23 17:20:08]  Improved number of small numbers from 58 to 68 out of a max of 100
[08/23 17:20:08]  Verifer returned sat in 1.106157 secs.
[08/23 17:20:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1797.885498   -1916.385469 -1611.631592 -1797.885498    0.097656 -1916.385469   0.000000  118.499971       19.999971
1   -1749.134844   -1749.135254 -1611.631592 -1749.134844  167.250625 -1749.135254   0.000000    0.000410      -31.249375
2   -1617.884766   -1617.885469 -1611.631592 -1617.884766  131.250488 -1617.885469   0.000000    0.000703        0.000703
3   -1617.884219   -1617.885469 -1542.881592 -1617.884219    0.001250 -1617.885469   0.000000    0.001250      -31.248750
4   -1466.634844   -1486.635469 -1542.881592 -1466.634844  151.250625 -1486.635469   0.000625   20.000000       20.000000
5   -1466.634844   -1486.635469 -1474.131592 -1466.634844    0.010000 -1486.635469   0.000625   20.000000      -11.250000
6   -1419.004844   -1454.262552 -1410.511719 -1419.004844   67.630000 -1454.262552   0.000625   35.257083       -0.000127
7   -1336.635469   -1384.005469 -1392.880967 -1336.635469  117.626458 -1384.005469   0.000625   47.369375        0.000000
8   -1271.876615   -1336.635986 -1392.880859 -1271.876615  112.128229 -1336.635986   0.000625   64.758747      -35.241038
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:08]  --------------------------------------------------------------------------------
[08/23 17:20:08]  Iteration: 33 (0 solution, 32 counterexamples)
[08/23 17:20:12]  Generator returned sat in 3.659665 secs.
[08/23 17:20:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:20:13]  Improved gap from 0.02398681640625 to 31.25
[08/23 17:20:14]  Improved number of small numbers from 30 to 47 out of a max of 100
[08/23 17:20:14]  Verifer returned sat in 1.325848 secs.
[08/23 17:20:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2142.705811   -2262.705693 -1499.411621 -2142.705811    0.097412 -2262.705693   0.000000  119.999883       19.999985
1   -2142.705811   -2142.753662 -1492.901367 -2142.705811    0.048096 -2142.753662   0.000000    0.047852      -73.489761
2   -1969.216064   -1974.273931 -1492.901367 -1969.216064  173.537598 -1974.273931   0.000000    5.057866       -0.000015
3   -1969.167852   -1969.215825 -1424.151592 -1969.167852    5.106079 -1969.215825   0.000000    0.047974      -31.202026
4   -1817.917852   -1837.965825 -1424.151592 -1817.917852  151.297974 -1837.965825   0.047974   20.000000       20.000000
5   -1817.917852   -1837.965825 -1355.401592 -1817.917852    1.500000 -1837.965825   0.047974   20.000000      -11.250000
6   -1767.013799   -1806.715825 -1342.853516 -1767.013799   70.904053 -1806.715825   0.047974   39.654053      -47.797871
7   -1687.965825   -1719.263799 -1274.103618 -1687.965825  118.702026 -1719.263799   0.047974   31.250000        0.000000
8   -1598.513799   -1688.013672 -1274.103516 -1598.513799  120.702026 -1688.013672   0.047974   89.451899      -10.547871
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:14]  --------------------------------------------------------------------------------
[08/23 17:20:14]  Iteration: 34 (0 solution, 33 counterexamples)
[08/23 17:20:15]  Generator returned sat in 0.478166 secs.
[08/23 17:20:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:20:16]  Improved gap from 31.048095703125 to 31.25
[08/23 17:20:16]  Improved number of small numbers from 61 to 100 out of a max of 100
[08/23 17:20:16]  Verifer returned sat in 0.840317 secs.
[08/23 17:20:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1972.237793   -2090.761719 -1619.139404 -1972.237793    0.097168 -2090.761719   0.000000  118.523926       20.000000
1   -1872.261719   -1892.237793 -1619.139404 -1872.261719  218.500000 -1892.237793   0.000000   19.976074       19.976074
2   -1792.237793   -1792.285645 -1619.139404 -1792.237793  100.000000 -1792.285645   0.000000    0.047852        0.000000
3   -1792.237793   -1792.237793 -1550.389404 -1792.237793    0.023926 -1792.237793   0.000000    0.000000      -31.250000
4   -1640.963867   -1660.987793 -1550.389404 -1640.963867  151.273926 -1660.987793   0.023926   20.000000       20.000000
5   -1640.963867   -1660.987793 -1481.639404 -1640.963867    2.000000 -1660.987793   0.023926   20.000000      -11.250000
6   -1592.314941   -1629.737793 -1469.115479 -1592.314941   68.648926 -1629.737793   0.023926   37.398926      -50.077148
7   -1512.139404   -1542.261475 -1400.365723 -1512.139404  117.574463 -1542.261475   0.023926   30.098145       -1.151855
8   -1422.087158   -1511.011475 -1400.365723 -1422.087158  120.150391 -1511.011475   0.023926   88.900391      -11.099609
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:16]  --------------------------------------------------------------------------------
[08/23 17:20:16]  Iteration: 35 (0 solution, 34 counterexamples)
[08/23 17:20:18]  Generator returned sat in 1.733961 secs.
[08/23 17:20:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:20:19]  Improved gap from 0.011962890625 to 9.375
[08/23 17:20:19]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:20:19]  Verifer returned sat in 0.474787 secs.
[08/23 17:20:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1972.237793   -2092.237793 -1619.139404 -1972.237793    0.097168 -2092.237793   0.000000  120.000000       20.000000
1   -1872.261719   -1892.237793 -1619.139404 -1872.261719  219.976074 -1892.237793   0.000000   19.976074       19.976074
2   -1792.237793   -1892.237793 -1619.139404 -1792.237793  100.000000 -1892.237793   0.000000  100.000000        0.000000
3   -1792.237793   -1792.237793 -1528.514404 -1792.237793   71.615234 -1792.237793   0.000000    0.000000       -9.375000
4   -1682.814941   -1682.862793 -1528.514404 -1682.814941  109.422852 -1682.862793   0.000000    0.047852        0.047852
5   -1516.728516   -1582.862793 -1528.514404 -1516.728516  166.134277 -1582.862793  46.134277   20.000000       20.000000
6   -1516.728516   -1572.237793 -1448.514404 -1516.728516    2.000000 -1572.237793  46.134277    9.375000        0.000000
7   -1516.728516   -1562.862793 -1357.889404 -1516.728516    5.000000 -1562.862793  46.134277    0.000000       -9.375000
8   -1507.228516   -1553.487793 -1267.264404 -1507.228516    9.500000 -1553.487793  46.134277    0.125000       -9.250000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:19]  --------------------------------------------------------------------------------
[08/23 17:20:19]  Iteration: 36 (0 solution, 35 counterexamples)
[08/23 17:20:21]  Generator returned sat in 1.027761 secs.
[08/23 17:20:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)[0m
[08/23 17:20:21]  Improved gap from 0.0 to 9.375
[08/23 17:20:22]  Improved number of small numbers from 30 to 40 out of a max of 100
[08/23 17:20:22]  Verifer returned sat in 0.965380 secs.
[08/23 17:20:22]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2112.190430   -2112.238037 -1528.514648 -2112.190430    0.097168 -2112.238037   0.000000    0.047607      -99.952393
1   -1892.190308   -2012.238037 -1528.514648 -1892.190308  220.047729 -2012.238037   0.047729  120.000000       20.000000
2   -1892.142578   -1912.238037 -1528.514648 -1892.142578  120.047729 -1912.238037   0.047729   20.047729      -79.952271
3   -1692.238037   -1804.214172 -1528.514648 -1692.238037  219.952271 -1804.214172   0.047729  111.928406       19.952271
4   -1692.190308   -1692.285767 -1506.407227 -1692.190308  111.976135 -1692.285767   0.047729    0.047729      -57.892578
5   -1634.249969   -1634.345428 -1419.856445 -1634.249969   57.988068 -1634.345428   0.047729    0.047729      -13.401459
6   -1603.303665   -1620.895996 -1337.401291 -1603.303665   30.994034 -1620.895996   0.047729   17.544601        0.000000
7   -1603.303665   -1603.351395 -1246.776367 -1603.303665   17.497017 -1603.351395   0.047729    0.000000       -9.375076
8   -1592.555157   -1593.976318 -1246.776123 -1592.555157   10.748508 -1593.976318   0.047729    1.373432      -98.626324
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:20:22]  --------------------------------------------------------------------------------
[08/23 17:20:22]  Iteration: 37 (0 solution, 36 counterexamples)
[08/23 17:20:24]  Generator returned sat in 1.321851 secs.
[08/23 17:20:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -3/2)[0m
[08/23 17:20:24]  Improved gap from 0.00125 to 48.4375
[08/23 17:20:24]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/23 17:20:24]  Verifer returned sat in 0.395368 secs.
[08/23 17:20:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2181.834717   -2301.834717 -1498.925537 -2181.834717    0.096924 -2301.834717   0.000000  120.000000       20.000000
1   -2181.834717   -2181.837158 -1498.925537 -2181.834717    0.002441 -2181.837158   0.000000    0.002441      -80.000000
2   -1981.837158   -2001.834717 -1498.925537 -1981.837158  200.000000 -2001.834717   0.000000   19.997559       19.997559
3   -1961.952148   -1961.954834 -1487.242920 -1961.952148   39.882568 -1961.954834   0.000000    0.002686      -48.434814
4   -1793.514893   -1813.517334 -1487.242920 -1793.514893  168.439941 -1813.517334   0.002441   20.000000       20.000000
5   -1793.514893   -1813.517334 -1435.680420 -1793.514893    0.010000 -1813.517334   0.002441   20.000000      -28.437500
6   -1720.856201   -1765.079834 -1384.180420 -1720.856201   92.658691 -1765.079834   0.002441   44.221191       -4.278809
7   -1668.139893   -1716.579834 -1332.617920 -1668.139893   96.937500 -1716.579834   0.002441   48.437500        0.000000
8   -1668.139893   -1668.142334 -1332.617920 -1668.139893   46.968750 -1668.142334   0.002441    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:25]  --------------------------------------------------------------------------------
[08/23 17:20:25]  Iteration: 38 (0 solution, 37 counterexamples)
[08/23 17:20:26]  Generator returned sat in 0.482933 secs.
[08/23 17:20:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:20:26]  Improved gap from 45.37255859375 to 48.4375
[08/23 17:20:26]  Improved number of small numbers from 55 to 100 out of a max of 100
[08/23 17:20:26]  Verifer returned sat in 0.401006 secs.
[08/23 17:20:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2335.637451   -2455.637207 -1345.123047 -2335.637451    0.096924 -2455.637207   0.000000  119.999756       19.999756
1   -2335.637451   -2355.637207 -1345.122803 -2335.637451    0.002441 -2355.637207   0.000000   19.999756      -80.000000
2   -2135.639648   -2164.069824 -1345.122803 -2135.639648  219.997559 -2164.069824   0.000000   28.430176       19.997803
3   -2073.320068   -2121.757324 -1327.440430 -2073.320068   90.749756 -2121.757324   0.000000   48.437256       -0.000244
4   -1953.317383   -1973.319824 -1327.440430 -1953.317383  168.439941 -1973.319824   0.002441   20.000000       20.000000
5   -1953.317383   -1973.319824 -1275.877930 -1953.317383    0.010000 -1973.319824   0.002441   20.000000      -28.437500
6   -1876.442383   -1924.882324 -1224.315430 -1876.442383   96.875000 -1924.882324   0.002441   48.437500        0.000000
7   -1824.942383   -1876.444824 -1175.815430 -1824.942383   99.937500 -1876.444824   0.002441   51.500000        0.000000
8   -1824.942383   -1824.944824 -1175.815186 -1824.942383   49.937500 -1824.944824   0.002441    0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:26]  --------------------------------------------------------------------------------
[08/23 17:20:26]  Iteration: 39 (0 solution, 38 counterexamples)
[08/23 17:20:28]  Generator returned sat in 1.072390 secs.
[08/23 17:20:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -2)[0m
[08/23 17:20:28]  Improved gap from 48.416531032986114 to 48.4375
[08/23 17:20:29]  Improved number of small numbers from 57 to 60 out of a max of 100
[08/23 17:20:29]  Verifer returned sat in 1.068152 secs.
[08/23 17:20:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1835.955322   -1955.955091 -1338.125430 -1835.955322    0.096924 -1955.955091    0.00000  119.999769       19.999769
1   -1735.953841   -1855.955091 -1338.125430 -1735.953841  220.001250 -1855.955091    0.00125  120.000000       20.000000
2   -1673.300924   -1673.303424 -1338.125430 -1673.300924  182.652917 -1673.303424    0.00125    0.001250      -17.347083
3   -1566.638841   -1615.077591 -1327.440430 -1566.638841  106.663333 -1615.077591    0.00125   48.437500        0.000000
4   -1446.637591   -1466.640091 -1327.440430 -1446.637591  168.438750 -1466.640091    0.00250   20.000000       20.000000
5   -1446.637591   -1466.640091 -1275.878174 -1446.637591    0.010000 -1466.640091    0.00250   20.000000      -28.437744
6   -1365.305924   -1414.786758 -1228.772096 -1365.305924  101.331667 -1414.786758    0.00250   49.478333        0.000000
7   -1316.638841   -1365.308424 -1177.439180 -1316.638841   98.145417 -1365.308424    0.00250   48.667083        0.000000
8   -1316.638841   -1316.641341 -1177.438965 -1316.638841   48.665833 -1316.641341    0.00250    0.000000      -99.999785
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:30]  --------------------------------------------------------------------------------
[08/23 17:20:30]  Iteration: 40 (0 solution, 39 counterexamples)
[08/23 17:20:32]  Generator returned sat in 2.177086 secs.
[08/23 17:20:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:20:33]  Improved gap from 0.0 to 0
[08/23 17:20:33]  Improved number of small numbers from 58 to 68 out of a max of 100
[08/23 17:20:33]  Verifer returned sat in 0.831483 secs.
[08/23 17:20:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1835.955322   -1955.955091 -1327.440430 -1835.955322    0.096680 -1955.955091   0.000000  119.999769       19.999769
1   -1735.953841   -1855.955091 -1327.440430 -1735.953841  220.001250 -1855.955091   0.001250  120.000000       20.000000
2   -1635.953216   -1655.955091 -1327.440430 -1635.953216  220.000625 -1655.955091   0.001875   20.000000       20.000000
3   -1535.953841   -1655.955091 -1327.440430 -1535.953841  119.999375 -1655.955091   0.001875  119.999375       19.999375
4   -1535.453841   -1536.454466 -1247.939805 -1535.453841  120.499375 -1536.454466   0.001875    0.998750        0.000000
5   -1415.453216   -1435.455811 -1247.939805 -1415.453216  120.999375 -1435.455811   0.002500   20.000094       20.000000
6   -1415.453216   -1415.966309 -1167.939805 -1415.453216    0.010000 -1415.966309   0.002500    0.510592        0.000000
7   -1415.453216   -1415.455716 -1067.939941 -1415.453216    0.510000 -1415.455716   0.002500    0.000000       -0.000137
8   -1414.443216   -1415.455566  -968.949951 -1414.443216    1.010000 -1415.455566   0.002500    1.009850       -0.000146
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:33]  --------------------------------------------------------------------------------
[08/23 17:20:33]  Iteration: 41 (0 solution, 40 counterexamples)
[08/23 17:20:38]  Generator returned sat in 4.238704 secs.
[08/23 17:20:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:20:38]  Improved gap from 0.047607421875 to 3.125
[08/23 17:20:39]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:20:39]  Verifer returned sat in 0.243484 secs.
[08/23 17:20:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1755.955322   -1875.955322 -1407.44043 -1755.955322    0.096680 -1875.955322   0.000000  120.000000       20.000000
1   -1755.955322   -1775.955322 -1327.44043 -1755.955322  119.952393 -1775.955322   0.000000   20.000000        0.000000
2   -1755.955322   -1755.955322 -1245.44043 -1755.955322   19.952393 -1755.955322   0.000000    0.000000      -18.000000
3   -1637.907715   -1637.955322 -1245.44043 -1637.907715  118.047607 -1637.955322   0.000000    0.047607        0.047607
4   -1518.907715   -1537.955322 -1245.44043 -1518.907715  119.047607 -1537.955322   0.000000   19.047607       19.047607
5   -1417.907715   -1437.955322 -1245.44043 -1417.907715  120.047607 -1437.955322   0.047607   20.000000       20.000000
6   -1417.907715   -1421.080322 -1165.44043 -1417.907715    1.500000 -1421.080322   0.047607    3.125000        0.000000
7   -1417.907715   -1417.955322 -1068.56543 -1417.907715    2.500000 -1417.955322   0.047607    0.000000       -3.125000
8   -1414.407715   -1414.830322  -971.69043 -1414.407715    3.500000 -1414.830322   0.047607    0.375000       -2.750000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:39]  --------------------------------------------------------------------------------
[08/23 17:20:39]  Iteration: 42 (0 solution, 41 counterexamples)
[08/23 17:20:40]  Generator returned sat in 0.350849 secs.
[08/23 17:20:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:20:40]  Improved gap from 2.75 to 1.5625
[08/23 17:20:40]  Improved number of small numbers from 90 to 100 out of a max of 100
[08/23 17:20:40]  Verifer returned sat in 0.440778 secs.
[08/23 17:20:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1940.764893   -1940.765137 -1222.498047 -1940.764893    0.096191 -1940.765137   0.000000    0.000244        0.000244
1   -1740.717529   -1940.764893 -1222.498047 -1740.717529  200.047607 -1940.764893  80.047607  119.999756       20.000000
2   -1640.765137   -1840.764893 -1222.498047 -1640.765137  219.952148 -1840.764893  80.047607  119.952148       19.952393
3   -1640.765137   -1740.764893 -1222.498047 -1640.765137  119.610107 -1740.764893  80.047607   19.952148      -80.047607
4   -1540.107178   -1620.202637 -1144.623047 -1540.107178  120.610107 -1620.202637  80.047607    0.047852       -1.514648
5   -1418.544922   -1518.640137 -1144.623047 -1418.544922  121.610107 -1518.640137  80.095215   20.000000       20.000000
6   -1418.544922   -1500.202393 -1064.623291 -1418.544922    1.000000 -1500.202393  80.095215    1.562256       -0.000244
7   -1418.107178   -1498.639893  -967.623047 -1418.107178    2.000000 -1498.639893  80.095215    0.437500       -2.562256
8   -1415.544678   -1495.640137  -869.185791 -1415.544678    3.000000 -1495.640137  80.095215    0.000244       -1.562500
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:41]  --------------------------------------------------------------------------------
[08/23 17:20:41]  Iteration: 43 (0 solution, 42 counterexamples)
[08/23 17:20:42]  Generator returned sat in 0.675832 secs.
[08/23 17:20:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:20:42]  Improved gap from 1.4998779296875 to 1.5625
[08/23 17:20:42]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:20:42]  Verifer returned sat in 0.368633 secs.
[08/23 17:20:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1921.685303   -1941.685303 -1222.498047 -1921.685303    0.096191 -1941.685303   0.000000   20.000000       20.000000
1   -1821.669678   -1941.685303 -1222.498047 -1821.669678  120.015625 -1941.685303   0.015625  120.000000       20.000000
2   -1721.685303   -1841.685303 -1222.498047 -1721.685303  219.984375 -1841.685303   0.015625  119.984375       19.984375
3   -1721.685303   -1721.716553 -1165.373047 -1721.685303  119.968750 -1721.716553   0.015625    0.015625      -22.890625
4   -1600.732178   -1600.763428 -1165.373047 -1600.732178  120.968750 -1600.763428   0.015625    0.015625       -1.937500
5   -1478.779053   -1598.810303 -1165.373047 -1478.779053  121.968750 -1598.810303   0.031250  120.000000       20.000000
6   -1478.779053   -1480.372803 -1085.373047 -1478.779053    0.500000 -1480.372803   0.031250    1.562500        0.000000
7   -1478.779053   -1478.810303  -986.935547 -1478.779053    1.500000 -1478.810303   0.031250    0.000000       -1.562500
8   -1476.279053   -1477.247803  -986.935547 -1476.279053    2.500000 -1477.247803   0.031250    0.937500      -99.062500
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:43]  --------------------------------------------------------------------------------
[08/23 17:20:43]  Iteration: 44 (0 solution, 43 counterexamples)
[08/23 17:20:44]  Generator returned sat in 1.146210 secs.
[08/23 17:20:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:20:45]  Improved gap from 0.000625 to 48.4375
[08/23 17:20:45]  Improved number of small numbers from 54 to 64 out of a max of 100
[08/23 17:20:45]  Verifer returned sat in 0.880974 secs.
[08/23 17:20:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1966.176758   -2076.234227 -1166.375791 -1966.176758    0.095703 -2076.234227    0.00000  110.057470       19.999970
1   -1866.175477   -1886.176758 -1166.375791 -1866.175477  210.058750 -1886.176758    0.00125   20.000030       20.000000
2   -1766.176758   -1787.299227 -1166.375791 -1766.176758  119.998750 -1787.299227    0.00125   21.121220       19.998720
3   -1686.175477   -1736.861727 -1166.375791 -1686.175477  101.122500 -1736.861727    0.00125   50.685000        0.000000
4   -1566.174227   -1586.176727 -1166.375791 -1566.174227  170.686250 -1586.176727    0.00250   20.000000       20.000000
5   -1566.174227   -1586.176727 -1114.813291 -1566.174227    0.010000 -1586.176727    0.00250   20.000000      -28.437500
6   -1484.612977   -1537.739227 -1067.937041 -1484.612977  101.561250 -1537.739227    0.00250   53.123750        0.000000
7   -1437.175477   -1484.615477 -1016.374756 -1437.175477  100.561250 -1484.615477    0.00250   47.437500       -1.000215
8   -1432.832352   -1436.177734 -1016.374756 -1432.832352   51.780625 -1436.177734    0.00250    3.342882      -96.657090
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:46]  --------------------------------------------------------------------------------
[08/23 17:20:46]  Iteration: 45 (0 solution, 44 counterexamples)
[08/23 17:20:49]  Generator returned sat in 2.754405 secs.
[08/23 17:20:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:20:49]  Improved gap from 0.0006103515625 to 1.5625
[08/23 17:20:50]  Improved number of small numbers from 48 to 100 out of a max of 100
[08/23 17:20:50]  Verifer returned sat in 0.409335 secs.
[08/23 17:20:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1885.626953   -2005.626709 -1246.925781 -1885.626953    0.095459 -2005.626709   0.000000  119.999756       20.000000
1   -1885.626953   -1885.626953 -1246.925537 -1885.626953    0.047363 -1885.626953   0.000000    0.000000      -79.999756
2   -1685.674316   -1805.626709 -1246.925537 -1685.674316  199.952637 -1805.626709   0.000000  119.952393       19.952881
3   -1685.674316   -1685.721924 -1186.330811 -1685.674316  119.047363 -1685.721924   0.000000    0.047607      -19.452393
4   -1566.174561   -1566.221924 -1186.330811 -1566.174561  119.547363 -1566.221924   0.000000    0.047363        0.047363
5   -1446.174561   -1466.221924 -1186.330811 -1446.174561  120.047363 -1466.221924   0.047363   20.000000       20.000000
6   -1446.174561   -1466.221680 -1106.330811 -1446.174561    1.500000 -1466.221680   0.047363   19.999756        0.000000
7   -1446.174561   -1446.221924 -1007.893311 -1446.174561    2.000000 -1446.221924   0.047363    0.000000       -1.562500
8   -1443.674561   -1444.659424  -909.455811 -1443.674561    2.500000 -1444.659424   0.047363    0.937500       -0.625000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:50]  --------------------------------------------------------------------------------
[08/23 17:20:50]  Iteration: 46 (0 solution, 45 counterexamples)
[08/23 17:20:53]  Generator returned sat in 2.061297 secs.
[08/23 17:20:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:20:53]  Improved gap from 0.0 to 7.8125
[08/23 17:20:54]  Improved number of small numbers from 47 to 62 out of a max of 100
[08/23 17:20:54]  Verifer returned sat in 1.047797 secs.
[08/23 17:20:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1921.359619   -1921.406738 -1260.338043 -1921.359619    0.095459 -1921.406738   0.000000    0.047119        0.023666
1   -1921.359619   -1921.383286 -1260.338043 -1921.359619    0.023682 -1921.383286   0.000000    0.023666      -99.976334
2   -1701.359604   -1821.383057 -1260.338043 -1701.359604  220.023682 -1821.383057   0.023682  119.999771       20.000000
3   -1601.383057   -1621.383286 -1260.338043 -1601.383057  219.976318 -1621.383286   0.023682   19.976547       19.976547
4   -1510.871445   -1566.639404 -1260.338043 -1510.871445  110.488159 -1566.639404   0.023682   55.744278       10.488159
5   -1510.871445   -1510.918808 -1178.615234 -1510.871445   55.744080 -1510.918808   0.023682    0.023682       -7.789032
6   -1482.523087   -1490.359268 -1099.174561 -1482.523087   28.372040 -1490.359268   0.023682    7.812500        0.000000
7   -1475.649567   -1482.546768 -1006.987061 -1475.649567   14.686020 -1482.546768   0.023682    6.873520       -0.938980
8   -1474.680077   -1474.734131 -1006.987061 -1474.680077    7.843010 -1474.734131   0.023682    0.030373      -99.969490
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:20:54]  --------------------------------------------------------------------------------
[08/23 17:20:54]  Iteration: 47 (0 solution, 46 counterexamples)
[08/23 17:20:57]  Generator returned sat in 2.038798 secs.
[08/23 17:20:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:20:57]  Improved gap from 0.02362060546875 to 31.25
[08/23 17:20:58]  Improved number of small numbers from 32 to 100 out of a max of 100
[08/23 17:20:58]  Verifer returned sat in 0.971605 secs.
[08/23 17:20:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -2110.683105   -2110.683105 -1236.040771 -2110.683105    0.095459 -2110.683105   0.000000   0.000000      -99.999756
1   -1973.541504   -1973.588623 -1204.385498 -1973.541504  137.141602 -1973.588623   0.000000   0.047119      -31.202881
2   -1822.385986   -1842.338623 -1204.385498 -1822.385986  151.202637 -1842.338623   0.000000  19.952637       19.952637
3   -1811.088867   -1842.338623 -1135.635498 -1811.088867   31.249756 -1842.338623   0.000000  31.249756       -0.000244
4   -1691.041504   -1711.088623 -1135.635498 -1691.041504  151.297119 -1711.088623   0.047119  20.000000       20.000000
5   -1691.041504   -1711.088623 -1066.885498 -1691.041504    1.000000 -1711.088623   0.047119  20.000000      -11.250000
6   -1643.416504   -1679.838623 -1003.260498 -1643.416504   67.625000 -1679.838623   0.047119  36.375000        0.000000
7   -1563.229004   -1592.385986  -985.588135 -1563.229004  116.562500 -1592.385986   0.047119  29.109863       -2.140137
8   -1473.206299   -1561.135986  -985.588135 -1473.206299  119.132568 -1561.135986   0.047119  87.882568      -12.117432
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:20:58]  --------------------------------------------------------------------------------
[08/23 17:20:58]  Iteration: 48 (0 solution, 47 counterexamples)
[08/23 17:21:01]  Generator returned sat in 2.211389 secs.
[08/23 17:21:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:21:01]  Improved gap from 0.0 to 0
[08/23 17:21:02]  Improved number of small numbers from 69 to 80 out of a max of 100
[08/23 17:21:02]  Verifer returned sat in 0.614248 secs.
[08/23 17:21:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2053.541748   -2173.541504 -1173.182617 -2053.541748    0.095459 -2173.541504     0.0000  119.999756       19.999756
1   -1973.541748   -1973.543945 -1173.182617 -1973.541748  199.999756 -1973.543945     0.0000    0.002197       -0.000244
2   -1905.986328   -1905.986504 -1173.182617 -1905.986328   67.557617 -1905.986504     0.0000    0.000176      -32.444824
3   -1853.206504   -1853.209004 -1173.182617 -1853.206504   52.780000 -1853.209004     0.0000    0.002500      -79.665000
4   -1773.539004   -1773.541504 -1073.185117 -1773.539004   79.670000 -1773.541504     0.0000    0.002500        0.000000
5   -1653.536504   -1673.539062 -1073.185117 -1653.536504  120.005000 -1673.539062     0.0025   20.000059       20.000000
6   -1653.536504   -1653.541504  -993.185303 -1653.536504    0.010000 -1653.541504     0.0025    0.002500       -0.000186
7   -1653.024004   -1653.029004  -894.967529 -1653.024004    0.515000 -1653.029004     0.0025    0.002500       -1.269912
8   -1651.754004   -1651.756592  -794.967773 -1651.754004    1.272500 -1651.756592     0.0025    0.000088       -0.000156
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:21:02]  --------------------------------------------------------------------------------
[08/23 17:21:02]  Iteration: 49 (0 solution, 48 counterexamples)
[08/23 17:21:07]  Generator returned sat in 4.761476 secs.
[08/23 17:21:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:21:08]  Improved gap from 0.02349853515625 to 0
[08/23 17:21:08]  Improved number of small numbers from 38 to 100 out of a max of 100
[08/23 17:21:08]  Verifer returned sat in 0.340273 secs.
[08/23 17:21:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1773.527832   -1773.551514 -1173.182617 -1773.527832    0.095459 -1773.551514   0.000000    0.023682        0.023682
1   -1773.504639   -1773.528076 -1073.229492 -1773.504639    0.046875 -1773.528076   0.000000    0.023438        0.000000
2   -1654.481201   -1773.504395 -1073.229492 -1654.481201  119.046875 -1773.504395   0.000000  119.023193       19.023438
3   -1654.457275   -1673.504639  -992.776855 -1654.457275  119.047119 -1673.504639   0.000000   19.047363       -0.500000
4   -1553.957520   -1553.980957  -992.776855 -1553.957520  119.547119 -1553.980957   0.000000    0.023438       -0.000244
5   -1433.933838   -1553.957275  -992.776855 -1433.933838  120.047119 -1553.957275   0.023438  120.000000       20.000000
6   -1433.933838   -1434.934082  -912.776855 -1433.933838    0.500000 -1434.934082   0.023438    0.976807        0.000000
7   -1433.910645   -1433.957275  -812.800293 -1433.910645    1.000000 -1433.957275   0.023438    0.023193       -0.000244
8   -1432.433838   -1433.933838  -714.276855 -1432.433838    1.500000 -1433.933838   0.023438    1.476562        0.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:21:08]  --------------------------------------------------------------------------------
[08/23 17:21:08]  Iteration: 50 (0 solution, 49 counterexamples)
[08/23 17:21:11]  Generator returned sat in 2.271822 secs.
[08/23 17:21:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:21:12]  Improved gap from 0.0 to 31.25
[08/23 17:21:12]  Improved number of small numbers from 31 to 100 out of a max of 100
[08/23 17:21:12]  Verifer returned sat in 1.252711 secs.
[08/23 17:21:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1836.072998   -1955.596436 -1090.661133 -1836.072998    0.095459 -1955.596436   0.000000  119.523438       20.000000
1   -1736.096680   -1756.073242 -1090.661133 -1736.096680  219.499756 -1756.073242   0.000000   19.976562       19.976318
2   -1656.049561   -1656.072998 -1090.661133 -1656.049561  100.023682 -1656.072998   0.000000    0.023438        0.023438
3   -1656.049561   -1656.072998 -1021.911133 -1656.049561    0.023438 -1656.072998   0.000000    0.023438      -31.226562
4   -1504.799561   -1524.823242 -1021.911133 -1504.799561  151.273438 -1524.823242   0.023438   20.000244       20.000000
5   -1504.799561   -1524.822998  -953.161133 -1504.799561    2.000000 -1524.822998   0.023438   20.000000      -11.250000
6   -1456.674561   -1492.297119  -890.036133 -1456.674561   68.125000 -1492.297119   0.023438   35.599121        0.000000
7   -1374.823242   -1443.697998  -871.887695 -1374.823242  117.450439 -1443.697998   0.023438   68.851318       -0.000244
8   -1342.886719   -1374.846436  -871.887695 -1342.886719  100.787842 -1374.846436   0.023438   31.936279      -68.063721
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:21:13]  --------------------------------------------------------------------------------
[08/23 17:21:13]  Iteration: 51 (0 solution, 50 counterexamples)
[08/23 17:21:21]  Generator returned sat in 7.615546 secs.
[08/23 17:21:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:21:21]  Improved gap from 0.046875 to 0
[08/23 17:21:21]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:21:21]  Verifer returned sat in 0.189150 secs.
[08/23 17:21:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1956.026123   -2076.026123 -1090.661133 -1956.026123    0.095459 -2076.026123        0.0  120.000000       20.000000
1   -1956.026123   -1956.026123 -1090.661133 -1956.026123    0.023438 -1956.026123        0.0    0.000000      -80.000000
2   -1756.049561   -1776.026123 -1090.661133 -1756.049561  199.976562 -1776.026123        0.0   19.976562       19.976562
3   -1756.049561   -1757.526123 -1010.637695 -1756.049561    0.023438 -1757.526123        0.0    1.476562        0.000000
4   -1756.026123   -1756.049561  -910.661133 -1756.026123    1.500000 -1756.049561        0.0    0.023438        0.000000
5   -1754.549561   -1754.572998  -813.590820 -1754.549561    1.500000 -1754.572998        0.0    0.023438       -1.453125
6   -1753.072998   -1753.096436  -715.067383 -1753.072998    1.500000 -1753.096436        0.0    0.023438       -1.453125
7   -1751.596436   -1751.619873  -616.567383 -1751.596436    1.500000 -1751.619873        0.0    0.023438       -1.476562
8   -1750.119873   -1750.119873  -616.567383 -1750.119873    1.500000 -1750.119873        0.0    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 17:21:22]  --------------------------------------------------------------------------------
[08/23 17:21:22]  Iteration: 52 (0 solution, 51 counterexamples)
[08/23 17:21:25]  Generator returned sat in 2.926587 secs.
[08/23 17:21:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:21:25]  Improved gap from 0.000625 to 6.25
[08/23 17:21:26]  Improved number of small numbers from 51 to 98 out of a max of 100
[08/23 17:21:26]  Verifer returned sat in 0.741858 secs.
[08/23 17:21:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2092.065918   -2192.112549 -974.574951 -2092.065918    0.095215 -2192.112549        0.0  100.046631        0.046631
1   -2092.065918   -2092.112549 -974.574951 -2092.065918    0.046875 -2092.112549        0.0    0.046631      -99.953369
2   -1973.608887   -1973.655518 -974.574951 -1973.608887  118.503662 -1973.655518        0.0    0.046631      -81.496338
3   -1772.159424   -1792.860596 -974.574951 -1772.159424  201.496094 -1792.860596        0.0   20.701172       19.953125
4   -1692.112549   -1692.159668 -974.574951 -1692.112549  100.748047 -1692.159668        0.0    0.047119        0.000000
5   -1641.785645   -1667.019043 -924.901855 -1641.785645   50.374023 -1667.019043        0.0   25.233398        0.000000
6   -1641.785645   -1641.785645 -831.152100 -1641.785645   25.187012 -1641.785645        0.0    0.000000       -6.250244
7   -1629.192139   -1635.535400 -737.495361 -1629.192139   12.593506 -1635.535400        0.0    6.343262        0.000000
8   -1629.192139   -1629.192139 -643.745361 -1629.192139    6.296753 -1629.192139        0.0    0.000000       -6.250000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:21:26]  --------------------------------------------------------------------------------
[08/23 17:21:26]  Iteration: 53 (0 solution, 52 counterexamples)
[08/23 17:21:31]  Generator returned sat in 3.469786 secs.
[08/23 17:21:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:21:31]  Improved gap from 0.0 to 3.125
[08/23 17:21:32]  Improved number of small numbers from 24 to 41 out of a max of 100
[08/23 17:21:32]  Verifer returned sat in 1.002261 secs.
[08/23 17:21:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2212.089355   -2215.214355 -1191.542222 -2212.089355    0.095215 -2215.214355   0.000000    3.125000        3.124969
1   -2212.089355   -2215.214325 -1094.667222 -2212.089355    0.023438 -2215.214325   0.000000    3.124969       -0.000031
2   -2092.065948   -2146.845215 -1094.667222 -2092.065948  123.148376 -2146.845215   0.023376   54.755890       20.000000
3   -2092.065948   -2092.112701 -1017.769043 -2092.065948   54.732612 -2092.112701   0.023376    0.023376       -3.101821
4   -2009.990407   -2013.138784  -996.742763 -2009.990407   82.098918 -2013.138784   0.023376    3.125000        0.000000
5   -1889.967031   -2010.013672  -996.742763 -1889.967031  123.148376 -2010.013672   0.046753  119.999888       20.000000
6   -1889.967031   -1893.138916  -916.742763 -1889.967031    2.000000 -1893.138916   0.046753    3.125132        0.000000
7   -1889.967031   -1890.013784  -821.242676 -1889.967031    3.000000 -1890.013784   0.046753    0.000000       -4.499913
8   -1885.467031   -1885.513784  -724.367920 -1885.467031    4.500000 -1885.513784   0.046753    0.000000       -3.125157
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:21:32]  --------------------------------------------------------------------------------
[08/23 17:21:32]  Iteration: 54 (0 solution, 53 counterexamples)
[08/23 17:21:34]  Generator returned sat in 1.570263 secs.
[08/23 17:21:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:21:35]  Improved gap from 1.125 to 0
[08/23 17:21:35]  Improved number of small numbers from 23 to 100 out of a max of 100
[08/23 17:21:35]  Verifer returned sat in 0.646053 secs.
[08/23 17:21:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2344.871826   -2344.918701 -1167.977051 -2344.871826    0.094971 -2344.918701   0.000000    0.046875        0.023438
1   -2344.871826   -2344.895264 -1068.000488 -2344.871826    0.023193 -2344.895264   0.000000    0.023438        0.000000
2   -2224.848389   -2291.239014 -1068.000488 -2224.848389  120.046875 -2291.239014   0.023438   66.367188       20.000000
3   -2224.848389   -2244.871826  -996.742676 -2224.848389   66.343750 -2244.871826   0.023438   20.000000       -8.742188
4   -2145.332764   -2145.379639  -996.742676 -2145.332764   99.515625 -2145.379639   0.023438    0.023438      -29.226562
5   -1996.082764   -2116.129395  -996.742676 -1996.082764  149.273438 -2116.129395   0.046875  119.999756       20.000000
6   -1996.082764   -1996.152832  -916.742676 -1996.082764    0.500000 -1996.152832   0.046875    0.023193        0.000000
7   -1995.355957   -1996.129639  -817.469482 -1995.355957    0.750000 -1996.129639   0.046875    0.726807        0.000000
8   -1994.957764   -1995.402832  -817.469238 -1994.957764    1.125000 -1995.402832   0.046875    0.398193      -99.601562
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:21:35]  --------------------------------------------------------------------------------
[08/23 17:21:35]  Iteration: 55 (0 solution, 54 counterexamples)
[08/23 17:21:37]  Generator returned sat in 0.684041 secs.
[08/23 17:21:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/23 17:21:37]  Improved gap from 0.023193359375 to 1.5625
[08/23 17:21:38]  Improved number of small numbers from 36 to 65 out of a max of 100
[08/23 17:21:38]  Verifer returned sat in 1.091178 secs.
[08/23 17:21:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2308.761230   -2328.761230 -1184.111084 -2308.761230    0.094971 -2328.761230   0.000000   20.000000       20.000000
1   -2308.761230   -2328.761230 -1184.111084 -2308.761230    0.046875 -2328.761230   0.000000   20.000000      -80.000000
2   -2108.808105   -2228.760986 -1184.111084 -2108.808105  219.953125 -2228.760986   0.000000  119.952881       19.953125
3   -2108.808105   -2108.854705 -1105.580109 -2108.808105   81.010498 -2108.854705   0.000000    0.046600       -1.515900
4   -1987.338958   -2007.292205 -1105.580109 -1987.338958  121.515747 -2007.292205   0.000000   19.953247       19.953247
5   -1825.018585   -1908.854492 -1105.580109 -1825.018585  182.273621 -1908.854492  62.273621   21.562287       20.000000
6   -1825.018585   -1907.291992 -1025.580109 -1825.018585    1.000000 -1907.291992  62.273621   19.999787        0.000000
7   -1825.018585   -1887.292205  -927.142822 -1825.018585    1.500000 -1887.292205  62.273621    0.000000       -1.562713
8   -1822.768585   -1885.729492  -927.142578 -1822.768585    2.250000 -1885.729492  62.273621    0.687287      -99.312469
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:21:38]  --------------------------------------------------------------------------------
[08/23 17:21:38]  Iteration: 56 (0 solution, 55 counterexamples)
[08/23 17:21:47]  Generator returned sat in 7.728814 secs.
[08/23 17:21:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:21:47]  Improved gap from 0.0 to 1.5625
[08/23 17:21:47]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/23 17:21:47]  Verifer returned sat in 0.572169 secs.
[08/23 17:21:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -2478.285889   -2478.317139 -1105.580322 -2478.285889    0.094971 -2478.317139    0.000000    0.031250       -0.000244
1   -2378.285889   -2478.285645 -1105.580322 -2378.285889  100.031250 -2478.285645    0.000000   99.999756       -0.000244
2   -2258.317139   -2278.551514 -1105.580322 -2258.317139  219.968506 -2278.551514    0.000000   20.234375       19.968506
3   -2178.285889   -2278.285645 -1105.580322 -2178.285889  100.265625 -2278.285645    0.000000   99.999756       -0.000244
4   -2078.254395   -2078.285889 -1105.580322 -2078.254395  200.031250 -2078.285889    0.000000    0.031494        0.031250
5   -1678.723389   -2078.285645 -1105.580322 -1678.723389  399.562500 -2078.285645  279.562256  120.000000       20.000000
6   -1678.723389   -1959.848389 -1025.580322 -1678.723389    1.000000 -1959.848389  279.562256    1.562744        0.000000
7   -1678.723389   -1958.285645  -927.142822 -1678.723389    1.500000 -1958.285645  279.562256    0.000000       -1.562500
8   -1676.223389   -1956.723145  -828.705322 -1676.223389    2.500000 -1956.723145  279.562256    0.937500       -0.625000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:21:48]  --------------------------------------------------------------------------------
[08/23 17:21:48]  Iteration: 57 (0 solution, 56 counterexamples)
[08/23 17:21:57]  Generator returned sat in 9.000367 secs.
[08/23 17:21:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:21:58]  Improved gap from 0.0 to 7.8125
[08/23 17:21:58]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:21:58]  Verifer returned sat in 0.394611 secs.
[08/23 17:21:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -2078.770020   -2078.816650 -1193.251953 -2078.770020    0.094971 -2078.816650   0.000000    0.046631        0.046631
1   -2078.770020   -2078.816650 -1193.251953 -2078.770020    0.046631 -2078.816650   0.000000    0.046631      -99.953369
2   -1858.770020   -1978.816650 -1193.251953 -1858.770020  220.046631 -1978.816650   0.046631  120.000000       20.000000
3   -1778.770020   -1779.770020 -1193.251953 -1778.770020  200.000000 -1779.770020   0.046631    0.953369        0.000000
4   -1678.723389   -1730.316650 -1193.251953 -1678.723389  101.000000 -1730.316650   0.046631   51.546631        0.046631
5   -1678.723389   -1678.816650 -1105.580322 -1678.723389   51.500000 -1678.816650   0.046631    0.046631      -12.281738
6   -1652.020020   -1666.488281 -1020.001953 -1652.020020   26.750000 -1666.488281   0.046631   14.421631        0.000000
7   -1652.020020   -1652.066650  -927.814453 -1652.020020   14.375000 -1652.066650   0.046631    0.000000       -7.812500
8   -1643.832520   -1644.254150  -927.814453 -1643.832520    8.187500 -1644.254150   0.046631    0.375000      -99.625000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:21:58]  --------------------------------------------------------------------------------
[08/23 17:21:58]  Iteration: 58 (0 solution, 57 counterexamples)
[08/23 17:22:01]  Generator returned sat in 1.485877 secs.
[08/23 17:22:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:22:01]  Improved gap from 0.0 to 0
[08/23 17:22:01]  Improved number of small numbers from 76 to 100 out of a max of 100
[08/23 17:22:01]  Verifer returned sat in 0.284717 secs.
[08/23 17:22:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -2078.816406   -2078.817139 -1292.252197 -2078.816406    0.094482 -2078.817139   0.000000   0.000732        0.000244
1   -2078.816406   -2078.816650 -1292.252197 -2078.816406    0.000244 -2078.816650   0.000000   0.000244      -99.999756
2   -1858.770264   -1878.816650 -1292.252197 -1858.770264  220.046387 -1878.816650   0.046387  20.000000       20.000000
3   -1777.770508   -1778.816650 -1292.252197 -1777.770508  100.999756 -1778.816650   0.046387   0.999756        0.999756
4   -1777.770264   -1778.816650 -1193.252197 -1777.770264    1.000000 -1778.816650   0.046387   1.000000        0.000000
5   -1777.770264   -1777.816650 -1093.252197 -1777.770264    1.000000 -1777.816650   0.046387   0.000000        0.000000
6   -1776.770264   -1776.816650  -995.251953 -1776.770264    1.000000 -1776.816650   0.046387   0.000000       -0.999756
7   -1775.770264   -1775.816895  -895.252197 -1775.770264    1.000000 -1775.816895   0.046387   0.000244        0.000000
8   -1774.770508   -1774.816895  -895.252197 -1774.770508    1.000000 -1774.816895   0.046387   0.000000      -99.000244
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 17:22:01]  --------------------------------------------------------------------------------
[08/23 17:22:01]  Iteration: 59 (0 solution, 58 counterexamples)
[08/23 17:22:05]  Generator returned sat in 2.568682 secs.
[08/23 17:22:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:22:05]  Improved gap from 0.0 to 0
[08/23 17:22:05]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/23 17:22:05]  Verifer returned sat in 0.240184 secs.
[08/23 17:22:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -1935.450439   -1955.450439 -1273.298584 -1935.450439    0.094482 -1955.450439   0.000000   20.000000       20.000000
1   -1935.450439   -1935.496826 -1273.298584 -1935.450439    0.046387 -1935.496826   0.000000    0.046387      -80.000000
2   -1735.404053   -1855.450439 -1273.298584 -1735.404053  200.092773 -1855.450439   0.046387  120.000000       20.000000
3   -1635.450439   -1655.450439 -1273.298584 -1635.450439  219.953613 -1655.450439   0.046387   19.953613       19.953613
4   -1635.450439   -1636.043213 -1193.252197 -1635.450439    0.500000 -1636.043213   0.046387    0.546387        0.000000
5   -1635.450439   -1635.496826 -1093.252197 -1635.450439    0.500000 -1635.496826   0.046387    0.000000        0.000000
6   -1634.950439   -1635.450439  -993.752197 -1634.950439    0.500000 -1635.450439   0.046387    0.453613        0.000000
7   -1634.904053   -1634.996826  -893.798584 -1634.904053    0.500000 -1634.996826   0.046387    0.046387        0.000000
8   -1634.450439   -1634.950439  -893.798584 -1634.450439    0.500000 -1634.950439   0.046387    0.453613      -99.546387
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, total_losses=0.[0m
[08/23 17:22:05]  --------------------------------------------------------------------------------
[08/23 17:22:05]  Iteration: 60 (0 solution, 59 counterexamples)
[08/23 17:22:08]  Generator returned sat in 1.373982 secs.
[08/23 17:22:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:22:08]  Improved gap from 0.0230712890625 to 3.125
[08/23 17:22:09]  Improved number of small numbers from 33 to 47 out of a max of 100
[08/23 17:22:09]  Verifer returned sat in 1.019433 secs.
[08/23 17:22:09]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -2715.871826   -2715.917969 -1273.298828 -2715.871826    0.094482 -2715.917969   0.000000   0.046143        0.023126
1   -2715.871826   -2715.894952 -1273.298828 -2715.871826    0.023193 -2715.894952   0.000000   0.023126      -99.976874
2   -2495.871819   -2515.894952 -1273.298828 -2495.871819  220.023132 -2515.894952   0.023132  20.000000       20.000000
3   -2436.053314   -2436.099578 -1273.298828 -2436.053314   79.818506 -2436.099578   0.023132   0.023132      -20.181494
4   -2315.848687   -2315.894952 -1273.298828 -2315.848687  120.227759 -2315.894952   0.023132   0.023132        0.023132
5   -2135.030181   -2215.895020 -1273.298828 -2135.030181  180.841638 -2215.895020  60.864771  20.000068       20.000000
6   -2135.030181   -2199.020020 -1193.298828 -2135.030181    1.500000 -2199.020020  60.864771   3.125068        0.000000
7   -2135.030181   -2195.894952 -1096.424072 -2135.030181    2.750000 -2195.894952  60.864771   0.000000       -3.125244
8   -2130.405181   -2191.270020 -1001.049072 -2130.405181    4.625000 -2191.270020  60.864771   0.000068       -3.125244
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:22:09]  --------------------------------------------------------------------------------
[08/23 17:22:09]  Iteration: 61 (0 solution, 60 counterexamples)
[08/23 17:22:12]  Generator returned sat in 1.780340 secs.
[08/23 17:22:12]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1/2)[0m
[08/23 17:22:12]  Improved gap from 1.6250678168402777 to 1.5625
[08/23 17:22:13]  Improved number of small numbers from 44 to 50 out of a max of 100
[08/23 17:22:13]  Verifer returned sat in 1.010699 secs.
[08/23 17:22:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -2698.997070   -2799.020020 -1273.298828 -2698.997070    0.094482 -2799.020020   80.023132   19.999817       19.999817
1   -2698.997070   -2799.020020 -1273.298828 -2698.997070    0.023193 -2799.020020   80.023132   19.999817      -80.000183
2   -2498.973755   -2599.020020 -1273.298828 -2498.973755  220.023132 -2599.020020   80.046265   20.000000       20.000000
3   -2431.183008   -2511.229272 -1273.298828 -2431.183008   87.790747 -2511.229272   80.046265    0.000000      -12.209253
4   -2298.996887   -2399.020020 -1273.298828 -2298.996887  132.186121 -2399.020020   80.046265   19.976868       19.976868
5   -2120.194574   -2399.020020 -1273.298828 -2120.194574  198.779181 -2399.020020  158.825446  120.000000       20.000000
6   -2120.194574   -2280.582764 -1193.298828 -2120.194574    0.500000 -2280.582764  158.825446    1.562744        0.000000
7   -2120.194574   -2279.020020 -1094.861328 -2120.194574    1.250000 -2279.020020  158.825446    0.000000       -1.562500
8   -2117.819574   -2277.457520 -1094.861328 -2117.819574    2.375000 -2277.457520  158.825446    0.812500      -99.187500
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:22:13]  --------------------------------------------------------------------------------
[08/23 17:22:13]  Iteration: 62 (0 solution, 61 counterexamples)
[08/23 17:22:19]  Generator returned sat in 4.628338 secs.
[08/23 17:22:19]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 2)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:22:19]  Improved gap from 0.0 to 9.375
[08/23 17:22:19]  Improved number of small numbers from 63 to 100 out of a max of 100
[08/23 17:22:19]  Verifer returned sat in 0.823071 secs.
[08/23 17:22:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3390.674072   -3490.719971 -1351.719971 -3390.674072    0.094482 -3490.719971        0.0  100.045898        0.046143
1   -3390.674072   -3390.719971 -1351.719971 -3390.674072    0.046143 -3390.719971        0.0    0.045898      -99.953857
2   -3190.720215   -3277.720215 -1351.719971 -3190.720215  199.999756 -3277.720215        0.0   87.000000        0.000000
3   -3070.720215   -3095.673828 -1351.719971 -3070.720215  207.000000 -3095.673828        0.0   24.953613       20.000000
4   -2990.673828   -3044.719971 -1351.719971 -2990.673828  105.000000 -3044.719971        0.0   54.046143        0.046387
5   -2990.673828   -2990.720215 -1261.094971 -2990.673828   54.000000 -2990.720215        0.0    0.046387       -9.328613
6   -2962.220215   -2981.345215 -1180.219971 -2962.220215   28.500000 -2981.345215        0.0   19.125000        0.000000
7   -2962.220215   -2962.220215 -1089.594971 -2962.220215   15.750000 -2962.220215        0.0    0.000000       -9.375000
8   -2952.845215   -2952.845215 -1089.594971 -2952.845215    9.375000 -2952.845215        0.0    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=0.[0m
[08/23 17:22:20]  --------------------------------------------------------------------------------
[08/23 17:22:20]  Iteration: 63 (0 solution, 62 counterexamples)
[08/23 17:22:23]  Generator returned sat in 1.952246 secs.
[08/23 17:22:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)[0m
[08/23 17:22:23]  Improved gap from 0.0025 to 3.125
[08/23 17:22:24]  Improved number of small numbers from 55 to 71 out of a max of 100
[08/23 17:22:24]  Verifer returned sat in 0.896811 secs.
[08/23 17:22:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3377.868164   -3377.868164 -1364.572039 -3377.868164    0.094482 -3377.868164     0.0000    0.000000       -0.000018
1   -3257.870850   -3377.868146 -1364.572039 -3257.870850  119.997314 -3377.868146     0.0000  119.997297       19.997297
2   -3157.865646   -3238.953857 -1364.572039 -3157.865646  220.002500 -3238.953857     0.0025   81.085711       20.000000
3   -3157.865646   -3160.993146 -1284.572039 -3157.865646   81.083333 -3160.993146     0.0025    3.125000        0.000000
4   -3037.865646   -3084.740646 -1284.572039 -3037.865646  123.125000 -3084.740646     0.0025   46.872500       20.000000
5   -2898.550646   -2957.868164 -1284.572039 -2898.550646  186.187500 -2957.868164    39.3175   20.000018       20.000000
6   -2898.550646   -2957.867920 -1204.572039 -2898.550646    0.010000 -2957.867920    39.3175   19.999774        0.000000
7   -2898.550646   -2937.868146 -1107.697266 -2898.550646    1.515000 -2937.868146    39.3175    0.000000       -3.125226
8   -2894.778146   -2934.742920 -1107.697021 -2894.778146    3.772500 -2934.742920    39.3175    0.647274      -99.352482
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:22:24]  --------------------------------------------------------------------------------
[08/23 17:22:24]  Iteration: 64 (0 solution, 63 counterexamples)
[08/23 17:22:31]  Generator returned sat in 6.162757 secs.
[08/23 17:22:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 3/2)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1/2)[0m
[08/23 17:22:31]  Improved gap from 0.0458984375 to 3.125
[08/23 17:22:32]  Improved number of small numbers from 55 to 100 out of a max of 100
[08/23 17:22:32]  Verifer returned sat in 0.565915 secs.
[08/23 17:22:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3357.868164   -3377.868408 -1364.572266 -3357.868164    0.094238 -3377.868408   0.000000   20.000244       20.000000
1   -3257.845215   -3377.867920 -1364.572266 -3257.845215  120.023193 -3377.867920   0.022949  119.999756       20.000000
2   -3257.845215   -3257.868164 -1347.697266 -3257.845215    0.022705 -3257.868164   0.022949    0.000000      -63.125000
3   -3163.295898   -3163.318848 -1347.697266 -3163.295898   94.549316 -3163.318848   0.022949    0.000000      -68.575684
4   -2974.697266   -2994.743164 -1347.697266 -2974.697266  188.598633 -2994.743164   0.045898   20.000000       20.000000
5   -2974.697266   -2977.868164 -1267.697266 -2974.697266    1.500000 -2977.868164   0.045898    3.125000        0.000000
6   -2974.697266   -2974.743164 -1170.822266 -2974.697266    2.500000 -2974.743164   0.045898    0.000000       -3.125000
7   -2970.197266   -2970.266113 -1075.299316 -2970.197266    4.500000 -2970.266113   0.045898    0.022949       -3.102051
8   -2961.720215   -2961.766113 -1075.299316 -2961.720215    8.500000 -2961.766113   0.045898    0.000000      -94.625000
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:22:32]  --------------------------------------------------------------------------------
[08/23 17:22:32]  Iteration: 65 (0 solution, 64 counterexamples)
[08/23 17:22:36]  Generator returned sat in 3.160800 secs.
[08/23 17:22:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/23 17:22:36]  Improved gap from 2.52 to 1.5625
[08/23 17:22:37]  Improved number of small numbers from 75 to 75 out of a max of 100
[08/23 17:22:37]  Verifer returned sat in 0.674448 secs.
[08/23 17:22:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -3357.868164   -3377.868408 -1364.572266 -3357.868164    0.094238 -3377.868408   0.000000   20.000244         20.0000
1   -3257.845215   -3377.867920 -1364.572266 -3257.845215  120.023193 -3377.867920   0.022949  119.999756         20.0000
2   -3257.845215   -3257.868164 -1286.134766 -3257.845215    0.022705 -3257.868164   0.022949    0.000000         -1.5625
3   -3177.619215   -3177.642164 -1286.134766 -3177.619215   80.226000 -3177.642164   0.022949    0.000000        -21.3365
4   -3056.280215   -3056.305664 -1286.134766 -3056.280215  121.339000 -3056.305664   0.022949    0.002500          0.0025
5   -2873.274215   -3056.305664 -1286.134766 -2873.274215  183.008500 -3056.305664  63.031449  120.000000         20.0000
6   -2873.274215   -2937.868164 -1206.134766 -2873.274215    0.010000 -2937.868164  63.031449    1.562500          0.0000
7   -2873.274215   -2936.305664 -1107.697266 -2873.274215    1.015000 -2936.305664  63.031449    0.000000         -1.5625
8   -2870.751715   -2934.743164 -1009.259766 -2870.751715    2.522500 -2934.743164  63.031449    0.960000         -0.6025
fefficient=False, bounded_queue=True, bounded_loss=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, total_losses=1.[0m
[08/23 17:22:37]  --------------------------------------------------------------------------------
[08/23 17:22:37]  Iteration: 66 (0 solution, 65 counterexamples)
[08/23 17:22:38]  Generator returned unsat in 0.285282 secs.
[08/23 17:22:38]  [96mNo more solutions found[0m
[08/23 17:22:38]  Final solutions:
[08/23 17:22:38]  Took 211.604201 secs.
