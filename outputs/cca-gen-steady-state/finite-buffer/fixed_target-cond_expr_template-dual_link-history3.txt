[11/09 15:05:01]  Ideal: desired_util_f=1, desired_queue_bound_multiplier=0.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=0.5, desired_loss_amount_bound_alpha=3
[11/09 15:05:01]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=1.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=1.5, desired_loss_amount_bound_alpha=3
[11/09 15:05:08]  --------------------------------------------------------------------------------
[11/09 15:05:08]  Iteration: 1 (0 solution, 0 counterexamples)
[11/09 15:05:08]  Generator returned sat in 0.005833 secs.
[11/09 15:05:08]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:05:09]  Improved number of small numbers from 202 to 202 out of a max of 202
[11/09 15:05:09]  Verifer returned sat in 0.493863 secs.
[11/09 15:05:09]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0            -399.90625             -399.9375          -399.90625          0.03125          0.03125           -399.9375           0.03125    0.00000
1            -299.87500             -299.9375          -299.87500        100.03125        100.03125           -299.9375           0.03125    0.03125
2             400.12500             -199.9375           400.12500        700.03125        700.03125           -199.9375           0.06250  600.00000
3             400.12500              -99.9375           400.12500         99.96875         99.96875            -99.9375           0.06250  500.00000
4             400.12500                0.0625           400.12500         99.96875         99.96875              0.0625           0.06250  400.00000
5             400.12500              100.0625           400.12500         99.96875         99.96875            100.0625           0.06250  300.00000
6             400.12500              200.0625           400.12500         99.96875         99.96875            200.0625           0.06250  200.00000
7             400.12500              300.0625           400.12500         99.96875         99.96875            300.0625           0.06250  100.00000
8             400.12500              400.0625           400.12500         99.96875         99.96875            400.0625           0.06250    0.00000
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=600, alpha=3199/32.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0           -12.21875          -318.09375         -12.21875        0.03125        0.03125        -318.09375             0.0                 -318.09375      318.09375  305.87500       305.87500
1           -12.18750          -318.09375         -12.18750      305.90625      305.90625        -318.09375             0.0                    0.00000      318.09375  305.90625       205.90625
2           -12.15625          -118.09375         -12.15625      305.93750      305.93750        -118.09375             0.0                 -118.09375      318.09375  105.93750       105.93750
3           -12.15625          -118.09375         -12.15625        5.96875        5.96875        -118.09375             0.0                  -12.12500      318.09375  105.93750         5.93750
4           -12.15625           -18.09375         -12.15625        5.96875        5.96875         -18.09375             0.0                  -18.12500      412.15625    5.93750         0.00000
5           -12.12500           -12.15625         -12.12500        5.96875        5.96875         -12.15625             0.0                   -6.18750      506.21875    0.03125        -5.90625
6            -6.18750            -6.21875          -6.18750        5.96875        5.96875          -6.21875             0.0                   -6.25000      606.18750    0.03125         0.00000
7            -0.25000            -0.25000          -0.25000        5.96875        5.96875          -0.25000             0.0                   -0.25000      700.25000    0.00000         0.00000
8             5.71875            -0.25000           5.71875        5.96875        5.96875          -0.25000             0.0                   99.78125      700.25000    5.96875       -94.03125
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=600, alpha=191/32.[0m
[11/09 15:05:16]  --------------------------------------------------------------------------------
[11/09 15:05:16]  Iteration: 2 (0 solution, 1 counterexamples)
[11/09 15:05:16]  Generator returned sat in 0.111389 secs.
[11/09 15:05:16]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:05:18]  Improved number of small numbers from 80 to 156 out of a max of 202
[11/09 15:05:18]  Verifer returned sat in 2.554129 secs.
[11/09 15:05:18]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0            200.124512           -299.885010          200.124512         0.030762         0.030762         -299.885010          0.000000  500.009521
1            300.126709           -199.885010          300.126709       600.011719       600.011719         -199.885010          0.001953  500.009766
2            400.124756            -99.885010          400.124756       600.007812       600.007812          -99.885010          0.001953  500.007812
3            400.124756              0.114990          400.124756         0.005859         0.005859            0.114990          0.001953  400.007812
4            400.124756            100.114990          400.124756         0.005859         0.005859          100.114990          0.001953  300.007812
5            400.124756            200.114990          400.124756         0.005859         0.005859          200.114990          0.001953  200.007812
6            400.124756            300.114990          400.124756         0.005859         0.005859          300.114990          0.001953  100.007812
7            400.124756            400.114990          400.124756         0.005859         0.005859          400.114990          0.001953    0.007812
8            400.124756            400.122803          400.124756         0.005859         0.005859          400.122803          0.001953    0.000000
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=256005/512, alpha=1/256.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         -418.121094         -418.123062       -418.121094       0.031006       0.031006       -418.123062             0.0                -418.119385     318.093506    0.001968      -99.998032
1          106.875969         -318.123062        106.875969     524.999031     524.999031       -318.123062             0.0                  -0.000244     318.093506  424.999031      324.999031
2          106.875969         -118.123291        106.875969     424.997070     424.997070       -118.123291             0.0                -118.123291     318.093506  224.999260      224.999031
3          106.875969          -18.123291        106.875969      24.997093      24.997093        -18.123291             0.0                 -18.123291     318.093506  124.999260      124.999031
4          106.875969          -18.123062        106.875969      24.997093      24.997093        -18.123062             0.0                 -18.125000     318.093506  124.999031       24.999031
5          106.875969           81.876938        106.875969      24.997093      24.997093         81.876938             0.0                  81.875000     393.094475   24.999031        0.000000
6          106.875969          106.875969        106.875969      24.997093      24.997093        106.875969             0.0                 106.877686     493.094238    0.000000       -0.000237
7          131.873062          131.871124        131.873062      24.997093      24.997093        131.871124             0.0                 131.871124     568.097168    0.001938       -0.000214
8          156.868217          131.874756        156.868217      24.997093      24.997093        131.874756             0.0                 131.874756     643.102051   24.993462       -0.000175
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=256005/512, alpha=3276419/196608.[0m
[11/09 15:05:25]  --------------------------------------------------------------------------------
[11/09 15:05:25]  Iteration: 3 (0 solution, 2 counterexamples)
[11/09 15:05:26]  Generator returned sat in 0.121672 secs.
[11/09 15:05:26]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 15:05:29]  Improved number of small numbers from 73 to 159 out of a max of 202
[11/09 15:05:29]  Verifer returned sat in 3.652772 secs.
[11/09 15:05:29]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0            410.159424            410.151672          410.159424         0.030762         0.030762          410.151672               0.0  0.007751
1            470.151672            470.151672          470.151672        60.000000        60.000000          470.151672               0.0  0.000000
2            480.132446            480.132446          480.132446         9.980774         9.980774          480.132446               0.0  0.000000
3            520.124756            520.124756          520.124756        39.992310        39.992310          520.124756               0.0  0.000000
4            540.117065            540.117065          540.117065        19.992310        19.992310          540.117065               0.0  0.000000
5            570.113220            570.113220          570.113220        29.996155        29.996155          570.113220               0.0  0.000000
6            590.113220            590.113220          590.113220        20.000000        20.000000          590.113220               0.0  0.000000
7            610.120911            610.120911          610.120911        20.007690        20.007690          610.120911               0.0  0.000000
8            630.113220            630.113220          630.113220        19.992310        19.992310          630.113220               0.0  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=204689/4096, alpha=163777/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t       queue_t  bottle_queue_t
0          -82.943359         -132.916260        -82.943359       0.031006       0.031006       -132.916260        0.000000                -132.916260     168.127930     49.972900       49.972900
1          -82.943359         -132.916260        -82.943359       0.007568       0.007568       -132.916260        0.000000                -132.924072     208.228027     49.972900       -9.927002
2          -43.097168          -73.016357        -43.097168      89.819092      89.819092        -73.016357        0.000000                 -73.023926     238.124268     29.919189      -40.184570
3          -43.097168           -2.912598        -43.097168      29.911621      29.911621         -2.912598        0.000000                  -2.920166     428.273926    -40.184570       49.965088
4           56.918213            6.937256         56.918213     100.015381     100.015381          6.937256        0.007812                   6.937256     428.274170     49.973145       49.972900
5           56.918213            6.937500         56.918213      49.965332      49.965332          6.937500        0.007812                  56.918213     478.301025     49.972900       -0.000244
6           56.918213           56.910645         56.918213      19.992188      19.992188         56.910645    23984.992432                  56.902832   24613.258789 -23984.984863       49.972900
7           76.910400       -23908.089355         76.910400      19.992188      19.992188     -23908.089355    23984.992432              -23908.089355   24623.293457      0.007324      -20.000244
8           96.895264       -23888.081787         96.895264      19.992188      19.992188     -23888.081787    23984.992432              -23888.089355   24773.273926     -0.015381       49.965088
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=98242529/4096, 
, buffer=204689/4096, alpha=2559/128.[0m
[11/09 15:05:36]  --------------------------------------------------------------------------------
[11/09 15:05:36]  Iteration: 4 (0 solution, 3 counterexamples)
[11/09 15:05:37]  Generator returned sat in 0.553625 secs.
[11/09 15:05:37]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:05:41]  Improved number of small numbers from 110 to 140 out of a max of 202
[11/09 15:05:41]  Verifer returned sat in 3.879441 secs.
[11/09 15:05:41]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0            196.170654            196.163208          196.170654         0.030518         0.030518          196.163208          0.000000   0.007446
1            296.163208            296.163208          296.163208       100.000000       100.000000          296.163208          0.000000   0.000000
2            324.193970            324.193970          324.193970        28.030762        28.030762          324.193970          0.000000   0.000000
3            452.224731            424.193970          452.224731       128.030762       128.030762          424.193970          0.007690  28.023071
4            552.232422            524.193970          552.232422       128.030762       128.030762          524.193970          0.015381  28.023071
5            724.209351            624.193970          724.209351       200.000000       200.000000          624.193970         71.992310  28.023071
6            896.186279            724.193970          896.186279       200.000000       200.000000          724.193970        143.969238  28.023071
7           1068.163208            824.193970         1068.163208       200.000000       200.000000          824.193970        215.946167  28.023071
8           1240.140137            924.193970         1240.140137       200.000000       200.000000          924.193970        287.923096  28.023071
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=6, loss_amount=2358603/8192, 
, buffer=229565/8192, alpha=1/128.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0          493.006592          364.983643        493.006592       0.031006       0.031006        364.983643        0.000000                 464.991455    -429.771973  128.022949       28.022949
1          493.006592          464.991333        493.006592       0.007812       0.007812        464.991333        0.000000                 464.991333    -411.848877   28.015259      -54.053955
2          547.052856          547.060547        547.052856      82.061523      82.061523        547.060547        0.000000                 547.052979    -285.794922   -0.007690       26.046265
3          729.129761          521.006714        729.129761     182.076904     182.076904        521.006714      162.061523                 521.006714    -203.833496   46.061523       28.023071
4          739.083618          539.045166        739.083618      56.015381      56.015381        539.045166      162.061523                 549.014404    -113.795044   37.976929       28.015381
5          739.083618          549.006714        739.083618      19.992432      19.992432        549.006714      162.069092                 548.999023     -13.779785   28.007812       28.023071
6          739.083618          557.029785        739.083618      28.000000      28.000000        557.029785      162.069092                 557.029785      78.181885   19.984741       19.984741
7          739.091309          557.037476        739.091309      19.992432      19.992432        557.037476      162.069092                 557.037476     178.174072   19.984741       19.984619
8          739.098999          557.037598        739.098999      19.992432      19.992432        557.037598      162.076904                 557.045166     286.212646   19.984497       28.023071
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=3, loss_amount=63/4096, 
, buffer=229565/8192, alpha=81889/4096.[0m
[11/09 15:05:48]  --------------------------------------------------------------------------------
[11/09 15:05:48]  Iteration: 5 (0 solution, 4 counterexamples)
[11/09 15:05:48]  Generator returned unsat in 0.314270 secs.
[11/09 15:05:48]  [96mNo more solutions found[0m
[11/09 15:05:48]  Final solutions:
[11/09 15:05:48]  Took 46.927081 secs.
