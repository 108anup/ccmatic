[11/09 15:15:06]  Ideal: desired_util_f=1, desired_queue_bound_multiplier=0.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=0.5, desired_loss_amount_bound_alpha=3
[11/09 15:15:06]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=1.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=1.5, desired_loss_amount_bound_alpha=3
[11/09 15:15:14]  --------------------------------------------------------------------------------
[11/09 15:15:14]  Iteration: 1 (0 solution, 0 counterexamples)
[11/09 15:15:14]  Generator returned sat in 0.006338 secs.
[11/09 15:15:14]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:15:16]  Improved number of small numbers from 202 to 202 out of a max of 202
[11/09 15:15:16]  Verifer returned sat in 2.110293 secs.
[11/09 15:15:16]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0           -300.541667           -300.541667         -300.541667           0.1250           0.1250         -300.541667              0.00     0.0000
1           6253.145833           -200.541667         6253.145833        6553.6875        6553.6875         -200.541667              0.00  6453.6875
2           6253.145833           -100.541667         6253.145833           0.1250           0.1250         -100.541667              0.00  6353.6875
3           6253.145833             -0.541667         6253.145833         408.5000         408.5000           -0.541667              0.00  6253.6875
4           6253.145833             99.458333         6253.145833        1214.9375        1214.9375           99.458333              0.00  6153.6875
5           6253.145833            199.458333         6253.145833        2827.8125        2827.8125          199.458333              0.00  6053.6875
6           6253.145833            299.458333         6253.145833        6053.5625        6053.5625          299.458333              0.00  5953.6875
7          12804.520833            399.458333        12804.520833       12505.0625       12505.0625          399.458333           5951.25  6453.8125
8          31758.770833            499.458333        31758.770833       25408.0625       25408.0625          499.458333          24805.50  6453.8125
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=49611/2, 
, buffer=103261/16, alpha=33/8.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0        -132935.5625        -133035.6875      -132935.5625         0.1250         0.1250      -133035.6875          0.0000               -132935.5625     -1736.0000    100.1250          0.1250
1        -132935.5625        -132935.6875      -132935.5625       100.1250       100.1250      -132935.6875          0.0000               -132935.4375         0.0000      0.1250       1636.1250
2        -128117.8750        -134571.5625      -128117.8750      4817.8125      4817.8125      -134571.5625          0.0000               -134571.5625        99.8750   6453.6875       6453.6875
3        -128017.6250        -134571.5625      -128017.6250      6553.9375      6553.9375      -134571.5625          0.1250               -134471.4375        99.8750   6553.8125       6453.8125
4        -124745.2500        -134471.4375      -124745.2500      9826.1875      9826.1875      -134471.4375       3172.5000               -134471.4375        99.8750   6553.6875       6453.8125
5        -111456.2500        -134371.4375      -111456.2500     19842.6875     19842.6875      -134371.4375      16461.3750               -134371.4375       199.7500   6453.8125       6453.8125
6         -77834.3750        -134371.4375       -77834.3750     40075.6875     40075.6875      -134371.4375      56536.9375               -134371.3125      6753.4375      0.1250       6453.8125
7           2506.9375        -140825.0000         2506.9375     80341.4375     80341.4375      -140825.0000      56536.9375               -140825.0000    -73488.0000  86795.0000       6453.6875
8          63477.7500         -60483.6875        63477.7500    147765.8125    147765.8125       -60483.6875      56537.0625                  6940.8125   -134358.5625  67424.3750       6453.8125
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, loss_amount=904591/16, 
, buffer=103261/16, alpha=159/8.[0m
[11/09 15:15:25]  --------------------------------------------------------------------------------
[11/09 15:15:25]  Iteration: 2 (0 solution, 1 counterexamples)
[11/09 15:15:25]  Generator returned sat in 0.738360 secs.
[11/09 15:15:25]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 15:15:33]  Improved number of small numbers from 36 to 65 out of a max of 202
[11/09 15:15:33]  Verifer returned sat in 7.720641 secs.
[11/09 15:15:33]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          12731.196289           7006.704150        12731.196289         0.124756         0.124756         7006.704150       5324.468974  400.023165
1          12831.204313           7106.704150        12831.204313       500.031189       500.031189         7106.704150       5324.476771  400.023392
2          12831.204313           7206.704150        12831.204313         0.966858         0.966858         7206.704150       5324.476771  300.023392
3          12831.204313           7306.704150        12831.204313         0.467834         0.467834         7306.704150       5324.476771  200.023392
4          12831.204313           7406.704150        12831.204313         0.218323         0.218323         7406.704150       5324.476771  100.023392
5          12831.204313           7506.704150        12831.204313         0.093567         0.093567         7506.704150       5324.476771    0.023392
6          12831.212110           7506.735339        12831.212110         0.031189         0.031189         7506.735339       5324.476771    0.000000
7          12831.219907           7506.743136        12831.219907         0.007797         0.007797         7506.743136       5324.476771    0.000000
8          12831.227704           7506.750933        12831.227704         0.007797         0.007797         7506.750933       5324.476771    0.000000
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=26215933/65536, alpha=511/65536.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124712.081787      -128295.197855    -124712.081787       0.124512       0.124512    -128295.197855     3172.491959             -128195.190186    -547.880848  410.624109      310.624109
1      -124712.081787      -128195.190058    -124712.081787       0.007812       0.007812    -128195.190058     3172.491959             -128195.190058    -447.888645  310.616312      310.616312
2      -124712.081787      -128195.190058    -124712.081787     134.007797     134.007797    -128195.190058     3172.491959             -128195.197754    -491.769493  310.616312      166.735464
3      -124712.081787      -128051.309210    -124712.081787     258.523392     258.523392    -128051.309210     3172.491959             -128051.316895    -158.489502  166.735464      400.015455
4      -124470.289961      -128284.581543    -124470.289961     408.527290     408.527290    -128284.581543     3172.499756             -128284.581543    -300.265594  641.791826      400.023392
5      -124470.289961      -128042.813108    -124470.289961      16.992203      16.992203    -128042.813108     3572.515350             -128042.821045     199.750000    0.007797      400.023392
6      -124453.305555      -128442.828613    -124453.305555      16.992203      16.992203    -128442.828613     3589.499512             -128442.828613     299.749756  400.023546      400.023392
7      -124453.305555      -128059.821045    -124453.305555      16.992203      16.992203    -128059.821045     3589.499512             -128059.821045      16.742203   17.015978       17.015839
8      -124453.305555      -128059.820906    -124453.305555      16.992203      16.992203    -128059.820906     4456.132568                6940.812256    1366.382812 -849.617218      400.023392
fefficient=False, bounded_queue=False, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=4, loss_amount=84124671/65536, 
, buffer=26215933/65536, alpha=1113601/65536.[0m
[11/09 15:15:41]  --------------------------------------------------------------------------------
[11/09 15:15:41]  Iteration: 3 (0 solution, 2 counterexamples)
[11/09 15:15:42]  Generator returned sat in 0.533513 secs.
[11/09 15:15:42]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 15:15:51]  Improved number of small numbers from 27 to 51 out of a max of 202
[11/09 15:15:51]  Verifer returned sat in 8.628783 secs.
[11/09 15:15:51]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          12336.698486           7003.264539        12336.698486         0.124756         0.124756         7003.264539       5324.476771  8.957176
1          12431.188779           7103.264539        12431.188779       103.447469       103.447469         7103.264539       5324.476771  3.447469
2          12431.188779           7106.712008        12431.188779         3.416341         3.416341         7106.712008       5324.476771  0.000000
3          12540.114845           7206.712008        12540.114845       108.926066       108.926066         7206.712008       5324.476771  8.926066
4          12540.114845           7215.638074        12540.114845         2.708171         2.708171         7215.638074       5324.476771  0.000000
5          12653.103167           7315.638074        12653.103167       112.988322       112.988322         7315.638074       5328.507899  8.957194
6          12653.103167           7324.595268        12653.103167         2.708171         2.708171         7324.595268       5328.507899  0.000000
7          12766.122617           7424.595268        12766.122617       113.019450       113.019450         7424.595268       5332.570155  8.957194
8          12766.122617           7433.552462        12766.122617         2.708171         2.708171         7433.552462       5332.570155  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=2, loss_amount=66301/8192, 
, buffer=55033/6144, alpha=16639/6144.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124580.348389      -128055.879150    -124580.348389       0.124512       0.124512    -128055.879150     3475.468689             -128055.879150    -687.230581    0.062073        0.031045
1      -124580.348389      -128055.848122    -124580.348389       0.031250       0.031250    -128055.848122     3475.468689             -128055.817139    -578.335449    0.031045        8.926176
2      -124487.251036      -128064.711933    -124487.251036      93.128398      93.128398    -128064.711933     3475.468689             -128064.711933    -580.327850  101.992208        0.031128
3      -124487.251036      -127962.750853    -124487.251036      31.968872      31.968872    -127962.750853     3475.499817             -127962.781738    -471.370656    0.000000        8.957194
4      -124455.282164      -127971.708047    -124455.282164      31.968872      31.968872    -127971.708047     3475.499817             -127939.708252    -403.339600   40.926066        8.957123
5      -124355.251036      -127862.781982    -124355.251036     140.957194     140.957194    -127862.781982     3475.530945             -127862.781982    -403.339528   32.000002        8.957194
6      -124355.251036      -127839.708047    -124355.251036      31.968872      31.968872    -127839.708047     3475.530945             -127839.708047    -403.339600    8.926066      -91.042877
7      -124184.223794      -127691.785889    -124184.223794     179.953308     179.953308    -127691.785889     3475.562073             -127691.785889    -374.335642   32.000022        8.957194
8      -124184.223794      -127668.743060    -124184.223794      31.968872      31.968872    -127668.743060     3475.562073                6940.812256    -274.366943    8.957194        8.925893
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=255/4096, 
, buffer=55033/6144, alpha=261889/8192.[0m
[11/09 15:15:59]  --------------------------------------------------------------------------------
[11/09 15:15:59]  Iteration: 4 (0 solution, 3 counterexamples)
[11/09 15:16:03]  Generator returned sat in 3.861185 secs.
[11/09 15:16:03]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 15:16:13]  Improved number of small numbers from 41 to 129 out of a max of 202
[11/09 15:16:13]  Verifer returned sat in 10.285222 secs.
[11/09 15:16:13]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          14658.986448           8857.497978        14658.986448         0.124512         0.124512         8857.497978       5794.772527  6.715942
1          14658.986448           8864.213921        14658.986448         6.684570         6.684570         8864.213921       5794.772527  0.000000
2          14665.017576           8870.245049        14665.017576         6.031128         6.031128         8870.245049       5794.772527  0.000000
3          14671.297727           8876.525200        14671.297727         6.280151         6.280151         8876.525200       5794.772527  0.000000
4          14677.515622           8882.743095        14677.515622         6.217896         6.217896         8882.743095       5794.772527  0.000000
5          14683.764646           8888.992119        14683.764646         6.249023         6.249023         8888.992119       5794.772527  0.000000
6          14690.013669           8895.241142        14690.013669         6.249023         6.249023         8895.241142       5794.772527  0.000000
7          14696.278257           8901.505730        14696.278257         6.264587         6.264587         8901.505730       5794.772527  0.000000
8          14702.558408           8907.785881        14702.558408         6.280151         6.280151         8907.785881       5794.772527  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=371791/512, alpha=50937/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t      queue_t  bottle_queue_t
0      -125201.705078      -128777.142334    -125201.705078       0.124268       0.124268    -128777.142334     2749.283203             -128777.173584   -1093.492920   826.154053      726.154053
1      -124575.519531      -128677.111328    -124575.519531    1452.339600    1452.339600    -128677.111328     2749.283203             -128677.111328   -1619.709473  1352.308594      726.123047
2      -124575.519531      -128050.925781    -124575.519531    1141.277588    1141.277588    -128050.925781     2749.283203             -128050.957031   -1519.709473   726.123047      726.123047
3      -124471.614014      -128050.925781    -124471.614014     830.028564     830.028564    -128050.925781     2749.314453             -128050.957031   -1523.552490   829.997314      726.154297
4      -124471.614014      -127947.082764    -124471.614014     518.779541     518.779541    -127947.082764     3475.500000             -128673.237061    -697.366943    -0.031250      726.154297
5      -124264.083496      -128673.268311    -124264.083496     207.530518     207.530518    -128673.268311     3706.092773             -128673.299561    -574.304688   703.092041      726.154297
6      -124264.083496      -128696.299561    -124264.083496     207.499349     207.499349    -128696.299561     3706.092773             -128696.299561    -474.335938   726.123291      726.123047
7      -124264.083496      -128696.299316    -124264.083496     207.499349     207.499349    -128696.299316     3706.092773             -128696.330566    -374.335938   726.123047      726.123047
8      -124264.083496      -128696.268555    -124264.083496     207.499349     207.499349    -128696.268555     3706.092773             -128696.268555    -274.366943   726.092285      726.092041
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=3, loss_amount=979741/1024, 
, buffer=371791/512, alpha=318719/1536.[0m
[11/09 15:16:21]  --------------------------------------------------------------------------------
[11/09 15:16:21]  Iteration: 5 (0 solution, 4 counterexamples)
[11/09 15:16:35]  Generator returned sat in 13.593088 secs.
[11/09 15:16:35]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 15:16:43]  Improved number of small numbers from 116 to 130 out of a max of 202
[11/09 15:16:43]  Verifer returned sat in 7.484998 secs.
[11/09 15:16:43]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          14524.717529           8729.894873        14524.717529         0.124512         0.124512         8729.894873       5794.772705   0.049951
1          14524.767578           8729.994873        14524.767578         0.100000         0.100000         8729.994873       5794.772705   0.000000
2          63471.267578           8829.994873        63471.267578     48946.500000     48946.500000         8829.994873      54541.822705  99.450000
3          63471.267578           8929.444873        63471.267578        49.575000        49.575000         8929.444873      54541.822705   0.000000
4          63793.330078           9029.444873        63793.330078       322.062500       322.062500         9029.444873      54664.435205  99.450000
5          63793.330078           9128.894873        63793.330078        99.250000        99.250000         9128.894873      54664.435205   0.000000
6          64140.230078           9228.894873        64140.230078       346.900000       346.900000         9228.894873      54811.885205  99.450000
7          64140.230078           9328.344873        64140.230078        99.250000        99.250000         9328.344873      54811.885205   0.000000
8          64487.130078           9428.344873        64487.130078       346.900000       346.900000         9428.344873      54959.335205  99.450000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=33401/80, 
, buffer=1989/20, alpha=19/20.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -125169.487305      -128068.076676    -125169.487305       0.124023       0.124023    -128068.076676     2699.289453             -127968.026855   -1719.809229  199.299919       99.299919
1      -125169.487305      -127968.076676    -125169.487305     199.299805     199.299805    -127968.076676     2699.289453             -127968.126465   -1619.709229   99.299919       99.399919
2      -124903.987223      -127702.776676    -124903.987223     364.800000     364.800000    -127702.776676     2699.339453             -127702.776676   -1785.109229   99.450000       99.450000
3      -124853.962223      -127702.726676    -124853.962223     149.475000     149.475000    -127702.726676     2749.314453             -127702.726676   -1685.159229   99.450000       99.450000
4      -124853.912223      -127603.276676    -124853.912223      99.500000      99.500000    -127603.276676     2749.314453             -127603.276676   -1748.420340    0.050000      -63.761111
5      -124787.612223      -127539.465565    -124787.612223      66.350000      66.350000    -127539.465565     2749.314453             -127539.515381   -1692.347006    2.538889      -41.387778
6      -124644.784446      -127495.538899    -124644.784446     145.366667     145.366667    -127495.538899     2749.314453             -127493.448730   -1594.386963  101.440000       99.400043
7      -124644.634446      -127493.448975    -124644.634446     101.590000     101.590000    -127493.448975     2749.364453             -127493.448975   -1494.437006   99.450076       99.450000
8      -124644.634446      -127493.448899    -124644.634446      66.350000      66.350000    -127493.448899     2749.364453             -127493.448730   -1394.437012   99.450000       99.449995
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=1/20, 
, buffer=1989/20, alpha=1327/20.[0m
[11/09 15:16:51]  --------------------------------------------------------------------------------
[11/09 15:16:51]  Iteration: 6 (0 solution, 5 counterexamples)
[11/09 15:16:58]  Generator returned sat in 6.487074 secs.
[11/09 15:16:58]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
[0m
[11/09 15:17:05]  Improved number of small numbers from 132 to 154 out of a max of 202
[11/09 15:17:05]  Verifer returned sat in 6.906804 secs.
[11/09 15:17:05]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          63353.019287          57398.277832        63353.019287         0.124512         0.124512        57398.277832       5794.772705  159.968750
1          63391.050537          57498.277832        63391.050537       198.000000       198.000000        57498.277832       5794.772705   98.000000
2          63391.050537          57596.277832        63391.050537        80.217041        80.217041        57596.277832       5794.772705    0.000000
3          63501.221069          57696.277832        63501.221069       110.170532       110.170532        57696.277832       5794.772705   10.170532
4          63631.174561          57796.277832        63631.174561       140.124023       140.124023        57796.277832       5794.772705   40.124023
5          63761.128052          57896.277832        63761.128052       170.077515       170.077515        57896.277832       5794.772705   70.077515
6          63891.081543          57996.277832        63891.081543       200.031006       200.031006        57996.277832       5794.772705  100.031006
7          64021.035034          58096.277832        64021.035034       229.984497       229.984497        58096.277832       5794.772705  129.984497
8          64150.988525          58196.277832        64150.988525       259.937988       259.937988        58196.277832       5794.772705  159.937988
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=655233/4096, alpha=81793/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124699.704102      -124940.804917    -124699.704102       0.124023       0.124023    -124940.804917        0.000000             -124840.773926   -2204.991699  241.100815      141.100815
1      -124699.704102      -124740.804932    -124699.704102       0.031006       0.031006    -124740.804932        0.000000             -124740.804932   -2204.991943   41.100830       41.100571
2      -124699.704102      -124724.324326    -124699.704102      16.496094      16.496094    -124724.324326        0.000000             -124724.324326   -2121.472290   24.620224       24.620224
3      -124699.704102      -124724.324326    -124699.704102      16.542603      16.542603    -124724.324326        0.000000             -124724.355469   -2037.937378   24.620224        8.155136
4      -124699.704102      -124707.859238    -124699.704102      16.589111      16.589111    -124707.859238        0.000000             -124707.890381   -1946.092529    8.155136       -0.000015
5      -124699.642197      -124699.673203    -124699.642197       8.217041       8.217041    -124699.673203        0.000000             -124699.673203   -2781.441284    0.031006     -935.286865
6      -124691.409653      -123764.355332    -124691.409653       8.263550       8.263550    -123764.355332        0.030762             -123764.386230   -1594.387207 -927.085083      159.968994
7      -124219.673203      -124379.704209    -124219.673203     471.736450     471.736450    -124379.704209        0.062012             -124379.704209   -1966.092407  159.968994      159.968994
8      -124219.673203      -124379.673096    -124219.673203     159.968994     159.968994    -124379.673096        0.062012             -124379.673096   -2017.906494  159.937881        8.154907
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=127/2048, 
, buffer=655233/4096, alpha=127/4096.[0m
[11/09 15:17:13]  --------------------------------------------------------------------------------
[11/09 15:17:13]  Iteration: 7 (0 solution, 6 counterexamples)
[11/09 15:17:21]  Generator returned sat in 7.937993 secs.
[11/09 15:17:21]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:17:45]  Improved number of small numbers from 111 to 119 out of a max of 202
[11/09 15:17:45]  Verifer returned sat in 23.508905 secs.
[11/09 15:17:45]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          62790.251953          57389.432861        62790.251953         0.124512         0.124512        57389.432861       5394.741699  6.077393
1          62890.267578          57489.432861        62890.267578       106.093018       106.093018        57489.432861       5394.757202  6.077515
2          62987.252075          57589.432861        62987.252075       103.062012       103.062012        57589.432861       5394.757202  3.062012
3          63090.283081          57689.432861        63090.283081       106.093018       106.093018        57689.432861       5394.772705  6.077515
4          63181.174561          57786.401855        63181.174561        96.968994        96.968994        57786.401855       5394.772705  0.000000
5          63281.174561          57886.401855        63281.174561       100.000000       100.000000        57886.401855       5394.772705  0.000000
6          63384.205566          57986.401855        63384.205566       103.031006       103.031006        57986.401855       5394.772705  3.031006
7          63487.236572          58086.401855        63487.236572       106.062012       106.062012        58086.401855       5394.772705  6.062012
8          63590.267578          58186.401855        63590.267578       109.093018       109.093018        58186.401855       5397.788208  6.077515
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=24703/8192, 
, buffer=49787/8192, alpha=12415/2048.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124111.324463      -124155.200302    -124111.324463       0.123779       0.123779    -124155.200302        0.000000             -124155.200302   -2834.425781   43.875840        6.077378
1      -124011.308823      -124117.401841    -124011.308823     143.891479     143.891479    -124117.401841        0.015503             -124117.417480   -2834.425781  106.077515        6.077515
2      -123911.293320      -123923.918646    -123911.293320     206.093018     206.093018    -123923.918646        0.031006             -123923.918646   -2834.425781   12.594320        6.077515
3      -123811.277817      -123848.714503    -123811.277817     112.609823     112.609823    -123848.714503        0.046509             -123848.714503   -2834.425781   37.390177        6.077515
4      -123717.355332      -123804.730006    -123717.355332     131.312663     131.312663    -123804.730006        0.046509             -123804.730006   -2834.425781   87.328166        0.000000
5      -123670.339829      -123701.667995    -123670.339829     134.343669     134.343669    -123701.667995        0.046509             -123701.667995   -2781.441284   31.281657        0.000000
6      -123564.246811      -123570.386338    -123564.246811     137.374674     137.374674    -123570.386338        0.062012             -123570.386338   -2781.441284    6.077515        6.077515
7      -123456.183497      -123470.386338    -123456.183497     114.140828     114.140828    -123470.386338        8.125326             -123470.386338   -2781.441284    6.077515        6.077515
8      -123349.651190      -123470.370850    -123349.651190     112.609823     112.609823    -123470.370850       14.657633             -123470.370850   -2781.441284  106.062027        6.077515
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=359083/24576, 
, buffer=49787/8192, alpha=12415/2048.[0m
[11/09 15:17:59]  --------------------------------------------------------------------------------
[11/09 15:17:59]  Iteration: 8 (0 solution, 7 counterexamples)
[11/09 15:18:17]  Generator returned sat in 16.958598 secs.
[11/09 15:18:17]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:18:36]  Improved number of small numbers from 55 to 68 out of a max of 202
[11/09 15:18:36]  Verifer returned sat in 19.092952 secs.
[11/09 15:18:37]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          63109.772461          57427.229736        63109.772461         0.124512         0.124512        57427.229736       5582.573478   99.969247
1          63109.772461          57527.198983        63109.772461        99.968994        99.968994        57527.198983       5582.573478    0.000000
2          63181.192191          57598.618713        63181.192191        71.419730        71.419730        57598.618713       5582.573478    0.000000
3          63281.192191          57698.618713        63281.192191       100.000000       100.000000        57698.618713       5582.573478    0.000000
4          63409.772461          57798.618713        63409.772461       128.580270       128.580270        57798.618713       5582.573478   28.580270
5          63538.352731          57898.618713        63538.352731       157.160540       157.160540        57898.618713       5582.573478   57.160540
6          63666.933001          57998.618713        63666.933001       185.740810       185.740810        57998.618713       5582.573478   85.740810
7          63795.513271          58098.618713        63795.513271       214.321080       214.321080        58098.618713       5582.573478  114.321080
8          63924.093541          58198.618713        63924.093541       242.901350       242.901350        58198.618713       5582.573478  142.901350
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=16392619/114688, alpha=1638907/114688.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -123984.793945      -123984.825058    -123984.793945       0.123535       0.123535    -123984.825058        0.000000             -123984.825058   -2834.425781    0.031113      -99.937942
1      -123958.681748      -123884.856003    -123958.681748      26.143311      26.143311    -123884.856003        0.000000             -123958.681885   -2808.096802  -73.825745     -147.496765
2      -123885.010727      -123811.184983    -123885.010727      73.671021      73.671021    -123811.184983        0.000000             -123811.215820   -2708.034912  -73.825745      -73.763855
3      -123811.277817      -123811.246872    -123811.277817      73.732910      73.732910    -123811.246872        0.000000             -123811.277588   -2632.530029   -0.030945      -24.526062
4      -123774.442307      -123786.751755    -123774.442307      36.835510      36.835510    -123786.751755        0.030945             -123786.782715   -2401.876238   12.278503      142.932295
5      -123774.442307      -123799.184983    -123774.442307      12.247559      12.247559    -123799.184983        0.030945             -123799.184983   -2444.839478   24.711731       -0.030945
6      -123774.442307      -123774.442307    -123774.442307       6.061890       6.061890    -123774.442307        0.030945             -123774.473145   -2340.591919   -0.030945        4.216614
7      -123768.318528      -123778.689865    -123768.318528       6.123779       6.123779    -123778.689865        0.061890             -123778.720947   -2107.969073   10.309448      142.932295
8      -123768.318528      -123911.312712    -123768.318528      10.278503      10.278503    -123911.312712        0.092834             -123911.281982   -2007.938128  142.901350      142.932295
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=1521/16384, 
, buffer=16392619/114688, alpha=507/16384.[0m
[11/09 15:18:51]  --------------------------------------------------------------------------------
[11/09 15:18:51]  Iteration: 9 (0 solution, 8 counterexamples)
[11/09 15:19:39]  Generator returned sat in 47.141136 secs.
[11/09 15:19:39]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:20:06]  Improved number of small numbers from 73 to 110 out of a max of 202
[11/09 15:20:06]  Verifer returned sat in 26.882204 secs.
[11/09 15:20:07]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          63234.833496          57398.062805        63234.833496         0.124512         0.124512        57398.062805       5736.739955  100.030736
1          63234.833496          57498.062805        63234.833496         0.031006         0.031006        57498.062805       5736.739955    0.030736
2          63441.771877          57598.062805        63441.771877       206.969116       206.969116        57598.062805       5736.739955  106.969116
3          63545.256435          57698.062805        63545.256435       210.453674       210.453674        57698.062805       5736.739955  110.453674
4          63648.740993          57798.062805        63648.740993       213.938232       213.938232        57798.062805       5736.739955  113.938232
5          63752.225551          57898.062805        63752.225551       217.422791       217.422791        57898.062805       5736.770839  117.391907
6          63752.225551          57998.062805        63752.225551       106.969116       106.969116        57998.062805       5736.770839   17.391907
7          63845.287319          58098.062805        63845.287319       110.453674       110.453674        58098.062805       5736.770839   10.453674
8          63948.771877          58198.062805        63948.771877       113.938232       113.938232        58198.062805       5736.770839   13.938232
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=253/8192, 
, buffer=1923349/16384, alpha=57091/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124005.678955      -124155.292969    -124005.678955       0.123291       0.123291    -124155.292969             0.0             -124155.292969   -2501.505859  149.614014      100.000003
1      -124005.648193      -124005.679184    -124005.648193     149.644775     149.644775    -124005.679184             0.0             -124005.679184   -2501.505859    0.030991        0.030764
2      -123805.308579      -123955.046143    -123805.308579     200.370605     200.370605    -123955.046143             0.0             -123955.046143   -2501.505859  149.737564      100.370379
3      -123805.308579      -123905.648301    -123805.308579     100.154297     100.154297    -123905.648301             0.0             -123905.648301   -2501.505859  100.339722        0.370379
4      -123805.308579      -123805.339600    -123805.308579      50.046326      50.046326    -123805.339600             0.0             -123805.339600   -2401.876465    0.031021       -0.000227
5      -123755.277832      -123805.277695    -123755.277832      50.061768      50.061768    -123805.277695             0.0             -123805.277695   -2351.984331   49.999863       -0.077346
6      -123755.200486      -123755.200486    -123755.200486      50.077209      50.077209    -123755.200486             0.0             -123755.231201   -2251.984375    0.000000       -0.000044
7      -123705.107834      -123705.138718    -123705.107834      50.092651      50.092651    -123705.138718             0.0             -123705.138718   -2202.077148    0.030884       -0.000166
8      -123655.030625      -123705.076904    -123655.030625      50.108093      50.108093    -123705.076904             0.0             -123705.076904   -2202.076904   50.046280      -49.922712
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=1923349/16384, alpha=253/8192.[0m
[11/09 15:20:21]  --------------------------------------------------------------------------------
[11/09 15:20:21]  Iteration: 10 (0 solution, 9 counterexamples)
[11/09 15:21:04]  Generator returned sat in 41.087407 secs.
[11/09 15:21:04]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:21:22]  Improved number of small numbers from 71 to 87 out of a max of 202
[11/09 15:21:22]  Verifer returned sat in 17.699104 secs.
[11/09 15:21:22]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          63501.163906          58081.723232        63501.163906         0.124268         0.124268        58081.723232       5419.409851   0.030823
1          63501.163906          58081.754054        63501.163906         0.030762         0.030762        58081.754054       5419.409851   0.000000
2          63552.194728          58132.784877        63552.194728        51.030823        51.030823        58132.784877       5419.409851   0.000000
3          63643.194728          58223.784877        63643.194728        91.000000        91.000000        58223.784877       5419.409851   0.000000
4          63825.163906          58323.784877        63825.163906       181.969177       181.969177        58323.784877       5434.076518  67.302511
5          63868.815161          58423.784877        63868.815161       110.953766       110.953766        58423.784877       5434.076518  10.953766
6          64097.799749          58523.784877        64097.799749       239.938354       239.938354        58523.784877       5506.712362  67.302511
7          64170.435593          58623.784877        64170.435593       139.938354       139.938354        58623.784877       5506.712362  39.938354
8          64370.435593          58723.784877        64370.435593       239.938354       239.938354        58723.784877       5579.348206  67.302511
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=1310215/8192, 
, buffer=3308053/49152, alpha=327175/16384.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -123864.811224      -123864.657110    -123864.811224       0.123047       0.123047    -123864.657110        0.000000             -123764.626465   -2687.567505   -0.154114     -100.154114
1      -123864.780401      -123764.657110    -123864.780401       0.030823       0.030823    -123764.657110        0.000000             -123764.626465   -2501.505859 -100.123291      -14.061646
2      -123850.718755      -123850.718755    -123850.718755      14.061646      14.061646    -123850.718755        0.000000             -123850.687744   -2647.746724    0.000000     -246.240865
3      -123843.657110      -123604.477890    -123843.657110       7.061646       7.061646    -123604.477890        0.000000             -123604.447266   -2529.875732 -239.179220     -221.308228
4      -123683.416245      -123622.348882    -123683.416245     160.240865     160.240865    -123622.348882        0.000000             -123622.318115   -2429.906738  -61.067362      -61.098368
5      -123454.984726      -123622.287237    -123454.984726     228.431519     228.431519    -123622.287237        0.000000             -123622.287237   -2429.968262  167.302511       67.271627
6      -123454.984726      -123522.225586    -123454.984726     114.246582     114.246582    -123522.225586        0.000000             -123522.225586   -2329.999268   67.240860       67.240621
7      -123454.984726      -123455.015549    -123454.984726      57.154114      57.154114    -123455.015549        0.000000             -123455.015549   -2297.209229    0.030823        0.030660
8      -123287.682216      -123355.015625    -123287.682216     167.333333     167.333333    -123355.015625        0.030823             -123355.015625   -2297.209066   67.302587       67.302511
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=505/16384, 
, buffer=3308053/49152, alpha=505/16384.[0m
[11/09 15:21:37]  --------------------------------------------------------------------------------
[11/09 15:21:37]  Iteration: 11 (0 solution, 10 counterexamples)
[11/09 15:22:57]  Generator returned sat in 79.150453 secs.
[11/09 15:22:57]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
[0m
[11/09 15:23:09]  Improved number of small numbers from 112 to 198 out of a max of 202
[11/09 15:23:09]  Verifer returned sat in 12.257987 secs.
[11/09 15:23:09]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          62616.603760          58097.562744        62616.603760         0.124023         0.124023        58097.562744       4519.040771    0.000244
1          63451.979492          58197.562744        63451.979492       835.375977       835.375977        58197.562744       4519.040771  735.375977
2          63451.979492          58297.562744        63451.979492       216.764788       216.764788        58297.562744       4519.040771  635.375977
3          63451.979492          58397.562744        63451.979492       233.345006       233.345006        58397.562744       4519.040771  535.375977
4          63451.979492          58497.562744        63451.979492       133.283482       133.283482        58497.562744       4519.040771  435.375977
5          63451.979492          58597.562744        63451.979492       191.604353       191.604353        58597.562744       4519.040771  335.375977
6          63451.979492          58697.562744        63451.979492       220.764788       220.764788        58697.562744       4519.040771  235.375977
7          63451.979492          58797.562744        63451.979492       235.345006       235.345006        58797.562744       4519.040771  135.375977
8          63451.979492          58897.562744        63451.979492       133.283482       133.283482        58897.562744       4519.040771   35.375977
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=2635697/3584, alpha=14911/896.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124292.888184      -124417.199707    -124292.888184       0.123047       0.123047    -124417.199707             0.0             -124417.199707   -2084.109619  124.311523       75.226807
1      -124292.857422      -124368.114990    -124292.857422     124.342285     124.342285    -124368.114990             0.0             -124368.114990   -2059.367188   75.257568        0.000000
2      -124292.826416      -124292.857422    -124292.826416      75.288574      75.288574    -124292.857422             0.0             -124292.795898   -1959.398193    0.031006        0.000000
3      -124192.995850      -124268.376221    -124192.995850      99.861572      99.861572    -124268.376221             0.0             -124268.376221   -1959.228760   75.380371        0.000000
4      -124192.995850      -124192.995850    -124192.995850      49.930908      49.930908    -124192.995850             0.0             -124192.965088   -1859.229004    0.000000       -0.000244
5      -124118.053467      -124143.103271    -124118.053467      74.942383      74.942383    -124143.103271             0.0             -124143.103271   -1859.229004   25.049805      -25.057861
6      -124042.949463      -124092.965088    -124042.949463     100.153809     100.153809    -124092.965088             0.0             -124092.965088   -1809.275146   50.015625        0.000000
7      -124042.888184      -124042.918945    -124042.888184      50.076904      50.076904    -124042.918945             0.0             -124042.918945   -1709.336426    0.030762        0.000000
8      -123967.742188      -124042.888184    -123967.742188      75.176758      75.176758    -124042.888184             0.0             -123967.711426   -1684.482666   75.145996       -0.000244
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=2635697/3584, alpha=63/2048.[0m
[11/09 15:23:24]  --------------------------------------------------------------------------------
[11/09 15:23:24]  Iteration: 12 (0 solution, 11 counterexamples)
[11/09 15:23:51]  Generator returned sat in 25.240747 secs.
[11/09 15:23:51]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:23:56]  Improved number of small numbers from 202 to 202 out of a max of 202
[11/09 15:23:56]  Verifer returned sat in 4.932351 secs.
[11/09 15:23:56]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          63321.095703          58802.054932        63321.095703         0.124023         0.124023        58802.054932       4518.979248    0.061523
1          64017.095703          58902.054932        64017.095703       696.061523       696.061523        58902.054932       4519.040771  596.000000
2          64017.095703          59002.054932        64017.095703        75.323242        75.323242        59002.054932       4519.040771  496.000000
3          64017.095703          59102.054932        64017.095703        79.446289        79.446289        59102.054932       4519.040771  396.000000
4          64017.095703          59202.054932        64017.095703        83.569336        83.569336        59202.054932       4519.040771  296.000000
5          64017.095703          59302.054932        64017.095703        87.692383        87.692383        59302.054932       4519.040771  196.000000
6          64017.095703          59402.054932        64017.095703        91.815430        91.815430        59402.054932       4519.040771   96.000000
7          64017.095703          59498.054932        64017.095703        95.938477        95.938477        59498.054932       4519.040771    0.000000
8          64117.157227          59598.054932        64117.157227       100.061523       100.061523        59598.054932       4519.040771    0.061523
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=596, alpha=2111/256.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -126347.519775      -126699.612061    -126347.519775       0.123047       0.123047    -126699.612061             0.0             -126699.612061     147.387451  352.092285      252.092285
1      -126347.519775      -126499.612061    -126347.519775     352.092285     352.092285    -126499.612061             0.0             -126499.612061     147.387451  152.092285      152.092285
2      -126347.519775      -126455.827393    -126347.519775     106.215332     106.215332    -126455.827393             0.0             -126455.827393     147.387451  108.307617       52.092285
3      -126347.519775      -126399.612061    -126347.519775     108.246094     108.246094    -126399.612061             0.0             -126399.673584     195.295166   52.092285        0.000000
4      -126347.519775      -126347.519775    -126347.519775      52.030762      52.030762    -126347.519775             0.0             -126347.458252     295.295166    0.000000        0.000000
5      -126293.458252      -126320.042725    -126293.458252      54.061523      54.061523    -126320.042725             0.0             -126320.042725     311.787354   26.584473      -29.446289
6      -126263.950439      -126264.011963    -126263.950439      56.092285      56.092285    -126264.011963             0.0             -126264.073486     411.725830    0.061523        0.000000
7      -126205.888916      -126263.950439    -126205.888916      58.123047      58.123047    -126263.950439             0.0             -126205.827393     453.664307   58.061523        0.000000
8      -126203.796631      -126205.888916    -126203.796631      60.153809      60.153809    -126205.888916             0.0             -126203.735107     551.572021    2.092285        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=596, alpha=4159/1024.[0m
[11/09 15:24:10]  --------------------------------------------------------------------------------
[11/09 15:24:10]  Iteration: 13 (0 solution, 12 counterexamples)
[11/09 15:24:38]  Generator returned sat in 27.028505 secs.
[11/09 15:24:38]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:24:43]  Improved number of small numbers from 163 to 173 out of a max of 202
[11/09 15:24:43]  Verifer returned sat in 4.618308 secs.
[11/09 15:24:43]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          63321.095703          58802.054932        63321.095703         0.124023         0.124023        58802.054932       4518.979004    0.061768
1          64017.095459          58902.054932        64017.095459       696.061523       696.061523        58902.054932       4519.040527  596.000000
2          64017.095459          59002.054932        64017.095459        75.323242        75.323242        59002.054932       4519.040527  496.000000
3          64017.095459          59102.054932        64017.095459        79.446289        79.446289        59102.054932       4519.040527  396.000000
4          64017.095459          59202.054932        64017.095459        83.569336        83.569336        59202.054932       4519.040527  296.000000
5          64017.095459          59302.054932        64017.095459        87.692383        87.692383        59302.054932       4519.040527  196.000000
6          64017.095459          59402.054932        64017.095459        91.815430        91.815430        59402.054932       4519.040527   96.000000
7          64017.095459          59498.054932        64017.095459        95.938477        95.938477        59498.054932       4519.040527    0.000000
8          64117.156982          59598.054932        64117.156982       100.061523       100.061523        59598.054932       4519.040527    0.061523
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=596, alpha=2111/256.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -126347.520020      -126701.494873    -126347.520020       0.122803       0.122803    -126701.494873             0.0             -126701.494873     149.270227  353.974854      253.975061
1      -126347.519775      -126509.421057    -126347.519775     353.975098     353.975098    -126509.421057             0.0             -126509.421057     149.270227  161.901282      153.975305
2      -126347.519775      -126455.876953    -126347.519775     108.246216     108.246216    -126455.876953             0.0             -126455.876953     149.270227  108.357178       53.975305
3      -126347.519775      -126401.495081    -126347.519775     108.344751     108.344751    -126401.495081             0.0             -126401.507568     195.294922   53.975305        0.000000
4      -126347.519775      -126347.519775    -126347.519775      53.962988      53.962988    -126347.519775             0.0             -126347.458496     295.294678    0.000000       -0.000244
5      -126293.458252      -126314.295496    -126293.458252      54.061523      54.061523    -126314.295496             0.0             -126314.295496     307.922900   20.837244      -33.310498
6      -126260.135437      -126260.147754    -126260.135437      54.160059      54.160059    -126260.147754             0.0             -126260.159912     405.928906    0.012317       -1.981677
7      -126205.889160      -126258.153760    -126205.889160      54.258594      54.258594    -126258.153760             0.0             -126205.827637     453.664307   52.264600        0.000000
8      -126203.796631      -126205.889160    -126203.796631      54.357129      54.357129    -126205.889160             0.0             -126203.735352     551.571777    2.092529        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=596, alpha=1009/5120.[0m
[11/09 15:24:52]  --------------------------------------------------------------------------------
[11/09 15:24:52]  Iteration: 14 (0 solution, 13 counterexamples)
[11/09 15:25:09]  Generator returned sat in 15.654953 secs.
[11/09 15:25:09]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:25:16]  Improved number of small numbers from 107 to 153 out of a max of 202
[11/09 15:25:16]  Verifer returned sat in 6.582564 secs.
[11/09 15:25:16]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t      queue_t
0          60563.437744          59403.037354        60563.437744         0.124023         0.124023        59403.037354       1060.338867   100.061523
1          60563.437744          59503.037354        60563.437744       100.061523       100.061523        59503.037354       1060.338867     0.061523
2          64021.095459          59603.037354        64021.095459      3457.719238      3457.719238        59603.037354       2881.260010  1536.798096
3          64021.095459          59703.037354        64021.095459      1536.736816      1536.736816        59703.037354       2881.260010  1436.798096
4          64021.095459          59803.037354        64021.095459       576.245605       576.245605        59803.037354       2881.260010  1336.798096
5          64021.095459          59903.037354        64021.095459        96.061401        96.061401        59903.037354       2881.260010  1236.798096
6          64021.095459          60003.037354        64021.095459       392.122803       392.122803        60003.037354       2881.260010  1136.798096
7          64021.095459          60103.037354        64021.095459       392.122803       392.122803        60103.037354       2881.260010  1036.798096
8          64021.095459          60203.037354        64021.095459       392.122803       392.122803        60203.037354       2881.260010   936.798096
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=6294725/4096, alpha=786935/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0      -126345.769043      -126345.830530    -126345.769043       0.122559       0.122559    -126345.830530             0.0             -126345.830530    -106.394531   0.061487        0.061279
1      -126335.646326      -126345.769128    -126335.646326      10.184204      10.184204    -126345.769128             0.0             -126345.769128     -16.578528  10.122803        0.000000
2      -126335.646326      -126335.646326    -126335.646326      10.061523      10.061523    -126335.646326             0.0             -126335.400879      83.237305   0.000000       -0.184167
3      -126314.786707      -126335.400720    -126314.786707      20.859619      20.859619    -126335.400720             0.0             -126335.400720     162.561768  20.614014       -0.000085
4      -126314.356897      -126314.418298    -126314.356897      21.043823      21.043823    -126314.418298             0.0             -126314.418298     262.131836   0.061401       -0.000208
5      -126282.514856      -126314.295654    -126282.514856      31.903442      31.903442    -126314.295654             0.0             -126314.295654     330.290002  31.780798        0.000000
6      -126282.514856      -126282.514856    -126282.514856       5.337708       5.337708    -126282.514856             0.0             -126282.514648     430.289795   0.000000       -0.000208
7      -126239.935999      -126282.514648    -126239.935999      42.578857      42.578857    -126282.514648             0.0             -126239.874756     487.711145  42.578650        0.000000
8      -126239.935999      -126239.935999    -126239.935999      10.614014      10.614014    -126239.935999             0.0             -126239.874756     587.710938   0.000000       -0.000208
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=6294725/4096, alpha=87453/16384.[0m
[11/09 15:25:31]  --------------------------------------------------------------------------------
[11/09 15:25:31]  Iteration: 15 (0 solution, 14 counterexamples)
[11/09 15:25:45]  Generator returned sat in 12.629807 secs.
[11/09 15:25:45]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:26:05]  Verifer returned unsat in 19.377948 secs.
[11/09 15:26:05]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:26:05]  --------------------------------------------------------------------------------
[11/09 15:26:05]  Iteration: 16 (1 solution, 14 counterexamples)
[11/09 15:26:10]  Generator returned sat in 3.320191 secs.
[11/09 15:26:10]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:26:31]  Improved number of small numbers from 87 to 172 out of a max of 202
[11/09 15:26:31]  Verifer returned sat in 21.330331 secs.
[11/09 15:26:31]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          60262.349854          60262.319336        60262.349854         0.123779         0.123779        60262.319336          0.000000    0.030518
1          61062.380371          60362.319336        61062.380371       800.061035       800.061035        60362.319336          0.030518  700.030518
2          61062.380371          60462.319336        61062.380371       200.061279       200.061279        60462.319336          0.030518  600.030518
3          61062.380371          60562.319336        61062.380371       210.045898       210.045898        60562.319336          0.030518  500.030518
4          61062.380371          60662.319336        61062.380371       220.030518       220.030518        60662.319336          0.030518  400.030518
5          61062.380371          60762.319336        61062.380371       230.015137       230.015137        60762.319336          0.030518  300.030518
6          61062.380371          60862.319336        61062.380371       239.999756       239.999756        60862.319336          0.030518  200.030518
7          61062.380371          60962.319336        61062.380371        70.046143        70.046143        60962.319336          0.030518  100.030518
8          61062.380371          61062.319336        61062.380371        80.030762        80.030762        61062.319336          0.030518    0.030518
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=2867325/4096, alpha=40897/2048.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -126585.952393      -126986.564941    -126585.952393       0.122314       0.122314    -126986.564941             0.0             -126986.565186     348.478357  400.612549      300.612549
1      -126585.952393      -126886.564941    -126585.952393       0.030762       0.030762    -126886.564941             0.0             -126786.534180     348.478357  300.612549      200.612549
2      -126585.952393      -126686.565186    -126585.952393     100.091919     100.091919    -126686.565186             0.0             -126686.565186     348.478357  100.612793      100.612549
3      -126585.952393      -126686.534180    -126585.952393     100.321716     100.321716    -126686.534180             0.0             -126686.534180     348.478357  100.581787        0.612549
4      -126585.952393      -126585.982788    -126585.952393     100.551514     100.551514    -126585.982788             0.0             -126585.982788     447.865564    0.030396       -0.000244
5      -126485.201477      -126585.952148    -126485.201477     100.781311     100.781311    -126585.952148             0.0             -126485.170898     447.865564  100.750671        0.750671
6      -126484.941040      -126485.952148    -126484.941040     101.011108     101.011108    -126485.952148             0.0             -126485.982910     498.570276    1.011108      -48.284180
7      -126436.626221      -126436.656860    -126436.626221      49.325928      49.325928    -126436.656860             0.0             -126436.595703     598.539551    0.030640       -0.000085
8      -126387.101135      -126436.595459    -126387.101135      49.555725      49.555725    -126436.595459             0.0             -126436.595459     649.014404   49.494324       -0.000146
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=2867325/4096, alpha=3765/8192.[0m
[11/09 15:26:46]  --------------------------------------------------------------------------------
[11/09 15:26:46]  Iteration: 17 (1 solution, 15 counterexamples)
[11/09 15:27:48]  Generator returned sat in 60.057179 secs.
[11/09 15:27:48]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:27:59]  Improved number of small numbers from 65 to 88 out of a max of 202
[11/09 15:27:59]  Verifer returned sat in 11.485079 secs.
[11/09 15:27:59]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t       queue_t
0          61173.511780          61173.481201        61173.511780         0.123779         0.123779        61173.481201          0.000000      0.030579
1          61173.511780          61173.511780        61173.511780         0.030518         0.030518        61173.511780          0.000000      0.000000
2         123512.477905          61273.511780       123512.477905     62338.966125     62338.966125        61273.511780      31069.437195  31169.528931
3         123512.477905          61373.511780       123512.477905     31169.498352     31169.498352        61373.511780      31069.437195  31069.528931
4         123512.477905          61473.511780       123512.477905     15584.764465     15584.764465        61473.511780      31069.437195  30969.528931
5         123512.477905          61573.511780       123512.477905      7792.397522      7792.397522        61573.511780      31069.437195  30869.528931
6         123512.477905          61673.511780       123512.477905      3896.214050      3896.214050        61673.511780      31069.437195  30769.528931
7         123512.477905          61773.511780       123512.477905      1948.122314      1948.122314        61773.511780      31069.437195  30669.528931
8         123512.477905          61873.511780       123512.477905       974.076447       974.076447        61873.511780      31069.437195  30569.528931
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=255340781/8192, alpha=501/16384.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -126672.745605      -126672.745850    -126672.745605       0.122070       0.122070    -126672.745850             0.0             -126672.745850     398.983826    0.000244      -99.969214
1      -126572.776367      -126572.776392    -126572.776367      99.969482      99.969482    -126572.776392             0.0             -126572.745850     398.983826    0.000024      -99.999976
2      -126250.061102      -126372.776392    -126250.061102     322.715289     322.715289    -126372.776392             0.0             -126372.776392     398.983826  122.715289      122.715289
3      -126209.976392      -126372.776392    -126209.976392     162.800000     162.800000    -126372.776392             0.0             -126272.745605     398.983826  162.800000       62.800000
4      -126209.976392      -126272.776392    -126209.976392     105.769421     105.769421    -126272.776392             0.0             -126209.946045     436.183826   62.800000        0.000000
5      -126209.976392      -126209.976392    -126209.976392      55.769421      55.769421    -126209.976392             0.0             -126209.976318     536.183594    0.000000       -0.000232
6      -126122.806970      -126209.945801    -126122.806970      87.169421      87.169421    -126209.945801             0.0             -126209.945801     549.014404   87.138831        0.000000
7      -126122.806970      -126122.806970    -126122.806970      45.027066      45.027066    -126122.806970             0.0             -126122.806885     649.014404    0.000000        0.000000
8      -126073.452838      -126122.806885    -126073.452838      49.354132      49.354132    -126122.806885             0.0             -126122.806885     649.014404   49.354047      -50.645868
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=255340781/8192, alpha=472631/163840.[0m
[11/09 15:28:14]  --------------------------------------------------------------------------------
[11/09 15:28:14]  Iteration: 18 (1 solution, 16 counterexamples)
[11/09 15:29:52]  Generator returned sat in 95.741459 secs.
[11/09 15:29:52]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:30:10]  Improved number of small numbers from 88 to 98 out of a max of 202
[11/09 15:30:10]  Verifer returned sat in 17.735394 secs.
[11/09 15:30:10]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          37780.357422          37780.326816        37780.357422         0.123535         0.123535        37780.326816          0.000000   0.030606
1          37780.387851          37780.387851        37780.387851         0.061035         0.061035        37780.387851          0.000000   0.000000
2          37870.723744          37870.723744        37870.723744        90.335893        90.335893        37870.723744          0.000000   0.000000
3          37970.723744          37970.723744        37970.723744       100.000000       100.000000        37970.723744          0.000000   0.000000
4          38125.525280          38070.723744        38125.525280       154.801536       154.801536        38070.723744         28.931286  25.870250
5          38225.555797          38170.723744        38225.555797       125.900768       125.900768        38170.723744         28.961803  25.870250
6          38296.685547          38267.723744        38296.685547        97.000000        97.000000        38267.723744         28.961803   0.000000
7          38453.319136          38367.723744        38453.319136       156.633589       156.633589        38367.723744         59.725142  25.870250
8          38555.181707          38467.723744        38555.181707       127.732821       127.732821        38467.723744         61.587713  25.870250
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=173431/2816, 
, buffer=582805/22528, alpha=434051/22528.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -126572.806885      -126524.272727    -126572.806885       0.122070       0.122070    -126524.272727        0.000000             -126524.303223    -269.021083  -48.534157     -148.534157
1      -126572.776367      -126424.272727    -126572.776367       0.030518       0.030518    -126424.272727        0.000000             -126572.776367     -86.491934 -148.503640      -65.974491
2      -126506.832394      -126506.801876    -126506.832394      65.943973      65.943973    -126506.801876        0.000000             -126506.832520     -77.176342   -0.030518      -90.714925
3      -126465.628854      -126416.117469    -126465.628854      41.203539      41.203539    -126416.117469        0.000000             -126416.148193      -1.886258  -49.511386      -74.221302
4      -126449.135232      -126391.407552    -126449.135232      16.493623      16.493623    -126391.407552        0.000000             -126391.437988     181.681152  -57.727680       25.839731
5      -126374.944447      -126374.974964    -126374.944447      74.190785      74.190785    -126374.974964        0.000000             -126374.974964     181.681152    0.030518        0.030516
6      -126325.524614      -126374.944447    -126325.524614      49.450351      49.450351    -126374.944447        0.000000             -126374.944447     248.785461   49.419833       16.554658
7      -126325.524614      -126342.079272    -126325.524614      41.203539      41.203539    -126342.079272        0.030518             -126342.109619     358.131571   16.524140       25.870250
8      -126325.524614      -126351.425382    -126325.524614      16.493623      16.493623    -126351.425382        0.061035             -126351.394775     458.162089   25.839733       25.870250
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=125/2048, 
, buffer=582805/22528, alpha=1114705/67584.[0m
[11/09 15:30:18]  --------------------------------------------------------------------------------
[11/09 15:30:18]  Iteration: 19 (1 solution, 17 counterexamples)
[11/09 15:31:18]  Generator returned sat in 58.927070 secs.
[11/09 15:31:18]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 15:31:30]  Improved number of small numbers from 71 to 86 out of a max of 202
[11/09 15:31:30]  Verifer returned sat in 11.436556 secs.
[11/09 15:31:30]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          37690.719904          37643.544245        37690.719904         0.123535         0.123535        37643.544245          0.000000  47.175659
1          37690.719904          37690.719904        37690.719904        47.175537        47.175537        37690.719904          0.000000   0.000000
2          37845.956598          37790.719904        37845.956598       155.236694       155.236694        37790.719904          0.000000  55.236694
3          37933.865046          37890.719904        37933.865046       143.145142       143.145142        37890.719904          0.000000  43.145142
4          38086.689387          37990.719904        38086.689387       195.969482       195.969482        37990.719904         40.732788  55.236694
5          38127.422175          38086.689387        38127.422175        95.969482        95.969482        38086.689387         40.732788   0.000000
6          38319.361139          38186.689387        38319.361139       191.938965       191.938965        38186.689387         77.435059  55.236694
7          38358.078669          38280.643610        38358.078669        93.954224        93.954224        38280.643610         77.435059   0.000000
8          38548.002375          38380.643610        38548.002375       189.923706       189.923706        38380.643610        112.122070  55.236694
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=114813/1024, 
, buffer=452499/8192, alpha=16509/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -126597.072998      -126697.103535    -126597.072998       0.122070       0.122070    -126697.103535        0.000000             -126597.073242    -211.640592  100.030537        0.030537
1      -126597.072998      -126597.103535    -126597.072998     100.030273     100.030273    -126597.103535        0.000000             -126597.042480     -56.464933    0.030537       55.206196
2      -126507.424336      -126652.279195    -126507.424336      89.679199      89.679199    -126652.279195        0.000000             -126652.309570     -46.113615  144.854858       55.206177
3      -126507.424336      -126562.630513    -126507.424336      22.427429      22.427429    -126562.630513        0.030518             -126562.661133      53.947420   55.175659       55.236694
4      -126507.424336      -126562.691548    -126507.424336      22.427429      22.427429    -126562.691548       32.809265             -126562.722168     186.726168   22.457947       55.236694
5      -126507.424336      -126595.470296    -126507.424336      22.427429      22.427429    -126595.470296       32.870300             -126595.500732     286.787203   55.175659       55.236694
6      -126507.424336      -126595.531331    -126507.424336      22.427429      22.427429    -126595.531331       88.106995             -126595.562012     442.023897    0.000000       55.236694
7      -126484.996907      -126650.768025    -126484.996907      22.427429      22.427429    -126650.768025      165.832153             -126650.798584     597.321627   -0.061035       55.236694
8      -126462.569478      -126706.065755    -126462.569478      22.427429      22.427429    -126706.065755      243.496277             -126706.065674     752.558321    0.000000       55.236694
fefficient=False, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=6, loss_amount=3988943/16384, 
, buffer=452499/8192, alpha=367451/16384.[0m
[11/09 15:31:44]  --------------------------------------------------------------------------------
[11/09 15:31:44]  Iteration: 20 (1 solution, 18 counterexamples)
[11/09 15:32:59]  Generator returned sat in 72.605611 secs.
[11/09 15:32:59]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:33:06]  Improved number of small numbers from 107 to 117 out of a max of 202
[11/09 15:33:06]  Verifer returned sat in 7.370697 secs.
[11/09 15:33:07]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          38298.023926           37897.99353        38298.023926         0.123535         0.123535         37897.99353          0.000000  400.030396
1          38398.054565           37997.99353        38398.054565       500.061035       500.061035         37997.99353          0.030518  400.030518
2          38398.054565           38097.99353        38398.054565        26.292489        26.292489         38097.99353          0.030518  300.030518
3          38398.054565           38197.99353        38398.054565        39.469250        39.469250         38197.99353          0.030518  200.030518
4          38398.054565           38297.99353        38398.054565        59.234393        59.234393         38297.99353          0.030518  100.030518
5          38398.054565           38397.99353        38398.054565        88.882107        88.882107         38397.99353          0.030518    0.030518
6          38531.377726           38497.99353        38531.377726       133.353678       133.353678         38497.99353          0.030518   33.353678
7          38698.085083           38597.99353        38698.085083       200.061035       200.061035         38597.99353          0.030518  100.061035
8          38898.146118           38697.99353        38898.146118       300.122070       300.122070         38697.99353          0.030518  200.122070
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=1638525/4096, alpha=125/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t      queue_t  bottle_queue_t
0      -126821.169010      -126136.884180    -126821.169010       0.122070       0.122070    -126136.884180        0.000000             -126136.914551     241.503271  -684.284831     -784.284831
1      -126821.138493      -126036.884180    -126821.138493       0.030518       0.030518    -126036.884180        0.000000             -126036.914551     450.238167  -784.254313     -675.519417
2      -126507.424561      -126145.619076    -126507.424561     313.713932     313.713932    -126145.619076        0.000000             -126507.394287     280.217822  -361.805485     -631.825830
3      -125875.629248      -125875.598730    -125875.629248     631.795313     631.795313    -125875.598730        0.000000             -125875.568359     383.860547    -0.030518        3.612207
4      -125640.343799      -125879.241455    -125640.343799     235.285449     235.285449    -125879.241455        0.030518             -126040.374268     645.023926   238.867139      400.030518
5      -125640.343799      -126040.404834    -125640.343799     161.224414     161.224414    -126040.404834        0.091553             -126040.435303     745.084961   399.969482      400.030518
6      -125640.343799      -126040.465869    -125640.343799     161.224414     161.224414    -126040.465869        0.091553             -125637.374512     442.023926   400.030518       -3.030518
7      -125637.313281      -125637.404834    -125637.313281     403.061035     403.061035    -125637.404834        0.091553             -125637.435303     942.023926     0.000000      400.000000
8      -124871.497314      -126037.404834    -124871.497314     765.815967     765.815967    -126037.404834        0.091553             -125271.558594     276.208008  1165.815967      400.000049
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=375/4096, 
, buffer=1638525/4096, alpha=825469/5120.[0m
[11/09 15:33:15]  --------------------------------------------------------------------------------
[11/09 15:33:15]  Iteration: 21 (1 solution, 19 counterexamples)
[11/09 15:33:40]  Generator returned sat in 24.219887 secs.
[11/09 15:33:40]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 15:33:45]  Improved number of small numbers from 125 to 202 out of a max of 202
[11/09 15:33:45]  Verifer returned sat in 4.306938 secs.
[11/09 15:33:45]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t      queue_t
0          38497.841064          38497.779785        38497.841064         0.123291         0.123291        38497.779785               0.0     0.061279
1          38497.841064          38497.841064        38497.841064         0.030518         0.030518        38497.841064               0.0     0.000000
2          44903.639404          38597.841064        44903.639404      6405.798340      6405.798340        38597.841064               0.0  6305.798340
3          44903.639404          38697.841064        44903.639404      3202.868652      3202.868652        38697.841064               0.0  6205.798340
4          44903.639404          38797.841064        44903.639404      1601.403809      1601.403809        38797.841064               0.0  6105.798340
5          44903.639404          38897.841064        44903.639404       800.671387       800.671387        38897.841064               0.0  6005.798340
6          44903.639404          38997.841064        44903.639404       400.305176       400.305176        38997.841064               0.0  5905.798340
7          44903.639404          39097.841064        44903.639404       200.122070       200.122070        39097.841064               0.0  5805.798340
8          44903.639404          39197.841064        44903.639404       100.030518       100.030518        39197.841064               0.0  5705.798340
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=25828675/4096, alpha=125/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0      -125700.527100      -125700.557373    -125700.527100       0.122070       0.122070    -125700.557373             0.0             -125700.557373     325.237305   0.030273        0.030273
1      -125700.496582      -125700.557373    -125700.496582       0.060791       0.060791    -125700.557373             0.0             -125660.618408     385.328857   0.060791      -39.847656
2      -125660.618652      -125660.648926    -125660.618652      39.938721      39.938721    -125660.648926             0.0             -125660.588135     485.145752   0.030273       -0.152832
3      -125640.679443      -125660.465820    -125640.679443      19.969482      19.969482    -125660.465820             0.0             -125660.466064     565.054443  19.786377       -0.304932
4      -125640.343750      -125640.374512    -125640.343750      20.122070      20.122070    -125640.374512             0.0             -125640.404785     645.115234   0.030762      -19.908447
5      -125620.405029      -125620.435303    -125620.405029      19.969482      19.969482    -125620.435303             0.0             -125620.465820     745.084717   0.030273       -0.000244
6      -125600.374268      -125620.374268    -125600.374268      20.061035      20.061035    -125620.374268             0.0             -125620.374268     825.054199  20.000000        0.000000
7      -125600.374268      -125600.374268    -125600.374268      19.969482      19.969482    -125600.374268             0.0             -125600.374512     924.871094   0.000000       -0.183105
8      -125580.404785      -125600.191162    -125580.404785      19.969482      19.969482    -125600.191162             0.0             -125600.221924     924.871094  19.786377      -80.213623
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=25828675/4096, alpha=81795/4096.[0m
[11/09 15:33:59]  --------------------------------------------------------------------------------
[11/09 15:33:59]  Iteration: 22 (1 solution, 20 counterexamples)
[11/09 15:36:40]  Generator returned sat in 158.275966 secs.
[11/09 15:36:40]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:36:51]  Improved number of small numbers from 81 to 109 out of a max of 202
[11/09 15:36:51]  Verifer returned sat in 10.870468 secs.
[11/09 15:36:51]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          38398.099365          38398.054688        38398.099365         0.123047         0.123047        38398.054688          0.000000  0.044678
1          38498.099121          38498.054688        38498.099121       100.044434       100.044434        38498.054688          0.000000  0.044434
2          38754.631862          38598.054688        38754.631862       256.577174       256.577174        38598.054688        149.110382  7.466792
3          38871.742512          38698.054688        38871.742512       124.577442       124.577442        38698.054688        166.221033  7.466792
4          38922.853296          38756.632263        38922.853296        58.577576        58.577576        38756.632263        166.221033  0.000000
5          39016.986665          38850.765632        39016.986665        94.133369        94.133369        38850.765632        166.221033  0.000000
6          39108.186718          38941.965686        39108.186718        91.200054        91.200054        38941.965686        166.221033  0.000000
7          39215.698011          39041.965686        39215.698011       107.511293       107.511293        39041.965686        166.265534  7.466792
8          39258.275720          39092.010187        39258.275720        50.044501        50.044501        39092.010187        166.265534  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=2, loss_amount=70/1573, 
, buffer=223160/29887, alpha=221830/29887.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t   queue_t  bottle_queue_t
0      -125660.114990      -125663.764160    -125660.114990       0.122070       0.122070    -125663.764160        0.000000             -125663.764160     288.443924  3.649170        3.649002
1      -125660.114990      -125663.763993    -125660.114990       3.649170       3.649170    -125663.763993        0.000000             -125663.808350     388.532715  3.649002        3.737793
2      -125660.070413      -125661.850342    -125660.070413       3.693579       3.693579    -125661.850342        0.000000             -125661.850342     484.750488  1.779928        0.000143
3      -125660.070413      -125660.070557    -125660.070413       1.735537       1.735537    -125660.070557        0.044501             -125660.114990     592.261638 -0.044358        7.466792
4      -125659.313897      -125667.581706    -125659.313897       0.756516       0.756516    -125667.581706        8.312310             -125675.092773     699.772930 -0.044501        7.466792
5      -125659.046891      -125675.092998    -125659.046891       0.267006       0.267006    -125675.092998        8.312310             -125667.715088     792.439641  7.733797        0.400509
6      -125659.046891      -125667.759710    -125659.046891       0.222505       0.222505    -125667.759710        8.312310             -125667.804199     899.461426  0.400509        7.422293
7      -125659.046891      -125674.781494    -125659.046891       0.356008       0.356008    -125674.781494        8.356811             -125674.825928     999.550425  7.377792        7.466792
8      -125659.046891      -125674.870494    -125659.046891       0.222505       0.222505    -125674.870494        8.401312             -125674.915039    1099.594926  7.422291        7.466792
fefficient=False, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=249760/29887, 
, buffer=223160/29887, alpha=350/1573.[0m
[11/09 15:37:06]  --------------------------------------------------------------------------------
[11/09 15:37:06]  Iteration: 23 (1 solution, 21 counterexamples)
[11/09 15:38:39]  Generator returned sat in 92.238175 secs.
[11/09 15:38:39]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
[0m
[11/09 15:39:06]  Improved number of small numbers from 86 to 96 out of a max of 202
[11/09 15:39:06]  Verifer returned sat in 26.747156 secs.
[11/09 15:39:06]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          38804.727295          38804.696873        38804.727295         0.123047         0.123047        38804.696873          0.000000   0.030422
1          38804.757908          38804.757908        38804.757908         0.061035         0.061035        38804.757908          0.000000   0.000000
2          38810.788426          38810.788426        38810.788426         6.030518         6.030518        38810.788426          0.000000   0.000000
3          38832.004923          38832.004923        38832.004923        21.216497        21.216497        38832.004923          0.000000   0.000000
4          38871.392141          38871.392141        38871.392141        39.387218        39.387218        38871.392141          0.000000   0.000000
5          38936.543070          38936.543070        38936.543070        65.150929        65.150929        38936.543070          0.000000   0.000000
6          39036.543070          39036.543070        39036.543070       100.000000       100.000000        39036.543070          0.000000   0.000000
7          39184.273996          39136.543070        39184.273996       147.730927       147.730927        39136.543070          0.030518  47.700409
8          39216.366305          39216.335787        39216.366305        79.792717        79.792717        39216.335787          0.030518   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=125/4096, 
, buffer=1563047/32768, alpha=1365689/135168.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -126487.671387      -126599.855835    -126487.671387       0.122070       0.122070    -126599.855835        0.000000             -126599.855835    1160.051331  112.184448       47.700256
1      -126435.341125      -126435.371643    -126435.341125     164.514709     164.514709    -126435.371643        0.000000             -126435.371643    1160.051331    0.030518        0.030518
2      -126287.640717      -126390.169189    -126287.640717     147.730927     147.730927    -126390.169189        0.030518             -126390.169189    1160.051331  102.497955       47.700409
3      -126287.640717      -126335.341125    -126287.640717     102.467438     102.467438    -126335.341125        0.030518             -126335.341125    1212.350922   47.669891        0.000000
4      -126287.640717      -126287.671234    -126287.640717      47.639374      47.639374    -126287.671234        0.030518             -126287.701660    1312.350830    0.000000       -0.000092
5      -126210.790138      -126260.927467    -126210.790138      76.850578      76.850578    -126260.927467        0.030518             -126260.927467    1335.500343   50.106812        0.000000
6      -126210.790138      -126210.820656    -126210.790138      34.830944      34.830944    -126210.820656        0.030518             -126210.851318    1435.500244    0.000000       -0.000099
7      -126153.167463      -126210.790138    -126153.167463      57.622675      57.622675    -126210.790138        0.030518             -126210.790138    1477.877668   57.592157        0.000000
8      -126153.167463      -126153.197981    -126153.167463      22.692780      22.692780    -126153.197981        0.030518             -126153.197998    1577.877441    0.000000       -0.000227
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=1563047/32768, alpha=77853/65536.[0m
[11/09 15:39:21]  --------------------------------------------------------------------------------
[11/09 15:39:21]  Iteration: 24 (1 solution, 22 counterexamples)
[11/09 15:40:16]  Generator returned sat in 52.545059 secs.
[11/09 15:40:16]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:40:44]  Improved number of small numbers from 45 to 68 out of a max of 202
[11/09 15:40:44]  Verifer returned sat in 27.078880 secs.
[11/09 15:40:44]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          38124.751709          38112.748087        38124.751709         0.123047         0.123047        38112.748087          0.000000  12.003622
1          38224.782419          38212.748087        38224.782419       112.034332       112.034332        38212.748087          0.030518  12.003815
2          38331.366398          38312.748087        38331.366398       118.587793       118.587793        38312.748087          6.614496  12.003815
3          38418.362583          38411.748087        38418.362583        99.000000        99.000000        38411.748087          6.614496   0.000000
4          38577.156479          38511.748087        38577.156479       158.793896       158.793896        38511.748087         53.404578  12.003815
5          38704.358768          38611.748087        38704.358768       139.206104       139.206104        38611.748087         80.606866  12.003815
6          38811.973264          38711.748087        38811.973264       119.618311       119.618311        38711.748087         88.221362  12.003815
7          38899.999967          38811.748087        38899.999967       100.030518       100.030518        38811.748087         88.221362   0.030518
8          39059.778605          38911.748087        39059.778605       159.809155       159.809155        38911.748087        136.026703  12.003815
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=1325181/10240, 
, buffer=393341/32768, alpha=200579/20480.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124562.435398      -124562.466064    -124562.435398       0.121826       0.121826    -124562.466064        0.000000             -124562.466064    -812.945801    0.030666       -0.060887
1      -124562.435398      -124562.374512    -124562.435398       0.030518       0.030518    -124562.374512        0.000000             -124562.404785    -700.911617   -0.060887       11.973297
2      -124435.500327      -124574.408695    -124435.500327     126.935072     126.935072    -124574.408695      138.877851             -124574.378418    -588.938320    0.030518       12.003815
3      -124335.469809      -124586.381993    -124335.469809     100.061035     100.061035    -124586.381993      138.908369             -124486.351318    -588.938320  112.003815       12.003815
4      -124335.469809      -124486.351475    -124335.469809      73.186999      73.186999    -124486.351475      138.908369             -124486.351475    -488.968994   11.973297       11.973141
5      -124253.383978      -124486.351318    -124253.383978      94.059128      94.059128    -124486.351318      274.833825             -124540.221436    -335.098694  -41.866485       12.003815
6      -124186.198887      -124540.190918    -124186.198887      67.185091      67.185091    -124540.190918      274.833825             -124540.190918    -302.344821   79.158206       11.942780
7      -124186.198887      -124472.975492    -124186.198887      40.311055      40.311055    -124472.975492      274.833825             -124472.975586    -202.314453   11.942780       11.973147
8      -124184.704648      -124472.975586    -124184.704648      13.437018      13.437018    -124472.975586      274.864343             -124472.975586    -103.747507   13.406595       12.003815
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=3, loss_amount=62370075/458752, 
, buffer=393341/32768, alpha=6164259/458752.[0m
[11/09 15:40:55]  --------------------------------------------------------------------------------
[11/09 15:40:55]  Iteration: 25 (1 solution, 23 counterexamples)
[11/09 15:41:16]  Generator returned sat in 18.649260 secs.
[11/09 15:41:16]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:41:21]  Improved number of small numbers from 148 to 174 out of a max of 202
[11/09 15:41:21]  Verifer returned sat in 5.731197 secs.
[11/09 15:41:21]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          37639.102362          37639.055118        37639.102362         0.122803         0.122803        37639.055118          0.000000    0.047244
1          38539.291339          37739.055118        38539.291339       900.236220       900.236220        37739.055118          0.047244  800.188976
2          38539.291339          37839.055118        38539.291339       200.425197       200.425197        37839.055118          0.047244  700.188976
3          38539.291339          37939.055118        38539.291339       200.377953       200.377953        37939.055118          0.047244  600.188976
4          38539.291339          38039.055118        38539.291339       200.330709       200.330709        38039.055118          0.047244  500.188976
5          38539.291339          38139.055118        38539.291339       200.283465       200.283465        38139.055118          0.047244  400.188976
6          38539.291339          38239.055118        38539.291339       200.236220       200.236220        38239.055118          0.047244  300.188976
7          38539.291339          38339.055118        38539.291339       200.188976       200.188976        38339.055118          0.047244  200.188976
8          38539.291339          38439.055118        38539.291339       200.141732       200.141732        38439.055118          0.047244  100.188976
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=101624/127, alpha=6/127.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -125753.005859      -125956.147813    -125753.005859       0.122070       0.122070    -125956.147813             0.0             -125956.147813     577.827637  203.141953      200.142090
1      -125753.005859      -125948.722616    -125753.005859     203.141602     203.141602    -125948.722616             0.0             -125948.722616     577.827637  195.716757      100.142090
2      -125753.005859      -125822.273797    -125753.005859       0.047363       0.047363    -125822.273797             0.0             -125822.273797     577.827637   69.267938        0.142090
3      -125753.005859      -125753.100569    -125753.005859      69.220472      69.220472    -125753.100569             0.0             -125753.100569     677.685547    0.094709        0.000000
4      -125653.006080      -125753.005859    -125653.006080     100.094488     100.094488    -125753.005859             0.0             -125753.053467     677.685768   99.999779        0.000000
5      -125653.006080      -125653.006080    -125653.006080      98.952756      98.952756    -125653.006080             0.0             -125652.958984     777.685547    0.000000       -0.000221
6      -125600.675372      -125653.005859    -125600.675372      52.330709      52.330709    -125653.005859             0.0             -125653.053223     825.355059   52.330488        0.000000
7      -125600.675372      -125600.675372    -125600.675372      52.283465      52.283465    -125600.675372             0.0             -125600.675537     925.354980    0.000000       -0.000079
8      -125572.226553      -125572.320801    -125572.226553      28.448819      28.448819    -125572.320801             0.0             -125572.320801     996.906006    0.094248       -0.000235
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=101624/127, alpha=145/127.[0m
[11/09 15:41:35]  --------------------------------------------------------------------------------
[11/09 15:41:35]  Iteration: 26 (1 solution, 24 counterexamples)
[11/09 15:42:46]  Generator returned sat in 67.748805 secs.
[11/09 15:42:46]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:43:00]  Improved number of small numbers from 104 to 202 out of a max of 202
[11/09 15:43:00]  Verifer returned sat in 13.442545 secs.
[11/09 15:43:00]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          10520.942627          10475.759521        10520.942627         0.122559         0.122559        10475.759521          0.000000   45.183105
1          10520.973145          10520.973145        10520.973145        45.213623        45.213623        10520.973145          0.000000    0.000000
2          37128.094971          10620.973145        37128.094971     26607.121826     26607.121826        10620.973145      26118.030518  389.091309
3          37128.094971          10720.973145        37128.094971        56.152588        56.152588        10720.973145      26118.030518  289.091309
4          37128.094971          10820.973145        37128.094971        67.122070        67.122070        10820.973145      26118.030518  189.091309
5          37128.094971          10920.973145        37128.094971        78.091553        78.091553        10920.973145      26118.030518   89.091309
6          37128.094971          11010.064453        37128.094971        89.061035        89.061035        11010.064453      26118.030518    0.000000
7          37228.125488          11110.064453        37228.125488       100.030518       100.030518        11110.064453      26118.030518    0.030518
8          37339.094971          11210.064453        37339.094971       111.000000       111.000000        11210.064453      26118.030518   11.000000
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=796859/2048, alpha=44931/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -125612.509033      -125812.631104    -125612.509033       0.122070       0.122070    -125812.631104             0.0             -125812.631104     337.341064  200.122070      100.152344
1      -125612.509033      -125712.661377    -125612.509033     200.121826     200.121826    -125712.661377             0.0             -125612.478516     337.341064  100.152344        0.152344
2      -125612.509033      -125612.539551    -125612.509033     100.122070     100.122070    -125612.539551             0.0             -125612.539551     437.188721    0.030518        0.000000
3      -125496.447998      -125612.478516    -125496.447998     116.091553     116.091553    -125612.478516             0.0             -125612.478516     437.188721  116.030518       16.061035
4      -125480.417480      -125512.478271    -125480.417480     132.061035     132.061035    -125512.478271             0.0             -125512.478271     505.097168   32.060791        0.000000
5      -125480.417480      -125480.417480    -125480.417480      26.076416      26.076416    -125480.417480             0.0             -125480.386719     605.097168    0.000000        0.000000
6      -125438.371582      -125480.417480    -125438.371582      42.045898      42.045898    -125480.417480             0.0             -125438.341064     647.112305   42.045898      -15.938965
7      -125422.402100      -125422.432617    -125422.402100      58.015381      58.015381    -125422.432617             0.0             -125422.371826     747.081787    0.030518        0.000000
8      -125348.447754      -125422.371826    -125348.447754      73.984863      73.984863    -125422.371826             0.0             -125422.371826     747.081787   73.924072      -26.045654
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=796859/2048, alpha=65411/4096.[0m
[11/09 15:43:14]  --------------------------------------------------------------------------------
[11/09 15:43:14]  Iteration: 27 (1 solution, 25 counterexamples)
[11/09 15:44:01]  Generator returned sat in 44.086498 secs.
[11/09 15:44:02]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
[0m
[11/09 15:44:33]  Improved number of small numbers from 81 to 90 out of a max of 202
[11/09 15:44:33]  Verifer returned sat in 31.538331 secs.
[11/09 15:44:33]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          37013.858032          10342.220372        37013.858032         0.122559         0.122559        10342.220372      26668.085895  3.551766
1          37013.858032          10345.772138        37013.858032         3.547119         3.547119        10345.772138      26668.085895  0.000000
2          37095.074926          10426.989032        37095.074926        81.216894        81.216894        10426.989032      26668.085895  0.000000
3          37178.074926          10509.989032        37178.074926        83.000000        83.000000        10509.989032      26668.085895  0.000000
4          37301.690597          10609.989032        37301.690597       123.615670       123.615670        10609.989032      26688.149799  3.551766
5          37389.631608          10701.481809        37389.631608        91.492777        91.492777        10701.481809      26688.149799  0.000000
6          37531.131608          10801.481809        37531.131608       141.500000       141.500000        10801.481809      26726.098034  3.551766
7          37623.319008          10897.220974        37623.319008        95.739165        95.739165        10897.220974      26726.098034  0.000000
8          37769.065396          10997.220974        37769.065396       145.746388       145.746388        10997.220974      26768.292656  3.551766
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=998861/9968, 
, buffer=8851/2492, alpha=3/623.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0      -138876.308838      -138879.841361    -138876.308838       0.122070       0.122070    -138879.841361        0.000000             -138879.841361     343.913192   3.532523        3.532523
1      -138876.304042      -138879.841361    -138876.304042       3.537319       3.537319    -138879.841361        0.000000             -138879.845947     443.922607   3.537319        3.546735
2      -126037.757091      -138678.400350    -126037.757091   12842.084270   12842.084270    -138678.400350    12637.004815             -138678.400350     342.385504   3.638443        3.551766
3      -125941.434058      -138678.313672    -125941.434058      99.961477      99.961477    -138678.313672    12826.788122             -138678.309082     535.845777 -89.908507        3.551766
4      -125841.429242      -138675.860623    -125841.429242     100.004815     100.004815    -138675.860623    12826.792937             -138675.860623     535.845777   7.638443        3.551766
5      -125841.429242      -138671.773945    -125841.429242       0.510835       0.510835    -138671.773945    12827.829053             -138671.778809     636.881892   2.515650        3.551766
6      -125841.429242      -138672.805245    -125841.429242       2.510835       2.510835    -138672.805245    12827.829053             -138672.805245     733.325311   3.546950       -0.004815
7      -125841.429242      -138669.253480    -125841.429242       3.542135       3.542135    -138669.253480    12827.829053             -138669.248779     836.877077  -0.004815        3.546950
8      -125840.923223      -138672.805245    -125840.923223       0.506019       0.506019    -138672.805245    12827.829053             -138668.747559     932.819336   4.052970       -0.004771
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=1297/1246, 
, buffer=8851/2492, alpha=1261/2492.[0m
[11/09 15:44:48]  --------------------------------------------------------------------------------
[11/09 15:44:48]  Iteration: 28 (1 solution, 26 counterexamples)
[11/09 15:45:49]  Generator returned sat in 57.975414 secs.
[11/09 15:45:49]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:46:04]  Improved number of small numbers from 86 to 202 out of a max of 202
[11/09 15:46:04]  Verifer returned sat in 14.719013 secs.
[11/09 15:46:04]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          37196.101562          10356.229004        37196.101562         0.122314         0.122314        10356.229004      26839.854980  0.017578
1          37196.101562          10356.246582        37196.101562         0.008811         0.008811        10356.246582      26839.854980  0.000000
2          37287.123535          10447.268555        37287.123535        91.021973        91.021973        10447.268555      26839.854980  0.000000
3          37381.141113          10541.286133        37381.141113        94.017578        94.017578        10541.286133      26839.854980  0.000000
4          37478.154297          10638.299316        37478.154297        97.013184        97.013184        10638.299316      26839.854980  0.000000
5          37578.163086          10738.299316        37578.163086       100.008789       100.008789        10738.299316      26839.854980  0.008789
6          37681.158691          10838.299316        37681.158691       103.004395       103.004395        10838.299316      26842.841797  0.017578
7          37775.149902          10932.308105        37775.149902        94.008789        94.008789        10932.308105      26842.841797  0.000000
8          37872.154297          11029.312500        37872.154297        97.004395        97.004395        11029.312500      26842.841797  0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=6117/2048, 
, buffer=9/512, alpha=6135/1024.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -138879.841309      -138879.841309    -138879.841309       0.121826       0.121826    -138879.841309        0.000000             -138879.841309     270.996826    0.000000      -72.916260
1      -138776.925049      -138806.916260    -138776.925049     102.916260     102.916260    -138806.916260        0.000000             -138806.916260     340.996826   29.991211        0.000000
2      -138676.898682      -138677.207031    -138676.898682     130.017578     130.017578    -138677.207031        0.008789             -138677.207031     340.996826    0.299561        0.017578
3      -138575.889893      -138584.898682    -138575.889893     101.308350     101.308350    -138584.898682        1.017578             -138584.898682     340.996826    7.991211        0.017578
4      -138472.881104      -138476.995605    -138472.881104     111.000000     111.000000    -138476.995605        4.026367             -138476.995605     340.996826    0.088135        0.017578
5      -138372.872314      -138379.559326    -138372.872314     100.096924     100.096924    -138379.559326        4.035156             -138379.559326     340.996826    2.651855        0.017578
6      -138272.863281      -138276.925293    -138272.863281     102.660889     102.660889    -138276.925293        4.044189             -138276.925293     340.996826    0.017822        0.017578
7      -138172.854736      -138176.925049    -138172.854736     100.026367     100.026367    -138176.925049        4.052734             -138176.925049     340.996826    0.017578        0.017578
8      -138071.563965      -138176.916016    -138071.563965     101.308350     101.308350    -138176.916016        5.343506             -138176.916016     340.996826  100.008545        0.017578
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, loss_amount=17719/4096, 
, buffer=9/512, alpha=9/1024.[0m
[11/09 15:46:19]  --------------------------------------------------------------------------------
[11/09 15:46:19]  Iteration: 29 (1 solution, 27 counterexamples)
[11/09 15:47:38]  Generator returned sat in 76.361546 secs.
[11/09 15:47:38]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:47:41]  Improved number of small numbers from 157 to 202 out of a max of 202
[11/09 15:47:41]  Verifer returned sat in 2.221727 secs.
[11/09 15:47:41]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          37181.168945          10341.296387        37181.168945         0.122070         0.122070        10341.296387      26839.854980  0.017578
1          37181.168945          10341.313965        37181.168945         0.016602         0.016602        10341.313965      26839.854980  0.000000
2          37281.150391          10441.295410        37281.150391        99.981445        99.981445        10441.295410      26839.854980  0.000000
3          37381.141113          10541.286133        37381.141113        99.990723        99.990723        10541.286133      26839.854980  0.000000
4          37481.141113          10641.286133        37481.141113       100.000000       100.000000        10641.286133      26839.854980  0.000000
5          37581.150391          10741.286133        37581.150391       100.009277       100.009277        10741.286133      26839.854980  0.009277
6          37681.159668          10841.286133        37681.159668       100.018555       100.018555        10841.286133      26839.855957  0.017578
7          37781.123535          10941.267578        37781.123535        99.981445        99.981445        10941.267578      26839.855957  0.000000
8          37881.114258          11041.258301        37881.114258        99.990723        99.990723        11041.258301      26839.855957  0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=1/1024, 
, buffer=9/512, alpha=19/2048.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -138879.841309      -138879.841309    -138879.841309       0.121826       0.121826    -138879.841309        0.000000             -138879.841309     270.996826    0.000000      -72.916016
1      -138776.925293      -138806.916260    -138776.925293     102.916016     102.916016    -138806.916260        0.000000             -138806.916260     340.996582   29.990967       -0.000244
2      -138676.898926      -138677.207031    -138676.898926     130.017334     130.017334    -138677.207031        0.008545             -138677.207031     340.996582    0.299561        0.017578
3      -138575.890137      -138584.898682    -138575.890137     101.308350     101.308350    -138584.898682        1.017334             -138584.898682     340.996582    7.991211        0.017578
4      -138472.881348      -138476.995605    -138472.881348     111.000000     111.000000    -138476.995605        4.026123             -138476.995605     340.996582    0.088135        0.017578
5      -138372.872559      -138379.559326    -138372.872559     100.096924     100.096924    -138379.559326        4.034912             -138379.559326     340.996582    2.651855        0.017578
6      -138272.863525      -138276.925293    -138272.863525     102.660889     102.660889    -138276.925293        4.043945             -138276.925293     340.996582    0.017822        0.017578
7      -138172.854980      -138176.925049    -138172.854980     100.026367     100.026367    -138176.925049        4.052490             -138176.925049     340.996582    0.017578        0.017578
8      -138071.564209      -138176.916260    -138071.564209     101.308350     101.308350    -138176.916260        5.343262             -138176.916260     340.996582  100.008789        0.017578
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=6, loss_amount=17719/4096, 
, buffer=9/512, alpha=9/2048.[0m
[11/09 15:47:55]  --------------------------------------------------------------------------------
[11/09 15:47:55]  Iteration: 30 (1 solution, 28 counterexamples)
[11/09 15:48:21]  Generator returned sat in 22.406410 secs.
[11/09 15:48:21]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 15:48:39]  Improved number of small numbers from 39 to 61 out of a max of 202
[11/09 15:48:39]  Verifer returned sat in 17.151475 secs.
[11/09 15:48:39]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          37344.714111          10414.385966        37344.714111         0.121826         0.121826        10414.385966      26830.297881  100.030265
1          37344.744760          10514.385966        37344.744760       100.060913       100.060913        10514.385966      26830.297881    0.060913
2          37344.744760          10514.446879        37344.744760         0.030457         0.030457        10514.446879      26830.297881    0.000000
3          37387.241255          10556.943374        37387.241255        42.496495        42.496495        10556.943374      26830.297881    0.000000
4          37443.452035          10613.154154        37443.452035        56.210781        56.210781        10613.154154      26830.297881    0.000000
5          37541.452035          10711.154154        37541.452035        98.000000        98.000000        10711.154154      26830.297881    0.000000
6          37708.993007          10811.154154        37708.993007       167.540972       167.540972        10811.154154      26830.297881   67.540972
7          37900.428589          10911.154154        37900.428589       258.976554       258.976554        10911.154154      26843.857468  145.416966
8          37900.428589          11011.154154        37900.428589       129.488277       129.488277        11011.154154      26843.857468   45.416966
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=777561/57344, 
, buffer=16677581/114688, alpha=216887/14336.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -142230.374023      -150690.494747    -142230.374023       0.121826       0.121826    -150690.494747     8460.120690             -150690.494747     104.665039    0.000033       -0.000111
1      -141975.871523      -150690.464290    -141975.871523     254.502533     254.502533    -150690.464290     8460.120690             -150690.464290      95.549159  254.472076      145.386509
2      -141776.170654      -150581.378723    -141776.170654     454.172945     454.172945    -150581.378723     8805.238281             -150581.409180     340.996338   -0.030212      145.416966
3      -141549.084182      -150499.709229    -141549.084182     227.086473     227.086473    -150499.709229     8805.238281             -150499.709229     213.879639  145.386766      145.386739
4      -141549.084182      -150499.678760    -141549.084182     113.543236     113.543236    -150499.678760     8805.238281             -150499.678760     241.186398  145.356297       72.693499
5      -141549.084182      -150427.015962    -141549.084182     145.325596     145.325596    -150427.015962     8805.268982             -150427.046631     413.940566   72.662798      145.416966
6      -141549.084182      -150499.739746    -141549.084182      72.662798      72.662798    -150499.739746     8805.268982             -150499.739746     513.910156  145.386583      145.386556
7      -141549.084182      -150499.709229    -141549.084182      36.331399      36.331399    -150499.709229     8805.268982             -150499.709229     613.879639  145.356065      145.356039
8      -141549.084182      -150499.678955    -141549.084182      18.165700      18.165700    -150499.678955     8805.268982             -150499.678955     713.849121  145.325791      145.325521
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=503/16384, 
, buffer=16677581/114688, alpha=8319579/458752.[0m
[11/09 15:48:53]  --------------------------------------------------------------------------------
[11/09 15:48:53]  Iteration: 31 (1 solution, 29 counterexamples)
[11/09 15:49:50]  Generator returned sat in 52.875499 secs.
[11/09 15:49:50]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:50:27]  Improved number of small numbers from 34 to 50 out of a max of 202
[11/09 15:50:27]  Verifer returned sat in 36.968164 secs.
[11/09 15:50:27]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          37138.124363          10395.545166        37138.124363         0.121826         0.121826        10395.545166      26692.381391  50.197806
1          37138.124363          10445.742972        37138.124363        50.167725        50.167725        10445.742972      26692.381391   0.000000
2          37415.938860          10545.742972        37415.938860       277.814498       277.814498        10545.742972      26819.997921  50.197968
3          37523.679059          10645.742972        37523.679059       157.938166       157.938166        10645.742972      26827.738119  50.197968
4          37571.481091          10743.742972        37571.481091        98.000000        98.000000        10743.742972      26827.738119   0.000000
5          37724.238820          10843.742972        37724.238820       152.757729       152.757729        10843.742972      26830.297881  50.197968
6          37769.450634          10939.152754        37769.450634        95.409782        95.409782        10939.152754      26830.297881   0.000000
7          37919.618145          11039.152754        37919.618145       150.167511       150.167511        11039.152754      26830.297881  50.167511
8          38046.997010          11139.152754        38046.997010       177.546376       177.546376        11139.152754      26857.646289  50.197968
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=2695085/90112, 
, buffer=1644887/32768, alpha=857457/90112.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -142230.374268      -142230.404480    -142230.374268       0.121582       0.121582    -142230.404480        0.000000             -142230.435059     164.275600    0.030212      -99.969788
1      -141980.176056      -142130.404480    -141980.176056     250.228424     250.228424    -142130.404480        0.030457             -142030.374023     164.275600  150.197968       50.197968
2      -141980.176056      -141980.206512    -141980.176056     150.137054     150.137054    -141980.206512        0.030457             -141980.206512     214.077632    0.000000        0.000000
3      -141779.993317      -141932.191284    -141779.993317     200.182739     200.182739    -141932.191284       50.015228             -141932.191284     214.077632  102.182739       50.197968
4      -141779.993317      -141880.176270    -141779.993317     100.152283     100.152283    -141880.176270       50.015228             -141880.176270     263.879665   50.167725        0.000000
5      -141779.993317      -141830.008545    -141779.993317      50.137054      50.137054    -141830.008545       50.015228             -141829.978271     363.879639    0.000000       -0.000026
6      -141703.818192      -141804.122559    -141703.818192      76.175125      76.175125    -141804.122559       50.015228             -141804.122559     387.704540   50.289139        0.000000
7      -141703.818192      -141753.833420    -141703.818192      38.148476      38.148476    -141753.833420       50.015228             -141753.802979     487.704540    0.000000        0.000000
8      -141646.641163      -141753.833420    -141646.641163      57.177029      57.177029    -141753.833420       50.015228             -141653.802979     487.704590   57.177029      -42.822921
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=1644887/32768, alpha=499/16384.[0m
[11/09 15:50:42]  --------------------------------------------------------------------------------
[11/09 15:50:42]  Iteration: 32 (1 solution, 30 counterexamples)
[11/09 15:51:41]  Generator returned sat in 56.117143 secs.
[11/09 15:51:42]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:51:52]  Improved number of small numbers from 40 to 48 out of a max of 202
[11/09 15:51:52]  Verifer returned sat in 10.741031 secs.
[11/09 15:51:53]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          37109.577987          10414.575928        37109.577987         0.121826         0.121826        10414.575928      26644.804098  50.197961
1          37109.577987          10464.773889        37109.577987        50.167480        50.167480        10464.773889      26644.804098   0.000000
2          37425.454319          10564.773889        37425.454319       315.876332       315.876332        10564.773889      26810.482462  50.197968
3          37542.709976          10664.773889        37542.709976       167.453624       167.453624        10664.773889      26827.738119  50.197968
4          37585.754279          10758.016160        37585.754279        93.242271        93.242271        10758.016160      26827.738119   0.000000
5          37738.512008          10858.016160        37738.512008       152.757729       152.757729        10858.016160      26830.297881  50.197968
6          37774.208364          10943.910483        37774.208364        85.894323        85.894323        10943.910483      26830.297881   0.000000
7          37919.618145          11043.910483        37919.618145       145.409782       145.409782        11043.910483      26830.297881  45.409782
8          38049.375875          11143.910483        38049.375875       175.167511       175.167511        11143.910483      26855.267424  50.197968
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=9922883/360448, 
, buffer=1644887/32768, alpha=857457/90112.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -142230.374268      -142230.404480    -142230.374268       0.121582       0.121582    -142230.404480        0.000000             -142230.409668     164.275600    0.030212      -99.969788
1      -141980.193822      -142130.404480    -141980.193822     250.210658     250.210658    -142130.404480        0.012690             -142030.399170     164.275600  150.197968       50.197968
2      -141980.193822      -141980.206512    -141980.193822     150.192891     150.192891    -141980.206512        0.012690             -141980.206512     214.077632    0.000000        0.000000
3      -141779.993317      -141932.290902    -141779.993317     200.200506     200.200506    -141932.290902       50.015228             -141932.290902     214.077632  102.282358       50.197968
4      -141779.993317      -141880.121338    -141779.993317     100.105329     100.105329    -141880.121338       50.015228             -141880.121338     263.879665   50.112793        0.000000
5      -141779.993317      -141830.008545    -141779.993317      50.057741      50.057741    -141830.008545       50.015228             -141829.978516     363.879395    0.000000       -0.000270
6      -141703.818192      -141804.122559    -141703.818192      76.175125      76.175125    -141804.122559       50.015228             -141804.122559     387.704540   50.289139        0.000000
7      -141703.818192      -141753.833420    -141703.818192      38.092639      38.092639    -141753.833420       50.015228             -141753.828369     487.704540    0.000000        0.000000
8      -141646.679234      -141753.833420    -141646.679234      57.138958      57.138958    -141753.833420       50.015228             -141653.802734     487.704590   57.138958      -42.860992
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=1644887/32768, alpha=499/98304.[0m
[11/09 15:52:07]  --------------------------------------------------------------------------------
[11/09 15:52:07]  Iteration: 33 (1 solution, 31 counterexamples)
[11/09 15:53:08]  Generator returned sat in 57.065419 secs.
[11/09 15:53:08]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:53:17]  Improved number of small numbers from 70 to 71 out of a max of 202
[11/09 15:53:17]  Verifer returned sat in 9.086802 secs.
[11/09 15:53:17]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          37060.111107          10414.575928        37060.111107         0.121826         0.121826        10414.575928      26595.337218  50.197961
1          37060.111107          10464.773889        37060.111107        50.167480        50.167480        10464.773889      26595.337218   0.000000
2          37409.709319          10564.773889        37409.709319       349.598212       349.598212        10564.773889      26794.737463  50.197968
3          37542.709976          10664.773889        37542.709976       183.198624       183.198624        10664.773889      26827.738119  50.197968
4          37592.510838          10764.772719        37592.510838        99.998829        99.998829        10764.772719      26827.738119   0.000000
5          37753.709024          10864.772719        37753.709024       161.198186       161.198186        10864.772719      26838.738338  50.197968
6          37792.509667          10953.771329        37792.509667        88.998611        88.998611        10953.771329      26838.738338   0.000000
7          37942.707634          11053.771329        37942.707634       150.197968       150.197968        11053.771329      26838.738338  50.197968
8          38073.307313          11153.771329        38073.307313       180.797646       180.797646        11153.771329      26869.338016  50.197968
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=4771009/114688, 
, buffer=1644887/32768, alpha=7706591/1376256.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -142230.374023      -142230.404480    -142230.374023       0.121582       0.121582    -142230.404480         0.00000             -142230.404785     164.275600    0.030457      -99.969543
1      -141980.193822      -142130.404480    -141980.193822     250.210658     250.210658    -142130.404480         0.01269             -142030.399414     164.275600  150.197968       50.197968
2      -141980.193822      -141980.206512    -141980.193822     150.152283     150.152283    -141980.206512         0.01269             -141980.206512     214.077632    0.000000        0.000000
3      -141780.008545      -141932.290902    -141780.008545     200.185277     200.185277    -141932.290902        50.00000             -141932.290902     214.077632  102.282358       50.197968
4      -141780.008545      -141880.121582    -141780.008545     100.100253     100.100253    -141880.121582        50.00000             -141880.121582     263.879665   50.113037        0.000000
5      -141780.008545      -141830.008545    -141780.008545      50.057741      50.057741    -141830.008545        50.00000             -141829.978271     363.879395    0.000000       -0.000270
6      -141703.828344      -141804.122559    -141703.828344      76.180201      76.180201    -141804.122559        50.00000             -141804.122559     387.699464   50.294215        0.000000
7      -141703.828344      -141753.828344    -141703.828344      38.097715      38.097715    -141753.828344        50.00000             -141753.828369     487.699464    0.000000        0.000000
8      -141646.679234      -141753.828344    -141646.679234      57.149110      57.149110    -141753.828344        50.00000             -141653.803223     487.704590   57.149110      -42.845764
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=1644887/32768, alpha=499/98304.[0m
[11/09 15:53:32]  --------------------------------------------------------------------------------
[11/09 15:53:32]  Iteration: 34 (1 solution, 32 counterexamples)
[11/09 15:54:34]  Generator returned sat in 58.483929 secs.
[11/09 15:54:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
[0m
[11/09 15:55:27]  Improved number of small numbers from 68 to 100 out of a max of 202
[11/09 15:55:27]  Verifer returned sat in 52.868791 secs.
[11/09 15:55:28]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          37108.660156          10663.634705        37108.660156         0.121582         0.121582        10663.634705      26444.964874  0.060577
1          37208.690765          10763.634705        37208.690765       100.091187       100.091187        10763.634705      26444.995270  0.060791
2          37408.721161          10863.634705        37408.721161       200.091187       200.091187        10863.634705      26545.025665  0.060791
3          37508.751556          10963.634705        37508.751556       100.091187       100.091187        10963.634705      26545.056061  0.060791
4          37558.781952          11013.725891        37558.781952        50.091187        50.091187        11013.725891      26545.056061  0.000000
5          37658.873138          11113.725891        37658.873138       100.091187       100.091187        11113.725891      26545.086456  0.060791
6          37708.903534          11163.817078        37708.903534        50.091187        50.091187        11163.817078      26545.086456  0.000000
7          37808.994720          11263.817078        37808.994720       100.091187       100.091187        11263.817078      26545.116852  0.060791
8          37859.025116          11313.908264        37859.025116        50.091187        50.091187        11313.908264      26545.116852  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=3, loss_amount=249/4096, 
, buffer=249/4096, alpha=249/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -142722.008545      -142572.654948    -142722.008545       0.121582       0.121582    -142572.654948        0.000000             -142721.978271      16.967204 -149.353597     -249.353597
1      -142721.978149      -142472.654948    -142721.978149       0.030396       0.030396    -142472.654948        0.000000             -142472.685303      78.107910 -249.323201     -288.182495
2      -142519.118978      -142433.795654    -142519.118978     202.859172     202.859172    -142433.795654        0.000000             -142433.826416     131.522420  -85.323324     -131.908813
3      -142369.734985      -142387.210164    -142369.734985     149.383993     149.383993    -142387.210164        0.000000             -142387.210205     214.077393   17.475179        0.030151
4      -142269.795776      -142369.734863    -142269.795776     117.414388     117.414388    -142369.734863        0.000000             -142369.734863     214.077637   99.939087       -0.030396
5      -142269.795776      -142269.765381    -142269.795776      90.737590      90.737590    -142269.765381        0.000000             -142269.795654     314.107910   -0.030396       -0.000122
6      -142165.704590      -142269.765381    -142165.704590     104.091187     104.091187    -142269.765381        4.030273             -142269.765381     314.107910  100.030518        0.060791
7      -142165.704590      -142169.795654    -142165.704590     100.000000     100.000000    -142169.795654        4.030273             -142169.826172     414.077393    0.060791        0.030273
8      -142065.780518      -142069.811035    -142065.780518      99.984863      99.984863    -142069.811035        4.030273             -142069.811035     414.123047    0.000244        0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=4127/1024, 
, buffer=249/4096, alpha=261895/8192.[0m
[11/09 15:55:42]  --------------------------------------------------------------------------------
[11/09 15:55:42]  Iteration: 35 (1 solution, 33 counterexamples)
[11/09 15:56:37]  Generator returned sat in 50.993528 secs.
[11/09 15:56:37]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:56:53]  Improved number of small numbers from 62 to 91 out of a max of 202
[11/09 15:56:53]  Verifer returned sat in 15.799258 secs.
[11/09 15:56:53]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          35150.409607          10355.809570        35150.409607         0.121338         0.121338        10355.809570      24794.539337  0.060699
1          35150.409607          10355.870270        35150.409607         0.030273         0.030273        10355.870270      24794.539337  0.000000
2          36274.865540          10455.870270        36274.865540      1124.455933      1124.455933        10455.870270      25818.934479  0.060791
3          36847.017517          10555.870270        36847.017517       572.212769       572.212769        10555.870270      26291.086456  0.060791
4          37143.047913          10655.870270        37143.047913       296.091187       296.091187        10655.870270      26487.116852  0.060791
5          37301.017517          10755.870270        37301.017517       158.030396       158.030396        10755.870270      26545.086456  0.060791
6          37389.956726          10844.870270        37389.956726        89.000000        89.000000        10844.870270      26545.086456  0.000000
7          37548.926331          10944.870270        37548.926331       158.969604       158.969604        10944.870270      26603.995270  0.060791
8          37638.335144          11034.339874        37638.335144        89.469604        89.469604        11034.339874      26603.995270  0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=4, loss_amount=2563349/8192, 
, buffer=249/4096, alpha=163591/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -142126.392578      -142126.392578    -142126.392578       0.121338       0.121338    -142126.392578        0.000000             -142126.422852    -429.295166    0.000000     -100.000000
1      -141993.989746      -142026.392578    -141993.989746     132.402832     132.402832    -142026.392578        0.000000             -141993.958984    -361.698242   32.402832       -0.000244
2      -141993.928711      -141993.959180    -141993.928711      32.463867      32.463867    -141993.959180        0.000000             -141993.959180    -261.759033    0.030469        0.000000
3      -141911.480151      -141993.898389    -141911.480151      82.479028      82.479028    -141993.898389        0.000000             -141993.898389    -244.207593   82.418237        0.000000
4      -141911.480151      -141911.480151    -141911.480151      41.254712      41.254712    -141911.480151        0.000000             -141911.449707    -144.207764    0.000000       -0.000171
5      -141849.582886      -141851.613281    -141849.582886      61.897266      61.897266    -141851.613281        0.000000             -141851.613281    -106.104858    2.030396        0.000000
6      -141749.491699      -141849.552490    -141749.491699     102.121582     102.121582    -141849.552490        0.030396             -141849.552490    -106.104858  100.030396        0.060791
7      -141749.491699      -141749.582886    -141749.491699      51.075989      51.075989    -141749.582886        0.030396             -141749.613525      -6.165771    0.060791       -0.000122
8      -141672.968903      -141749.521973    -141672.968903      76.583588      76.583588    -141749.521973        0.030396             -141749.552490      17.311523   76.522675       -0.000031
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=249/8192, 
, buffer=249/4096, alpha=249/8192.[0m
[11/09 15:57:01]  --------------------------------------------------------------------------------
[11/09 15:57:01]  Iteration: 36 (1 solution, 34 counterexamples)
[11/09 15:57:23]  Generator returned sat in 19.546993 secs.
[11/09 15:57:23]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:57:29]  Improved number of small numbers from 87 to 105 out of a max of 202
[11/09 15:57:29]  Verifer returned sat in 5.862801 secs.
[11/09 15:57:29]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          35130.440002          10355.809570        35130.440002         0.121338         0.121338        10355.809570      24774.569733  0.060699
1          35130.440002          10355.870270        35130.440002         0.030273         0.030273        10355.870270      24774.569733  0.000000
2          36254.895935          10455.870270        36254.895935      1124.455933      1124.455933        10455.870270      25798.964874  0.060791
3          36827.047913          10555.870270        36827.047913       572.212769       572.212769        10555.870270      26271.116852  0.060791
4          37123.078308          10655.870270        37123.078308       296.091187       296.091187        10655.870270      26467.147247  0.060791
5          37281.047913          10755.870270        37281.047913       158.030396       158.030396        10755.870270      26525.116852  0.060791
6          37369.987122          10844.870270        37369.987122        89.000000        89.000000        10844.870270      26525.116852  0.000000
7          37548.926331          10944.870270        37548.926331       178.939209       178.939209        10944.870270      26603.995270  0.060791
8          37648.319946          11044.324677        37648.319946        99.454407        99.454407        11044.324677      26603.995270  0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=4, loss_amount=681735/2048, 
, buffer=249/4096, alpha=163591/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -142126.369629      -142126.369873    -142126.369629       0.121338       0.121338    -142126.369873        0.000000             -142126.423096    -429.317871    0.000244      -99.999756
1      -141993.989746      -142026.369873    -141993.989746     132.380127     132.380127    -142026.369873        0.000000             -141993.958984    -361.698242   32.380127       -0.000244
2      -141993.944092      -141993.959180    -141993.944092      32.425781      32.425781    -141993.959180        0.000000             -141993.959180    -261.759033    0.015088       -0.015381
3      -141911.480151      -141993.792065    -141911.480151      82.479028      82.479028    -141993.792065        0.000000             -141993.792065    -244.207593   82.311914        0.000000
4      -141911.480151      -141911.480151    -141911.480151      41.254712      41.254712    -141911.480151        0.000000             -141911.465088    -144.207764    0.000000       -0.000171
5      -141849.552490      -141851.598145    -141849.552490      61.927661      61.927661    -141851.598145        0.000000             -141851.598145    -106.135254    2.045654        0.000000
6      -141749.476562      -141849.537598    -141749.476562     102.121582     102.121582    -141849.537598        0.015137             -141849.537598    -106.135254  100.045898        0.060791
7      -141749.476562      -141749.552490    -141749.476562      51.075989      51.075989    -141749.552490        0.015137             -141749.613525      -6.196045    0.060791        0.000000
8      -141672.915741      -141749.491699    -141672.915741      76.621613      76.621613    -141749.491699        0.015137             -141749.552490      17.242920   76.560822       -0.000214
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=31/2048, 
, buffer=249/4096, alpha=249/8192.[0m
[11/09 15:57:42]  --------------------------------------------------------------------------------
[11/09 15:57:42]  Iteration: 37 (1 solution, 35 counterexamples)
[11/09 15:58:31]  Generator returned sat in 45.194627 secs.
[11/09 15:58:31]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
[0m
[11/09 15:58:46]  Improved number of small numbers from 74 to 143 out of a max of 202
[11/09 15:58:46]  Verifer returned sat in 14.726744 secs.
[11/09 15:58:46]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          40333.144043          15543.352336        40333.144043         0.121094         0.121094        15543.352336      24774.539398  15.252309
1          40433.174510          15643.352336        40433.174510       115.282776       115.282776        15643.352336      24774.569733  15.252441
2          40485.369537          15710.799805        40485.369537        67.447469        67.447469        15710.799805      24774.569733   0.000000
3          40602.817006          15810.799805        40602.817006       117.447469       117.447469        15810.799805      24776.764760  15.252441
4          40631.066193          15854.301432        40631.066193        43.501628        43.501628        15854.301432      24776.764760   0.000000
5          40724.567820          15947.803060        40724.567820        93.501628        93.501628        15947.803060      24776.764760   0.000000
6          40839.820262          16047.803060        40839.820262       115.252441       115.252441        16047.803060      24776.764760  15.252441
7          40978.944855          16147.803060        40978.944855       154.377035       154.377035        16147.803060      24815.889353  15.252441
8          41025.658824          16209.769470        41025.658824        61.966410        61.966410        16209.769470      24815.889353   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=2, loss_amount=480763/12288, 
, buffer=31237/2048, alpha=249399/16384.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0      -142031.940186      -142032.516602    -142031.940186       0.121094       0.121094    -142032.516602        0.000000             -142032.516602    -718.445557   0.576416        0.030518
1      -142031.940186      -142031.940430    -142031.940186       0.576416       0.576416    -142031.940430        0.000000             -142031.940430    -619.416260   0.000244       -0.940186
2      -142030.181152      -142031.000000    -142030.181152       1.759277       1.759277    -142031.000000        0.000000             -142031.030518    -505.013184   0.818848       15.221924
3      -142030.181152      -142045.372803    -142030.181152       0.788574       0.788574    -142045.372803        0.000000             -142045.372803    -405.043457  15.191650       15.191650
4      -142030.181152      -142045.372803    -142030.181152       0.303223       0.303223    -142045.372803        0.000000             -142045.402832    -305.013184  15.191650       15.221924
5      -142030.181152      -142045.403076    -142030.181152       0.091064       0.091064    -142045.403076       15.191650             -142045.433594    -189.791016   0.030273       15.252441
6      -142030.120361      -142060.594971    -142030.120361       0.091064       0.091064    -142060.594971       15.222168             -142060.594971     -89.821289  15.252441       15.252441
7      -142030.120361      -142060.594971    -142030.120361       0.091064       0.091064    -142060.594971       15.252441             -142060.625244      10.208984  15.222168       15.252441
8      -142030.120361      -142060.625244    -142030.120361       0.091064       0.091064    -142060.625244       15.252441             -141960.594971      10.209229  15.252441      -84.747314
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=31237/2048, 
, buffer=31237/2048, alpha=373/4096.[0m
[11/09 15:59:01]  --------------------------------------------------------------------------------
[11/09 15:59:01]  Iteration: 38 (1 solution, 36 counterexamples)
[11/09 15:59:45]  Generator returned unsat in 39.693208 secs.
[11/09 15:59:45]  [96mNo more solutions found[0m
[11/09 15:59:45]  Final solutions:
[11/09 15:59:45]  0: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 15:59:45]  Took 2678.623941 secs.
