[11/09 15:15:06]  Ideal: desired_util_f=1, desired_queue_bound_multiplier=0.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=0.5, desired_loss_amount_bound_alpha=3
[11/09 15:15:06]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=1.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=1.5, desired_loss_amount_bound_alpha=3
[11/09 15:15:14]  --------------------------------------------------------------------------------
[11/09 15:15:14]  Iteration: 1 (0 solution, 0 counterexamples)
[11/09 15:15:14]  Generator returned sat in 0.006338 secs.
[11/09 15:15:14]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 15:15:16]  Improved number of small numbers from 202 to 202 out of a max of 202
[11/09 15:15:16]  Verifer returned sat in 2.110293 secs.
[11/09 15:15:16]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0           -300.541667           -300.541667         -300.541667           0.1250           0.1250         -300.541667              0.00     0.0000
1           6253.145833           -200.541667         6253.145833        6553.6875        6553.6875         -200.541667              0.00  6453.6875
2           6253.145833           -100.541667         6253.145833           0.1250           0.1250         -100.541667              0.00  6353.6875
3           6253.145833             -0.541667         6253.145833         408.5000         408.5000           -0.541667              0.00  6253.6875
4           6253.145833             99.458333         6253.145833        1214.9375        1214.9375           99.458333              0.00  6153.6875
5           6253.145833            199.458333         6253.145833        2827.8125        2827.8125          199.458333              0.00  6053.6875
6           6253.145833            299.458333         6253.145833        6053.5625        6053.5625          299.458333              0.00  5953.6875
7          12804.520833            399.458333        12804.520833       12505.0625       12505.0625          399.458333           5951.25  6453.8125
8          31758.770833            499.458333        31758.770833       25408.0625       25408.0625          499.458333          24805.50  6453.8125
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=49611/2, 
, buffer=103261/16, alpha=33/8.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0        -132935.5625        -133035.6875      -132935.5625         0.1250         0.1250      -133035.6875          0.0000               -132935.5625     -1736.0000    100.1250          0.1250
1        -132935.5625        -132935.6875      -132935.5625       100.1250       100.1250      -132935.6875          0.0000               -132935.4375         0.0000      0.1250       1636.1250
2        -128117.8750        -134571.5625      -128117.8750      4817.8125      4817.8125      -134571.5625          0.0000               -134571.5625        99.8750   6453.6875       6453.6875
3        -128017.6250        -134571.5625      -128017.6250      6553.9375      6553.9375      -134571.5625          0.1250               -134471.4375        99.8750   6553.8125       6453.8125
4        -124745.2500        -134471.4375      -124745.2500      9826.1875      9826.1875      -134471.4375       3172.5000               -134471.4375        99.8750   6553.6875       6453.8125
5        -111456.2500        -134371.4375      -111456.2500     19842.6875     19842.6875      -134371.4375      16461.3750               -134371.4375       199.7500   6453.8125       6453.8125
6         -77834.3750        -134371.4375       -77834.3750     40075.6875     40075.6875      -134371.4375      56536.9375               -134371.3125      6753.4375      0.1250       6453.8125
7           2506.9375        -140825.0000         2506.9375     80341.4375     80341.4375      -140825.0000      56536.9375               -140825.0000    -73488.0000  86795.0000       6453.6875
8          63477.7500         -60483.6875        63477.7500    147765.8125    147765.8125       -60483.6875      56537.0625                  6940.8125   -134358.5625  67424.3750       6453.8125
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, loss_amount=904591/16, 
, buffer=103261/16, alpha=159/8.[0m
[11/09 15:15:25]  --------------------------------------------------------------------------------
[11/09 15:15:25]  Iteration: 2 (0 solution, 1 counterexamples)
[11/09 15:15:25]  Generator returned sat in 0.738360 secs.
[11/09 15:15:25]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 15:15:33]  Improved number of small numbers from 36 to 65 out of a max of 202
[11/09 15:15:33]  Verifer returned sat in 7.720641 secs.
[11/09 15:15:33]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          12731.196289           7006.704150        12731.196289         0.124756         0.124756         7006.704150       5324.468974  400.023165
1          12831.204313           7106.704150        12831.204313       500.031189       500.031189         7106.704150       5324.476771  400.023392
2          12831.204313           7206.704150        12831.204313         0.966858         0.966858         7206.704150       5324.476771  300.023392
3          12831.204313           7306.704150        12831.204313         0.467834         0.467834         7306.704150       5324.476771  200.023392
4          12831.204313           7406.704150        12831.204313         0.218323         0.218323         7406.704150       5324.476771  100.023392
5          12831.204313           7506.704150        12831.204313         0.093567         0.093567         7506.704150       5324.476771    0.023392
6          12831.212110           7506.735339        12831.212110         0.031189         0.031189         7506.735339       5324.476771    0.000000
7          12831.219907           7506.743136        12831.219907         0.007797         0.007797         7506.743136       5324.476771    0.000000
8          12831.227704           7506.750933        12831.227704         0.007797         0.007797         7506.750933       5324.476771    0.000000
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=26215933/65536, alpha=511/65536.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124712.081787      -128295.197855    -124712.081787       0.124512       0.124512    -128295.197855     3172.491959             -128195.190186    -547.880848  410.624109      310.624109
1      -124712.081787      -128195.190058    -124712.081787       0.007812       0.007812    -128195.190058     3172.491959             -128195.190058    -447.888645  310.616312      310.616312
2      -124712.081787      -128195.190058    -124712.081787     134.007797     134.007797    -128195.190058     3172.491959             -128195.197754    -491.769493  310.616312      166.735464
3      -124712.081787      -128051.309210    -124712.081787     258.523392     258.523392    -128051.309210     3172.491959             -128051.316895    -158.489502  166.735464      400.015455
4      -124470.289961      -128284.581543    -124470.289961     408.527290     408.527290    -128284.581543     3172.499756             -128284.581543    -300.265594  641.791826      400.023392
5      -124470.289961      -128042.813108    -124470.289961      16.992203      16.992203    -128042.813108     3572.515350             -128042.821045     199.750000    0.007797      400.023392
6      -124453.305555      -128442.828613    -124453.305555      16.992203      16.992203    -128442.828613     3589.499512             -128442.828613     299.749756  400.023546      400.023392
7      -124453.305555      -128059.821045    -124453.305555      16.992203      16.992203    -128059.821045     3589.499512             -128059.821045      16.742203   17.015978       17.015839
8      -124453.305555      -128059.820906    -124453.305555      16.992203      16.992203    -128059.820906     4456.132568                6940.812256    1366.382812 -849.617218      400.023392
fefficient=False, bounded_queue=False, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=4, loss_amount=84124671/65536, 
, buffer=26215933/65536, alpha=1113601/65536.[0m
[11/09 15:15:41]  --------------------------------------------------------------------------------
[11/09 15:15:41]  Iteration: 3 (0 solution, 2 counterexamples)
[11/09 15:15:42]  Generator returned sat in 0.533513 secs.
[11/09 15:15:42]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 15:15:51]  Improved number of small numbers from 27 to 51 out of a max of 202
[11/09 15:15:51]  Verifer returned sat in 8.628783 secs.
[11/09 15:15:51]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          12336.698486           7003.264539        12336.698486         0.124756         0.124756         7003.264539       5324.476771  8.957176
1          12431.188779           7103.264539        12431.188779       103.447469       103.447469         7103.264539       5324.476771  3.447469
2          12431.188779           7106.712008        12431.188779         3.416341         3.416341         7106.712008       5324.476771  0.000000
3          12540.114845           7206.712008        12540.114845       108.926066       108.926066         7206.712008       5324.476771  8.926066
4          12540.114845           7215.638074        12540.114845         2.708171         2.708171         7215.638074       5324.476771  0.000000
5          12653.103167           7315.638074        12653.103167       112.988322       112.988322         7315.638074       5328.507899  8.957194
6          12653.103167           7324.595268        12653.103167         2.708171         2.708171         7324.595268       5328.507899  0.000000
7          12766.122617           7424.595268        12766.122617       113.019450       113.019450         7424.595268       5332.570155  8.957194
8          12766.122617           7433.552462        12766.122617         2.708171         2.708171         7433.552462       5332.570155  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=2, loss_amount=66301/8192, 
, buffer=55033/6144, alpha=16639/6144.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124580.348389      -128055.879150    -124580.348389       0.124512       0.124512    -128055.879150     3475.468689             -128055.879150    -687.230581    0.062073        0.031045
1      -124580.348389      -128055.848122    -124580.348389       0.031250       0.031250    -128055.848122     3475.468689             -128055.817139    -578.335449    0.031045        8.926176
2      -124487.251036      -128064.711933    -124487.251036      93.128398      93.128398    -128064.711933     3475.468689             -128064.711933    -580.327850  101.992208        0.031128
3      -124487.251036      -127962.750853    -124487.251036      31.968872      31.968872    -127962.750853     3475.499817             -127962.781738    -471.370656    0.000000        8.957194
4      -124455.282164      -127971.708047    -124455.282164      31.968872      31.968872    -127971.708047     3475.499817             -127939.708252    -403.339600   40.926066        8.957123
5      -124355.251036      -127862.781982    -124355.251036     140.957194     140.957194    -127862.781982     3475.530945             -127862.781982    -403.339528   32.000002        8.957194
6      -124355.251036      -127839.708047    -124355.251036      31.968872      31.968872    -127839.708047     3475.530945             -127839.708047    -403.339600    8.926066      -91.042877
7      -124184.223794      -127691.785889    -124184.223794     179.953308     179.953308    -127691.785889     3475.562073             -127691.785889    -374.335642   32.000022        8.957194
8      -124184.223794      -127668.743060    -124184.223794      31.968872      31.968872    -127668.743060     3475.562073                6940.812256    -274.366943    8.957194        8.925893
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=255/4096, 
, buffer=55033/6144, alpha=261889/8192.[0m
[11/09 15:15:59]  --------------------------------------------------------------------------------
[11/09 15:15:59]  Iteration: 4 (0 solution, 3 counterexamples)
[11/09 15:16:03]  Generator returned sat in 3.861185 secs.
[11/09 15:16:03]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 15:16:13]  Improved number of small numbers from 41 to 129 out of a max of 202
[11/09 15:16:13]  Verifer returned sat in 10.285222 secs.
[11/09 15:16:13]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          14658.986448           8857.497978        14658.986448         0.124512         0.124512         8857.497978       5794.772527  6.715942
1          14658.986448           8864.213921        14658.986448         6.684570         6.684570         8864.213921       5794.772527  0.000000
2          14665.017576           8870.245049        14665.017576         6.031128         6.031128         8870.245049       5794.772527  0.000000
3          14671.297727           8876.525200        14671.297727         6.280151         6.280151         8876.525200       5794.772527  0.000000
4          14677.515622           8882.743095        14677.515622         6.217896         6.217896         8882.743095       5794.772527  0.000000
5          14683.764646           8888.992119        14683.764646         6.249023         6.249023         8888.992119       5794.772527  0.000000
6          14690.013669           8895.241142        14690.013669         6.249023         6.249023         8895.241142       5794.772527  0.000000
7          14696.278257           8901.505730        14696.278257         6.264587         6.264587         8901.505730       5794.772527  0.000000
8          14702.558408           8907.785881        14702.558408         6.280151         6.280151         8907.785881       5794.772527  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=371791/512, alpha=50937/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t      queue_t  bottle_queue_t
0      -125201.705078      -128777.142334    -125201.705078       0.124268       0.124268    -128777.142334     2749.283203             -128777.173584   -1093.492920   826.154053      726.154053
1      -124575.519531      -128677.111328    -124575.519531    1452.339600    1452.339600    -128677.111328     2749.283203             -128677.111328   -1619.709473  1352.308594      726.123047
2      -124575.519531      -128050.925781    -124575.519531    1141.277588    1141.277588    -128050.925781     2749.283203             -128050.957031   -1519.709473   726.123047      726.123047
3      -124471.614014      -128050.925781    -124471.614014     830.028564     830.028564    -128050.925781     2749.314453             -128050.957031   -1523.552490   829.997314      726.154297
4      -124471.614014      -127947.082764    -124471.614014     518.779541     518.779541    -127947.082764     3475.500000             -128673.237061    -697.366943    -0.031250      726.154297
5      -124264.083496      -128673.268311    -124264.083496     207.530518     207.530518    -128673.268311     3706.092773             -128673.299561    -574.304688   703.092041      726.154297
6      -124264.083496      -128696.299561    -124264.083496     207.499349     207.499349    -128696.299561     3706.092773             -128696.299561    -474.335938   726.123291      726.123047
7      -124264.083496      -128696.299316    -124264.083496     207.499349     207.499349    -128696.299316     3706.092773             -128696.330566    -374.335938   726.123047      726.123047
8      -124264.083496      -128696.268555    -124264.083496     207.499349     207.499349    -128696.268555     3706.092773             -128696.268555    -274.366943   726.092285      726.092041
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=3, loss_amount=979741/1024, 
, buffer=371791/512, alpha=318719/1536.[0m
[11/09 15:16:21]  --------------------------------------------------------------------------------
[11/09 15:16:21]  Iteration: 5 (0 solution, 4 counterexamples)
[11/09 15:16:35]  Generator returned sat in 13.593088 secs.
[11/09 15:16:35]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 15:16:43]  Improved number of small numbers from 116 to 130 out of a max of 202
[11/09 15:16:43]  Verifer returned sat in 7.484998 secs.
[11/09 15:16:43]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          14524.717529           8729.894873        14524.717529         0.124512         0.124512         8729.894873       5794.772705   0.049951
1          14524.767578           8729.994873        14524.767578         0.100000         0.100000         8729.994873       5794.772705   0.000000
2          63471.267578           8829.994873        63471.267578     48946.500000     48946.500000         8829.994873      54541.822705  99.450000
3          63471.267578           8929.444873        63471.267578        49.575000        49.575000         8929.444873      54541.822705   0.000000
4          63793.330078           9029.444873        63793.330078       322.062500       322.062500         9029.444873      54664.435205  99.450000
5          63793.330078           9128.894873        63793.330078        99.250000        99.250000         9128.894873      54664.435205   0.000000
6          64140.230078           9228.894873        64140.230078       346.900000       346.900000         9228.894873      54811.885205  99.450000
7          64140.230078           9328.344873        64140.230078        99.250000        99.250000         9328.344873      54811.885205   0.000000
8          64487.130078           9428.344873        64487.130078       346.900000       346.900000         9428.344873      54959.335205  99.450000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=33401/80, 
, buffer=1989/20, alpha=19/20.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -125169.487305      -128068.076676    -125169.487305       0.124023       0.124023    -128068.076676     2699.289453             -127968.026855   -1719.809229  199.299919       99.299919
1      -125169.487305      -127968.076676    -125169.487305     199.299805     199.299805    -127968.076676     2699.289453             -127968.126465   -1619.709229   99.299919       99.399919
2      -124903.987223      -127702.776676    -124903.987223     364.800000     364.800000    -127702.776676     2699.339453             -127702.776676   -1785.109229   99.450000       99.450000
3      -124853.962223      -127702.726676    -124853.962223     149.475000     149.475000    -127702.726676     2749.314453             -127702.726676   -1685.159229   99.450000       99.450000
4      -124853.912223      -127603.276676    -124853.912223      99.500000      99.500000    -127603.276676     2749.314453             -127603.276676   -1748.420340    0.050000      -63.761111
5      -124787.612223      -127539.465565    -124787.612223      66.350000      66.350000    -127539.465565     2749.314453             -127539.515381   -1692.347006    2.538889      -41.387778
6      -124644.784446      -127495.538899    -124644.784446     145.366667     145.366667    -127495.538899     2749.314453             -127493.448730   -1594.386963  101.440000       99.400043
7      -124644.634446      -127493.448975    -124644.634446     101.590000     101.590000    -127493.448975     2749.364453             -127493.448975   -1494.437006   99.450076       99.450000
8      -124644.634446      -127493.448899    -124644.634446      66.350000      66.350000    -127493.448899     2749.364453             -127493.448730   -1394.437012   99.450000       99.449995
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=1/20, 
, buffer=1989/20, alpha=1327/20.[0m
[11/09 15:16:51]  --------------------------------------------------------------------------------
[11/09 15:16:51]  Iteration: 6 (0 solution, 5 counterexamples)
[11/09 15:16:58]  Generator returned sat in 6.487074 secs.
[11/09 15:16:58]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
[0m
[11/09 15:17:05]  Improved number of small numbers from 132 to 154 out of a max of 202
[11/09 15:17:05]  Verifer returned sat in 6.906804 secs.
[11/09 15:17:05]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          63353.019287          57398.277832        63353.019287         0.124512         0.124512        57398.277832       5794.772705  159.968750
1          63391.050537          57498.277832        63391.050537       198.000000       198.000000        57498.277832       5794.772705   98.000000
2          63391.050537          57596.277832        63391.050537        80.217041        80.217041        57596.277832       5794.772705    0.000000
3          63501.221069          57696.277832        63501.221069       110.170532       110.170532        57696.277832       5794.772705   10.170532
4          63631.174561          57796.277832        63631.174561       140.124023       140.124023        57796.277832       5794.772705   40.124023
5          63761.128052          57896.277832        63761.128052       170.077515       170.077515        57896.277832       5794.772705   70.077515
6          63891.081543          57996.277832        63891.081543       200.031006       200.031006        57996.277832       5794.772705  100.031006
7          64021.035034          58096.277832        64021.035034       229.984497       229.984497        58096.277832       5794.772705  129.984497
8          64150.988525          58196.277832        64150.988525       259.937988       259.937988        58196.277832       5794.772705  159.937988
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=655233/4096, alpha=81793/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0      -124699.704102      -124940.804917    -124699.704102       0.124023       0.124023    -124940.804917        0.000000             -124840.773926   -2204.991699  241.100815      141.100815
1      -124699.704102      -124740.804932    -124699.704102       0.031006       0.031006    -124740.804932        0.000000             -124740.804932   -2204.991943   41.100830       41.100571
2      -124699.704102      -124724.324326    -124699.704102      16.496094      16.496094    -124724.324326        0.000000             -124724.324326   -2121.472290   24.620224       24.620224
3      -124699.704102      -124724.324326    -124699.704102      16.542603      16.542603    -124724.324326        0.000000             -124724.355469   -2037.937378   24.620224        8.155136
4      -124699.704102      -124707.859238    -124699.704102      16.589111      16.589111    -124707.859238        0.000000             -124707.890381   -1946.092529    8.155136       -0.000015
5      -124699.642197      -124699.673203    -124699.642197       8.217041       8.217041    -124699.673203        0.000000             -124699.673203   -2781.441284    0.031006     -935.286865
6      -124691.409653      -123764.355332    -124691.409653       8.263550       8.263550    -123764.355332        0.030762             -123764.386230   -1594.387207 -927.085083      159.968994
7      -124219.673203      -124379.704209    -124219.673203     471.736450     471.736450    -124379.704209        0.062012             -124379.704209   -1966.092407  159.968994      159.968994
8      -124219.673203      -124379.673096    -124219.673203     159.968994     159.968994    -124379.673096        0.062012             -124379.673096   -2017.906494  159.937881        8.154907
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=127/2048, 
, buffer=655233/4096, alpha=127/4096.[0m
