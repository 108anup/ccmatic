[08/30 10:34:26]  --------------------------------------------------------------------------------
[08/30 10:34:26]  Iteration: 1 (0 solution, 0 counterexamples)
[08/30 10:34:26]  Generator returned sat in 0.004176 secs.
[08/30 10:34:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:34:27]  Improved gap from 0.1 to 100
[08/30 10:34:27]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/30 10:34:27]  Verifer returned sat in 0.380400 secs.
[08/30 10:34:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t
0       -8151.15       -8151.25    494.84     -8151.15       0.1     -8151.25        0.0      0.1             0.1
1       -8051.15       -8051.35    494.84     -8051.15     100.1     -8051.35        0.0      0.2             0.1
2       -8051.15       -8051.25    494.84     -8051.15       0.1     -8051.25        0.0      0.1           -99.9
3       -7831.15       -7951.25    494.84     -7831.15     220.1     -7951.25        0.1    120.0            20.0
4       -7109.95       -7851.25    494.84     -7109.95     841.2     -7851.25      621.3    120.0            20.0
5       -5146.35       -7751.25    494.84     -5146.35    2083.6     -7751.25     2484.9    120.0            20.0
6        -498.15       -7600.25    494.84      -498.15    4768.2     -7600.25     7033.1     69.0            20.0
7        9672.25       -7503.25    494.84      9672.25   10239.4     -7503.25    17103.5     72.0            20.0
8       30776.05       -7451.25    494.84     30776.05   21175.8     -7451.25    38107.3    120.0            20.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=37486.[0m
[08/30 10:34:27]  --------------------------------------------------------------------------------
[08/30 10:34:27]  Iteration: 2 (0 solution, 1 counterexamples)
[08/30 10:34:27]  Generator returned sat in 0.049822 secs.
[08/30 10:34:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:27]  Improved number of small numbers from 99 to 99 out of a max of 99
[08/30 10:34:27]  Verifer returned sat in 0.226484 secs.
[08/30 10:34:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0     -8151.1500    -8171.15000  494.839844   -8151.1500    0.099854  -8171.15000     0.0000   20.00000         20.0000
1     -8051.1525    -8071.15000  494.839844   -8051.1525  119.997500  -8071.15000     0.0000   19.99750         19.9975
2     -8051.1525    -8051.15500  494.839844   -8051.1525    0.002500  -8051.15500     0.0000    0.00250        -80.0025
3     -7851.1500    -7971.15000  494.839844   -7851.1500  200.005000  -7971.15000     0.0000  120.00000         20.0000
4     -7472.1475    -7801.14875  494.839844   -7472.1475  499.002500  -7801.14875   279.0025   49.99875         20.0000
5     -7472.1475    -7751.15000  494.839844   -7472.1475    0.010000  -7751.15000   279.0025    0.00000        -80.0000
6     -6873.1325    -7571.15000  494.839844   -6873.1325  599.015000  -7571.15000   678.0175   20.00000         20.0000
7     -6873.1325    -7551.15000  494.839844   -6873.1325    0.010000  -7551.15000   678.0175    0.00000        -80.0000
8     -6374.1300    -7471.15000  494.839844   -6374.1300  499.002500  -7471.15000   977.0200  120.00000         20.0000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=279207/400.[0m
[08/30 10:34:28]  --------------------------------------------------------------------------------
[08/30 10:34:28]  Iteration: 3 (0 solution, 2 counterexamples)
[08/30 10:34:28]  Generator returned sat in 0.041468 secs.
[08/30 10:34:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:28]  Improved gap from 0.0 to 21.875
[08/30 10:34:28]  Improved number of small numbers from 55 to 100 out of a max of 100
[08/30 10:34:28]  Verifer returned sat in 0.517144 secs.
[08/30 10:34:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -7678.766357   -7744.516357   22.456055 -7678.766357   0.099365 -7744.516357        0.0  65.750000         20.0000
1   -7676.891357   -7698.766357  100.581055 -7676.891357  67.625000 -7698.766357        0.0  21.875000          0.0000
2   -7676.891357   -7676.891357  178.706055 -7676.891357  21.825195 -7676.891357        0.0   0.000000        -21.8750
3   -7633.141357   -7655.016357  256.831055 -7633.141357  43.750000 -7655.016357        0.0  21.875000          0.0000
4   -7611.266357   -7633.141357  334.956055 -7611.266357  43.750000 -7633.141357        0.0  21.875000          0.0000
5   -7601.328857   -7611.266357  413.081055 -7601.328857  31.812500 -7611.266357        0.0   9.937500        -11.9375
6   -7579.453857   -7587.391357  489.206055 -7579.453857  31.812500 -7587.391357        0.0   7.937500        -13.9375
7   -7554.578857   -7565.516357  567.331055 -7554.578857  32.812500 -7565.516357        0.0  10.937500        -10.9375
8   -7532.703857   -7543.641113  567.331055 -7532.703857  32.812500 -7543.641113        0.0  10.937256        -89.0625
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:34:29]  --------------------------------------------------------------------------------
[08/30 10:34:29]  Iteration: 4 (0 solution, 3 counterexamples)
[08/30 10:34:29]  Generator returned sat in 0.066992 secs.
[08/30 10:34:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:34:29]  Improved gap from 0.0 to 100
[08/30 10:34:29]  Improved number of small numbers from 36 to 100 out of a max of 100
[08/30 10:34:29]  Verifer returned sat in 0.327624 secs.
[08/30 10:34:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7955.017090   -7955.066650  195.735107 -7955.017090    0.099121 -7955.066650    0.000000    0.049561        0.049561
1   -7855.017090   -7855.066650  195.735107 -7855.017090  100.049561 -7855.066650    0.000000    0.049561        0.049561
2   -7855.016846   -7855.016846  195.735107 -7855.016846    0.049805 -7855.016846    0.000000    0.000000      -99.950195
3   -7635.116455   -7745.591553  195.735107 -7635.116455  219.900391 -7745.591553    0.000000  110.475098       19.950195
4   -7535.116455   -7645.566650  195.735107 -7535.116455  210.475098 -7645.566650    0.000000  110.450195       19.950195
5   -7435.066650   -7551.217285  195.735107 -7435.066650  210.500000 -7551.217285    0.000000  116.150635       20.000000
6   -7246.417725   -7355.066650  195.735107 -7246.417725  304.799561 -7355.066650   88.648926   20.000000       20.000000
7   -7246.417725   -7335.116211  195.735107 -7246.417725    1.000000 -7335.116211   88.648926    0.049561      -80.000000
8   -6935.016846   -7255.066650  195.735107 -6935.016846  311.450439 -7255.066650  200.049805  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=204851/1024.[0m
[08/30 10:34:29]  --------------------------------------------------------------------------------
[08/30 10:34:29]  Iteration: 5 (0 solution, 4 counterexamples)
[08/30 10:34:29]  Generator returned sat in 0.054088 secs.
[08/30 10:34:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:30]  Improved number of small numbers from 52 to 56 out of a max of 99
[08/30 10:34:30]  Verifer returned sat in 0.786160 secs.
[08/30 10:34:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -8185.559814   -8185.609416  195.735107 -8185.559814    0.099121 -8185.609416    0.000000    0.049601       -2.468384
1   -8183.041870   -8183.091431  195.735107 -8183.041870    2.567546 -8183.091431    0.000000    0.049561      -99.950439
2   -7983.091431   -7983.091431  195.735107 -7983.091431  200.000000 -7983.091431    0.000000    0.000000        0.000000
3   -7863.140991   -7924.992310  195.735107 -7863.140991  119.950439 -7924.992310    0.000000   61.851318       19.950439
4   -7535.066650   -7835.758097  195.735107 -7535.066650  389.925659 -7835.758097  228.024780   72.666667       20.000000
5   -7435.066650   -7683.091431  195.735107 -7435.066650  172.666667 -7683.091431  228.024780   20.000000       20.000000
6   -7006.066650   -7683.091431  195.735107 -7006.066650  449.000000 -7683.091431  557.024780  120.000000       20.000000
7   -7006.066650   -7575.140991  195.735107 -7006.066650  119.950439 -7575.140991  557.024780   12.049561      -80.000000
8   -6628.190552   -7483.091309  195.735107 -6628.190552  389.925659 -7483.091309  734.900879  119.999878       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=4152329/8192.[0m
[08/30 10:34:31]  --------------------------------------------------------------------------------
[08/30 10:34:31]  Iteration: 6 (0 solution, 5 counterexamples)
[08/30 10:34:31]  Generator returned sat in 0.140404 secs.
[08/30 10:34:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:34:31]  Improved gap from 9.5247802734375 to 100
[08/30 10:34:31]  Improved number of small numbers from 61 to 96 out of a max of 100
[08/30 10:34:31]  Verifer returned sat in 0.576429 secs.
[08/30 10:34:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -8083.141113   -8203.140869  115.784668 -8083.141113    0.099121 -8203.140869    0.000000  119.999756       19.999756
1   -7983.091309   -8103.140869  115.784668 -7983.091309  220.049561 -8103.140869    0.049561  120.000000       20.000000
2   -7983.091309   -7983.190430  115.784668 -7983.091309    0.049316 -7983.190430    0.049561    0.049561      -80.000000
3   -7767.190430   -7903.140869  115.784668 -7767.190430  215.950439 -7903.140869   15.950439  120.000000       20.000000
4   -7767.190430   -7783.190674  115.784668 -7767.190430  108.975220 -7783.190674   15.950439    0.049805      -80.000000
5   -7549.289795   -7693.116455  115.784668 -7549.289795  217.950439 -7693.116455   33.851074  109.975586       20.000000
6   -7549.289795   -7603.140869  115.784668 -7549.289795  109.975220 -7603.140869   33.851074   20.000000      -80.000000
7   -7349.339355   -7503.140869  115.784668 -7349.339355  219.950439 -7503.140869   33.851074  119.950439       19.950439
8   -7029.388916   -7403.140869  115.784668 -7029.388916  439.900879 -7403.140869  253.751953  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=974035/4096.[0m
[08/30 10:34:32]  --------------------------------------------------------------------------------
[08/30 10:34:32]  Iteration: 7 (0 solution, 6 counterexamples)
[08/30 10:34:32]  Generator returned sat in 0.483607 secs.
[08/30 10:34:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:34:32]  Improved gap from 0.0025 to 100
[08/30 10:34:33]  Improved number of small numbers from 55 to 61 out of a max of 100
[08/30 10:34:33]  Verifer returned sat in 0.802056 secs.
[08/30 10:34:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7888.802490   -7908.802363 -78.554082 -7888.802490    0.099121 -7908.802363    0.00000   19.999873       19.999873
1   -7788.801113   -7808.802363 -78.554082 -7788.801113  120.001250 -7808.802363    0.00125   20.000000       20.000000
2   -7748.777363   -7748.779863 -78.554082 -7748.777363   60.023750 -7748.779863    0.00125    0.001250      -39.976250
3   -7588.799863   -7708.802363 -78.554082 -7588.799863  159.978750 -7708.802363    0.00250  120.000000       20.000000
4   -7588.799863   -7608.802363 -78.554082 -7588.799863    0.010000 -7608.802363    0.00250   20.000000      -80.000000
5   -7508.789863   -7508.802363 -78.554082 -7508.789863  100.010000 -7508.802363    0.00250    0.010000      -99.990000
6   -7288.801113   -7375.467363 -78.554082 -7288.801113  219.998750 -7375.467363    0.00250   86.663750       19.998750
7   -6988.798613   -7308.802246 -78.554082 -6988.798613  386.666250 -7308.802246  200.00375  119.999883       20.000000
8   -6988.798613   -7208.802246 -78.554082 -6988.798613    0.010000 -7208.802246  200.00375   19.999883      -80.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, loss_count=1, loss_amount=160001/800.[0m
[08/30 10:34:33]  --------------------------------------------------------------------------------
[08/30 10:34:33]  Iteration: 8 (0 solution, 7 counterexamples)
[08/30 10:34:33]  Generator returned sat in 0.026017 secs.
[08/30 10:34:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:34:34]  Improved number of small numbers from 60 to 61 out of a max of 99
[08/30 10:34:34]  Verifer returned sat in 0.980857 secs.
[08/30 10:34:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7888.802734   -7908.802363 -78.554082 -7888.802734    0.098877 -7908.802363    0.00000   19.999629       19.999629
1   -7788.801113   -7808.802363 -78.554082 -7788.801113  120.001250 -7808.802363    0.00125   20.000000       20.000000
2   -7744.777988   -7744.779863 -78.554082 -7744.777988   64.023125 -7744.779863    0.00125    0.000625      -35.976875
3   -7588.799863   -7706.802363 -78.554082 -7588.799863  155.978750 -7706.802363    0.00250  118.000000       20.000000
4   -7588.799863   -7608.802363 -78.554082 -7588.799863    0.010000 -7608.802363    0.00250   20.000000      -80.000000
5   -7507.789863   -7508.802363 -78.554082 -7507.789863  101.010000 -7508.802363    0.00250    1.010000      -98.990000
6   -7288.801113   -7375.467363 -78.554082 -7288.801113  219.998750 -7375.467363    0.00250   86.663750       19.998750
7   -6988.798613   -7308.802246 -78.554082 -6988.798613  386.666250 -7308.802246  200.00375  119.999883       20.000000
8   -6988.798613   -7208.802246 -78.553955 -6988.798613    0.010000 -7208.802246  200.00375   19.999883      -79.999873
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, loss_count=1, loss_amount=160001/800.[0m
[08/30 10:34:35]  --------------------------------------------------------------------------------
[08/30 10:34:35]  Iteration: 9 (0 solution, 8 counterexamples)
[08/30 10:34:35]  Generator returned sat in 0.155713 secs.
[08/30 10:34:35]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:34:35]  Improved gap from 0.0025 to 100
[08/30 10:34:36]  Improved number of small numbers from 63 to 71 out of a max of 100
[08/30 10:34:36]  Verifer returned sat in 0.752649 secs.
[08/30 10:34:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7444.864258   -7464.864238 -78.553955 -7444.864258    0.098877 -7464.864238    0.000000   19.999980       19.999980
1   -7364.864238   -7464.864238 -78.553955 -7364.864238  100.000000 -7464.864238    0.000000  100.000000        0.000000
2   -7244.862988   -7364.864014 -78.553955 -7244.862988  220.001250 -7364.864014    0.001250  119.999775       20.000000
3   -7244.862988   -7252.864238 -78.553955 -7244.862988    0.001250 -7252.864238    0.001250    8.000000      -80.000000
4   -7145.861113   -7164.864238 -78.553955 -7145.861113  107.001875 -7164.864238    0.001250   19.001875      -80.998125
5   -6853.360176   -7064.864014 -78.553955 -6853.360176  311.502813 -7064.864014   91.504063  119.999775       20.000000
6   -6853.360176   -6964.864238 -78.553955 -6853.360176    0.010000 -6964.864238   91.504063   20.000000      -80.000000
7   -6728.345176   -6864.864238 -78.553955 -6728.345176  145.015000 -6864.864238   91.504063   45.015000      -54.985000
8   -6404.837676   -6764.864014 -78.553955 -6404.837676  368.522500 -6764.864014  240.026563  119.999775       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=768081/3200.[0m
[08/30 10:34:36]  --------------------------------------------------------------------------------
[08/30 10:34:36]  Iteration: 10 (0 solution, 9 counterexamples)
[08/30 10:34:36]  Generator returned sat in 0.034804 secs.
[08/30 10:34:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:34:37]  Improved gap from 0.0 to 21.875
[08/30 10:34:37]  Improved number of small numbers from 46 to 100 out of a max of 100
[08/30 10:34:37]  Verifer returned sat in 0.700025 secs.
[08/30 10:34:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -7703.101318   -7703.150879  159.732666 -7703.101318   0.098633 -7703.150879        0.0   0.049561        0.049561
1   -7628.953369   -7629.002441  163.709229 -7628.953369  74.197510 -7629.002441        0.0   0.049072      -21.825928
2   -7577.900879   -7599.775879  234.482666 -7577.900879  51.101562 -7599.775879        0.0  21.875000        0.000000
3   -7577.851562   -7577.900879  295.183350 -7577.851562  21.924316 -7577.900879        0.0   0.049316      -39.250000
4   -7514.275879   -7538.601562  370.857666 -7514.275879  63.625000 -7538.601562        0.0  24.325684        0.000000
5   -7492.401123   -7514.275879  448.982666 -7492.401123  46.200439 -7514.275879        0.0  21.874756       -0.000244
6   -7470.525879   -7492.400879  527.107666 -7470.525879  43.750000 -7492.400879        0.0  21.875000        0.000000
7   -7448.650879   -7470.525879  605.232666 -7448.650879  43.750000 -7470.525879        0.0  21.875000        0.000000
8   -7435.488037   -7448.650879  605.232666 -7435.488037  35.037842 -7448.650879        0.0  13.162842      -86.837158
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:34:37]  --------------------------------------------------------------------------------
[08/30 10:34:37]  Iteration: 11 (0 solution, 10 counterexamples)
[08/30 10:34:38]  Generator returned sat in 0.660328 secs.
[08/30 10:34:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:38]  Improved gap from 0.0 to 100
[08/30 10:34:38]  Improved number of small numbers from 92 to 94 out of a max of 100
[08/30 10:34:38]  Verifer returned sat in 0.355931 secs.
[08/30 10:34:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7757.901123   -7777.900879  234.482422 -7757.901123    0.098633 -7777.900879   0.000000   19.999756       19.999756
1   -7657.876465   -7777.900879  234.482422 -7657.876465  120.024414 -7777.900879   0.024414  120.000000       20.000000
2   -7577.876465   -7677.900879  234.482422 -7577.876465  200.000000 -7677.900879   0.024414  100.000000        0.000000
3   -7457.851807   -7486.900879  234.482422 -7457.851807  220.024658 -7486.900879   0.049072   29.000000       20.000000
4   -7340.351807   -7431.884440  234.482422 -7340.351807  146.500000 -7431.884440  17.549072   73.983561       20.000000
5   -7240.327148   -7331.884277  234.482422 -7240.327148  174.008219 -7331.884277  17.573730   73.983398       20.000000
6   -7140.302246   -7177.900879  234.482422 -7140.302246  174.008301 -7177.900879  17.598633   20.000000       20.000000
7   -7004.802246   -7116.545627  234.482422 -7004.802246  155.500000 -7116.545627  53.098633   58.644748       20.000000
8   -6904.777588   -7077.900879  234.482422 -6904.777588  158.669406 -7077.900879  53.123291  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=9107/256.[0m
[08/30 10:34:39]  --------------------------------------------------------------------------------
[08/30 10:34:39]  Iteration: 12 (0 solution, 11 counterexamples)
[08/30 10:34:39]  Generator returned sat in 0.036906 secs.
[08/30 10:34:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:39]  Improved gap from 0.0025 to 0
[08/30 10:34:40]  Improved number of small numbers from 51 to 88 out of a max of 100
[08/30 10:34:40]  Verifer returned sat in 0.573331 secs.
[08/30 10:34:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -7336.513672   -7456.560547 -225.500000 -7336.513672    0.098633 -7456.560547   0.046875  120.000000       20.000000
1   -7336.513672   -7356.560303 -145.500000 -7336.513672  100.004883 -7356.560303   0.046875   19.999756        0.000000
2   -7236.513428   -7336.560547 -145.500000 -7236.513428  120.000000 -7336.560547   0.046875  100.000244        0.000244
3   -7116.511230   -7136.560547 -145.500000 -7116.511230  220.002441 -7136.560547   0.049316   20.000000       20.000000
4   -7116.511230   -7116.567910  -65.500000 -7116.511230    1.000000 -7116.567910   0.049316    0.007363        0.000000
5   -7116.508594   -7116.560410   34.492432 -7116.508594    0.010000 -7116.560410   0.049316    0.002500       -0.004932
6   -7116.501094   -7116.552910  134.485107 -7116.501094    0.010000 -7116.552910   0.049316    0.002500       -0.004756
7   -7116.493594   -7116.545410  234.482178 -7116.493594    0.010000 -7116.545410   0.049316    0.002500       -0.000186
8   -7116.486094   -7116.542725  234.482178 -7116.486094    0.010000 -7116.542725   0.049316    0.007314      -99.992686
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:34:40]  --------------------------------------------------------------------------------
[08/30 10:34:40]  Iteration: 13 (0 solution, 12 counterexamples)
[08/30 10:34:40]  Generator returned sat in 0.368646 secs.
[08/30 10:34:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:41]  Improved gap from 0.0 to 100
[08/30 10:34:42]  Improved number of small numbers from 45 to 53 out of a max of 100
[08/30 10:34:42]  Verifer returned sat in 1.330905 secs.
[08/30 10:34:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7336.511230   -7352.081504 -145.500078 -7336.511230    0.098389 -7352.081504    0.000000   15.570273        0.049180
1   -7336.511230   -7336.560410 -145.500078 -7336.511230    0.049072 -7336.560410    0.000000    0.049180      -99.950820
2   -7116.511094   -7236.560303 -145.500078 -7116.511094  220.049316 -7236.560303    0.049316  119.999893       20.000000
3   -7116.511094   -7116.609727 -145.500078 -7116.511094  119.950684 -7116.609727    0.049316    0.049316      -80.000000
4   -6939.849180   -6948.285703 -145.500078 -6939.849180  176.711230 -6948.285703    0.049316    8.387207       -3.338086
5   -6666.743418   -6836.560410 -145.500078 -6666.743418  281.492969 -6836.560410  149.816992   20.000000       20.000000
6   -6544.996934   -6736.560410 -145.500078 -6544.996934  141.746484 -6736.560410  171.563477   20.000000       20.000000
7   -6493.123691   -6664.736484 -145.500078 -6493.123691   71.873242 -6664.736484  171.563477    0.049316      -28.126758
8   -6316.461777   -6636.560303 -145.500078 -6316.461777  176.711230 -6636.560303  200.098633  119.999893       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=409701/2048.[0m
[08/30 10:34:42]  --------------------------------------------------------------------------------
[08/30 10:34:42]  Iteration: 14 (0 solution, 13 counterexamples)
[08/30 10:34:42]  Generator returned sat in 0.087720 secs.
[08/30 10:34:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:43]  Improved gap from 0.0 to 100
[08/30 10:34:43]  Improved number of small numbers from 37 to 100 out of a max of 100
[08/30 10:34:43]  Verifer returned sat in 0.535198 secs.
[08/30 10:34:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -6381.402588   -6501.353516 -1080.657715 -6381.402588    0.098389 -6501.353516    0.000000  119.950928       20.000000
1   -6381.402588   -6401.402344 -1080.657715 -6381.402588    0.049316 -6401.402344    0.000000   19.999756      -80.000000
2   -6201.402344   -6301.402588 -1080.657715 -6201.402344  200.000000 -6301.402588    0.000000  100.000244        0.000244
3   -6201.353516   -6201.402588 -1080.657715 -6201.353516  100.049072 -6201.402588    0.000000    0.049072      -99.950928
4   -6002.402588   -6002.451660 -1080.657715 -6002.402588  199.000000 -6002.451660    0.000000    0.049072       -1.000000
5   -5704.476318   -5901.402588 -1080.657715 -5704.476318  297.975342 -5901.402588  176.926270   20.000000       20.000000
6   -5704.476318   -5901.402588 -1080.657715 -5704.476318    1.000000 -5901.402588  176.926270   20.000000      -80.000000
7   -5574.976318   -5751.951660 -1080.657715 -5574.976318  149.500000 -5751.951660  176.926270    0.049072      -50.500000
8   -5376.025391   -5701.402344 -1080.657715 -5376.025391  199.000000 -5701.402344  205.377197  119.999756       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=841225/4096.[0m
[08/30 10:34:43]  --------------------------------------------------------------------------------
[08/30 10:34:43]  Iteration: 15 (0 solution, 14 counterexamples)
[08/30 10:34:44]  Generator returned sat in 0.180642 secs.
[08/30 10:34:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:44]  Improved gap from 0.00125 to 0
[08/30 10:34:44]  Improved number of small numbers from 74 to 81 out of a max of 100
[08/30 10:34:44]  Verifer returned sat in 0.431341 secs.
[08/30 10:34:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6601.304199   -6601.304199 -880.756104 -6601.304199    0.098145 -6601.304199     0.0000    0.000000        0.000000
1   -6501.304199   -6601.304199 -880.756104 -6501.304199  100.000000 -6601.304199     0.0000  100.000000        0.000000
2   -6501.304199   -6501.304199 -880.756104 -6501.304199   99.997500 -6501.304199     0.0000    0.000000     -100.000000
3   -6263.299199   -6301.304199 -880.756104 -6263.299199  238.005000 -6301.304199    18.0050   20.000000       20.000000
4   -6163.296699   -6242.307861 -880.756104 -6163.296699  120.002500 -6242.307861    18.0075   61.003662       20.000000
5   -6163.296699   -6181.306699 -800.760986 -6163.296699   61.001250 -6181.306699    18.0075    0.002500       -0.004883
6   -6163.289199   -6181.299199 -700.763604 -6163.289199    0.010000 -6181.299199    18.0075    0.002500        0.000000
7   -6163.281699   -6181.296699 -600.771240 -6163.281699    0.010000 -6181.296699    18.0075    0.007500       -0.000137
8   -6163.279199   -6181.289062 -600.771240 -6163.279199    0.010000 -6181.289062    18.0075    0.002363      -99.997637
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/30 10:34:44]  --------------------------------------------------------------------------------
[08/30 10:34:44]  Iteration: 16 (0 solution, 15 counterexamples)
[08/30 10:34:45]  Generator returned sat in 0.161058 secs.
[08/30 10:34:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:45]  Improved gap from 0.0245361328125 to 7.8125
[08/30 10:34:45]  Improved number of small numbers from 47 to 100 out of a max of 100
[08/30 10:34:45]  Verifer returned sat in 0.507679 secs.
[08/30 10:34:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6731.348145   -6731.348145 -867.125244 -6731.348145    0.097900 -6731.348145   0.000000    0.000000     -100.000000
1   -6511.323730   -6631.348145 -867.125244 -6511.323730  220.024414 -6631.348145   0.024414  120.000000       20.000000
2   -6411.299072   -6531.348145 -867.125244 -6411.299072  220.024658 -6531.348145   0.049072  120.000000       20.000000
3   -6263.299072   -6331.348389 -867.125244 -6263.299072  268.000000 -6331.348389  48.049072   20.000244       20.000000
4   -6148.299316   -6279.872803 -867.125244 -6148.299316  135.000000 -6279.872803  63.048828   68.524658       20.000000
5   -6148.299316   -6231.348145 -792.950928 -6148.299316   68.500000 -6231.348145  63.048828   20.000000       -5.825684
6   -6135.049316   -6205.522217 -700.763672 -6135.049316   33.250000 -6205.522217  63.048828    7.424072       -0.388428
7   -6126.848389   -6197.709717 -608.576172 -6126.848389   15.625000 -6197.709717  63.048828    7.812500        0.000000
8   -6126.848389   -6189.897217 -608.575928 -6126.848389    6.812500 -6189.897217  63.048828    0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/30 10:34:46]  --------------------------------------------------------------------------------
[08/30 10:34:46]  Iteration: 17 (0 solution, 16 counterexamples)
[08/30 10:34:46]  Generator returned sat in 0.289484 secs.
[08/30 10:34:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:47]  Improved gap from 0.000625 to 28.125
[08/30 10:34:48]  Improved number of small numbers from 34 to 45 out of a max of 100
[08/30 10:34:48]  Verifer returned sat in 1.587849 secs.
[08/30 10:34:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -6443.272217   -6563.272156 -725.176697 -6443.272217    0.097656 -6563.272156    0.000000  119.999939       19.999939
1   -6343.247681   -6463.272156 -725.176697 -6343.247681  220.024475 -6463.272156    0.024475  120.000000       20.000000
2   -6243.223206   -6263.272217 -725.176697 -6243.223206  220.024475 -6263.272217    0.048950   20.000061       20.000000
3   -6243.223206   -6263.272156 -653.301758 -6243.223206   14.574738 -6263.272156    0.048950   20.000000       -8.125061
4   -6235.073730   -6235.146973 -608.576172 -6235.073730   28.149475 -6235.146973    0.048950    0.024292      -55.250000
5   -6179.799072   -6179.872681 -608.576172 -6179.799072   55.298950 -6179.872681    0.048950    0.024658      -99.975342
6   -6070.225830   -6078.068481 -608.576172 -6070.225830  109.597900 -6078.068481    0.048950    7.793701      -90.402100
7   -5859.823730   -5979.872681 -608.576172 -5859.823730  218.195801 -5979.872681    0.048950  120.000000       20.000000
8   -5544.432129   -5879.872559 -608.576172 -5544.432129  435.391602 -5879.872559  215.440552  119.999878       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=220561/1024.[0m
[08/30 10:34:48]  --------------------------------------------------------------------------------
[08/30 10:34:48]  Iteration: 18 (0 solution, 17 counterexamples)
[08/30 10:34:49]  Generator returned sat in 0.992363 secs.
[08/30 10:34:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:50]  Improved number of small numbers from 27 to 99 out of a max of 99
[08/30 10:34:50]  Verifer returned sat in 0.277391 secs.
[08/30 10:34:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -6618.497070   -6738.546143 -549.902832 -6618.497070    0.097412 -6738.546143    0.049072  120.000000       20.000000
1   -6618.497070   -6638.546143 -549.902832 -6618.497070    0.048584 -6638.546143    0.049072   20.000000      -80.000000
2   -6438.497070   -6449.097168 -549.902832 -6438.497070  200.000000 -6449.097168    0.049072   10.551025        0.000000
3   -6378.096924   -6438.546143 -549.902832 -6378.096924   70.951172 -6438.546143    0.049072   60.400146      -39.599854
4   -6218.545898   -6301.546143 -549.902832 -6218.545898  219.951172 -6301.546143    0.049072   82.951172       19.951172
5   -5914.045898   -6213.222900 -549.902832 -5914.045898  387.451172 -6213.222900  204.500244   94.676758       20.000000
6   -5813.997070   -6134.545898 -549.902832 -5813.997070  194.725586 -6134.545898  204.549072  115.999756       20.000000
7   -5813.997070   -6018.546143 -549.902832 -5813.997070   98.362793 -6018.546143  204.549072    0.000000      -80.000000
8   -5575.134277   -5838.594727 -549.902832 -5575.134277  238.862793 -5838.594727  243.411865   20.048584       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, loss_count=3, loss_amount=498407/2048.[0m
[08/30 10:34:50]  --------------------------------------------------------------------------------
[08/30 10:34:50]  Iteration: 19 (0 solution, 18 counterexamples)
[08/30 10:34:50]  Generator returned sat in 0.124032 secs.
[08/30 10:34:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:50]  Improved number of small numbers from 99 to 99 out of a max of 99
[08/30 10:34:50]  Verifer returned sat in 0.177523 secs.
[08/30 10:34:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -6618.497070   -6738.546143 -549.902832 -6618.497070    0.097412 -6738.546143    0.049072  120.000000       20.000000
1   -6618.497070   -6638.546143 -549.902832 -6618.497070    0.048584 -6638.546143    0.049072   20.000000      -80.000000
2   -6438.497070   -6449.097168 -549.902832 -6438.497070  200.000000 -6449.097168    0.049072   10.551025        0.000000
3   -6378.096924   -6438.546143 -549.902832 -6378.096924   70.951172 -6438.546143    0.049072   60.400146      -39.599854
4   -6218.545898   -6301.546143 -549.902832 -6218.545898  219.951172 -6301.546143    0.049072   82.951172       19.951172
5   -5914.045898   -6212.222900 -549.902832 -5914.045898  387.451172 -6212.222900  204.500244   93.676758       20.000000
6   -5813.997070   -6134.545898 -549.902832 -5813.997070  193.725586 -6134.545898  204.549072  115.999756       20.000000
7   -5813.997070   -6018.546143 -549.902832 -5813.997070   96.862793 -6018.546143  204.549072    0.000000      -80.000000
8   -5576.634277   -5838.594727 -549.902832 -5576.634277  237.362793 -5838.594727  241.911865   20.048584       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, loss_count=3, loss_amount=495335/2048.[0m
[08/30 10:34:51]  --------------------------------------------------------------------------------
[08/30 10:34:51]  Iteration: 20 (0 solution, 19 counterexamples)
[08/30 10:34:51]  Generator returned sat in 0.208576 secs.
[08/30 10:34:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:51]  Improved number of small numbers from 99 to 99 out of a max of 99
[08/30 10:34:51]  Verifer returned sat in 0.153260 secs.
[08/30 10:34:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -6618.497314   -6738.546143 -549.902832 -6618.497314    0.097168 -6738.546143    0.049072  119.999756       20.000000
1   -6618.497314   -6638.546387 -549.902832 -6618.497314    0.048340 -6638.546387    0.049072   20.000000      -80.000000
2   -6438.497314   -6449.097412 -549.902832 -6438.497314  200.000000 -6449.097412    0.049072   10.551025        0.000000
3   -6378.097168   -6438.546143 -549.902832 -6378.097168   70.951172 -6438.546143    0.049072   60.399902      -39.599854
4   -6218.545898   -6301.546387 -549.902832 -6218.545898  219.951172 -6301.546387    0.049072   82.951416       19.951416
5   -5914.046143   -6211.223145 -549.902832 -5914.046143  387.451172 -6211.223145  204.500244   92.676758       20.000000
6   -5813.997314   -6134.545898 -549.902832 -5813.997314  192.725586 -6134.545898  204.549072  115.999512       20.000000
7   -5813.997314   -6018.546387 -549.902832 -5813.997314   95.362793 -6018.546387  204.549072    0.000000      -80.000000
8   -5578.134521   -5838.594971 -549.902832 -5578.134521  235.862793 -5838.594971  240.411865   20.048584       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, loss_count=3, loss_amount=492263/2048.[0m
[08/30 10:34:52]  --------------------------------------------------------------------------------
[08/30 10:34:52]  Iteration: 21 (0 solution, 20 counterexamples)
[08/30 10:34:52]  Generator returned sat in 0.258001 secs.
[08/30 10:34:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:53]  Improved gap from 0.0 to 100
[08/30 10:34:53]  Improved number of small numbers from 45 to 61 out of a max of 100
[08/30 10:34:53]  Verifer returned sat in 1.172632 secs.
[08/30 10:34:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7252.087646   -7372.087402 -524.235309 -7252.087646    0.097168 -7372.087402    0.000000  119.999756       19.999766
1   -7252.087646   -7252.136230 -524.235309 -7252.087646    0.048340 -7252.136230    0.000000    0.048584      -80.000234
2   -7052.136230   -7113.990244 -524.235309 -7052.136230  200.000000 -7113.990244    0.000000   61.854014       19.951182
3   -6908.087412   -7072.087412 -524.235309 -6908.087412  205.902832 -7072.087412   44.000000  120.000000       20.000000
4   -6908.087412   -6952.087646 -524.235309 -6908.087412  101.951416 -6952.087646   44.000000    0.000234      -80.000000
5   -6708.087646   -6872.087412 -524.235309 -6708.087646  200.000000 -6872.087412   44.000000  119.999766       19.999766
6   -6608.135996   -6672.087412 -524.235309 -6608.135996  219.951416 -6672.087412   44.000000   19.951416       19.951416
7   -6319.111704   -6572.087412 -524.235309 -6319.111704  308.975708 -6572.087412  232.975708   20.000000       20.000000
8   -6185.623850   -6572.087402 -524.235309 -6185.623850  153.487854 -6572.087402  266.463562  119.999990       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=3644843/16384.[0m
[08/30 10:34:54]  --------------------------------------------------------------------------------
[08/30 10:34:54]  Iteration: 22 (0 solution, 21 counterexamples)
[08/30 10:34:54]  Generator returned sat in 0.120594 secs.
[08/30 10:34:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:55]  Improved number of small numbers from 51 to 55 out of a max of 99
[08/30 10:34:55]  Verifer returned sat in 0.857597 secs.
[08/30 10:34:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7252.087646   -7252.136230 -524.235309 -7252.087646    0.097168 -7252.136230    0.000000    0.048584        0.048584
1   -7252.087646   -7252.136230 -524.235309 -7252.087646    0.048340 -7252.136230    0.000000    0.048584      -99.951416
2   -7052.136230   -7109.090541 -524.235309 -7052.136230  200.000000 -7109.090541    0.000000   56.954311        0.000000
3   -6932.087646   -6952.136230 -524.235309 -6932.087646  177.002895 -6952.136230    0.048584   20.000000       20.000000
4   -6863.586199   -6863.683367 -512.736757 -6863.586199   88.501447 -6863.683367    0.048584    0.048584        0.000000
5   -6626.157628   -6782.324777 -512.736757 -6626.157628  237.477155 -6782.324777  117.477155   38.689994       20.000000
6   -6546.109044   -6663.634783 -512.736757 -6546.109044  118.738578 -6663.634783  117.477155    0.048584        0.048584
7   -6343.537615   -6663.634766 -512.736757 -6343.537615  202.620013 -6663.634766  200.097168  119.999983       20.000000
8   -6343.537615   -6563.634766 -432.736757 -6343.537615  101.310006 -6563.634766  200.097168   19.999983        0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=819399/4096.[0m
[08/30 10:34:55]  --------------------------------------------------------------------------------
[08/30 10:34:55]  Iteration: 23 (0 solution, 22 counterexamples)
[08/30 10:34:56]  Generator returned sat in 0.328446 secs.
[08/30 10:34:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:56]  Improved gap from 0.0242919921875 to 100
[08/30 10:34:56]  Improved number of small numbers from 33 to 100 out of a max of 100
[08/30 10:34:56]  Verifer returned sat in 0.391594 secs.
[08/30 10:34:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7062.399170   -7082.399170 -693.972168 -7062.399170    0.096924 -7082.399170    0.000000   20.000000       20.000000
1   -6982.399170   -7082.399170 -693.972168 -6982.399170  100.000000 -7082.399170    0.000000  100.000000        0.000000
2   -6862.375000   -6982.398926 -693.972168 -6862.375000  220.024170 -6982.398926    0.024170  119.999756       20.000000
3   -6762.350586   -6882.399170 -693.972168 -6762.350586  220.024170 -6882.399170    0.048584  120.000000       20.000000
4   -6762.350586   -6782.399170 -693.972168 -6762.350586   99.000000 -6782.399170    0.048584   20.000000      -80.000000
5   -6583.850586   -6678.102539 -693.972168 -6583.850586  198.500000 -6678.102539    0.048584   94.203369       -1.500000
6   -6427.655762   -6535.081787 -693.972168 -6427.655762  250.398193 -6535.081787   34.743408   72.682617       20.000000
7   -6327.679688   -6382.399170 -693.972168 -6327.679688  172.658691 -6382.399170   34.743408   19.976074       19.976074
8   -6062.326416   -6382.398926 -693.972168 -6062.326416  285.329346 -6382.398926  200.072754  119.999756       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=819299/4096.[0m
[08/30 10:34:57]  --------------------------------------------------------------------------------
[08/30 10:34:57]  Iteration: 24 (0 solution, 23 counterexamples)
[08/30 10:34:58]  Generator returned sat in 0.735353 secs.
[08/30 10:34:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:34:58]  Improved gap from 0.0025 to 100
[08/30 10:34:59]  Improved number of small numbers from 63 to 73 out of a max of 100
[08/30 10:34:59]  Verifer returned sat in 0.809600 secs.
[08/30 10:34:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7412.060059   -7436.741595 -693.972168 -7412.060059    0.096924 -7436.741595    0.000000   24.681536       19.999870
1   -7312.062428   -7432.059928 -693.972168 -7312.062428  124.679167 -7432.059928    0.000000  119.997500       19.997500
2   -7232.059928   -7332.059814 -693.972168 -7232.059928  200.000000 -7332.059814    0.000000   99.999886        0.000000
3   -7132.059814   -7232.059928 -693.972168 -7132.059814  200.000000 -7232.059928    0.000000  100.000114        0.000114
4   -7030.719095   -7038.734095 -693.972168 -7030.719095  201.340833 -7038.734095    0.000000    8.015000        1.340833
5   -6742.400762   -6932.060059 -693.972168 -6742.400762  296.333333 -6932.060059  169.659167   20.000130       20.000000
6   -6742.400762   -6932.059928 -693.972168 -6742.400762    0.010000 -6932.059928  169.659167   20.000000      -80.000000
7   -6613.395762   -6783.057428 -693.972168 -6613.395762  149.005000 -6783.057428  169.659167    0.002500      -50.995000
8   -6412.057428   -6732.059814 -693.972168 -6412.057428  201.340833 -6732.059814  200.002500  119.999886       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=80001/400.[0m
[08/30 10:34:59]  --------------------------------------------------------------------------------
[08/30 10:34:59]  Iteration: 25 (0 solution, 24 counterexamples)
[08/30 10:35:02]  Generator returned sat in 2.844917 secs.
[08/30 10:35:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:35:02]  Improved gap from 0.0 to 100
[08/30 10:35:03]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/30 10:35:03]  Verifer returned sat in 0.303416 secs.
[08/30 10:35:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7221.413574   -7262.416016 -924.621338 -7221.413574    0.096680 -7262.416016    0.000000   41.002441       19.999756
1   -7221.413574   -7241.413330 -924.621338 -7221.413574    0.002686 -7241.413330    0.000000   19.999756      -80.000244
2   -7141.410889   -7141.413330 -924.621338 -7141.410889  100.002441 -7141.413330    0.000000    0.002441      -99.997559
3   -7041.413330   -7041.413330 -924.621338 -7041.413330  100.000000 -7041.413330    0.000000    0.000000     -100.000000
4   -6821.410645   -6941.413330 -924.621338 -6821.410645  220.002686 -6941.413330    0.002686  120.000000       20.000000
5   -6821.410645   -6821.413330 -924.621338 -6821.410645    0.010000 -6821.413330    0.002686    0.000000      -80.000000
6   -6502.410645   -6741.413330 -924.621338 -6502.410645  319.000000 -6741.413330  119.002686  120.000000       20.000000
7   -6502.410645   -6621.416016 -924.621338 -6502.410645    0.010000 -6621.416016  119.002686    0.002686      -80.000000
8   -6183.416016   -6541.413330 -924.621338 -6183.416016  318.997314 -6541.413330  237.997314  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=487413/2048.[0m
[08/30 10:35:03]  --------------------------------------------------------------------------------
[08/30 10:35:03]  Iteration: 26 (0 solution, 25 counterexamples)
[08/30 10:35:05]  Generator returned sat in 1.547141 secs.
[08/30 10:35:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:05]  Improved gap from 0.024169921875 to 26.5625
[08/30 10:35:05]  Improved number of small numbers from 98 to 98 out of a max of 100
[08/30 10:35:05]  Verifer returned sat in 0.433538 secs.
[08/30 10:35:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7361.386475   -7361.434814 -804.624023 -7361.386475    0.096680 -7361.434814    0.000000    0.048340        0.024170
1   -7361.386475   -7361.410645 -804.624023 -7361.386475    0.024170 -7361.410645    0.000000    0.024170      -99.975830
2   -7141.386475   -7161.410645 -804.624023 -7141.386475  220.024170 -7161.410645    0.024170   20.000000       20.000000
3   -7141.386475   -7161.410645 -731.186523 -7141.386475   13.293335 -7161.410645    0.024170   20.000000       -6.562500
4   -7134.799805   -7134.848145 -657.749023 -7134.799805   26.586670 -7134.848145    0.024170    0.024170      -26.538330
5   -7081.650635   -7108.285645 -657.749023 -7081.650635   53.173340 -7108.285645    0.024170   26.610840      -73.389160
6   -7001.914795   -7008.285645 -657.749023 -7001.914795  106.346680 -7008.285645    0.024170    6.346680      -93.653320
7   -6795.568115   -6808.285645 -657.749023 -6795.568115  212.693359 -6808.285645    0.024170   12.693359       12.693359
8   -6382.874756   -6808.285645 -657.749023 -6382.874756  425.386719 -6808.285645  305.410889  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=78179/256.[0m
[08/30 10:35:05]  --------------------------------------------------------------------------------
[08/30 10:35:05]  Iteration: 27 (0 solution, 26 counterexamples)
[08/30 10:35:07]  Generator returned sat in 0.728618 secs.
[08/30 10:35:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:07]  Improved gap from 0.04833984375 to 100
[08/30 10:35:07]  Improved number of small numbers from 57 to 69 out of a max of 100
[08/30 10:35:07]  Verifer returned sat in 0.799393 secs.
[08/30 10:35:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -7363.531006   -7383.531006 -731.186768 -7363.531006    0.096436 -7383.531006    0.000000   20.000000       19.999951
1   -7363.531006   -7383.530762 -731.186768 -7363.531006    0.034668 -7383.530762    0.000000   19.999756      -80.000049
2   -7163.565430   -7183.530957 -731.186768 -7163.565430  219.965332 -7183.530957    0.000000   19.965527       19.965527
3   -7141.386475   -7141.421137 -731.186768 -7141.386475   42.144482 -7141.421137    0.000000    0.034662      -57.855518
4   -7078.204413   -7078.321380 -731.186768 -7078.204413   63.216723 -7078.321380    0.000000    0.116967      -94.673456
5   -6983.496295   -6983.530957 -731.186768 -6983.496295   94.825085 -6983.530957    0.000000    0.034662      -99.965338
6   -6841.293329   -6883.530957 -731.186768 -6841.293329  142.237628 -6883.530957    0.000000   42.237628      -57.762372
7   -6670.174515   -6683.530957 -731.186768 -6670.174515  213.356441 -6683.530957    0.000000   13.356441       13.356441
8   -6363.496295   -6683.530762 -731.186768 -6363.496295  320.034662 -6683.530762  200.034662  119.999805       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=115420/577.[0m
[08/30 10:35:08]  --------------------------------------------------------------------------------
[08/30 10:35:08]  Iteration: 28 (0 solution, 27 counterexamples)
[08/30 10:35:09]  Generator returned sat in 0.551081 secs.
[08/30 10:35:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:09]  Improved gap from 0.000625 to 0
[08/30 10:35:10]  Improved number of small numbers from 59 to 74 out of a max of 100
[08/30 10:35:10]  Verifer returned sat in 0.795017 secs.
[08/30 10:35:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -8248.228271   -8268.228271 -731.186768 -8248.228271    0.096436 -8268.228271      0.000  20.000000       19.999892
1   -8248.228271   -8268.228027 -731.186768 -8248.228271    0.002441 -8268.228027      0.000  19.999756      -80.000108
2   -8168.225586   -8168.228163 -731.186768 -8168.225586  100.002441 -8168.228163      0.000   0.002577      -99.997423
3   -7928.233163   -7968.228163 -731.186768 -7928.233163  239.995000 -7968.228163     19.995  20.000000       20.000000
4   -7828.235663   -7868.228271 -731.186768 -7828.235663  119.997500 -7868.228271     19.995  19.997608       19.997500
5   -7828.235663   -7868.228027 -651.184268 -7828.235663    0.010000 -7868.228027     19.995  19.997364        0.000000
6   -7828.235663   -7848.230663 -551.184268 -7828.235663    0.010000 -7848.230663     19.995   0.000000        0.000000
7   -7828.225663   -7848.230663 -451.194268 -7828.225663    0.010000 -7848.230663     19.995   0.010000        0.000000
8   -7828.225663   -7848.220663 -351.194336 -7828.225663    0.010000 -7848.220663     19.995   0.000000       -0.000068
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:35:10]  --------------------------------------------------------------------------------
[08/30 10:35:10]  Iteration: 29 (0 solution, 28 counterexamples)
[08/30 10:35:11]  Generator returned sat in 1.088479 secs.
[08/30 10:35:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:12]  Improved number of small numbers from 41 to 99 out of a max of 99
[08/30 10:35:12]  Verifer returned sat in 0.333709 secs.
[08/30 10:35:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -8593.954102   -8594.002197 -431.140869 -8593.954102    0.096436 -8594.002197    0.000000    0.048096      -25.679932
1   -8468.322266   -8568.274170 -431.140869 -8468.322266  125.679932 -8568.274170    0.000000   99.951904       -0.048096
2   -8468.274170   -8468.274170 -431.140869 -8468.274170  100.000000 -8468.274170    0.000000    0.000000     -100.000000
3   -8168.225830   -8296.818115 -431.140869 -8168.225830  300.048340 -8296.818115   80.048340   48.543945       20.000000
4   -8068.177734   -8168.274170 -431.140869 -8068.177734  148.592041 -8168.274170   80.096436   20.000000       20.000000
5   -7888.177734   -8088.274170 -431.140869 -7888.177734  200.000000 -8088.274170  160.096436   40.000000       20.000000
6   -7738.177734   -7968.274170 -431.140869 -7738.177734  190.000000 -7968.274170  210.096436   20.000000       20.000000
7   -7593.905762   -7871.090088 -431.140869 -7593.905762  164.271973 -7871.090088  254.368408   22.815918       20.000000
8   -7468.129639   -7868.273926 -431.140869 -7468.129639  148.592041 -7868.273926  280.144531  119.999756       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=819397/4096.[0m
[08/30 10:35:12]  --------------------------------------------------------------------------------
[08/30 10:35:12]  Iteration: 30 (0 solution, 29 counterexamples)
[08/30 10:35:13]  Generator returned sat in 0.130093 secs.
[08/30 10:35:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:13]  Improved number of small numbers from 71 to 99 out of a max of 99
[08/30 10:35:13]  Verifer returned sat in 0.239314 secs.
[08/30 10:35:13]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -8593.954102   -8595.145264 -431.141113 -8593.954102    0.096191 -8595.145264    0.000000    1.191162      -25.679932
1   -8468.322266   -8568.274170 -431.141113 -8468.322266  126.822998 -8568.274170    0.000000   99.951904       -0.048096
2   -8468.274170   -8468.274170 -431.141113 -8468.274170  100.000000 -8468.274170    0.000000    0.000000     -100.000000
3   -8168.226074   -8296.532471 -431.141113 -8168.226074  300.048096 -8296.532471   80.048096   48.258301       20.000000
4   -8068.177979   -8168.274170 -431.141113 -8068.177979  148.306396 -8168.274170   80.096191   20.000000       20.000000
5   -7889.177979   -8086.940674 -431.141113 -7889.177979  199.000000 -8086.940674  159.096191   38.666504       20.000000
6   -7738.177734   -7968.274170 -431.141113 -7738.177734  189.666748 -7968.274170  210.096436   20.000000       20.000000
7   -7595.048584   -7869.661377 -431.141113 -7595.048584  163.129150 -7869.661377  253.225586   21.387207       20.000000
8   -7468.129395   -7868.274170 -431.141113 -7468.129395  148.306396 -7868.274170  280.144775  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=819399/4096.[0m
[08/30 10:35:13]  --------------------------------------------------------------------------------
[08/30 10:35:13]  Iteration: 31 (0 solution, 30 counterexamples)
[08/30 10:35:14]  Generator returned sat in 0.268792 secs.
[08/30 10:35:14]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:14]  Improved gap from 0.0 to 0
[08/30 10:35:14]  Improved number of small numbers from 55 to 82 out of a max of 100
[08/30 10:35:14]  Verifer returned sat in 0.507720 secs.
[08/30 10:35:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -8628.241699   -8648.241455 -351.173828 -8628.241699    0.095947 -8648.241455        0.0  19.999756       19.999756
1   -8628.241699   -8648.241455 -351.173828 -8628.241699    0.002441 -8648.241455        0.0  19.999756      -80.000244
2   -8448.239014   -8448.241699 -351.173828 -8448.239014  200.002441 -8448.241699        0.0   0.002686        0.002441
3   -8328.244385   -8348.241455 -351.173828 -8328.244385  119.997314 -8348.241455        0.0  19.997070       19.997070
4   -8328.244385   -8328.251670 -271.170898 -8328.244385    0.010000 -8328.251670        0.0   0.007285        0.000000
5   -8328.241670   -8328.244170 -171.173613 -8328.241670    0.010000 -8328.244170        0.0   0.002500        0.000000
6   -8328.234170   -8328.241670  -71.181113 -8328.234170    0.010000 -8328.241670        0.0   0.007500        0.000000
7   -8328.231670   -8328.234170   28.816162 -8328.231670    0.010000 -8328.234170        0.0   0.002500       -0.000225
8   -8328.224170   -8328.231445  128.808838 -8328.224170    0.010000 -8328.231445        0.0   0.007275       -0.000049
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, loss_count=0, loss_amount=0.[0m
[08/30 10:35:15]  --------------------------------------------------------------------------------
[08/30 10:35:15]  Iteration: 32 (0 solution, 31 counterexamples)
[08/30 10:35:18]  Generator returned sat in 2.856717 secs.
[08/30 10:35:18]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:35:18]  Improved gap from 0.001220703125 to 100
[08/30 10:35:19]  Improved number of small numbers from 37 to 57 out of a max of 100
[08/30 10:35:19]  Verifer returned sat in 0.719265 secs.
[08/30 10:35:19]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -8817.061279   -8917.062500  2.939524 -8817.061279    0.095703 -8917.062500    0.000000  100.001221        0.001353
1   -8817.061279   -8817.062500  2.939524 -8817.061279    0.002441 -8817.062500    0.000000    0.001221      -99.998647
2   -8597.063965   -8717.062500  2.939524 -8597.063965  219.998535 -8717.062500    0.000000  119.998535       19.998667
3   -8597.063965   -8597.065186  2.939524 -8597.063965  119.997559 -8597.065186    0.000000    0.001221      -80.001333
4   -8418.068848   -8517.062632  2.939524 -8418.068848  178.996338 -8517.062632    0.000000   98.993784       -1.006216
5   -8249.568125   -8417.062632  2.939524 -8249.568125  267.494507 -8417.062632   47.494507  120.000000       20.000000
6   -8236.820872   -8317.062632  2.939524 -8236.820872  132.747253 -8317.062632   47.494507   32.747253      -67.252747
7   -8071.447245   -8118.942972  2.939524 -8071.447245  198.120880 -8118.942972   47.494507    0.001221       -1.879120
8   -7775.267145   -8117.062500  2.939524 -7775.267145  296.181320 -8117.062500  221.795486  119.999868       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=14535589/65536.[0m
[08/30 10:35:19]  --------------------------------------------------------------------------------
[08/30 10:35:19]  Iteration: 33 (0 solution, 32 counterexamples)
[08/30 10:35:22]  Generator returned sat in 2.743434 secs.
[08/30 10:35:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:35:23]  Improved gap from 0.0 to 7.8125
[08/30 10:35:23]  Improved number of small numbers from 54 to 100 out of a max of 100
[08/30 10:35:23]  Verifer returned sat in 0.644290 secs.
[08/30 10:35:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -9426.303467   -9426.351562    2.939453 -9426.303467    0.095459 -9426.351562   0.000000    0.048096      -99.951904
1   -9326.303711   -9326.351318    2.939453 -9326.303711  100.047852 -9326.351318   0.000000    0.047607      -99.952148
2   -9106.303711   -9226.351562    2.939453 -9106.303711  220.047607 -9226.351562   0.047852  120.000000       20.000000
3   -8952.303711   -9043.303711    2.939453 -8952.303711  274.000000 -9043.303711  54.047852   36.952148       20.000000
4   -8852.255859   -8975.240967    2.939453 -8852.255859  137.000000 -8975.240967  54.095703   68.889404       20.000000
5   -8852.255859   -8926.351562   82.939453 -8852.255859   68.500000 -8926.351562  54.095703   20.000000        0.000000
6   -8839.005859   -8900.914062  169.689453 -8839.005859   33.250000 -8900.914062  54.095703    7.812500        0.000000
7   -8831.193359   -8893.101562  261.876953 -8831.193359   15.625000 -8893.101562  54.095703    7.812500        0.000000
8   -8831.193359   -8885.289062  354.064453 -8831.193359    6.812500 -8885.289062  54.095703    0.000000       -7.812500
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/30 10:35:23]  --------------------------------------------------------------------------------
[08/30 10:35:23]  Iteration: 34 (0 solution, 33 counterexamples)
[08/30 10:35:25]  Generator returned sat in 1.511017 secs.
[08/30 10:35:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:35:26]  Improved gap from 0.0 to 1.5625
[08/30 10:35:26]  Improved number of small numbers from 60 to 75 out of a max of 100
[08/30 10:35:26]  Verifer returned sat in 0.870929 secs.
[08/30 10:35:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8610.576416   -8712.138672    2.939453 -8610.576416    0.095215 -8712.138672     0.0000  101.562256        1.562295
1   -8610.576416   -8612.138711  101.376953 -8610.576416    0.002441 -8612.138711     0.0000    1.562295       -0.000205
2   -8510.573711   -8510.576211  101.376953 -8510.573711  101.565000 -8510.576211     0.0000    0.002500        0.002500
3   -8391.573711   -8410.576211  101.376953 -8391.573711  119.002500 -8410.576211     0.0000   19.002500       19.002500
4   -8290.573711   -8310.576416  101.376953 -8290.573711  120.002500 -8310.576416     0.0025   20.000205       20.000000
5   -8290.573711   -8292.138916  181.376953 -8290.573711    0.010000 -8292.138916     0.0025    1.562705        0.000000
6   -8290.573711   -8290.576211  279.369629 -8290.573711    1.010000 -8290.576211     0.0025    0.000000       -2.007324
7   -8288.563711   -8288.568711  377.806885 -8288.563711    2.010000 -8288.568711     0.0025    0.002500       -1.560068
8   -8285.556211   -8287.006104  377.806885 -8285.556211    3.010000 -8287.006104     0.0025    1.447393      -98.552568
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/30 10:35:26]  --------------------------------------------------------------------------------
[08/30 10:35:26]  Iteration: 35 (0 solution, 34 counterexamples)
[08/30 10:35:31]  Generator returned sat in 4.001602 secs.
[08/30 10:35:31]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:35:31]  Improved gap from 0.0 to 7.8125
[08/30 10:35:32]  Improved number of small numbers from 52 to 100 out of a max of 100
[08/30 10:35:32]  Verifer returned sat in 0.533478 secs.
[08/30 10:35:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8462.488281   -8462.488525 -119.568359 -8462.488281    0.095215 -8462.488525   0.000000    0.000244      -99.999756
1   -8242.464600   -8362.488525 -119.568359 -8242.464600  220.023926 -8362.488525   0.023926  120.000000       20.000000
2   -8182.416992   -8182.464844 -119.568359 -8182.416992  180.047607 -8182.464844   0.023926    0.023926      -19.952393
3   -8042.440918   -8081.512451 -119.568359 -8042.440918  140.000000 -8081.512451   0.047607   39.023926       20.000000
4   -7942.464844   -8011.035889 -119.568359 -7942.464844  139.000000 -8011.035889   0.047607   68.523438       19.976074
5   -7942.464844   -7962.488525  -45.371582 -7942.464844   68.500000 -7962.488525   0.047607   19.976074       -5.827148
6   -7929.190918   -7936.685059   46.815674 -7929.190918   33.250000 -7936.685059   0.047607    7.446533       -0.365967
7   -7921.012451   -7928.872559  139.003174 -7921.012451   15.625000 -7928.872559   0.047607    7.812500        0.000000
8   -7921.012451   -7921.060059  231.190674 -7921.012451    6.812500 -7921.060059   0.047607    0.000000       -7.812500
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:35:32]  --------------------------------------------------------------------------------
[08/30 10:35:32]  Iteration: 36 (0 solution, 35 counterexamples)
[08/30 10:35:33]  Generator returned sat in 0.517856 secs.
[08/30 10:35:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:33]  Improved gap from 7.0625152587890625 to 7.8125
[08/30 10:35:34]  Improved number of small numbers from 45 to 57 out of a max of 100
[08/30 10:35:34]  Verifer returned sat in 1.239476 secs.
[08/30 10:35:34]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8462.488525   -8462.511963 -119.568359 -8462.488525    0.095215 -8462.511963   0.000000    0.023438      -99.976440
1   -8242.488281   -8362.512085 -119.568359 -8242.488281  220.023682 -8362.512085   0.023804  120.000000       20.000000
2   -8162.488281   -8170.324585 -119.568359 -8162.488281  200.000000 -8170.324585   0.023804    7.812500        0.000000
3   -8042.464478   -8076.361053 -119.568359 -8042.464478  127.836304 -8076.361053   0.047607   33.848969       20.000000
4   -7949.477142   -8012.966553 -119.568359 -7949.477142  126.836304 -8012.966553   0.047607   63.441803       12.987335
5   -7949.477142   -7962.512085  -35.398926 -7949.477142   63.418152 -7962.512085   0.047607   12.987335       -2.843231
6   -7930.755402   -7946.681152   48.722565 -7930.755402   31.709076 -7946.681152   0.047607   15.878143        0.000000
7   -7930.755402   -7930.803009  140.910065 -7930.755402   15.854538 -7930.803009   0.047607    0.000000       -7.812500
8   -7922.828133   -7922.990479  140.910156 -7922.828133    7.927269 -7922.990479   0.047607    0.114738      -99.885139
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:35:34]  --------------------------------------------------------------------------------
[08/30 10:35:34]  Iteration: 37 (0 solution, 36 counterexamples)
[08/30 10:35:37]  Generator returned sat in 1.860729 secs.
[08/30 10:35:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:37]  Improved gap from 0.0 to 7.8125
[08/30 10:35:37]  Improved number of small numbers from 55 to 100 out of a max of 100
[08/30 10:35:37]  Verifer returned sat in 0.448023 secs.
[08/30 10:35:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -8401.000732   -8401.048096  -81.032471 -8401.000732    0.095215 -8401.048096   0.000000   0.047363        0.047363
1   -8401.000488   -8401.048096  -81.032471 -8401.000488    0.047607 -8401.048096   0.000000   0.047607      -99.952393
2   -8301.000488   -8301.048096  -81.032471 -8301.000488  100.047607 -8301.048096   0.000000   0.047607      -99.952393
3   -8049.524658   -8106.762451  -81.032471 -8049.524658  251.523438 -8106.762451  31.523438  25.714355       20.000000
4   -7949.477295   -8032.440918  -81.032471 -7949.477295  125.761719 -8032.440918  31.570801  51.392822       20.000000
5   -7937.989258   -8001.048096  -12.520508 -7937.989258   62.880859 -8001.048096  31.570801  31.488037        0.000000
6   -7937.989258   -7969.560059   79.666992 -7937.989258   31.440430 -7969.560059  31.570801   0.000000       -7.812500
7   -7922.269043   -7961.747559  171.759277 -7922.269043   15.720215 -7961.747559  31.570801   7.907715        0.000000
8   -7922.269043   -7953.839844  171.759521 -7922.269043    7.860107 -7953.839844  31.570801   0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/30 10:35:38]  --------------------------------------------------------------------------------
[08/30 10:35:38]  Iteration: 38 (0 solution, 37 counterexamples)
[08/30 10:35:39]  Generator returned sat in 0.565897 secs.
[08/30 10:35:39]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:39]  Improved gap from 7.33642578125 to 7.8125
[08/30 10:35:39]  Improved number of small numbers from 63 to 100 out of a max of 100
[08/30 10:35:39]  Verifer returned sat in 0.654597 secs.
[08/30 10:35:39]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -8391.778076   -8391.778076  -81.032715 -8391.778076    0.095215 -8391.778076        0.0    0.000000        0.000000
1   -8391.730469   -8391.778076  -81.032471 -8391.730469    0.047607 -8391.778076        0.0    0.047607      -99.952148
2   -8191.778076   -8291.778320  -81.032471 -8191.778076  200.000000 -8291.778320        0.0  100.000244        0.000244
3   -8043.778320   -8096.825928  -81.032471 -8043.778320  248.000000 -8096.825928       28.0   25.047607       20.000000
4   -7943.825928   -7991.778320  -81.032471 -7943.825928  125.000000 -7991.778320       28.0   19.952393       19.952393
5   -7901.278320   -7991.778320  -43.532471 -7901.278320   62.500000 -7991.778320       28.0   62.500000        0.000000
6   -7901.278320   -7929.278320   48.654785 -7901.278320   31.250000 -7929.278320       28.0    0.000000       -7.812744
7   -7885.653320   -7921.465576  140.842285 -7885.653320   15.625000 -7921.465576       28.0    7.812256       -0.000244
8   -7885.653076   -7913.653076  140.842285 -7885.653076    7.812500 -7913.653076       28.0    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:35:40]  --------------------------------------------------------------------------------
[08/30 10:35:40]  Iteration: 39 (0 solution, 38 counterexamples)
[08/30 10:35:42]  Generator returned sat in 1.872761 secs.
[08/30 10:35:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:35:42]  Improved gap from 0.0 to 100
[08/30 10:35:42]  Improved number of small numbers from 84 to 84 out of a max of 100
[08/30 10:35:42]  Verifer returned sat in 0.320540 secs.
[08/30 10:35:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -8391.778320   -8391.778320 -81.032471 -8391.778320    0.095215 -8391.778320    0.000000    0.000000        0.000000
1   -8391.730469   -8391.778320 -81.032471 -8391.730469    0.047852 -8391.778320    0.000000    0.047852      -99.952148
2   -8171.802246   -8191.778320 -81.032471 -8171.802246  219.976074 -8191.778320    0.000000   19.976074       19.976074
3   -8147.898626   -8152.779321 -81.032471 -8147.898626   43.879694 -8152.779321    0.000000    4.880695      -56.120306
4   -8087.959780   -8087.983706 -81.032471 -8087.959780   64.819541 -8087.983706    0.000000    0.023926      -96.181460
5   -7991.754395   -7991.778320 -81.032471 -7991.754395   96.229311 -7991.778320    0.000000    0.023926      -99.976074
6   -7848.434353   -7885.818197 -81.032471 -7848.434353  143.343967 -7885.818197    0.000000   37.383843      -56.656033
7   -7671.802246   -7691.778320 -81.032471 -7671.802246  214.015951 -7691.778320    0.000000   19.976074       19.976074
8   -7371.754395   -7691.778320 -81.032471 -7371.754395  320.023926 -7691.778320  200.023926  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=409649/2048.[0m
[08/30 10:35:43]  --------------------------------------------------------------------------------
[08/30 10:35:43]  Iteration: 40 (0 solution, 39 counterexamples)
[08/30 10:35:46]  Generator returned sat in 2.879719 secs.
[08/30 10:35:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 10:35:47]  Improved gap from 0.0 to 7.8125
[08/30 10:35:47]  Improved number of small numbers from 63 to 100 out of a max of 100
[08/30 10:35:47]  Verifer returned sat in 0.628304 secs.
[08/30 10:35:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -10275.271729  -10275.271729  -81.032959 -10275.271729    0.095215 -10275.271729   0.000000    0.000000        0.000000
1  -10155.319336  -10175.271729  -81.032959 -10155.319336  119.952393 -10175.271729   0.000000   19.952393       19.952393
2  -10055.224365  -10175.271729  -81.032959 -10055.224365  120.047363 -10175.271729   0.047363  120.000000       20.000000
3   -9895.224365   -9994.319336  -81.032959  -9895.224365  280.000000  -9994.319336  60.047363   39.047607       20.000000
4   -9795.271973   -9923.867188  -81.032959  -9795.271973  139.000000  -9923.867188  60.047363   68.547852       19.952393
5   -9795.271973   -9874.977051   -6.764893  -9795.271973   68.500000  -9874.977051  60.047363   19.657715       -5.779541
6   -9781.679688   -9849.539551   85.422363  -9781.679688   33.250000  -9849.539551  60.047363    7.812500        0.000000
7   -9773.867188   -9841.727051  177.609863  -9773.867188   15.625000  -9841.727051  60.047363    7.812500        0.000000
8   -9773.867188   -9833.914551  177.610107  -9773.867188    6.812500  -9833.914551  60.047363    0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:35:47]  --------------------------------------------------------------------------------
[08/30 10:35:47]  Iteration: 41 (0 solution, 40 counterexamples)
[08/30 10:35:50]  Generator returned sat in 2.441406 secs.
[08/30 10:35:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:51]  Improved gap from 7.788818359375 to 7.8125
[08/30 10:35:51]  Improved number of small numbers from 63 to 100 out of a max of 100
[08/30 10:35:51]  Verifer returned sat in 0.757168 secs.
[08/30 10:35:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -12064.533936  -12084.533936  -81.033203 -12064.533936    0.094971 -12084.533936   0.000000  20.000000       19.999756
1  -11964.581543  -11984.533936  -81.033203 -11964.581543  119.952393 -11984.533936   0.000000  19.952393       19.952148
2  -11964.581543  -11964.581543  -81.032959 -11964.581543    0.047607 -11964.581543   0.000000   0.000000      -80.047607
3  -11707.058105  -11792.248047  -81.032959 -11707.058105  257.523438 -11792.248047  57.475830  27.714111       20.000000
4  -11607.010498  -11715.926758  -81.032959 -11607.010498  127.761719 -11715.926758  57.523438  51.392822       20.000000
5  -11595.522461  -11684.533936  -12.520996 -11595.522461   62.880859 -11684.533936  57.523438  31.488037        0.000000
6  -11595.522461  -11653.045898   79.666504 -11595.522461   31.440430 -11653.045898  57.523438   0.000000       -7.812500
7  -11579.802246  -11645.233398  171.758789 -11579.802246   15.720215 -11645.233398  57.523438   7.907715        0.000000
8  -11579.802246  -11637.325684  171.758789 -11579.802246    7.860107 -11637.325684  57.523438   0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/30 10:35:51]  --------------------------------------------------------------------------------
[08/30 10:35:51]  Iteration: 42 (0 solution, 41 counterexamples)
[08/30 10:35:52]  Generator returned sat in 0.366078 secs.
[08/30 10:35:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:53]  Improved gap from 3.64385986328125 to 100
[08/30 10:35:53]  Improved number of small numbers from 52 to 56 out of a max of 100
[08/30 10:35:53]  Verifer returned sat in 0.840026 secs.
[08/30 10:35:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -12092.884277  -12212.884033 -12.520996 -12092.884277    0.094971 -12212.884033    0.000000  119.999756       19.999756
1  -11992.931641  -12092.931519 -12.520996 -11992.931641  219.952393 -12092.931519    0.000000   99.999878       19.952393
2  -11892.836548  -12012.884033 -12.520996 -11892.836548  200.094971 -12012.884033    0.047485  120.000000       20.000000
3  -11770.931519  -11912.884033 -12.520996 -11770.931519  241.905029 -11912.884033   21.952515  120.000000       20.000000
4  -11770.931519  -11812.884033 -12.520996 -11770.931519  119.952515 -11812.884033   21.952515   20.000000      -80.000000
5  -11590.931519  -11612.931519 -12.520996 -11590.931519  200.000000 -11612.931519   21.952515    0.047485        0.000000
6  -11291.002747  -11612.884033 -12.520996 -11291.002747  299.976257 -11612.884033  201.881287  120.000000       20.000000
7  -11262.014618  -11502.467601 -12.520996 -11262.014618  148.988129 -11502.467601  201.881287   38.571696      -51.011871
8  -11070.884033  -11412.884033 -12.520996 -11070.884033  229.702281 -11412.884033  222.000000  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=1638789/8192.[0m
[08/30 10:35:54]  --------------------------------------------------------------------------------
[08/30 10:35:54]  Iteration: 43 (0 solution, 42 counterexamples)
[08/30 10:35:55]  Generator returned sat in 0.512072 secs.
[08/30 10:35:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:35:56]  Improved number of small numbers from 31 to 50 out of a max of 99
[08/30 10:35:56]  Verifer returned sat in 0.977867 secs.
[08/30 10:35:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -12141.116943  -12141.164551 -212.531006 -12141.116943    0.094727 -12141.164551    0.000000    0.047607        0.047427
1  -12141.116943  -12141.164307 -212.530996 -12141.116943    0.023682 -12141.164307    0.000000    0.047363      -99.952563
2  -12041.140625  -12041.164380 -212.530996 -12041.140625  100.023682 -12041.164380    0.000000    0.023755      -99.976245
3  -11555.069409  -11899.169128 -212.530996 -11555.069409  486.094971 -11899.169128  266.094971   78.004749       20.000000
4  -11391.026672  -11741.164380 -212.530996 -11391.026672  242.047485 -11741.164380  330.137708   20.000000       20.000000
5  -11291.002930  -11680.200195 -212.530996 -11291.002930  120.023743 -11680.200195  330.161450   59.035815       20.000000
6  -11291.002930  -11641.164380 -212.530996 -11291.002930   59.011871 -11641.164380  330.161450   20.000000      -80.000000
7  -11122.988684  -11453.173877 -212.530996 -11122.988684  188.014246 -11453.173877  330.161450    0.023743      -11.985754
8  -10791.002930  -11441.164307 -212.530996 -10791.002930  332.009497 -11441.164307  530.161450  119.999927       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=3277189/16384.[0m
[08/30 10:35:56]  --------------------------------------------------------------------------------
[08/30 10:35:56]  Iteration: 44 (0 solution, 43 counterexamples)
[08/30 10:36:00]  Generator returned sat in 3.506344 secs.
[08/30 10:36:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 10:36:00]  Improved gap from 0.00125 to 6.25
[08/30 10:36:01]  Improved number of small numbers from 90 to 100 out of a max of 100
[08/30 10:36:01]  Verifer returned sat in 0.485065 secs.
[08/30 10:36:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -11491.050293  -11591.050293 -642.739990 -11491.050293    0.094482 -11591.050293   0.000000  100.000000        0.000000
1  -11491.002930  -11491.050293 -642.739746 -11491.002930  100.047363 -11491.050293   0.000000    0.047363      -99.952393
2  -11271.003174  -11391.050537 -642.739746 -11271.003174  220.047119 -11391.050537   0.047363  120.000000       20.000000
3  -11189.487549  -11191.760986 -642.739746 -11189.487549  201.515625 -11191.760986   0.047363    2.226074        1.515625
4  -11090.955811  -11149.468994 -642.739746 -11090.955811  100.757812 -11149.468994   0.047363   58.465820        0.047363
5  -11090.955811  -11091.050293 -548.989990 -11090.955811   50.378906 -11091.050293   0.047363    0.047119       -6.202881
6  -11065.813477  -11072.111084 -467.929443 -11065.813477   25.189453 -11072.111084   0.047363    6.250244        0.000000
7  -11059.468994  -11065.860840 -374.273926 -11059.468994   12.594727 -11065.860840   0.047363    6.344482        0.000000
8  -11059.468994  -11059.516357 -374.273926 -11059.468994    6.297363 -11059.516357   0.047363    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:36:01]  --------------------------------------------------------------------------------
[08/30 10:36:01]  Iteration: 45 (0 solution, 44 counterexamples)
[08/30 10:36:04]  Generator returned sat in 2.259188 secs.
[08/30 10:36:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:04]  Verifer returned unsat in 0.092664 secs.
[08/30 10:36:04]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:04]  --------------------------------------------------------------------------------
[08/30 10:36:04]  Iteration: 46 (1 solution, 44 counterexamples)
[08/30 10:36:07]  Generator returned sat in 2.099940 secs.
[08/30 10:36:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:07]  Improved number of small numbers from 73 to 99 out of a max of 99
[08/30 10:36:07]  Verifer returned sat in 0.213280 secs.
[08/30 10:36:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -11491.050537  -11491.050537 -642.739746 -11491.050537    0.094482 -11491.050537    0.000000    0.000000      -80.000244
1  -11411.003174  -11411.050293 -642.739746 -11411.003174   80.047363 -11411.050293    0.000000    0.047119      -99.952881
2  -11191.003174  -11275.756592 -642.739746 -11191.003174  220.047119 -11275.756592    0.047119   84.706299       20.000000
3  -11091.026855  -11211.050293 -642.739746 -11091.026855  184.682617 -11211.050293    0.047119  119.976318       19.976318
4  -11025.320557  -11097.732666 -642.739746 -11025.320557  185.682617 -11097.732666    0.047119   72.364990      -14.317383
5  -10911.002930  -10911.073975 -642.739746 -10911.002930  186.682617 -10911.073975    0.047119    0.023926        0.000244
6  -10723.344238  -10811.050537 -642.739746 -10723.344238  187.682617 -10811.050537   67.706055   20.000244       20.000000
7  -10556.661865  -10711.050293 -642.739746 -10556.661865  186.682617 -10711.050293  134.388428   20.000000       20.000000
8  -10390.979248  -10711.050293 -642.739746 -10390.979248  185.682617 -10711.050293  200.071045  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=409649/2048.[0m
[08/30 10:36:07]  --------------------------------------------------------------------------------
[08/30 10:36:07]  Iteration: 47 (1 solution, 45 counterexamples)
[08/30 10:36:10]  Generator returned sat in 2.082477 secs.
[08/30 10:36:10]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:10]  Improved gap from 0.0 to 0
[08/30 10:36:10]  Improved number of small numbers from 51 to 100 out of a max of 100
[08/30 10:36:10]  Verifer returned sat in 0.275467 secs.
[08/30 10:36:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0  -11491.050781  -11491.097900 -1219.739746 -11491.050781    0.094482 -11491.097900   0.000000   0.047119      -99.952881
1  -11271.145264  -11291.097900 -1219.739746 -11271.145264  219.952637 -11291.097900   0.000000  19.952637       19.952637
2  -11171.050537  -11191.097900 -1219.739746 -11171.050537  120.047363 -11191.097900   0.047363  20.000000       20.000000
3  -11171.003418  -11172.003418 -1139.786865 -11171.003418   20.047119 -11172.003418   0.047363   0.952637        0.000000
4  -11170.956055  -11171.050537 -1039.834229 -11170.956055    1.000000 -11171.050537   0.047363   0.047119        0.000000
5  -11170.003174  -11171.003418  -940.787109 -11170.003174    1.000000 -11171.003418   0.047363   0.952881        0.000000
6  -11169.956055  -11170.050537  -841.739746 -11169.956055    1.000000 -11170.050537   0.047363   0.047119       -0.905518
7  -11169.003174  -11169.097900  -741.787109 -11169.003174    1.000000 -11169.097900   0.047363   0.047363        0.000000
8  -11168.050537  -11169.050537  -642.739746 -11168.050537    1.000000 -11169.050537   0.047363   0.952637        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=0, loss_amount=0.[0m
[08/30 10:36:11]  --------------------------------------------------------------------------------
[08/30 10:36:11]  Iteration: 48 (1 solution, 46 counterexamples)
[08/30 10:36:15]  Generator returned sat in 3.311607 secs.
[08/30 10:36:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:15]  Verifer returned unsat in 0.083029 secs.
[08/30 10:36:15]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:15]  --------------------------------------------------------------------------------
[08/30 10:36:15]  Iteration: 49 (2 solution, 46 counterexamples)
[08/30 10:36:17]  Generator returned sat in 1.659516 secs.
[08/30 10:36:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:17]  Improved gap from 0.0 to 7.8125
[08/30 10:36:18]  Improved number of small numbers from 38 to 44 out of a max of 100
[08/30 10:36:18]  Verifer returned sat in 0.683236 secs.
[08/30 10:36:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0  -11271.145508  -11391.145264 -1139.786865 -11271.145508    0.094238 -11391.145264   0.000000  119.999756       19.999756
1  -11271.145508  -11291.145264 -1139.786865 -11271.145508    0.047363 -11291.145264   0.000000   19.999756      -80.000244
2  -11071.098022  -11191.145264 -1139.786865 -11071.098022  220.047241 -11191.145264   0.047241  120.000000       20.000000
3  -10971.145264  -11029.271255 -1139.786865 -10971.145264  219.952759 -11029.271255   0.047241   58.078751       19.952759
4  -10918.247635  -10918.342117 -1139.786865 -10918.247635  110.976379 -10918.342117   0.047241    0.047241      -27.149612
5  -10861.806686  -10891.145264 -1069.078201 -10861.806686   56.488190 -10891.145264   0.047241   29.291336        0.000000
6  -10861.806686  -10861.853928  -976.890701 -10861.806686   29.244095 -10861.853928   0.047241    0.000000       -7.812500
7  -10846.184639  -10854.041428  -884.703369 -10846.184639   15.622047 -10854.041428   0.047241    7.809547       -0.003120
8  -10845.183163  -10846.228760  -884.703125 -10845.183163    8.811024 -10846.228760   0.047241    0.998356      -99.001400
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/30 10:36:18]  --------------------------------------------------------------------------------
[08/30 10:36:18]  Iteration: 50 (2 solution, 47 counterexamples)
[08/30 10:36:20]  Generator returned sat in 0.932922 secs.
[08/30 10:36:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:20]  Verifer returned unsat in 0.099549 secs.
[08/30 10:36:20]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:20]  --------------------------------------------------------------------------------
[08/30 10:36:20]  Iteration: 51 (3 solution, 47 counterexamples)
[08/30 10:36:22]  Generator returned sat in 1.170342 secs.
[08/30 10:36:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:22]  Improved gap from 0.0235595703125 to 100
[08/30 10:36:23]  Improved number of small numbers from 43 to 55 out of a max of 100
[08/30 10:36:23]  Verifer returned sat in 0.934344 secs.
[08/30 10:36:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -11798.227539  -11798.227783 -632.704738 -11798.227539    0.094238 -11798.227783    0.000000    0.000244        0.000096
1  -11698.180664  -11698.227635 -632.704738 -11698.180664  100.047119 -11698.227635    0.000000    0.046971        0.046971
2  -11578.180516  -11600.338363 -632.704738 -11578.180516  120.047119 -11600.338363    0.047119   22.110728       20.000000
3  -11558.448700  -11558.542938 -632.704738 -11558.448700   41.842544 -11558.542938    0.047119    0.047119      -60.268184
4  -11494.732002  -11494.826241 -632.704738 -11494.732002   63.763817 -11494.826241    0.047119    0.047119      -96.551487
5  -11398.133397  -11398.227635 -632.704738 -11398.133397   96.645725 -11398.227635    0.047119    0.047119      -99.952881
6  -11252.211929  -11298.227539 -632.704738 -11252.211929  145.968587 -11298.227539    0.047119   45.968491      -54.031413
7  -11078.227539  -11098.227635 -632.704738 -11078.227539  219.952881 -11098.227635    0.047119   19.952977       19.952977
8  -10767.251194  -11098.227539 -632.704738 -10767.251194  330.929321 -11098.227539  210.976440  119.999904       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=1727933/8192.[0m
[08/30 10:36:23]  --------------------------------------------------------------------------------
[08/30 10:36:23]  Iteration: 52 (3 solution, 48 counterexamples)
[08/30 10:36:25]  Generator returned sat in 1.536131 secs.
[08/30 10:36:25]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:26]  Improved gap from 0.047119140625 to 26.5625
[08/30 10:36:26]  Improved number of small numbers from 86 to 88 out of a max of 100
[08/30 10:36:26]  Verifer returned sat in 0.672517 secs.
[08/30 10:36:26]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0  -11798.227783  -11918.227539 -632.704834 -11798.227783    0.094238 -11918.227539    0.000000  119.999756       20.000000
1  -11798.227783  -11818.227539 -559.267578 -11798.227783  119.944336 -11818.227539    0.000000   19.999756       -6.562744
2  -11678.911621  -11691.665039 -559.267578 -11678.911621  139.315918 -11691.665039    0.000000   12.753418       12.753418
3  -11678.856011  -11691.665039 -485.830078 -11678.856011   12.809028 -11691.665039    0.000000   12.809028      -13.753472
4  -11665.046984  -11665.102539 -412.392578 -11665.046984   26.618056 -11665.102539    0.000000    0.055556      -26.506944
5  -11610.866428  -11638.540039 -412.392578 -11610.866428   54.236111 -11638.540039    0.000000   27.673611      -72.326389
6  -11529.067817  -11538.540039 -412.392578 -11529.067817  109.472222 -11538.540039    0.000000    9.472222      -90.527778
7  -11318.595595  -11338.540039 -412.392578 -11318.595595  219.944444 -11338.540039    0.000000   19.944444       19.944444
8  -10897.651150  -11338.540039 -412.392578 -10897.651150  440.888889 -11338.540039  320.888889  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=2888/9.[0m
[08/30 10:36:26]  --------------------------------------------------------------------------------
[08/30 10:36:26]  Iteration: 53 (3 solution, 49 counterexamples)
[08/30 10:36:28]  Generator returned unsat in 0.941962 secs.
[08/30 10:36:28]  [96mNo more solutions found[0m
[08/30 10:36:28]  Final solutions:
[08/30 10:36:28]  0: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:28]  1: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:28]  2: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 10:36:28]  Took 122.008068 secs.
