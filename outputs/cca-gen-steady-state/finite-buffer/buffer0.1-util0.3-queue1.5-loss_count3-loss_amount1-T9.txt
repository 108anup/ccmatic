[08/29 18:48:42]  --------------------------------------------------------------------------------
[08/29 18:48:42]  Iteration: 1 (0 solution, 0 counterexamples)
[08/29 18:48:42]  Generator returned sat in 0.004232 secs.
[08/29 18:48:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:42]  Improved gap from 0.1 to 100
[08/29 18:48:42]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/29 18:48:42]  Verifer returned sat in 0.219779 secs.
[08/29 18:48:42]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t
0        -5219.9        -5239.9    190.15      -5219.9       0.1      -5239.9        0.0     20.0            20.0
1        -5219.9        -5239.9    190.15      -5219.9      20.0      -5239.9        0.0     20.0           -80.0
2        -5139.8        -5139.9    190.15      -5139.8     100.1      -5139.9        0.0      0.1           -99.9
3        -5039.8        -5039.9    190.15      -5039.8     100.1      -5039.9        0.0      0.1           -99.9
4        -4439.7        -4939.9    190.15      -4439.7     600.2      -4939.9      380.2    120.0            20.0
5        -2759.3        -4777.9    190.15      -2759.3    1800.4      -4777.9     1960.6     58.0            20.0
6         1507.5        -4679.9    190.15       1507.5    4324.8      -4679.9     6127.4     60.0            20.0
7        10817.1        -4609.9    190.15      10817.1    9369.6      -4609.9    15337.0     90.0            20.0
8        30126.3        -4539.9    190.15      30126.3   19399.2      -4539.9    34546.2    120.0            20.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=34166.[0m
[08/29 18:48:42]  --------------------------------------------------------------------------------
[08/29 18:48:42]  Iteration: 2 (0 solution, 1 counterexamples)
[08/29 18:48:42]  Generator returned sat in 0.036700 secs.
[08/29 18:48:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:43]  Improved gap from 13.301666666666666 to 100
[08/29 18:48:43]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/29 18:48:43]  Verifer returned sat in 0.250368 secs.
[08/29 18:48:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t   queue_t  bottle_queue_t
0    -4834.60375    -4854.60375    190.15  -4834.60375    0.099854  -4854.60375    0.00000   20.0000          20.000
1    -4834.60375    -4834.60625    190.15  -4834.60375    0.002500  -4834.60625    0.00000    0.0025         -80.000
2    -4634.60125    -4654.60375    190.15  -4634.60125  200.005000  -4654.60375    0.00250   20.0000          20.000
3    -4634.60125    -4654.60375    190.15  -4634.60125   20.000000  -4654.60375    0.00250   20.0000         -80.000
4    -4524.60125    -4554.60375    190.15  -4524.60125  130.000000  -4554.60375    0.00250   30.0000         -70.000
5    -4219.60000    -4354.60375    190.15  -4219.60000  335.001250  -4354.60375  115.00375   20.0000          20.000
6    -4219.60000    -4354.60375    190.15  -4219.60000    0.010000  -4354.60375  115.00375   20.0000         -80.000
7    -4089.58500    -4219.60375    190.15  -4089.58500  150.015000  -4219.60375  115.00375   15.0150         -49.985
8    -3712.07750    -4154.60375    190.15  -3712.07750  392.522500  -4154.60375  322.52625  120.0000          20.000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=258019/800.[0m
[08/29 18:48:43]  --------------------------------------------------------------------------------
[08/29 18:48:43]  Iteration: 3 (0 solution, 2 counterexamples)
[08/29 18:48:43]  Generator returned sat in 0.022346 secs.
[08/29 18:48:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:48:43]  Improved number of small numbers from 99 to 99 out of a max of 99
[08/29 18:48:43]  Verifer returned sat in 0.179794 secs.
[08/29 18:48:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0    -4819.59125    -4819.59375   90.1525  -4819.59125    0.099609  -4819.59375    0.00000    0.00250         0.00250
1    -4819.59125    -4819.59250  190.1500  -4819.59125    0.001250  -4819.59250    0.00000    0.00125         0.00000
2    -4699.59250    -4819.59125  190.1500  -4699.59250  120.000000  -4819.59125    0.00000  119.99875        19.99875
3    -4599.59000    -4719.59125  190.1500  -4599.59000  220.001250  -4719.59125    0.00125  120.00000        20.00000
4    -4599.59000    -4619.59125  190.1500  -4599.59000    0.010000  -4619.59125    0.00125   20.00000       -80.00000
5    -4218.58750    -4519.59125  190.1500  -4218.58750  401.002500  -4519.59125  181.00375  120.00000        20.00000
6    -4218.58750    -4401.59125  190.1500  -4218.58750    0.010000  -4401.59125  181.00375    2.00000       -80.00000
7    -3583.58750    -4319.59125  190.1500  -3583.58750  637.000000  -4319.59125  616.00375  120.00000        20.00000
8    -3583.58750    -4219.59125  190.1500  -3583.58750    0.010000  -4219.59125  616.00375   20.00000       -80.00000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=246401/400.[0m
[08/29 18:48:44]  --------------------------------------------------------------------------------
[08/29 18:48:44]  Iteration: 4 (0 solution, 3 counterexamples)
[08/29 18:48:44]  Generator returned sat in 0.131385 secs.
[08/29 18:48:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:44]  Improved gap from 0.0 to 100
[08/29 18:48:44]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/29 18:48:44]  Verifer returned sat in 0.189990 secs.
[08/29 18:48:44]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t    losts_0,t     queue_t  bottle_queue_t
0   -4899.592773   -4919.592773  190.149902 -4899.592773    0.099609 -4919.592773     0.000000   20.000000            20.0
1   -4899.592773   -4899.593506  190.149902 -4899.592773    0.001465 -4899.593506     0.000000    0.000732           -80.0
2   -4719.592773   -4819.592773  190.149902 -4719.592773  180.000732 -4819.592773     0.000000  100.000000             0.0
3   -4599.592041   -4719.592773  190.149902 -4599.592041  220.000732 -4719.592773     0.000732  120.000000            20.0
4   -4318.592041   -4619.592773  190.149902 -4318.592041  401.000000 -4619.592773   181.000732  120.000000            20.0
5   -3877.590576   -4419.592773  190.149902 -3877.590576  561.001465 -4419.592773   522.002197   20.000000            20.0
6   -3096.590576   -4319.592773  190.149902 -3096.590576  801.000000 -4319.592773  1203.002197   20.000000            20.0
7   -2315.590576   -4219.592773  190.149902 -2315.590576  801.000000 -4219.592773  1884.002197   20.000000            20.0
8   -1534.590576   -4219.592773  190.149902 -1534.590576  801.000000 -4219.592773  2565.002197  120.000000            20.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=4882435/2048.[0m
[08/29 18:48:44]  --------------------------------------------------------------------------------
[08/29 18:48:44]  Iteration: 5 (0 solution, 4 counterexamples)
[08/29 18:48:44]  Generator returned sat in 0.011836 secs.
[08/29 18:48:44]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:44]  Improved gap from 0.000732421875 to 0
[08/29 18:48:45]  Improved number of small numbers from 59 to 84 out of a max of 100
[08/29 18:48:45]  Verifer returned sat in 0.513723 secs.
[08/29 18:48:45]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4222.570557   -4322.571289  110.149902 -4222.570557    0.099365 -4322.571289   0.000000  100.000732        0.000732
1   -4222.570557   -4222.571289  110.149902 -4222.570557    0.001465 -4222.571289   0.000000    0.000732      -99.999268
2   -4122.570557   -4122.571289  110.149902 -4122.570557  100.000732 -4122.571289   0.000000    0.000732      -99.999268
3   -3902.570557   -3922.571533  110.149902 -3902.570557  220.000732 -3922.571533   0.000732   20.000244       20.000000
4   -3902.570557   -3902.572041  190.149902 -3902.570557    1.000000 -3902.572041   0.000732    0.000752        0.000000
5   -3902.561309   -3902.562773  290.132324 -3902.561309    0.010000 -3902.562773   0.000732    0.000732       -0.008330
6   -3902.552041   -3902.553506  390.131348 -3902.552041    0.010000 -3902.553506   0.000732    0.000732       -0.000039
7   -3902.542773   -3902.544238  490.122070 -3902.542773    0.010000 -3902.544238   0.000732    0.000732       -0.000049
8   -3902.533506   -3902.543457  490.122070 -3902.533506    0.010000 -3902.543457   0.000732    0.009219      -99.990781
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/29 18:48:45]  --------------------------------------------------------------------------------
[08/29 18:48:45]  Iteration: 6 (0 solution, 5 counterexamples)
[08/29 18:48:45]  Generator returned sat in 0.019501 secs.
[08/29 18:48:45]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:48:45]  Improved gap from 0.0003662109375 to 0
[08/29 18:48:46]  Improved number of small numbers from 44 to 100 out of a max of 100
[08/29 18:48:46]  Verifer returned sat in 0.274608 secs.
[08/29 18:48:46]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -4040.545898   -4140.595215  -86.878174 -4040.545898    0.099121 -4140.595215   0.000000  100.049316        0.049316
1   -4040.545898   -4040.595215   13.072510 -4040.545898  100.049316 -4040.595215   0.000000    0.049316        0.000000
2   -4040.545898   -4040.545898  113.072510 -4040.545898    0.024902 -4040.545898   0.000000    0.000000        0.000000
3   -3920.521240   -3940.545898  113.072510 -3920.521240  120.024658 -3940.545898   0.024658   20.000000       20.000000
4   -3920.521240   -3920.570557  192.122070 -3920.521240    1.000000 -3920.570557   0.024658    0.024658       -0.950439
5   -3919.545898   -3919.595459  292.097168 -3919.545898    1.000000 -3919.595459   0.024658    0.024902        0.000000
6   -3918.570801   -3918.595459  391.122070 -3918.570801    1.000000 -3918.595459   0.024658    0.000000        0.000000
7   -3917.570801   -3917.595459  490.122070 -3917.570801    1.000000 -3917.595459   0.024658    0.000000        0.000000
8   -3916.570801   -3917.595215  490.122070 -3916.570801    1.000000 -3917.595215   0.024658    0.999756      -99.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, loss_count=0, loss_amount=0.[0m
[08/29 18:48:46]  --------------------------------------------------------------------------------
[08/29 18:48:46]  Iteration: 7 (0 solution, 6 counterexamples)
[08/29 18:48:46]  Generator returned sat in 0.039765 secs.
[08/29 18:48:46]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:48:46]  Improved gap from 0.0 to 100
[08/29 18:48:47]  Improved number of small numbers from 49 to 57 out of a max of 100
[08/29 18:48:47]  Verifer returned sat in 0.913679 secs.
[08/29 18:48:47]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -4562.354248   -4662.403564  391.12207 -4562.354248    0.098877 -4662.403564    0.000000  100.049316        0.049551
1   -4562.354248   -4562.403799  391.12207 -4562.354248  100.049072 -4562.403799    0.000000    0.049551      -99.950449
2   -4342.354483   -4362.403799  391.12207 -4342.354483  220.049316 -4362.403799    0.049316   20.000000       20.000000
3   -4320.954915   -4321.053547  391.12207 -4320.954915   41.399568 -4321.053547    0.049316    0.049316      -58.600432
4   -4257.904879   -4258.003511  391.12207 -4257.904879   63.099352 -4258.003511    0.049316    0.049316      -95.550396
5   -4162.305166   -4162.403799  391.12207 -4162.305166   95.649029 -4162.403799    0.049316    0.049316      -99.950684
6   -4017.880940   -4060.114114  391.12207 -4017.880940  144.473543 -4060.114114    0.049316   42.183857      -55.526457
7   -3842.354483   -3862.403799  391.12207 -3842.354483  217.710314 -3862.403799    0.049316   20.000000       20.000000
8   -3534.789011   -3862.403564  391.12207 -3534.789011  327.565471 -3862.403564  207.614788  119.999765       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=64614301/311296.[0m
[08/29 18:48:47]  --------------------------------------------------------------------------------
[08/29 18:48:47]  Iteration: 8 (0 solution, 7 counterexamples)
[08/29 18:48:48]  Generator returned sat in 0.317427 secs.
[08/29 18:48:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:48:48]  Improved number of small numbers from 89 to 99 out of a max of 99
[08/29 18:48:48]  Verifer returned sat in 0.191966 secs.
[08/29 18:48:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -4562.379395   -4581.403809  391.097412 -4562.379395    0.098877 -4581.403809    0.000000   19.024414       -0.000244
1   -4562.354736   -4562.379150  391.097412 -4562.354736   19.049072 -4562.379150    0.000000    0.024414      -99.975586
2   -4342.354492   -4420.502441  391.097412 -4342.354492  220.024658 -4420.502441    0.024658   78.123291       20.000000
3   -4342.329834   -4362.379150  391.097412 -4342.329834   78.147949 -4362.379150    0.024658   20.024658      -79.975342
4   -4142.329834   -4262.379150  391.097412 -4142.329834  220.024658 -4262.379150    0.049316  120.000000       20.000000
5   -4142.329834   -4142.403809  391.097412 -4142.329834    1.000000 -4142.403809    0.049316    0.024658      -80.000000
6   -3863.255859   -3962.379395  391.097412 -3863.255859  279.098633 -3962.379395   79.123291   20.000244       20.000000
7   -3863.255859   -3942.403809  391.097412 -3863.255859    1.000000 -3942.403809   79.123291    0.024658      -80.000000
8   -3542.305176   -3862.379150  391.097412 -3542.305176  320.975342 -3862.379150  200.073975  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=819301/4096.[0m
[08/29 18:48:48]  --------------------------------------------------------------------------------
[08/29 18:48:48]  Iteration: 9 (0 solution, 8 counterexamples)
[08/29 18:48:48]  Generator returned sat in 0.029197 secs.
[08/29 18:48:48]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:48]  Improved number of small numbers from 99 to 99 out of a max of 99
[08/29 18:48:48]  Verifer returned sat in 0.143024 secs.
[08/29 18:48:48]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -4562.379395   -4582.403809  391.097412 -4562.379395    0.098877 -4582.403809    0.000000   20.024414       -0.000244
1   -4562.354736   -4562.379150  391.097412 -4562.354736   20.049072 -4562.379150    0.000000    0.024414      -99.975586
2   -4342.354492   -4422.465088  391.097412 -4342.354492  220.024658 -4422.465088    0.024658   80.085938       20.000000
3   -4342.329834   -4362.379150  391.097412 -4342.329834   80.110596 -4362.379150    0.024658   20.024658      -79.975342
4   -4142.329834   -4262.379150  391.097412 -4142.329834  220.024658 -4262.379150    0.049316  120.000000       20.000000
5   -4142.329834   -4142.391357  391.097412 -4142.329834    1.000000 -4142.391357    0.049316    0.012207      -80.000000
6   -3862.268311   -3962.379395  391.097412 -3862.268311  280.073730 -3962.379395   80.110840   20.000244       20.000000
7   -3862.268311   -3942.403809  391.097412 -3862.268311    1.000000 -3942.403809   80.110840    0.024658      -80.000000
8   -3542.317627   -3862.379150  391.097412 -3542.317627  319.975342 -3862.379150  200.061523  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=409625/2048.[0m
[08/29 18:48:49]  --------------------------------------------------------------------------------
[08/29 18:48:49]  Iteration: 10 (0 solution, 9 counterexamples)
[08/29 18:48:49]  Generator returned sat in 0.075894 secs.
[08/29 18:48:49]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:49]  Improved gap from 0.04931640625 to 100
[08/29 18:48:49]  Improved number of small numbers from 55 to 100 out of a max of 100
[08/29 18:48:49]  Verifer returned sat in 0.259007 secs.
[08/29 18:48:49]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -4671.435059   -4671.484375  400.202148 -4671.435059    0.098633 -4671.484375    0.000000    0.049316      -99.950684
1   -4471.484375   -4471.533691  400.202148 -4471.484375  200.000000 -4471.533691    0.000000    0.049316        0.000000
2   -4351.435059   -4377.655762  400.202148 -4351.435059  120.098633 -4377.655762    0.049316   26.171387       20.000000
3   -4345.874023   -4345.972656  400.202148 -4345.874023   31.732422 -4345.972656    0.049316    0.049316      -74.438965
4   -4151.435059   -4271.484375  400.202148 -4151.435059  194.488281 -4271.484375    0.049316  120.000000       20.000000
5   -3976.922119   -4171.484131  400.202148 -3976.922119  294.512939 -4171.484131   74.562256  119.999756       20.000000
6   -3976.922119   -4071.484375  400.202148 -3976.922119    1.000000 -4071.484375   74.562256   20.000000      -80.000000
7   -3858.677979   -3933.289551  400.202148 -3858.677979  138.244141 -3933.289551   74.562256    0.049316      -61.755859
8   -3551.385742   -3871.484131  400.202148 -3551.385742  307.341553 -3871.484131  200.098633  119.999756       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, loss_count=2, loss_amount=409701/2048.[0m
[08/29 18:48:50]  --------------------------------------------------------------------------------
[08/29 18:48:50]  Iteration: 11 (0 solution, 10 counterexamples)
[08/29 18:48:50]  Generator returned sat in 0.037443 secs.
[08/29 18:48:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:48:50]  Improved number of small numbers from 99 to 99 out of a max of 99
[08/29 18:48:50]  Verifer returned sat in 0.166844 secs.
[08/29 18:48:50]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -4667.509033   -4667.533691  400.202148 -4667.509033    0.098633 -4667.533691    0.000000    0.024658      -96.024658
1   -4471.459717   -4471.484375  400.202148 -4471.459717  196.073975 -4471.484375    0.000000    0.024658        0.024658
2   -4351.435059   -4377.680420  400.202148 -4351.435059  120.049316 -4377.680420    0.049316   26.196045       20.000000
3   -4345.898682   -4345.972656  400.202148 -4345.898682   31.732422 -4345.972656    0.049316    0.024658      -74.463623
4   -4152.410400   -4271.484375  400.202148 -4152.410400  193.512939 -4271.484375    0.049316  119.024658       19.024658
5   -3976.922119   -4171.484131  400.202148 -3976.922119  294.512939 -4171.484131   74.562256  119.999756       20.000000
6   -3976.922119   -4071.484375  400.202148 -3976.922119    1.000000 -4071.484375   74.562256   20.000000      -80.000000
7   -3857.677979   -3933.289551  400.202148 -3857.677979  139.244141 -3933.289551   74.562256    1.049316      -60.755859
8   -3549.385742   -3871.484131  400.202148 -3549.385742  309.341553 -3871.484131  202.098633  119.999756       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=413797/2048.[0m
[08/29 18:48:50]  --------------------------------------------------------------------------------
[08/29 18:48:50]  Iteration: 12 (0 solution, 11 counterexamples)
[08/29 18:48:51]  Generator returned sat in 0.291621 secs.
[08/29 18:48:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:48:51]  Improved gap from 0.0491943359375 to 21.875
[08/29 18:48:51]  Improved number of small numbers from 94 to 100 out of a max of 100
[08/29 18:48:51]  Verifer returned sat in 0.487333 secs.
[08/29 18:48:51]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t   cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -4110.823975   -4130.824219  -40.458740 -4110.823975   0.098145 -4130.824219        0.0  20.000244       19.999756
1   -4081.297607   -4103.172363   10.014893 -4081.297607  49.526611 -4103.172363        0.0  21.874756       -0.000244
2   -4079.248291   -4079.297363   86.139893 -4079.248291  23.924072 -4079.297363        0.0   0.049072      -21.825928
3   -4019.672363   -4057.422363  148.389893 -4019.672363  59.625000 -4057.422363        0.0  37.750000        0.000000
4   -4019.672363   -4019.672363  226.514893 -4019.672363  37.700928 -4019.672363        0.0   0.000000      -21.875000
5   -3976.922363   -3997.797363  304.639893 -3976.922363  42.750000 -3997.797363        0.0  20.875000       -1.000000
6   -3956.047363   -3975.922363  382.764893 -3956.047363  41.750000 -3975.922363        0.0  19.875000       -2.000000
7   -3934.172363   -3954.047363  460.889893 -3934.172363  41.750000 -3954.047363        0.0  19.875000       -2.000000
8   -3920.234863   -3932.172363  527.077393 -3920.234863  33.812500 -3932.172363        0.0  11.937500      -21.875000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/29 18:48:51]  --------------------------------------------------------------------------------
[08/29 18:48:51]  Iteration: 13 (0 solution, 12 counterexamples)
[08/29 18:48:52]  Generator returned sat in 0.720874 secs.
[08/29 18:48:52]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:48:52]  Improved gap from 0.01226806640625 to 100
[08/29 18:48:53]  Improved number of small numbers from 46 to 100 out of a max of 100
[08/29 18:48:53]  Verifer returned sat in 0.277661 secs.
[08/29 18:48:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -4211.138184   -4231.138184  59.855469 -4211.138184    0.098145 -4231.138184    0.000000   20.000000       20.000000
1   -4131.089111   -4148.270020  59.855469 -4131.089111  100.049072 -4148.270020    0.000000   17.180908        0.049072
2   -4131.088867   -4131.137939  59.855469 -4131.088867   17.181152 -4131.137939    0.000000    0.049072      -99.950684
3   -3836.471436   -4031.137939  59.855469 -3836.471436  294.666504 -4031.137939   74.666748  119.999756       20.000000
4   -3808.137939   -3911.368164  59.855469 -3808.137939  148.333252 -3911.368164   74.666748   28.563477      -51.666504
5   -3598.799561   -3831.137939  59.855469 -3598.799561  237.901855 -3831.137939  112.338623  119.999756       20.000000
6   -3598.799561   -3711.187256  59.855469 -3598.799561  119.950928 -3711.187256  112.338623    0.049072      -80.000000
7   -3277.897949   -3531.138184  59.855469 -3277.897949  320.950684 -3531.138184  233.240234   20.000000       20.000000
8   -3136.422607   -3531.138184  59.855469 -3136.422607  161.475342 -3531.138184  274.715576  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=102425/512.[0m
[08/29 18:48:53]  --------------------------------------------------------------------------------
[08/29 18:48:53]  Iteration: 14 (0 solution, 13 counterexamples)
[08/29 18:48:53]  Generator returned sat in 0.060207 secs.
[08/29 18:48:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:54]  Improved number of small numbers from 61 to 95 out of a max of 99
[08/29 18:48:54]  Verifer returned sat in 0.600235 secs.
[08/29 18:48:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t   wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -4211.602051   -4231.601807  59.855469 -4211.602051    0.098145 -4231.601807    0.000000   19.999756       19.999756
1   -4131.552734   -4148.416992  59.855469 -4131.552734  100.049072 -4148.416992    0.000000   16.864258        0.049072
2   -4131.552490   -4131.601807  59.855469 -4131.552490   16.864502 -4131.601807    0.000000    0.049316      -99.950684
3   -3836.934814   -4031.601807  59.855469 -3836.934814  294.666992 -4031.601807   74.666992  120.000000       20.000000
4   -3808.601318   -3910.466309  59.855469 -3808.601318  148.333496 -3910.466309   74.666992   27.197998      -51.666504
5   -3597.848633   -3831.601807  59.855469 -3597.848633  237.950684 -3831.601807  113.753174  120.000000       20.000000
6   -3597.848633   -3711.626465  59.855469 -3597.848633  119.975342 -3711.626465  113.753174    0.024658      -80.000000
7   -3277.897949   -3531.601929  59.855469 -3277.897949  319.975342 -3531.601929  233.703857   20.000122       20.000000
8   -3136.910400   -3531.138428  59.855469 -3136.910400  160.987671 -3531.138428  274.691406  119.536621       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=204825/1024.[0m
[08/29 18:48:54]  --------------------------------------------------------------------------------
[08/29 18:48:54]  Iteration: 15 (0 solution, 14 counterexamples)
[08/29 18:48:55]  Generator returned sat in 0.896937 secs.
[08/29 18:48:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:56]  Improved number of small numbers from 69 to 99 out of a max of 99
[08/29 18:48:56]  Verifer returned sat in 0.220378 secs.
[08/29 18:48:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5440.483398   -5440.532471  269.913818 -5440.483398    0.098145 -5440.532471    0.000000    0.049072      -18.901855
1   -5301.630615   -5340.630615  269.913818 -5301.630615  138.901855 -5340.630615    0.000000   39.000000       19.950928
2   -5221.581543   -5221.630615  269.913818 -5221.581543  119.049072 -5221.630615    0.000000    0.049072        0.000000
3   -5101.532715   -5121.581543  269.913818 -5101.532715  120.097900 -5121.581543    0.048828   20.000000       20.000000
4   -4801.581787   -5121.581543  269.913818 -4801.581787  319.950928 -5121.581543  199.999756  120.000000       20.000000
5   -4701.532715   -4921.581543  269.913818 -4701.532715  220.049072 -4921.581543  200.048828   20.000000       20.000000
6   -4420.483643   -4821.581543  269.913818 -4420.483643  301.049072 -4821.581543  381.097900   20.000000       20.000000
7   -4139.483643   -4721.581543  269.913818 -4139.483643  301.000000 -4721.581543  562.097900   20.000000       20.000000
8   -3758.483643   -4721.581543  269.913818 -3758.483643  401.000000 -4721.581543  843.097900  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=1317065/2048.[0m
[08/29 18:48:56]  --------------------------------------------------------------------------------
[08/29 18:48:56]  Iteration: 16 (0 solution, 15 counterexamples)
[08/29 18:48:56]  Generator returned sat in 0.072231 secs.
[08/29 18:48:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:56]  Improved number of small numbers from 99 to 99 out of a max of 99
[08/29 18:48:56]  Verifer returned sat in 0.144808 secs.
[08/29 18:48:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5401.581543   -5521.581543  269.913818 -5401.581543    0.098145 -5521.581543    0.000000  120.000000       20.000000
1   -5301.630615   -5421.581543  269.913818 -5301.630615  219.950928 -5421.581543    0.000000  119.950928       19.950928
2   -5221.581543   -5321.581543  269.913818 -5221.581543  200.000000 -5321.581543    0.000000  100.000000        0.000000
3   -4683.245361   -5175.516113  269.913818 -4683.245361  638.336182 -5175.516113  418.336182   73.934570       20.000000
4   -4583.147217   -5072.450684  269.913818 -4583.147217  174.032715 -5072.450684  418.434326   70.869141       20.000000
5   -4478.450928   -4921.581543  269.913818 -4478.450928  175.565430 -4921.581543  423.130615   20.000000       20.000000
6   -4297.450928   -4821.581543  269.913818 -4297.450928  201.000000 -4821.581543  504.130615   20.000000       20.000000
7   -4139.483643   -4721.581543  269.913818 -4139.483643  177.967285 -4721.581543  562.097900   20.000000       20.000000
8   -3983.049072   -4721.581543  269.913818 -3983.049072  176.434570 -4721.581543  618.532471  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=409801/2048.[0m
[08/29 18:48:57]  --------------------------------------------------------------------------------
[08/29 18:48:57]  Iteration: 17 (0 solution, 16 counterexamples)
[08/29 18:48:57]  Generator returned sat in 0.045971 secs.
[08/29 18:48:57]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:48:57]  Improved gap from 0.00125 to 0
[08/29 18:48:57]  Improved number of small numbers from 71 to 80 out of a max of 100
[08/29 18:48:57]  Verifer returned sat in 0.532175 secs.
[08/29 18:48:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6112.737549   -6212.738525  169.923818 -6112.737549    0.098145 -6212.738525    0.00000  100.000977        0.001123
1   -6112.737549   -6112.738525  169.923818 -6112.737549    0.002686 -6112.738525    0.00000    0.000977      -99.998877
2   -5912.738770   -5990.757422  169.923818 -5912.738770  199.999756 -5990.757422    0.00000   78.018652       -0.000098
3   -5792.737422   -5812.738672  169.923818 -5792.737422  198.020000 -5812.738672    0.00125   20.000000       20.000000
4   -5712.727422   -5712.738672  169.923818 -5712.727422  100.010000 -5712.738672    0.00125    0.010000        0.010000
5   -5712.727422   -5712.737422  269.913818 -5712.727422    0.010000 -5712.737422    0.00125    0.008750        0.000000
6   -5712.726172   -5712.728672  369.912354 -5712.726172    0.010000 -5712.728672    0.00125    0.001250       -0.000215
7   -5712.717422   -5712.719922  469.903809 -5712.717422    0.010000 -5712.719922    0.00125    0.001250       -0.000010
8   -5712.708672   -5712.718506  469.903809 -5712.708672    0.010000 -5712.718506    0.00125    0.008584      -99.991260
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/29 18:48:58]  --------------------------------------------------------------------------------
[08/29 18:48:58]  Iteration: 18 (0 solution, 17 counterexamples)
[08/29 18:48:59]  Generator returned sat in 0.697754 secs.
[08/29 18:48:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:48:59]  Improved gap from 0.0 to 0
[08/29 18:48:59]  Improved number of small numbers from 51 to 100 out of a max of 100
[08/29 18:48:59]  Verifer returned sat in 0.292772 secs.
[08/29 18:48:59]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6273.835449   -6273.835449   71.011475 -6273.835449    0.098145 -6273.835449     0.0000    0.000000       -0.000244
1   -6273.786377   -6273.835205  170.962646 -6273.786377    0.049072 -6273.835205     0.0000    0.048828        0.000000
2   -6173.786377   -6273.786133  170.962646 -6173.786377  100.048828 -6273.786133     0.0000   99.999756        0.000000
3   -5873.688477   -6173.786377  170.962646 -5873.688477  400.097656 -6173.786377   180.0979  120.000000       20.000000
4   -5792.639648   -5973.786377  170.962646 -5792.639648  201.048828 -5973.786377   180.0979    1.048828        1.048828
5   -5792.639648   -5973.786377  269.913818 -5792.639648    1.000000 -5973.786377   180.0979    1.048828        0.000000
6   -5792.639648   -5972.737549  369.864990 -5792.639648    1.000000 -5972.737549   180.0979    0.000000       -0.048828
7   -5791.639648   -5972.688477  468.913574 -5791.639648    1.000000 -5972.688477   180.0979    0.950928       -0.000244
8   -5791.590576   -5971.688477  568.864746 -5791.590576    1.000000 -5971.688477   180.0979    0.000000        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/29 18:48:59]  --------------------------------------------------------------------------------
[08/29 18:48:59]  Iteration: 19 (0 solution, 18 counterexamples)
[08/29 18:49:00]  Generator returned sat in 0.354939 secs.
[08/29 18:49:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:00]  Improved gap from 0.0 to 7.8125
[08/29 18:49:01]  Improved number of small numbers from 73 to 100 out of a max of 100
[08/29 18:49:01]  Verifer returned sat in 0.658450 secs.
[08/29 18:49:01]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6273.835205   -6273.835449   78.775146 -6273.835205    0.098145 -6273.835449        0.0    0.000244        0.000244
1   -6273.786377   -6273.835205  170.962402 -6273.786377    0.049072 -6273.835205        0.0    0.048828       -7.763672
2   -6166.022949   -6234.072021  170.962402 -6166.022949  107.812256 -6234.072021        0.0   68.049072       -0.000244
3   -6046.072021   -6166.022705  170.962402 -6046.072021  188.000000 -6166.022705        0.0  119.950684       19.950684
4   -6046.072021   -6046.120850  243.247803 -6046.072021   95.000000 -6046.120850        0.0    0.048828       -7.763916
5   -5997.620850   -5997.669678  277.408447 -5997.620850   48.500000 -5997.669678        0.0    0.048828      -25.152100
6   -5972.419678   -5972.468750  369.595703 -5972.419678   25.250000 -5972.468750        0.0    0.049072       -7.763672
7   -5958.843750   -5964.656006  461.783203 -5958.843750   13.625000 -5964.656006        0.0    5.812256       -2.000244
8   -5956.843506   -5956.843506  461.783447 -5956.843506    7.812500 -5956.843506        0.0    0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/29 18:49:01]  --------------------------------------------------------------------------------
[08/29 18:49:01]  Iteration: 20 (0 solution, 19 counterexamples)
[08/29 18:49:02]  Generator returned sat in 1.119908 secs.
[08/29 18:49:02]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:03]  Improved gap from 0.0244140625 to 1.5625
[08/29 18:49:03]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/29 18:49:03]  Verifer returned sat in 0.341911 secs.
[08/29 18:49:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -5983.406006   -5983.454834  149.568359 -5983.406006    0.098145 -5983.454834   0.000000   0.048828        0.048828
1   -5983.406006   -5983.454834  149.568359 -5983.406006    0.048828 -5983.454834   0.000000   0.048828      -99.951172
2   -5883.406006   -5883.454834  149.568359 -5883.406006  100.048828 -5883.454834   0.000000   0.048828      -99.951172
3   -5762.843506   -5764.406006  228.957031 -5762.843506  120.611328 -5764.406006   0.000000   1.562500        0.000000
4   -5642.794678   -5662.843506  228.957031 -5642.794678  121.611328 -5662.843506   0.048828  20.000000       20.000000
5   -5642.794678   -5642.892334  307.443359 -5642.794678    1.000000 -5642.892334   0.048828   0.048828       -1.513672
6   -5640.843506   -5641.329834  405.880859 -5640.843506    2.000000 -5641.329834   0.048828   0.437500       -1.125000
7   -5638.281006   -5639.767334  504.318359 -5638.281006    3.000000 -5639.767334   0.048828   1.437500       -0.125000
8   -5635.718506   -5638.204834  504.318359 -5635.718506    4.000000 -5638.204834   0.048828   2.437500      -97.562500
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/29 18:49:03]  --------------------------------------------------------------------------------
[08/29 18:49:03]  Iteration: 21 (0 solution, 20 counterexamples)
[08/29 18:49:03]  Generator returned sat in 0.259160 secs.
[08/29 18:49:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:04]  Improved gap from 0.00125 to 100
[08/29 18:49:04]  Improved number of small numbers from 62 to 100 out of a max of 100
[08/29 18:49:04]  Verifer returned sat in 0.252343 secs.
[08/29 18:49:04]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5963.454834   -6047.260010  149.567871 -5963.454834    0.097900 -6047.260010    0.000000   83.805176       20.000000
1   -5883.454834   -5983.454834  149.567871 -5883.454834  163.805176 -5983.454834    0.000000  100.000000        0.000000
2   -5883.406250   -5883.454834  149.567871 -5883.406250  100.048584 -5883.454834    0.000000    0.048584      -99.951416
3   -5663.406250   -5712.690674  149.567871 -5663.406250  220.048584 -5712.690674    0.048584   49.235840       20.000000
4   -5545.357422   -5618.024170  149.567871 -5545.357422  167.284668 -5618.024170   18.097412   54.569336       20.000000
5   -5417.211426   -5483.454834  149.567871 -5417.211426  182.715332 -5483.454834   46.243408   20.000000       20.000000
6   -5237.211426   -5383.454834  149.567871 -5237.211426  200.000000 -5383.454834  126.243408   20.000000       20.000000
7   -5092.593506   -5283.454834  149.567871 -5092.593506  164.617920 -5283.454834  170.861328   20.000000       20.000000
8   -4945.308838   -5283.454834  149.567871 -4945.308838  167.284668 -5283.454834  218.145996  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=5, loss_amount=819399/4096.[0m
[08/29 18:49:04]  --------------------------------------------------------------------------------
[08/29 18:49:04]  Iteration: 22 (0 solution, 21 counterexamples)
[08/29 18:49:04]  Generator returned sat in 0.074978 secs.
[08/29 18:49:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:05]  Improved gap from 0.0 to 0
[08/29 18:49:05]  Improved number of small numbers from 60 to 76 out of a max of 100
[08/29 18:49:05]  Verifer returned sat in 0.689491 secs.
[08/29 18:49:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6812.633545   -6932.633301  149.567871 -6812.633545    0.097900 -6932.633301     0.0000  119.999756       19.999961
1   -6712.635986   -6832.633301  149.567871 -6712.635986  219.997314 -6832.633301     0.0000  119.997314       19.997520
2   -6612.635986   -6732.633506  149.567871 -6612.635986  219.997314 -6732.633506     0.0000  119.997520       19.997520
3   -6492.628506   -6532.633506  149.567871 -6492.628506  240.005000 -6532.633506    20.0050   20.000000       20.000000
4   -6392.626006   -6472.637207  149.567871 -6392.626006  120.002500 -6472.637207    20.0075   60.003701       20.000000
5   -6392.626006   -6412.636006  229.567627 -6392.626006   60.001250 -6412.636006    20.0075    0.002500       -0.000244
6   -6392.618506   -6412.628506  329.555420 -6392.618506    0.010000 -6412.628506    20.0075    0.002500       -0.004951
7   -6392.611006   -6412.621006  429.552871 -6392.611006    0.010000 -6412.621006    20.0075    0.002500        0.000000
8   -6392.603506   -6412.618408  529.545166 -6392.603506    0.010000 -6412.618408    20.0075    0.007402       -0.000205
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/29 18:49:05]  --------------------------------------------------------------------------------
[08/29 18:49:05]  Iteration: 23 (0 solution, 22 counterexamples)
[08/29 18:49:08]  Generator returned sat in 2.021406 secs.
[08/29 18:49:08]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:08]  Improved gap from 0.0 to 21.875
[08/29 18:49:08]  Improved number of small numbers from 41 to 100 out of a max of 100
[08/29 18:49:08]  Verifer returned sat in 0.420263 secs.
[08/29 18:49:08]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6812.633545   -6932.633301   91.418457 -6812.633545    0.097656 -6932.633301   0.000000  119.999756       20.000000
1   -6712.609131   -6832.633545   91.418457 -6712.609131  220.024170 -6832.633545   0.024414  120.000000       20.000000
2   -6612.584961   -6634.557129   91.418457 -6612.584961  220.024170 -6634.557129   0.048584   21.923584       20.000000
3   -6612.584961   -6612.657959  149.567871 -6612.584961   21.899414 -6612.657959   0.048584    0.024414      -21.850586
4   -6590.709961   -6590.782959  227.692871 -6590.709961   21.899414 -6590.782959   0.048584    0.024414      -21.850586
5   -6568.834961   -6568.907959  305.817871 -6568.834961   21.899414 -6568.907959   0.048584    0.024414      -21.850586
6   -6546.959961   -6547.032959  383.942627 -6546.959961   21.899414 -6547.032959   0.048584    0.024414      -21.850830
7   -6525.084961   -6525.157715  462.067627 -6525.084961   21.899414 -6525.157715   0.048584    0.024170      -21.850830
8   -6503.209717   -6503.282715  462.067627 -6503.209717   21.899414 -6503.282715   0.048584    0.024414      -99.975586
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=False, ramp_down_cwnd=False, loss_count=0, loss_amount=0.[0m
[08/29 18:49:09]  --------------------------------------------------------------------------------
[08/29 18:49:09]  Iteration: 24 (0 solution, 23 counterexamples)
[08/29 18:49:09]  Generator returned sat in 0.341176 secs.
[08/29 18:49:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:10]  Improved gap from 0.024169921875 to 7.8125
[08/29 18:49:10]  Improved number of small numbers from 63 to 100 out of a max of 100
[08/29 18:49:10]  Verifer returned sat in 0.672398 secs.
[08/29 18:49:10]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5649.759033   -5769.758789  225.817871 -5649.759033    0.097412 -5769.758789   0.000000  119.999756       20.000000
1   -5549.739502   -5669.758789  225.817871 -5549.739502  220.019287 -5669.758789   0.019531  119.999756       20.000000
2   -5449.719971   -5569.759033  225.817871 -5449.719971  220.019287 -5569.759033   0.039062  120.000000       20.000000
3   -5325.094971   -5373.052002  225.817871 -5325.094971  244.625000 -5373.052002  24.664062   23.292969       20.000000
4   -5225.075439   -5312.747314  225.817871 -5225.075439  123.312500 -5312.747314  24.683594   62.988281       20.000000
5   -5225.075439   -5269.759033  305.817627 -5225.075439   62.656250 -5269.759033  24.683594   20.000000       -0.000244
6   -5213.747314   -5238.430908  386.677002 -5213.747314   31.328125 -5238.430908  24.683594    0.000000       -7.812744
7   -5198.083252   -5230.618164  478.825684 -5198.083252   15.664062 -5230.618164  24.683594    7.851318        0.000000
8   -5198.083252   -5222.766846  478.825684 -5198.083252    7.832031 -5222.766846  24.683594    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/29 18:49:10]  --------------------------------------------------------------------------------
[08/29 18:49:10]  Iteration: 25 (0 solution, 24 counterexamples)
[08/29 18:49:11]  Generator returned sat in 0.482938 secs.
[08/29 18:49:11]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:12]  Improved gap from 0.0484619140625 to 100
[08/29 18:49:12]  Improved number of small numbers from 52 to 56 out of a max of 100
[08/29 18:49:12]  Verifer returned sat in 1.093180 secs.
[08/29 18:49:12]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5649.771240   -5649.783264  225.817871 -5649.771240    0.097412 -5649.783264    0.000000    0.012024      -39.987976
1   -5569.759033   -5569.771149  225.817871 -5569.759033   80.024231 -5569.771149    0.000000    0.012115      -59.975769
2   -5409.771149   -5409.783264  225.817871 -5409.771149  160.000000 -5409.783264    0.000000    0.012115        0.012115
3   -5409.759033   -5409.783264  225.817871 -5409.759033    0.024231 -5409.783264    0.000000    0.024231      -99.975769
4   -5289.771149   -5289.783264  225.817871 -5289.771149  120.012115 -5289.783264    0.000000    0.012115      -79.987885
5   -5089.783264   -5209.783264  225.817871 -5089.783264  200.000000 -5209.783264    0.000000  120.000000       20.000000
6   -5009.783264   -5009.795380  225.817871 -5009.783264  200.000000 -5009.795380    0.000000    0.012115        0.000000
7   -4709.801437   -4909.783264  225.817871 -4709.801437  299.993942 -4909.783264  179.981827   20.000000       20.000000
8   -4578.804466   -4909.783203  225.817871 -4578.804466  150.996971 -4909.783203  210.978798  119.999939       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=27653413/131072.[0m
[08/29 18:49:12]  --------------------------------------------------------------------------------
[08/29 18:49:12]  Iteration: 26 (0 solution, 25 counterexamples)
[08/29 18:49:13]  Generator returned sat in 0.244398 secs.
[08/29 18:49:13]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:14]  Improved gap from 60.475830078125 to 100
[08/29 18:49:14]  Improved number of small numbers from 76 to 100 out of a max of 100
[08/29 18:49:14]  Verifer returned sat in 1.267359 secs.
[08/29 18:49:14]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5922.463867   -6042.463867  558.498535 -5922.463867    0.097412 -6042.463867    0.000000  120.000000       20.000000
1   -5822.415527   -5942.463867  558.498535 -5822.415527  220.048340 -5942.463867    0.048340  120.000000       20.000000
2   -5742.415527   -5842.463867  558.498535 -5742.415527  200.000000 -5842.463867    0.048340  100.000000        0.000000
3   -5726.641113   -5742.463867  558.498535 -5726.641113  115.774414 -5742.463867    0.048340   15.774414      -84.225586
4   -5534.528320   -5557.286621  558.498535 -5534.528320  207.887207 -5557.286621    0.048340   22.709961        7.887207
5   -5260.706055   -5442.463867  558.498535 -5260.706055  296.532227 -5442.463867  161.757812   20.000000       20.000000
6   -5260.706055   -5442.463867  558.498535 -5260.706055    1.000000 -5442.463867  161.757812   20.000000      -80.000000
7   -5130.206055   -5292.012207  558.498535 -5130.206055  150.500000 -5292.012207  161.757812    0.048340      -49.500000
8   -4922.367188   -5142.463867  558.498535 -4922.367188  207.887207 -5142.463867  200.096680   20.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_bq=False, ramp_down_q=True, ramp_down_cwnd=False, loss_count=2, loss_amount=409699/2048.[0m
[08/29 18:49:15]  --------------------------------------------------------------------------------
[08/29 18:49:15]  Iteration: 27 (0 solution, 26 counterexamples)
[08/29 18:49:15]  Generator returned sat in 0.349143 secs.
[08/29 18:49:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:16]  Improved gap from 0.00125 to 6.25
[08/29 18:49:16]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/29 18:49:16]  Verifer returned sat in 0.454588 secs.
[08/29 18:49:16]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -5922.439697   -6042.439697  558.498535 -5922.439697    0.097412 -6042.439697    0.00000  120.000000        20.00000
1   -5822.415527   -5942.439697  558.498535 -5822.415527  220.024170 -5942.439697    0.02417  120.000000        20.00000
2   -5722.391357   -5823.237305  558.498535 -5722.391357  220.024170 -5823.237305    0.04834  100.797607        20.00000
3   -5622.415527   -5642.802246  558.498535 -5622.415527  200.773438 -5642.802246    0.04834   20.338379        19.97583
4   -5542.367188   -5601.020508  558.498535 -5542.367188  100.386719 -5601.020508    0.04834   58.604980         0.02417
5   -5542.367188   -5542.439697  639.651855 -5542.367188   50.193359 -5542.439697    0.04834    0.024170       -18.82251
6   -5517.294678   -5523.593018  733.401855 -5517.294678   25.096680 -5523.593018    0.04834    6.250000         0.00000
7   -5510.996338   -5517.343018  827.103516 -5510.996338   12.548340 -5517.343018    0.04834    6.298340         0.00000
8   -5510.996338   -5511.044678  827.103516 -5510.996338    6.274170 -5511.044678    0.04834    0.000000      -100.00000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=0, loss_amount=0.[0m
[08/29 18:49:16]  --------------------------------------------------------------------------------
[08/29 18:49:16]  Iteration: 28 (0 solution, 27 counterexamples)
[08/29 18:49:20]  Generator returned sat in 3.485407 secs.
[08/29 18:49:20]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:21]  Improved gap from 0.0120849609375 to 26.5625
[08/29 18:49:21]  Improved number of small numbers from 68 to 75 out of a max of 100
[08/29 18:49:21]  Verifer returned sat in 1.201252 secs.
[08/29 18:49:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5665.540771   -5785.540663  558.498291 -5665.540771    0.097168 -5785.540663    0.000000  119.999891       19.999891
1   -5565.512885   -5685.540663  558.498291 -5565.512885  220.027778 -5685.540663    0.027778  120.000000       20.000000
2   -5465.485107   -5485.540771  558.498291 -5465.485107  220.027778 -5485.540771    0.055556   20.000109       20.000000
3   -5465.485107   -5465.568441  611.932373 -5465.485107   12.810764 -5465.568441    0.055556    0.027778      -26.565918
4   -5438.891357   -5438.974691  657.717041 -5438.891357   26.621528 -5438.974691    0.055556    0.027778      -54.187500
5   -5384.676080   -5384.759413  731.154541 -5384.676080   54.243056 -5384.759413    0.055556    0.027778      -26.534722
6   -5275.217746   -5358.196913  731.154541 -5275.217746  109.486111 -5358.196913    0.055556   82.923611      -17.076389
7   -5138.169135   -5158.196913  731.154541 -5138.169135  219.972222 -5158.196913    0.055556   19.972222       19.972222
8   -4717.196913   -5158.196777  731.154541 -4717.196913  440.944444 -5158.196777  321.000000  119.999864       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=5777/18.[0m
[08/29 18:49:22]  --------------------------------------------------------------------------------
[08/29 18:49:22]  Iteration: 29 (0 solution, 28 counterexamples)
[08/29 18:49:22]  Generator returned sat in 0.251206 secs.
[08/29 18:49:22]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:22]  Verifer returned unsat in 0.072401 secs.
[08/29 18:49:22]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:22]  --------------------------------------------------------------------------------
[08/29 18:49:22]  Iteration: 30 (1 solution, 28 counterexamples)
[08/29 18:49:23]  Generator returned sat in 0.163742 secs.
[08/29 18:49:23]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:23]  Improved gap from 0.04833984375 to 100
[08/29 18:49:24]  Improved number of small numbers from 34 to 46 out of a max of 100
[08/29 18:49:24]  Verifer returned sat in 1.416221 secs.
[08/29 18:49:24]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5752.807617   -5752.855713  581.425781 -5752.807617    0.096924 -5752.855713    0.000000    0.048096        0.024069
1   -5752.807617   -5752.831543  581.425781 -5752.807617    0.024170 -5752.831543    0.000000    0.023926      -99.975931
2   -5532.855957   -5652.831686  581.425781 -5532.855957  219.975586 -5652.831686    0.000000  119.975729       19.975729
3   -5303.607782   -5508.419468  581.425781 -5303.607782  349.223904 -5508.419468  129.223904   75.587782       20.000000
4   -5203.583612   -5352.831686  581.425781 -5203.583612  175.611952 -5352.831686  129.248074   20.000000       20.000000
5   -5134.777636   -5264.049880  581.425781 -5134.777636   88.805976 -5264.049880  129.248074    0.024170      -11.194024
6   -4895.007915   -5173.704462  581.425781 -4895.007915  239.793891 -5173.704462  237.823771   40.872776       20.000000
7   -4814.983745   -5052.831686  581.425781 -4814.983745  120.896946 -5052.831686  237.823771    0.024170        0.024170
8   -4603.559442   -5052.831543  581.425781 -4603.559442  211.448473 -5052.831543  329.272244  119.999857       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=3, loss_amount=819299/4096.[0m
[08/29 18:49:25]  --------------------------------------------------------------------------------
[08/29 18:49:25]  Iteration: 31 (1 solution, 29 counterexamples)
[08/29 18:49:27]  Generator returned sat in 2.032172 secs.
[08/29 18:49:27]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:28]  Improved gap from 0.04833984375 to 100
[08/29 18:49:28]  Improved number of small numbers from 63 to 100 out of a max of 100
[08/29 18:49:28]  Verifer returned sat in 1.001097 secs.
[08/29 18:49:28]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5318.207275   -5318.207275  707.8125 -5318.207275    0.096924 -5318.207275    0.000000    0.000000        0.000000
1   -5198.158936   -5218.207275  707.8125 -5198.158936  120.048340 -5218.207275    0.048340   20.000000       20.000000
2   -5198.158936   -5198.255859  707.8125 -5198.158936   19.951660 -5198.255859    0.048340    0.048584      -80.000000
3   -4842.594238   -5076.303955  707.8125 -4842.594238  355.613281 -5076.303955  155.613037   78.096680       20.000000
4   -4742.884277   -4918.207275  707.8125 -4742.884277  177.806641 -4918.207275  155.613037   19.709961       19.709961
5   -4522.690918   -4918.207275  707.8125 -4522.690918  239.903320 -4918.207275  275.516357  120.000000       20.000000
6   -4522.690918   -4798.255615  707.8125 -4522.690918  119.951660 -4798.255615  275.516357    0.048340      -80.000000
7   -4322.739258   -4618.207275  707.8125 -4322.739258  200.000000 -4618.207275  275.516357   19.951660       19.951660
8   -4091.690918   -4618.207275  707.8125 -4091.690918  251.000000 -4618.207275  406.516357  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=256925/1024.[0m
[08/29 18:49:29]  --------------------------------------------------------------------------------
[08/29 18:49:29]  Iteration: 32 (1 solution, 30 counterexamples)
[08/29 18:49:29]  Generator returned sat in 0.449482 secs.
[08/29 18:49:29]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:30]  Improved gap from 0.0025 to 1.5625
[08/29 18:49:30]  Improved number of small numbers from 65 to 77 out of a max of 100
[08/29 18:49:30]  Verifer returned sat in 0.768002 secs.
[08/29 18:49:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -5318.160156   -5318.160400   707.765410 -5318.160156    0.096924 -5318.160400    0.00000   0.000244        0.000029
1   -5198.158936   -5218.160400   707.765410 -5198.158936  120.001465 -5218.160400    0.00125  20.000215       20.000000
2   -5198.158936   -5218.160186   707.765410 -5198.158936   19.999756 -5218.160186    0.00125  20.000000      -80.000000
3   -5018.158936   -5099.158936   707.765410 -5018.158936  200.000000 -5099.158936    0.00125  80.998750        0.000000
4   -4898.157686   -4985.033936   707.765410 -4898.157686  201.000000 -4985.033936    0.00250  86.873750       20.000000
5   -4898.157686   -4899.722900   787.765410 -4898.157686    0.010000 -4899.722900    0.00250   1.562715        0.000000
6   -4898.157686   -4898.160186   886.202910 -4898.157686    1.010000 -4898.160186    0.00250   0.000000       -1.562500
7   -4896.147686   -4896.597686   984.640381 -4896.147686    2.010000 -4896.597686    0.00250   0.447500       -1.115029
8   -4893.585186   -4895.035156  1083.077881 -4893.585186    3.010000 -4895.035156    0.00250   1.447471       -0.115029
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=True, loss_count=1, loss_amount=0.[0m
[08/29 18:49:31]  --------------------------------------------------------------------------------
[08/29 18:49:31]  Iteration: 33 (1 solution, 31 counterexamples)
[08/29 18:49:32]  Generator returned sat in 0.552406 secs.
[08/29 18:49:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:32]  Improved gap from 0.0 to 0
[08/29 18:49:32]  Improved number of small numbers from 65 to 100 out of a max of 100
[08/29 18:49:32]  Verifer returned sat in 0.232265 secs.
[08/29 18:49:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t    queue_t  bottle_queue_t
0   -5178.302490   -5198.302490   587.907227 -5178.302490    0.096680 -5198.302490        0.0  20.000000       20.000000
1   -5178.302490   -5178.350586   587.907227 -5178.302490    0.048096 -5178.350586        0.0   0.048096      -80.000000
2   -4998.302490   -5098.302246   587.907227 -4998.302490  180.048096 -5098.302246        0.0  99.999756        0.000000
3   -4878.350586   -4898.302490   587.907227 -4878.350586  219.951660 -4898.302490        0.0  19.951904       19.951904
4   -4878.350586   -4878.398926   667.955322 -4878.350586    1.000000 -4878.398926        0.0   0.048340        0.000000
5   -4877.398926   -4877.447266   767.003662 -4877.398926    1.000000 -4877.447266        0.0   0.048340        0.000000
6   -4876.447266   -4876.495361   866.052002 -4876.447266    1.000000 -4876.495361        0.0   0.048096        0.000000
7   -4875.495361   -4876.447266   965.100098 -4875.495361    1.000000 -4876.447266        0.0   0.951904        0.000000
8   -4875.447266   -4875.495117  1065.051758 -4875.447266    1.000000 -4875.495117        0.0   0.047852       -0.000244
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_bq=True, ramp_down_q=True, ramp_down_cwnd=False, loss_count=0, loss_amount=0.[0m
[08/29 18:49:32]  --------------------------------------------------------------------------------
[08/29 18:49:32]  Iteration: 34 (1 solution, 32 counterexamples)
[08/29 18:49:33]  Generator returned sat in 0.295617 secs.
[08/29 18:49:33]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:33]  Verifer returned unsat in 0.088465 secs.
[08/29 18:49:33]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:33]  --------------------------------------------------------------------------------
[08/29 18:49:33]  Iteration: 35 (2 solution, 32 counterexamples)
[08/29 18:49:34]  Generator returned sat in 0.491911 secs.
[08/29 18:49:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:34]  Improved gap from 0.0 to 100
[08/29 18:49:35]  Improved number of small numbers from 36 to 52 out of a max of 100
[08/29 18:49:35]  Verifer returned sat in 0.991925 secs.
[08/29 18:49:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5976.457520   -5996.457520  886.925322 -5976.457520    0.096436 -5996.457520    0.000000   20.000000       19.999866
1   -5976.457520   -5976.505371  886.925322 -5976.457520    0.012207 -5976.505371    0.000000    0.047852      -80.000134
2   -5776.469238   -5796.457385  886.925322 -5776.469238  200.036133 -5796.457385    0.000000   19.988147       19.988147
3   -5754.315884   -5754.463967  886.925322 -5754.315884   42.141501 -5754.463967    0.000000    0.148082      -57.858499
4   -5691.251715   -5691.263739  886.925322 -5691.251715   63.212252 -5691.263739    0.000000    0.012024      -94.794330
5   -5596.445361   -5596.457385  886.925322 -5596.445361   94.818377 -5596.457385    0.000000    0.012024      -99.987976
6   -5454.229819   -5496.457385  886.925322 -5454.229819  142.227566 -5496.457385    0.000000   42.227566      -57.772434
7   -5283.116036   -5296.457385  886.925322 -5283.116036  213.341349 -5296.457385    0.000000   13.341349       13.341349
8   -4976.445361   -5296.457275  886.925322 -4976.445361  320.012024 -5296.457275  200.012024  119.999890       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=3276997/16384.[0m
[08/29 18:49:35]  --------------------------------------------------------------------------------
[08/29 18:49:35]  Iteration: 36 (2 solution, 33 counterexamples)
[08/29 18:49:37]  Generator returned sat in 1.548337 secs.
[08/29 18:49:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:38]  Improved gap from 0.00125 to 26.5625
[08/29 18:49:38]  Improved number of small numbers from 46 to 92 out of a max of 100
[08/29 18:49:38]  Verifer returned sat in 0.811801 secs.
[08/29 18:49:38]  Counter example: 
[93m   tot_arrival_t  tot_service_t    wasted_t  arrival_0,t    cwnd_0,t  service_0,t   losts_0,t     queue_t  bottle_queue_t
0   -5982.924072   -6002.923828  667.013184 -5982.924072    0.096436 -6002.923828    0.000000   19.999756       19.999756
1   -5982.924072   -6002.923828  740.450684 -5982.924072    0.048096 -6002.923828    0.000000   19.999756       -6.562744
2   -5856.409424   -5876.361572  740.450684 -5856.409424  146.514404 -5876.361572    0.000000   19.952148       19.951904
3   -5856.409424   -5856.457507  793.984131 -5856.409424   13.305237 -5856.457507    0.000000    0.048083      -26.514648
4   -5829.847034   -5829.894775  867.421631 -5829.847034   26.610474 -5829.894775    0.000000    0.047742      -26.514758
5   -5776.673828   -5803.236328  940.763184 -5776.673828   53.220947 -5803.236328    0.000000   26.562500        0.000000
6   -5696.794434   -5769.557861  940.763184 -5696.794434  106.441895 -5769.557861    0.000000   72.763428      -20.120605
7   -5556.674072   -5676.673828  940.763184 -5556.674072  212.883789 -5676.673828    0.000000  119.999756       19.999756
8   -5250.906250   -5576.673828  940.763184 -5250.906250  425.767578 -5576.673828  205.767578  120.000000       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=1, loss_amount=105353/512.[0m
[08/29 18:49:38]  --------------------------------------------------------------------------------
[08/29 18:49:38]  Iteration: 37 (2 solution, 34 counterexamples)
[08/29 18:49:40]  Generator returned sat in 0.692357 secs.
[08/29 18:49:40]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:40]  Improved gap from 0.02398681640625 to 100
[08/29 18:49:41]  Improved number of small numbers from 61 to 65 out of a max of 100
[08/29 18:49:41]  Verifer returned sat in 0.813627 secs.
[08/29 18:49:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6773.261719   -6773.261953  1437.351309 -6773.261719    0.096436 -6773.261953    0.00000    0.000234        0.000234
1   -6653.260703   -6673.261953  1437.351309 -6653.260703  120.001250 -6673.261953    0.00125   20.000000       20.000000
2   -6553.259453   -6573.261953  1437.351309 -6553.259453  120.001250 -6573.261953    0.00250   20.000000       20.000000
3   -6453.259453   -6513.239453  1437.351309 -6453.259453  120.000000 -6513.239453    0.00250   59.977500       20.000000
4   -6263.225703   -6373.261953  1437.351309 -6263.225703  250.011250 -6373.261953   90.03625   20.000000       20.000000
5   -6263.225703   -6373.261953  1437.351309 -6263.225703    0.010000 -6373.261953   90.03625   20.000000      -80.000000
6   -6183.215703   -6273.261953  1437.351309 -6183.215703  100.010000 -6273.261953   90.03625    0.010000      -99.990000
7   -5963.226953   -6073.261953  1437.351309 -5963.226953  219.998750 -6073.261953   90.03625   19.998750       19.998750
8   -5613.226953   -6073.261719  1437.351309 -5613.226953  369.998750 -6073.261719  340.03500  119.999766       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=199999/800.[0m
[08/29 18:49:41]  --------------------------------------------------------------------------------
[08/29 18:49:41]  Iteration: 38 (2 solution, 35 counterexamples)
[08/29 18:49:42]  Generator returned sat in 0.610046 secs.
[08/29 18:49:42]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/29 18:49:43]  Improved number of small numbers from 54 to 64 out of a max of 99
[08/29 18:49:43]  Verifer returned sat in 0.700278 secs.
[08/29 18:49:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t     wasted_t  arrival_0,t    cwnd_0,t  service_0,t  losts_0,t     queue_t  bottle_queue_t
0   -6581.297119   -6581.299703  1145.389059 -6581.297119    0.096436 -6581.299703    0.00000    0.002584      -99.997416
1   -6481.299703   -6481.299703  1145.389059 -6481.299703  100.000000 -6481.299703    0.00000    0.000000     -100.000000
2   -6281.299703   -6381.297119  1145.389059 -6281.299703  200.000000 -6381.297119    0.00000   99.997416        0.000000
3   -6281.297119   -6281.299703  1145.389059 -6281.297119  100.000000 -6281.299703    0.00000    0.002584      -99.997416
4   -6081.299703   -6141.297203  1145.389059 -6081.299703  200.000000 -6141.297203    0.00000   59.997500        0.000000
5   -5871.295953   -5981.299805  1145.389059 -5871.295953  270.001250 -5981.299805   90.00375   20.000102       20.000000
6   -5871.295953   -5961.302203  1145.389059 -5871.295953    0.010000 -5961.302203   90.00375    0.002500      -80.000000
7   -5711.294703   -5801.300953  1145.389059 -5711.294703  160.003750 -5801.300953   90.00375    0.002500      -19.998750
8   -5461.297203   -5781.299561  1145.389059 -5461.297203  250.000000 -5781.299561  200.00250  119.999857       20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_bq=False, ramp_down_q=False, ramp_down_cwnd=False, loss_count=2, loss_amount=80001/400.[0m
[08/29 18:49:43]  --------------------------------------------------------------------------------
[08/29 18:49:43]  Iteration: 39 (2 solution, 36 counterexamples)
[08/29 18:49:45]  Generator returned unsat in 1.930062 secs.
[08/29 18:49:45]  [96mNo more solutions found[0m
[08/29 18:49:45]  Final solutions:
[08/29 18:49:45]  0: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:45]  1: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/29 18:49:45]  Took 63.838904 secs.
