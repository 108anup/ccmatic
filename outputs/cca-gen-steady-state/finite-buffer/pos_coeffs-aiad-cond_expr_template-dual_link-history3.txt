[11/09 15:14:37]  Ideal: desired_util_f=1, desired_queue_bound_multiplier=0.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=0.5, desired_loss_amount_bound_alpha=3
[11/09 15:14:37]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=1.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=1.5, desired_loss_amount_bound_alpha=3
[11/09 15:14:45]  --------------------------------------------------------------------------------
[11/09 15:14:45]  Iteration: 1 (0 solution, 0 counterexamples)
[11/09 15:14:45]  Generator returned sat in 0.005961 secs.
[11/09 15:14:45]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:14:47]  Improved number of small numbers from 202 to 202 out of a max of 202
[11/09 15:14:47]  Verifer returned sat in 1.850446 secs.
[11/09 15:14:47]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0            -400.59375              -500.625          -400.59375          0.03125          0.03125            -500.625           0.00000  100.03125
1            -400.59375              -400.625          -400.59375          0.03125          0.03125            -400.625           0.00000    0.03125
2            -200.46875              -300.625          -200.46875        200.15625        200.15625            -300.625           0.03125  100.12500
3            -100.40625              -200.625          -100.40625        200.18750        200.18750            -200.625           0.09375  100.12500
4              -0.31250              -100.625            -0.31250        200.21875        200.21875            -100.625           0.18750  100.12500
5              99.81250                -0.625            99.81250        200.25000        200.25000              -0.625           0.31250  100.12500
6             199.96875                99.375           199.96875        200.28125        200.28125              99.375           0.46875  100.12500
7             300.15625               199.375           300.15625        200.31250        200.31250             199.375           0.65625  100.12500
8             400.37500               299.375           400.37500        200.34375        200.34375             299.375           0.87500  100.12500
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=6, loss_amount=25/32, 
, buffer=801/8, alpha=1/32.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0           -95.59375          -99.906250         -95.59375        0.03125        0.03125        -99.906250        0.000000                 -99.906250      99.906250    4.312500         4.31250
1           -95.56250          -99.875000         -95.56250        4.34375        4.34375        -99.875000        0.000000                 -99.875000     199.875000    4.312500         4.31250
2           -95.56250          -99.875000         -95.56250        0.03125        0.03125        -99.875000        0.031250                 -99.906250     395.718750    4.281250       100.12500
3           -95.56250         -195.718750         -95.56250        4.25000        4.25000       -195.718750        1.140625                -196.796875     496.828125   99.015625       100.12500
4           -95.56250         -196.796875         -95.56250        4.25000        4.25000       -196.796875        1.140625                -196.796875     596.796875  100.093750       100.09375
5           -95.56250         -196.796875         -95.56250        4.25000        4.25000       -196.796875        7.500000                -196.828125     703.187500   93.734375       100.12500
6           -95.56250         -203.187500         -95.56250        4.25000        4.25000       -203.187500        7.500000                -203.218750     803.156250  100.125000       100.09375
7           -95.56250         -203.156250         -95.56250        4.25000        4.25000       -203.156250        7.531250                -203.187500     903.218750  100.062500       100.12500
8           -95.56250         -203.187500         -95.56250        4.25000        4.25000       -203.187500        7.531250                -203.187500    1003.187500  100.093750       100.09375
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=409/64, 
, buffer=801/8, alpha=17/4.[0m
[11/09 15:14:55]  --------------------------------------------------------------------------------
[11/09 15:14:55]  Iteration: 2 (0 solution, 1 counterexamples)
[11/09 15:14:56]  Generator returned sat in 0.383584 secs.
[11/09 15:14:56]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:14:58]  Improved number of small numbers from 127 to 202 out of a max of 202
[11/09 15:14:58]  Verifer returned sat in 2.568992 secs.
[11/09 15:14:58]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t       queue_t
0         -34254.469482         -34354.453857       -34254.469482         0.031006         0.031006       -34354.453857          0.000000     99.984375
1         -34254.469482         -34254.469482       -34254.469482         0.031006         0.031006       -34254.469482          0.000000      0.000000
2          33853.608154         -34154.469482        33853.608154     68108.077637     68108.077637       -34154.469482      33554.031006  34454.046631
3          50480.623535         -34054.469482        50480.623535     51081.062012     51081.062012       -34054.469482      50081.046387  34454.046631
4          50480.623535         -33954.469482        50480.623535     34054.046387     34054.046387       -33954.469482      50081.046387  34354.046631
5          50480.623535         -33854.469482        50480.623535     17027.030762     17027.030762       -33854.469482      50081.046387  34254.046631
6          50480.623535         -33754.469482        50480.623535     34054.046387     34054.046387       -33754.469482      50081.046387  34154.046631
7          50480.623535         -33654.469482        50480.623535     17027.030762     17027.030762       -33654.469482      50081.046387  34054.046631
8          50480.623535         -33554.469482        50480.623535     34054.046387     34054.046387       -33554.469482      50081.046387  33954.046631
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=141123775/4096, alpha=1089729/64.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0          -95.562988         -412.547119        -95.562988       0.030762       0.030762       -412.547119             0.0                -412.547119     312.562500  316.984131      217.000000
1          -95.562744         -312.562988        -95.562744     316.984375     316.984375       -312.562988             0.0                -212.547363     312.562500  217.000244      117.000244
2          -95.562744         -163.687012        -95.562744      85.170654      85.170654       -163.687012             0.0                -163.687012     312.562500   68.124268       17.000244
3          -95.547363         -112.562988        -95.547363      68.139648      68.139648       -112.562988             0.0                -112.578125     395.546875   17.015625        0.000000
4          -61.454346          -95.547363        -61.454346      51.108643      51.108643        -95.547363             0.0                 -61.438965     461.453857   34.093018        0.000000
5          -61.454346          -61.454346        -61.454346      34.077637      34.077637        -61.454346             0.0                 -61.454346     561.453857    0.000000        0.000000
6          -44.407715          -44.423340        -44.407715      17.046631      17.046631        -44.423340             0.0                 -44.423340     644.407227    0.015625        0.000000
7          -10.345703          -27.376953        -10.345703      34.077637      34.077637        -27.376953             0.0                 -27.376953     710.345215   17.031250        0.000000
8          -10.330322          -10.330322        -10.330322      17.046631      17.046631        -10.330322             0.0                 -10.330322     810.329834    0.000000        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=141123775/4096, alpha=69759/4096.[0m
[11/09 15:15:06]  --------------------------------------------------------------------------------
[11/09 15:15:06]  Iteration: 3 (0 solution, 2 counterexamples)
[11/09 15:15:07]  Generator returned sat in 0.297052 secs.
[11/09 15:15:07]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:15:12]  Improved number of small numbers from 86 to 145 out of a max of 202
[11/09 15:15:12]  Verifer returned sat in 5.305271 secs.
[11/09 15:15:12]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t        queue_t
0        -809741.414322        -809741.415039      -809741.414322         0.031006         0.031006      -809741.415039          0.000000       0.000717
1        -809741.414322        -809741.414322      -809741.414322         0.000244         0.000244      -809741.414322          0.000000       0.000000
2          32253.593246        -809641.414322        32253.593246    841995.007568    841995.007568      -809641.414322     386848.003311  455047.004257
3         298916.595612        -809541.414322       298916.595612    721710.006622    721710.006622      -809541.414322     653411.005676  455047.004257
4         445294.597031        -809441.414322       445294.597031    601425.005676    601425.005676      -809441.414322     799689.007095  455047.004257
5         471387.597504        -809341.414322       471387.597504    481140.004730    481140.004730      -809341.414322     825682.007568  455047.004257
6         471387.597504        -809241.414322       471387.597504    360855.003784    360855.003784      -809241.414322     825682.007568  454947.004257
7         471387.597504        -809141.414322       471387.597504    240570.002838    240570.002838      -809141.414322     825682.007568  454847.004257
8         471387.597504        -809041.414322       471387.597504    120285.001892    120285.001892      -809041.414322     825682.007568  454747.004257
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=3, loss_amount=2822488095/16384, 
, buffer=29821960471/65536, alpha=3941498911/32768.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         -112.562744         -412.562744       -112.562744       0.030518       0.030518       -412.562744             0.0                -412.562744     312.562500  300.000000      200.000244
1         -112.562744         -312.562988       -112.562744     300.000000     300.000000       -312.562988             0.0                -212.547607     312.562500  200.000244      100.000244
2         -112.562744         -112.569336       -112.562744       0.007568       0.007568       -112.569336             0.0                -112.569336     312.562500    0.006592        0.000244
3         -112.562744         -112.562988       -112.562744       0.006592       0.006592       -112.562988             0.0                -112.578125     412.562012    0.000244       -0.000244
4         -112.557373         -112.562500       -112.557373       0.005615       0.005615       -112.562500             0.0                -112.556885     512.556885    0.005127        0.000000
5         -112.557373         -112.557373       -112.557373       0.004639       0.004639       -112.557373             0.0                -112.557129     612.555420    0.000000       -0.001465
6         -112.553711         -112.555420       -112.553711       0.003662       0.003662       -112.555420             0.0                -112.555420     712.552979    0.001709       -0.000244
7         -112.552734         -112.552979       -112.552734       0.002686       0.002686       -112.552979             0.0                -112.552979     812.551025    0.000244       -0.001221
8         -112.551270         -112.551270       -112.551270       0.001709       0.001709       -112.551270             0.0                -112.551270     812.551270    0.000000      -99.999512
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=29821960471/65536, alpha=1/1024.[0m
[11/09 15:15:20]  --------------------------------------------------------------------------------
[11/09 15:15:20]  Iteration: 4 (0 solution, 3 counterexamples)
[11/09 15:15:23]  Generator returned sat in 2.377975 secs.
[11/09 15:15:23]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:15:35]  Improved number of small numbers from 59 to 79 out of a max of 202
[11/09 15:15:35]  Verifer returned sat in 12.298345 secs.
[11/09 15:15:35]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0        -809821.372559        -809821.376175      -809821.372559         0.031006         0.031006      -809821.376175          0.000000    0.003616
1        -809741.414322        -809741.414322      -809741.414322        79.961853        79.961853      -809741.414322          0.000000    0.000000
2        -809531.406693        -809641.414322      -809531.406693       210.007629       210.007629      -809641.414322          0.000000  110.007629
3        -809421.391434        -809541.414322      -809421.391434       220.022888       220.022888      -809541.414322          0.000000  120.022888
4        -809311.376175        -809441.414322      -809311.376175       230.038147       230.038147      -809441.414322          0.000000  130.038147
5        -809201.360916        -809341.414322      -809201.360916       240.053406       240.053406      -809341.414322          0.003815  140.049591
6        -809111.372360        -809241.414322      -809111.372360       230.038147       230.038147      -809241.414322          0.003815  130.038147
7        -809001.357101        -809141.414322      -809001.357101       240.053406       240.053406      -809141.414322          0.007629  140.049591
8        -808911.368546        -809041.414322      -808911.368546       230.038147       230.038147      -809041.414322          0.007629  130.038147
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=125/16384, 
, buffer=4589145/32768, alpha=82045/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         -352.497803         -352.501678       -352.497803       0.030518       0.030518       -352.501678        0.000000                -352.501678     327.390381    0.003876      -25.106934
1         -352.482605         -327.390869       -352.482605       0.019073       0.019073       -327.390869        0.000000                -352.478760     592.527832  -25.091736      140.045715
2         -342.455902         -342.455902       -342.455902      10.026703      10.026703       -342.455902        0.000000                -342.455902     542.455322    0.000000       -0.000092
3         -327.410126         -327.410126       -327.410126      15.045776      15.045776       -327.410126        0.000000                -327.410126     624.409668    0.000000       -2.999969
4         -317.383423         -324.410156       -317.383423      10.026703      10.026703       -324.410156        2.003815                -324.413818     859.436340    5.022919      140.049591
5         -317.383423         -329.421570       -317.383423       5.019073       5.019073       -329.421570        2.003815                -329.421570     819.379150   10.034332       -0.007599
6         -317.379608         -319.379639       -317.379608      10.038147      10.038147       -319.379639        2.003815                -459.425293    1059.428711   -0.003784      140.045776
7         -302.322388         -459.429199       -302.322388      15.057220      15.057220       -459.429199        2.003815                -444.368408    1144.371582  155.102997      140.045868
8         -302.322388         -444.368164       -302.322388      10.038147      10.038147       -444.368164        2.003815                -444.368164    1101.325928  140.041962       -2.999786
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=65661/32768, 
, buffer=4589145/32768, alpha=164465/32768.[0m
[11/09 15:15:44]  --------------------------------------------------------------------------------
[11/09 15:15:44]  Iteration: 5 (0 solution, 4 counterexamples)
[11/09 15:15:45]  Generator returned sat in 1.079730 secs.
[11/09 15:15:45]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:15:59]  Improved number of small numbers from 103 to 167 out of a max of 202
[11/09 15:15:59]  Verifer returned sat in 14.058501 secs.
[11/09 15:15:59]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0        -809333.280807        -809916.280762      -809333.280807         0.030762         0.030762      -809916.280762               0.0  582.999954
1        -809333.280807        -809816.280762      -809333.280807         0.007812         0.007812      -809816.280762               0.0  482.999954
2        -809333.280807        -809716.280762      -809333.280807        31.954224        31.954224      -809716.280762               0.0  382.999954
3        -809333.280807        -809616.280762      -809333.280807        31.961853        31.961853      -809616.280762               0.0  282.999954
4        -809333.280807        -809516.280762      -809333.280807        31.969482        31.969482      -809516.280762               0.0  182.999954
5        -809333.280807        -809416.280762      -809333.280807        31.977112        31.977112      -809416.280762               0.0   82.999954
6        -809333.280807        -809333.280807      -809333.280807        31.984741        31.984741      -809333.280807               0.0    0.000000
7        -809301.288437        -809301.288437      -809301.288437        31.992371        31.992371      -809301.288437               0.0    0.000000
8        -809269.288437        -809269.288437      -809269.288437        32.000000        32.000000      -809269.288437               0.0    0.000000
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=583, alpha=125/16384.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0         -417.589355         -517.589111       -417.589355       0.030273       0.030273       -517.589111             0.0                -517.589111     417.596191  99.999756        0.007324
1         -417.581543         -417.589355       -417.581543     100.007568     100.007568       -417.589355             0.0                -417.589355     499.573486   0.007812      -18.007568
2         -399.566406         -399.573975       -399.566406      18.022949      18.022949       -399.573975             0.0                -399.558838     599.565674   0.007568       -0.000244
3         -363.489990         -399.558594       -363.489990      36.083984      36.083984       -399.558594             0.0                -399.558594     663.489502  36.068604        0.000000
4         -363.489990         -363.489990       -363.489990      18.061035      18.061035       -363.489990             0.0                -363.497559     763.489502   0.000000        0.000000
5         -327.367920         -363.451904       -327.367920      36.122070      36.122070       -363.451904             0.0                -363.451904     827.367432  36.083984        0.000000
6         -327.367920         -327.367920       -327.367920      18.061035      18.061035       -327.367920             0.0                -327.360596     927.367432   0.000000        0.000000
7         -291.245850         -327.360352       -291.245850      36.122070      36.122070       -327.360352             0.0                -327.360352     991.245361  36.114502        0.000000
8         -291.245850         -291.245850       -291.245850      18.061035      18.061035       -291.245850             0.0                -291.246094    1091.245361   0.000000        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=583, alpha=36989/2048.[0m
[11/09 15:16:07]  --------------------------------------------------------------------------------
[11/09 15:16:07]  Iteration: 6 (0 solution, 5 counterexamples)
[11/09 15:16:09]  Generator returned sat in 1.145826 secs.
[11/09 15:16:09]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:16:18]  Verifer returned unsat in 8.482476 secs.
[11/09 15:16:18]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:16:18]  --------------------------------------------------------------------------------
[11/09 15:16:18]  Iteration: 7 (1 solution, 5 counterexamples)
[11/09 15:16:18]  Generator returned sat in 0.071257 secs.
[11/09 15:16:18]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:16:26]  Verifer returned unsat in 7.865543 secs.
[11/09 15:16:26]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:16:26]  --------------------------------------------------------------------------------
[11/09 15:16:26]  Iteration: 8 (2 solution, 5 counterexamples)
[11/09 15:16:26]  Generator returned sat in 0.202878 secs.
[11/09 15:16:26]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:16:28]  Improved number of small numbers from 115 to 202 out of a max of 202
[11/09 15:16:28]  Verifer returned sat in 1.633740 secs.
[11/09 15:16:28]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0        -809473.114258        -809869.806152      -809473.114258         0.030518         0.030518      -809869.806152          0.000000  396.691895
1        -809373.099365        -809769.806152      -809373.099365       496.706787       496.706787      -809769.806152          0.014893  396.691895
2        -809373.099365        -809669.806152      -809373.099365       185.338379       185.338379      -809669.806152          0.014893  296.691895
3        -809373.099365        -809569.806152      -809373.099365        96.676758        96.676758      -809569.806152          0.014893  196.691895
4        -809373.099365        -809469.806152      -809373.099365        96.676758        96.676758      -809469.806152          0.014893   96.691895
5        -809373.099365        -809373.114258      -809373.099365        96.676758        96.676758      -809373.114258          0.014893    0.000000
6        -809276.422607        -809276.437500      -809276.422607        96.676758        96.676758      -809276.437500          0.014893    0.000000
7        -809179.745850        -809179.760742      -809179.745850        96.676758        96.676758      -809179.760742          0.014893    0.000000
8        -809083.069092        -809083.083984      -809083.069092        96.676758        96.676758      -809083.083984          0.014893    0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=812425/2048, alpha=98997/1024.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0          360.098633          260.499512        360.098633       0.030029       0.030029        260.499512             0.0                 260.499512     419.739502  99.599121       99.598877
1          360.098877          360.083740        360.098877      99.599365      99.599365        360.083740             0.0                 360.083740     419.739502   0.015137       -0.400879
2          409.883301          372.514648        409.883301      49.799561      49.799561        372.514648             0.0                 372.514648     470.355957  37.368652        0.000000
3          409.883301          409.883301        409.883301      37.353516      37.353516        409.883301             0.0                 409.883301     545.494141   0.000000      -24.861816
4          434.790771          434.745117        434.790771      24.907471      24.907471        434.745117             0.0                 434.805908     645.448486   0.045654        0.000000
5          447.206543          434.790771        447.206543      12.461426      12.461426        434.790771             0.0                 447.221436     733.002441  12.415771       -0.030273
6          447.236816          447.236816        447.236816      12.446045      12.446045        447.236816             0.0                 447.221680     833.002441   0.000000        0.000000
7          459.682861          447.251953        459.682861      12.446045      12.446045        447.251953             0.0                 447.251953     920.556396  12.430908        0.000000
8          459.697998          459.697998        459.697998      12.446045      12.446045        459.697998             0.0                 459.697998     920.556396   0.000000      -99.984863
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=812425/2048, alpha=50979/4096.[0m
[11/09 15:16:36]  --------------------------------------------------------------------------------
[11/09 15:16:36]  Iteration: 9 (2 solution, 6 counterexamples)
[11/09 15:16:37]  Generator returned sat in 0.581997 secs.
[11/09 15:16:37]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:16:38]  Improved number of small numbers from 181 to 202 out of a max of 202
[11/09 15:16:38]  Verifer returned sat in 0.668272 secs.
[11/09 15:16:38]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0        -809473.114502        -809869.806152      -809473.114502         0.030518         0.030518      -809869.806152          0.000000  396.691650
1        -809373.099365        -809769.806152      -809373.099365       496.706787       496.706787      -809769.806152          0.014893  396.691895
2        -809373.099365        -809669.806152      -809373.099365         0.001709         0.001709      -809669.806152          0.014893  296.691895
3        -809373.099365        -809569.806152      -809373.099365        96.676758        96.676758      -809569.806152          0.014893  196.691895
4        -809373.099365        -809469.806152      -809373.099365        96.676758        96.676758      -809469.806152          0.014893   96.691895
5        -809373.099365        -809373.114258      -809373.099365        96.676758        96.676758      -809373.114258          0.014893    0.000000
6        -809276.422607        -809276.437500      -809276.422607        96.676758        96.676758      -809276.437500          0.014893    0.000000
7        -809179.745850        -809179.760742      -809179.745850        96.676758        96.676758      -809179.760742          0.014893    0.000000
8        -809083.069092        -809083.083984      -809083.069092        96.676758        96.676758      -809083.083984          0.014893    0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=812425/2048, alpha=98997/1024.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0          360.098633          272.936768        360.098633       0.029785       0.029785        272.936768             0.0                 272.936768     407.302246  87.161865       87.161865
1          360.098877          360.089600        360.098877      87.162109      87.162109        360.089600             0.0                 360.089600     407.726318   0.009277      -12.413818
2          409.886230          372.514648        409.886230      49.796631      49.796631        372.514648             0.0                 372.514648     470.352783  37.371582        0.000000
3          409.886230          409.886230        409.886230      37.350586      37.350586        409.886230             0.0                 409.886328     545.493896   0.000000      -24.858887
4          434.790771          434.745117        434.790771      24.904541      24.904541        434.745117             0.0                 434.805664     645.448242   0.045654        0.000000
5          447.203613          434.790771        447.203613      12.458496      12.458496        434.790771             0.0                 447.221191     733.002441  12.412842       -0.032959
6          447.236816          447.236572        447.236816      12.446045      12.446045        447.236572             0.0                 447.221680     833.002197   0.000244        0.000000
7          459.682617          447.251709        459.682617      12.446045      12.446045        447.251709             0.0                 447.251709     920.556396  12.430908        0.000000
8          459.697754          459.697754        459.697754      12.446045      12.446045        459.697754             0.0                 459.697754     920.556396   0.000000      -99.984863
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=812425/2048, alpha=50979/4096.[0m
[11/09 15:16:46]  --------------------------------------------------------------------------------
[11/09 15:16:46]  Iteration: 10 (2 solution, 7 counterexamples)
[11/09 15:16:48]  Generator returned sat in 0.986346 secs.
[11/09 15:16:48]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:16:49]  Improved number of small numbers from 165 to 202 out of a max of 202
[11/09 15:16:49]  Verifer returned sat in 0.623773 secs.
[11/09 15:16:49]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0        -809473.114746        -809869.806152      -809473.114746         0.030273         0.030273      -809869.806152          0.000000  396.691406
1        -809373.099609        -809769.806152      -809373.099609       496.706543       496.706543      -809769.806152          0.014893  396.691650
2        -809373.099609        -809669.806152      -809373.099609         0.001709         0.001709      -809669.806152          0.014893  296.691650
3        -809373.099609        -809569.806152      -809373.099609        96.676758        96.676758      -809569.806152          0.014893  196.691650
4        -809373.099609        -809469.806152      -809373.099609        96.676758        96.676758      -809469.806152          0.014893   96.691650
5        -809373.099609        -809373.114502      -809373.099609        96.676758        96.676758      -809373.114502          0.014893    0.000000
6        -809276.422852        -809276.437744      -809276.422852        96.676758        96.676758      -809276.437744          0.014893    0.000000
7        -809179.746094        -809179.760986      -809179.746094        96.676758        96.676758      -809179.760986          0.014893    0.000000
8        -809083.069336        -809083.084229      -809083.069336        96.676758        96.676758      -809083.084229          0.014893    0.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=1624849/4096, alpha=98997/1024.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0          360.098389          282.946777        360.098389       0.029541       0.029541        282.946777             0.0                 282.946777     397.291992  77.151611       77.151611
1          360.098633          360.068848        360.098633      77.151855      77.151855        360.068848             0.0                 360.068848     407.726074   0.029785      -12.414062
2          412.298828          372.514404        412.298828      52.229980      52.229980        372.514404             0.0                 372.514404     467.939941  39.784424        0.000000
3          412.298828          412.298828        412.298828      39.783936      39.783936        412.298828             0.0                 412.299072     555.493896   0.000000      -12.446045
4          439.636719          424.744873        439.636719      27.337891      27.337891        424.744873             0.0                 439.636963     640.602051  14.891846        0.000000
5          439.636719          439.636719        439.636719      14.891846      14.891846        439.636719             0.0                 439.637207     728.156250   0.000000      -12.445801
6          452.082764          452.082520        452.082764      12.446045      12.446045        452.082520             0.0                 447.221436     828.156006   0.000244        0.000000
7          464.528564          452.083008        464.528564      12.446045      12.446045        452.083008             0.0                 452.083008     915.710205  12.445557        0.000000
8          464.529053          464.529053        464.529053      12.446045      12.446045        464.529053             0.0                 464.529053     915.710205   0.000000      -99.999512
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=1624849/4096, alpha=50979/4096.[0m
[11/09 15:16:57]  --------------------------------------------------------------------------------
[11/09 15:16:57]  Iteration: 11 (2 solution, 8 counterexamples)
[11/09 15:16:59]  Generator returned sat in 1.785504 secs.
[11/09 15:16:59]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:17:02]  Improved number of small numbers from 81 to 202 out of a max of 202
[11/09 15:17:02]  Verifer returned sat in 2.710915 secs.
[11/09 15:17:02]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0        -810083.334717        -810083.342041      -810083.334717         0.030273         0.030273      -810083.342041               0.0    0.007324
1        -809236.418213        -809983.342041      -809236.418213       846.923828       846.923828      -809983.342041               0.0  746.923828
2        -809236.418213        -809883.342041      -809236.418213         0.007324         0.007324      -809883.342041               0.0  646.923828
3        -809236.418213        -809783.342041      -809236.418213        36.734619        36.734619      -809783.342041               0.0  546.923828
4        -809236.418213        -809683.342041      -809236.418213        73.461914        73.461914      -809683.342041               0.0  446.923828
5        -809236.418213        -809583.342041      -809236.418213       110.189209       110.189209      -809583.342041               0.0  346.923828
6        -809236.418213        -809483.342041      -809236.418213       146.916504       146.916504      -809483.342041               0.0  246.923828
7        -809236.418213        -809383.342041      -809236.418213       110.189209       110.189209      -809383.342041               0.0  146.923828
8        -809236.418213        -809283.342041      -809236.418213       146.916504       146.916504      -809283.342041               0.0   46.923828
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=1529715/2048, alpha=150435/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0          146.603516          146.603516        146.603516       0.029297       0.029297        146.603516             0.0                 146.603516     513.650146   0.000000      -19.985107
1          336.622070          246.603271        336.622070     190.018555     190.018555        246.603271             0.0                 246.603271     513.650146  90.018799       70.033447
2          336.622070          266.595947        336.622070      90.011230      90.011230        266.595947             0.0                 266.595947     543.616699  70.026123        0.000000
3          336.622070          336.622070        336.622070      70.018555      70.018555        336.622070             0.0                 336.629395     643.616699   0.000000        0.000000
4          386.647949          366.610840        386.647949      50.025879      50.025879        366.610840             0.0                 366.610840     643.616943  20.037109      -49.973877
5          436.629395          436.621826        436.629395      70.018555      70.018555        436.621826             0.0                 436.621826     740.609375   0.007568       -3.000000
6          486.647705          439.636475        486.647705      50.025879      50.025879        439.636475             0.0                 439.636475     793.591064  47.011230        0.000000
7          486.647705          486.647705        486.647705      30.033203      30.033203        486.647705             0.0                 486.647705     873.605713   0.000000      -19.985352
8          506.640381          506.640381        506.640381      19.992676      19.992676        506.640381             0.0                 506.640381     973.598145   0.000000       -0.000244
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=1529715/2048, alpha=40945/2048.[0m
[11/09 15:17:10]  --------------------------------------------------------------------------------
[11/09 15:17:10]  Iteration: 12 (2 solution, 9 counterexamples)
[11/09 15:17:13]  Generator returned sat in 2.260035 secs.
[11/09 15:17:13]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:17:16]  Improved number of small numbers from 202 to 202 out of a max of 202
[11/09 15:17:16]  Verifer returned sat in 3.117146 secs.
[11/09 15:17:16]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0        -810213.359619        -810230.359619      -810213.359619         0.030273         0.030273      -810230.359619          0.000000     17.0
1        -810113.352295        -810130.359619      -810113.352295       117.007324       117.007324      -810130.359619          0.007324     17.0
2        -809971.388916        -810030.359619      -809971.388916       158.963379       158.963379      -810030.359619         41.970703     17.0
3        -809836.418213        -809930.359619      -809836.418213       151.970703       151.970703      -809930.359619         76.941406     17.0
4        -809708.440186        -809830.359619      -809708.440186       144.978027       144.978027      -809830.359619        104.919434     17.0
5        -809587.454834        -809730.359619      -809587.454834       137.985352       137.985352      -809730.359619        125.904785     17.0
6        -809473.462158        -809630.359619      -809473.462158       130.992676       130.992676      -809630.359619        139.897461     17.0
7        -809366.462158        -809530.359619      -809366.462158       124.000000       124.000000      -809530.359619        146.897461     17.0
8        -809266.454834        -809430.359619      -809266.454834       117.007324       117.007324      -809430.359619        146.904785     17.0
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=6, loss_amount=143285/2048, 
, buffer=17, alpha=14321/2048.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0          285.534180          285.534180        285.534180       0.029297       0.029297        285.534180             0.0                 285.534180     377.726562   0.000000      -16.978027
1          336.468262          302.512207        336.468262      50.934082      50.934082        302.512207             0.0                 302.512207     443.770508  33.956055        0.000000
2          336.468262          336.468262        336.468262      33.948730      33.948730        336.468262             0.0                 336.468262     543.770508   0.000000        0.000000
3          353.460938          336.490234        353.460938      16.992676      16.992676        336.490234             0.0                 336.490234     626.777832  16.970703        0.000000
4          353.482910          353.468262        353.482910      16.992676      16.992676        353.468262             0.0                 353.468262     709.785156   0.014648      -16.970703
5          370.460938          370.453613        370.460938      16.992676      16.992676        370.453613             0.0                 387.446289     792.799805   0.007324      -16.978027
6          387.446289          387.438965        387.446289      16.992676      16.992676        387.438965             0.0                 387.431641     875.821777   0.007324      -16.970703
7          404.431641          404.416992        404.431641      16.992676      16.992676        404.416992             0.0                 404.416992     975.807129   0.014648        0.000000
8          421.409668          404.438965        421.409668      16.992676      16.992676        404.438965             0.0                 404.438965    1058.829102  16.970703        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=17, alpha=34801/2048.[0m
[11/09 15:17:25]  --------------------------------------------------------------------------------
[11/09 15:17:25]  Iteration: 13 (2 solution, 10 counterexamples)
[11/09 15:17:28]  Generator returned sat in 2.458029 secs.
[11/09 15:17:28]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:17:31]  Improved number of small numbers from 88 to 202 out of a max of 202
[11/09 15:17:31]  Verifer returned sat in 2.732889 secs.
[11/09 15:17:31]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t        queue_t
0        -810063.874756         -1.804036e+06      -810063.874756         0.030029         0.030029       -1.804036e+06               0.0  993972.181641
1        -809963.882080         -1.803936e+06      -809963.882080    994072.174316    994072.174316       -1.803936e+06               0.0  993972.174316
2        -809963.882080         -1.803836e+06      -809963.882080    993972.166992    993972.166992       -1.803836e+06               0.0  993872.174316
3        -809963.882080         -1.803736e+06      -809963.882080    813268.137939    813268.137939       -1.803736e+06               0.0  993772.174316
4        -809963.882080         -1.803636e+06      -809963.882080    632564.108887    632564.108887       -1.803636e+06               0.0  993672.174316
5        -809963.882080         -1.803536e+06      -809963.882080    451860.079834    451860.079834       -1.803536e+06               0.0  993572.174316
6        -809963.882080         -1.803436e+06      -809963.882080    271156.050781    271156.050781       -1.803436e+06               0.0  993472.174316
7        -809963.882080         -1.803336e+06      -809963.882080    180704.029053    180704.029053       -1.803336e+06               0.0  993372.174316
8        -809963.882080         -1.803236e+06      -809963.882080    361408.058105    361408.058105       -1.803236e+06               0.0  993272.174316
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=508913757/512, alpha=740163703/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0          -67.436768          -67.437012        -67.436768       0.029053       0.029053        -67.437012             0.0                 -67.437012     747.675293    0.000244        0.000000
1          149.211914           32.562988        149.211914     216.648926     216.648926         32.562988             0.0                  32.562988     747.675293  116.648926      116.648682
2          149.211914           65.895264        149.211914      99.965088      99.965088         65.895264             0.0                  65.895264     747.675293   83.316650       16.648682
3          149.211914          132.570312        149.211914      83.309082      83.309082        132.570312             0.0                 132.570312     831.026611   16.641602        0.000000
4          199.223389          149.219238        199.223389      66.653076      66.653076        149.219238             0.0                 149.219238     881.015137   50.004150        0.000000
5          199.223389          199.223389        199.223389      49.997070      49.997070        199.223389             0.0                 199.223389     947.674072    0.000000      -33.341064
6          265.876465          232.571777        265.876465      66.653076      66.653076        232.571777             0.0                 232.571777    1014.361816   33.304688       -0.000244
7          315.880859          265.876709        315.880859      83.309082      83.309082        265.876709             0.0                 265.876709    1064.357422   50.004150       -0.000244
8          332.529785          315.888184        332.529785      66.653076      66.653076        315.888184             0.0                 315.888184    1064.357666   16.641602      -83.351074
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=508913757/512, alpha=68223/4096.[0m
[11/09 15:17:39]  --------------------------------------------------------------------------------
[11/09 15:17:39]  Iteration: 14 (2 solution, 11 counterexamples)
[11/09 15:17:41]  Generator returned sat in 1.492532 secs.
[11/09 15:17:41]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:17:53]  Improved number of small numbers from 36 to 55 out of a max of 202
[11/09 15:17:53]  Verifer returned sat in 12.005870 secs.
[11/09 15:17:53]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0         -1.351526e+06         -1.442578e+06       -1.351526e+06         0.030029         0.030029       -1.442578e+06      91052.021790   0.007477
1         -1.351526e+06         -1.442578e+06       -1.351526e+06         0.007080         0.007080       -1.442578e+06      91052.021790   0.000000
2         -1.351459e+06         -1.442511e+06       -1.351459e+06        66.586772        66.586772       -1.442511e+06      91052.021790   0.000000
3         -1.351376e+06         -1.442428e+06       -1.351376e+06        83.300649        83.300649       -1.442428e+06      91052.021790   0.000000
4         -1.351276e+06         -1.442328e+06       -1.351276e+06       100.014526       100.014526       -1.442328e+06      91052.021790   0.014526
5         -1.351159e+06         -1.442228e+06       -1.351159e+06       116.728404       116.728404       -1.442228e+06      91052.029053  16.721141
6         -1.351043e+06         -1.442128e+06       -1.351043e+06       133.442281       133.442281       -1.442128e+06      91068.750193  16.721141
7         -1.350943e+06         -1.442028e+06       -1.350943e+06       116.728404       116.728404       -1.442028e+06      91068.757456  16.721141
8         -1.350826e+06         -1.441928e+06       -1.350826e+06       133.442281       133.442281       -1.441928e+06      91085.478597  16.721141
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=1644469/49152, 
, buffer=1643755/98304, alpha=1643041/98304.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0          631.848389          631.841006        631.848389       0.028809       0.028809        631.841006        0.000000                 631.841006     522.671544    0.007383       -0.014407
1          631.855532          631.862796        631.855532       0.014526       0.014526        631.862796        0.000000                 631.869873     622.671544   -0.007263       -0.007263
2          748.591199          631.862796        748.591199     116.735667     116.735667        631.862796        0.007263                 731.869873     622.671544  116.721141       16.721141
3          748.591199          731.862796        748.591199     100.058105     100.058105        731.862796       58.364202                 731.855713     781.028483  -41.635798       16.721141
4          831.971743          706.897461        831.971743      83.380544      83.380544        706.897461       58.364202                 706.897461     797.640869   66.710080       16.714071
5          831.971743          756.900927        831.971743      66.702983      66.702983        756.900927       58.364202                 756.900927     897.633413   16.706614       16.706614
6          865.290550          756.900927        865.290550      50.025421      50.025421        756.900927      108.396886                 756.908203    1014.361816   -0.007263       16.721141
7          898.638410          740.179932        898.638410      33.347860      33.347860        740.179932      108.396886                 740.179932    1081.013957   50.061592       16.721141
8          898.638410          773.520383        898.638410      16.677561      16.677561        773.520383      108.396886                 773.512939    1081.014160   16.721141      -83.278656
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=1639471/32768, 
, buffer=1643755/98304, alpha=1639471/98304.[0m
[11/09 15:18:02]  --------------------------------------------------------------------------------
[11/09 15:18:02]  Iteration: 15 (2 solution, 12 counterexamples)
[11/09 15:18:05]  Generator returned sat in 2.010835 secs.
[11/09 15:18:05]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:18:09]  Improved number of small numbers from 82 to 202 out of a max of 202
[11/09 15:18:09]  Verifer returned sat in 3.929296 secs.
[11/09 15:18:09]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t        queue_t
0         -1.351526e+06         -1.442678e+06       -1.351526e+06         0.030029         0.030029       -1.442678e+06      91052.043213      99.992920
1         -1.351526e+06         -1.442578e+06       -1.351526e+06       100.000000       100.000000       -1.442578e+06      91052.043213       0.000000
2         -1.114273e+06         -1.442478e+06       -1.114273e+06    237253.107910    237253.107910       -1.442478e+06     124931.064941  203274.086182
3         -1.114173e+06         -1.442378e+06       -1.114173e+06    203374.093506    203374.093506       -1.442378e+06     124931.072266  203274.086182
4         -1.114173e+06         -1.442278e+06       -1.114173e+06    169495.079102    169495.079102       -1.442278e+06     124931.072266  203174.086182
5         -1.114173e+06         -1.442178e+06       -1.114173e+06    135616.064697    135616.064697       -1.442178e+06     124931.072266  203074.086182
6         -1.114173e+06         -1.442078e+06       -1.114173e+06    101737.050293    101737.050293       -1.442078e+06     124931.072266  202974.086182
7         -1.114173e+06         -1.441978e+06       -1.114173e+06     67858.035889     67858.035889       -1.441978e+06     124931.072266  202874.086182
8         -1.114173e+06         -1.441878e+06       -1.114173e+06     33979.021484     33979.021484       -1.441878e+06     124931.072266  202774.086182
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=832610657/4096, alpha=138768443/4096.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0          752.436035          349.165771        752.436035       0.028564       0.028564        349.165771             0.0                 349.165771     781.028320  403.270264      303.277588
1          752.436035          514.085205        752.436035     403.270264     403.270264        514.085205             0.0                 514.085205     781.028320  238.350830      203.277588
2          752.436035          648.158447        752.436035      89.379639      89.379639        648.158447             0.0                 648.158447     781.028320  104.277588      103.277588
3          752.436035          663.048828        752.436035     104.270264     104.270264        663.048828             0.0                 663.048828     781.028320   89.387207        3.277588
4          752.436035          749.165771        752.436035      89.379639      89.379639        749.165771             0.0                 749.165771     877.750732    3.270264        0.000000
5          823.654785          752.436035        823.654785      74.489014      74.489014        752.436035             0.0                 823.662109     906.531982   71.218750        0.000000
6          823.654785          823.654785        823.654785      59.598389      59.598389        823.654785             0.0                 823.654541    1006.531982    0.000000        0.000000
7          898.143799          841.852051        898.143799      74.489014      74.489014        841.852051             0.0                 841.852051    1032.042969   56.291748        0.000000
8          931.231689          898.151123        931.231689      89.379639      89.379639        898.151123             0.0                 898.151123    1098.955078   33.080566        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=832610657/4096, alpha=953/64.[0m
[11/09 15:18:17]  --------------------------------------------------------------------------------
[11/09 15:18:17]  Iteration: 16 (2 solution, 13 counterexamples)
[11/09 15:18:21]  Generator returned sat in 2.940672 secs.
[11/09 15:18:21]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:18:33]  Verifer returned unsat in 11.723576 secs.
[11/09 15:18:33]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:18:33]  --------------------------------------------------------------------------------
[11/09 15:18:33]  Iteration: 17 (3 solution, 13 counterexamples)
[11/09 15:18:34]  Generator returned sat in 0.271484 secs.
[11/09 15:18:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:18:43]  Verifer returned unsat in 8.606880 secs.
[11/09 15:18:43]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:18:43]  --------------------------------------------------------------------------------
[11/09 15:18:43]  Iteration: 18 (4 solution, 13 counterexamples)
[11/09 15:18:44]  Generator returned sat in 0.334936 secs.
[11/09 15:18:44]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:19:01]  Improved number of small numbers from 65 to 83 out of a max of 202
[11/09 15:19:01]  Verifer returned sat in 17.254158 secs.
[11/09 15:19:01]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0         -1.351088e+06         -1.442159e+06       -1.351088e+06         0.030029         0.030029       -1.442159e+06      91052.036072  19.510498
1         -1.350988e+06         -1.442059e+06       -1.350988e+06       119.517853       119.517853       -1.442059e+06      91052.043213  19.510712
2         -1.350946e+06         -1.441998e+06       -1.350946e+06        60.985718        60.985718       -1.441998e+06      91052.043213   0.000000
3         -1.350866e+06         -1.441918e+06       -1.350866e+06        80.489288        80.489288       -1.441918e+06      91052.043213   0.000000
4         -1.350766e+06         -1.441818e+06       -1.350766e+06        99.992859        99.992859       -1.441818e+06      91052.043213   0.000000
5         -1.350646e+06         -1.441718e+06       -1.350646e+06       119.496429       119.496429       -1.441718e+06      91052.043213  19.496429
6         -1.350527e+06         -1.441618e+06       -1.350527e+06       139.000000       139.000000       -1.441618e+06      91071.532501  19.510712
7         -1.350427e+06         -1.441518e+06       -1.350427e+06       119.496429       119.496429       -1.441518e+06      91071.532501  19.496429
8         -1.350307e+06         -1.441418e+06       -1.350307e+06       139.000000       139.000000       -1.441418e+06      91091.021790  19.510712
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=638625/16384, 
, buffer=639327/32768, alpha=639093/32768.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0          716.053223          616.052979        716.053223       0.028564       0.028564        616.052979        0.000000                 616.046143    1129.254395  100.000244        0.000244
1          716.053223          716.053070        716.053223     100.000000     100.000000        716.053070        0.000000                 716.053070    1227.232666    0.000153       -2.021484
2          837.578064          718.074707        837.578064     121.524994     121.524994        718.074707        0.000000                 718.067383    1227.232666  119.503357       19.503357
3          837.578064          837.570923        837.578064     108.532135     108.532135        837.570923        0.000000                 837.570923    1307.729309    0.007141        0.000000
4          959.095917          937.578064        959.095917     121.524994     121.524994        937.578064        2.007141                 937.578064    1307.729309   19.510712       19.510712
5         1074.103058         1035.570923       1074.103058     134.517853     134.517853       1035.570923       17.014282                1035.570923    1307.729309   21.517853       19.510712
6         1174.110199         1037.585205       1174.110199     121.524994     121.524994       1037.585205       17.021423                1037.585205    1307.729309  119.503571       19.510712
7         1174.110199         1155.081635       1174.110199     108.532135     108.532135       1155.081635       17.021423                1155.081635    1388.218597    2.007141        0.000000
8         1293.628052         1257.088623       1293.628052     121.524994     121.524994       1257.088623       17.028564                1257.088623    1388.218597   19.510864       19.510712
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=69749/4096, 
, buffer=639327/32768, alpha=212875/16384.[0m
[11/09 15:19:09]  --------------------------------------------------------------------------------
[11/09 15:19:09]  Iteration: 19 (4 solution, 14 counterexamples)
[11/09 15:19:14]  Generator returned sat in 3.369445 secs.
[11/09 15:19:14]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:19:24]  Verifer returned unsat in 10.304631 secs.
[11/09 15:19:24]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:19:24]  --------------------------------------------------------------------------------
[11/09 15:19:24]  Iteration: 20 (5 solution, 14 counterexamples)
[11/09 15:19:26]  Generator returned sat in 0.466240 secs.
[11/09 15:19:26]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:19:37]  Improved number of small numbers from 57 to 157 out of a max of 202
[11/09 15:19:37]  Verifer returned sat in 10.836380 secs.
[11/09 15:19:37]  Counter example: 
[93mIdeal--------------------------------
   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0         -1.350827e+06         -1.442291e+06       -1.350827e+06         0.029785         0.029785       -1.442291e+06      90671.418213  792.550049
1         -1.350727e+06         -1.442191e+06       -1.350727e+06       892.535645       892.535645       -1.442191e+06      90671.418213  792.535645
2         -1.350727e+06         -1.442091e+06       -1.350727e+06       282.435730       282.435730       -1.442091e+06      90671.418213  692.535645
3         -1.350727e+06         -1.441991e+06       -1.350727e+06       267.450012       267.450012       -1.441991e+06      90671.418213  592.535645
4         -1.350727e+06         -1.441891e+06       -1.350727e+06       252.464294       252.464294       -1.441891e+06      90671.418213  492.535645
5         -1.350727e+06         -1.441791e+06       -1.350727e+06       237.478577       237.478577       -1.441791e+06      90671.418213  392.535645
6         -1.350727e+06         -1.441691e+06       -1.350727e+06       222.492859       222.492859       -1.441691e+06      90671.418213  292.535645
7         -1.350727e+06         -1.441591e+06       -1.350727e+06       207.507141       207.507141       -1.441591e+06      90671.418213  192.535645
8         -1.350727e+06         -1.441491e+06       -1.350727e+06       192.521423       192.521423       -1.441491e+06      90671.418213   92.535645
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=3246285/4096, alpha=122763/8192.
Adversarial--------------------------
   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0          584.417480          484.431549        584.417480       0.028564       0.028564        484.431549             0.0                 584.431641    1260.875824  99.985931       -0.014069
1          584.431549          584.431549        584.431549     100.000000     100.000000        584.431549             0.0                 584.445801    1356.940094   0.000000       -3.935730
2          588.367279          588.367279        588.367279       3.935730       3.935730        588.367279             0.0                 588.381348    1456.939941   0.000000       -0.000153
3          600.288727          592.345856        600.288727      11.921448      11.921448        592.345856             0.0                 592.345856    1545.018555   7.942871       -0.000092
4          600.331573          600.288818        600.331573       7.985718       7.985718        600.288818             0.0                 604.310059    1641.011475   0.042755       -3.964325
5          616.260254          604.310303        616.260254      15.971436      15.971436        604.310303             0.0                 604.310303    1729.047119  11.949951        0.000000
6          616.260254          616.260254        616.260254       7.985718       7.985718        616.260254             0.0                 616.274658    1829.047119   0.000000        0.000000
7          632.231689          616.274658        632.231689      15.971436      15.971436        616.274658             0.0                 616.274658    1913.075684  15.957031        0.000000
8          632.231689          632.231689        632.231689       7.985718       7.985718        632.231689             0.0                 632.231445    1913.075928   0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=3246285/4096, alpha=65419/8192.[0m
[11/09 15:19:45]  --------------------------------------------------------------------------------
[11/09 15:19:45]  Iteration: 21 (5 solution, 15 counterexamples)
[11/09 15:19:48]  Generator returned sat in 2.335231 secs.
[11/09 15:19:48]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:01]  Verifer returned unsat in 12.211596 secs.
[11/09 15:20:01]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:01]  --------------------------------------------------------------------------------
[11/09 15:20:01]  Iteration: 22 (6 solution, 15 counterexamples)
[11/09 15:20:03]  Generator returned sat in 0.861993 secs.
[11/09 15:20:03]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:14]  Verifer returned unsat in 11.543380 secs.
[11/09 15:20:14]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:14]  --------------------------------------------------------------------------------
[11/09 15:20:14]  Iteration: 23 (7 solution, 15 counterexamples)
[11/09 15:20:16]  Generator returned sat in 0.336627 secs.
[11/09 15:20:16]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:26]  Verifer returned unsat in 10.428417 secs.
[11/09 15:20:26]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:26]  --------------------------------------------------------------------------------
[11/09 15:20:26]  Iteration: 24 (8 solution, 15 counterexamples)
[11/09 15:20:27]  Generator returned unsat in 0.018236 secs.
[11/09 15:20:27]  [96mNo more solutions found[0m
[11/09 15:20:27]  Final solutions:
[11/09 15:20:27]  0: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:27]  1: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:27]  2: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:27]  3: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:27]  4: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:27]  5: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:27]  6: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:27]  7: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 15:20:27]  Took 350.567954 secs.
