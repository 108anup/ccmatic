[11/09 17:17:07]  Ideal: desired_util_f=1, desired_queue_bound_multiplier=0.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=0.5, desired_loss_amount_bound_alpha=3
[11/09 17:17:07]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=1.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=1.5, desired_loss_amount_bound_alpha=3
[11/09 17:17:15]  --------------------------------------------------------------------------------
[11/09 17:17:15]  Iteration: 1 (0 solution, 0 counterexamples)
[11/09 17:17:15]  Generator returned sat in 0.006430 secs.
[11/09 17:17:15]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 17:17:17]  Improved number of small numbers from 57 to 59 out of a max of 101
[11/09 17:17:17]  Verifer returned sat in 1.881201 secs.
[11/09 17:17:17]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           -200.693359           -200.703387         -200.693359         0.010010         0.010010         -200.703387          0.000000    0.010028
1           -200.682962           -200.682962         -200.682962         0.020425         0.020425         -200.682962          0.000000    0.000000
2           -200.672750           -200.672750         -200.672750         0.010212         0.010212         -200.672750          0.000000    0.000000
3           -200.224391           -200.224391         -200.224391         0.448359         0.448359         -200.224391          0.000000    0.000000
4           -198.028554           -198.028554         -198.028554         2.195837         2.195837         -198.028554          0.000000    0.000000
5           -187.966509           -187.966509         -187.966509        10.062045        10.062045         -187.966509          0.000000    0.000000
6           -142.944678           -142.944678         -142.944678        45.021831        45.021831         -142.944678          0.000000    0.000000
7             57.648714            -42.944678           57.648714       200.593392       200.593392          -42.944678          0.010212  100.583179
8            648.677958             57.055322          648.677958       691.612424       691.612424           57.055322        491.039457  100.583179
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=6110495/12444, 
, alpha=3565/18666, buf_size=15019885/149328.[0m
[11/09 17:17:21]  --------------------------------------------------------------------------------
[11/09 17:17:21]  Iteration: 2 (0 solution, 1 counterexamples)
[11/09 17:17:23]  Generator returned sat in 2.218886 secs.
[11/09 17:17:23]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
[0m
[11/09 17:17:26]  Improved number of small numbers from 44 to 46 out of a max of 101
[11/09 17:17:26]  Verifer returned sat in 2.257822 secs.
[11/09 17:17:26]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           -248.494973           -248.496224         -248.494973         0.009766         0.009766         -248.496224          0.000000    0.001251
1           -248.494973           -248.494973         -248.494973         0.001221         0.001221         -248.494973          0.000000    0.000000
2           -246.389374           -246.389374         -246.389374         2.105599         2.105599         -246.389374          0.000000    0.000000
3           -241.125377           -241.125377         -241.125377         5.263998         5.263998         -241.125377          0.000000    0.000000
4           -226.388060           -226.388060         -226.388060        14.737316        14.737316         -226.388060          0.000000    0.000000
5           -187.966509           -187.966509         -187.966509        38.421551        38.421551         -187.966509          0.000000    0.000000
6            -87.966509            -87.966509          -87.966509       100.000000       100.000000          -87.966509          0.000000    0.000000
7            170.716741             12.033491          170.716741       258.683250       258.683250           12.033491         52.376463  106.306787
8            423.093203            112.033491          423.093203       358.683250       358.683250          112.033491        204.752925  106.306787
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=5099101329/24903680, 
, alpha=13085921/6225920, buf_size=661857553/6225920.[0m
[11/09 17:17:30]  --------------------------------------------------------------------------------
[11/09 17:17:30]  Iteration: 3 (0 solution, 2 counterexamples)
[11/09 17:17:32]  Generator returned sat in 1.938839 secs.
[11/09 17:17:32]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 17:17:33]  Improved number of small numbers from 57 to 59 out of a max of 101
[11/09 17:17:33]  Verifer returned sat in 1.470656 secs.
[11/09 17:17:33]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           -946.419678           -946.422333         -946.419678         0.009766         0.009766         -946.422333               0.0    0.002655
1           -946.417450           -946.417450         -946.417450         0.004883         0.004883         -946.417450               0.0    0.000000
2           -846.415009           -846.417450         -846.415009       100.002441       100.002441         -846.417450               0.0    0.002441
3           -746.413788           -746.417450         -746.413788       100.003662       100.003662         -746.417450               0.0    0.003662
4           -278.428436           -646.417450         -278.428436       467.989014       467.989014         -646.417450               0.0  367.989014
5           -278.428436           -546.417450         -278.428436       333.994507       333.994507         -546.417450               0.0  267.989014
6           -278.428436           -446.417450         -278.428436       266.997253       266.997253         -446.417450               0.0  167.989014
7           -212.918823           -346.417450         -212.918823       233.498627       233.498627         -346.417450               0.0  133.498627
8           -129.668137           -246.417450         -129.668137       216.749313       216.749313         -246.417450               0.0  116.749313
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, alpha=32783/2048, buf_size=376823/1024.[0m
[11/09 17:17:37]  --------------------------------------------------------------------------------
[11/09 17:17:37]  Iteration: 4 (0 solution, 3 counterexamples)
[11/09 17:17:45]  Generator returned sat in 7.529150 secs.
[11/09 17:17:45]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:17:49]  Improved number of small numbers from 45 to 47 out of a max of 101
[11/09 17:17:49]  Verifer returned sat in 4.039206 secs.
[11/09 17:17:49]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -2042.743652          -2109.405243        -2042.743652         0.009766         0.009766        -2109.405243          0.000000  66.661591
1          -2026.076182          -2026.076182        -2026.076182        83.329061        83.329061        -2026.076182          0.000000   0.000000
2          -2026.073741          -2026.073741        -2026.073741         0.002441         0.002441        -2026.073741          0.000000   0.000000
3          -1859.409515          -1926.073741        -1859.409515       166.664225       166.664225        -1926.073741          0.002441  66.661784
4          -1792.742849          -1826.073741        -1792.742849       133.328451       133.328451        -1826.073741          0.002441  33.328451
5          -1659.411957          -1726.073741        -1659.411957       166.659342       166.659342        -1726.073741          0.002441  66.659342
6          -1542.746511          -1626.073741        -1542.746511       183.324788       183.324788        -1626.073741         16.665446  66.661784
7          -1417.750783          -1526.073741        -1417.750783       191.657511       191.657511        -1526.073741         41.661174  66.661784
8          -1288.588694          -1426.073741        -1288.588694       195.823873       195.823873        -1426.073741         70.823263  66.661784
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, loss_amount=3480985/49152, 
, alpha=5/2048, buf_size=204785/3072.[0m
[11/09 17:17:53]  --------------------------------------------------------------------------------
[11/09 17:17:53]  Iteration: 5 (0 solution, 4 counterexamples)
[11/09 17:17:54]  Generator returned sat in 0.708511 secs.
[11/09 17:17:54]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
[0m
[11/09 17:17:57]  Improved number of small numbers from 48 to 50 out of a max of 101
[11/09 17:17:57]  Verifer returned sat in 3.299196 secs.
[11/09 17:17:57]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -1941.085205          -1941.090057        -1941.085205         0.009521         0.009521        -1941.090057          0.000000   0.004852
1          -1841.085175          -1841.090057        -1841.085175       100.004883       100.004883        -1841.090057          0.000000   0.004883
2          -1721.085175          -1741.090057        -1721.085175       120.004883       120.004883        -1741.090057          0.004883  20.000000
3          -1621.072968          -1641.090057        -1621.072968       120.012207       120.012207        -1641.090057          0.017090  20.000000
4          -1521.057098          -1541.090057        -1521.057098       120.015869       120.015869        -1541.090057          0.032959  20.000000
5          -1421.039398          -1441.090057        -1421.039398       120.017700       120.017700        -1441.090057          0.050659  20.000000
6          -1321.020782          -1341.090057        -1321.020782       120.018616       120.018616        -1341.090057          0.069275  20.000000
7          -1221.001709          -1241.090057        -1221.001709       120.019073       120.019073        -1241.090057          0.088348  20.000000
8          -1120.982407          -1141.090057        -1120.982407       120.019302       120.019302        -1141.090057          0.107651  20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=6, loss_amount=5935/65536, 
, alpha=20475/1024, buf_size=20.[0m
[11/09 17:18:01]  --------------------------------------------------------------------------------
[11/09 17:18:01]  Iteration: 6 (0 solution, 5 counterexamples)
[11/09 17:18:13]  Generator returned sat in 11.873156 secs.
[11/09 17:18:13]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 17:18:15]  Improved number of small numbers from 47 to 49 out of a max of 101
[11/09 17:18:15]  Verifer returned sat in 2.078005 secs.
[11/09 17:18:15]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -1652.089600          -1686.228392        -1652.089600         0.009766         0.009766        -1686.228392          0.000000  34.138793
1          -1552.087146          -1586.228392        -1552.087146       134.141246       134.141246        -1586.228392          0.002441  34.138805
2          -1552.087146          -1552.089587        -1552.087146         0.002441         0.002441        -1552.089587          0.002441   0.000000
3          -1480.311977          -1480.314419        -1480.311977        71.775169        71.775169        -1480.314419          0.002441   0.000000
4          -1386.762861          -1386.765302        -1386.762861        93.549117        93.549117        -1386.765302          0.002441   0.000000
5          -1252.621614          -1286.765302        -1252.621614       134.141246       134.141246        -1286.765302          0.004883  34.138805
6           -637.652420          -1186.765302         -637.652420       649.107999       649.107999        -1186.765302        514.974077  34.138805
7           -242.532680          -1086.765302         -242.532680       429.258545       429.258545        -1086.765302        810.093817  34.138805
8             42.662332           -986.765302           42.662332       319.333818       319.333818         -986.765302        995.288829  34.138805
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=89687247/90112, 
, alpha=69/22, buf_size=769079/22528.[0m
[11/09 17:18:19]  --------------------------------------------------------------------------------
[11/09 17:18:19]  Iteration: 7 (0 solution, 6 counterexamples)
[11/09 17:18:30]  Generator returned sat in 10.694028 secs.
[11/09 17:18:30]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:18:31]  Improved number of small numbers from 67 to 69 out of a max of 101
[11/09 17:18:31]  Verifer returned sat in 1.499991 secs.
[11/09 17:18:31]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -1412.170166          -1412.172485        -1412.170166         0.009766         0.009766        -1412.172485          0.000000   0.002319
1          -1276.177368          -1312.172485        -1276.177368       135.995117       135.995117        -1312.172485          0.002441  35.992676
2          -1237.676758          -1237.679199        -1237.676758        74.493286        74.493286        -1237.679199          0.002441   0.000000
3          -1122.182251          -1137.679199        -1122.182251       115.494507       115.494507        -1137.679199          0.002441  15.494507
4          -1001.681641          -1037.679199        -1001.681641       135.995117       135.995117        -1037.679199          0.004883  35.992676
5           -692.680420           -937.679199         -692.680420       344.993896       344.993896         -937.679199        209.006104  35.992676
6           -465.174927           -837.679199         -465.174927       263.498169       263.498169         -837.679199        336.511597  35.992676
7           -278.417297           -737.679199         -278.417297       222.750305       222.750305         -737.679199        423.269226  35.992676
8           -112.033600           -637.679199         -112.033600       202.376373       202.376373         -637.679199        489.652924  35.992676
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, loss_amount=16044867/32768, 
, alpha=36859/2048, buf_size=73713/2048.[0m
[11/09 17:18:35]  --------------------------------------------------------------------------------
[11/09 17:18:35]  Iteration: 8 (0 solution, 7 counterexamples)
[11/09 17:18:42]  Generator returned sat in 6.633035 secs.
[11/09 17:18:42]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 17:18:44]  Improved number of small numbers from 101 to 101 out of a max of 101
[11/09 17:18:44]  Verifer returned sat in 2.020476 secs.
[11/09 17:18:44]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -1431.638916          -1431.641357        -1431.638916         0.009766         0.009766        -1431.641357          0.000000   0.002441
1          -1314.973877          -1331.641357        -1314.973877       116.667480       116.667480        -1331.641357          0.000000  16.667480
2          -1148.299072          -1231.641357        -1148.299072       183.342285       183.342285        -1231.641357         66.672363  16.669922
3          -1039.962891          -1131.641357        -1039.962891       125.006104       125.006104        -1131.641357         75.008545  16.669922
4           -923.292969          -1031.641357         -923.292969       133.339844       133.339844        -1031.641357         91.678467  16.669922
5           -839.958008           -931.641357         -839.958008       100.004883       100.004883         -931.641357         91.678467   0.004883
6           -731.624268           -831.641357         -731.624268       108.338623       108.338623         -831.641357         91.678467   8.338623
7           -623.290527           -731.641357         -623.290527       116.672363       116.672363         -731.641357         91.680908  16.669922
8           -514.954346           -631.641357         -514.954346       125.006104       125.006104         -631.641357        100.017090  16.669922
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, loss_amount=102435/4096, 
, alpha=34135/2048, buf_size=8535/512.[0m
[11/09 17:18:48]  --------------------------------------------------------------------------------
[11/09 17:18:48]  Iteration: 9 (0 solution, 8 counterexamples)
[11/09 17:18:49]  Generator returned sat in 0.228077 secs.
[11/09 17:18:49]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 17:18:49]  Improved number of small numbers from 101 to 101 out of a max of 101
[11/09 17:18:49]  Verifer returned sat in 0.204757 secs.
[11/09 17:18:49]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -1431.639160          -1431.641357        -1431.639160         0.009521         0.009521        -1431.641357          0.000000   0.002197
1          -1314.973877          -1331.641357        -1314.973877       116.667480       116.667480        -1331.641357          0.000000  16.667480
2          -1148.310303          -1231.641357        -1148.310303       183.331055       183.331055        -1231.641357         66.661133  16.669922
3          -1039.976807          -1131.641357        -1039.976807       125.003418       125.003418        -1131.641357         74.994629  16.669922
4           -923.308838          -1031.641357         -923.308838       133.337891       133.337891        -1031.641357         91.662598  16.669922
5           -839.971924           -931.641357         -839.971924       100.006836       100.006836         -931.641357         91.662598   0.006836
6           -731.637451           -831.641357         -731.637451       108.341309       108.341309         -831.641357         91.662598   8.341309
7           -623.302979           -731.641357         -623.302979       116.675781       116.675781         -731.641357         91.668457  16.669922
8           -514.962646           -631.641357         -514.962646       125.010254       125.010254         -631.641357        100.008789  16.669922
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, loss_amount=51229/2048, 
, alpha=17069/1024, buf_size=8535/512.[0m
[11/09 17:18:53]  --------------------------------------------------------------------------------
[11/09 17:18:53]  Iteration: 10 (0 solution, 9 counterexamples)
[11/09 17:19:08]  Generator returned sat in 14.452560 secs.
[11/09 17:19:08]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 17:19:08]  Verifer returned unsat in 0.534724 secs.
[11/09 17:19:10]  Verifer returned unsat in 1.145280 secs.
[11/09 17:19:10]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 17:19:10]  --------------------------------------------------------------------------------
[11/09 17:19:10]  Iteration: 11 (1 solution, 9 counterexamples)
[11/09 17:19:10]  Generator returned sat in 0.145375 secs.
[11/09 17:19:10]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 17:19:11]  Improved number of small numbers from 48 to 48 out of a max of 101
[11/09 17:19:11]  Verifer returned sat in 1.373390 secs.
[11/09 17:19:11]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -1774.612061          -1774.616821        -1774.612061         0.009521         0.009521        -1774.616821          0.000000   0.004761
1          -1659.616821          -1674.616821        -1659.616821       115.000000       115.000000        -1674.616821          0.000000  15.000000
2           -314.502563          -1574.616821         -314.502563      1360.114258      1360.114258        -1574.616821       1245.114258  15.000000
3            380.545044          -1474.616821          380.545044       710.047607       710.047607        -1474.616821       1840.161865  15.000000
4            750.559326          -1374.616821          750.559326       385.014282       385.014282        -1374.616821       2110.176147  15.000000
5            958.056946          -1274.616821          958.056946       222.497620       222.497620        -1274.616821       2217.673767  15.000000
6           1084.296234          -1174.616821         1084.296234       141.239288       141.239288        -1174.616821       2243.913055  15.000000
7           1099.286713          -1144.626343         1099.286713        29.990479        29.990479        -1144.626343       2243.913055   0.000000
8           1144.272430          -1099.640625         1144.272430        44.985718        44.985718        -1099.640625       2243.913055   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=4, loss_amount=13230119/32768, 
, alpha=122841/8192, buf_size=15.[0m
[11/09 17:19:15]  --------------------------------------------------------------------------------
[11/09 17:19:15]  Iteration: 12 (1 solution, 10 counterexamples)
[11/09 17:21:16]  Generator returned sat in 120.073813 secs.
[11/09 17:21:16]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:21:17]  Improved number of small numbers from 24 to 26 out of a max of 101
[11/09 17:21:17]  Verifer returned sat in 1.439434 secs.
[11/09 17:21:17]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0            130.497559            120.495447          130.497559         0.009277         0.009277          120.495447          0.000000  10.002112
1            230.498898            220.495447          230.498898       110.003452       110.003452          220.495447          0.001190  10.002261
2            340.501160            320.495447          340.501160       120.004523       120.004523          320.495447         10.003452  10.002261
3            440.502350            420.495447          440.502350       110.003452       110.003452          420.495447         10.004642  10.002261
4            530.502469            520.495447          530.502469       100.002380       100.002380          520.495447         10.004642   0.002380
5            620.501398            610.496756          620.501398        90.001309        90.001309          610.496756         10.004642   0.000000
6            700.501636            690.496994          700.501636        80.000238        80.000238          690.496994         10.004642   0.000000
7            770.500803            760.496161          770.500803        69.999167        69.999167          760.496161         10.004642   0.000000
8            830.498898            820.494257          830.498898        59.998096        59.998096          820.494257         10.004642   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, alpha=3277151/327680, buf_size=3277541/327680.[0m
[11/09 17:21:21]  --------------------------------------------------------------------------------
[11/09 17:21:21]  Iteration: 13 (1 solution, 11 counterexamples)
[11/09 17:22:13]  Generator returned sat in 51.890787 secs.
[11/09 17:22:13]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:22:15]  Improved number of small numbers from 65 to 84 out of a max of 101
[11/09 17:22:15]  Verifer returned sat in 1.732816 secs.
[11/09 17:22:15]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0            720.447021            220.212891          720.447021         0.009033         0.009033          220.212891               0.0  500.234131
1            820.445801            320.212891          820.445801       600.232910       600.232910          320.212891               0.0  500.232910
2            820.445801            420.212891          820.445801         0.303833         0.303833          420.212891               0.0  400.232910
3            820.445801            520.212891          820.445801         0.266724         0.266724          520.212891               0.0  300.232910
4            820.445801            620.212891          820.445801         0.248169         0.248169          620.212891               0.0  200.232910
5            820.445801            720.212891          820.445801         0.238892         0.238892          720.212891               0.0  100.232910
6            820.445801            820.212891          820.445801         0.234253         0.234253          820.212891               0.0    0.232910
7            820.445801            820.445801          820.445801         0.231934         0.231934          820.445801               0.0    0.000000
8            820.676575            820.676575          820.676575         0.230774         0.230774          820.676575               0.0    0.000000
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, alpha=627/8192, buf_size=32015/64.[0m
[11/09 17:22:19]  --------------------------------------------------------------------------------
[11/09 17:22:19]  Iteration: 14 (1 solution, 12 counterexamples)
[11/09 17:22:21]  Generator returned sat in 1.701968 secs.
[11/09 17:22:21]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 17:22:23]  Improved number of small numbers from 26 to 28 out of a max of 101
[11/09 17:22:23]  Verifer returned sat in 1.824573 secs.
[11/09 17:22:23]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0            648.159912            621.253102          648.159912         0.008789         0.008789          621.253102          0.000000  26.906810
1            748.164656            721.253102          748.164656       126.911555       126.911555          721.253102          0.004517  26.907038
2            748.164656            748.160140          748.164656        22.902521        22.902521          748.160140          0.004517   0.000000
3            832.518438            832.513922          832.518438        84.353782        84.353782          832.513922          0.004517   0.000000
4            893.969699            893.965182          893.969699        61.451261        61.451261          893.965182          0.004517   0.000000
5           1055.420959            993.965182         1055.420959       161.451261       161.451261          993.965182         34.548739  26.907038
6           1128.513922           1093.965182         1128.513922       100.000000       100.000000         1093.965182         34.548739   0.000000
7           1367.062661           1193.965182         1367.062661       238.548739       238.548739         1193.965182        146.190441  26.907038
8           1478.704362           1293.965182         1478.704362       138.548739       138.548739         1293.965182        157.832142  26.907038
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=14222163/90112, 
, alpha=434213/22528, buf_size=2424647/90112.[0m
[11/09 17:22:27]  --------------------------------------------------------------------------------
[11/09 17:22:27]  Iteration: 15 (1 solution, 13 counterexamples)
[11/09 17:22:38]  Generator returned sat in 10.277631 secs.
[11/09 17:22:38]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
[0m
[11/09 17:22:39]  Improved number of small numbers from 70 to 70 out of a max of 101
[11/09 17:22:39]  Verifer returned sat in 1.206317 secs.
[11/09 17:22:39]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0            120.085449            100.085449          120.085449         0.008789         0.008789          100.085449          0.000000  20.000000
1            200.089844            200.085449          200.089844       100.004395       100.004395          200.085449          0.000000   0.004395
2            448.116211            300.085449          448.116211       248.030762       248.030762          300.085449        128.030762  20.000000
3            582.125000            400.085449          582.125000       154.008789       154.008789          400.085449        162.039551  20.000000
4            669.122803            500.085449          669.122803       106.997803       106.997803          500.085449        162.039551   6.997803
5            852.615112            600.085449          852.615112       190.490112       190.490112          600.085449        232.529663  20.000000
6            957.853577            700.085449          957.853577       125.238464       125.238464          700.085449        237.768127  20.000000
7           1030.466217            792.698090         1030.466217        92.612640        92.612640          792.698090        237.768127   0.000000
8           1199.378586            892.698090         1199.378586       168.912369       168.912369          892.698090        286.680496  20.000000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, loss_amount=8168469/65536, 
, alpha=40951/2048, buf_size=20.[0m
[11/09 17:22:43]  --------------------------------------------------------------------------------
[11/09 17:22:43]  Iteration: 16 (1 solution, 14 counterexamples)
[11/09 17:23:31]  Generator returned sat in 47.142052 secs.
[11/09 17:23:31]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
[0m
[11/09 17:23:34]  Improved number of small numbers from 27 to 29 out of a max of 101
[11/09 17:23:34]  Verifer returned sat in 3.248396 secs.
[11/09 17:23:34]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0            672.504639            494.758102          672.504639         0.008789         0.008789          494.758102          0.000000  177.746536
1            772.505814            594.758102          772.505814       277.747711       277.747711          594.758102          0.001099  177.746613
2            905.719284            694.758102          905.719284       310.960083       310.960083          694.758102         33.214569  177.746613
3            905.719284            794.758102          905.719284       155.482971       155.482971          794.758102         33.214569   77.746613
4            905.719284            872.504715          905.719284        77.744415        77.744415          872.504715         33.214569    0.000000
5            983.465897            950.251328          983.465897        77.746613        77.746613          950.251328         33.214569    0.000000
6           1061.214706           1028.000137         1061.214706        77.748810        77.748810         1028.000137         33.214569    0.000000
7           1100.092041           1066.877472         1100.092041        38.877335        38.877335         1066.877472         33.214569    0.000000
8           1138.971573           1105.757004         1138.971573        38.879532        38.879532         1105.757004         33.214569    0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, alpha=3/2048, buf_size=5824401/32768.[0m
[11/09 17:23:38]  --------------------------------------------------------------------------------
[11/09 17:23:38]  Iteration: 17 (1 solution, 15 counterexamples)
[11/09 17:24:20]  Generator returned sat in 41.969994 secs.
[11/09 17:24:20]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha
else:
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 17:24:23]  Improved number of small numbers from 33 to 33 out of a max of 101
[11/09 17:24:23]  Verifer returned sat in 2.290867 secs.
[11/09 17:24:23]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0            386.090576            386.090027          386.090576         0.008789         0.008789          386.090027          0.000549    0.000000
1            600.090942            486.090027          600.090942       214.000366       214.000366          486.090027          0.000732  114.000183
2            700.091125            586.090027          700.091125       214.000366       214.000366          586.090027          0.000916  114.000183
3            800.091309            686.090027          800.091309       214.000366       214.000366          686.090027          0.001099  114.000183
4            900.091492            786.090027          900.091492       214.000366       214.000366          786.090027          0.001282  114.000183
5           1000.091675            886.090027         1000.091675       214.000366       214.000366          886.090027          0.001465  114.000183
6           1100.091858            986.090027         1100.091858       214.000366       214.000366          986.090027          0.001648  114.000183
7           1200.092041           1086.090027         1200.092041       214.000366       214.000366         1086.090027          0.001831  114.000183
8           1300.092224           1186.090027         1300.092224       214.000366       214.000366         1186.090027          0.002014  114.000183
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=6, loss_amount=15/16384, 
, alpha=114691/8192, buf_size=1867779/16384.[0m
[11/09 17:24:27]  --------------------------------------------------------------------------------
[11/09 17:24:27]  Iteration: 18 (1 solution, 16 counterexamples)
[11/09 17:24:39]  Generator returned sat in 12.374166 secs.
[11/09 17:24:39]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 17:24:41]  Improved number of small numbers from 101 to 101 out of a max of 101
[11/09 17:24:41]  Verifer returned sat in 1.112580 secs.
[11/09 17:24:41]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0            199.517090            183.708496          199.517090         0.008789         0.008789          183.708496          0.000000  15.808594
1            283.712891            283.708496          283.712891       100.004395       100.004395          283.708496          0.000000   0.004395
2            470.791016            383.708496          470.791016       187.082520       187.082520          383.708496         71.273926  15.808594
3            535.160645            463.886719          535.160645        80.178223        80.178223          463.886719         71.273926   0.000000
4            633.156250            561.882324          633.156250        97.995605        97.995605          561.882324         71.273926   0.000000
5            748.969238            661.882324          748.969238       115.812988       115.812988          661.882324         71.278320  15.808594
6            777.704102            706.425781          777.704102        44.543457        44.543457          706.425781         71.278320   0.000000
7            840.064941            768.786621          840.064941        62.360840        62.360840          768.786621         71.278320   0.000000
8            920.243164            848.964844          920.243164        80.178223        80.178223          848.964844         71.278320   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=9/2048, 
, alpha=18245/2048, buf_size=4047/256.[0m
[11/09 17:24:45]  --------------------------------------------------------------------------------
[11/09 17:24:45]  Iteration: 19 (1 solution, 17 counterexamples)
[11/09 17:28:56]  Generator returned sat in 250.522129 secs.
[11/09 17:28:56]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 17:28:57]  Improved number of small numbers from 68 to 74 out of a max of 101
[11/09 17:28:57]  Verifer returned sat in 1.773906 secs.
[11/09 17:28:57]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0             -1.011719             -5.008301           -1.011719         0.008545         0.008545           -5.008301          0.000000  3.996582
1             98.986328             94.991699           98.986328       103.994629       103.994629           94.991699          0.000000  3.994629
2            160.991699            160.991699          160.991699        66.000000        66.000000          160.991699          0.000000  0.000000
3            276.987305            260.991699          276.987305       115.995605       115.995605          260.991699         11.998901  3.996704
4            330.992798            318.993896          330.992798        58.002197        58.002197          318.993896         11.998901  0.000000
5            438.990601            418.993896          438.990601       107.997803       107.997803          418.993896         16.000000  3.996704
6            488.997192            472.997192          488.997192        54.003296        54.003296          472.997192         16.000000  0.000000
7            592.996094            572.997192          592.996094       103.998901       103.998901          572.997192         16.002197  3.996704
8            641.003235            625.001038          641.003235        52.003845        52.003845          625.001038         16.002197  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=3, loss_amount=32795/8192, 
, alpha=9/4096, buf_size=32741/8192.[0m
[11/09 17:29:01]  --------------------------------------------------------------------------------
[11/09 17:29:01]  Iteration: 20 (1 solution, 18 counterexamples)
[11/09 17:33:10]  Generator returned sat in 248.361183 secs.
[11/09 17:33:10]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:33:15]  Improved number of small numbers from 64 to 66 out of a max of 101
[11/09 17:33:15]  Verifer returned sat in 4.359119 secs.
[11/09 17:33:15]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0            -97.001953            -99.014648          -97.001953         0.008301         0.008301          -99.014648          0.000000  2.012695
1            -94.980469            -94.980469          -94.980469         4.034180         4.034180          -94.980469          0.000000  0.000000
2              5.015259              5.015259            5.015259        99.995728        99.995728            5.015259          0.000000  0.000000
3            107.028076            105.015259          107.028076       102.012817       102.012817          105.015259          0.000000  2.012817
4            256.019531            205.015259          256.019531       151.004272       151.004272          205.015259         48.991455  2.012817
5            353.002441            304.010986          353.002441        98.995728        98.995728          304.010986         48.991455  0.000000
6            501.998169            404.010986          501.998169       148.995728       148.995728          404.010986         95.974365  2.012817
7            598.478943            502.504578          598.478943        98.493591        98.493591          502.504578         95.974365  0.000000
8            746.972534            602.504578          746.972534       148.493591       148.493591          602.504578        142.455139  2.012817
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=2333985/16384, 
, alpha=8227/4096, buf_size=16489/8192.[0m
[11/09 17:33:19]  --------------------------------------------------------------------------------
[11/09 17:33:19]  Iteration: 21 (1 solution, 19 counterexamples)
[11/09 17:34:36]  Generator returned sat in 76.200896 secs.
[11/09 17:34:36]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:36]  Verifer returned unsat in 0.457923 secs.
[11/09 17:34:38]  Verifer returned unsat in 1.808211 secs.
[11/09 17:34:38]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:38]  --------------------------------------------------------------------------------
[11/09 17:34:38]  Iteration: 22 (2 solution, 19 counterexamples)
[11/09 17:34:39]  Generator returned sat in 0.410478 secs.
[11/09 17:34:39]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:40]  Verifer returned unsat in 0.688473 secs.
[11/09 17:34:41]  Verifer returned unsat in 1.146891 secs.
[11/09 17:34:41]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:41]  --------------------------------------------------------------------------------
[11/09 17:34:41]  Iteration: 23 (3 solution, 19 counterexamples)
[11/09 17:34:42]  Generator returned sat in 0.414950 secs.
[11/09 17:34:42]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:42]  Verifer returned unsat in 0.380581 secs.
[11/09 17:34:43]  Verifer returned unsat in 0.593627 secs.
[11/09 17:34:43]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:43]  --------------------------------------------------------------------------------
[11/09 17:34:43]  Iteration: 24 (4 solution, 19 counterexamples)
[11/09 17:34:44]  Generator returned sat in 0.411718 secs.
[11/09 17:34:44]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:44]  Verifer returned unsat in 0.335458 secs.
[11/09 17:34:45]  Verifer returned unsat in 0.505720 secs.
[11/09 17:34:45]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:45]  --------------------------------------------------------------------------------
[11/09 17:34:45]  Iteration: 25 (5 solution, 19 counterexamples)
[11/09 17:34:46]  Generator returned sat in 0.413680 secs.
[11/09 17:34:46]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:47]  Verifer returned unsat in 0.576636 secs.
[11/09 17:34:47]  Verifer returned unsat in 0.522729 secs.
[11/09 17:34:47]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:47]  --------------------------------------------------------------------------------
[11/09 17:34:47]  Iteration: 26 (6 solution, 19 counterexamples)
[11/09 17:34:48]  Generator returned sat in 0.447574 secs.
[11/09 17:34:48]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:49]  Verifer returned unsat in 0.432591 secs.
[11/09 17:34:49]  Verifer returned unsat in 0.742735 secs.
[11/09 17:34:49]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:34:49]  --------------------------------------------------------------------------------
[11/09 17:34:49]  Iteration: 27 (7 solution, 19 counterexamples)
[11/09 17:34:51]  Generator returned sat in 0.548498 secs.
[11/09 17:34:51]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
[0m
[11/09 17:34:51]  Verifer returned unsat in 0.551900 secs.
[11/09 17:34:52]  Verifer returned unsat in 0.923302 secs.
[11/09 17:34:52]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
[0m
[11/09 17:34:52]  --------------------------------------------------------------------------------
[11/09 17:34:52]  Iteration: 28 (8 solution, 19 counterexamples)
[11/09 17:37:02]  Generator returned sat in 128.831332 secs.
[11/09 17:37:02]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:02]  Verifer returned unsat in 0.537521 secs.
[11/09 17:37:03]  Verifer returned unsat in 0.830415 secs.
[11/09 17:37:03]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:03]  --------------------------------------------------------------------------------
[11/09 17:37:03]  Iteration: 29 (9 solution, 19 counterexamples)
[11/09 17:37:04]  Generator returned sat in 0.402233 secs.
[11/09 17:37:04]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:05]  Verifer returned unsat in 0.332291 secs.
[11/09 17:37:05]  Verifer returned unsat in 0.527660 secs.
[11/09 17:37:05]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:05]  --------------------------------------------------------------------------------
[11/09 17:37:05]  Iteration: 30 (10 solution, 19 counterexamples)
[11/09 17:37:06]  Generator returned sat in 0.400622 secs.
[11/09 17:37:06]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:07]  Verifer returned unsat in 0.583423 secs.
[11/09 17:37:07]  Verifer returned unsat in 0.689110 secs.
[11/09 17:37:07]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:08]  --------------------------------------------------------------------------------
[11/09 17:37:08]  Iteration: 31 (11 solution, 19 counterexamples)
[11/09 17:37:08]  Generator returned sat in 0.402318 secs.
[11/09 17:37:09]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:09]  Verifer returned unsat in 0.344302 secs.
[11/09 17:37:09]  Verifer returned unsat in 0.469136 secs.
[11/09 17:37:09]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:09]  --------------------------------------------------------------------------------
[11/09 17:37:09]  Iteration: 32 (12 solution, 19 counterexamples)
[11/09 17:37:10]  Generator returned sat in 0.401651 secs.
[11/09 17:37:10]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:11]  Verifer returned unsat in 0.484703 secs.
[11/09 17:37:12]  Verifer returned unsat in 0.602974 secs.
[11/09 17:37:12]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:37:12]  --------------------------------------------------------------------------------
[11/09 17:37:12]  Iteration: 33 (13 solution, 19 counterexamples)
[11/09 17:37:14]  Generator returned sat in 1.326855 secs.
[11/09 17:37:14]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:14]  Verifer returned unsat in 0.580982 secs.
[11/09 17:37:15]  Verifer returned unsat in 0.856237 secs.
[11/09 17:37:15]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:15]  --------------------------------------------------------------------------------
[11/09 17:37:15]  Iteration: 34 (14 solution, 19 counterexamples)
[11/09 17:37:16]  Generator returned sat in 0.408913 secs.
[11/09 17:37:16]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:17]  Verifer returned unsat in 0.484108 secs.
[11/09 17:37:18]  Verifer returned unsat in 0.964408 secs.
[11/09 17:37:18]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:18]  --------------------------------------------------------------------------------
[11/09 17:37:18]  Iteration: 35 (15 solution, 19 counterexamples)
[11/09 17:37:19]  Generator returned sat in 0.409305 secs.
[11/09 17:37:19]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:19]  Verifer returned unsat in 0.499895 secs.
[11/09 17:37:20]  Verifer returned unsat in 0.762741 secs.
[11/09 17:37:20]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:20]  --------------------------------------------------------------------------------
[11/09 17:37:20]  Iteration: 36 (16 solution, 19 counterexamples)
[11/09 17:37:21]  Generator returned sat in 0.407873 secs.
[11/09 17:37:21]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:22]  Verifer returned unsat in 0.393265 secs.
[11/09 17:37:22]  Verifer returned unsat in 0.891744 secs.
[11/09 17:37:22]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:22]  --------------------------------------------------------------------------------
[11/09 17:37:22]  Iteration: 37 (17 solution, 19 counterexamples)
[11/09 17:37:23]  Generator returned sat in 0.408648 secs.
[11/09 17:37:24]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:24]  Verifer returned unsat in 0.362906 secs.
[11/09 17:37:25]  Verifer returned unsat in 0.951247 secs.
[11/09 17:37:25]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 17:37:25]  --------------------------------------------------------------------------------
[11/09 17:37:25]  Iteration: 38 (18 solution, 19 counterexamples)
[11/09 17:38:12]  Generator returned sat in 46.615928 secs.
[11/09 17:38:12]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 17:38:14]  Improved number of small numbers from 50 to 53 out of a max of 101
[11/09 17:38:14]  Verifer returned sat in 1.453380 secs.
[11/09 17:38:14]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           2261.210938           1720.590575         2261.210938         0.008057         0.008057         1720.590575               0.0  540.620362
1           2361.211036           1820.590575         2361.211036       640.620461       640.620461         1820.590575               0.0  540.620461
2           2361.211036           1920.590575         2361.211036        59.979248        59.979248         1920.590575               0.0  440.620461
3           2361.211036           2020.590575         2361.211036        49.985474        49.985474         2020.590575               0.0  340.620461
4           2361.211036           2120.590575         2361.211036        44.988586        44.988586         2120.590575               0.0  240.620461
5           2361.211036           2220.590575         2361.211036        42.490143        42.490143         2220.590575               0.0  140.620461
6           2361.211036           2320.590575         2361.211036        41.240921        41.240921         2320.590575               0.0   40.620461
7           2361.211036           2361.211036         2361.211036        40.616310        40.616310         2361.211036               0.0    0.000000
8           2401.515040           2401.515040         2401.515040        40.304005        40.304005         2401.515040               0.0    0.000000
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, alpha=81903/4096, buf_size=1107191/2048.[0m
[11/09 17:38:18]  --------------------------------------------------------------------------------
[11/09 17:38:18]  Iteration: 39 (18 solution, 20 counterexamples)
[11/09 17:39:15]  Generator returned sat in 56.950130 secs.
[11/09 17:39:15]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:39:16]  Verifer returned unsat in 0.540344 secs.
[11/09 17:39:17]  Verifer returned unsat in 0.902090 secs.
[11/09 17:39:17]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:39:17]  --------------------------------------------------------------------------------
[11/09 17:39:17]  Iteration: 40 (19 solution, 20 counterexamples)
[11/09 17:40:36]  Generator returned sat in 78.621205 secs.
[11/09 17:40:36]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:40:37]  Verifer returned unsat in 0.590003 secs.
[11/09 17:40:38]  Verifer returned unsat in 1.689625 secs.
[11/09 17:40:38]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:40:38]  --------------------------------------------------------------------------------
[11/09 17:40:38]  Iteration: 41 (20 solution, 20 counterexamples)
[11/09 17:40:39]  Generator returned sat in 0.467871 secs.
[11/09 17:40:40]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:40:40]  Verifer returned unsat in 0.387331 secs.
[11/09 17:40:41]  Verifer returned unsat in 0.931373 secs.
[11/09 17:40:41]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:40:41]  --------------------------------------------------------------------------------
[11/09 17:40:41]  Iteration: 42 (21 solution, 20 counterexamples)
[11/09 17:40:42]  Generator returned sat in 0.471438 secs.
[11/09 17:40:42]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:40:43]  Verifer returned unsat in 0.578117 secs.
[11/09 17:40:44]  Verifer returned unsat in 0.825910 secs.
[11/09 17:40:44]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:40:44]  --------------------------------------------------------------------------------
[11/09 17:40:44]  Iteration: 43 (22 solution, 20 counterexamples)
[11/09 17:45:35]  Generator returned sat in 290.406323 secs.
[11/09 17:45:35]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 17:45:35]  Verifer returned unsat in 0.445797 secs.
[11/09 17:45:36]  Verifer returned unsat in 0.634419 secs.
[11/09 17:45:36]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 17:45:36]  --------------------------------------------------------------------------------
[11/09 17:45:36]  Iteration: 44 (23 solution, 20 counterexamples)
[11/09 17:45:41]  Generator returned sat in 4.882662 secs.
[11/09 17:45:41]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 17:45:42]  Verifer returned unsat in 0.375273 secs.
[11/09 17:45:43]  Improved gap from 0.015625 to 18.75
[11/09 17:45:44]  Improved number of small numbers from 81 to 99 out of a max of 121
[11/09 17:45:44]  Verifer returned sat in 2.081563 secs.
[11/09 17:45:44]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         4847.539795         4828.789551       4847.539795       0.416504       0.416504       4828.789551             0.0                4828.789551    -905.781250   18.750244       18.750060
1         4847.539795         4828.789735       4847.539795      18.750000      18.750000       4828.789735             0.0                4847.956299    -824.531494   18.750060       -0.000184
2         5027.539735         4848.164795       5027.539735     198.750000     198.750000       4848.164795            60.0                4848.164795    -824.531494  119.374940       19.999756
3         5027.539735         4967.123068       5027.539735     118.958333     118.958333       4967.123068            60.0                4967.123068    -762.864746    0.416667      -18.333496
4         5046.706401         4986.289551       5046.706401      19.583333      19.583333       4986.289551            60.0                4986.289551    -682.031250    0.416850      -18.333333
5         5075.664551         5005.039735       5075.664551      29.375000      29.375000       5005.039735            60.0                5004.623291    -600.781250   10.624816       -8.125184
6         5099.310568         5023.789735       5099.310568      34.270833      34.270833       5023.789735            60.0                5039.727051    -519.531250   15.520833       -3.229167
7         5120.508485         5042.539735       5120.508485      36.718750      36.718750       5042.539735            60.0                5042.123291    -438.281494   17.968750       -0.781494
8         5140.482443         5080.065918       5140.482443      37.942708      37.942708       5080.065918            60.0                5080.065918    -438.281494    0.416525      -80.807536
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, alpha=235/12, buf_size=81919/4096.[0m
[11/09 17:45:48]  --------------------------------------------------------------------------------
[11/09 17:45:48]  Iteration: 45 (23 solution, 21 counterexamples)
[11/09 17:46:35]  Generator returned sat in 46.452333 secs.
[11/09 17:46:35]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 17:46:36]  Improved number of small numbers from 24 to 26 out of a max of 101
[11/09 17:46:36]  Verifer returned sat in 1.320368 secs.
[11/09 17:46:36]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0           2208.726562           2208.724260         2208.726562         0.008057         0.008057         2208.724260          0.000000  0.002302
1           2308.727282           2308.724260         2308.727282       100.003021       100.003021         2308.724260          0.000504  0.002518
2           2408.726778           2408.724260         2408.726778       100.002014       100.002014         2408.724260          0.000504  0.002014
3           2508.727785           2508.724260         2508.727785       100.003021       100.003021         2508.724260          0.001007  0.002518
4           2558.729799           2558.728792         2558.729799        50.004532        50.004532         2558.728792          0.001007  0.000000
5           2608.735338           2608.734331         2608.735338        50.005539        50.005539         2608.734331          0.001007  0.000000
6           2658.741884           2658.740877         2658.741884        50.006546        50.006546         2658.740877          0.001007  0.000000
7           2708.749437           2708.748430         2708.749437        50.007553        50.007553         2708.748430          0.001007  0.000000
8           2758.757998           2758.756990         2758.757998        50.008560        50.008560         2758.756990          0.001007  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, alpha=33/16384, buf_size=165/65536.[0m
[11/09 17:46:40]  --------------------------------------------------------------------------------
[11/09 17:46:40]  Iteration: 46 (23 solution, 22 counterexamples)
[11/09 17:52:22]  Generator returned sat in 340.476576 secs.
[11/09 17:52:22]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 17:52:32]  Improved number of small numbers from 26 to 28 out of a max of 101
[11/09 17:52:32]  Verifer returned sat in 10.795504 secs.
[11/09 17:52:32]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0           2108.748291           2108.744341         2108.748291         0.007812         0.007812         2108.744341          0.000000   0.003950
1           2240.750383           2208.744341         2240.750383       132.006042       132.006042         2208.744341          0.004028  32.002014
2           2340.746355           2308.744341         2340.746355       131.997986       131.997986         2308.744341          0.004028  31.997986
3           2492.741320           2408.744341         2492.741320       183.992950       183.992950         2408.744341         51.994965  32.002014
4           2536.747362           2484.752398         2536.747362        76.008057        76.008057         2484.752398         51.994965   0.000000
5           2680.749376           2584.752398         2680.749376       144.002014       144.002014         2584.752398         63.994965  32.002014
6           2712.759447           2648.764482         2712.759447        64.012085        64.012085         2648.764482         63.994965   0.000000
7           2844.765490           2748.764482         2844.765490       132.006042       132.006042         2748.764482         63.998993  32.002014
8           2870.777575           2806.778582         2870.777575        58.014099        58.014099         2806.778582         63.998993   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=3, loss_amount=98337/8192, 
, alpha=98271/8192, buf_size=524321/16384.[0m
[11/09 17:52:36]  --------------------------------------------------------------------------------
[11/09 17:52:36]  Iteration: 47 (23 solution, 23 counterexamples)
[11/09 17:52:56]  Generator returned sat in 19.164234 secs.
[11/09 17:52:56]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 17:52:59]  Improved number of small numbers from 65 to 101 out of a max of 101
[11/09 17:52:59]  Verifer returned sat in 2.304640 secs.
[11/09 17:52:59]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0           2758.819336           2758.817627         2758.819336         0.007812         0.007812         2758.817627          0.000000  0.001709
1           2758.821533           2758.821533         2758.821533         0.003906         0.003906         2758.821533          0.000000  0.000000
2           2866.837158           2858.821533         2866.837158       108.015625       108.015625         2858.821533          0.001953  8.013672
3           2966.835205           2958.821533         2966.835205       108.011719       108.011719         2958.821533          0.001953  8.011719
4           3116.831299           3058.821533         3116.831299       158.007812       158.007812         3058.821533         49.996094  8.013672
5           3202.814697           3152.818604         3202.814697        93.997070        93.997070         3152.818604         49.996094  0.000000
6           3350.813721           3252.818604         3350.813721       147.999023       147.999023         3252.818604         89.981445  8.013672
7           3433.795654           3343.814209         3433.795654        90.995605        90.995605         3343.814209         89.981445  0.000000
8           3578.793213           3443.814209         3578.793213       144.997559       144.997559         3443.814209        126.965332  8.013672
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=260021/2048, 
, alpha=2049/512, buf_size=4103/512.[0m
[11/09 17:53:03]  --------------------------------------------------------------------------------
[11/09 17:53:03]  Iteration: 48 (23 solution, 24 counterexamples)
[11/09 17:55:59]  Generator returned sat in 175.686881 secs.
[11/09 17:55:59]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:56:00]  Verifer returned unsat in 0.385072 secs.
[11/09 17:56:01]  Verifer returned unsat in 1.322958 secs.
[11/09 17:56:01]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:56:01]  --------------------------------------------------------------------------------
[11/09 17:56:01]  Iteration: 49 (24 solution, 24 counterexamples)
[11/09 17:56:02]  Generator returned sat in 0.716871 secs.
[11/09 17:56:02]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:56:03]  Verifer returned unsat in 0.449288 secs.
[11/09 17:56:04]  Verifer returned unsat in 1.478438 secs.
[11/09 17:56:04]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:56:04]  --------------------------------------------------------------------------------
[11/09 17:56:04]  Iteration: 50 (25 solution, 24 counterexamples)
[11/09 17:56:06]  Generator returned sat in 0.717069 secs.
[11/09 17:56:06]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:56:06]  Verifer returned unsat in 0.357412 secs.
[11/09 17:56:07]  Verifer returned unsat in 1.063152 secs.
[11/09 17:56:07]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:56:07]  --------------------------------------------------------------------------------
[11/09 17:56:07]  Iteration: 51 (26 solution, 24 counterexamples)
[11/09 17:56:09]  Generator returned sat in 0.721819 secs.
[11/09 17:56:09]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:56:09]  Verifer returned unsat in 0.373164 secs.
[11/09 17:56:10]  Verifer returned unsat in 0.744246 secs.
[11/09 17:56:10]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:56:10]  --------------------------------------------------------------------------------
[11/09 17:56:10]  Iteration: 52 (27 solution, 24 counterexamples)
[11/09 17:56:15]  Generator returned sat in 3.690082 secs.
[11/09 17:56:15]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 17:56:15]  Verifer returned unsat in 0.586610 secs.
[11/09 17:56:16]  Verifer returned unsat in 0.621679 secs.
[11/09 17:56:16]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 17:56:16]  --------------------------------------------------------------------------------
[11/09 17:56:16]  Iteration: 53 (28 solution, 24 counterexamples)
[11/09 17:56:17]  Generator returned sat in 0.713691 secs.
[11/09 17:56:17]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 17:56:18]  Verifer returned unsat in 0.445372 secs.
[11/09 17:56:19]  Verifer returned unsat in 1.254680 secs.
[11/09 17:56:19]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 17:56:19]  --------------------------------------------------------------------------------
[11/09 17:56:19]  Iteration: 54 (29 solution, 24 counterexamples)
[11/09 17:57:58]  Generator returned sat in 98.418379 secs.
[11/09 17:57:59]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:57:59]  Verifer returned unsat in 0.590339 secs.
[11/09 17:58:00]  Verifer returned unsat in 0.561053 secs.
[11/09 17:58:00]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 17:58:00]  --------------------------------------------------------------------------------
[11/09 17:58:00]  Iteration: 55 (30 solution, 24 counterexamples)
[11/09 18:08:17]  Generator returned sat in 616.134397 secs.
[11/09 18:08:17]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 18:08:20]  Improved number of small numbers from 29 to 31 out of a max of 101
[11/09 18:08:20]  Verifer returned sat in 3.488866 secs.
[11/09 18:08:20]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           4039.093994           3888.280334         4039.093994         0.007568         0.007568         3888.280334          0.001465  150.812195
1           4139.094181           3988.280334         4139.094181       250.812381       250.812381         3988.280334          0.001465  150.812381
2           4276.026903           4088.280334         4276.026903       287.745103       287.745103         4088.280334         36.934187  150.812381
3           4276.026903           4188.280334         4276.026903       150.811893       150.811893         4188.280334         36.934187   50.812381
4           4453.745475           4288.280334         4453.745475       228.530953       228.530953         4288.280334         36.934187  128.530953
5           4453.745475           4388.280334         4453.745475       121.204818       121.204818         4388.280334         36.934187   28.530953
6           4609.334862           4488.280334         4609.334862       184.120341       184.120341         4488.280334         36.934187   84.120341
7           4624.214033           4587.279846         4624.214033        98.999512        98.999512         4587.279846         36.934187    0.000000
8           4775.026415           4687.279846         4775.026415       150.812381       150.812381         4687.279846         36.934187   50.812381
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, alpha=1013773/219136, buf_size=16524211/109568.[0m
[11/09 18:08:24]  --------------------------------------------------------------------------------
[11/09 18:08:24]  Iteration: 56 (30 solution, 25 counterexamples)
[11/09 18:10:16]  Generator returned sat in 110.904436 secs.
[11/09 18:10:16]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 18:10:19]  Improved number of small numbers from 29 to 31 out of a max of 101
[11/09 18:10:19]  Verifer returned sat in 3.273690 secs.
[11/09 18:10:19]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0           5302.034424           5302.030687         5302.034424         0.007324         0.007324         5302.030687          0.000000  0.003737
1           5386.030687           5386.030687         5386.030687        84.000000        84.000000         5386.030687          0.000000  0.000000
2           5486.036363           5486.030687         5486.036363       100.005676       100.005676         5486.030687          0.001892  0.003784
3           5578.030687           5578.028795         5578.030687        91.998108        91.998108         5578.028795          0.001892  0.000000
4           5720.029741           5678.028795         5720.029741       141.999054       141.999054         5678.028795         41.997162  0.003784
5           5816.023119           5774.025957         5816.023119        95.997162        95.997162         5774.025957         41.997162  0.000000
6           5962.021227           5874.025957         5962.021227       145.998108       145.998108         5874.025957         87.991486  0.003784
7           6060.014131           5972.022646         6060.014131        97.996689        97.996689         5972.022646         87.991486  0.000000
8           6208.011766           6072.022646         6208.011766       147.997635       147.997635         6072.022646        135.985336  0.003784
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=8911811/65536, 
, alpha=31/16384, buf_size=31/8192.[0m
[11/09 18:10:23]  --------------------------------------------------------------------------------
[11/09 18:10:23]  Iteration: 57 (30 solution, 26 counterexamples)
[11/09 18:25:55]  Generator returned sat in 930.881048 secs.
[11/09 18:25:55]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 18:26:00]  Verifer returned unsat in 5.208054 secs.
[11/09 18:26:16]  Improved gap from 0.0 to 100
[11/09 18:26:20]  Improved number of small numbers from 40 to 45 out of a max of 121
[11/09 18:26:20]  Verifer returned sat in 19.935778 secs.
[11/09 18:26:20]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         6887.962158         6860.323629       6887.962158       0.416504       0.416504       6860.323629        0.000000                6860.323629    -115.920247   27.638529        0.208011
1         6987.337643         6987.233517       6987.337643     127.014014     127.014014       6987.233517        0.000000                6987.233517    -115.920247    0.104126       -0.416504
2         7088.066525         7087.754147       7088.066525     100.833008     100.833008       7087.754147        0.104126                7087.754147    -115.920247    0.208252        0.208252
3         7201.625595         7187.754147       7201.625595     113.767322     113.767322       7187.754147       13.663196                7187.754147    -115.920247    0.208252        0.208252
4         7301.729721         7267.795797       7301.729721     100.312378     100.312378       7267.795797       13.767322                7267.795797    -115.920247   20.166602        0.208252
5         7371.636007         7357.868686       7371.636007      90.072888      90.072888       7357.868686       13.767322                7357.868686    -115.920247    0.000000      -29.885461
6         7501.729721         7437.945045       7501.729721     130.093713     130.093713       7437.945045       13.767322                7437.945045    -115.920247   50.017354        0.208252
7         7601.833847         7585.299203       7601.833847     150.121480     150.121480       7585.299203       13.871448                7585.299203    -115.920247    2.663196        0.208252
8         7712.937973         7587.858398       7712.937973     113.767322     113.767322       7587.858398       24.975574                7587.858398    -115.920247  100.104000        0.208252
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=92671/8192, 
, alpha=853/8192, buf_size=853/4096.[0m
[11/09 18:26:24]  --------------------------------------------------------------------------------
[11/09 18:26:24]  Iteration: 58 (30 solution, 27 counterexamples)
[11/09 18:45:51]  Generator returned sat in 1166.266038 secs.
[11/09 18:45:51]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
[0m
[11/09 18:45:56]  Improved number of small numbers from 47 to 51 out of a max of 101
[11/09 18:45:56]  Verifer returned sat in 4.064927 secs.
[11/09 18:45:56]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           5176.030273           5176.026602         5176.030273         0.007080         0.007080         5176.026602               0.0    0.003672
1           5663.084437           5276.026602         5663.084437       487.057836       487.057836         5276.026602               0.0  387.057836
2           5663.084437           5376.026602         5663.084437        25.201237        25.201237         5376.026602               0.0  287.057836
3           5663.084437           5476.026602         5663.084437        37.801855        37.801855         5476.026602               0.0  187.057836
4           5663.084437           5576.026602         5663.084437        56.702782        56.702782         5576.026602               0.0   87.057836
5           5663.084437           5663.084437         5663.084437        85.054174        85.054174         5663.084437               0.0    0.000000
6           5790.665698           5763.084437         5790.665698       127.581260       127.581260         5763.084437               0.0   27.581260
7           5954.456328           5863.084437         5954.456328       191.371890       191.371890         5863.084437               0.0   91.371890
8           6150.142273           5963.084437         6150.142273       287.057836       287.057836         5963.084437               0.0  187.057836
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, alpha=8835/4096, buf_size=1585403/4096.[0m
[11/09 18:45:59]  --------------------------------------------------------------------------------
[11/09 18:45:59]  Iteration: 59 (30 solution, 28 counterexamples)
[11/09 18:55:42]  Generator returned sat in 582.005803 secs.
[11/09 18:55:42]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 18:55:44]  Improved number of small numbers from 51 to 51 out of a max of 101
[11/09 18:55:44]  Verifer returned sat in 1.513010 secs.
[11/09 18:55:44]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           5176.030273           5176.026602         5176.030273         0.007080         0.007080         5176.026602               0.0    0.003672
1           5663.084437           5276.026602         5663.084437       487.057836       487.057836         5276.026602               0.0  387.057836
2           5663.084437           5376.026602         5663.084437        23.683360        23.683360         5376.026602               0.0  287.057836
3           5663.084437           5476.026602         5663.084437        36.603531        36.603531         5476.026602               0.0  187.057836
4           5663.084437           5576.026602         5663.084437        55.983788        55.983788         5576.026602               0.0   87.057836
5           5663.084437           5663.084437         5663.084437        85.054174        85.054174         5663.084437               0.0    0.000000
6           5791.744189           5763.084437         5791.744189       128.659751       128.659751         5763.084437               0.0   28.659751
7           5957.152556           5863.084437         5957.152556       194.068118       194.068118         5863.084437               0.0   94.068118
8           6155.265106           5963.084437         6155.265106       292.180669       292.180669         5963.084437               0.0  192.180669
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, alpha=8835/4096, buf_size=1585403/4096.[0m
[11/09 18:55:48]  --------------------------------------------------------------------------------
[11/09 18:55:48]  Iteration: 60 (30 solution, 29 counterexamples)
[11/09 19:05:38]  Generator returned sat in 588.814865 secs.
[11/09 19:05:38]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 19:05:41]  Improved number of small numbers from 28 to 30 out of a max of 101
[11/09 19:05:41]  Verifer returned sat in 3.011231 secs.
[11/09 19:05:41]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           5281.487061           5170.260985         5281.487061         0.006836         0.006836         5170.260985          0.000000  111.226076
1           5381.483877           5270.260985         5381.483877       211.222892       211.222892         5270.260985          0.000000  111.222892
2           5488.699933           5370.260985         5488.699933       218.438948       218.438948         5370.260985          7.212638  111.226310
3           5488.699933           5470.260985         5488.699933       111.222892       111.222892         5470.260985          7.212638   11.226310
4           5643.306252           5570.260985         5643.306252       165.832629       165.832629         5570.260985          7.212638   65.832629
5           5825.220858           5670.260985         5825.220858       247.747235       247.747235         5670.260985         43.733563  111.226310
6           5839.871583           5770.260985         5839.871583       125.877035       125.877035         5770.260985         43.733563   25.877035
7           6001.808392           5870.260985         6001.808392       187.813844       187.813844         5870.260985         43.733563   87.813844
8           6194.713605           5970.260985         6194.713605       280.719057       280.719057         5970.260985        113.226310  111.226310
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=54279/512, 
, alpha=4103/2048, buf_size=10136721/91136.[0m
[11/09 19:05:45]  --------------------------------------------------------------------------------
[11/09 19:05:45]  Iteration: 61 (30 solution, 30 counterexamples)
[11/09 19:32:47]  Generator returned sat in 1620.964980 secs.
[11/09 19:32:47]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 19:32:54]  Verifer returned unsat in 7.676039 secs.
[11/09 19:33:09]  Improved gap from 0.0 to 100
[11/09 19:33:14]  Improved number of small numbers from 81 to 84 out of a max of 121
[11/09 19:33:14]  Verifer returned sat in 19.221539 secs.
[11/09 19:33:14]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         6908.954346         6789.338233       6908.954346       0.416504       0.416504       6789.338233        0.000000                6789.338233    -115.920654  119.616113       21.199951
1         7008.841263         6935.281667       7008.841263     219.503030     219.503030       6935.281667        0.000000                6935.281667    -115.920654   73.559596       21.086869
2         7075.964496         7070.251364       7075.964496     140.682828     140.682828       7070.251364        0.000000                7070.251364    -115.920654    5.713131      -11.789899
3         7210.821061         7184.396819       7210.821061     140.569697     140.569697       7184.396819        1.866667                7184.396819    -115.920654   24.557576       21.200000
4         7310.934193         7187.867526       7310.934193     124.670707     124.670707       7187.867526        1.979798                7187.867526    -115.920654  121.086869       21.200000
5         7310.934193         7306.841263       7310.934193     120.973737     120.973737       7306.841263        1.979798                7306.841263    -115.920654    2.113131      -78.800000
6         7430.360455         7428.267526       7430.360455     121.539394     121.539394       7428.267526        1.979798                7428.267526    -115.920654    0.113131      -59.373737
7         7611.047324         7587.754395       7611.047324     180.800000     180.800000       7587.754395        2.092929                7587.754395    -115.920654   21.200000       21.200000
8         7730.417021         7587.754395       7730.417021     140.569697     140.569697       7587.754395       21.462626                7687.867676    -115.920654  121.200000       21.200000
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=1940/99, 
, alpha=56/495, buf_size=106/5.[0m
[11/09 19:33:18]  --------------------------------------------------------------------------------
[11/09 19:33:18]  Iteration: 62 (30 solution, 31 counterexamples)
[11/09 20:20:32]  Generator returned sat in 2833.392776 secs.
[11/09 20:20:32]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 20:20:36]  Improved number of small numbers from 38 to 40 out of a max of 101
[11/09 20:20:36]  Verifer returned sat in 3.640988 secs.
[11/09 20:20:36]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -3683.994141          -3709.989315        -3683.994141         0.006836         0.006836        -3709.989315          0.000000  25.995174
1          -3648.666919          -3648.666919        -3648.666919        61.322396        61.322396        -3648.666919          0.000000   0.000000
2          -3607.334269          -3607.334269        -3607.334269        41.332650        41.332650        -3607.334269          0.000000   0.000000
3          -3515.343840          -3515.343840        -3515.343840        91.990430        91.990430        -3515.343840          0.000000   0.000000
4          -3382.690503          -3415.343840        -3382.690503       132.653337       132.653337        -3415.343840          6.658122  25.995215
5          -3332.687085          -3339.345207        -3332.687085        75.998633        75.998633        -3339.345207          6.658122   0.000000
6          -3264.684351          -3271.342472        -3264.684351        68.002734        68.002734        -3271.342472          6.658122   0.000000
7          -3138.685718          -3171.342472        -3138.685718       125.998633       125.998633        -3171.342472          6.661540  25.995215
8          -3100.676147          -3107.337687        -3100.676147        64.004785        64.004785        -3107.337687          6.661540   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=81857/12288, 
, alpha=40953/2048, buf_size=266191/10240.[0m
[11/09 20:20:40]  --------------------------------------------------------------------------------
[11/09 20:20:40]  Iteration: 63 (30 solution, 32 counterexamples)
[11/09 20:40:57]  Generator returned sat in 1216.070115 secs.
[11/09 20:40:57]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 20:41:00]  Improved number of small numbers from 32 to 34 out of a max of 101
[11/09 20:41:00]  Verifer returned sat in 2.691546 secs.
[11/09 20:41:00]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -4012.217041          -4028.881154        -4012.217041         0.006836         0.006836        -4028.881154          0.000000  16.664113
1          -3928.880300          -3928.881154        -3928.880300       100.000854       100.000854        -3928.881154          0.000000   0.000854
2          -3812.215983          -3828.881154        -3812.215983       116.665171       116.665171        -3828.881154          0.000854  16.664317
3          -3728.881154          -3728.882009        -3728.881154        99.999146        99.999146        -3728.882009          0.000854   0.000000
4          -3578.881154          -3628.882009        -3578.881154       150.000000       150.000000        -3628.882009         33.336538  16.664317
5          -3495.546753          -3528.883291        -3495.546753        99.998718        99.998718        -3528.883291         33.336538   0.000000
6          -3345.547180          -3428.883291        -3345.547180       149.999573       149.999573        -3428.883291         66.671794  16.664317
7          -3262.212992          -3328.884786        -3262.212992        99.998505        99.998505        -3328.884786         66.671794   0.000000
8          -3112.213633          -3228.884786        -3112.213633       149.999359       149.999359        -3228.884786        100.006836  16.664317
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=819249/8192, 
, alpha=7/4096, buf_size=1638169/98304.[0m
[11/09 20:41:04]  --------------------------------------------------------------------------------
[11/09 20:41:04]  Iteration: 64 (30 solution, 33 counterexamples)
[11/09 20:43:44]  Generator returned sat in 159.180429 secs.
[11/09 20:43:44]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 20:43:50]  Verifer returned unsat in 5.936789 secs.
[11/09 20:44:13]  Improved gap from 0.0 to 100
[11/09 20:44:16]  Improved number of small numbers from 49 to 55 out of a max of 121
[11/09 20:44:16]  Verifer returned sat in 26.054099 secs.
[11/09 20:44:16]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         7543.838867         7543.734692       7543.838867       0.416260       0.416260       7543.734692        0.000000                7543.734692    -115.920654    0.104175      -99.791699
1         7653.419369         7653.315243       7653.419369     109.684676     109.684676       7653.315243        0.000000                7653.315243    -115.920654    0.104126      -90.211198
2         7822.479289         7822.375163       7822.479289     169.164046     169.164046       7822.375163        0.000000                7822.375163    -115.920654    0.104126      -21.151277
3         7971.643336         7925.568680       7971.643336     149.268172     149.268172       7925.568680        0.104126                7925.568680    -115.920654   45.970530       27.908643
4         8071.747462         7980.437050       8071.747462     146.074656     146.074656       7980.437050        0.208252                7980.437050    -115.920654   91.102160       27.908643
5         8071.747462         8043.630566       8071.747462      88.978880      88.978880       8043.630566        0.208252                8043.526611    -115.920654   27.908643      -72.091357
6         8177.203013         8176.890635       8177.203013     133.364194     133.364194       8176.890635        0.208252                8176.890635    -115.920654    0.104126      -66.635806
7         8371.851588         8343.630566       8371.851588     194.752701     194.752701       8343.630566        0.312378                8343.630566    -115.920654   27.908643       27.908643
8         8503.890881         8343.734863       8503.890881     159.947937     159.947937       8343.734863       32.351672                8343.734863    -115.920654  127.804346       27.908643
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=2509633/77824, 
, alpha=162987/8192, buf_size=8687849/311296.[0m
[11/09 20:44:20]  --------------------------------------------------------------------------------
[11/09 20:44:20]  Iteration: 65 (30 solution, 34 counterexamples)
[11/09 21:19:40]  Generator returned sat in 2119.194981 secs.
[11/09 21:19:40]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 21:19:55]  Verifer returned unsat in 14.382711 secs.
[11/09 21:20:19]  Improved gap from 0.1392757660167131 to 100
[11/09 21:20:19]  Improved number of small numbers from 37 to 121 out of a max of 121
[11/09 21:20:19]  Verifer returned sat in 24.514209 secs.
[11/09 21:20:19]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         7617.739258         7499.318359       7617.739258       0.416260       0.416260       7499.318359        0.000000                7499.318359    -115.920654  118.420898       18.473145
1         7717.687500         7599.266113       7717.687500     218.369141     218.369141       7599.266113        0.000000                7599.214111    -115.920654  118.421387       18.421387
2         7817.791504         7766.019531       7817.791504     218.525391     218.525391       7766.019531        0.052246                7766.019531    -115.920654   51.719727       18.473145
3         7917.843506         7866.001953       7917.843506     151.771729     151.771729       7866.001953        0.104248                7866.001953    -115.920654   51.737305       18.473145
4         8017.895264         7988.184082       8017.895264     151.789062     151.789062       7988.184082        0.156006                7988.184082    -115.920654   29.555176       18.473145
5         8117.843506         8051.219971       8117.843506     129.503418     129.503418       8051.219971        0.156006                8051.219971    -115.920654   66.467529       18.421387
6         8217.947266         8108.260010       8217.947266     166.571289     166.571289       8108.260010        0.208008                8108.260010    -115.920654  109.479248       18.473145
7         8261.002197         8260.742188       8261.002197     152.534180     152.534180       8260.742188        0.208008                8260.742188    -115.920654    0.052002      -38.471924
8         8451.188965         8299.266113       8451.188965     190.238770     190.238770       8299.266113       33.449707                8299.266113    -115.920654  118.473145       18.473145
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=136583/4096, 
, alpha=75453/4096, buf_size=37833/2048.[0m
[11/09 21:20:23]  --------------------------------------------------------------------------------
[11/09 21:20:23]  Iteration: 66 (30 solution, 35 counterexamples)
[11/09 21:54:24]  Generator returned sat in 2039.019629 secs.
[11/09 21:54:24]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 21:54:26]  Improved number of small numbers from 31 to 33 out of a max of 101
[11/09 21:54:26]  Verifer returned sat in 2.683947 secs.
[11/09 21:54:26]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          -3809.540527          -3809.543929        -3809.540527         0.006836         0.006836        -3809.543929          0.000000  0.003401
1          -3709.538802          -3709.543929        -3709.538802       100.005127       100.005127        -3709.543929          0.001709  0.003418
2          -3548.211971          -3609.543929        -3548.211971       161.330248       161.330248        -3609.543929         61.328539  0.003418
3          -3467.547702          -3528.876241        -3467.547702        80.667688        80.667688        -3528.876241         61.328539  0.000000
4          -3346.545316          -3428.876241        -3346.545316       121.002386       121.002386        -3428.876241         82.327507  0.003418
5          -3286.044977          -3368.372485        -3286.044977        60.503756        60.503756        -3368.372485         82.327507  0.000000
6          -3195.288488          -3277.615995        -3195.288488        90.756489        90.756489        -3277.615995         82.327507  0.000000
7          -3059.152900          -3177.615995        -3059.152900       136.135588       136.135588        -3177.615995        118.459678  0.003418
8          -2991.085960          -3109.545638        -2991.085960        68.070358        68.070358        -3109.545638        118.459678  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=102379/1792, 
, alpha=7/4096, buf_size=7/2048.[0m
[11/09 21:54:30]  --------------------------------------------------------------------------------
[11/09 21:54:30]  Iteration: 67 (30 solution, 36 counterexamples)
[11/09 22:03:21]  Generator returned sat in 529.519956 secs.
[11/09 22:03:21]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
[0m
[11/09 22:03:25]  Improved number of small numbers from 49 to 51 out of a max of 101
[11/09 22:03:25]  Verifer returned sat in 3.798734 secs.
[11/09 22:03:25]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0          -3361.462646          -3361.465978        -3361.462646         0.006836         0.006836        -3361.465978               0.0  0.003332
1          -3336.299596          -3336.299596        -3336.299596        25.166382        25.166382        -3336.299596               0.0  0.000000
2          -3311.133214          -3311.133214        -3311.133214        25.166382        25.166382        -3311.133214               0.0  0.000000
3          -3285.966833          -3285.966833        -3285.966833        25.166382        25.166382        -3285.966833               0.0  0.000000
4          -3260.800451          -3260.800451        -3260.800451        25.166382        25.166382        -3260.800451               0.0  0.000000
5          -3235.634069          -3235.634069        -3235.634069        25.166382        25.166382        -3235.634069               0.0  0.000000
6          -3210.467687          -3210.467687        -3210.467687        25.166382        25.166382        -3210.467687               0.0  0.000000
7          -3185.301305          -3185.301305        -3185.301305        25.166382        25.166382        -3185.301305               0.0  0.000000
8          -3160.134923          -3160.134923        -3160.134923        25.166382        25.166382        -3160.134923               0.0  0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, alpha=7/4096, buf_size=7/2048.[0m
[11/09 22:03:29]  --------------------------------------------------------------------------------
[11/09 22:03:29]  Iteration: 68 (30 solution, 37 counterexamples)
[11/09 22:20:46]  Generator returned sat in 1035.809202 secs.
[11/09 22:20:46]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 22:20:53]  Verifer returned unsat in 6.959818 secs.
[11/09 22:21:32]  Improved gap from 0.0 to 100
[11/09 22:21:37]  Improved number of small numbers from 40 to 45 out of a max of 121
[11/09 22:21:37]  Verifer returned sat in 43.678217 secs.
[11/09 22:21:37]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         7370.908691         7304.474475       7370.908691       0.416016       0.416016       7304.474475        0.000000                7304.474475    -115.920654   66.434217        0.207913
1         7470.804843         7370.804843       7470.804843     166.330369     166.330369       7370.804843        0.000000                7370.804843    -115.920654  100.000000        0.104065
2         7571.012973         7550.764097       7571.012973     200.208130     200.208130       7550.764097        0.104065                7550.764097    -115.920654   20.144811        0.208130
3         7674.117038         7637.540887       7674.117038     123.248876     123.248876       7637.540887        3.208130                7637.540887    -115.920654   33.368022        0.208130
4         7774.221103         7764.055218       7774.221103     133.472087     133.472087       7764.055218        3.312195                7764.055218    -115.920654    6.853690        0.208130
5         7874.117038         7824.411156       7874.117038     106.749625     106.749625       7824.411156        3.312195                7824.411156    -115.920654   46.393688        0.104065
6         7974.325168         7970.700779       7974.325168     146.601817     146.601817       7970.700779        3.416260                7970.700779    -115.920654    0.208130        0.208130
7         8077.543883         8070.700779       8077.543883     103.426845     103.426845       8070.700779        6.634975                8070.700779    -115.920654    0.208130        0.208130
8         8200.584630         8070.804688       8200.584630     123.248876     123.248876       8070.804688       29.675721                8070.804688    -115.920654  100.104221        0.208130
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=5, loss_amount=2764487/104448, 
, alpha=1705/16384, buf_size=1705/8192.[0m
[11/09 22:21:41]  --------------------------------------------------------------------------------
[11/09 22:21:41]  Iteration: 69 (30 solution, 38 counterexamples)
[11/09 22:26:29]  Generator returned sat in 286.692911 secs.
[11/09 22:26:29]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 22:26:34]  Improved number of small numbers from 44 to 46 out of a max of 101
[11/09 22:26:34]  Verifer returned sat in 5.528762 secs.
[11/09 22:26:34]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -3379.133789          -3390.606000        -3379.133789         0.006592         0.006592        -3390.606000          0.000000  11.472211
1          -3295.606000          -3295.606000        -3295.606000        95.000000        95.000000        -3295.606000          0.000000   0.000000
2          -3184.130184          -3195.606000        -3184.130184       111.475816       111.475816        -3195.606000          0.003418  11.472398
3          -3115.306052          -3115.309470        -3115.306052        80.296530        80.296530        -3115.309470          0.003418   0.000000
4          -2979.275032          -3015.309470        -2979.275032       136.031020       136.031020        -3015.309470         24.562040  11.472398
5          -2917.802634          -2942.364674        -2917.802634        72.944795        72.944795        -2942.364674         24.562040   0.000000
6          -2848.533706          -2873.095746        -2848.533706        69.268928        69.268928        -2873.095746         24.562040   0.000000
7          -2737.057890          -2773.095746        -2737.057890       111.475816       111.475816        -2773.095746         24.565458  11.472398
8          -2681.099293          -2705.664752        -2681.099293        67.430994        67.430994        -2705.664752         24.565458   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=53447/2176, 
, alpha=49913/4352, buf_size=399423/34816.[0m
[11/09 22:26:38]  --------------------------------------------------------------------------------
[11/09 22:26:38]  Iteration: 70 (30 solution, 39 counterexamples)
[11/09 22:52:09]  Generator returned sat in 1529.151650 secs.
[11/09 22:52:09]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 22:52:14]  Improved number of small numbers from 24 to 26 out of a max of 101
[11/09 22:52:14]  Verifer returned sat in 5.001428 secs.
[11/09 22:52:14]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -2818.102295          -2843.103073        -2818.102295         0.006348         0.006348        -2843.103073          0.000000  25.000778
1          -2718.098953          -2743.103073        -2718.098953       125.004120       125.004120        -2743.103073          0.003296  25.000824
2          -2663.096481          -2663.099777        -2663.096481        80.003296        80.003296        -2663.099777          0.003296   0.000000
3          -2593.091537          -2593.094833        -2593.091537        70.004944        70.004944        -2593.094833          0.003296   0.000000
4          -2453.089890          -2493.094833        -2453.089890       140.001648       140.001648        -2493.094833         15.004120  25.000824
5          -2413.084946          -2428.089066        -2413.084946        65.005768        65.005768        -2428.089066         15.004120   0.000000
6          -2350.578766          -2365.582886        -2350.578766        62.506180        62.506180        -2365.582886         15.004120   0.000000
7          -2225.574646          -2265.582886        -2225.574646       125.004120       125.004120        -2265.582886         15.007416  25.000824
8          -2189.319084          -2204.326500        -2189.319084        61.256386        61.256386        -2204.326500         15.007416   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=491655/32768, 
, alpha=163813/8192, buf_size=819227/32768.[0m
[11/09 22:52:18]  --------------------------------------------------------------------------------
[11/09 22:52:18]  Iteration: 71 (30 solution, 40 counterexamples)
[11/09 22:53:10]  Generator returned sat in 51.486584 secs.
[11/09 22:53:10]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 22:53:16]  Improved number of small numbers from 41 to 43 out of a max of 101
[11/09 22:53:16]  Verifer returned sat in 5.135066 secs.
[11/09 22:53:16]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -3188.117920          -3188.119720        -3188.117920         0.006104         0.006104        -3188.119720          0.000000   0.001801
1          -3088.132416          -3088.132416        -3088.132416        99.987305        99.987305        -3088.132416          0.000000   0.000000
2          -2933.135590          -2988.132416        -2933.135590       154.996826       154.996826        -2988.132416          0.001587  54.995239
3          -2908.135590          -2908.137177        -2908.135590        79.995239        79.995239        -2908.137177          0.001587   0.000000
4          -2838.136383          -2838.137970        -2838.136383        69.999207        69.999207        -2838.137970          0.001587   0.000000
5          -2718.140350          -2738.137970        -2718.140350       119.996033       119.996033        -2738.137970          0.001587  19.996033
6          -2583.139557          -2638.137970        -2583.139557       154.996826       154.996826        -2638.137970          0.003174  54.995239
7          -2558.133209          -2558.136383        -2558.133209        80.001587        80.001587        -2558.136383          0.003174   0.000000
8          -2488.130829          -2488.134003        -2488.130829        70.002380        70.002380        -2488.134003          0.003174   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=13/8192, 
, alpha=163827/8192, buf_size=450521/8192.[0m
[11/09 22:53:20]  --------------------------------------------------------------------------------
[11/09 22:53:20]  Iteration: 72 (30 solution, 41 counterexamples)
[11/09 23:01:53]  Generator returned sat in 512.108106 secs.
[11/09 23:01:53]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha
else:
	expr = 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 23:01:56]  Improved number of small numbers from 35 to 37 out of a max of 101
[11/09 23:01:56]  Verifer returned sat in 2.786084 secs.
[11/09 23:01:56]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          -3641.812500          -3641.815460        -3641.812500         0.006104         0.006104        -3641.815460          0.000000   0.002960
1          -3541.812408          -3541.815460        -3541.812408       100.003052       100.003052        -3541.815460          0.000000   0.003052
2          -3441.812408          -3441.815460        -3441.812408       100.003052       100.003052        -3441.815460          0.000000   0.003052
3          -3291.813934          -3341.815460        -3291.813934       150.001526       150.001526        -3341.815460         33.667175  16.334351
4          -3224.479584          -3258.146759        -3224.479584        83.668701        83.668701        -3258.146759         33.667175   0.000000
5          -3148.976532          -3182.643707        -3148.976532        75.503052        75.503052        -3182.643707         33.667175   0.000000
6          -3031.639130          -3082.643707        -3031.639130       117.337402       117.337402        -3082.643707         34.670227  16.334351
7          -2976.553253          -3011.223480        -2976.553253        71.420227        71.420227        -3011.223480         34.670227   0.000000
8          -2907.174438          -2941.844666        -2907.174438        69.378815        69.378815        -2941.844666         34.670227   0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=2, loss_amount=8217/8192, 
, alpha=66893/4096, buf_size=133811/8192.[0m
[11/09 23:02:00]  --------------------------------------------------------------------------------
[11/09 23:02:00]  Iteration: 73 (30 solution, 42 counterexamples)
[11/09 23:03:22]  Generator returned unsat in 80.811993 secs.
[11/09 23:03:22]  [96mNo more solutions found[0m
[11/09 23:03:22]  Final solutions:
[11/09 23:03:22]  0: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 23:03:22]  1: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
[0m
[11/09 23:03:22]  2: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 23:03:22]  3: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 23:03:22]  4: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 23:03:22]  5: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 23:03:22]  6: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 23:03:22]  7: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  8: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  9: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  10: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 23:03:22]  11: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 23:03:22]  12: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  13: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  14: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 23:03:22]  15: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  16: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  17: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 23:03:22]  18: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  19: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
[0m
[11/09 23:03:22]  20: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  21: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  22: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 0alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
[0m
[11/09 23:03:22]  23: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 23:03:22]  24: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 23:03:22]  25: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
[0m
[11/09 23:03:22]  26: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
[0m
[11/09 23:03:22]  27: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha
else:
	expr = 2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
[0m
[11/09 23:03:22]  28: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
[0m
[11/09 23:03:22]  29: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = 2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha
else:
	expr = 3/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[11/09 23:03:22]  Took 20775.075037 secs.
