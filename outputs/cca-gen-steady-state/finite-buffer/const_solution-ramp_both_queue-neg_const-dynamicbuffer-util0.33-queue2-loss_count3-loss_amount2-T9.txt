[08/30 15:18:53]  --------------------------------------------------------------------------------
[08/30 15:18:53]  Iteration: 1 (0 solution, 0 counterexamples)
[08/30 15:18:53]  Generator returned sat in 0.004076 secs.
[08/30 15:18:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:18:53]  Improved number of small numbers from 100 to 100 out of a max of 100
[08/30 15:18:53]  Verifer returned sat in 0.288694 secs.
[08/30 15:18:53]  Counter example: 
[93m   tot_arrival_t  tot_service_t  wasted_t  arrival_0,t  cwnd_0,t  service_0,t  losts_0,t  queue_t  bottle_queue_t
0       -3207.25        -3507.3    3507.3     -3207.25      0.05      -3507.3       0.00   300.05          300.05
1       -3207.25        -3407.3    3507.3     -3207.25      0.05      -3407.3       0.00   200.05          200.05
2       -3007.30        -3307.3    3507.3     -3007.30    400.00      -3307.3       0.00   300.00          300.00
3       -2907.20        -3307.3    3507.3     -2907.20    400.10      -3307.3       0.05   400.05          300.05
4       -2106.05        -3139.3    3507.3     -2106.05   1201.20      -3139.3     701.20   332.05          300.05
5         501.30        -3070.3    3507.3       501.30   2939.40      -3070.3    3208.55   363.05          300.05
6        6492.05        -3007.3    3507.3      6492.05   6353.80      -3007.3    9099.30   400.05          300.05
7       19400.60        -2907.3    3507.3     19400.60  13308.60      -2907.3   21907.85   400.05          300.05
8       46082.75        -2807.3    3507.3     46082.75  27082.20      -2807.3   48490.00   400.05          300.05
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=238944/5, 
, buffer=6001/20.[0m
[08/30 15:18:54]  --------------------------------------------------------------------------------
[08/30 15:18:54]  Iteration: 2 (0 solution, 1 counterexamples)
[08/30 15:18:54]  Generator returned sat in 0.113880 secs.
[08/30 15:18:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 3/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:18:54]  Improved gap from 0.00125 to 100
[08/30 15:18:54]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/30 15:18:54]  Verifer returned sat in 0.213891 secs.
[08/30 15:18:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0   23474.934375   23474.931875 -23474.933125  23474.934375    0.049805  23474.931875    0.00000    0.00250         0.00125
1   23474.934375   23474.933125 -23474.933125  23474.934375    0.001250  23474.933125    0.00000    0.00125       -99.99875
2   23674.941875   23574.933125 -23474.933125  23674.941875  200.008750  23574.933125    0.00000  100.00875         0.00875
3   23774.944375   23685.933125 -23474.933125  23774.944375  200.011250  23685.933125    0.00125   89.01000         0.01000
4   23774.944375   23774.933125 -23474.933125  23774.944375    0.010000  23774.933125    0.00125    0.01000       -99.99000
5   24224.939375   23874.933125 -23474.933125  24224.939375  450.005000  23874.933125  249.99625  100.01000         0.01000
6   24224.939375   23974.933125 -23474.933125  24224.939375    0.010000  23974.933125  249.99625    0.01000       -99.99000
7   24658.434375   24174.933125 -23474.933125  24658.434375  433.505000  24174.933125  483.49125    0.01000         0.01000
8   24658.434375   24174.933125 -23474.933125  24658.434375    0.010000  24174.933125  483.49125    0.01000       -99.99000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=48349/100, 
, buffer=1/100.[0m
[08/30 15:18:54]  --------------------------------------------------------------------------------
[08/30 15:18:54]  Iteration: 3 (0 solution, 2 counterexamples)
[08/30 15:18:54]  Generator returned sat in 0.135835 secs.
[08/30 15:18:54]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:18:55]  Improved gap from 0.00125 to 31.25
[08/30 15:18:55]  Improved number of small numbers from 31 to 101 out of a max of 101
[08/30 15:18:55]  Verifer returned sat in 0.528301 secs.
[08/30 15:18:55]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   22759.112305   22659.087646 -23132.937744  22759.112305    0.049316  22659.087646    0.000000  100.024658        0.024658
1   22759.112305   22759.087646 -23132.937744  22759.112305    0.024658  22759.087646    0.000000    0.024658      -99.975342
2   23562.011963   22959.087402 -23132.937744  23562.011963  802.924316  22959.087402  368.649658  234.274902      234.274658
3   23562.011963   23059.087402 -23132.937744  23562.011963   36.250000  23059.087402  368.649658  134.274902      134.274658
4   23562.011963   23159.087646 -23132.937744  23562.011963   35.250000  23159.087646  368.649658   34.274658       34.274658
5   23562.011963   23162.337646 -23067.437744  23562.011963   34.250000  23162.337646  368.649658   31.024658       -0.225342
6   23564.237305   23195.562988 -23000.663086  23564.237305   33.250000  23195.562988  368.649658    0.024658      -31.225342
7   23596.462646   23226.812988 -22931.913086  23596.462646   32.250000  23226.812988  368.649658    1.000000      -30.250000
8   23626.712646   23258.062988 -22931.913086  23626.712646   31.250000  23258.062988  368.649658    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=959589/4096.[0m
[08/30 15:18:55]  --------------------------------------------------------------------------------
[08/30 15:18:55]  Iteration: 4 (0 solution, 3 counterexamples)
[08/30 15:18:55]  Generator returned sat in 0.052781 secs.
[08/30 15:18:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:18:55]  Improved gap from 29.25 to 100
[08/30 15:18:56]  Improved number of small numbers from 57 to 101 out of a max of 101
[08/30 15:18:56]  Verifer returned sat in 0.310109 secs.
[08/30 15:18:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   23059.112305   22759.087646 -23132.937744  23059.112305    0.049072  22759.087646   0.000000  300.024658      300.024658
1   23159.124756   22759.087646 -23132.937744  23159.124756  400.037109  22759.087646   0.012451  400.024658      300.024658
2   23259.124512   22859.087646 -23132.937744  23259.124512  500.024414  22859.087646   0.012451  400.024414      300.024414
3   23259.136963   23059.062988 -23132.937744  23259.136963  400.036865  23059.062988   0.012451  200.061523      200.036865
4   23459.112305   23059.087646 -23132.937744  23459.112305  400.036865  23059.087646   0.012451  400.012207      300.012207
5   23459.136963   23259.062744 -23132.937744  23459.136963  400.036865  23259.062744   0.012451  200.061768      200.036865
6   23659.112061   23359.075439 -23132.937744  23659.112061  400.036865  23359.075439   0.012451  300.024170      300.011963
7   23759.124756   23459.087402 -23132.937744  23759.124756  400.036865  23459.087402   0.012451  300.024902      300.024658
8   23859.136719   23459.087646 -23132.937744  23859.136719  400.036865  23459.087646   0.024414  400.024658      300.024658
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=49/4096, 
, buffer=1228901/4096.[0m
[08/30 15:18:56]  --------------------------------------------------------------------------------
[08/30 15:18:56]  Iteration: 5 (0 solution, 4 counterexamples)
[08/30 15:18:56]  Generator returned sat in 0.031344 secs.
[08/30 15:18:56]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:18:56]  Improved gap from 0.0 to 0
[08/30 15:18:57]  Improved number of small numbers from 60 to 73 out of a max of 101
[08/30 15:18:57]  Verifer returned sat in 0.690219 secs.
[08/30 15:18:57]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   23109.122070   23109.121094 -23582.971104  23109.122070    0.049072  23109.121094    0.00000    0.000977      -99.998936
1   23409.124756   23209.121006 -23582.971104  23409.124756  300.003662  23209.121006    0.00125  200.002500      100.002500
2   23409.124756   23309.121006 -23582.971104  23409.124756  200.002441  23309.121006    0.00125  100.002500        0.002500
3   23609.123506   23509.120850 -23582.971104  23609.123506  300.001250  23509.120850    0.00125  100.001406      100.001250
4   23609.123506   23609.111084 -23582.971104  23609.123506    0.010000  23609.111084    0.00125    0.011172        0.001250
5   23609.123506   23609.121006 -23482.972412  23609.123506    0.010000  23609.121006    0.00125    0.001250       -0.000059
6   23609.132256   23609.129756 -23382.981104  23609.132256    0.010000  23609.129756    0.00125    0.001250        0.000000
7   23609.141006   23609.131006 -23282.989990  23609.141006    0.010000  23609.131006    0.00125    0.008750       -0.000137
8   23609.142256   23609.139893 -23282.989990  23609.142256    0.010000  23609.139893    0.00125    0.001113      -99.998887
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=40001/400.[0m
[08/30 15:18:57]  --------------------------------------------------------------------------------
[08/30 15:18:57]  Iteration: 6 (0 solution, 5 counterexamples)
[08/30 15:18:58]  Generator returned sat in 0.396763 secs.
[08/30 15:18:58]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:18:58]  Improved gap from 0.0003125 to 100
[08/30 15:18:58]  Improved number of small numbers from 78 to 83 out of a max of 101
[08/30 15:18:58]  Verifer returned sat in 0.396959 secs.
[08/30 15:18:58]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   23309.173828   22909.124756 -23382.974854  23309.173828    0.049072  22909.124756        0.0  400.049072      300.049072
1   23409.124756   23109.124756 -23382.974854  23409.124756  500.000000  23109.124756        0.0  300.000000      300.000000
2   23409.124756   23209.124756 -23382.974854  23409.124756    0.024658  23209.124756        0.0  200.000000      200.000000
3   23409.124756   23309.124512 -23382.974854  23409.124756   13.469517  23309.124512        0.0  100.000244      100.000000
4   23409.124756   23358.222168 -23382.974854  23409.124756   25.939034  23358.222168        0.0   50.902588        0.000000
5   23409.124756   23409.124756 -23382.974854  23409.124756   50.878067  23409.124756        0.0    0.000000     -100.000000
6   23509.880890   23509.124756 -23382.974854  23509.880890  100.756134  23509.124756        0.0    0.756134      -99.243866
7   23709.637024   23709.124756 -23382.974854  23709.637024  200.512268  23709.124756        0.0    0.512268        0.512268
8   24109.149292   23709.124756 -23382.974854  24109.149292  400.024536  23709.124756        0.0  400.024536      300.024536
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=1229001/4096.[0m
[08/30 15:18:58]  --------------------------------------------------------------------------------
[08/30 15:18:58]  Iteration: 7 (0 solution, 6 counterexamples)
[08/30 15:18:59]  Generator returned sat in 0.441264 secs.
[08/30 15:18:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:18:59]  Improved gap from 0.00125 to 100
[08/30 15:19:00]  Improved number of small numbers from 64 to 72 out of a max of 101
[08/30 15:19:00]  Verifer returned sat in 0.818561 secs.
[08/30 15:19:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t     cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   22705.610107   22705.607422 -23382.974854  22705.610107     0.048828  22705.607422    0.000000    0.002686      -99.997310
1   22905.607422   22905.606167 -23382.974854  22905.607422   200.000000  22905.606167    0.000000    0.001255        0.000005
2   23005.607417   22905.607417 -23382.974854  23005.607417   100.001250  22905.607417    0.000000  100.000000        0.000000
3   23808.134292   23005.607417 -23382.974854  23808.134292   902.526875  23005.607417    0.001250  802.525625      702.525625
4   23808.134292   23105.607417 -23382.974854  23808.134292     0.010000  23105.607417    0.001250  702.525625      602.525625
5   23808.134292   23205.607417 -23382.974854  23808.134292   201.016250  23205.607417    0.001250  602.525625      502.525625
6   23808.134292   23305.607417 -23382.974854  23808.134292   602.524375  23305.607417    0.001250  502.525625      402.525625
7   24510.395229   23505.607178 -23382.974854  24510.395229  1204.786562  23505.607178  302.262187  702.525864      702.525625
8   24510.395229   23505.607417 -23382.974854  24510.395229     0.010000  23505.607417  302.262187  702.525625      602.525625
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=193447/640, 
, buffer=1124041/1600.[0m
[08/30 15:19:00]  --------------------------------------------------------------------------------
[08/30 15:19:00]  Iteration: 8 (0 solution, 7 counterexamples)
[08/30 15:19:00]  Generator returned sat in 0.478902 secs.
[08/30 15:19:00]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:02]  Improved gap from 0.0 to 23.4375
[08/30 15:19:02]  Improved number of small numbers from 54 to 101 out of a max of 101
[08/30 15:19:02]  Verifer returned sat in 1.784710 secs.
[08/30 15:19:02]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0   22954.855713   22906.931885 -23483.093018  22954.855713    0.048584  22906.931885   0.000000  47.923828        1.000000
1   23054.831299   23053.855713 -23483.093018  23054.831299  147.899414  23053.855713   0.000000   0.975586        0.975586
2   23153.855713   23147.325928 -23483.093018  23153.855713  100.000000  23147.325928   0.000000   6.529785        0.000000
3   23177.293213   23153.855713 -23406.530518  23177.293213   29.967285  23153.855713   0.000000  23.437500        0.000000
4   23278.317627   23277.293213 -23406.530518  23278.317627  124.461914  23277.293213   0.024414   1.000000        1.000000
5   23278.317627   23277.293213 -23329.968018  23278.317627    1.000000  23277.293213   0.024414   1.000000      -22.437500
6   23343.301270   23300.730713 -23272.514404  23343.301270   65.983643  23300.730713   0.024414  42.546143       -0.000244
7   23375.192627   23343.277100 -23204.405762  23375.192627   74.437500  23343.277100   0.024414  31.891113       -0.000244
8   23377.293457   23376.269043 -23204.405518  23377.293457   33.991943  23376.269043   0.024414   1.000000      -97.899170
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=1, loss_amount=0, 
, buffer=1.[0m
[08/30 15:19:03]  --------------------------------------------------------------------------------
[08/30 15:19:03]  Iteration: 9 (0 solution, 8 counterexamples)
[08/30 15:19:03]  Generator returned sat in 0.125134 secs.
[08/30 15:19:03]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:03]  Improved gap from 0.0 to 100
[08/30 15:19:03]  Improved number of small numbers from 52 to 101 out of a max of 101
[08/30 15:19:03]  Verifer returned sat in 0.512661 secs.
[08/30 15:19:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   23053.867676   23013.892090 -23583.093018  23053.867676    0.048584  23013.892090    0.000000   39.975586        0.012207
1   23053.867676   23053.855713 -23583.093018  23053.867676    0.012207  23053.855713    0.000000    0.011963      -99.987793
2   23153.867920   23153.855469 -23583.093018  23153.867920  100.012207  23153.855469    0.000000    0.012451      -99.987549
3   23353.892090   23306.558594 -23583.093018  23353.892090  200.036621  23306.558594    0.012207   47.321289        0.024414
4   23453.904053   23413.880127 -23583.093018  23453.904053  147.333252  23413.880127    0.024170   39.999756        0.024414
5   23594.916504   23553.855469 -23583.093018  23594.916504  181.012207  23553.855469   41.036621    0.024414        0.024414
6   23795.892090   23604.114258 -23583.093018  23795.892090  201.000000  23604.114258  142.012207   49.765625        0.024414
7   23895.904297   23706.546631 -23583.093018  23895.904297  149.777832  23706.546631  142.024414   47.333252        0.024414
8   23995.904297   23753.855713 -23583.093018  23995.904297  147.333252  23753.855713  142.024414  100.024170        0.024414
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, loss_amount=581633/4096, 
, buffer=25/1024.[0m
[08/30 15:19:04]  --------------------------------------------------------------------------------
[08/30 15:19:04]  Iteration: 10 (0 solution, 9 counterexamples)
[08/30 15:19:04]  Generator returned sat in 0.570603 secs.
[08/30 15:19:04]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:19:05]  Improved gap from 0.0 to 7.8125
[08/30 15:19:05]  Improved number of small numbers from 60 to 99 out of a max of 101
[08/30 15:19:05]  Verifer returned sat in 0.661767 secs.
[08/30 15:19:05]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   22727.322021   22692.453613 -23583.093018  22727.322021    0.048340  22692.453613        0.0   34.868408       34.868408
1   22792.477783   22692.453857 -23583.093018  22792.477783  100.024170  22692.453857        0.0  100.023926        0.024170
2   22792.477783   22792.453857 -23583.093018  22792.477783  100.000000  22792.453857        0.0    0.023926      -99.975830
3   23103.676514   22992.453613 -23583.093018  23103.676514  311.222656  22992.453613        0.0  111.222900      111.222900
4   23147.064941   23070.735107 -23583.093018  23147.064941  154.611328  23070.735107        0.0   76.329834       54.611328
5   23147.064941   23115.005859 -23542.773682  23147.064941   76.305664  23115.005859        0.0   32.059082       -5.069336
6   23152.158691   23152.134521 -23450.586426  23152.158691   37.152832  23152.134521        0.0    0.024170       -7.788330
7   23169.710938   23161.898193 -23360.350342  23169.710938   17.576416  23161.898193        0.0    7.812744        0.000000
8   23169.710938   23169.710938 -23268.162842  23169.710938    7.788208  23169.710938        0.0    0.000000       -7.812500
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=113917/1024.[0m
[08/30 15:19:05]  --------------------------------------------------------------------------------
[08/30 15:19:05]  Iteration: 11 (0 solution, 10 counterexamples)
[08/30 15:19:06]  Generator returned sat in 0.062983 secs.
[08/30 15:19:06]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:19:06]  Improved gap from 6.312744140625 to 9.375
[08/30 15:19:06]  Improved number of small numbers from 64 to 101 out of a max of 101
[08/30 15:19:06]  Verifer returned sat in 0.594562 secs.
[08/30 15:19:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   22425.564453   22225.564453 -23605.152832  22425.564453    0.048340  22225.564453        0.0  200.000000      100.000000
1   22425.564453   22416.189453 -23605.152832  22425.564453    0.023926  22416.189453        0.0    9.375000        0.000000
2   22525.564209   22462.411865 -23605.152832  22525.564209  109.374756  22462.411865        0.0   63.152344       -0.000244
3   22763.185303   22612.774414 -23605.152832  22763.185303  300.773438  22612.774414        0.0  150.410889      137.620850
4   22763.185303   22683.007812 -23605.152832  22763.185303  150.386719  22683.007812        0.0   80.177490       37.620850
5   22763.185303   22725.564453 -23542.773682  22763.185303   75.193359  22725.564453        0.0   37.620850        0.000000
6   22763.185303   22763.185303 -23452.148682  22763.185303   37.596680  22763.185303        0.0    0.000000       -9.375000
7   22781.983643   22772.560303 -23361.572021  22781.983643   18.798340  22772.560303        0.0    9.423340        0.000000
8   22781.983643   22781.983643 -23270.947266  22781.983643    9.399170  22781.983643        0.0    0.000000       -9.375244
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=281897/2048.[0m
[08/30 15:19:07]  --------------------------------------------------------------------------------
[08/30 15:19:07]  Iteration: 12 (0 solution, 11 counterexamples)
[08/30 15:19:07]  Generator returned sat in 0.164075 secs.
[08/30 15:19:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:19:22]  Improved gap from 0.0 to 1.5625
[08/30 15:19:23]  Improved number of small numbers from 44 to 60 out of a max of 101
[08/30 15:19:23]  Verifer returned sat in 16.369140 secs.
[08/30 15:19:23]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t  cwnd_0,t   service_0,t  losts_0,t   queue_t  bottle_queue_t
0   20708.411377   20703.839646 -24121.611816  20708.411377  0.048096  20703.839646        0.0  4.571731        0.024099
1   20708.411377   20708.387294 -24023.174332  20708.411377  0.012207  20708.387294        0.0  0.024083       -1.538417
2   20711.512294   20709.949794 -23924.737061  20711.512294  3.125000  20709.949794        0.0  1.562500       -0.000229
3   20712.025762   20712.013677 -23827.800537  20712.025762  2.075968  20712.013677        0.0  0.012085       -2.550237
4   20716.138677   20714.576177 -23729.363281  20716.138677  4.125000  20714.576177        0.0  1.562500       -0.000066
5   20718.733119   20716.162847 -23631.957764  20718.733119  4.156942  20716.162847        0.0  2.570272       -0.000107
6   20720.347845   20718.785345 -23533.572383  20720.347845  4.184998  20718.785345        0.0  1.562500        0.000000
7   20723.263677   20720.347845 -23436.488281  20723.263677  4.478333  20720.347845        0.0  2.915833       -0.000066
8   20724.472845   20724.472656 -23339.260010  20724.472845  4.125000  20724.472656        0.0  0.000188       -1.562627
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=99/4096.[0m
[08/30 15:19:24]  --------------------------------------------------------------------------------
[08/30 15:19:24]  Iteration: 13 (0 solution, 12 counterexamples)
[08/30 15:19:24]  Generator returned sat in 0.367213 secs.
[08/30 15:19:24]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:19:24]  Improved gap from 0.0 to 100
[08/30 15:19:25]  Improved number of small numbers from 55 to 65 out of a max of 101
[08/30 15:19:25]  Verifer returned sat in 0.732338 secs.
[08/30 15:19:25]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   20211.515381   20211.513916 -24424.713493  20211.515381    0.047852  20211.513916    0.000000    0.001465       -0.003574
1   20311.512451   20311.510622 -24424.713493  20311.512451   99.998535  20311.510622    0.000000    0.001829       -0.006504
2   20311.520622   20311.518955 -24424.713493  20311.520622    0.010000  20311.518955    0.000000    0.001667      -99.998333
3   20511.528955   20511.515625 -24424.713493  20511.528955  200.010000  20511.515625    0.001667    0.011663        0.008333
4   20511.528955   20511.518955 -24424.713493  20511.528955    0.010000  20511.518955    0.001667    0.008333      -99.991667
5   20711.528955   20711.518955 -24424.713493  20711.528955  200.008333  20711.518955    0.001667    0.008333        0.008333
6   21111.520622   20811.518955 -24424.713493  21111.520622  400.000000  20811.518955  299.993333    0.008333        0.008333
7   21111.522288   20811.528955 -24424.713493  21111.522288    0.010000  20811.528955  299.993333    0.000000      -99.990000
8   21411.532288   20911.519043 -24424.713493  21411.532288  300.010000  20911.519043  400.005000  100.008245        0.008333
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=120001/300, 
, buffer=1/120.[0m
[08/30 15:19:25]  --------------------------------------------------------------------------------
[08/30 15:19:25]  Iteration: 14 (0 solution, 13 counterexamples)
[08/30 15:19:25]  Generator returned sat in 0.135542 secs.
[08/30 15:19:26]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:19:26]  Improved gap from 0.0 to 100
[08/30 15:19:27]  Improved number of small numbers from 52 to 55 out of a max of 101
[08/30 15:19:27]  Verifer returned sat in 0.983609 secs.
[08/30 15:19:27]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   20609.025391   20609.001528 -24424.713379  20609.025391    0.047607  20609.001528    0.000000    0.023862        0.023862
1   20709.013491   20709.001528 -24424.713379  20709.013491  100.011963  20709.001528    0.000000    0.011963        0.011963
2   20809.001528   20809.001528 -24424.713379  20809.001528  100.000000  20809.001528    0.000000    0.000000        0.000000
3   20909.013491   20809.608381 -24424.713379  20909.013491  100.011963  20809.608381    0.000000   99.405111        0.011963
4   21010.215233   20909.001528 -24424.713379  21010.215233  200.606852  20909.001528    1.189779  100.023926        0.023926
5   21011.494733   21009.001528 -24424.713379  21011.494733  101.303426  21009.001528    1.189779    1.303426      -98.696574
6   21210.191307   21208.989565 -24424.713379  21210.191307  200.000000  21208.989565    1.189779    0.011963        0.000000
7   21609.560529   21309.001528 -24424.713379  21609.560529  399.381185  21309.001528  300.535075    0.023926        0.023926
8   21810.227196   21309.001528 -24424.713379  21810.227196  200.690592  21309.001528  401.201742  100.023926        0.023926
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=1638449/4096, 
, buffer=49/2048.[0m
[08/30 15:19:27]  --------------------------------------------------------------------------------
[08/30 15:19:27]  Iteration: 15 (0 solution, 14 counterexamples)
[08/30 15:19:28]  Generator returned sat in 0.654482 secs.
[08/30 15:19:28]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:19:28]  Improved gap from 0.952392578125 to 100
[08/30 15:19:29]  Improved number of small numbers from 25 to 36 out of a max of 101
[08/30 15:19:29]  Verifer returned sat in 1.603176 secs.
[08/30 15:19:29]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   20510.227051   20510.203125 -24424.737386  20510.227051    0.047363  20510.203125    0.000000    0.023926        0.011818
1   20510.227051   20510.215233 -24424.737386  20510.227051    0.011719  20510.215233    0.000000    0.011818      -99.988182
2   20809.209282   20610.215233 -24424.737386  20809.209282  298.994049  20610.215233    0.011902  198.982147       98.982147
3   21010.227135   20710.215233 -24424.737386  21010.227135  400.000000  20710.215233  101.029755  198.982147       98.982147
4   21010.244987   20909.203331 -24424.737386  21010.244987  199.000000  20909.203331  101.029755    0.011902       -1.000000
5   21409.221184   21010.215233 -24424.737386  21409.221184  398.988098  21010.215233  300.023804   98.982147       98.982147
6   21508.733086   21110.215233 -24424.737386  21508.733086  198.494049  21110.215233  300.023804   98.494049       98.494049
7   21810.239036   21110.215233 -24424.737386  21810.239036  400.000000  21110.215233  501.041656  198.982147       98.982147
8   21810.256889   21210.215332 -24424.737386  21810.256889  199.000000  21210.215332  501.041656   98.999901       -1.000000
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=6553795/16384, 
, buffer=3243447/32768.[0m
[08/30 15:19:30]  --------------------------------------------------------------------------------
[08/30 15:19:30]  Iteration: 16 (0 solution, 15 counterexamples)
[08/30 15:19:32]  Generator returned sat in 1.926110 secs.
[08/30 15:19:32]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:19:33]  Improved number of small numbers from 32 to 36 out of a max of 100
[08/30 15:19:33]  Verifer returned sat in 1.209916 secs.
[08/30 15:19:33]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   20510.227051   20510.215088 -24424.737386  20510.227051    0.047119  20510.215088    0.000000    0.011963        0.011818
1   20510.227051   20510.215233 -24424.737386  20510.227051    0.011475  20510.215233    0.000000    0.011818      -99.988182
2   20807.727060   20610.215233 -24424.737386  20807.727060  297.511827  20610.215233    0.011902  197.499926       97.499926
3   21009.227135   20710.215233 -24424.737386  21009.227135  399.000000  20710.215233  101.511976  197.499926       97.499926
4   21010.227209   20908.715183 -24424.737386  21010.227209  198.500000  20908.715183  101.511976    0.000050       -1.500000
5   21407.727110   21009.965133 -24424.737386  21407.727110  397.499950  21009.965133  300.011951   97.750025       97.499926
6   21507.727060   21110.215233 -24424.737386  21507.727060  197.749975  21110.215233  300.011951   97.499876       97.499876
7   21809.227184   21110.215233 -24424.737386  21809.227184  399.000000  21110.215233  501.512026  197.499926       97.499926
8   21810.227259   21210.215332 -24424.737305  21810.227259  198.500000  21210.215332  501.512026   98.499901       -1.499919
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=491520061/1228800, 
, buffer=79871939/819200.[0m
[08/30 15:19:33]  --------------------------------------------------------------------------------
[08/30 15:19:33]  Iteration: 17 (0 solution, 16 counterexamples)
[08/30 15:19:34]  Generator returned sat in 0.808745 secs.
[08/30 15:19:34]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:19:35]  Improved gap from 0.0 to 100
[08/30 15:19:35]  Improved number of small numbers from 48 to 101 out of a max of 101
[08/30 15:19:35]  Verifer returned sat in 0.555696 secs.
[08/30 15:19:35]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   20606.703369   20606.691895 -24424.737793  20606.703369    0.046875  20606.691895    0.000000    0.011475       -0.000244
1   20706.703613   20606.703613 -24424.737793  20706.703613  100.011719  20606.703613    0.000000  100.000000        0.000000
2   20706.703613   20706.703613 -24424.737793  20706.703613    0.011719  20706.703613    0.000000    0.000000     -100.000000
3   20908.750488   20905.691895 -24424.737793  20908.750488  202.046875  20905.691895    2.023438    1.035156        0.023438
4   21008.738770   21006.703613 -24424.737793  21008.738770  101.023438  21006.703613    2.023438    0.011719        0.011719
5   21407.727051   21007.203613 -24424.737793  21407.727051  399.000000  21007.203613  301.000000   99.523438        0.023438
6   21507.703613   21106.703613 -24424.737793  21507.703613  199.500000  21106.703613  301.000000  100.000000        0.000000
7   21607.715332   21306.703613 -24424.737793  21607.715332  200.011719  21306.703613  301.000000    0.011719        0.011719
8   21906.703613   21406.703369 -24424.737793  21906.703613  299.000000  21406.703369  499.976562    0.023682        0.023438
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=31869/64, 
, buffer=3/128.[0m
[08/30 15:19:35]  --------------------------------------------------------------------------------
[08/30 15:19:35]  Iteration: 18 (0 solution, 17 counterexamples)
[08/30 15:19:36]  Generator returned sat in 0.093837 secs.
[08/30 15:19:36]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:19:36]  Improved number of small numbers from 77 to 100 out of a max of 100
[08/30 15:19:36]  Verifer returned sat in 0.241364 secs.
[08/30 15:19:36]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   20606.703369   20604.721436 -24424.738037  20606.703369    0.046631  20604.721436    1.970459    0.011475       -1.970947
1   20708.691650   20607.703369 -24424.738037  20708.691650  101.999756  20607.703369    1.970459   99.017822        0.017334
2   20708.691650   20706.721191 -24424.737793  20708.691650    0.005859  20706.721191    1.970459    0.000000      -99.982422
3   20908.750244   20906.685791 -24424.737793  20908.750244  200.058594  20906.685791    2.023438    0.041016        0.023193
4   21008.738525   21006.703369 -24424.737793  21008.738525  100.029297  21006.703369    2.023438    0.011719        0.011475
5   21407.726807   21007.203613 -24424.737793  21407.726807  399.000000  21007.203613  301.000000   99.523193        0.023193
6   21507.703613   21106.703613 -24424.737793  21507.703613  199.500000  21106.703613  301.000000  100.000000        0.000000
7   21607.721436   21306.703369 -24424.737793  21607.721436  200.017822  21306.703369  301.000000    0.018066        0.017822
8   21907.703369   21406.703125 -24424.737793  21907.703369  300.000000  21406.703125  500.976562    0.023682        0.023193
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=31933/64, 
, buffer=95/4096.[0m
[08/30 15:19:36]  --------------------------------------------------------------------------------
[08/30 15:19:36]  Iteration: 19 (0 solution, 18 counterexamples)
[08/30 15:19:37]  Generator returned sat in 0.680621 secs.
[08/30 15:19:37]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:37]  Improved gap from 0.0 to 0
[08/30 15:19:37]  Improved number of small numbers from 47 to 101 out of a max of 101
[08/30 15:19:37]  Verifer returned sat in 0.274014 secs.
[08/30 15:19:37]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   21207.726807   21009.750244 -24424.737793  21207.726807    0.046631  21009.750244   0.000000  197.976562       97.976562
1   21207.726807   21109.750244 -24424.737793  21207.726807    0.023438  21109.750244   0.000000   97.976562       -2.023438
2   21309.750244   21308.773438 -24424.737793  21309.750244  200.000000  21308.773438   0.000000    0.976807        0.000000
3   21507.750244   21409.750000 -24424.737793  21507.750244  198.976807  21409.750000   0.023193   97.977051       97.976807
4   21607.750000   21509.750244 -24424.737793  21607.750000  197.976807  21509.750244   0.023193   97.976562       97.976562
5   21607.750000   21606.703369 -24422.714355  21607.750000    1.000000  21606.703369   0.023193    1.023438        0.000000
6   21607.750000   21607.726807 -24322.714355  21607.750000    1.000000  21607.726807   0.023193    0.000000        0.000000
7   21608.750000   21607.750000 -24223.714355  21608.750000    1.000000  21607.750000   0.023193    0.976807        0.000000
8   21608.773193   21608.726807 -24223.714355  21608.773193    1.000000  21608.726807   0.023193    0.023193      -99.976807
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=401313/4096.[0m
[08/30 15:19:38]  --------------------------------------------------------------------------------
[08/30 15:19:38]  Iteration: 20 (0 solution, 19 counterexamples)
[08/30 15:19:38]  Generator returned sat in 0.307435 secs.
[08/30 15:19:38]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:39]  Improved gap from 0.0 to 10.9375
[08/30 15:19:40]  Improved number of small numbers from 49 to 101 out of a max of 101
[08/30 15:19:40]  Verifer returned sat in 1.284227 secs.
[08/30 15:19:40]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   20942.231934   20818.974609 -24346.090088  20942.231934    0.046387  20818.974609   0.000000  123.257324       23.257324
1   20942.231934   20918.974609 -24346.089844  20942.231934  123.234131  20918.974609   0.000000   23.257324      -76.742432
2   21118.997803   21118.974365 -24346.089844  21118.997803  200.023193  21118.974365   0.000000    0.023438        0.023438
3   21264.974365   21197.208496 -24346.089844  21264.974365  146.000000  21197.208496  22.742432   45.023438       23.257568
4   21364.950928   21268.685303 -24346.089844  21364.950928  145.000000  21268.685303  22.742432   73.523193       23.234131
5   21364.950928   21318.974609 -24269.323975  21364.950928   73.500000  21318.974609  22.742432   23.233887        0.000000
6   21379.467041   21342.208740 -24183.840088  21379.467041   37.750000  21342.208740  22.742432   14.515869        0.000000
7   21384.826172   21356.724609 -24094.777588  21384.826172   19.875000  21356.724609  22.742432    5.359131       -5.578369
8   21390.404541   21367.662109 -24094.777344  21390.404541   10.937500  21367.662109  22.742432    0.000000      -99.999756
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=95263/4096.[0m
[08/30 15:19:40]  --------------------------------------------------------------------------------
[08/30 15:19:40]  Iteration: 21 (0 solution, 20 counterexamples)
[08/30 15:19:41]  Generator returned sat in 0.314062 secs.
[08/30 15:19:41]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:41]  Improved gap from 0.023486328125 to 100
[08/30 15:19:41]  Improved number of small numbers from 32 to 101 out of a max of 101
[08/30 15:19:41]  Verifer returned sat in 0.481196 secs.
[08/30 15:19:41]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   21226.976807   21164.488770 -24288.109619  21226.976807    0.046143  21164.488770   0.000000   62.488037       50.488037
1   21226.976807   21176.488770 -24288.109619  21226.976807    0.011475  21176.488770   0.000000   50.488037      -49.511963
2   21426.988525   21276.488770 -24288.109619  21426.988525  250.499756  21276.488770   0.011475  150.488281       50.488281
3   21527.000000   21473.488770 -24288.109619  21527.000000  250.499756  21473.488770   0.022949   53.488281       50.488281
4   21627.011719   21564.477051 -24288.109619  21627.011719  153.500000  21564.477051   0.034668   62.500000       50.488281
5   21757.505859   21676.488770 -24288.109619  21757.505859  192.994141  21676.488770  30.528809   50.488281       50.488281
6   21906.017578   21776.488770 -24288.109619  21906.017578  199.000000  21776.488770  79.040527   50.488281       50.488281
7   22006.029297   21873.477051 -24288.109619  22006.029297  150.500000  21873.477051  79.052246   53.500000       50.488281
8   22106.029297   21876.488770 -24288.109619  22106.029297  153.500000  21876.488770  79.052246  150.488281       50.488281
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, loss_amount=40457/512, 
, buffer=12925/256.[0m
[08/30 15:19:41]  --------------------------------------------------------------------------------
[08/30 15:19:41]  Iteration: 22 (0 solution, 21 counterexamples)
[08/30 15:19:43]  Generator returned sat in 1.033035 secs.
[08/30 15:19:43]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:43]  Improved gap from 0.0 to 100
[08/30 15:19:43]  Improved number of small numbers from 42 to 101 out of a max of 101
[08/30 15:19:43]  Verifer returned sat in 0.540093 secs.
[08/30 15:19:43]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   21510.566406   21429.589355 -24622.175781  21510.566406    0.045898  21429.589355    0.000000   80.977051        0.011475
1   21510.566406   21510.554932 -24622.175781  21510.566406    0.011719  21510.554932    0.000000    0.011475      -99.988525
2   21610.566406   21610.554932 -24622.175781  21610.566406  100.011475  21610.554932    0.000000    0.011475      -99.988525
3   21749.600830   21749.589355 -24622.175781  21749.600830  139.045898  21749.589355    0.000000    0.011475      -60.954102
4   21910.589355   21890.554932 -24622.175781  21910.589355  161.000000  21890.554932    0.011475   20.022949        0.022949
5   22050.566406   21951.589355 -24622.175781  22050.566406  160.000000  21951.589355   39.988525   58.988525        0.022949
6   22150.577881   22052.566162 -24622.175781  22150.577881  159.000000  22052.566162   40.000000   58.011719        0.022949
7   22250.566162   22210.554932 -24622.175781  22250.566162  158.000000  22210.554932   40.000000    0.011230        0.011230
8   22411.554932   22210.554932 -24622.175781  22411.554932  161.000000  22210.554932  100.977051  100.022949        0.022949
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=4, loss_amount=413555/4096, 
, buffer=47/2048.[0m
[08/30 15:19:44]  --------------------------------------------------------------------------------
[08/30 15:19:44]  Iteration: 23 (0 solution, 22 counterexamples)
[08/30 15:19:47]  Generator returned sat in 3.290353 secs.
[08/30 15:19:47]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:49]  Verifer returned unsat in 1.694500 secs.
[08/30 15:19:49]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:49]  --------------------------------------------------------------------------------
[08/30 15:19:49]  Iteration: 24 (1 solution, 22 counterexamples)
[08/30 15:19:50]  Generator returned sat in 0.251007 secs.
[08/30 15:19:50]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:50]  Verifer returned unsat in 0.931576 secs.
[08/30 15:19:50]  Proved solution: 
[1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:19:50]  --------------------------------------------------------------------------------
[08/30 15:19:50]  Iteration: 25 (2 solution, 22 counterexamples)
[08/30 15:19:51]  Generator returned sat in 0.188168 secs.
[08/30 15:19:51]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:19:52]  Improved gap from 0.0 to 23.4375
[08/30 15:19:52]  Improved number of small numbers from 53 to 101 out of a max of 101
[08/30 15:19:52]  Verifer returned sat in 1.124915 secs.
[08/30 15:19:52]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   22081.198486   21981.175537 -24726.866699  22081.198486    0.045898  21981.175537   0.000000  100.022949        0.022949
1   22081.198486   22081.187012 -24673.810547  22081.198486  100.011230  22081.187012   0.000000    0.011475      -46.920898
2   22228.130859   22228.119385 -24673.810547  22228.130859  146.943848  22228.119385   0.000000    0.011475        0.011475
3   22228.130859   22228.119385 -24597.248047  22228.130859    0.011230  22228.119385   0.000000    0.011475      -23.426025
4   22351.591309   22351.556885 -24597.248047  22351.591309  123.471924  22351.556885   0.011475    0.022949        0.022949
5   22352.568359   22351.556885 -24520.685791  22352.568359    1.000000  22351.556885   0.011475    1.000000      -22.437744
6   22413.287109   22376.403564 -24463.232910  22413.287109   61.718750  22376.403564   0.011475   36.872070       -4.266113
7   22450.557129   22417.541748 -24396.236816  22450.557129   74.142090  22417.541748   0.011475   33.003906        0.000000
8   22450.557129   22450.545654 -24396.236816  22450.557129   32.992432  22450.545654   0.011475    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=47/2048.[0m
[08/30 15:19:52]  --------------------------------------------------------------------------------
[08/30 15:19:52]  Iteration: 26 (2 solution, 23 counterexamples)
[08/30 15:19:53]  Generator returned sat in 0.179804 secs.
[08/30 15:19:53]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:19:54]  Improved gap from 0.0 to 23.4375
[08/30 15:19:54]  Improved number of small numbers from 94 to 101 out of a max of 101
[08/30 15:19:54]  Verifer returned sat in 0.976407 secs.
[08/30 15:19:54]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0   22457.990479   22358.759277 -24837.620117  22457.990479   0.045654  22358.759277        0.0  99.231201       99.231201
1   22457.990479   22457.967773 -24837.620117  22457.990479   0.022949  22457.967773        0.0   0.022705       -0.768799
2   22482.196777   22458.759277 -24761.057617  22482.196777  24.229004  22458.759277        0.0  23.437500        0.000000
3   22505.634033   22482.196777 -24684.495361  22505.634033  46.874756  22482.196777        0.0  23.437256       -0.000488
4   22543.915527   22515.250977 -24622.776367  22543.915527  61.718750  22515.250977        0.0  28.664551        0.000000
5   22543.915527   22543.915527 -24546.213867  22543.915527  28.641602  22543.915527        0.0   0.000000      -23.437500
6   22586.493652   22567.353027 -24469.651367  22586.493652  42.578125  22567.353027        0.0  19.140625       -4.296875
7   22609.931152   22590.790527 -24393.088867  22609.931152  42.578125  22590.790527        0.0  19.140625       -4.296875
8   22628.560303   22614.228027 -24393.088867  22628.560303  37.769775  22614.228027        0.0  14.332275      -85.667725
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=406451/4096.[0m
[08/30 15:19:54]  --------------------------------------------------------------------------------
[08/30 15:19:54]  Iteration: 27 (2 solution, 24 counterexamples)
[08/30 15:19:55]  Generator returned sat in 0.778068 secs.
[08/30 15:19:55]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)[0m
[08/30 15:19:56]  Improved gap from 0.0 to 100
[08/30 15:19:56]  Improved number of small numbers from 51 to 93 out of a max of 101
[08/30 15:19:56]  Verifer returned sat in 0.683594 secs.
[08/30 15:19:56]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   23055.257080   22944.077637 -25422.938721  23055.257080    0.045410  22944.077637        0.0  111.179443      111.179443
1   23055.257080   23044.077637 -25422.938721  23055.257080    0.022949  23044.077637        0.0   11.179443       11.179443
2   23155.234619   23044.077881 -25422.938721  23155.234619  111.156982  23044.077881        0.0  111.156738       11.156982
3   23155.234619   23155.211602 -25422.938721  23155.234619   59.259259  23155.211602        0.0    0.023017      -88.843018
4   23244.100491   23244.077664 -25422.938721  23244.100491   88.888889  23244.077664        0.0    0.022827      -99.977146
5   23377.410997   23344.077881 -25422.938721  23377.410997  133.333333  23344.077881        0.0   33.333116      -66.666640
6   23544.077881   23544.077637 -25422.938721  23544.077881  200.000000  23544.077637        0.0    0.000244        0.000244
7   23844.077637   23594.100342 -25422.938721  23844.077637  300.000000  23594.100342        0.0  249.977295      200.000000
8   24044.100342   23644.077881 -25422.938721  24044.100342  450.000000  23644.077881        0.0  400.022461      300.022705
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=614493/2048.[0m
[08/30 15:19:56]  --------------------------------------------------------------------------------
[08/30 15:19:56]  Iteration: 28 (2 solution, 25 counterexamples)
[08/30 15:19:59]  Generator returned sat in 2.000703 secs.
[08/30 15:19:59]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 3/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:19:59]  Improved gap from 0.0 to 100
[08/30 15:20:00]  Improved number of small numbers from 39 to 81 out of a max of 101
[08/30 15:20:00]  Verifer returned sat in 0.854747 secs.
[08/30 15:20:00]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   23175.502197   22373.438965 -25722.963867  23175.502197    0.045410  22373.438965        0.0  802.063232      702.063477
1   23275.479736   22473.438965 -25722.963867  23275.479736  902.040771  22473.438965        0.0  802.040771      702.041016
2   23275.479736   22673.438721 -25722.963867  23275.479736    0.022705  22673.438721        0.0  602.041016      602.041016
3   23275.479736   22773.438721 -25722.963867  23275.479736  120.523900  22773.438721        0.0  502.041016      502.041016
4   23275.479736   22873.438721 -25722.963867  23275.479736  179.785851  22873.438721        0.0  402.041016      402.041016
5   23275.479736   22873.438965 -25722.963867  23275.479736  268.678776  22873.438965        0.0  402.040771      302.041016
6   23275.479736   22973.438839 -25722.963867  23275.479736  402.018164  22973.438839        0.0  302.040898      202.041016
7   23575.466085   23073.438839 -25722.963867  23575.466085  602.027246  23073.438839        0.0  502.027246      402.027364
8   23975.479708   23173.438965 -25722.963867  23975.479708  902.040869  23173.438965        0.0  802.040743      702.040987
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=2875653/4096.[0m
[08/30 15:20:00]  --------------------------------------------------------------------------------
[08/30 15:20:00]  Iteration: 29 (2 solution, 26 counterexamples)
[08/30 15:20:01]  Generator returned sat in 0.498539 secs.
[08/30 15:20:01]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:20:02]  Improved gap from 0.0 to 23.4375
[08/30 15:20:03]  Improved number of small numbers from 55 to 67 out of a max of 101
[08/30 15:20:03]  Verifer returned sat in 1.610032 secs.
[08/30 15:20:03]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0   22553.916016   22505.032236 -25665.902617  22553.916016    0.045166  22505.032236    0.00000  48.883779        0.001279
1   22553.916016   22553.914795 -25665.902617  22553.916016   48.883545  22553.914795    0.00000   0.001221      -99.998721
2   22753.916016   22753.914736 -25665.902617  22753.916016  200.001221  22753.914736    0.00000   0.001279        0.001279
3   22753.916016   22753.914736 -25589.340117  22753.916016    0.001221  22753.914736    0.00000   0.001279      -23.436221
4   22877.355986   22877.352236 -25589.340117  22877.355986  123.441250  22877.352236    0.00125   0.002500        0.002500
5   22877.363486   22877.352236 -25512.777617  22877.363486    0.010000  22877.352236    0.00125   0.010000      -23.427500
6   22938.072236   22900.789736 -25450.059082  22938.072236   60.718750  22900.789736    0.00125  37.281250       -0.000215
7   22973.228486   22941.935570 -25385.215117  22973.228486   72.437500  22941.935570    0.00125  31.291667        0.000000
8   22973.228486   22973.227236 -25385.215088  22973.228486   31.291667  22973.227236    0.00125   0.000000      -99.999971
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=1, loss_amount=0, 
, buffer=1/400.[0m
[08/30 15:20:03]  --------------------------------------------------------------------------------
[08/30 15:20:03]  Iteration: 30 (2 solution, 27 counterexamples)
[08/30 15:20:05]  Generator returned sat in 1.357090 secs.
[08/30 15:20:05]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:20:05]  Improved gap from 0.0003125 to 98.4375
[08/30 15:20:06]  Improved number of small numbers from 26 to 101 out of a max of 101
[08/30 15:20:06]  Verifer returned sat in 0.843316 secs.
[08/30 15:20:06]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t   queue_t  bottle_queue_t
0   22495.004395   22495.004395 -25588.396484  22495.004395    0.045166  22495.004395    0.000000  0.000000     -100.000000
1   22695.038330   22693.981934 -25588.396484  22695.038330  200.033936  22693.981934    0.011230  1.045166        0.022705
2   22695.038330   22695.004395 -25588.396484  22695.038330    0.011475  22695.004395    0.011230  0.022705      -99.977295
3   22895.049561   22895.004395 -25588.396484  22895.049561  200.033936  22895.004395    0.022461  0.022705        0.022705
4   22896.026855   22895.004395 -25588.396484  22896.026855    1.000000  22895.004395    0.022461  1.000000      -99.000000
5   23095.049316   23095.004395 -25588.396484  23095.049316  200.022461  23095.004395    0.022461  0.022461        0.022461
6   23494.026855   23195.004395 -25588.396484  23494.026855  399.000000  23195.004395  298.999756  0.022705        0.022705
7   23495.004150   23195.993164 -25588.317383  23495.004150    1.000000  23195.993164  298.999756  0.011230      -98.920898
8   23794.981689   23393.947754 -25588.317383  23794.981689  299.988770  23393.947754  400.033691  1.000244        0.022705
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=819223/2048, 
, buffer=93/4096.[0m
[08/30 15:20:06]  --------------------------------------------------------------------------------
[08/30 15:20:06]  Iteration: 31 (2 solution, 28 counterexamples)
[08/30 15:20:07]  Generator returned sat in 0.263745 secs.
[08/30 15:20:07]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1(S_f[0][t-1]-S_f[0][t-4]) + -1)[0m
[08/30 15:20:07]  Improved gap from 97.943603515625 to 96.875
[08/30 15:20:07]  Improved number of small numbers from 66 to 101 out of a max of 101
[08/30 15:20:07]  Verifer returned sat in 0.789515 secs.
[08/30 15:20:07]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t   losts_0,t     queue_t  bottle_queue_t
0   22942.023193   22942.023193 -25588.396484  22942.023193    0.044922  22942.023193    0.000000    0.000000      -99.999756
1   23142.024414   23141.021973 -25588.396484  23142.024414  200.001221  23141.021973    0.000000    1.002441        0.001465
2   23142.024414   23142.022949 -25588.396484  23142.024414    0.001250  23142.022949    0.000000    0.001465      -99.998535
3   23342.026611   23342.014160 -25588.396484  23342.026611  200.003662  23342.014160    0.001221    0.011230        0.002441
4   23342.026611   23342.023193 -25588.396484  23342.026611    0.010000  23342.023193    0.001221    0.002197      -99.997559
5   23542.025635   23542.022949 -25588.396484  23542.025635  200.001221  23542.022949    0.001221    0.001465        0.001465
6   23941.024170   23542.023193 -25588.396484  23941.024170  399.000000  23542.023193  298.998779  100.002197        0.002441
7   23941.024170   23642.024414 -25585.272949  23941.024170    0.010000  23642.024414  298.998779    0.000977      -96.874023
8   24240.024414   23738.899414 -25585.272949  24240.024414  299.001221  23738.899414  401.122559  100.002441        0.002441
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=1642993/4096, 
, buffer=5/2048.[0m
[08/30 15:20:08]  --------------------------------------------------------------------------------
[08/30 15:20:08]  Iteration: 32 (2 solution, 29 counterexamples)
[08/30 15:20:09]  Generator returned sat in 1.100568 secs.
[08/30 15:20:09]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:20:11]  Improved gap from 0.0 to 23.4375
[08/30 15:20:11]  Improved number of small numbers from 64 to 101 out of a max of 101
[08/30 15:20:11]  Verifer returned sat in 1.828865 secs.
[08/30 15:20:11]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t   cwnd_0,t   service_0,t  losts_0,t    queue_t  bottle_queue_t
0   24674.318359   24607.762207 -25937.055420  24674.318359   0.044922  24607.762207        0.0  66.556152        0.000000
1   24674.318359   24674.318359 -25860.492920  24674.318359  66.555908  24674.318359        0.0   0.000000      -23.437500
2   24721.193359   24697.755859 -25783.930420  24721.193359  46.875000  24697.755859        0.0  23.437500        0.000000
3   24757.347168   24733.909668 -25720.084229  24757.347168  59.591309  24733.909668        0.0  23.437500        0.000000
4   24797.983398   24774.545898 -25660.720459  24797.983398  64.073730  24774.545898        0.0  23.437500        0.000000
5   24825.659668   24797.983398 -25588.396729  24825.659668  51.113770  24797.983398        0.0  27.676270        0.000000
6   24849.097168   24825.659668 -25511.834229  24849.097168  51.113770  24825.659668        0.0  23.437500        0.000000
7   24872.534668   24849.097168 -25435.271729  24872.534668  46.875000  24849.097168        0.0  23.437500        0.000000
8   24887.372803   24873.534424 -25435.271484  24887.372803  38.275635  24873.534424        0.0  13.838379      -85.161621
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=91/4096.[0m
[08/30 15:20:11]  --------------------------------------------------------------------------------
[08/30 15:20:11]  Iteration: 33 (2 solution, 30 counterexamples)
[08/30 15:20:15]  Generator returned sat in 3.038948 secs.
[08/30 15:20:15]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:20:15]  Improved gap from 0.0 to 100
[08/30 15:20:15]  Improved number of small numbers from 64 to 101 out of a max of 101
[08/30 15:20:15]  Verifer returned sat in 0.285066 secs.
[08/30 15:20:15]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   24125.649902   24125.627197 -25937.055664  24125.649902    0.044922  24125.627197        0.0    0.022705        0.000000
1   24125.649902   24125.649902 -25937.055664  24125.649902    0.011230  24125.649902        0.0    0.000000     -100.000000
2   24825.660889   24225.649902 -25937.055664  24825.660889  700.010986  24225.649902        0.0  600.010986      500.010986
3   24825.660889   24425.649658 -25937.055664  24825.660889  398.000000  24425.649658        0.0  400.011230      400.010986
4   24825.660889   24425.649902 -25937.055664  24825.660889  399.000000  24425.649902        0.0  400.010986      300.010986
5   24825.660889   24625.649902 -25937.055664  24825.660889  400.000000  24625.649902        0.0  200.010986      200.010986
6   25026.649902   24625.649902 -25937.055664  25026.649902  401.000000  24625.649902        0.0  401.000000      301.000000
7   25027.649902   24825.649658 -25937.055664  25027.649902  402.000000  24825.649658        0.0  202.000244      202.000000
8   25228.649658   24825.649902 -25937.055664  25228.649658  403.000000  24825.649902        0.0  402.999756      302.999756
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=2048091/4096.[0m
[08/30 15:20:15]  --------------------------------------------------------------------------------
[08/30 15:20:15]  Iteration: 34 (2 solution, 31 counterexamples)
[08/30 15:20:17]  Generator returned sat in 1.177346 secs.
[08/30 15:20:17]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:20:18]  Improved gap from 0.01123046875 to 10.9375
[08/30 15:20:18]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/30 15:20:18]  Verifer returned sat in 0.788668 secs.
[08/30 15:20:18]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t     queue_t  bottle_queue_t
0   24125.649902   23925.649902 -25837.055664  24125.649902    0.044922  23925.649902        0.0  200.000000      100.000000
1   24125.649902   24125.649902 -25837.055664  24125.649902  200.000000  24125.649902        0.0    0.000000        0.000000
2   24413.672363   24125.649902 -25837.055664  24413.672363  288.022461  24125.649902        0.0  288.022461      188.022461
3   24413.672363   24318.422363 -25837.055664  24413.672363  288.000000  24318.422363        0.0   95.250000       88.022461
4   24463.422363   24389.899902 -25837.055664  24463.422363  145.000000  24389.899902        0.0   73.522461       37.772461
5   24463.422363   24425.649902 -25774.828125  24463.422363   73.500000  24425.649902        0.0   37.772461        0.000000
6   24463.422363   24463.422363 -25685.765625  24463.422363   37.750000  24463.422363        0.0    0.000000      -10.937500
7   24483.297363   24477.939941 -25600.283203  24483.297363   19.875000  24477.939941        0.0    5.357422       -5.580078
8   24488.877441   24488.877441 -25600.283203  24488.877441   10.937500  24488.877441        0.0    0.000000     -100.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=96279/512.[0m
[08/30 15:20:18]  --------------------------------------------------------------------------------
[08/30 15:20:18]  Iteration: 35 (2 solution, 32 counterexamples)
[08/30 15:20:21]  Generator returned sat in 2.039574 secs.
[08/30 15:20:21]  Candidate solution: 
[1m[94mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 0)
else:
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:20:21]  Improved gap from 0.0 to 0
[08/30 15:20:21]  Improved number of small numbers from 101 to 101 out of a max of 101
[08/30 15:20:21]  Verifer returned sat in 0.364346 secs.
[08/30 15:20:21]  Counter example: 
[93m   tot_arrival_t  tot_service_t      wasted_t   arrival_0,t    cwnd_0,t   service_0,t  losts_0,t  queue_t  bottle_queue_t
0   23828.785889   23828.774658 -25837.055664  23828.785889    0.044922  23828.774658        0.0  0.01123      -99.988770
1   24028.774658   24028.763428 -25837.055664  24028.774658  200.000000  24028.763428        0.0  0.01123        0.000000
2   24028.785889   24028.774658 -25837.055664  24028.785889    0.022461  24028.774658        0.0  0.01123      -99.988770
3   24228.785889   24227.774658 -25837.055664  24228.785889  200.011230  24227.774658        0.0  1.01123        0.011230
4   24228.785889   24228.774658 -25737.066895  24228.785889    1.000000  24228.774658        0.0  0.01123        0.000000
5   24229.774658   24229.763428 -25639.033203  24229.774658    1.000000  24229.763428        0.0  0.01123       -0.977539
6   24230.763428   24230.752197 -25539.044434  24230.763428    1.000000  24230.752197        0.0  0.01123        0.000000
7   24231.752197   24230.763428 -25440.033203  24231.752197    1.000000  24230.763428        0.0  0.98877        0.000000
8   24231.763428   24231.752197 -25440.033203  24231.763428    1.000000  24231.752197        0.0  0.01123      -99.988770
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, buffer=23/1024.[0m
[08/30 15:20:21]  --------------------------------------------------------------------------------
[08/30 15:20:21]  Iteration: 36 (2 solution, 33 counterexamples)
[08/30 15:20:22]  Generator returned unsat in 0.126019 secs.
[08/30 15:20:22]  [96mNo more solutions found[0m
[08/30 15:20:22]  Final solutions:
[08/30 15:20:22]  0: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + -1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:20:22]  1: [1m[92mif(Ld_f[0][t] > Ld_f[0][t-1]):
	c_f[0][t] = max(0.01, 0v.c_f[0][t-1] + 0(S_f[0][t-1]-S_f[0][t-4]) + 1)
else:
	c_f[0][t] = max(0.01, 1/2v.c_f[0][t-1] + 1/2(S_f[0][t-1]-S_f[0][t-4]) + 1)[0m
[08/30 15:20:22]  Took 89.493736 secs.
