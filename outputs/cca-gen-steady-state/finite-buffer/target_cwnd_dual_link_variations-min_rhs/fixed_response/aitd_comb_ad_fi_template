[12/08 18:33:24]  Using search space: aitd_comb_ad
[12/08 18:33:25]  Ideal: desired_util_f=1, desired_queue_bound_multiplier=0.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=0, desired_loss_amount_bound_alpha=3
[12/08 18:33:25]  Adver: desired_util_f=0.5, desired_queue_bound_multiplier=1.5, desired_queue_bound_alpha=3, desired_loss_count_bound=3, desired_loss_amount_bound_multiplier=1.5, desired_loss_amount_bound_alpha=3
[12/08 18:33:52]  --------------------------------------------------------------------------------
[12/08 18:33:52]  Iteration: 1 (0 solution, 0 counterexamples)
[12/08 18:33:52]  Generator returned sat in 0.007093 secs.
[12/08 18:33:52]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 2c_f[n][t-2] + 2c_f[n][t-3] + 2S_f[n][t-1] + 2S_f[n][t-2] + 2S_f[n][t-3] + 2A_f[n][t-1] + 2A_f[n][t-2] + 2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:33:56]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 18:33:56]  Verifer returned sat in 3.622952 secs.
[12/08 18:33:56]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0             -235.5625             -566.8125           -235.5625         1428.125         1428.125           -566.8125              0.00   331.25
1             -135.8125             -466.8125           -135.8125          431.000          431.000           -466.8125              0.00   331.00
2             -135.8125             -366.8125           -135.8125           48.500           48.500           -366.8125              0.00   231.00
3             -135.8125             -266.8125           -135.8125           58.750           58.750           -266.8125              0.00   131.00
4             -135.8125             -166.8125           -135.8125           69.000           69.000           -166.8125              0.00    31.00
5              -87.5625              -87.5625            -87.5625           79.250           79.250            -87.5625              0.00     0.00
6                1.9375                1.9375              1.9375           89.500           89.500              1.9375              0.00     0.00
7              101.6875              101.6875            101.6875           99.750           99.750            101.6875              0.00     0.00
8             1009.6875              201.6875           1009.6875          908.000          908.000            201.6875            476.75   331.25
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=1907/4, 
, fast_decrease=True, alpha=41/4, buf_size=1325/4.[0m
[12/08 18:34:09]  --------------------------------------------------------------------------------
[12/08 18:34:09]  Iteration: 2 (0 solution, 1 counterexamples)
[12/08 18:34:09]  Generator returned sat in 0.414456 secs.
[12/08 18:34:09]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1c_f[n][t-1] + -3/2S_f[n][t-1] + 1S_f[n][t-2] + -2S_f[n][t-3] + -1A_f[n][t-1] + -2A_f[n][t-2] + 1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 2expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:34:19]  Improved number of small numbers from 37 to 39 out of a max of 114
[12/08 18:34:19]  Verifer returned sat in 9.801631 secs.
[12/08 18:34:19]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0           -169.720703           -169.730840         -169.720703      1428.124756      1428.124756         -169.730840          0.000000  0.010137
1             68.199615            -69.730840           68.199615       237.930455       237.930455          -69.730840        137.920112  0.010343
2             68.199615            -69.720497           68.199615         0.007757         0.007757          -69.720497        137.920112  0.000000
3             68.209958            -69.710154           68.209958         0.010343         0.010343          -69.710154        137.920112  0.000000
4             68.292704            -69.627408           68.292704         0.082746         0.082746          -69.627408        137.920112  0.000000
5             68.773663            -69.146449           68.773663         0.480959         0.480959          -69.146449        137.920112  0.000000
6             71.625800            -66.294312           71.625800         2.852138         2.852138          -66.294312        137.920112  0.000000
7             88.514954            -49.405158           88.514954        16.889153        16.889153          -49.405158        137.920112  0.000000
8            188.535641             50.594842          188.535641       100.020687       100.020687           50.594842        137.930456  0.010343
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=64/6187, 
, fast_decrease=True, alpha=16/6187, buf_size=9900224/957172209.[0m
[12/08 18:34:33]  --------------------------------------------------------------------------------
[12/08 18:34:33]  Iteration: 3 (0 solution, 2 counterexamples)
[12/08 18:34:34]  Generator returned sat in 1.230089 secs.
[12/08 18:34:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1/2c_f[n][t-1] + -1/2c_f[n][t-2] + 1c_f[n][t-3] + 1S_f[n][t-2] + 1S_f[n][t-3] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:34:35]  Improved number of small numbers from 76 to 114 out of a max of 114
[12/08 18:34:35]  Verifer returned sat in 0.982372 secs.
[12/08 18:34:35]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           -132.851807           -532.852051         -132.851807       791.602051       791.602051         -532.852051               0.0  400.000244
1           -132.851807           -432.852051         -132.851807         0.125000         0.125000         -432.852051               0.0  300.000244
2           -132.851807           -332.852051         -132.851807        82.625000        82.625000         -332.852051               0.0  200.000244
3           -132.851807           -232.852051         -132.851807        87.000000        87.000000         -232.852051               0.0  100.000244
4           -132.851807           -132.852051         -132.851807        91.375000        91.375000         -132.852051               0.0    0.000244
5            -37.102051            -37.102051          -37.102051        95.750000        95.750000          -37.102051               0.0    0.000000
6             63.022949             62.897949           63.022949       100.125000       100.125000           62.897949               0.0    0.125000
7            913.585449            162.897949          913.585449       850.687500       850.687500          162.897949               0.0  750.687500
8            913.585449            262.897949          913.585449       529.718750       529.718750          262.897949               0.0  650.687500
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=35/8, buf_size=3075327/4096.[0m
[12/08 18:34:49]  --------------------------------------------------------------------------------
[12/08 18:34:49]  Iteration: 4 (0 solution, 3 counterexamples)
[12/08 18:34:51]  Generator returned sat in 1.989880 secs.
[12/08 18:34:51]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + -2c_f[n][t-2] + 1c_f[n][t-3] + -1/2S_f[n][t-1] + -1S_f[n][t-2] + 2S_f[n][t-3] + 1A_f[n][t-2] + 1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 2expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:34:51]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 18:34:51]  Verifer returned sat in 0.473902 secs.
[12/08 18:34:51]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0              77.60625            -419.39375            77.60625       122.687500       122.687500          -419.39375               0.0  497.00000
1              77.60625            -319.39375            77.60625         0.031250         0.031250          -319.39375               0.0  397.00000
2              77.60625            -219.39375            77.60625        87.906250        87.906250          -219.39375               0.0  297.00000
3              77.60625            -119.39375            77.60625        90.937500        90.937500          -119.39375               0.0  197.00000
4              77.60625             -19.39375            77.60625        93.968750        93.968750           -19.39375               0.0   97.00000
5              77.60625              77.60625            77.60625        97.000000        97.000000            77.60625               0.0    0.00000
6             177.63750             177.60625           177.63750       100.031250       100.031250           177.60625               0.0    0.03125
7             830.76250             277.60625           830.76250       653.156250       653.156250           277.60625               0.0  553.15625
8             830.76250             377.60625           830.76250       429.609375       429.609375           377.60625               0.0  453.15625
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=97/32, buf_size=17701/32.[0m
[12/08 18:35:05]  --------------------------------------------------------------------------------
[12/08 18:35:05]  Iteration: 5 (0 solution, 4 counterexamples)
[12/08 18:35:11]  Generator returned sat in 5.749526 secs.
[12/08 18:35:11]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2c_f[n][t-3] + -1S_f[n][t-1] + -3/2S_f[n][t-2] + -3/2S_f[n][t-3] + 1/2A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 1/2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:35:22]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 18:35:22]  Verifer returned sat in 10.700884 secs.
[12/08 18:35:22]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0           -449.293155           -469.293155         -449.293155         0.125000         0.125000         -469.293155             0.000    20.00
1           -449.293155           -449.293155         -449.293155         0.125000         0.125000         -449.293155             0.000     0.00
2           -424.989583           -424.989583         -424.989583        24.303571        24.303571         -424.989583             0.000     0.00
3           -245.239583           -324.989583         -245.239583       179.750000       179.750000         -324.989583            59.750    20.00
4           -105.364583           -224.989583         -105.364583       159.875000       159.875000         -224.989583            99.625    20.00
5             14.635417           -124.989583           14.635417       140.000000       140.000000         -124.989583           119.625    20.00
6            114.760417            -24.989583          114.760417       120.125000       120.125000          -24.989583           119.750    20.00
7            195.010417             75.010417          195.010417       100.250000       100.250000           75.010417           119.750     0.25
8            819.760417            175.010417          819.760417       625.000000       625.000000          175.010417           624.750    20.00
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=565, 
, fast_decrease=True, alpha=159/8, buf_size=20.[0m
[12/08 18:35:35]  --------------------------------------------------------------------------------
[12/08 18:35:35]  Iteration: 6 (0 solution, 5 counterexamples)
[12/08 18:35:52]  Generator returned sat in 16.143136 secs.
[12/08 18:35:52]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 1c_f[n][t-3] + 1S_f[n][t-2] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:35:54]  Improved number of small numbers from 78 to 114 out of a max of 114
[12/08 18:35:54]  Verifer returned sat in 2.380215 secs.
[12/08 18:35:54]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           8088.876709          -1065.373535         8088.876709         0.124512         0.124512        -1065.373535       8811.999756  342.250488
1           8188.876709           -965.373535         8188.876709       442.250488       442.250488         -965.373535       8811.999756  342.250488
2           8188.876709           -865.373535         8188.876709       160.374268       160.374268         -865.373535       8811.999756  242.250488
3           8188.876709           -765.373535         8188.876709       180.249512       180.249512         -765.373535       8811.999756  142.250488
4           8266.626221           -665.373535         8266.626221       220.000000       220.000000         -665.373535       8811.999756  120.000000
5           8406.376709           -565.373535         8406.376709       259.750488       259.750488         -565.373535       8811.999756  159.750488
6           8496.376709           -465.373535         8496.376709       249.750488       249.750488         -465.373535       8811.999756  149.750488
7           8591.376709           -365.373535         8591.376709       244.750488       244.750488         -365.373535       8811.999756  144.750488
8           8688.876709           -265.373535         8688.876709       242.250488       242.250488         -265.373535       8811.999756  142.250488
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=81409/4096, buf_size=700929/2048.[0m
[12/08 18:36:08]  --------------------------------------------------------------------------------
[12/08 18:36:08]  Iteration: 7 (0 solution, 6 counterexamples)
[12/08 18:36:20]  Generator returned sat in 11.589113 secs.
[12/08 18:36:20]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + 3/2c_f[n][t-2] + -1/2c_f[n][t-3] + -1S_f[n][t-1] + 2S_f[n][t-2] + -1S_f[n][t-3] + -2A_f[n][t-1] + 1/2A_f[n][t-2] + 1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 1/2expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:36:22]  Improved number of small numbers from 74 to 82 out of a max of 114
[12/08 18:36:22]  Verifer returned sat in 2.315910 secs.
[12/08 18:36:22]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           -968.738525          -1410.988959         -968.738525      1873.873291      1873.873291        -1410.988959               0.0  442.250434
1           -968.738525          -1310.988959         -968.738525       442.250244       442.250244        -1310.988959               0.0  342.250434
2           -968.738525          -1210.988959         -968.738525       105.404161       105.404161        -1210.988959               0.0  242.250434
3           -968.738525          -1110.988959         -968.738525       122.279405       122.279405        -1110.988959               0.0  142.250434
4           -886.154650          -1010.988959         -886.154650       224.834310       224.834310        -1010.988959               0.0  124.834310
5           -709.238471           -910.988959         -709.238471       301.750488       301.750488         -910.988959               0.0  201.750488
6           -643.238471           -810.988959         -643.238471       267.750488       267.750488         -810.988959               0.0  167.750488
7           -560.238471           -710.988959         -560.238471       250.750488       250.750488         -710.988959               0.0  150.750488
8           -468.738471           -610.988959         -468.738471       242.250488       242.250488         -610.988959               0.0  142.250488
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=69121/4096, buf_size=905729/2048.[0m
[12/08 18:36:36]  --------------------------------------------------------------------------------
[12/08 18:36:36]  Iteration: 8 (0 solution, 7 counterexamples)
[12/08 18:36:40]  Generator returned sat in 3.440779 secs.
[12/08 18:36:40]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + 1c_f[n][t-2] + -1/2c_f[n][t-3] + -1S_f[n][t-1] + 2S_f[n][t-2] + -3/2S_f[n][t-3] + 1/2A_f[n][t-1] + 1/2A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:36:41]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 18:36:41]  Verifer returned sat in 1.646425 secs.
[12/08 18:36:41]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           7089.625000             -7267.375         7089.625000      1873.873291      1873.873291           -7267.375       14076.00000  281.000000
1           7189.750000             -7167.375         7189.750000       381.125000       381.125000           -7167.375       14076.12500  281.000000
2           7189.750000             -7067.375         7189.750000        80.625000        80.625000           -7067.375       14076.12500  181.000000
3           7189.750000             -6967.375         7189.750000        80.750000        80.750000           -6967.375       14076.12500   81.000000
4           7189.750000             -6886.375         7189.750000        80.875000        80.875000           -6886.375       14076.12500    0.000000
5           7894.812500             -6786.375         7894.812500       705.062500       705.062500           -6786.375       14400.18750  281.000000
6           8056.968750             -6686.375         8056.968750       443.156250       443.156250           -6686.375       14462.34375  281.000000
7           8097.671875             -6586.375         8097.671875       321.703125       321.703125           -6586.375       14462.34375  221.703125
8           8136.945312             -6486.375         8136.945312       260.976562       260.976562           -6486.375       14462.34375  160.976562
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=12359/32, 
, fast_decrease=True, alpha=1/8, buf_size=281.[0m
[12/08 18:36:55]  --------------------------------------------------------------------------------
[12/08 18:36:55]  Iteration: 9 (0 solution, 8 counterexamples)
[12/08 18:36:58]  Generator returned sat in 2.714063 secs.
[12/08 18:36:58]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + 1c_f[n][t-2] + 1c_f[n][t-3] + -2S_f[n][t-1] + -3/2S_f[n][t-2] + -3/2S_f[n][t-3] + -3/2A_f[n][t-1] + -1A_f[n][t-2] + -1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 3/2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:37:04]  Improved number of small numbers from 112 to 112 out of a max of 114
[12/08 18:37:04]  Verifer returned sat in 5.837921 secs.
[12/08 18:37:04]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           8055.668067          -6515.032826         8055.668067         0.125000         0.125000        -6515.032826      14460.843750  109.857143
1           8055.668067          -6415.032826         8055.668067         0.125000         0.125000        -6415.032826      14460.843750    9.857143
2           8055.668067          -6405.175683         8055.668067         9.732143         9.732143        -6405.175683      14460.843750    0.000000
3           8438.757353          -6305.175683         8438.757353       383.089286       383.089286        -6305.175683      14613.075893  130.857143
4           8569.864496          -6205.175683         8569.864496       261.964286       261.964286        -6205.175683      14644.183036  130.857143
5           8685.480567          -6105.175683         8685.480567       246.473214       246.473214        -6105.175683      14659.799107  130.857143
6           8785.605567          -6005.175683         8785.605567       230.982143       230.982143        -6005.175683      14659.924107  130.857143
7           8870.239496          -5905.175683         8870.239496       215.491071       215.491071        -5905.175683      14659.924107  115.491071
8           9951.567621          -5805.175683         9951.567621      1196.819196      1196.819196        -5805.175683      15625.886161  130.857143
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=453739/448, 
, fast_decrease=True, alpha=1735/112, buf_size=916/7.[0m
[12/08 18:37:17]  --------------------------------------------------------------------------------
[12/08 18:37:17]  Iteration: 10 (0 solution, 9 counterexamples)
[12/08 18:37:25]  Generator returned sat in 7.289091 secs.
[12/08 18:37:25]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -2S_f[n][t-3] + 2A_f[n][t-1] + 1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 1expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:37:27]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 18:37:27]  Verifer returned sat in 1.975160 secs.
[12/08 18:37:27]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0         -29137.812500         -43798.671875       -29137.812500         0.125000         0.125000       -43798.671875      14460.843750  200.015625
1         -29137.812500         -43698.671875       -29137.812500         0.015625         0.015625       -43698.671875      14460.843750  100.015625
2         -29137.812500         -43598.671875       -29137.812500        91.953125        91.953125       -43598.671875      14460.843750    0.015625
3         -29041.843750         -43502.687500       -29041.843750        95.984375        95.984375       -43502.687500      14460.843750    0.000000
4         -28941.828125         -43402.687500       -28941.828125       100.015625       100.015625       -43402.687500      14460.843750    0.015625
5         -28295.812500         -43302.687500       -28295.812500       646.031250       646.031250       -43302.687500      14544.050781  462.824219
6         -28295.812500         -43202.687500       -28295.812500       427.046875       427.046875       -43202.687500      14544.050781  362.824219
7         -28295.812500         -43102.687500       -28295.812500       317.554688       317.554688       -43102.687500      14544.050781  262.824219
8         -28295.812500         -43002.687500       -28295.812500       262.808594       262.808594       -43002.687500      14544.050781  162.824219
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=21301/256, 
, fast_decrease=True, alpha=129/32, buf_size=118483/256.[0m
[12/08 18:37:41]  --------------------------------------------------------------------------------
[12/08 18:37:41]  Iteration: 11 (0 solution, 10 counterexamples)
[12/08 18:37:42]  Generator returned sat in 0.693202 secs.
[12/08 18:37:42]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + 1/2c_f[n][t-2] + -2S_f[n][t-3] + 2A_f[n][t-1] + 1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 1expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:37:43]  Improved number of small numbers from 70 to 114 out of a max of 114
[12/08 18:37:43]  Verifer returned sat in 0.572810 secs.
[12/08 18:37:43]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0         -29137.812988         -43786.730957       -29137.812988         0.124756         0.124756       -43786.730957      14448.902344  200.015625
1         -29137.812988         -43686.730957       -29137.812988         0.015381         0.015381       -43686.730957      14448.902344  100.015625
2         -29137.812988         -43586.730957       -29137.812988        80.015625        80.015625       -43586.730957      14448.902344    0.015625
3         -29037.828613         -43486.730957       -29037.828613       100.000000       100.000000       -43486.730957      14448.902344    0.000000
4         -28917.844238         -43386.730957       -28917.844238       119.984375       119.984375       -43386.730957      14448.902344   19.984375
5         -28227.875488         -43286.730957       -28227.875488       709.953125       709.953125       -43286.730957      14560.123291  498.732178
6         -28227.875488         -43186.730957       -28227.875488       474.960938       474.960938       -43186.730957      14560.123291  398.732178
7         -28227.875488         -43086.730957       -28227.875488       357.464844       357.464844       -43086.730957      14560.123291  298.732178
8         -28227.875488         -42986.730957       -28227.875488       298.716797       298.716797       -42986.730957      14560.123291  198.732178
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=455561/4096, 
, fast_decrease=True, alpha=1279/64, buf_size=2042807/4096.[0m
[12/08 18:37:57]  --------------------------------------------------------------------------------
[12/08 18:37:57]  Iteration: 12 (0 solution, 11 counterexamples)
[12/08 18:38:28]  Generator returned sat in 30.801469 secs.
[12/08 18:38:28]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-2] + 2c_f[n][t-3] + -3/2S_f[n][t-1] + -2A_f[n][t-1] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 1expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:38:34]  Improved number of small numbers from 78 to 78 out of a max of 114
[12/08 18:38:34]  Verifer returned sat in 5.961926 secs.
[12/08 18:38:34]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           7096.997005          -7352.155339         7096.997005         0.125000         0.125000        -7352.155339      14448.902344    0.250000
1           7096.997005          -7351.905339         7096.997005         0.125000         0.125000        -7351.905339      14448.902344    0.000000
2           7098.122005          -7350.780339         7098.122005         1.125000         1.125000        -7350.780339      14448.902344    0.000000
3           7118.697005          -7330.205339         7118.697005        20.575000        20.575000        -7330.205339      14448.902344    0.000000
4           7218.822005          -7230.205339         7218.822005       100.125000       100.125000        -7230.205339      14448.902344    0.125000
5           7675.672005          -7130.205339         7675.672005       456.975000       456.975000        -7130.205339      14449.027344  356.850000
6           7675.672005          -7030.205339         7675.672005       334.717500       334.717500        -7030.205339      14449.027344  256.850000
7           7692.410755          -6930.205339         7692.410755       273.588750       273.588750        -6930.205339      14449.027344  173.588750
8           7761.846380          -6830.205339         7761.846380       243.024375       243.024375        -6830.205339      14449.027344  143.024375
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=1/8, 
, fast_decrease=True, alpha=623/100, buf_size=7137/20.[0m
[12/08 18:38:48]  --------------------------------------------------------------------------------
[12/08 18:38:48]  Iteration: 13 (0 solution, 12 counterexamples)
[12/08 18:39:06]  Generator returned sat in 17.611725 secs.
[12/08 18:39:06]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + 3/2c_f[n][t-2] + 1/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1/2S_f[n][t-3] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] + -1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 2expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:39:13]  Improved number of small numbers from 74 to 76 out of a max of 114
[12/08 18:39:13]  Verifer returned sat in 6.308291 secs.
[12/08 18:39:13]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0            -33.080811            -33.291887          -33.080811         0.126709         0.126709          -33.291887          0.084388    0.126688
1             -4.954334             -5.038723           -4.954334        28.253165        28.253165           -5.038723          0.084388    0.000000
2             -4.600479             -4.684868           -4.600479         0.353855         0.353855           -4.684868          0.084388    0.000000
3             71.864998             71.780610           71.864998        76.465478        76.465478           71.780610          0.084388    0.000000
4            473.089969            171.780610          473.089969       401.224971       401.224971          171.780610          0.210970  301.098389
5            473.089969            271.780610          473.089969       300.971807       300.971807          271.780610          0.210970  201.098389
6            534.604066            371.780610          534.604066       262.612486       262.612486          371.780610          0.210970  162.612486
7            615.424405            471.780610          615.424405       243.432825       243.432825          471.780610          0.210970  143.432825
8            705.834575            571.780610          705.834575       233.842995       233.842995          571.780610          0.210970  133.842995
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=10/79, 
, fast_decrease=True, alpha=958/79, buf_size=523309/1738.[0m
[12/08 18:39:26]  --------------------------------------------------------------------------------
[12/08 18:39:26]  Iteration: 14 (0 solution, 13 counterexamples)
[12/08 18:43:56]  Generator returned sat in 268.973855 secs.
[12/08 18:43:56]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + 1c_f[n][t-2] + -1c_f[n][t-3] + 1/2S_f[n][t-2] + 2S_f[n][t-3] + -2A_f[n][t-1] + 3/2A_f[n][t-2] + 2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:44:01]  Verifer returned unsat in 5.260698 secs.
[12/08 18:45:57]  Verifer returned unsat in 115.608550 secs.
[12/08 18:45:57]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + 1c_f[n][t-2] + -1c_f[n][t-3] + 1/2S_f[n][t-2] + 2S_f[n][t-3] + -2A_f[n][t-1] + 3/2A_f[n][t-2] + 2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:45:57]  --------------------------------------------------------------------------------
[12/08 18:45:57]  Iteration: 15 (1 solution, 13 counterexamples)
[12/08 18:46:01]  Generator returned sat in 2.815869 secs.
[12/08 18:46:01]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + 1c_f[n][t-2] + -1c_f[n][t-3] + 1/2S_f[n][t-2] + 2S_f[n][t-3] + -2A_f[n][t-1] + 3/2A_f[n][t-2] + 2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 3/2expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:46:04]  Improved number of small numbers from 76 to 82 out of a max of 114
[12/08 18:46:04]  Verifer returned sat in 2.881160 secs.
[12/08 18:46:04]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           1596.503174           1291.686985         1596.503174      5568.156250      5568.156250         1291.686985              0.00  304.816189
1           1596.503174           1391.686985         1596.503174       304.816162       304.816162         1391.686985              0.00  204.816189
2           1596.753312           1491.686985         1596.753312       205.066327       205.066327         1491.686985              0.00  105.066327
3           1716.503312           1591.686985         1716.503312       224.816327       224.816327         1591.686985              0.00  124.816327
4           2174.615556           1691.686985         2174.615556       582.928571       582.928571         1691.686985              0.25  482.678571
5           2174.615556           1791.686985         2174.615556       411.214286       411.214286         1791.686985              0.25  382.678571
6           2174.615556           1891.686985         2174.615556       325.357143       325.357143         1891.686985              0.25  282.678571
7           2174.615556           1991.686985         2174.615556       282.428571       282.428571         1991.686985              0.25  182.678571
8           2252.901271           2091.686985         2252.901271       260.964286       260.964286         2091.686985              0.25  160.964286
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=1/4, 
, fast_decrease=True, alpha=79/4, buf_size=13515/28.[0m
[12/08 18:46:17]  --------------------------------------------------------------------------------
[12/08 18:46:17]  Iteration: 16 (1 solution, 14 counterexamples)
[12/08 18:46:56]  Generator returned sat in 37.340294 secs.
[12/08 18:46:56]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1c_f[n][t-1] + 1c_f[n][t-2] + 1c_f[n][t-3] + -1S_f[n][t-1] + -1S_f[n][t-2] + 3/2S_f[n][t-3] + 1/2A_f[n][t-1] + -1A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:46:57]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 18:46:57]  Verifer returned sat in 1.503066 secs.
[12/08 18:46:57]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0          10186.363095         -20914.761905        10186.363095         0.125000         0.125000       -20914.761905      30701.000000  400.125
1          10186.363095         -20814.761905        10186.363095         0.125000         0.125000       -20814.761905      30701.000000  300.125
2          10186.363095         -20714.761905        10186.363095        28.732143        28.732143       -20714.761905      30701.000000  200.125
3          10186.363095         -20614.761905        10186.363095        43.035714        43.035714       -20614.761905      30701.000000  100.125
4          10186.363095         -20514.761905        10186.363095        57.339286        57.339286       -20514.761905      30701.000000    0.125
5          10958.130952         -20414.761905        10958.130952       771.892857       771.892857       -20414.761905      30972.767857  400.125
6          11058.255952         -20314.761905        11058.255952       500.250000       500.250000       -20314.761905      30972.892857  400.125
7          11058.255952         -20214.761905        11058.255952       364.428571       364.428571       -20214.761905      30972.892857  300.125
8          11058.255952         -20114.761905        11058.255952       296.517857       296.517857       -20114.761905      30972.892857  200.125
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=7613/28, 
, fast_decrease=True, alpha=801/56, buf_size=3201/8.[0m
[12/08 18:47:11]  --------------------------------------------------------------------------------
[12/08 18:47:11]  Iteration: 17 (1 solution, 15 counterexamples)
[12/08 18:47:56]  Generator returned sat in 43.944908 secs.
[12/08 18:47:56]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1/2c_f[n][t-1] + 1c_f[n][t-2] + -2A_f[n][t-1] + 1/2A_f[n][t-2] + 3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 3/2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:48:04]  Improved number of small numbers from 82 to 84 out of a max of 114
[12/08 18:48:04]  Verifer returned sat in 8.090209 secs.
[12/08 18:48:04]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          10052.078613         -20682.580233        10052.078613         0.125000         0.125000       -20682.580233      30701.000000   33.658846
1          10118.451017         -20582.580233        10118.451017       100.031250       100.031250       -20582.580233      30701.000000    0.031250
2          10118.755625         -20582.244375        10118.755625         0.335859         0.335859       -20582.244375      30701.000000    0.000000
3          10418.419767         -20482.244375        10418.419767       299.664141       299.664141       -20482.244375      30765.966225  134.697917
4          10495.298239         -20382.244375        10495.298239       211.576389       211.576389       -20382.244375      30765.966225  111.576389
5          10606.874628         -20282.244375        10606.874628       223.152778       223.152778       -20282.244375      30765.966225  123.152778
6          10718.451017         -20182.244375        10718.451017       234.729167       234.729167       -20182.244375      30765.997475  134.697917
7          10806.905878         -20082.244375        10806.905878       223.152778       223.152778       -20082.244375      30765.997475  123.152778
8          11647.423239         -19982.244375        11647.423239       963.670139       963.670139       -19982.244375      31494.969697  134.697917
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=3, loss_amount=209953/288, 
, fast_decrease=True, alpha=1667/144, buf_size=12931/96.[0m
[12/08 18:48:17]  --------------------------------------------------------------------------------
[12/08 18:48:17]  Iteration: 18 (1 solution, 16 counterexamples)
[12/08 18:49:32]  Generator returned sat in 73.278239 secs.
[12/08 18:49:32]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -3/2c_f[n][t-2] + 1c_f[n][t-3] + 2S_f[n][t-1] + -2S_f[n][t-2] + 1S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 2expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:49:39]  Improved number of small numbers from 78 to 80 out of a max of 114
[12/08 18:49:39]  Verifer returned sat in 7.156197 secs.
[12/08 18:49:39]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          30302.813477          30202.375996        30302.813477         0.062500         0.062500        30202.375996          0.000000  100.437480
1          30329.232530          30302.375996        30329.232530       126.856534       126.856534        30302.375996          0.000000   26.856534
2          30329.232530          30329.232530        30329.232530         0.062500         0.062500        30329.232530          0.000000    0.000000
3          30329.420030          30329.420030        30329.420030         0.187500         0.187500        30329.420030          0.000000    0.000000
4          30384.101849          30384.101849        30384.101849        54.681818        54.681818        30384.101849          0.000000    0.000000
5          30630.670030          30484.101849        30630.670030       246.568182       246.568182        30484.101849         46.130682  100.437500
6          30730.982530          30584.101849        30730.982530       200.750000       200.750000        30584.101849         46.443182  100.437500
7          30831.045030          30684.101849        30831.045030       200.500000       200.500000        30684.101849         46.505682  100.437500
8          30930.982530          30784.101849        30930.982530       200.375000       200.375000        30784.101849         46.505682  100.375000
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=8185/176, 
, fast_decrease=True, alpha=1/8, buf_size=1607/16.[0m
[12/08 18:49:52]  --------------------------------------------------------------------------------
[12/08 18:49:52]  Iteration: 19 (1 solution, 17 counterexamples)
[12/08 18:50:43]  Generator returned sat in 49.671997 secs.
[12/08 18:50:43]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:50:47]  Verifer returned unsat in 3.388100 secs.
[12/08 18:51:12]  Verifer returned unsat in 25.605610 secs.
[12/08 18:51:12]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:51:12]  --------------------------------------------------------------------------------
[12/08 18:51:12]  Iteration: 20 (2 solution, 17 counterexamples)
[12/08 18:51:18]  Generator returned sat in 4.751756 secs.
[12/08 18:51:18]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:51:25]  Verifer returned unsat in 6.519864 secs.
[12/08 18:51:58]  Verifer returned unsat in 32.772693 secs.
[12/08 18:51:58]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:51:58]  --------------------------------------------------------------------------------
[12/08 18:51:58]  Iteration: 21 (3 solution, 17 counterexamples)
[12/08 18:52:04]  Generator returned sat in 4.756685 secs.
[12/08 18:52:04]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:52:07]  Verifer returned unsat in 3.442077 secs.
[12/08 18:52:51]  Verifer returned unsat in 44.227782 secs.
[12/08 18:52:51]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:52:51]  --------------------------------------------------------------------------------
[12/08 18:52:51]  Iteration: 22 (4 solution, 17 counterexamples)
[12/08 18:52:57]  Generator returned sat in 4.836676 secs.
[12/08 18:52:57]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:53:00]  Verifer returned unsat in 2.718122 secs.
[12/08 18:53:42]  Verifer returned unsat in 41.480802 secs.
[12/08 18:53:42]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -1/2A_f[n][t-1] + -3/2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:53:42]  --------------------------------------------------------------------------------
[12/08 18:53:42]  Iteration: 23 (5 solution, 17 counterexamples)
[12/08 18:53:49]  Generator returned sat in 5.695677 secs.
[12/08 18:53:49]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -3/2A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:53:53]  Verifer returned unsat in 4.640018 secs.
[12/08 18:54:25]  Verifer returned unsat in 30.980329 secs.
[12/08 18:54:25]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -3/2A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:54:25]  --------------------------------------------------------------------------------
[12/08 18:54:25]  Iteration: 24 (6 solution, 17 counterexamples)
[12/08 18:54:31]  Generator returned sat in 5.734525 secs.
[12/08 18:54:31]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -3/2c_f[n][t-3] + 2S_f[n][t-2] + -3/2A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1/2expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:54:42]  Verifer returned unsat in 10.120816 secs.
[12/08 18:57:02]  Improved gap from 0.0 to 40.625
[12/08 18:57:05]  Improved number of small numbers from 88 to 95 out of a max of 134
[12/08 18:57:05]  Verifer returned sat in 143.457902 secs.
[12/08 18:57:05]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0       -34518.196045       -34518.297781     -34518.196045       0.101902       0.101902     -34518.297781             0.0              -34518.297781   -5013.302536   0.101736      -99.796362
1       -34318.297781       -34329.439085     -34318.297781     200.000000     200.000000     -34329.439085             0.0              -34329.439085   -5013.302536  11.141304        0.101902
2       -34318.297781       -34318.399683     -34318.297781      11.039402      11.039402     -34318.399683             0.0              -34318.196045   -4953.927536   0.101902      -40.523098
3       -34265.716259       -34277.774683     -34265.716259      52.683424      52.683424     -34277.774683             0.0              -34277.876465   -4894.552734  12.058424      -28.566774
4       -34225.498868       -34237.047781     -34225.498868      52.275815      52.275815     -34237.047781             0.0              -34237.047781   -4835.279541  11.548913      -29.076190
5       -34184.670063       -34196.320879     -34184.670063      52.377717      52.377717     -34196.320879             0.0              -34196.320879   -4776.006348  11.650815      -28.974192
6       -34143.841259       -34154.593976     -34143.841259      52.479620      52.479620     -34154.593976             0.0              -34154.593976   -4717.733243  10.752717      -29.872283
7       -34102.012455       -34113.867074     -34102.012455      52.581522      52.581522     -34113.867074             0.0              -34113.867074   -4658.460205  11.854620      -28.770441
8       -34061.183650       -34073.140381     -34061.183650      52.683424      52.683424     -34073.140381             0.0              -34073.140381   -4599.187047  11.956730      -28.668478
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=75/736, buf_size=835/4096.[0m
[12/08 18:57:19]  --------------------------------------------------------------------------------
[12/08 18:57:19]  Iteration: 25 (6 solution, 18 counterexamples)
[12/08 18:57:29]  Generator returned sat in 9.722071 secs.
[12/08 18:57:30]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + 1c_f[n][t-2] + -1S_f[n][t-2] + -3/2A_f[n][t-1] + -3/2A_f[n][t-2] + 1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 2expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:57:36]  Improved number of small numbers from 72 to 74 out of a max of 114
[12/08 18:57:36]  Verifer returned sat in 6.247772 secs.
[12/08 18:57:36]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0            -19.615967            -19.900908          -19.615967         0.285103         0.285103          -19.900908          0.000000  0.284941
1            -18.492209            -18.492209          -18.492209         1.408699         1.408699          -18.492209          0.000000  0.000000
2            -18.207106            -18.207106          -18.207106         0.285103         0.285103          -18.207106          0.000000  0.000000
3            -13.821640            -13.821640          -13.821640         4.385466         4.385466          -13.821640          0.000000  0.000000
4              6.768268              6.768268            6.768268        20.589908        20.589908            6.768268          0.000000  0.000000
5            108.478888            106.768268          108.478888       101.710620       101.710620          106.768268          1.140413  0.570207
6            209.334198            206.768268          209.334198       101.425517       101.425517          206.768268          1.995723  0.570207
7            309.904405            306.768268          309.904405       101.140413       101.140413          306.768268          2.565930  0.570207
8            410.189508            406.768268          410.189508       100.855310       100.855310          406.768268          2.851033  0.570207
fefficient=False, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=4000/1403, 
, fast_decrease=True, alpha=400/1403, buf_size=800/1403.[0m
[12/08 18:57:49]  --------------------------------------------------------------------------------
[12/08 18:57:49]  Iteration: 26 (6 solution, 19 counterexamples)
[12/08 18:59:22]  Generator returned sat in 91.223331 secs.
[12/08 18:59:22]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -1c_f[n][t-2] + 2c_f[n][t-3] + -1/2S_f[n][t-2] + 1/2S_f[n][t-3] + -1/2A_f[n][t-1] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 3/2expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 18:59:25]  Improved number of small numbers from 76 to 78 out of a max of 114
[12/08 18:59:25]  Verifer returned sat in 3.188322 secs.
[12/08 18:59:25]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0           -101.836426          -8309.911612         -101.836426         0.075195         0.075195        -8309.911612       8208.000000  0.075187
1            -99.836510          -8307.836510          -99.836510         2.075102         2.075102        -8307.836510       8208.000000  0.000000
2            -99.653806          -8307.653806          -99.653806         0.182704         0.182704        -8307.653806       8208.000000  0.000000
3            -95.162657          -8303.162657          -95.162657         4.491149         4.491149        -8303.162657       8208.000000  0.000000
4            -74.595201          -8282.595201          -74.595201        20.567456        20.567456        -8282.595201       8208.000000  0.000000
5             25.855411          -8182.595201           25.855411       100.450612       100.450612        -8182.595201       8208.300408  0.150204
6            126.080717          -8082.595201          126.080717       100.375510       100.375510        -8082.595201       8208.525714  0.150204
7            226.230921          -7982.595201          226.230921       100.300408       100.300408        -7982.595201       8208.675918  0.150204
8            326.306023          -7882.595201          326.306023       100.225306       100.225306        -7882.595201       8208.751020  0.150204
fefficient=False, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=184/245, 
, fast_decrease=True, alpha=92/1225, buf_size=184/1225.[0m
[12/08 18:59:39]  --------------------------------------------------------------------------------
[12/08 18:59:39]  Iteration: 27 (6 solution, 20 counterexamples)
[12/08 19:07:10]  Generator returned sat in 449.810077 secs.
[12/08 19:07:10]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -1c_f[n][t-2] + 3/2c_f[n][t-3] + -1/2S_f[n][t-1] + 1/2S_f[n][t-2] + 1/2S_f[n][t-3] + 1/2A_f[n][t-1] + -2A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 1expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:07:14]  Improved number of small numbers from 38 to 51 out of a max of 114
[12/08 19:07:14]  Verifer returned sat in 3.502012 secs.
[12/08 19:07:14]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          -4102.970947          -8251.951111        -4102.970947         0.075195         0.075195        -8251.951111       3748.970856  400.009308
1          -4102.970947          -8151.951111        -4102.970947         0.009521         0.009521        -8151.951111       3748.970856  300.009308
2          -4102.970947          -8051.951111        -4102.970947        40.028198        40.028198        -8051.951111       3748.970856  200.009308
3          -4102.970947          -7951.951111        -4102.970947        60.018799        60.018799        -7951.951111       3748.970856  100.009308
4          -4102.970947          -7851.951111        -4102.970947        80.009399        80.009399        -7851.951111       3748.970856    0.009308
5          -4002.980255          -7751.951111        -4002.980255       100.000000       100.000000        -7751.951111       3748.970856    0.000000
6          -3553.003754          -7651.951111        -3553.003754       449.976501       449.976501        -7651.951111       3748.970856  349.976501
7          -3553.003754          -7551.951111        -3553.003754       344.978851       344.978851        -7551.951111       3748.970856  249.976501
8          -3510.500229          -7451.951111        -3510.500229       292.480026       292.480026        -7451.951111       3748.970856  192.480026
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=163763/8192, buf_size=1638439/4096.[0m
[12/08 19:07:27]  --------------------------------------------------------------------------------
[12/08 19:07:27]  Iteration: 28 (6 solution, 21 counterexamples)
[12/08 19:08:33]  Generator returned sat in 64.638550 secs.
[12/08 19:08:33]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 3/2c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-3] + -1A_f[n][t-1] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:08:41]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 19:08:41]  Verifer returned sat in 8.001160 secs.
[12/08 19:08:41]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0           61352.64502           61078.77002         61352.64502           0.1250           0.1250         61078.77002               0.0  273.8750
1           61352.64502           61178.77002         61352.64502         273.7500         273.7500         61178.77002               0.0  173.8750
2           61352.64502           61278.77002         61352.64502          34.2500          34.2500         61278.77002               0.0   73.8750
3           61352.64502           61352.64502         61352.64502          54.1250          54.1250         61352.64502               0.0    0.0000
4           61751.52002           61452.64502         61751.52002         398.8750         398.8750         61452.64502              25.0  273.8750
5           61783.89502           61552.64502         61783.89502         306.2500         306.2500         61552.64502              25.0  206.2500
6           61850.64502           61652.64502         61850.64502         273.0000         273.0000         61652.64502              25.0  173.0000
7           61934.02002           61752.64502         61934.02002         256.3750         256.3750         61752.64502              25.0  156.3750
8           62025.70752           61852.64502         62025.70752         248.0625         248.0625         61852.64502              25.0  148.0625
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=25, 
, fast_decrease=True, alpha=159/8, buf_size=2191/8.[0m
[12/08 19:08:55]  --------------------------------------------------------------------------------
[12/08 19:08:55]  Iteration: 29 (6 solution, 22 counterexamples)
[12/08 19:18:22]  Generator returned sat in 564.924839 secs.
[12/08 19:18:22]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -3/2c_f[n][t-2] + -3/2c_f[n][t-3] + 1/2S_f[n][t-1] + 1S_f[n][t-2] + -1/2S_f[n][t-3] + 1/2A_f[n][t-1] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 2expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:18:26]  Improved number of small numbers from 46 to 48 out of a max of 114
[12/08 19:18:26]  Verifer returned sat in 4.181445 secs.
[12/08 19:18:26]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          61355.114829          61121.342324        61355.114829         0.124756         0.124756        61121.342324           0.00000  233.772505
1          61355.114829          61221.342324        61355.114829         0.015625         0.015625        61221.342324           0.00000  133.772505
2          61355.114829          61321.342324        61355.114829         0.015594         0.015594        61321.342324           0.00000   33.772505
3          61355.114829          61355.114829        61355.114829        16.525685        16.525685        61355.114829           0.00000    0.000000
4          61780.390574          61455.114829        61780.390574       425.275746       425.275746        61455.114829          29.24153  296.034216
5          61780.390574          61555.114829        61780.390574       296.034216       296.034216        61555.114829          29.24153  196.034216
6          61848.883557          61655.114829        61848.883557       264.527198       264.527198        61655.114829          29.24153  164.527198
7          61933.130048          61755.114829        61933.130048       248.773689       248.773689        61755.114829          29.24153  148.773689
8          62025.253294          61855.114829        62025.253294       240.896935       240.896935        61855.114829          29.24153  140.896935
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=40243831/1376256, 
, fast_decrease=True, alpha=56805277/3440640, buf_size=2037094327/6881280.[0m
[12/08 19:18:40]  --------------------------------------------------------------------------------
[12/08 19:18:40]  Iteration: 30 (6 solution, 23 counterexamples)
[12/08 19:21:54]  Generator returned sat in 191.827166 secs.
[12/08 19:21:54]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + -2c_f[n][t-2] + -2c_f[n][t-3] + -1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:21:59]  Verifer returned unsat in 5.197350 secs.
[12/08 19:25:06]  Verifer returned unsat in 186.831882 secs.
[12/08 19:25:06]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + -2c_f[n][t-2] + -2c_f[n][t-3] + -1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:25:06]  --------------------------------------------------------------------------------
[12/08 19:25:06]  Iteration: 31 (7 solution, 23 counterexamples)
[12/08 19:25:19]  Generator returned sat in 11.102779 secs.
[12/08 19:25:19]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + -2c_f[n][t-2] + -2c_f[n][t-3] + -2A_f[n][t-1] + -1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:25:24]  Verifer returned unsat in 4.781441 secs.
[12/08 19:26:56]  Verifer returned unsat in 92.097617 secs.
[12/08 19:26:56]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + -2c_f[n][t-2] + -2c_f[n][t-3] + -2A_f[n][t-1] + -1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:26:56]  --------------------------------------------------------------------------------
[12/08 19:26:56]  Iteration: 32 (8 solution, 23 counterexamples)
[12/08 19:29:12]  Generator returned sat in 134.292941 secs.
[12/08 19:29:12]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + 1S_f[n][t-2] + -1A_f[n][t-1] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:29:16]  Improved number of small numbers from 78 to 114 out of a max of 114
[12/08 19:29:16]  Verifer returned sat in 3.629343 secs.
[12/08 19:29:16]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0          64502.129883          64501.879883        64502.129883       177.749756       177.749756        64501.879883           0.00000     0.25
1          64502.129883          64502.129883        64502.129883         0.124756         0.124756        64502.129883           0.00000     0.00
2          64591.004883          64591.004883        64591.004883        88.875000        88.875000        64591.004883           0.00000     0.00
3          64749.254883          64691.004883        64749.254883       158.250000       158.250000        64691.004883          20.00000    38.25
4          64849.379883          64791.004883        64849.379883       138.375000       138.375000        64791.004883          20.12500    38.25
5          64929.629883          64891.004883        64929.629883       118.500000       118.500000        64891.004883          20.12500    18.50
6          65250.504883          64991.004883        65250.504883       339.375000       339.375000        64991.004883         221.25000    38.25
7          65501.817383          65091.004883        65501.817383       289.562500       289.562500        65091.004883         372.56250    38.25
8          65728.223633          65191.004883        65728.223633       264.656250       264.656250        65191.004883         498.96875    38.25
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=15327/32, 
, fast_decrease=True, alpha=159/8, buf_size=153/4.[0m
[12/08 19:29:29]  --------------------------------------------------------------------------------
[12/08 19:29:29]  Iteration: 33 (8 solution, 24 counterexamples)
[12/08 19:41:08]  Generator returned sat in 697.539660 secs.
[12/08 19:41:08]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1/2c_f[n][t-1] + 1c_f[n][t-2] + 2c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-3] + 1/2A_f[n][t-1] + -1/2A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:41:13]  Verifer returned unsat in 4.232829 secs.
[12/08 19:43:04]  Verifer returned unsat in 111.121323 secs.
[12/08 19:43:04]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1/2c_f[n][t-1] + 1c_f[n][t-2] + 2c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-3] + 1/2A_f[n][t-1] + -1/2A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:43:04]  --------------------------------------------------------------------------------
[12/08 19:43:04]  Iteration: 34 (9 solution, 24 counterexamples)
[12/08 19:45:05]  Generator returned sat in 119.838641 secs.
[12/08 19:45:06]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-3] + -2S_f[n][t-1] + -1S_f[n][t-2] + 1/2S_f[n][t-3] + -1/2A_f[n][t-1] + 3/2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:45:10]  Improved number of small numbers from 102 to 102 out of a max of 114
[12/08 19:45:10]  Verifer returned sat in 4.260463 secs.
[12/08 19:45:10]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t   queue_t
0           -158.132100           -158.433305         -158.132100       272.642319       272.642319         -158.433305           0.00000  0.301205
1           -158.132100           -158.132100         -158.132100         0.150602         0.150602         -158.132100           0.00000  0.000000
2           -154.981497           -154.981497         -154.981497         3.150602         3.150602         -154.981497           0.00000  0.000000
3           -146.526678           -146.526678         -146.526678         8.454819         8.454819         -146.526678           0.00000  0.000000
4           -130.693847           -130.693847         -130.693847        15.832831        15.832831         -130.693847           0.00000  0.000000
5           -102.178787           -102.178787         -102.178787        28.515060        28.515060         -102.178787           0.00000  0.000000
6            -53.603485            -53.603485          -53.603485        48.575301        48.575301          -53.603485           0.00000  0.000000
7             27.714286             27.714286           27.714286        81.317771        81.317771           27.714286           0.00000  0.000000
8            161.834768            127.714286          161.834768       134.120482       134.120482          127.714286          25.51506  8.605422
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=8471/332, 
, fast_decrease=True, alpha=2807/332, buf_size=2857/332.[0m
[12/08 19:45:23]  --------------------------------------------------------------------------------
[12/08 19:45:23]  Iteration: 35 (9 solution, 25 counterexamples)
[12/08 19:49:08]  Generator returned sat in 223.099180 secs.
[12/08 19:49:08]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -2c_f[n][t-2] + 1/2c_f[n][t-3] + -2S_f[n][t-1] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -2A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1/2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 19:49:21]  Verifer returned unsat in 12.101268 secs.
[12/08 19:56:36]  Improved gap from 0.125 to 37.5
[12/08 19:56:37]  Improved number of small numbers from 81 to 134 out of a max of 134
[12/08 19:56:37]  Verifer returned sat in 436.116078 secs.
[12/08 19:56:37]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0       -10770.095703       -19324.332520     -10770.095703   26114.368652   26114.368652     -19324.332520          8554.0              -19324.332520   -9552.933350   0.236816        0.236816
1       -10732.832520       -19324.332520     -10732.832520      37.500000      37.500000     -19324.332520          8554.0              -19324.450684   -9490.433350  37.500000        0.000000
2       -10732.832520       -19286.832520     -10732.832520       2.368652       2.368652     -19286.832520          8554.0              -19249.214111   -9427.933594   0.000000      -37.500244
3       -10647.924561       -19249.332275     -10647.924561      84.907959      84.907959     -19249.332275          8554.0              -19201.806152   -9375.341309  47.407715        0.000000
4       -10615.259766       -19197.806152     -10615.259766      80.072510      80.072510     -19197.806152          8554.0              -19197.806152   -9316.959717  28.546387       -8.953613
5       -10563.615234       -19160.187744     -10563.615234      80.190918      80.190918     -19160.187744          8554.0              -19160.187744   -9259.650635  42.572510        0.000000
6       -10525.878418       -19117.496826     -10525.878418      80.309326      80.309326     -19117.496826          8554.0              -19117.496826   -9197.387451  37.618408        0.000000
7       -10483.069092       -19079.760010     -10483.069092      80.427734      80.427734     -19079.760010          8554.0              -19079.760010   -9140.196777  42.690918        0.000000
8       -10445.213867       -19036.950928     -10445.213867      80.546143      80.546143     -19036.950928          8554.0              -19036.950928   -9078.052002  37.737061        0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=485/4096, buf_size=9/38.[0m
[12/08 19:56:50]  --------------------------------------------------------------------------------
[12/08 19:56:50]  Iteration: 36 (9 solution, 26 counterexamples)
[12/08 20:28:06]  Generator returned sat in 1874.155079 secs.
[12/08 20:28:06]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 3/2S_f[n][t-2] + -2S_f[n][t-3] + -1A_f[n][t-1] + -2A_f[n][t-2] + 3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 20:28:31]  Verifer returned unsat in 25.093514 secs.
[12/08 20:34:29]  Improved gap from 0.03125 to 100
[12/08 20:34:31]  Improved number of small numbers from 79 to 134 out of a max of 134
[12/08 20:34:31]  Verifer returned sat in 359.185278 secs.
[12/08 20:34:31]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t     queue_t  bottle_queue_t
0         8173.023193         7965.997559       8173.023193     135.025635     135.025635       7965.997559        0.000000                8066.023193   -9310.985352  207.025635      107.025635
1         8173.023193         8066.023193       8173.023193       0.025879       0.025879       8066.023193        0.000000                8066.023193   -9310.985352  107.000000        7.025635
2         8173.023193         8165.997559       8173.023193      37.589844      37.589844       8165.997559        0.000000                8266.023193   -9310.985352    7.025635      -92.974365
3         8324.741211         8324.715576       8324.741211     158.743652     158.743652       8324.715576        0.000000                8324.715576   -9310.985352    0.025635      -41.256348
4         8573.382324         8444.356445       8573.382324     248.666748     248.666748       8444.356445        0.359131                8444.356445   -9310.985352  128.666748      107.025635
5         8673.407959         8564.330811       8673.407959     228.692383     228.692383       8564.330811        0.384766                8564.330811   -9310.985352  108.692383      107.025635
6         8773.433594         8573.177246       8773.433594     208.718018     208.718018       8573.177246        0.410400                8573.177246   -9310.985352  199.845947      107.025635
7         8773.433594         8764.330811       8773.433594     188.743652     188.743652       8764.330811        0.410400                8764.330811   -9310.985352    8.692383        7.025635
8         8973.459229         8766.023193       8973.459229     208.718018     208.718018       8766.023193        0.436035                8766.023193   -9310.985352  207.000000      107.025635
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=True, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=893/2048, 
, fast_decrease=True, alpha=81815/4096, buf_size=438377/4096.[0m
[12/08 20:34:45]  --------------------------------------------------------------------------------
[12/08 20:34:45]  Iteration: 37 (9 solution, 27 counterexamples)
[12/08 20:36:51]  Generator returned sat in 123.871165 secs.
[12/08 20:36:51]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1c_f[n][t-1] + 3/2c_f[n][t-2] + 1c_f[n][t-3] + 2S_f[n][t-1] + 3/2S_f[n][t-2] + 1S_f[n][t-3] + 1/2A_f[n][t-1] + 2A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 1/2expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 20:36:58]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 20:36:58]  Verifer returned sat in 7.667244 secs.
[12/08 20:36:58]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0           -416.079167           -441.516667         -416.079167           0.1250           0.1250         -441.516667             0.000  25.4375
1           -316.204167           -341.516667         -316.204167         125.3125         125.3125         -341.516667             0.000  25.3125
2           -250.266667           -250.266667         -250.266667          91.2500          91.2500         -250.266667             0.000   0.0000
3           -156.141667           -156.141667         -156.141667          94.1250          94.1250         -156.141667             0.000   0.0000
4            -59.141667            -59.141667          -59.141667          97.0000          97.0000          -59.141667             0.000   0.0000
5             40.733333             40.733333           40.733333          99.8750          99.8750           40.733333             0.000   0.0000
6            172.045833            140.733333          172.045833         131.3125         131.3125          140.733333             5.875  25.4375
7            275.045833            240.733333          275.045833         128.4375         128.4375          240.733333             8.875  25.4375
8            375.170833            340.733333          375.170833         125.5625         125.5625          340.733333             9.000  25.4375
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=9, 
, fast_decrease=True, alpha=23/8, buf_size=407/16.[0m
[12/08 20:37:12]  --------------------------------------------------------------------------------
[12/08 20:37:12]  Iteration: 38 (9 solution, 28 counterexamples)
[12/08 20:46:22]  Generator returned sat in 547.814130 secs.
[12/08 20:46:22]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1c_f[n][t-1] + -2c_f[n][t-2] + 1/2S_f[n][t-1] + -1/2S_f[n][t-2] + 2S_f[n][t-3] + 1/2A_f[n][t-1] + -2A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 3/2expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 20:46:33]  Improved number of small numbers from 69 to 71 out of a max of 114
[12/08 20:46:33]  Verifer returned sat in 10.563141 secs.
[12/08 20:46:33]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0           -819.508789           -826.933648         -819.508789         0.124756         0.124756         -826.933648          1.000000   6.424859
1           -819.508607           -820.508607         -819.508607         6.425041         6.425041         -820.508607          1.000000   0.000000
2           -804.295985           -805.295985         -804.295985        15.212623        15.212623         -805.295985          1.000000   0.000000
3           -776.666083           -777.666083         -776.666083        27.629902        27.629902         -777.666083          1.000000   0.000000
4           -723.819575           -724.819575         -723.819575        52.846507        52.846507         -724.819575          1.000000   0.000000
5           -623.835200           -624.835200         -623.835200        99.984375        99.984375         -624.835200          1.000000   0.000000
6           -434.231570           -524.835200         -434.231570       189.603631       189.603631         -524.835200          1.046875  89.556756
7           -334.200320           -424.835200         -334.200320       189.588006       189.588006         -424.835200          1.078125  89.556756
8           -234.184695           -324.835200         -234.184695       189.572381       189.572381         -324.835200          1.093750  89.556756
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=3/32, 
, fast_decrease=True, alpha=1/64, buf_size=389751/4352.[0m
[12/08 20:46:46]  --------------------------------------------------------------------------------
[12/08 20:46:46]  Iteration: 39 (9 solution, 29 counterexamples)
[12/08 21:09:00]  Generator returned sat in 1332.287850 secs.
[12/08 21:09:01]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -2c_f[n][t-2] + -1c_f[n][t-3] + -2S_f[n][t-1] + -1S_f[n][t-2] + -2S_f[n][t-3] + 3/2A_f[n][t-1] + 3/2A_f[n][t-2] + 3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 21:09:05]  Improved number of small numbers from 51 to 53 out of a max of 114
[12/08 21:09:05]  Verifer returned sat in 4.093845 secs.
[12/08 21:09:05]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0         -20595.874268         -20595.905670       -20595.874268         0.124512         0.124512       -20595.905670          0.000000   0.031403
1         -20480.812103         -20495.905670       -20480.812103       115.093567       115.093567       -20495.905670          0.000000  15.093567
2         -20480.812103         -20480.812103       -20480.812103         5.031189         5.031189       -20480.812103          0.000000   0.000000
3         -20380.812103         -20380.812103       -20380.812103       100.000000       100.000000       -20380.812103          0.000000   0.000000
4         -20233.327698         -20280.812103       -20233.327698       147.484406       147.484406       -20280.812103         20.000000  27.484406
5         -20133.296509         -20180.812103       -20133.296509       127.515594       127.515594       -20180.812103         20.031189  27.484406
6         -20053.234131         -20080.812103       -20053.234131       107.546783       107.546783       -20080.812103         20.031189   7.546783
7         -19867.069901         -19980.812103       -19867.069901       193.711014       193.711014       -19980.812103         86.257797  27.484406
8         -19720.812103         -19880.812103       -19720.812103       173.742203       173.742203       -19880.812103        132.515594  27.484406
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=4, loss_amount=4342271/32768, 
, fast_decrease=True, alpha=327169/16384, buf_size=900609/32768.[0m
[12/08 21:09:18]  --------------------------------------------------------------------------------
[12/08 21:09:18]  Iteration: 40 (9 solution, 30 counterexamples)
[12/08 21:18:59]  Generator returned sat in 578.734245 secs.
[12/08 21:18:59]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -1c_f[n][t-2] + -1/2c_f[n][t-3] + -3/2S_f[n][t-1] + 1S_f[n][t-2] + 1/2S_f[n][t-3] + -3/2A_f[n][t-1] + -1/2A_f[n][t-2] + 3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 3/2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 21:19:01]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 21:19:01]  Verifer returned sat in 2.151651 secs.
[12/08 21:19:01]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0         -20931.187256         -20931.312256       -20931.187256     16628.312256     16628.312256       -20931.312256             0.000    0.125
1         -20380.812256         -20831.312256       -20380.812256       550.500000       550.500000       -20831.312256             0.000  450.500
2         -20380.812256         -20731.312256       -20380.812256       200.125000       200.125000       -20731.312256             0.000  350.500
3         -20380.812256         -20631.312256       -20380.812256       200.250000       200.250000       -20631.312256             0.000  250.500
4         -19530.312256         -20531.312256       -19530.312256      1101.000000      1101.000000       -20531.312256           450.500  550.500
5         -19430.187256         -20431.312256       -19430.187256       650.625000       650.625000       -20431.312256           450.625  550.500
6         -19430.187256         -20331.312256       -19430.187256       425.437500       425.437500       -20331.312256           450.625  450.500
7         -19430.187256         -20231.312256       -19430.187256       312.843750       312.843750       -20231.312256           450.625  350.500
8         -19430.187256         -20131.312256       -19430.187256       256.546875       256.546875       -20131.312256           450.625  250.500
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=2, loss_amount=3605/8, 
, fast_decrease=True, alpha=1/8, buf_size=1101/2.[0m
[12/08 21:19:15]  --------------------------------------------------------------------------------
[12/08 21:19:15]  Iteration: 41 (9 solution, 31 counterexamples)
[12/08 21:36:29]  Generator returned sat in 1031.878441 secs.
[12/08 21:36:29]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1/2c_f[n][t-1] + -2c_f[n][t-2] + 1c_f[n][t-3] + -3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 1S_f[n][t-3] + -2A_f[n][t-1] + -1/2A_f[n][t-2] + 2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 2expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 21:36:31]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 21:36:31]  Verifer returned sat in 2.350739 secs.
[12/08 21:36:31]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0           1366.540094           1366.405660         1366.540094         0.009434         0.009434         1366.405660          0.000000   0.134434
1           1505.405660           1466.405660         1505.405660       139.000000       139.000000         1466.405660          0.009434  38.990566
2           1505.405660           1505.396226         1505.405660         1.009434         1.009434         1505.396226          0.009434   0.000000
3           1506.424528           1506.415094         1506.424528         1.018868         1.018868         1506.415094          0.009434   0.000000
4           1607.481132           1606.415094         1607.481132       101.056604       101.056604         1606.415094          0.009434   1.056604
5           1707.471698           1706.415094         1707.471698       101.047170       101.047170         1706.415094          0.009434   1.047170
6           2307.485849           1806.415094         2307.485849       601.061321       601.061321         1806.415094        462.080189  38.990566
7           2669.035377           1906.415094         2669.035377       400.540094       400.540094         1906.415094        723.629717  38.990566
8           2930.324292           2006.415094         2930.324292       300.279481       300.279481         2006.415094        884.918632  38.990566
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=750403/848, 
, fast_decrease=True, alpha=1/106, buf_size=4133/106.[0m
[12/08 21:36:45]  --------------------------------------------------------------------------------
[12/08 21:36:45]  Iteration: 42 (9 solution, 32 counterexamples)
[12/08 22:01:58]  Generator returned sat in 1511.202340 secs.
[12/08 22:01:58]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + -2c_f[n][t-2] + -1c_f[n][t-3] + 1/2S_f[n][t-2] + 1/2S_f[n][t-3] + 3/2A_f[n][t-1] + -2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:02:03]  Improved number of small numbers from 80 to 86 out of a max of 114
[12/08 22:02:03]  Verifer returned sat in 4.132278 secs.
[12/08 22:02:03]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           1154.168407            481.933594         1154.168407         0.124756         0.124756          481.933594        567.135417  105.099397
1           1154.168407            581.933594         1154.168407         3.999512         3.999512          581.933594        567.135417    5.099397
2           1154.168407            587.032991         1154.168407         4.974394         4.974394          587.032991        567.135417    0.000000
3           1160.717599            593.582182         1160.717599         6.549191         6.549191          593.582182        567.135417    0.000000
4           1168.841588            601.706171         1168.841588         8.123989         8.123989          601.706171        567.135417    0.000000
5           1178.540375            611.404958         1178.540375         9.698787         9.698787          611.404958        567.135417    0.000000
6           1248.131682            680.996266         1248.131682        69.591307        69.591307          680.996266        567.135417    0.000000
7           1621.122585            780.996266         1621.122585       372.990903       372.990903          780.996266        567.135417  272.990903
8           1621.122585            880.996266         1621.122585       272.865903       272.865903          880.996266        567.135417  172.990903
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=2337/1484, buf_size=1118683/4096.[0m
[12/08 22:02:16]  --------------------------------------------------------------------------------
[12/08 22:02:16]  Iteration: 43 (9 solution, 33 counterexamples)
[12/08 22:15:57]  Generator returned sat in 819.276050 secs.
[12/08 22:15:57]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + 1S_f[n][t-3] + -1A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 1expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:16:05]  Verifer returned unsat in 7.659080 secs.
[12/08 22:16:50]  Verifer returned unsat in 44.892569 secs.
[12/08 22:16:50]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + 1S_f[n][t-3] + -1A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 1expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:16:50]  --------------------------------------------------------------------------------
[12/08 22:16:50]  Iteration: 44 (10 solution, 33 counterexamples)
[12/08 22:17:14]  Generator returned sat in 21.871537 secs.
[12/08 22:17:15]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + 1S_f[n][t-3] + -1A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:17:21]  Verifer returned unsat in 5.961568 secs.
[12/08 22:18:22]  Verifer returned unsat in 60.900115 secs.
[12/08 22:18:22]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + 1S_f[n][t-3] + -1A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:18:22]  --------------------------------------------------------------------------------
[12/08 22:18:22]  Iteration: 45 (11 solution, 33 counterexamples)
[12/08 22:18:47]  Generator returned sat in 23.319294 secs.
[12/08 22:18:47]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + 1S_f[n][t-3] + -1A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:18:53]  Verifer returned unsat in 5.801701 secs.
[12/08 22:19:53]  Verifer returned unsat in 59.370520 secs.
[12/08 22:19:53]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + 1S_f[n][t-3] + -1A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:19:53]  --------------------------------------------------------------------------------
[12/08 22:19:53]  Iteration: 46 (12 solution, 33 counterexamples)
[12/08 22:20:18]  Generator returned sat in 22.535802 secs.
[12/08 22:20:18]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + 1S_f[n][t-3] + -1A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:20:23]  Verifer returned unsat in 4.933962 secs.
[12/08 22:20:54]  Verifer returned unsat in 30.885028 secs.
[12/08 22:20:54]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + 1S_f[n][t-3] + -1A_f[n][t-1] + -1A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:20:54]  --------------------------------------------------------------------------------
[12/08 22:20:54]  Iteration: 47 (13 solution, 33 counterexamples)
[12/08 22:21:44]  Generator returned sat in 47.979990 secs.
[12/08 22:21:44]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + -1A_f[n][t-1] + -1A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:21:51]  Verifer returned unsat in 6.742907 secs.
[12/08 22:23:06]  Verifer returned unsat in 74.841151 secs.
[12/08 22:23:06]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -1c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + -1A_f[n][t-1] + -1A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:23:06]  --------------------------------------------------------------------------------
[12/08 22:23:06]  Iteration: 48 (14 solution, 33 counterexamples)
[12/08 22:48:40]  Generator returned sat in 1531.844891 secs.
[12/08 22:48:40]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1S_f[n][t-2] + -1/2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:48:44]  Verifer returned unsat in 3.478207 secs.
[12/08 22:50:33]  Verifer returned unsat in 109.341517 secs.
[12/08 22:50:33]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1S_f[n][t-2] + -1/2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:50:33]  --------------------------------------------------------------------------------
[12/08 22:50:33]  Iteration: 49 (15 solution, 33 counterexamples)
[12/08 22:50:59]  Generator returned sat in 23.032488 secs.
[12/08 22:50:59]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1S_f[n][t-2] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:51:02]  Verifer returned unsat in 3.472905 secs.
[12/08 22:53:50]  Verifer returned unsat in 167.084054 secs.
[12/08 22:53:50]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1S_f[n][t-2] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:53:50]  --------------------------------------------------------------------------------
[12/08 22:53:50]  Iteration: 50 (16 solution, 33 counterexamples)
[12/08 22:54:15]  Generator returned sat in 23.640828 secs.
[12/08 22:54:16]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1S_f[n][t-2] + 1S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:54:19]  Verifer returned unsat in 3.414935 secs.
[12/08 22:56:54]  Verifer returned unsat in 155.081498 secs.
[12/08 22:56:54]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1S_f[n][t-2] + 1S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:56:54]  --------------------------------------------------------------------------------
[12/08 22:56:54]  Iteration: 51 (17 solution, 33 counterexamples)
[12/08 22:57:22]  Generator returned sat in 25.837218 secs.
[12/08 22:57:23]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1S_f[n][t-2] + 1S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:57:26]  Verifer returned unsat in 3.378396 secs.
[12/08 22:58:50]  Verifer returned unsat in 84.219814 secs.
[12/08 22:58:50]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1S_f[n][t-2] + 1S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:58:50]  --------------------------------------------------------------------------------
[12/08 22:58:50]  Iteration: 52 (18 solution, 33 counterexamples)
[12/08 22:59:21]  Generator returned sat in 28.762428 secs.
[12/08 22:59:22]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 22:59:25]  Verifer returned unsat in 3.536860 secs.
[12/08 23:00:55]  Verifer returned unsat in 89.723812 secs.
[12/08 23:00:55]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:00:55]  --------------------------------------------------------------------------------
[12/08 23:00:55]  Iteration: 53 (19 solution, 33 counterexamples)
[12/08 23:01:21]  Generator returned sat in 24.120144 secs.
[12/08 23:01:22]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:01:25]  Verifer returned unsat in 3.550883 secs.
[12/08 23:03:07]  Verifer returned unsat in 102.063046 secs.
[12/08 23:03:07]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:03:07]  --------------------------------------------------------------------------------
[12/08 23:03:07]  Iteration: 54 (20 solution, 33 counterexamples)
[12/08 23:03:33]  Generator returned sat in 23.653289 secs.
[12/08 23:03:33]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 3/2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:03:37]  Verifer returned unsat in 3.885240 secs.
[12/08 23:04:22]  Verifer returned unsat in 44.399182 secs.
[12/08 23:04:22]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 3/2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:04:22]  --------------------------------------------------------------------------------
[12/08 23:04:22]  Iteration: 55 (21 solution, 33 counterexamples)
[12/08 23:04:48]  Generator returned sat in 23.525910 secs.
[12/08 23:04:48]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:04:51]  Verifer returned unsat in 3.462761 secs.
[12/08 23:05:42]  Verifer returned unsat in 50.232147 secs.
[12/08 23:05:42]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:05:42]  --------------------------------------------------------------------------------
[12/08 23:05:42]  Iteration: 56 (22 solution, 33 counterexamples)
[12/08 23:06:11]  Generator returned sat in 26.886245 secs.
[12/08 23:06:11]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:06:15]  Verifer returned unsat in 3.715133 secs.
[12/08 23:07:49]  Verifer returned unsat in 93.852771 secs.
[12/08 23:07:49]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + 2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:07:49]  --------------------------------------------------------------------------------
[12/08 23:07:49]  Iteration: 57 (23 solution, 33 counterexamples)
[12/08 23:08:15]  Generator returned sat in 23.929615 secs.
[12/08 23:08:15]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1/2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 1A_f[n][t-1] + 1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:08:18]  Verifer returned unsat in 2.908103 secs.
[12/08 23:09:46]  Verifer returned unsat in 87.332205 secs.
[12/08 23:09:46]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -1/2c_f[n][t-2] + -1c_f[n][t-3] + 3/2S_f[n][t-1] + 3/2S_f[n][t-2] + 1A_f[n][t-1] + 1A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:09:46]  --------------------------------------------------------------------------------
[12/08 23:09:46]  Iteration: 58 (24 solution, 33 counterexamples)
[12/08 23:10:53]  Generator returned sat in 65.708842 secs.
[12/08 23:10:54]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1/2c_f[n][t-1] + 1/2c_f[n][t-2] + -2c_f[n][t-3] + 2S_f[n][t-1] + 2S_f[n][t-2] + 1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + -1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 2expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/08 23:10:56]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/08 23:10:56]  Verifer returned sat in 2.105395 secs.
[12/08 23:10:56]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0         127917.942308         115132.817308       127917.942308         0.125000         0.125000       115132.817308      12785.000000    0.125
1         128217.692308         115232.817308       128217.692308       299.875000       299.875000       115232.817308      12785.000000  199.875
2         128217.692308         115332.817308       128217.692308        57.605769        57.605769       115332.817308      12785.000000   99.875
3         128217.692308         115432.692308       128217.692308        62.730769        62.730769       115432.692308      12785.000000    0.000
4         128285.548077         115500.548077       128285.548077        67.855769        67.855769       115500.548077      12785.000000    0.000
5         128928.942308         115600.548077       128928.942308       643.394231       643.394231       115600.548077      13017.769231  310.625
6         129029.067308         115700.548077       129029.067308       410.750000       410.750000       115700.548077      13017.894231  310.625
7         129029.067308         115800.548077       129029.067308       310.500000       310.500000       115800.548077      13017.894231  210.625
8         129078.817308         115900.548077       129078.817308       260.375000       260.375000       115900.548077      13017.894231  160.375
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=24221/104, 
, fast_decrease=True, alpha=41/8, buf_size=2485/8.[0m
[12/08 23:11:09]  --------------------------------------------------------------------------------
[12/08 23:11:09]  Iteration: 59 (24 solution, 34 counterexamples)
[12/09 00:22:10]  Generator returned sat in 4259.105900 secs.
[12/09 00:22:11]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + -1S_f[n][t-1] + 1/2S_f[n][t-2] + 3/2S_f[n][t-3] + -2A_f[n][t-1] + 1A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 2expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 00:22:20]  Improved number of small numbers from 39 to 41 out of a max of 114
[12/09 00:22:20]  Verifer returned sat in 9.562373 secs.
[12/09 00:22:20]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0         -52454.198486         -78759.167232       -52454.198486         0.124512         0.124512       -78759.167232      26005.000000  299.968746
1         -52354.167232         -78659.167232       -52354.167232       400.000000       400.000000       -78659.167232      26005.031189  299.968811
2         -52354.167232         -78559.167232       -52354.167232         1.527698         1.527698       -78559.167232      26005.031189  199.968811
3         -52354.167232         -78459.167232       -52354.167232         2.223080         2.223080       -78459.167232      26005.031189   99.968811
4         -52354.167232         -78359.198421       -52354.167232         2.918461         2.918461       -78359.198421      26005.031189    0.000000
5         -52350.553390         -78355.584579       -52350.553390         3.613842         3.613842       -78355.584579      26005.031189    0.000000
6         -52346.244167         -78351.275356       -52346.244167         4.309223         4.309223       -78351.275356      26005.031189    0.000000
7         -52311.770381         -78316.801570       -52311.770381        34.473786        34.473786       -78316.801570      26005.031189    0.000000
8         -52109.653048         -78216.801570       -52109.653048       202.117333       202.117333       -78216.801570      26005.031189  102.117333
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=17716311/25477120, buf_size=4914689/16384.[0m
[12/09 00:22:33]  --------------------------------------------------------------------------------
[12/09 00:22:33]  Iteration: 60 (24 solution, 35 counterexamples)
[12/09 01:26:33]  Generator returned sat in 3837.035700 secs.
[12/09 01:26:33]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-1c_f[n][t-1] + -2c_f[n][t-2] + -3/2c_f[n][t-3] + 2S_f[n][t-1] + 1/2S_f[n][t-2] + -1S_f[n][t-3] + -1/2A_f[n][t-1] + -2A_f[n][t-2] + 1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 2expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 01:26:36]  Improved number of small numbers from 78 to 80 out of a max of 114
[12/09 01:26:36]  Verifer returned sat in 3.345613 secs.
[12/09 01:26:36]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0         -35848.577637         -36188.815595       -35848.577637      2320.238095      2320.238095       -36188.815595          0.000000  340.237959
1         -35790.958452         -36088.815595       -35790.958452       397.857143       397.857143       -36088.815595          0.000000  297.857143
2         -35790.958452         -35988.815595       -35790.958452         0.238095         0.238095       -35988.815595          0.000000  197.857143
3         -35790.958452         -35888.815595       -35790.958452        20.000000        20.000000       -35888.815595          0.000000   97.857143
4         -35790.958452         -35790.958452       -35790.958452        39.761905        39.761905       -35790.958452          0.000000    0.000000
5         -35147.387024         -35690.958452       -35147.387024       643.571429       643.571429       -35690.958452        203.333333  340.238095
6         -35047.148929         -35590.958452       -35047.148929       440.476190       440.476190       -35590.958452        203.571429  340.238095
7         -35047.148929         -35490.958452       -35047.148929       340.000000       340.000000       -35490.958452        203.571429  240.238095
8         -34997.625119         -35390.958452       -34997.625119       289.761905       289.761905       -35390.958452        203.571429  189.761905
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=1425/7, 
, fast_decrease=True, alpha=415/21, buf_size=7145/21.[0m
[12/09 01:26:50]  --------------------------------------------------------------------------------
[12/09 01:26:50]  Iteration: 61 (24 solution, 36 counterexamples)
[12/09 01:48:55]  Generator returned sat in 1322.612266 secs.
[12/09 01:48:55]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -1/2c_f[n][t-2] + 3/2c_f[n][t-3] + 1S_f[n][t-1] + 1S_f[n][t-2] + 1/2S_f[n][t-3] + 1A_f[n][t-1] + 3/2A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 1/2expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 01:49:05]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/09 01:49:05]  Verifer returned sat in 10.220250 secs.
[12/09 01:49:05]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0          12623.101010         -16005.968434        12623.101010      1156.199074      1156.199074       -16005.968434      28618.000000  11.069444
1          12722.976010         -15905.968434        12722.976010       110.944444       110.944444       -15905.968434      28618.000000  10.944444
2          12768.128788         -15849.871212        12768.128788        56.097222        56.097222       -15849.871212      28618.000000   0.000000
3          12835.170455         -15782.829545        12835.170455        67.041667        67.041667       -15782.829545      28618.000000   0.000000
4          12913.156566         -15704.843434        12913.156566        77.986111        77.986111       -15704.843434      28618.000000   0.000000
5          13002.087121         -15615.912879        13002.087121        88.930556        88.930556       -15615.912879      28618.000000   0.000000
6          13101.962121         -15516.037879        13101.962121        99.875000        99.875000       -15516.037879      28618.000000   0.000000
7          13212.781566         -15416.037879        13212.781566       110.819444       110.819444       -15416.037879      28618.000000  10.819444
8          13345.989899         -15316.037879        13345.989899       144.027778       144.027778       -15316.037879      28650.958333  11.069444
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=791/24, 
, fast_decrease=True, alpha=197/18, buf_size=797/72.[0m
[12/09 01:49:18]  --------------------------------------------------------------------------------
[12/09 01:49:18]  Iteration: 62 (24 solution, 37 counterexamples)
[12/09 02:44:51]  Generator returned sat in 3330.653614 secs.
[12/09 02:44:52]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1c_f[n][t-1] + 1c_f[n][t-2] + -1S_f[n][t-1] + 3/2S_f[n][t-3] + 1/2A_f[n][t-1] + -2A_f[n][t-2] + 1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 1/2expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 02:44:59]  Improved number of small numbers from 97 to 99 out of a max of 114
[12/09 02:44:59]  Verifer returned sat in 7.226917 secs.
[12/09 02:44:59]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0          10358.315674          10197.433300        10358.315674      1156.198975      1156.198975        10197.433300          0.000000  160.882374
1          10442.667520          10297.433300        10442.667520       245.234220       245.234220        10297.433300          0.000000  145.234220
2          10442.667520          10397.433300        10442.667520        39.683881        39.683881        10397.433300          0.000000   45.234220
3          10442.667520          10442.667520        10442.667520        44.093114        44.093114        10442.667520          0.000000    0.000000
4          10491.169868          10491.169868        10491.169868        48.502347        48.502347        10491.169868          0.000000    0.000000
5          10606.667520          10591.169868        10606.667520       115.497653       115.497653        10591.169868          0.000000   15.497653
6          10797.988334          10691.169868        10797.988334       206.818466       206.818466        10691.169868          0.000000  106.818466
7          11005.102184          10791.169868        11005.102184       313.932316       313.932316        10791.169868         53.049883  160.882433
8          11105.595142          10891.169868        11105.595142       261.375391       261.375391        10891.169868         53.542840  160.882433
fefficient=False, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=2, loss_amount=91237/1704, 
, fast_decrease=True, alpha=5635/1278, buf_size=822431/5112.[0m
[12/09 02:45:13]  --------------------------------------------------------------------------------
[12/09 02:45:13]  Iteration: 63 (24 solution, 38 counterexamples)
[12/09 03:26:34]  Generator returned sat in 2478.662577 secs.
[12/09 03:26:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + 1c_f[n][t-2] + -3/2c_f[n][t-3] + -2S_f[n][t-1] + 2S_f[n][t-2] + 1/2S_f[n][t-3] + 1A_f[n][t-1] + -1/2A_f[n][t-2] + -1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 3/2expr + 2(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 03:26:44]  Improved number of small numbers from 45 to 47 out of a max of 114
[12/09 03:26:44]  Verifer returned sat in 10.191433 secs.
[12/09 03:26:44]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0           9278.673661           9183.960040         9278.673661        24.092285        24.092285         9183.960040          0.000000   94.713621
1           9278.673661           9278.673661         9278.673661        83.818115        83.818115         9278.673661          0.000000    0.000000
2           9278.765912           9278.765912         9278.765912         0.092251         0.092251         9278.765912          0.000000    0.000000
3           9540.822706           9378.765912         9540.822706       262.056794       262.056794         9378.765912         60.057356  101.999438
4           9620.533520           9478.765912         9620.533520       181.710252       181.710252         9478.765912         60.057356   81.710252
5          10226.377415           9578.765912        10226.377415       687.554147       687.554147         9578.765912        545.612065  101.999438
6          10568.790779           9678.765912        10568.790779       444.412803       444.412803         9678.765912        788.025429  101.999438
7          10789.633471           9778.765912        10789.633471       322.842131       322.842131         9778.765912        908.868121  101.999438
8          10949.690827           9878.765912        10949.690827       262.056794       262.056794         9878.765912        968.925477  101.999438
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=5664975/6233, 
, fast_decrease=True, alpha=7925/12466, buf_size=1271525/12466.[0m
[12/09 03:26:58]  --------------------------------------------------------------------------------
[12/09 03:26:58]  Iteration: 64 (24 solution, 39 counterexamples)
[12/09 04:01:25]  Generator returned sat in 2065.054844 secs.
[12/09 04:01:26]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -2c_f[n][t-2] + -2c_f[n][t-3] + 3/2S_f[n][t-2] + -3/2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:01:31]  Verifer returned unsat in 5.013458 secs.
[12/09 04:02:39]  Verifer returned unsat in 68.349540 secs.
[12/09 04:02:39]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -2c_f[n][t-2] + -2c_f[n][t-3] + 3/2S_f[n][t-2] + -3/2S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:02:39]  --------------------------------------------------------------------------------
[12/09 04:02:39]  Iteration: 65 (25 solution, 39 counterexamples)
[12/09 04:54:14]  Generator returned sat in 3092.420658 secs.
[12/09 04:54:15]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:54:20]  Verifer returned unsat in 5.534637 secs.
[12/09 04:55:17]  Verifer returned unsat in 57.083415 secs.
[12/09 04:55:17]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:55:18]  --------------------------------------------------------------------------------
[12/09 04:55:18]  Iteration: 66 (26 solution, 39 counterexamples)
[12/09 04:55:59]  Generator returned sat in 38.906509 secs.
[12/09 04:55:59]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:56:04]  Verifer returned unsat in 4.444151 secs.
[12/09 04:56:43]  Verifer returned unsat in 38.677913 secs.
[12/09 04:56:43]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:56:43]  --------------------------------------------------------------------------------
[12/09 04:56:43]  Iteration: 67 (27 solution, 39 counterexamples)
[12/09 04:57:25]  Generator returned sat in 39.855016 secs.
[12/09 04:57:25]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:57:30]  Verifer returned unsat in 4.352955 secs.
[12/09 04:58:04]  Verifer returned unsat in 34.264508 secs.
[12/09 04:58:04]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:58:04]  --------------------------------------------------------------------------------
[12/09 04:58:04]  Iteration: 68 (28 solution, 39 counterexamples)
[12/09 04:58:39]  Generator returned sat in 31.864911 secs.
[12/09 04:58:39]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:58:44]  Verifer returned unsat in 4.920530 secs.
[12/09 04:59:35]  Verifer returned unsat in 51.216410 secs.
[12/09 04:59:35]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 3/2(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 04:59:35]  --------------------------------------------------------------------------------
[12/09 04:59:35]  Iteration: 69 (29 solution, 39 counterexamples)
[12/09 05:00:09]  Generator returned sat in 31.599204 secs.
[12/09 05:00:10]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:00:16]  Verifer returned unsat in 5.948081 secs.
[12/09 05:01:07]  Verifer returned unsat in 51.417706 secs.
[12/09 05:01:07]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 1expr + 1(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:01:07]  --------------------------------------------------------------------------------
[12/09 05:01:07]  Iteration: 70 (30 solution, 39 counterexamples)
[12/09 05:01:44]  Generator returned sat in 33.954028 secs.
[12/09 05:01:44]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:01:54]  Verifer returned unsat in 10.141547 secs.
[12/09 05:02:37]  Verifer returned unsat in 42.520792 secs.
[12/09 05:02:37]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:02:37]  --------------------------------------------------------------------------------
[12/09 05:02:37]  Iteration: 71 (31 solution, 39 counterexamples)
[12/09 05:03:12]  Generator returned sat in 31.932577 secs.
[12/09 05:03:12]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:03:18]  Verifer returned unsat in 5.848128 secs.
[12/09 05:04:16]  Verifer returned unsat in 57.824533 secs.
[12/09 05:04:16]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1/2c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:04:16]  --------------------------------------------------------------------------------
[12/09 05:04:16]  Iteration: 72 (32 solution, 39 counterexamples)
[12/09 05:04:50]  Generator returned sat in 31.908519 secs.
[12/09 05:04:50]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:04:57]  Verifer returned unsat in 6.139703 secs.
[12/09 05:05:45]  Verifer returned unsat in 47.830949 secs.
[12/09 05:05:45]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 3/2c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:05:45]  --------------------------------------------------------------------------------
[12/09 05:05:45]  Iteration: 73 (33 solution, 39 counterexamples)
[12/09 05:06:19]  Generator returned sat in 31.773854 secs.
[12/09 05:06:19]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:06:25]  Verifer returned unsat in 5.423726 secs.
[12/09 05:07:18]  Verifer returned unsat in 53.031856 secs.
[12/09 05:07:18]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -2c_f[n][t-2] + 2S_f[n][t-2] + 3/2S_f[n][t-3] + -1/2A_f[n][t-1] + -1A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:07:18]  --------------------------------------------------------------------------------
[12/09 05:07:18]  Iteration: 74 (34 solution, 39 counterexamples)
[12/09 05:28:19]  Generator returned sat in 1258.536867 secs.
[12/09 05:28:19]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + 1S_f[n][t-2] + -1S_f[n][t-3] + -2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:28:25]  Verifer returned unsat in 5.509226 secs.
[12/09 05:29:36]  Verifer returned unsat in 70.620231 secs.
[12/09 05:29:36]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + 1S_f[n][t-2] + -1S_f[n][t-3] + -2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:29:36]  --------------------------------------------------------------------------------
[12/09 05:29:36]  Iteration: 75 (35 solution, 39 counterexamples)
[12/09 05:30:34]  Generator returned sat in 55.293602 secs.
[12/09 05:30:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + 1S_f[n][t-2] + -1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:30:38]  Verifer returned unsat in 4.393662 secs.
[12/09 05:31:22]  Verifer returned unsat in 43.601640 secs.
[12/09 05:31:22]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + 1S_f[n][t-2] + -1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:31:22]  --------------------------------------------------------------------------------
[12/09 05:31:22]  Iteration: 76 (36 solution, 39 counterexamples)
[12/09 05:32:09]  Generator returned sat in 44.560278 secs.
[12/09 05:32:10]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:32:13]  Verifer returned unsat in 3.225442 secs.
[12/09 05:33:39]  Verifer returned unsat in 86.296067 secs.
[12/09 05:33:39]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:33:39]  --------------------------------------------------------------------------------
[12/09 05:33:39]  Iteration: 77 (37 solution, 39 counterexamples)
[12/09 05:34:20]  Generator returned sat in 38.329755 secs.
[12/09 05:34:21]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1S_f[n][t-2] + -1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:34:26]  Verifer returned unsat in 5.080311 secs.
[12/09 05:36:23]  Verifer returned unsat in 116.835155 secs.
[12/09 05:36:23]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1S_f[n][t-2] + -1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:36:23]  --------------------------------------------------------------------------------
[12/09 05:36:23]  Iteration: 78 (38 solution, 39 counterexamples)
[12/09 05:37:07]  Generator returned sat in 41.864839 secs.
[12/09 05:37:08]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1S_f[n][t-2] + -1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:37:12]  Verifer returned unsat in 4.355215 secs.
[12/09 05:38:05]  Verifer returned unsat in 52.861587 secs.
[12/09 05:38:05]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1S_f[n][t-2] + -1S_f[n][t-3] + -3/2A_f[n][t-1] + -2A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:38:05]  --------------------------------------------------------------------------------
[12/09 05:38:05]  Iteration: 79 (39 solution, 39 counterexamples)
[12/09 05:39:28]  Generator returned sat in 79.663283 secs.
[12/09 05:39:28]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1S_f[n][t-2] + -1S_f[n][t-3] + -2A_f[n][t-1] + -2A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:39:32]  Verifer returned unsat in 4.031634 secs.
[12/09 05:40:24]  Verifer returned unsat in 51.834409 secs.
[12/09 05:40:24]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 1c_f[n][t-2] + 3/2c_f[n][t-3] + -3/2S_f[n][t-1] + -1S_f[n][t-2] + -1S_f[n][t-3] + -2A_f[n][t-1] + -2A_f[n][t-2] + 1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 05:40:24]  --------------------------------------------------------------------------------
[12/09 05:40:24]  Iteration: 80 (40 solution, 39 counterexamples)
[12/09 06:09:48]  Generator returned sat in 1761.077513 secs.
[12/09 06:09:48]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(3/2c_f[n][t-1] + -1/2c_f[n][t-2] + -1c_f[n][t-3] + -1/2S_f[n][t-1] + -1S_f[n][t-2] + 1S_f[n][t-3] + 2A_f[n][t-1] + -2A_f[n][t-2] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 06:09:50]  Improved number of small numbers from 76 to 114 out of a max of 114
[12/09 06:09:50]  Verifer returned sat in 1.783695 secs.
[12/09 06:09:50]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0         -16689.197266         -16789.579834       -16689.197266      8594.266602      8594.266602       -16789.579834          0.000000  100.382568
1         -16589.189453         -16689.579834       -16589.189453       200.390381       200.390381       -16689.579834          0.007568  100.382812
2         -16489.447266         -16589.579834       -16489.447266       200.125000       200.125000       -16589.579834          0.007568  100.125000
3         -16389.322266         -16489.579834       -16389.322266       200.250000       200.250000       -16489.579834          0.007568  100.250000
4         -16289.134766         -16389.579834       -16289.134766       200.437500       200.437500       -16389.579834          0.062256  100.382812
5         -16189.205078         -16289.579834       -16189.205078       200.312500       200.312500       -16289.579834          0.062256  100.312500
6         -16089.236328         -16189.579834       -16089.236328       200.281250       200.281250       -16189.579834          0.062256  100.281250
7         -15989.251953         -16089.579834       -15989.251953       200.265625       200.265625       -16089.579834          0.062256  100.265625
8         -15889.259766         -15989.579834       -15889.259766       200.257812       200.257812       -15989.579834          0.062256  100.257812
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=7/128, 
, fast_decrease=True, alpha=1/8, buf_size=12849/128.[0m
[12/09 06:10:04]  --------------------------------------------------------------------------------
[12/09 06:10:04]  Iteration: 81 (40 solution, 40 counterexamples)
[12/09 07:49:30]  Generator returned sat in 5962.950635 secs.
[12/09 07:49:30]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-3/2c_f[n][t-1] + -1c_f[n][t-2] + 1c_f[n][t-3] + -2S_f[n][t-1] + 1/2S_f[n][t-2] + 3/2S_f[n][t-3] + -1A_f[n][t-1] + 2A_f[n][t-2] + -1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + -3/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 07:49:31]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/09 07:49:31]  Verifer returned sat in 0.556701 secs.
[12/09 07:49:31]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t     queue_t
0         -17190.164551         -17290.542969       -17190.164551         0.000488         0.000488       -17290.542969          0.000000  100.378418
1         -16589.189453         -17190.542969       -16589.189453       701.353516       701.353516       -17190.542969        500.975098  100.378418
2         -16589.126465         -17090.542969       -16589.126465       100.441406       100.441406       -17090.542969        500.975098    0.441406
3         -16489.001465         -16990.542969       -16489.001465       100.566406       100.566406       -16990.542969        500.975098    0.566406
4         -16289.188965         -16890.542969       -16289.188965       200.378906       200.378906       -16890.542969        500.975586  100.378418
5         -16189.313477         -16790.542969       -16189.313477       200.253906       200.253906       -16790.542969        500.975586  100.253906
6         -16089.315430         -16690.542969       -16089.315430       200.251953       200.251953       -16690.542969        500.975586  100.251953
7         -15989.316406         -16590.542969       -15989.316406       200.250977       200.250977       -16590.542969        500.975586  100.250977
8         -15889.316895         -16490.542969       -15889.316895       200.250488       200.250488       -16490.542969        500.975586  100.250488
fefficient=True, bounded_queue=False, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=1, loss_amount=1/2048, 
, fast_decrease=True, alpha=1/8, buf_size=205575/2048.[0m
[12/09 07:49:44]  --------------------------------------------------------------------------------
[12/09 07:49:44]  Iteration: 82 (40 solution, 41 counterexamples)
[12/09 08:56:51]  Generator returned sat in 4024.565677 secs.
[12/09 08:56:52]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + 2c_f[n][t-2] + -2S_f[n][t-1] + 2S_f[n][t-2] + 1S_f[n][t-3] + -2A_f[n][t-1] + 3/2A_f[n][t-2] + -1/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 2c_f[n][t-1] + 0expr + 1(S_f[n][t-1]-S_f[n][t-3]) + 1/2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 08:57:04]  Verifer returned unsat in 12.026192 secs.
[12/09 09:00:43]  Improved gap from 0.0625 to 40.625
[12/09 09:00:46]  Improved number of small numbers from 79 to 92 out of a max of 134
[12/09 09:00:46]  Verifer returned sat in 222.493571 secs.
[12/09 09:00:46]  Counter example: 
[93m   adv__tot_arrival_t  adv__tot_service_t  adv__arrival_0,t  adv__cwnd_0,t  adv__rate_0,t  adv__service_0,t  adv__losts_0,t  adv__tot_service_choice_t  adv__wasted_t    queue_t  bottle_queue_t
0       267416.335205       267376.630643     267416.335205       0.007568       0.007568     267376.630643             0.0              267376.630643  -24076.884219  39.704562        0.015168
1       267457.945037       267416.320037     267457.945037      81.314394      81.314394     267416.320037             0.0              267416.312500  -24018.509219  41.625000        0.000000
2       267457.945037       267457.945037     267457.945037       1.007576       1.007576     267457.945037             0.0              267457.944824  -23960.134277   0.000000      -41.625059
3       267541.278370       267499.577613     267541.278370      83.333333      83.333333     267499.577613             0.0              267499.577613  -23901.842552  41.700758        0.000000
4       267582.880643       267541.285946     267582.880643      83.303030      83.303030     267541.285946             0.0              267541.285946  -23843.475098  41.594697       -0.030273
5       267624.596552       267582.918522     267624.596552      83.310606      83.310606     267582.918522             0.0              267582.918522  -23785.160889  41.678030       -0.000155
6       267666.236703       267624.604128     267666.236703      83.318182      83.318182     267624.604128             0.0              267624.604128  -23726.801025  41.632576       -0.000140
7       267707.929885       267666.259431     267707.929885      83.325758      83.325758     267666.259431             0.0              267666.259431  -23668.494141  41.670455       -0.000073
8       267749.592764       267707.937256     267749.592764      83.333333      83.333333     267707.937256             0.0              267707.937256  -23610.156982  41.655508       -0.000036
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=True, ramp_up_queue=False, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=1/132, buf_size=63/4096.[0m
[12/09 09:01:00]  --------------------------------------------------------------------------------
[12/09 09:01:00]  Iteration: 83 (40 solution, 42 counterexamples)
[12/09 11:52:54]  Generator returned sat in 10311.427682 secs.
[12/09 11:52:55]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(-2c_f[n][t-1] + -2c_f[n][t-2] + -2c_f[n][t-3] + 3/2S_f[n][t-1] + -1S_f[n][t-2] + 1S_f[n][t-3] + -2A_f[n][t-1] + -3/2A_f[n][t-2] + -2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 11:53:03]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/09 11:53:03]  Verifer returned sat in 7.744732 secs.
[12/09 11:53:03]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t    queue_t
0           -245.822917           -245.885417         -245.822917       408.260417       408.260417         -245.885417           0.00000   0.062500
1           -245.822917           -245.822917         -245.822917         0.031250         0.031250         -245.822917           0.00000   0.000000
2           -179.177083           -179.177083         -179.177083        66.645833        66.645833         -179.177083           0.00000   0.000000
3           -112.500000           -112.500000         -112.500000        66.677083        66.677083         -112.500000           0.00000   0.000000
4            -12.500000            -12.500000          -12.500000       100.000000       100.000000          -12.500000           0.00000   0.000000
5            120.838542             87.500000          120.838542       133.338542       133.338542           87.500000           0.15625  33.182292
6            220.932292            187.500000          220.932292       133.276042       133.276042          187.500000           0.25000  33.182292
7            320.963542            287.500000          320.963542       133.213542       133.213542          287.500000           0.28125  33.182292
8            420.932292            387.500000          420.932292       133.151042       133.151042          387.500000           0.28125  33.151042
fefficient=True, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=False, loss_count=3, loss_amount=9/32, 
, fast_decrease=True, alpha=1/16, buf_size=6371/192.[0m
[12/09 11:53:16]  --------------------------------------------------------------------------------
[12/09 11:53:16]  Iteration: 84 (40 solution, 43 counterexamples)
[12/09 16:03:05]  Generator returned sat in 14986.542241 secs.
[12/09 16:03:06]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(2c_f[n][t-1] + 2c_f[n][t-2] + 1/2c_f[n][t-3] + -1/2S_f[n][t-1] + -1/2S_f[n][t-2] + -1/2S_f[n][t-3] + -2A_f[n][t-1] + -2A_f[n][t-2] + -3/2A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 0expr + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 2alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 16:03:09]  Improved number of small numbers from 114 to 114 out of a max of 114
[12/09 16:03:09]  Verifer returned sat in 2.993485 secs.
[12/09 16:03:09]  Counter example: 
[93m   ideal__tot_arrival_t  ideal__tot_service_t  ideal__arrival_0,t  ideal__cwnd_0,t  ideal__rate_0,t  ideal__service_0,t  ideal__losts_0,t  queue_t
0           -364.250000           -364.375000         -364.250000       408.260417       408.260417         -364.375000             0.000    0.125
1           -264.000000           -264.375000         -264.000000       100.375000       100.375000         -264.375000             0.125    0.250
2           -264.000000           -264.125000         -264.000000         0.125000         0.125000         -264.125000             0.125    0.000
3           -213.625000           -213.750000         -213.625000        50.375000        50.375000         -213.750000             0.125    0.000
4           -188.062500           -188.187500         -188.062500        25.562500        25.562500         -188.187500             0.125    0.000
5           -149.843750           -149.968750         -149.843750        38.218750        38.218750         -149.968750             0.125    0.000
6           -117.703125           -117.828125         -117.703125        32.140625        32.140625         -117.828125             0.125    0.000
7            -82.273438            -82.398438          -82.273438        35.429688        35.429688          -82.398438             0.125    0.000
8            -48.238281            -48.363281          -48.238281        34.035156        34.035156          -48.363281             0.125    0.000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=True, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=0, loss_amount=0, 
, fast_decrease=True, alpha=1/8, buf_size=1/4.[0m
[12/09 16:03:23]  --------------------------------------------------------------------------------
[12/09 16:03:23]  Iteration: 85 (40 solution, 44 counterexamples)
[12/09 17:55:26]  Generator returned sat in 6720.096977 secs.
[12/09 17:55:26]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1c_f[n][t-1] + 3/2c_f[n][t-2] + 1c_f[n][t-3] + 2S_f[n][t-1] + 1S_f[n][t-2] + 1S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + 1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 17:55:31]  Verifer returned unsat in 4.963078 secs.
[12/09 17:56:47]  Verifer returned unsat in 75.623311 secs.
[12/09 17:56:47]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	expr = min(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1alpha,
	           1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	expr = 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-3]) + 1alpha

if(1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-3]) + -1expr + 0Indicator(Ld_f[n][t] > Ld_f[n][t-1]) > 0)
	c_f[n][t] = max(alpha, 0c_f[n][t-1] + 1expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 0alpha)
elif(1c_f[n][t-1] + 3/2c_f[n][t-2] + 1c_f[n][t-3] + 2S_f[n][t-1] + 1S_f[n][t-2] + 1S_f[n][t-3] + 1A_f[n][t-1] + 1A_f[n][t-2] + 1A_f[n][t-3] > 0):
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
else:
	c_f[n][t] = max(alpha, 1c_f[n][t-1] + 0expr + 0(S_f[n][t-1]-S_f[n][t-3]) + 1alpha)
[0m
[12/09 17:56:47]  --------------------------------------------------------------------------------
[12/09 17:56:47]  Iteration: 86 (41 solution, 44 counterexamples)
