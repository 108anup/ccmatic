[10/25 12:01:29]  --------------------------------------------------------------------------------
[10/25 12:01:29]  Iteration: 1 (0 solution, 0 counterexamples)
[10/25 12:01:29]  Generator returned sat in 0.004539 secs.
[10/25 12:01:29]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 2c_f[n][t-1] + 2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)
else:
	target_cwnd = max(0.01+alpha, 2c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:30]  Improved number of small numbers from 89 to 89 out of a max of 89
[10/25 12:01:30]  Verifer returned sat in 0.265191 secs.
[10/25 12:01:30]  Counter example: 
[93m   tot_arrival_t  tot_service_t  arrival_0,t  cwnd_0,t  rate_0,t  service_0,t  losts_0,t  queue_t
0      -500.5000      -500.5625    -500.5000    0.0625    0.0625    -500.5625     0.0000   0.0625
1      -500.5000      -500.5000    -500.5000    0.0625    0.0625    -500.5000     0.0000   0.0000
2      -400.4375      -400.5000    -400.4375  100.0625  100.0625    -400.5000     0.0000   0.0625
3      -300.3750      -300.5000    -300.3750  100.1250  100.1250    -300.5000     0.0000   0.1250
4      -200.3125      -200.5000    -200.3125  100.1875  100.1875    -200.5000     0.0625   0.1250
5      -100.1875      -100.5000    -100.1875  100.2500  100.2500    -100.5000     0.1875   0.1250
6         0.0000        -0.5000       0.0000  100.3125  100.3125      -0.5000     0.3750   0.1250
7       100.2500        99.5000     100.2500  100.3750  100.3750      99.5000     0.6250   0.1250
8       200.5625       199.5000     200.5625  100.4375  100.4375     199.5000     0.9375   0.1250
fefficient=True, bounded_queue=True, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=7/8, 
, buffer=1/8, alpha=1/16.[0m
[10/25 12:01:30]  --------------------------------------------------------------------------------
[10/25 12:01:30]  Iteration: 2 (0 solution, 1 counterexamples)
[10/25 12:01:30]  Generator returned sat in 0.027382 secs.
[10/25 12:01:30]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:30]  Verifer returned unsat in 0.269399 secs.
[10/25 12:01:30]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:30]  --------------------------------------------------------------------------------
[10/25 12:01:30]  Iteration: 3 (1 solution, 1 counterexamples)
[10/25 12:01:30]  Generator returned sat in 0.002466 secs.
[10/25 12:01:30]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:31]  Verifer returned unsat in 0.199072 secs.
[10/25 12:01:31]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:31]  --------------------------------------------------------------------------------
[10/25 12:01:31]  Iteration: 4 (2 solution, 1 counterexamples)
[10/25 12:01:31]  Generator returned sat in 0.036088 secs.
[10/25 12:01:31]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:31]  Verifer returned unsat in 0.169723 secs.
[10/25 12:01:31]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:31]  --------------------------------------------------------------------------------
[10/25 12:01:31]  Iteration: 5 (3 solution, 1 counterexamples)
[10/25 12:01:31]  Generator returned sat in 0.040746 secs.
[10/25 12:01:31]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 3/2c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + -1alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:31]  Improved number of small numbers from 53 to 89 out of a max of 89
[10/25 12:01:31]  Verifer returned sat in 0.174871 secs.
[10/25 12:01:31]  Counter example: 
[93m   tot_arrival_t  tot_service_t  arrival_0,t    cwnd_0,t    rate_0,t  service_0,t  losts_0,t     queue_t
0   -1600.403809   -1600.403809 -1600.403809    0.062256    0.062256 -1600.403809   0.000000    0.000000
1   -1100.388428   -1500.403809 -1100.388428  500.015381  500.015381 -1500.403809   0.007568  400.007812
2   -1100.388428   -1400.403809 -1100.388428    0.007812    0.007812 -1400.403809   0.007568  300.007812
3    -900.380615   -1300.403809  -900.380615  500.015625  500.015625 -1300.403809   0.015381  400.007812
4    -800.364990   -1200.403809  -800.364990  500.023438  500.023438 -1200.403809   0.031006  400.007812
5    -700.341553   -1100.403809  -700.341553  500.031250  500.031250 -1100.403809   0.054443  400.007812
6    -600.310303   -1000.403809  -600.310303  500.039062  500.039062 -1000.403809   0.085693  400.007812
7    -500.271240    -900.403809  -500.271240  500.046875  500.046875  -900.403809   0.124756  400.007812
8    -400.224365    -800.403809  -400.224365  500.054688  500.054688  -800.403809   0.171631  400.007812
fefficient=True, bounded_queue=False, bounded_loss_count=False, bounded_loss_amount=False, ramp_up_cwnd=True, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=False, ramp_down_queue=False, loss_count=5, loss_amount=9/64, 
, buffer=51201/128, alpha=1/128.[0m
[10/25 12:01:31]  --------------------------------------------------------------------------------
[10/25 12:01:31]  Iteration: 6 (3 solution, 2 counterexamples)
[10/25 12:01:32]  Generator returned sat in 0.164305 secs.
[10/25 12:01:32]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:32]  Improved number of small numbers from 67 to 89 out of a max of 89
[10/25 12:01:32]  Verifer returned sat in 0.229478 secs.
[10/25 12:01:32]  Counter example: 
[93m   tot_arrival_t  tot_service_t  arrival_0,t    cwnd_0,t    rate_0,t  service_0,t  losts_0,t     queue_t
0   -1500.394287   -1500.394531 -1500.394287    0.062256    0.062256 -1500.394531   0.000000    0.000244
1    -900.380859   -1400.394531  -900.380859  600.013672  600.013672 -1400.394531   0.001221  500.012451
2    -900.380859   -1300.394531  -900.380859    0.001465    0.001465 -1300.394531   0.001221  400.012451
3    -900.380859   -1200.394531  -900.380859    0.011230    0.011230 -1200.394531   0.001221  300.012451
4    -900.380859   -1100.394531  -900.380859    0.010010    0.010010 -1100.394531   0.001221  200.012451
5    -900.380859   -1000.394531  -900.380859    0.011230    0.011230 -1000.394531   0.001221  100.012451
6    -900.380859    -900.394531  -900.380859    0.010010    0.010010  -900.394531   0.001221    0.012451
7    -900.380859    -900.382080  -900.380859    0.011230    0.011230  -900.382080   0.001221    0.000000
8    -900.370850    -900.372070  -900.370850    0.010010    0.010010  -900.372070   0.001221    0.000000
fefficient=False, bounded_queue=True, bounded_loss_count=True, bounded_loss_amount=True, ramp_up_cwnd=False, ramp_down_cwnd=False, 
, ramp_up_bq=False, ramp_down_bq=False, ramp_up_queue=True, ramp_down_queue=True, loss_count=0, loss_amount=0, 
, buffer=2048051/4096, alpha=5/4096.[0m
[10/25 12:01:32]  --------------------------------------------------------------------------------
[10/25 12:01:32]  Iteration: 7 (3 solution, 3 counterexamples)
[10/25 12:01:32]  Generator returned sat in 0.130573 secs.
[10/25 12:01:32]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:33]  Verifer returned unsat in 0.160103 secs.
[10/25 12:01:33]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:33]  --------------------------------------------------------------------------------
[10/25 12:01:33]  Iteration: 8 (4 solution, 3 counterexamples)
[10/25 12:01:33]  Generator returned sat in 0.004893 secs.
[10/25 12:01:33]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:33]  Verifer returned unsat in 0.157781 secs.
[10/25 12:01:33]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:33]  --------------------------------------------------------------------------------
[10/25 12:01:33]  Iteration: 9 (5 solution, 3 counterexamples)
[10/25 12:01:33]  Generator returned sat in 0.006999 secs.
[10/25 12:01:33]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:33]  Verifer returned unsat in 0.179720 secs.
[10/25 12:01:33]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:33]  --------------------------------------------------------------------------------
[10/25 12:01:33]  Iteration: 10 (6 solution, 3 counterexamples)
[10/25 12:01:33]  Generator returned sat in 0.010955 secs.
[10/25 12:01:33]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:33]  Verifer returned unsat in 0.212952 secs.
[10/25 12:01:33]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:33]  --------------------------------------------------------------------------------
[10/25 12:01:33]  Iteration: 11 (7 solution, 3 counterexamples)
[10/25 12:01:33]  Generator returned sat in 0.004676 secs.
[10/25 12:01:33]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:34]  Verifer returned unsat in 0.222222 secs.
[10/25 12:01:34]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:34]  --------------------------------------------------------------------------------
[10/25 12:01:34]  Iteration: 12 (8 solution, 3 counterexamples)
[10/25 12:01:34]  Generator returned sat in 0.005003 secs.
[10/25 12:01:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:34]  Verifer returned unsat in 0.183671 secs.
[10/25 12:01:34]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:34]  --------------------------------------------------------------------------------
[10/25 12:01:34]  Iteration: 13 (9 solution, 3 counterexamples)
[10/25 12:01:34]  Generator returned sat in 0.006717 secs.
[10/25 12:01:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:34]  Verifer returned unsat in 0.178979 secs.
[10/25 12:01:34]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:34]  --------------------------------------------------------------------------------
[10/25 12:01:34]  Iteration: 14 (10 solution, 3 counterexamples)
[10/25 12:01:34]  Generator returned sat in 0.004657 secs.
[10/25 12:01:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:34]  Verifer returned unsat in 0.182494 secs.
[10/25 12:01:34]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:34]  --------------------------------------------------------------------------------
[10/25 12:01:34]  Iteration: 15 (11 solution, 3 counterexamples)
[10/25 12:01:34]  Generator returned sat in 0.005178 secs.
[10/25 12:01:34]  Candidate solution: 
[1m[94mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  Verifer returned unsat in 0.208493 secs.
[10/25 12:01:35]  Proved solution: 
[1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  --------------------------------------------------------------------------------
[10/25 12:01:35]  Iteration: 16 (12 solution, 3 counterexamples)
[10/25 12:01:35]  Generator returned unsat in 0.007853 secs.
[10/25 12:01:35]  [96mNo more solutions found[0m
[10/25 12:01:35]  Final solutions:
[10/25 12:01:35]  0: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  1: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  2: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  3: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  4: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + -1alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  5: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  6: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  7: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  8: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  9: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  10: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 1/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  11: [1m[92mif(Ld_f[n][t] > Ld_f[n][t-1]):
	target_cwnd = max(0.01+alpha, 1/2c_f[n][t-1] + 0(S_f[n][t-1]-S_f[n][t-4]) + 0alpha)
else:
	target_cwnd = max(0.01+alpha, 0c_f[n][t-1] + 3/2(S_f[n][t-1]-S_f[n][t-4]) + 1alpha)

if(c_f[n][t-1] < target_cwnd):
	c_f[n][t] = c_f[n][t-1] - alpha
else:
	c_f[n][t] = c_f[n][t-1] + alpha
[0m
[10/25 12:01:35]  Took 5.477983 secs.
